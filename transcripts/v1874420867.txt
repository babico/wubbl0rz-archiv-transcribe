Hallo, POG oder Nicht-POG ist die Frage, Chat.
Ich tendiere aktuell noch zu Nicht-POG, Not-POG.
Hat jemand schon Erfahrung mit einer Zahn-Zusatzversicherung sammeln können?
Nope. Bin immer noch am überlegen, ob ich mich nicht komplett privat versichern lasse, bis ich 40 bin.
Eigentlich ist das ja so das magische Alter, bis wohin es noch irgendwie Sinn macht.
Genug Kohle habe ich, aber ich muss mir dieses Jahr irgendwie überlegen, sonst ist es zu spät.
Magst du an's Trinken erinnern?
Ja, jetzt noch nicht, jetzt noch nicht, ging ja gerade erst los.
Manchmal, das habe ich jetzt die letzten Jahre schon öfters festgestellt, weil Boomer-Hirn und so,
ich rede mittlerweile öfters schneller als ich denke.
Das war was, das habe ich früher besser hinbekommen.
Da habe ich quasi genauso schnell gedacht wie geredet, aber heute rede ich schneller.
Das heißt, wenn ich manchmal Sätze mache, wo das letzte Wort nicht passt,
dann liegt das daran, dass ich das letzte Wort schon ausspreche, bevor mein Brain das letzte Wort prozesst hat.
Zoomstick, vermute ich, nee, nee.
Ich bin mir nicht ganz sicher, was das für Leetspeak ist.
Loomstick, danke schön für den Sub.
Oder Leomstick, Leomstick.
Aber dankeschön für den Prime-Sub, extrem, extremely excellent.
Glasfaser, wer verlegt sich schon Kupfer ins Hirn?
Was wird heute gemacht?
High-IQ-Leute produziert.
Siehste, hat schon geholfen.
Ich bin schon wieder IQ++.
Naja, so ein bisschen schon.
Ich merke das manchmal, dass wenn ich was sage und dann mit,
also gerade beim Streamen ist das doppelt kompliziert so.
Ich sage was, denke darüber nach, was ich jetzt quasi gleich sage,
und dann gucke ich so mit einem Auge auf den Chat und stelle fest,
ich kann nicht Chat lesen und verstehen und dabei sinnvolles Zeug erzählen
und noch irgendwas hier am Rechner machen.
Da fährt man einmal Bahn, Anschluss verpasst.
Ja, so ist das.
Ich kann dir aber auch sagen, wenn du öfters Bahn fährst, dann ist das auch so.
Es liegt nicht nur an dem Einmal-Bahn-Fahren.
Der Anteil von Sachen, die nicht pünktlich sind, ist da allgemein sehr hoch.
Deswegen hast du gute Chancen, dass wenn du öfters Bahn fährst,
du auch relativ oft Verspätung hast.
Muss mal kurz Betriebssystem-Update machen.
LeChark, POG-Subscription, Dankeschön.
33 Monate am Start, Alter.
Ihr seid schon welche hier.
Guck mal hier, wie lang ist der Loom-Stick am Start?
4 Monate.
Hey, guck mal, du hast fast den goldenen Kick schon.
Mach mal hier die ganzen Krempel wieder zu.
Ich muss mal kurz schauen, wie viele Pull-Requests, wie viele Issues habe ich offen?
Oh, 16, okay, Alter.
Ich muss da echt mal ran.
Ich habe mir schon Gedanken zugemacht, den Fiat Champ zu updaten.
Aber ich habe so aktuell kaum Motivation und Zeit und Bock.
Es wäre echt mal wieder Zeit.
Weil ich glaube, wenn ich meinen Home Assistant updatee,
dann habe ich auch Probleme, dass er nicht mehr richtig funktioniert.
Oh, der Scam-Train ist am Start.
Der ist heute instant am Start, der Scam-Train.
Erst mal die 4M-Rebooten, das hat Priorität.
Hype-Lul kann man gewinnen.
Hype-Lul, Hype-Cool.
Also Hype-Lul ist eigentlich ganz nice.
Aber der Rest ist so, naja.
Aber Hype-Lul ist tatsächlich ein ganz nices Emote.
Aber der Scam-Train, das ist wichtig, Leute.
Ihr müsst euch jubeln lassen.
Der muss demnächst mal wieder ins Weltall fliegen, glaube ich.
Wow, die Playlist ist unterschiedlich laut, das sackt.
Gute Frage, ich gucke mal, was meine Stonks machen.
Max, hast du eigentlich die Firma der SSD geupdatet?
Ja, habe ich, hat ohne Probleme funktioniert.
Ohne Probleme funktioniert.
Lass mich mal kurz gucken, was meine Stonks machen.
Meine Stonks können nicht richtig geladen werden gerade,
weil Scalable Probleme hat, wie es aussieht.
Was ist da los?
Sorry for the inconvenience.
Jetzt geht es, jetzt geht es, okay.
Also meine Stonks, naja, naja, naja.
Also, letzte Woche 294 Euro.
Das ist jetzt ja nicht die Welt.
Keine Gigastonks.
Es gibt übrigens neue WhitePaperHappys.
Wirklich? Echt? Wo? Was? Wie?
Zeig, zeigen, zeigen.
Also auf GitHub noch nicht.
Im Discord? Oder wo gibt es die?
Oder hast du mir geschickt?
E-Mails? Okay, Moment, Leute.
Neue WhitePaperHappys.
Jetzt bin ich mir nicht sicher, ob ich in der E-Mail eingeloggt bin.
Die müssen wir jetzt checken.
Wichtigste News des Tages.
Manche Messages auf YouTube sind schon sehr weird irgendwie.
So, zeigt mal her.
Neue WhitePaperHappys, also.
Oh, der ist gut, der ist gut.
Okay, ich zeige euch das Ganze mal.
Nudeln.
Geil, Alter.
Nudeln mit Lachse.
Okay, Leute, neue WhitePaperHappy-Backgrounds.
Ich präsentiere euch der IronChamp3000.
PumpChamp3000.
Und jetzt kommt das Beste.
Nudeln mit Lachs.
Das ist echt geil.
Nudeln mit Lachs-Champ.
Okay, runterladen. Download.
Nudeln mit Lachs sind halt Pog.
So, Repos.
Ich bin mir gar nicht sicher, wo habe ich das Ganze liegen hier?
WhitePaperHappy-Desktop-Background. Mal pullen, falls ich nicht hier das Aktuelle habe.
Doch, habe ich.
CP-Downloads.
Äh, Quatsch.
Hier. Downloads.
Äh, wie fängt das an?
Mit XPP.
Achso, jetzt haben wir mehrere.
Die sind alle Day, oder?
Wow.
What the?
Das ist es nicht.
Energy ist es auch nicht.
Energy ist es nicht.
Iron ist es.
Nudels ist es.
Das ist es auch nicht.
Sport ist es.
Ach nee.
Jetzt muss ich das Ganze noch verschieben.
Nach Images.
Ja, geht Status.
Dann könnt ihr euch gleich das Ganze pullen, falls irgendjemand Bock hat.
Und jetzt müssen wir, glaube ich, die Readme noch anpassen, wenn ich das richtig sehe.
Hier, Day.
Day.
Ah, guck mal, der kann das hier.
Da haben wir jetzt noch Nudels.
Und dann haben wir noch Iron.
Oder Ayen, sagen ja da die Engländer zu.
Sprechen das R ja nicht.
Äh, und Sport.
Nice.
Haben wir hier Preview?
Da ist es.
Nice.
Okay, Git, Status.
Git.
Git, Add.
Git, Commit.
Git, Push, Origin.
Boom.
Wenn wir jetzt auf GitHub gucken,
dann sollte es da schon eingetroffen sein.
Ja, Nudel mit Lachs, beste.
Hahaha.
Okay.
Der ist auch nice.
Aber ich weiß nicht, ob der,
ob der so wirklich in die normalen Desktop Hintergründe passt.
Was habe ich denn da jetzt angeklickt?
Bin ich denn hier jetzt rausgekommen?
Desktop Notifications, okay.
Los, los um Alpha.
Dankeschön für den Sub.
Der ist nicht schlecht.
Das ist, das ist richtig Kona-Style.
Hell, hell, hell yeah.
Weißt du, weißt du was noch übelst lustig wäre?
Falls das, falls das gescheit,
falls das gescheit aussieht.
Wenn hier unten rechts das Kona-Emote daneben sitzen würde
und die Flagge halten.
Ja, das ist ja auch die Logik, die da viele verfolgen.
So nach dem Motto,
was machst du denn, wenn du nachts von einem Einbrecher
in deinem Haus überrascht wirst?
Und der hat eine Pistole.
Dann brauchst du was besseres, als der hat.
Das ist Kona-Logik.
Eine russische Variante.
Probier, probier mal, ob du das noch hinkriegst,
dass der, dass der Kona die Flagge hält.
Dann push ich, dann push ich es rein.
Äh, konnte den letzten Stream nur kurz reinschauen.
Haben die Steckdosen was getaugt?
Also, die Steckdosen, die haben sich flashen lassen.
Wenn auch nur sehr widerwillig.
Aber ob die was taugen, bin ich unschlüssig.
Die sind sehr rudimentär.
Also die haben, also von den Features her.
Die kannst du remote ein- und ausschalten.
Der USB-Anschluss ist immer an.
Und irgendwie, ja, Leistung der angeschlossenen Geräte
messen geht damit auch nicht.
Also die sind feature-technisch schon an der untersten Stelle.
Auf der anderen Seite hab ich die bekommen,
9 Euro für 4 oder 10 Euro für 4 Stück.
Was natürlich unschlagbar günstig ist.
Aber die waren beim Flashen etwas, etwas widerspenstig.
Da musste ich Kabel anlöten und das war extrem klein.
Ich musste sogar zum ersten Mal eine dünnere Lötspitze
auf meinen Lötkolben machen.
Ich hätte einfach gedacht, macht es die Mode daneben und gut ist.
Hast du dich eigentlich auf deinen neuen Jobkurs vorbereitet?
Hab heute meinen Vertrag unterschrieben.
Am 1.10. geht's los.
Eigentlich nicht wirklich großartig.
Weil meine Bewerbung und die Skills
haben halt super zum neuen Job gepasst.
Ja doch, ich hab mir, und das habt ihr auch im Stream gesehen,
wir haben uns nochmal ein bisschen vertieft
wieder Kubanedes angeschaut.
Auch ein paar Sachen, die ich im Vorfeld noch nicht gemacht hab,
weil ich wusste ja nicht genau, was da auf mich zukommt.
Aber das, was wir hier im Stream gemacht haben,
ist viel advancer als das,
was wir mit Kubanedes auf der Arbeit machen.
Insofern nicht weiter wild.
Neuer Scam? Schon wieder? Was ist denn hier los?
Ja, Besos muss ins Weltall, ich seh's schon.
Anki, danke schön für den Sub.
Anki, du hast nicht zufällig
Path of Exile Guides geschrieben, oder?
Ach nee, der Typ von Path of Exile hieß Anki.
Jetzt hab ich's durcheinander gebracht.
Weil den ersten Charakter, den ich in Path of Exile erstellt hab,
war nach einem Guide von Anki.
Kann ich mich noch dran erinnern.
Aber ich dachte Anki, Anki, nee, Anki heißt er.
Anki, danke für den Sub.
Pork Subscription.
High IQ hier richtig auf dem Weg wieder.
Ich seh's schon, ich spür's schon, Chat.
Chat ist heute einfach komplett überlegen.
Der schlauste Chat auf Twitch.
Aber Achtung, Achtung.
Das verfällt mit der Zeit.
Das geht wieder runter.
Also es ist nicht so, dass man einmal subscribt
und dann immer High IQ.
Das wär ja auch zu einfach.
Eine Milliarde, danke schön, Pork Subscriptions, äh, Bits.
Ähm.
Was würdest du empfehlen, wenn ich Bock auf...
Guck mal, jetzt hier,
heute ist der Scam-Train mal richtig am, am
Pogjam.
Was würdest du mir empfehlen, wenn ich Bock auf
Linux-Server-Admin habe,
aber
mein Ausbildungsbetrieb eigentlich nur
Windows-Umgebung verwendet?
Bald sollen wir Linux-Admins kriegen
und ich könnte das passend mit der Ausbildung schaffen
für die Stelle. Ja, dann sag denen doch, Leute.
Ja, Moment mal.
Die wollen Linux-Admins kaufen,
obwohl die noch gar kein Linux haben.
Ich mein, ich will mich da nicht beschweren.
Das ist ja eigentlich streng genommen
keine schlechte Idee, dass wenn man
damit anfängt, dass man schon Experten dafür da hat,
aber trotzdem, meistens ist das ja so
ein etwas fließender Prozess.
Also ich würde, ich würde ganz klar sagen,
dass das was ist in die Richtung, du dich
weiterentwickeln willst, wie man das so schön immer nennt.
Und
normalerweise ist es ja auch so, dass neue Stellen
erstmal intern
geöffnet werden, oder kannst du gleich
sagen, ich bewerb mich da.
Ja, sprich
nichts dagegen.
Ich finde das gut, ganz ehrlich.
Ich persönlich hätte überhaupt keinen Bock auf
Windows-Admin-Geschiss, aber jeder soll
das machen, was er will. Darf ich dich mal
fragen, das interessiert mich wirklich
jetzt. Und Chat, falls jemand von euch in der
ähnlichen Situation ist, interessiert mich das von euch auch.
Was ist der Grund,
warum man als, sagen wir mal
Windows-Admin
doch lieber in die Linux-Richtung
möchte? Weil, umgedreht,
Linux-Admins, die
in die Windows-Richtung gehen, kenne ich nicht einen.
Deswegen interessiert
mich mal, was der ausschlaggebende
Grund ist. Kann ja alles sein, du musst
mir jetzt gar nicht sagen, weil ich Linux so viel geiler
finde, man, vielleicht ist es ja auch, weil du
denkst, es hat bessere Zukunft im Job
Markt, oder, keine Ahnung.
Würde mich aber einfach
mal interessieren, warum?
Darkblue, dankeschön für den Sub.
Holzklasse, ein Monat,
Dark-Subscription hier.
Es ist extrem.
Not meinem Chef, dass Linux die Zukunft
ist und die Kosten für Windows-Maschinen.
Ey, da muss ich sagen,
das ist ein guter Chef.
Der weiß, ich weiß nicht, ob er weiß,
ich wollte gerade sagen, der weiß, wovon er redet,
das weiß man natürlich nicht. Keine Ahnung, ob der
weiß, wovon er redet, aber zumindest
wenn er wüsste, wovon
er redet, dann würde ich ihm zustimmen.
Ja, gerade auf Servern.
Stain, dankeschön für den Sub.
Haben wir Dark zusammengespielt?
Vom Namen her kommt mir das bekannt vor.
Hatten wir mal ein paar ein bisschen
gelevelt? Ah ja, dann warst du das. Nice.
Hast du gesehen?
Es gibt im
Ende des Jahres
wo wir gerade dabei sind.
Ey, nicht Phoenix, Schwachsinn.
Es gibt eine
zweite Season auf Eden.
Sind die bescheuert? Die haben noch gar nichts dazu geschrieben.
Kacknoobs, Alter.
Sowas muss man doch schreiben.
Siehst du bei denen im Discord?
Es gibt
im Herbst eine neue Season
auf Eden. Also wenn du Bock hast,
wir sind wieder am Start.
Du willst ja wieder nur zerren.
Ich kann
kein krasses 8-Man-Zeug
mehr machen ohne die festen Leute.
Ich würde durchaus ganz gerne mal wieder
die ein oder anderen 8 vs.
8 Sachen spielen, aber
da haben wir einfach nicht die Leute für.
Da auch keine Achtergruppen.
Was das dumme ist, ganz ehrlich,
es gibt ja doch ein paar,
die gerne 8 vs. 8 spielen.
Das Problem ist nur,
dass das meiste irgendwelche
alten,
sich selbst viel zu wichtig nehmenden
elitären Spacken sind.
So wie ich früher auch in Dark gewesen bin.
Aber die sind anscheinend die letzten 20 Jahre
komplett hängen geblieben im Kopf. Ich weiß nicht,
was mit den Spielern los ist.
Aber Herbst geht's wieder los. Also wenn du Bock hast,
sag im Discord Bescheid.
Ich glaube, du hast mich ja noch in der Liste.
Sag Bescheid oder schreibe auf Twitter oder wo auch immer
und dann kannst du gleich mitleveln
von Anfang an, wenn du willst. Wir fangen ja dann wieder
mit so 5, 6 Leuten an.
EDV Forensik. Moin.
Das ist so ein richtig krasser
Oldschool Name, muss ich mal sagen.
EDV Forensik.
Das klingt so ein bisschen wie
zu Zeiten,
als man noch
Telefongespräche
in der Vermittlungsstelle gepatcht hat
und sowas.
Richtig schön Oldschool.
Didi Holz, danke schön für den Sub.
Leute, ich hab's gemerkt, ich muss öfter solche
Streamtitel machen. Heute in den ersten
5 Minuten direkt
10 Subs oder so.
Übrigens, Chat,
soll ich euch mal was Erfreuliches sagen?
Wollt ihr's hören, Chat?
Erfreuliche News?
Erfreuliche News?
Und zwar,
naja, wirklich für euch, weiß ich nicht, wie erfreulich
das ist.
Ich bin schwanger.
Ja, nicht alles verraten jetzt.
Nein.
Regelmäßig streamen lohnt sich.
Wer hätte das gedacht?
Was natürlich auch Motivation ist, weiter regelmäßig
zu streamen. Ich hab jetzt diesen
Monat tatsächlich
fast ohne
Ausnahmen jeden Tag, jeden zweiten
Tag gestreamt und ich hab
so viele Subs wie noch nie vorher.
Also es lohnt sich, anscheinend.
Dann kann ich die Mods bezahlen.
Ich bezahl meine Mods doch schon in
Exposure.
Ihr habt hier so ein cooles Ding
neben dem Namen. Reicht das
etwa nicht?
Wo wir grad beim Thema sind,
Mods nicht bezahlen und Leute nicht bezahlen.
Ich hab heute mit, ich hab mich doch
letztens bei euch im Chat mal ein bisschen
drüber ausgekotzt, was da
eSport-technisch im Hintergrund für
die Sachen laufen. Gerade so
auf deutscher und europäischer
Tier, Tier
1 und Tier 2 Ebene.
Ich hab heute ein Video aufgenommen
mit
einem Bekannten, der
bis vor ein paar Wochen
für eine europäische
eSport-Organisation, oder die letzte,
für drei europäische eSport-Organisationen
gearbeitet hat, die letzten paar Jahre.
Und da haben wir eine Stunde geschwätzt.
Das müssen wir noch ein bisschen schneiden.
Da sind echt haarsträubende Dinger dabei.
Von
Verträgen, an die sich nicht gehalten wird,
zu Überweisungen
in Kryptowährungen, die nie ankommen und so.
Das ist super shady Business.
Oder weißt du das?
Ja gut, wer sonst?
Aber Veterans ist nicht, also der Moritz
ist nicht der Einzige, von dem ich so
Sachen gehört habe. Ich mach,
ich mach das jetzt seit 13 Jahren auf YouTube
und ich hab das schon zu Call of Duty-Zeiten
wieder gehört, von Preisgeldern, die nicht
ausbezahlt wurden, von Spieler-Gehältern,
die nicht bezahlt wurden, von Sponsoring-Sachen,
die nicht eingehalten wurden.
Nee, nicht Gambling.
Also wirklich,
nicht eSport-Rahmen,
sondern wirklich Spieler-Verträge,
die Gehälter beinhalten,
die nie ausbezahlt wurden und so was.
Leute, die
auf Training-Camps in andere Länder
geschickt wurden und dort nichts
zu essen bekommen haben und so was.
Das ist ganz, ganz furchtbar abenteuerlich,
was da im Hintergrund läuft.
Natürlich reden wir hier nicht
von Weltklasse-
CS-GO-Teams,
die Millionen verdienen,
natürlich nicht. Wir reden hier
ein bisschen von kleineren Brötchen auf
deutscher und europäischer Ebene,
eSport-technisch. Aber nicht, dass du trotzt,
da läuft dann auch viel Shit im Hintergrund.
Soll früher schlimmer gewesen sein?
Ja, höchstwahrscheinlich schon.
Aber jetzt ist es mit System
schlimm.
Gerade, weil die das extrem ausnutzen,
wenn die Spieler aus osteuropäischen Ländern haben,
die dann von daheim wegziehen
und die man halt
easy in der Hand hat.
Vielleicht ist euch auch mal schon aufgefallen,
dass im eSport das öfters vorkommt,
als man denkt, weil manchmal,
wenn der Frust so groß ist, schreiben ja manche
Spieler auf Twitter
und dann wird das Ganze immer furchtbar schnell geregelt.
So nach dem Motto, oh, da wussten wir ja gar
nichts vor noch. Ja, jetzt ist alles wieder gut.
Obwohl die Spieler schon irgendwie
drei Jahre auf ihr Geld warten teilweise.
Naja. Müssen wir gucken, jetzt müssen wir schneiden
das Video und dann gibt's demnächst
mal ein, wir reden uns ein bisschen
über eSport-Bedingungen auf Video. Ich weiß,
dass das nicht mehr so richtig
in mein aktuelles
Channel,
ich wage es nicht mal Konzept zu nennen,
reinpasst, weil ich relativ wenig
Gaming und eSport-Content in letzter
Zeit mache, aber da muss man einfach mal was zu sagen.
Scheiß drauf, ob der Algorithmus das mag
oder nicht.
Also wir haben über eine Stunde aufgenommen, gecuttet ist
das Video wahrscheinlich. Wow, alter,
ist ja gut. Jetzt übertreibt
man nicht. MonkaS.
Da ist einer befördert worden. Kann das
sein, SgtSilver? Oder gab's
Gehaltserhöhung oder sowas?
Ähm, ja danke.
25 Subscriber.
Krasser Scheiß hier.
Jetzt bin ich Millionär.
Wer hat denn was gekriegt hier? Was soll
es sein? DerRedDoctor,
Spilunke, SoNice,
Imperial, GTK,
alter Battlefield-Veteran
hier am Start.
BelieveLukas, Worti auch wieder am Start.
DotProject, Max2Tan,
der ist auch schon lange am Start.
Winnie habe ich auch schon öfters hier gesehen.
DerCaptainPoggers hat ein Sub gewonnen.
Der hat's als Mod-Game natürlich verdient.
Enki.
Wie kannst du Enki
einen Sub giften? Der hat doch eben,
eben war es Anki, der
einen Sub
reingehauen hat. Jetzt ist es Enki,
der einen Sub gewonnen hat.
Mein Gott Leute, ihr überfordert mich mit den Namen.
DerEichler auch am Start.
DeathOperator, Xenoblade, Stufman,
Xaiti,
Rizino, SuperBusty,
Foidei,
Foidei, auch
wieder am Start. Der ist ja der Subbox-Camper.
Deluxe hier, Splixer
und DanielDigital88.
Dankeschön Leute.
Äh, oder was heißt, also nicht Leute,
SarchenSilver.
Da haben mich nicht alle gesubscribed, sondern nur einer hat
gegiftet. Und wer hat gedodged?
Wer hat gedodged? Jawoll.
Hier. Kann ich nicht aussprechen.
Hat gedodged.
BlackRipper hat gedodged. MindScore hat
gedodged. Killwalk, alle gedodged.
EasyDodged, FreshFrog, EasyDodged.
Ja.
Nice.
Jetzt habe ich ein bisschen
Fahnen verloren, aber nee, ich glaube mit dieser
E-Sports-Geschichte war ich jetzt ja durch.
Du-du-du-du-du.
Ah, stimmt.
Ich wollte mir noch ein Video angucken. Vielleicht können wir uns
das zusammen angucken. Hab ich gesehen.
Es gab halt ein neues Video.
Das ist neu
in Ja... Das ist übrigens Javascript.
Wer das nicht kennt. Aus irgendwelchen
Gründen
heißt Javascript ja nicht Javascript.
Also, der Javascript-Standard
heißt ja nicht Javascript, sondern
ECMAScript. Hat eigentlich irgendjemand eine Ahnung,
warum das nicht einfach
Javascript heißt, sondern ECMAScript?
Das ist Javascript.
Aber...
Ach, Moment. Ist der Standard für
Scripting-Languages including
Javascript, JScript,
ActionScript.
It is also best known
as Javascript-Standard. Ja,
genau. Ich meine, der Einfachheit
halber, warum nennt man das denn nicht einfach
Javascript-Standard?
Schon gesehen. Golo, bester Mann.
Ja, bei...
Ich gucke ja die Videos echt gerne von ihm,
gerade weil die immer sehr on point sind
und man weiß, wovon er spricht.
Bei Golo denke ich ja manchmal, er ist
ein Echsenmensch. Wisst ihr, warum?
Vielleicht sieht man das gleich in dem Video. Verschwörungstheorie.
Weil
ich glaube, der hat einen Teleprompter.
Kein Teleprompter nennt man den nicht.
So einen Monitor rechts neben sich stehen.
Und der guckt
manchmal so rechts auf den Monitor
und schießt dann die Augen zu.
Und da denke ich immer, Alter.
Keck Alu.
Echsenmensch enttarnt.
Das hört gar nicht mehr auf
zu bimmeln wegen den Subs, oder?
Das kommt nicht mehr hinterher.
Das hört überhaupt nicht mehr auf.
Guck mal hier, was du angerichtet hast.
Du hast schon selber...
Jetzt hast du die Queue
voll gemacht bei
Steamlabs oder was auch immer ich für die Subs verwende.
Ich weiß es gar nicht genau.
Jetzt hast du die AWS Rechnung oder
Firebase Rechnung von denen
in die Höhe getrieben.
Weil ich hab natürlich kein kostenpflichtiges Abo
bei Steamlabs.
Was ist deine Meinung zu Battle Bit Remastered?
Hast du das Video schon geguckt?
Oder warst du auch einer der,
die mich im Stream fragen,
was ist, weil es nicht in der Abo-Box
beziehungsweise im Feed gewesen ist?
Ich hab von vielen Leuten gehört,
explizit bei diesem Video,
dass es nicht im Feed drin war.
Also YouTube ist anscheinend der Meinung...
Juckt nicht.
War das bei dir auch nicht im Feed drin?
Oh, die Leute sind übelst böse,
weil ich gesagt hab, ich mag die Pixel.
Die Pixel-Grafik sieht mir teilweise zu platt aus.
Guck mal hier.
Die letzten paar Tage sind sie richtig, richtig...
Guck mal hier.
Dein Video ist einfach Müll.
Und man...
Jetzt geht's los, passt auf.
Dein Video ist einfach Müll.
Fuck, Leute.
Exposed.
Sondern 1999 oder so.
Auf gar keinen Fall 1984.
Das hört man ja schon an der Stimme.
Und deine Gründe sind auch so sinnlos,
wie ein Haus im Meer zu bauen.
Tja.
Exposed, würde ich sagen.
Aber ganz ehrlich?
Ich hätte keine Probleme, 1999 geboren zu sein.
1999 wäre extremely pog.
Dann wäre ich jetzt 24.
Das ist ungefähr das, glaube ich,
so in dem Dreh, wie ich mit YouTube angefangen habe,
vor 13 Jahren ungefähr.
Ah, nicht ganz. Fast.
Wäre ich dabei.
1999, easy.
Hauptsache vor 2000.
Weil alle nach 2000 sind...
äh...
dumm.
Aber unter 2000 beste.
True.
Und natürlich, wie das ist,
es gibt selbstverständlich keine Ausnahmen.
Alles so.
Das ist ultimativ so, wenn ich das sag.
Ja, okay.
Und dann hat er noch ein bisschen weiter geflamed.
Oh, guck mal hier.
Der Gbade-Punkt ist am Pannen.
Das ist verdammt noch mal keine Pixel-Grafik,
sondern Low-Poly-Grafik.
Ich bin mir nicht sicher,
ob ich das in dem Video oder in meinem letzten Battle-Bit-Video
exakt so genannt habe.
Ich glaube, im letzten Battle-Bit-Video
habe ich es Low-Polygon-Look genannt.
Und jetzt habe ich es, glaube ich,
Pixel-Look genannt.
Weil ich glaube, damit können einfach mehr Leute was anfangen.
Zumindest zu dem anderen.
Klar, seid ihr alle kritikfreudig.
Ihr kommt auch aus einer Ecke,
die einfach alles nur scheiße findet,
sobald es keinen Battlefield-Grafik hat.
Oder es sich wie Battlefield anhört
und ihr habt einfach keine Ahnung,
was ein gutes Spiel ausmacht.
Ich möchte noch mal festhalten,
dass ich wirklich bedingungsloser Battlefield-Fan bin.
Wie man...
Wie man auch ganz klar
erkennen kann,
wie man eindeutig
an diesem Video auch
sofort merkt,
der Absturz von Battlefield.
Ich bin einfach
bedingungskompletter Fanboy.
Leute, ich glaube, man sieht schon,
dass ich ab hier
jemanden gefunden habe,
der
Thumbnails für mich erstellt, oder?
So, ab hier so.
Wobei ich sagen muss,
so mies waren
die alten Thumbnails doch auch nicht
für selbst gemacht, oder?
Die gingen doch eigentlich schon ganz gut, klar.
Ja, es ist ein bisschen
advanceres WordArt.
Du findest Thumbnails overrated?
Ja, das sieht YouTube anders.
Ich hab nen Sub bekommen? Echt, wo?
Ja, hab ich doch alle schon.
Ja, keine Ahnung, was mit dem abgeht.
AI-Thumbnails.
Ja, ich finde, man erkennt das meistens,
wenn es AI-Thumbnails sind.
So, was wollte ich denn jetzt eigentlich
ursprünglich? Ich bin jetzt erstmal 30 Minuten
Sidetracked gewesen. Ich wollte euch doch noch
irgendwas erzählen ursprünglich.
Mit was hab ich denn angefangen?
Ich hab schon wieder alles vergessen.
Thumbnails siehst du eh nicht, du hast Clickbait Remover.
Ja, aber was steht denn in den Videotiteln
dann? Die Videotitel sind ja genauso
Clickbait wie Thumbnails.
ECMAScript. Stimmt, ja.
Da hab ich mich gerade drüber ausgelassen.
Ja, wie gesagt, warum
ist dieser Camp...
Warum ist dieser Camp
nicht einfach Javascript-Standard, sondern
ECMAScript? Okay, das gibt's
ja glaube ich auch erst seit 2013.
Okay, nein.
Aber die regelmäßigen
Sachen gibt's glaube ich erst seit
2003.
ES5, genau.
ES5 war 2013?
Oder?
Wann kam ES5 raus?
2009!
2009!
Nee, dann mein ich was anderes.
2009 ist ja schon
hyperaktuell.
Ja.
Aber ich finde halt bei sowas könnte man es einfach
Javascript nennen, weil die meisten Leute damit was
anfangen können.
Immerhin, eins muss man sagen,
Javascript ist durch die gute Arbeit
dieses Javascript-
Gremiums oder
Workgroup, ich weiß gar nicht was die genau
machen ehrlich gesagt.
Wahrscheinlich die großen Browser-Hersteller,
die großen gibt's ja, gibt ja nicht so viele,
die da den Ton
angeben, aber man sieht
an den Javascript-Standards,
dass man eine Sprache
innerhalb von
sagen wir mal
5 bis 10 Jahren
von echt abartig
zu
ist nett zu benutzen
umformen kann.
Beim C++-Standard sieht man,
wie man eine Sprache, die ursprünglich schon
abartig war, noch immer weiter abartiger
macht.
Doch Javascript ist mittlerweile wirklich gut zu
benutzen.
Javascript hat paar historische Sachen, die sind
fail, ja. Zum Beispiel gleich, gleich,
gleich oder
oder true, gleich,
gleich, true und solche Dinger. Ja, es gibt schon
Sachen, die sind sehr merkwürdig,
aber
insgesamt ist Javascript echt
eine Sprache, die kann man gut benutzen mittlerweile.
Also meiner Meinung nach
ich glaube,
die müssten das normale gleich, gleich,
obsolet machen, weil das die
unbekannte ist.
Also die undefinierte.
Also ich meine gut, die könnten das alte
rausschmeißen und das gleich, gleich, gleich
zu gleich, gleich machen und sowas.
Ich bashe nicht C,
ich bashe C++.
Gegen C sag ich nichts, aber C++ ist von
einer ekligen Sprache zu einer noch ekligeren
Sprache geworden mit den
älteren Standards, mit vereinzelt
guten Sachen drinnen.
Ja.
Ach, da fällt mir ein, ich wollte mit euch ja noch
ein anderes Video gucken.
Habe ich nämlich letztens angefangen zu schauen,
war ein Konferenztalk.
Den fand ich,
zumindest den Anfang fand ich,
nicht schlecht, das hier.
Aber das können wir jetzt nicht, das ist zu lang.
55 Minuten hier.
Programming's greatest
mistakes.
Da geht es zum Beispiel um
Sicherheitslücken,
CPU-Bugs,
Stonks,
Aktienfonds, die pleite gegangen sind,
weil sie sinnlose Sachen gekauft
haben, also AI,
AI-basiert sinnlose Sachen gekauft haben.
Und es geht
um den Medfile-Anfacker.
Bester Name überhaupt.
Wir gucken uns, wir gucken
uns jetzt an, was
der neue Javascript-Standard
hergibt.
Geöffnete Tab-Anzahl beim Troubleshooting.
Ich habe die Tab-Anzahl auch ohne
Troubleshooting geöffnet, weil
ich mir immer denke,
freier RAM ist verschenkter RAM. Ah!
Da geht noch was, da geht noch was.
Ich sollte, ich sollte noch ein paar Sachen starten
hier, noch ein paar VMs.
Was ist mit der hier? Das ist was für ein
Aufwachstream, das dauert 50 Minuten, dauert dann
drei Stunden, ja. Ja, das ist halt das
Ding. Wenn ich das jetzt gucke,
wenn wir das jetzt gucken,
wir gucken uns jetzt erstmal an, was
der neue Javascript-Standard
so hergibt.
Hattest du das noch mit der Steckdose
hinbekommen? Habe deine Antwort vorher nicht mitbekommen.
Ja,
habe ich. Aber ich würde die Steckdosen
trotzdem nicht empfehlen.
Habe ich hinbekommen. Hat funktioniert.
Wenn auch echt
eklig, weil man sehr kleine
Teile zusammenlöten musste, aber es hat
funktioniert. Also könnte man schon
sagen, ganz schön POG.
Ja, wahrscheinlich.
Ja, leider.
Leider. Ich weiß gar nicht, Leute.
Ich weiß gar nicht, wie ich meinen RAM vollbekommen soll.
Habt ihr Vorschläge? Wie kriege ich meinen RAM voll?
Okay, wir machen jetzt einen Plan. Max
sein RAM muss ausgelastet werden.
Was soll er machen?
Was ist die beste Variante, um RAM zu verbraten?
Lupen.
Lupen brauche ich nicht zwangsläufig. RAM-Benchmark.
Ah.
Die brauchen meistens nicht so viel auf Eimer.
POG.
Geht das
unter Windows überhaupt gescheit?
Wahrscheinlich muss ich einfach noch
5 VMs starten oder so.
Echt? Das ist eine Windows-Forkbomb? Wirklich?
Also die Bash-Forkbomb
verstehe ich ja, wie sie funktioniert.
Die Windows-Forkbomb check ich nicht.
Microsoft Teams starten. Das stimmt.
Da sind erstmal 5 GB weg.
Egal. Lass uns jetzt mal angucken, was es
Neues gibt.
Blender und Unity starten.
Übrigens, wisst ihr, das ist auch so ein Ding,
das ich nicht verstehe im Startmenü.
Ernsthaft. Dieser kleine Button
hier oben, ne?
Ist eigentlich mit
der wichtigste Button im ganzen Startmenü.
Aber der ist einfach so klein.
Und vor allem,
warum ist das so wenig benutzt?
Ach, egal. Ich darf mich nicht über Windows aufregen.
Wenn ich damit anfange,
dann
höre ich nicht auf. Das ist wie,
wenn ich mich über C++ aufrege.
Es gibt so 2 Sachen.
Wenn ich damit anfange, dann hört es nicht mehr auf.
Okay, also, let's go.
Was ist neu in Javascript
2000...
Javascript 2023.
10 Minuten Video.
Da wird es nicht allzu viel Neues geben.
Also eine Sache habe ich im Hinterkopf, die ist
neu. Und zwar
es gibt jetzt
oder war das schon im letzten
Standard?
Die neuen DateTime-Funktionen.
Waren die schon
im letzten Standard?
Erst 2022?
Ja.
Ich glaube, das ist das, was ich meine.
Oder
gibt es
das noch gar nicht?
Übrigens, das ist eine sehr gute Webseite.
Oh, das gibt es noch nirgendwo.
Aber Javascript hat doch
neue Sachen für DateTime bekommen
mittlerweile. Oder
bringe ich das durcheinander und das gab es noch gar nicht?
Na ja, anscheinend
gab es das noch nicht.
Was nimmt man
denn in
Javascript für ordentliche DateTime?
Ich kenne das hier. Das ist ganz
okay, das habe ich jetzt schon öfters mal benutzt.
Da kann man ganz gutes
DateTime-Handling mit machen.
Moment.js gab es früher noch,
das soll man ja aber irgendwie nicht mehr verwenden.
Wie macht ihr DateTime
Geschichten in Javascript?
So, dass es nicht kompletter
Clusterfuck und Painschamp ist.
Also mir
fällt spontan nur das da ein.
Skillkiller, danke
schön für den Sub.
18 Monate Hyper-Subscription.
Wie weit kommen wir
in dem Video ohne abzuschweifen?
Oh, das Javascript-Ding.
Das hat ja noch nicht mal angefangen und ich bin schon abgeschwiffen.
Also insofern,
schauen wir mal.
Spannend.
Okay, Leute.
Jetzt aber. Jetzt gucken wir das Video.
Also, was ist neu in Javascript
2023?
Erzählt uns
Golo von TheNativeWeb.
Vor knapp drei Wochen, nämlich am Dienstag
dem 27. Juni,
wurde die neue Version des Sprachstandards
von Javascript,
nämlich ECMAScript
2023 oder einfach kurz
ES2023 veröffentlicht.
Das Ganze ist zumindest
meiner persönlichen Meinung nach dieses Jahr ein bisschen
untergegangen. Zumindest habe ich
keine großen Schlagzeilen dazu mitbekommen.
Und das liegt sicherlich auch daran,
dass ES2023 keine
speziellen Features enthält, auf die
alle Entwicklerinnen und Entwickler händeringend
gewartet hätten. Ja, ich wüsste jetzt
auch nicht, was da wirklich dabei ist.
Wie gesagt, ich dachte, DateTime ist
dabei, aber DateTime ist
anscheinend gar nicht dabei.
Also insofern kein Plan, was da eigentlich dabei ist.
Ganz spannende Version,
denn es werden ein paar erste Schritte...
Du musst auch bald auf Windows 11 wechseln,
das ist eine sehr interessante Richtung unternommen.
Und welche das sind und was es in dieser
Version überhaupt alles Neues gibt,
das erfährst du in diesem Video. In diesem Sinne
hallo und herzlich willkommen
zu unserem neuen Developers Dictionary.
Vorne weg
von Javascript, beziehungsweise
wenn man es genau nimmt, von ECMAScript
kommt ja jedes Jahr im Juni
eine neue Version heraus.
Das wusste ich gar nicht, dass das jedes Jahr kommt.
...seit dem Jahr 2015 so.
Ehrlich gesagt,
ich hab das nie so genau verfolgt.
...vergangenen Sprachversionen jeweils so alles getan hat.
Dann gibt es dazu
zwei empfehlenswerte Videos.
Das eine ist ein großer Rundumschlag über
alle Features von ECMA... Habt ihr es gesehen?
Echsenmensch.
Habt ihr es gesehen? Ich hab es genau gesehen.
Guck mal her.
Pass mal auf. Guck, hier.
Revealed. Revealed.
Keck Alu.
...von ECMAScript 2016
bis einschließlich 2021.
Und dieses Video, das findest du
hier oben in der Infocard.
Ja, und das andere Video,
das war dann vor einem Jahr, das Update
zu ECMAScript 2022,
wo es dann quasi nur noch um die Neuerungen
dieser einen Version ging. Das heißt, wenn du dir
überhaupt erstmal einen generellen Überblick verschaffen
möchtest, dann fang mit dem gerade eben
verlinkten Video an. Und wenn du im Vorfeld
aber einfach nochmal die Features vom vergangenen
Jahr auffrischen möchtest... Ich hab keine Ahnung,
was, wie, wann in Javascript
dazugekommen ist. Aber trotzdem,
ich kann es nochmal betonen,
nach C-Sharp, das würde er hier
wahrscheinlich übrigens komplett anders sehen mittlerweile,
aber nach C-Sharp
ist Javascript tatsächlich meine zweite,
zweitbeliebteste
Sprache. Normalerweise
würde ich sagen Ruby,
aber Ruby ist dann leider komplett bedeutungslos
geworden die letzten Jahre über. Ich mag
die Sprache Ruby,
also die Programmiersprache,
mag ich wirklich.
Und ich würde auch gerne mehr in Ruby
machen, aber Rails ist halt
komplett durch. Niemand
macht mehr was in Ruby on Rails.
Ruby!
Chat, ehrlich,
habt ihr schon jemals was in
Ruby on Rails gemacht? Beziehungsweise
macht ihr noch was in
Ruby on Rails? Das benutzt
keiner mehr.
Weil GitHub...
GitHub hat natürlich viele Sterne,
weil das Projekt sehr... Ah, das hat auch
viele Sterne für das, wie lang
das schon so around ist.
Das ist
ein super Framework. Ich find das mega. Und
Ruby ist auch eine super Programmiersprache,
aber leider ist durch die...
Dadurch, dass Rails so ein bisschen zunehmend
in der Bedeutungslosigkeit verschwindet,
leider
ein bisschen
Ruby
auch dead.
53k!
53k ist für das,
dass es das seit, keine Ahnung, 20
Jahren oder so gibt.
Nicht viel. Das Problem
ist, dass es zu dem Zeitpunkt, wo GitHub
rauskam,
weil GitHub war ja ursprünglich auch in Ruby on Rails
programmiert. Ist vielleicht teilweise
immer noch ein bisschen. Aber selbst
zu dem Zeitpunkt,
paar Jahre später, war das schon
irgendwie ein bisschen auf dem absteigenden
Lasten.
Was hältst du von Kotlin in Verbindung mit Spring statt
Java? Ja, also ich würde Kotlin
immer Java vorziehen. Das sage ich aber
als jemand, der beides noch nicht großartig gemacht hat.
Aber Kotlin sieht mir viel viel
angenehmer aus als Java.
Warum sollten die Async
Await rausschmeißen? Das ist doch eines der besten Sachen
an JavaScript. Vor allem wie gut sie
das integriert haben. Also wie man
gegen Async Await was haben kann, verstehe ich
nicht. Ist doch beste.
Und
in JavaScript ist es auch viel viel einfacher
als in C Sharp zum Beispiel.
Weil in JavaScript hast du
nicht mehrere Threads, da musst du dir
überhaupt keine Gedanken zu machen.
In C Sharp ist
es immer so ein bisschen kompliziert,
weil es könnte,
auch wenn du was Await
hast, kannst du trotzdem Probleme bekommen
mit Multithreading, wenn du nicht aufpasst.
In JavaScript ist es ausgeschlossen.
Es gibt halt nicht mehrere Threads.
Async Await ist völlig unnötig.
Man kann stattdessen einfach Lightweight Threading...
Na, ich weiß nicht.
Ich finde das hat schon... Also erstens
in JavaScript kannst du es
eh schwierig machen, weil die gesamte
JavaScript Runtimes
das ja nicht vorsehen, dass du irgendwie
Threading machst. Ich bin mir noch nicht mal sicher, ob
Webworker richtige, echte Threads sind.
Also die ganzen Runtimes setzen
ja darauf auf, dass das eigentlich immer
alles nur ein Thread ist und
dann mit Eventloop, dass sich nichts in die Quere
kommen kann, weil sobald du Threads hast,
hast du auch die gleichen Probleme, die du
bei Multithreading programmieren hast,
dass du nämlich die oft, also relativ schnell
ins Bein schießen kannst.
Bei Async und Await hast du das nicht so
direkt. Gerade in JavaScript, in C-Sharp
hast du es immer noch, aber gerade in JavaScript
hast du es nicht, weil das alles Single-Threaded ist.
Ja und
ansonsten
hat es ja noch
andere Vorteile,
dass du beispielsweise Sachen im Hintergrund
machen kannst
und es trotzdem quasi vom
Flow her
logisch besser zu durchschauen ist,
was passiert.
Weil du eben nicht irgendwelche Callbacks
machen musst, Threads machen
musst und die du dann irgendwann joinst
und hast du nicht gesehen.
Also das kann ich noch
nachvollziehen,
aber dass man was gegen Async und Await hat,
ich finde das in C-Sharp auch sehr praktisch,
Async und Await und da kannst du
so viel Multithreading und Gedöns
machen, wie du willst.
Sogar ganz Low-Level mit minimalen
Wrappern um OS-Threads und sowas.
Sogar da finde ich es gut.
So, jetzt
gucken wir uns aber. Leute, wir haben es geschafft,
1 Minute 39 Video zu gucken, bevor ich
sidetracked wurde.
Genau, das eine ist tatsächlich Multithreading
und das andere ist quasi
Background
Callbacks besser zu handeln in
JavaScript. Glaubst du,
kann man das vielleicht zusammenfassen?
Dass du eher so einen Fluss hast von oben nach unten
in deiner Logik,
ohne 30.000 Callbacks.
Also ich finde, Async und Await
ist eigentlich eines der besten
Funktionen, die sie
in JavaScript hätte einbauen können.
Next.
... von 2022 springen und auch das
findest du natürlich hier oben in der
Infocard. Und last but not least,
wenn du mit JavaScript insgesamt
noch nicht so viel gemacht hast, dann findest du
auch eine passende Einführung als
Deep Dive auf unserem Kanal. Da gibt es dann
auch noch weiterführende Videos zu verschiedenen
Spezialthemen rund um
Feature 1.
Hashbang Grammar.
Ich weiß nicht mehr, was das sein soll.
Ah doch,
ich kann es mir vorstellen.
Mal gucken, ob das stimmt, was ich mir denke.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
Beispiel für, die erwähne ich einfach nur kurz. Spannender wird es dann bei dem dritten
und vor allem bei dem vierten Feature. In diesem Sinne, was ist Feature Nummer 1?
Feature Nummer 1 ist die sogenannte Hashbang Grammar. Ein Hashbang ist diese etwas seltsame
Zeile, die man manchmal am Anfang von Skripten findet, die angibt, mit welchem Interpreter
ein Skript auszuführen ist. Und die fängt üblich-
Und wie ist das bei C-Raute? Ist das da auch so? C-Lattenzaun?
...sicherweise mit einem Hash und einem Ausrufezeichen an. Und dann kommt so etwas wie z.B. User.bin.env.node,
um anzusehen- Ja, okay, dann ist das tatsächlich das, was ich hier meinte. Ja, guck.
Das, was auch in der Linux-Welt als Shebang bekannt ist. Also Shell, Shell, Bang.
...dass man das Skript mit Node ausführen will. Und das Schöne bzw. das Praktische an dieser Zeile ist,
dass man ein solches Skript dann direkt wie ein Binary aufrufen kann,
zumindest wenn das Executable-Flag gesetzt ist. Der Haken daran ist aber,
dass es sich dabei natürlich um keine gültige Javascript-Syntax handelt.
Denn genau genommen ist das ja kein Javascript-Code. Und dementsprechend
verlässt man sich bislang darauf, dass die Laufzeitumgebungen für Javascript das schon-
Okay. Ist das jetzt wirklich eine Neuerung? Ja, okay, es ist eine Neuerung.
Es ist jetzt standardisiert. Okay. Ja. Okay.
Hey, ich meine, das ist wieder ein weiteres Beispiel für,
dass das Javascript-Gremium sinnvolle Sachen macht im Vergleich zum C++-Gremium.
C++-Gremium hat jetzt irgendeine neue kryptische, was auch immer, Syntax eingeführt.
So, das wäre jetzt demnächst gültiges C++. Wobei, Leute, ich bin mir gar nicht mal sicher,
ob das nicht sogar gültiges C++ sein könnte, was ich hier hingeschrieben habe.
Okay. Raute. Äh, nicht Raute. Semikolon am Ende.
... irgendwie handhaben können. Ich spring mal vor.
So, was gibt es jetzt? Symbole für Weakmaps.
Feature Nummer zwei ist dann zumindest schon mal ein bisschen interessanter.
Wobei auch das meiner Meinung nach noch ein ziemlicher Spezialfall ist.
Und der dürfte bei dir vermutlich kaum für Jubel sorgen.
Denn dafür ist der Bedarf daran dann einfach doch zu selten oder zu gering.
Und zwar gibt es ja seit ECMAScript 2015 die sogenannten Weakmaps,
die so eine Art Dictionary...
Weakmap. Ich hätte mit Weakmaps gedacht, dass es irgendwas ist,
was mit Garbage Collection oder so zu tun hat.
Aber anscheinend nicht. Was ist es denn?
Weakmap, das kann doch keiner aussprechen überhaupt.
Is a collection of key-value pairs whose keys must be objects or non-registered symbols.
Äh, und wofür ist das jetzt gut?
Why? Weder Weed noch Weakmap actually uses ob...
Ja, ich weiß nicht, was es ist, ehrlich gesagt.
Extend objects from the outside without interfering with Garbage Collection.
Okay, dann hat das doch was mit Garbage Collection zu tun.
Hab ich mir doch gedacht. Bei dem Namen, das schreit einfach nach Garbage Collection.
Aber ich verstehe trotzdem den Sinn auch nicht so ganz.
Okay, was auch immer. Symbole für Weakmaps. Alles klar.
Was wiederum Key-Value-Paare enthalten kann.
Und bislang war es halt so, dass man als Schlüssel, also als Key,
für eine Weakmap ein Objekt verwenden musste.
Und jetzt, also mit ECMAScript 2023, kann man zusätzlich alternativ auch ein Symbol als Key verwenden.
Äh, Chat, weiß das jemand von euch?
Ist ein String in Javascript, ist es ein Objekt oder ein Symbol?
Oder nichts von beiden?
Das können wir ja mal ausprobieren.
Note?
Äh, ne, wie geht das? Type of?
Type of String?
Das ist Objekt.
So, okay, Weakmap.
Weak...
Weak...
Map...
Keckle gleich...
Was? New Weakmap? Oder wie ging das?
Keckle set...
Okay.
0w1
Value used as Weakmap key at... was?
Invalid value.
Ach, Key.
Also das geht damit nicht. Ich kann...
Ja.
Okay, String geht nicht. String geht anscheinend nicht.
Jetzt ist die Frage, ob jetzt Strings auch gehen?
War's schon mit Feature Nummer 2.
Wie gesagt, das dürfte ein ziemlich ausgefallener Spezialfall sein.
Okay, das muss ich noch fragen.
Is a String a Symbol?
Fragen wir mal Chat-GPT, ja?
Ist ein String ein Symbol in Javascript?
Anscheinend nicht.
What are the differences between a String and a Symbol in Javascript?
Okay.
Sequence of Characters... ja, ach.
Unique Immutable Data Type...
Was auch immer. Keine Ahnung, was das wieder für Javascript-Magic ist.
Ich wusste bis eben nicht mal, dass es das gibt.
Neue Array-Funktionen.
Nice.
Stimmt! Das hab ich sogar mal gelesen in irgendeinem Blog-Post.
Schon Google-Bart ausprobiert? Ne.
Das hab ich sogar mal gelesen in irgendeinem Blog-Post,
dass es jetzt irgendeine Array-At-Syntax gibt.
Ja, das ist neu.
Hier.
Oder relativ neu.
In welcher Specification ist das drinne?
Ey, das gibt schon ne Weile.
Das gibt schon lange.
Ist das erst 2022?
Ah, das war letztes Jahr drinne.
Deswegen kommt mir das bekannt vor.
Dann gibt es noch andere Javascript-Funktionen.
Array-Funktionen.
Dann konnte man ja mit Find vorgehen.
Das hat schlichtweg den ersten Wert zurückgegeben,
der auf das angegebene Kriterium gepasst hat.
Analog dazu gibt es auch noch Find-Index,
was nicht den Wert direkt, sondern naheliegenderweise
den Index des ersten Wertes zurückgegeben hat,
der eben auf das angegebene Kriterium gepasst hat.
Nun ist es aber halt manchmal durchaus so,
dass man nicht am ersten Wert,
bzw. an dessen Index interessiert ist,
sondern am letzten Wert im Array, auf das ein Kriterium zutrifft.
Ja, das ist einfach.
In Javascript-Logik drehst du das Array einfach um
und dann suchst du von vorne
und in Wirklichkeit suchst du deswegen dann von hinten.
Das macht man in Javascript so.
Ist kein Spaß.
Ich weiß nicht, warum, aber das machen Javascript-Leute so.
... eben wieder an dessen Index.
Und das war bisher eher mühsam,
wenn man diesen letzten Wert finden wollte.
Eine relativ gängige, allerdings sehr unschöne Möglichkeit war,
das Array zunächst mit Reverse umzukehren.
Siehst du, sogar er sagt das.
Das machen Leute in Javascript, ja?
Die drehen das um.
Natürlich könnte man auch irgendwie was bauen,
was Eigenes mit einer Schleife,
die von hinten nach vorne durchläuft und so.
Ich hab das total oft gesehen,
dass Reverse gemacht wird und dann Find.
Also total oft meine ich in GitHub-Projekten
und Beispielen und Blogposts und so.
Wo ich mir auch gedacht hab,
Alter, ihr dreht doch jetzt nicht das komplette Array um,
nur um es dann zu durchsuchen.
Oder Find-Index aufzurufen.
Das machen die damit, dass ich meinen RAM vollkriege.
Ah, verstehe.
Und das Array anschließend mit Reverse wieder in die Ursprünge.
Dann hat's wenigstens mal einen sinnvollen Grund,
Find-Folge zu bringen.
Das ist natürlich lästig, das ist umständlich,
das ist fehleranfällig.
Und zum Glück wird das nun deutlich einfacher.
Denn ECMAScript 2023
führt die beiden neuen Funktionen...
Dankeschön für den Sub!
eex000
Das klingt fast wie eine Adresse im RAM.
Allerdings ist...
Leider falsche Schreibweise, aber...
Hex. Porg.
Danke für den Sub!
Find-Last.
Find-Last-Index.
Seht ihr, Leute?
Da kann sich das C++ Gremium mal was Schönes dran abgucken.
Auch kleine Sachen,
wenn sie sinnvoll
integriert sind,
bringen die Sprache vorwärts.
Es muss nicht immer
50 neue Klammern sein
und neue Dinger, die keiner
außer einer auf der Welt braucht.
Okay, wenn es kein verleakt-Speak der Namen ist,
dann heißt du wahrscheinlich einfach Exo, oder?
Ja, das ist eine gute Idee.
Das finde ich schön, sowas einzubauen.
Ja, es ist praktisch, dass es da ist.
Sehe ich auch so. Sehr gut.
Das ist tatsächlich das Feature, dessen Relevanz ich für mit Abstand am höchsten und am wichtigsten halte.
Bevor ich dir erkläre, warum ich das so sehe, zeige ich dir aber erstmal, was das neue Feature überhaupt ist.
Und zwar geht es noch einmal um neue Funktionen für Arrays,
denn es gibt nun neben den klassischen Funktionen Reverse, Sort und Splice, auch die neuen Funktionen...
Ja, Moment. In C++ hätte es jetzt erstmal...
Passt mal auf. Soll ich euch mal die C...
Moment, Moment. Ich guck mal. Zeigt er uns ein Beispiel? Er zeigt uns ein Beispiel. Okay.
Also, also. Zeigt mal her.
Das sind die alten, das sind die neuen.
Wisst ihr, was C++ gemacht hätte?
C++ hätte nicht etwa eine ToReverse-Methode für Array hinzugefügt oder für List oder für Vector hinzugefügt,
sondern es gäbe... Wisst ihr, wie C++ das gemacht hätte?
Ich sag's euch. C++ hätte sowas gemacht.
Und noch irgendwelche komischen Lambda-Filter oder sowas hintendran.
Sowas. Sowas hätten die in C++ gemacht.
Passt mal auf. Mich würde nicht wundern, wenn es den Scheiß nicht sogar schon gibt.
Alter, C++, man.
Es ist so klar, dass es Standard-Reverse...
Ah, mein Kopf. C++-Gremium. Warum tut ihr uns das an?
Okay, seit welchem Standard gibt es das?
Das gibt es seit... seit C++ 98?
Oder gibt es noch Reverse-Copy, Arranges, Reverse?
Das ist so schrecklich, diese Sprache, Alter.
Was machen die denn?
Dann doch lieber Javascript.
...first toSorted und toSpliced.
Und diese Funktionen haben einen kleinen, aber feinen Unterschied im Vergleich zu...
Wenn man Hardware nachhauen lernen möchte, was würdest du am ehesten empfehlen?
C, C++ oder Rust?
Ganz ehrlich, das hängt von der Plattform ab.
Und so ziemlich am besten, mit dem man anfangen kann, ist tatsächlich in ESP32.
Dann bleibt dir ja eigentlich nichts an, dich anders darüber als Plattform-IO zu nehmen.
Und das ist halt mit Arduino-Libraries dann C++.
Du kannst es allerdings halt auch fast C-only machen.
Aber das Arduino-Zeug ist C++.
Das ESP...
Das ESP...
Also das hauseigene Espressif-ESP-Framework ist reines C ohne C++.
Aber...
Ich find's... Plattform-IO find ich persönlich angenehmer.
Du kannst ja auch ESP-EDF in Plattform-IO benutzen.
Ja.
Also in dem Fall, ja, C und C++.
Also gerade C++.
Auch wenn die Sprache scheiße ist und immer weiter ekliger gemacht wird,
für so Hardware-Geschichten würde ich sagen,
da ist halt mit Rust noch nix.
Auch wenn Rust theoretisch dafür ganz gut geeignet sein müsste,
findest du halt kaum reale, fertige Sachen, mit denen du das machen kannst.
Zumal man auch ehrlich gesagt sagen muss,
ich finde, dass Rust an der Stelle nicht unbedingt sinnvoll ist.
Der Vorteil von Rust ist,
ich nenne es jetzt mal kompromisslose Performance
mit zur Compiletime so sicher wie möglichen Memory oder Speicher...
Ne, das muss ich anders sagen.
Also kompromisslose Performance
mit so weit wie es geht sicherem Speicherhandling
ohne Garbage-Collection.
Das ist ja der große Vorteil von Rust.
Also du kannst dir bei Rust zur Compilezeit schon
relativ sicher sein,
dass du keine Speicherprobleme kriegen wirst.
Memory-Leaks kannst du in Rust auch fabrizieren.
Aber es ist schwierig,
so ungewollten Memory-Leaks zu fabrizieren.
Du kannst eine Liste machen, an der du unendlich viel anhängst.
Das geht in Rust auch.
Aber es ist schwieriger.
Du hast vor allem so Sachen wie Index-Out-of-Bounds und sowas,
das ist in Rust halt eine ganze Ecke schwieriger.
Geht aber natürlich auch.
Rust muss trotzdem manchmal Runtime-Checks machen.
Bestes Beispiel dafür ist,
du liest einen Index ein
und greifst damit direkt auf das Array zu.
Rust weiß ja zur Compilezeit nicht,
was für einen Index eingelesen wird.
Also dafür ist Rust gut.
Bei einem Microcontroller
kann das von Vorteil sein oder auch nicht.
Rust scheint halt in Security-kritischen Anwendungen
wie zum Beispiel ein CSS-Engine im Browser oder sowas
das kommt ja nicht von ungefähr von Mozilla.
Browser sind das Musterbeispiel schlechthin, finde ich, für Rust.
Und man sieht auch, dass es daherkommt,
weil Browser brauchen kompromisslose Performance
und zusätzlich so sicher, wie es geht.
Gerade Memory.
Dass du nicht aus der Sandbox ausbrechen kannst und solche Geschichten.
Also gerade dafür ist Rust gemacht.
Auf dem Microcontroller ist das gar nicht mal so wild, sag ich mal.
Also wenn du auf dem Microcontroller
dann halt mal auf den Speicherbereich zugreifst.
Also natürlich, wenn du Hardware professionell verteilen möchtest,
dann sollte das Ding nicht solche Bugs haben.
Aber wenn du da halt mal auf den Speicherbereich zugreifst,
auf den du nicht zugreifen sollst,
dann rebootet das Ding halt.
So what?
Davon leakst du nicht irgendwie zufälligerweise
deinen Festplatteninhalt ins Internet.
Ich hoffe, man versteht, was ich meine.
Also für solche Sachen ist tatsächlich C++ gar nicht so übel,
auch wenn es eine Kack-Sprache ist.
C Sharp in der Berufsschule war nicht gerade hilfreich.
C Sharp ist eine der besten Sprachen, die es gibt.
Super krass supported von Microsoft.
Mittlerweile relativ große Community.
Anzahl steigend.
Relativ gut zu lernen.
Relativ konsistent,
auch wenn sie die letzten Jahre über viele Sachen
da reingewurschelt haben,
die ein bisschen doppeldeutig sind,
aber relativ konsistent.
Relativ gut Libraries für alles mögliche
und geeignet für so ziemlich alles,
was du machen willst.
Webseiten, Backends, Desktop-Anwendungen
oder Windows-Desktop-Anwendungen.
Du kannst theoretisch Mobile-Anwendungen machen,
Command-Line-Tools damit machen.
Du kannst, wenn du so Sachen wie Blazor benutzt,
Web-Frontends damit machen.
Es ist eigentlich eine sehr universelle Sprache.
Jetzt, wo es Index-Last gibt,
steht der Sache ja auch nichts mehr im Weg.
Das ist das, was uns davon abgehalten hat.
Es gibt für den ESP ein paar Sachen.
Es gibt auch Micro-Python und sowas.
Ja, ich glaube, die Node-MCU-Dinger
hatten auch eine Möglichkeit,
da Lua drauflaufen zu lassen,
aber wirklich ernsthaft programmieren
kann man den ESP eigentlich nur mit C++.
Gerade, wenn man auf wirklich alle Features zugreifen will.
Und da kommt man nicht...
Für manche Sachen,
für den Ultra-Low-Power-Prozessor da drauf,
ich meine, ESP32 hat drei CPUs,
Ultra-Low-Power-CPUs,
ein Dual-Core-240-MHz-Extensor-Chip.
Da musst du sogar mit Assembler ran
für den Ultra-Low-Power.
Haben wir mal im Stream gemacht.
Ist ganz abartig.
ULP?
Da haben wir Assembler-Zeug.
Ich seh's gar nicht.
Wo ist es denn?
Oh, das verbotene Emote, da habt ihr es gesehen.
Hier, da.
iMove-E.
Ultra-Low-Power-CPU-Assembler-Stells.
Yep, Clock.
Ja, ich hab gesehen,
dass es mittlerweile Versuche gibt,
Rust auf dem ESP32 halbwegs lauffähig zu machen,
aber das letzte Mal,
als ich das gesehen hab,
war es noch weit davon entfernt,
so komplett zu sein,
wie beispielsweise das,
was du mit den Arduino-Libraries
oder den offiziellen Sachen bekommst.
Hast du eigentlich Tipps
für die mündliche Prüfung?
Puh.
Naja.
Kurz bisschen Musik anmachen.
Naja, Ahnung haben, wovon man redet.
Was hast du für ein Projekt gemacht?
Also, du solltest Ahnung haben,
wovon du sprichst.
Und wenn du was erwähnen willst,
wovon du keine Ahnung hast,
dann würde ich es vielleicht sein lassen.
Also, von dir aus ist die Frage nicht danach.
Kannst uns ja mal erzählen,
was du für ein Projekt gemacht hast.
Aber ansonsten,
du solltest die Präsentation
vorher ein paar Mal üben.
Tatsächlich.
Also, am besten auch,
wenn dir mal jemand zuhört.
Nicht nur, dass du ein Timing-Gefühl bekommst,
sondern, es hat riesen Vorteile,
dann geht dir das Ganze nämlich viel einfacher
von der Hand
und dir fallen die Sachen,
die du sagen willst,
automatisch wieder ein.
Weil du weißt, ah, jetzt kommt das,
jetzt muss ich das sagen, jetzt kommt das.
Und
dieses
sich selbst erinnern,
während man redet,
an das, was jetzt als nächstes kommt,
das geht nur, wenn man das 2-3 Mal gehalten hat.
Dann fällt dir nämlich ein,
wo ich das Ende vom Satz
ein bisschen länger aussprechen muss,
dass ich passend dazu die Folie umschalten kann
und sowas.
Deswegen, du musst das 2-3 Mal üben
im Vorfeld.
3 Mal üben reicht eigentlich,
aber es sollten auf jeden Fall
da auch mal
jemand dabei sitzen, der sich das Ganze anhört.
Und am besten ist,
wenn es nicht die Mutter oder die Freundin
oder irgendwie der Opa ist,
sondern irgendjemand, der ein bisschen Plan von der Materie hat.
Und wo man ein bisschen,
kann man sagen, so ein bisschen unter Druck steht,
weil man was Gescheites vorstellen will.
Ja, daheim ist es meistens
ziemlich wurscht, ob es was taugt,
was man erzählt oder nicht.
Die denken eh, alle immer, man ist der Wahnsinns-Checker,
obwohl man es vielleicht gar nicht ist.
Also, du musst ja auf jeden Fall
2-3 Mal, ich würde sagen, 3 Mal halten vorher.
Du musst es nicht übertreiben.
Manche Leute sagen, oh, nehm dich auf dabei
und sowas, finde ich komplett bescheuert.
Wichtig ist, einfach halten,
sodass man eben so an dieses,
ich erinnere mich jetzt selbst dadurch,
dass ich das ausspreche, was ich aussprechen muss,
an das, was als nächstes kommt.
Weil wenn du es 3 Mal gehalten hast, dann merkst du dir das.
Dann weißt du, ah, okay, jetzt kommt der Teil,
das heißt, als nächstes kommt das und das.
Ich muss jetzt das so und so sagen.
Ja.
Ich glaube, 15 Minuten hat man Zeit, gell? Oder wie ist das jetzt?
Da gab es doch Probleme mit.
Aber kann durchaus sein,
dass es läuft.
Wäre ja im Prinzip schon irgendwie gemacht dafür.
Ja, aber die
haben nicht die Standard-Library dabei.
Die kannst du ohne Standard-Library kompilieren.
Für Microcontroller.
Out-of-Band-Management
einführen bei einer unserer
Firma über Mobilfunkkonsolen.
Okay, krasses Zeug.
Ja, dann weißt du ja
bestimmt, wovon du redest.
Also das tatsächlich, ey, wenn du Bock hast,
wenn du sonst niemanden hast, ohne Scheiß,
wenn du sonst niemanden hast, es gibt bestimmt
Leute, die sich gerne
dazu bereit erklären,
mit dir in den Discord, in den Channel
sich zu hocken und
oder einen Call zu machen im Discord.
Da kannst du Screensharen und das präsentieren
und erzählen dabei. Wenn du
sonst jemanden hast, ja.
Gibt's bestimmt
Leute.
Normalerweise
würde ich auch sagen,
wenn du willst, können wir es hier im Stream
machen. Aber erstens
ist ja der
Druck vielleicht ein bisschen zu hoch
und das zweite Problem
ist, ich kann niemanden, den ich
nicht kenne, Screensharen
lassen in meinem Stream,
weil sonst macht's auf einmal
Yep.
Ihr wisst schon, ne?
Und außerdem wird die Präsentation geleakt.
Wobei ehrlich gesagt
von den Präsentationen-Leaks hätte ich weniger
Ihr wisst, was ich meine.
Weil sonst gibt's Leute, dann sieht man auf einmal
was im Stream. Das muss nicht sein.
Das ist gut. Wenn du die schon ein paar Mal
gehalten hast, dann bist du
wahrscheinlich recht gut vorbereitet.
Kommt natürlich auch ein bisschen drauf an, wie das Feedback war.
Wenn du die drei Mal gehalten hast, alle haben gesagt, Alter,
so einen Schrott hab ich noch nie gesehen vorher. Dann vielleicht
nicht. Aber da geh ich mal von aus, das wird nicht
der Fall gewesen sein.
Was die Zahlen bei CMod bedeuten? Okay, das könnte ich erklären.
Wie viel Strom der Raspberry Pi in einer Stunde
verbraucht? Was weiß ich?
Was braucht so ein Raspberry Pi
eigentlich? Drei Watt oder so? Drei, vier Watt?
Drei Wattstunden
oder so?
Irgendwie so. Weiß nicht, was braucht der Idol?
Dürfen die auch
in der Präsentation Fragen stellen oder alles erst danach?
In der Regel danach.
In der Regel
fragen die nach den Präsentationen.
Du kannst auf jeden Fall sagen
am Anfang deiner Präsentation
Fragen bitte im Anschluss.
Das kannst du sagen und dann machen die das
auch. Sag
Fragen bitte am Schluss.
Also, siehste?
Jetzt haben schon ein paar Leute Bock.
Kannst bei mir auf Discord kommen.
Die Modris hier, also die mit dem grünen
da, die sind auch sehr vertrauenswürdig
was sowas angeht. Die leaken auch nix.
Mach dir irgendeinen Call.
Am besten nicht gerade in einem Public Discord Channel
und dann wird das was.
Easy Abschlussprüfung, easy live.
Okay, siehste?
Wir haben das Video nicht fertig geschafft zu gucken.
Jetzt geht's weiter. Wo sind wir stehen geblieben?
Bei 2Spliced2.
Okay, wo waren wir jetzt?
Im Vergleich zu den herkömmlichen Varianten.
Bislang ist es nämlich so, dass
wenn man ein Array z.B. mit Reverse umkehrt
dann hat Reverse keine neue Kopie
dieses Arrays erzeugt, sondern
hat das vorhandene Array in place verändert.
Das heißt, man hat immer die
Originaldaten verändert.
Das ist in Javascript auch nicht so ganz konsistent.
Manche Sachen
ändern das Ursprungsarray
und manche
geben Kopien zurück. Das ist irgendwie nicht so ganz klar.
Oder nicht. Und das war mit Sort
und Splice eben genau dasselbe.
Auch der Aufruf dieser Funktionen hat
immer dazu geführt, dass das zugrunde
liegende Array in place verändert wurde.
Und das machen die neuen Funktionen
2Reversed, 2Sorted
und 2Spliced2 eben nicht.
Ja, das ist nice.
Das ist nice.
Gerade, wisst ihr wofür das richtig gut ist?
Wenn man z.B.
so eine Suche hat. Also, stellt euch
mal vor, ihr habt hier jetzt
irgendwie eine Suche auf der Seite.
Ihr habt hier unten eine Liste
mit ganz vielen Sachen und hier oben könnt ihr
die Kommentare filtern.
Wenn ich z.B. Stores eingebe, dann wird nur dieses Kommentar.
Und das habe ich ja meistens
wenn es was kurzes ist
so inline, so nach dem Motto hier
Array, Filter
Array, Filter
das und das.
Wobei ne, das ist jetzt auch schon
das ist jetzt auch
schon so
dass eine Kopie
gegeben wird.
Ja ne, dann ist es egal.
Dann macht es keinen Unterschied.
Ja, wenn ich, das ist natürlich die Frage
in dem Fall, wenn man es nicht weiß, heißt man aufgeschmissen.
Aber ich finde die Benahmung
eigentlich auch ganz gut,
weil Reverse, Sort, Splice
bezieht sich ja im Namen quasi
auf das Array selbst und
2Reversed heißt, es konvertiert
das Array zu einem
umgetretenen Array. Ich finde die Benahmung ist
im Rahmen der Möglichkeiten gut
gewählt. Also wieder was, was das
JavaScript-Gremium gut hinkriegt und das
C++-Gremium nicht.
Die lassen das Original
Array in Ruhe. Sie lassen es so wie es
ist und geben stattdessen eine
modifizierte Kopie zurück. Das heißt,
das ist endlich ein großer Schritt hin
zu Arrays, die man viel besser als
vorher als unveränderliche,
das heißt als Immutable Datenstrukturen
verwenden kann. Und insofern sind
Immutable Funktionen zwar vielleicht nicht das,
was man nun tagtäglich braucht,
aber wenn man sie braucht, dann sind
sie natürlich Gold wert.
Ach ja, und eine Sache noch.
Ich würde mich nicht selbst bewerben,
ich würde den gesamten Twitch-Chat bewerben
für das C++-Gremium.
Und unsere erste Amtshandlung
wird sein, wir lösen das
C++-Gremium auf und stellen die Sprache
ein.
So machen wir das. Das finde ich ist
eine gute Idee.
Und danach
machen wir mit dem USB-Gremium weiter.
Genau.
Das ist auch praktisch.
Ich muss sagen, die Javascript-
Leute, die denken
wirklich nach, bevor sie neue
Features reinbauen.
In C++ würde das Ding dann wieder
sonst sonst wo sein
und anders
funktionieren als man es erwartet.
Eben ein Index austauschen.
Wir entwickeln dann Rust++.
Gibt es doch jetzt schon.
Es gibt doch jetzt schon Craplang.
Craplang.
Crap?
Craplang, nicht Müll. Craplang
gibt es doch jetzt schon.
Und, und das ist der wichtige Punkt,
ein neues Array mit diesem ausgetauschten Wert
zurückgibt, statt einfach nur
das vorhandene Array zu verändern.
Das heißt auch die With-Funktion geht in die Richtung.
Das finde ich eine gute neue Funktionalität.
Kann man sich die Frage stellen, wann oder
wofür man das baut?
Ehrlich gesagt, ich glaube nicht daran,
dass Carbon das große Ding wird.
Wie sieht es da auf GitHub aus?
Ich glaube es nicht.
Was ist denn das hier?
Außerdem muss ich ehrlich sagen,
finde ich die Carbon-Syntax jetzt
auch nicht gerade angenehm.
Nee, das nicht, aber die dürften
hauptsächlich initial gewesen sein.
Also,
ich sehe es noch nicht,
dass mit Carbon irgendwas
das C++-Umfeld
revolutioniert.
Hat Carbon
standardmäßig einen Package-Manager?
Recent Activities?
Joa, das geht bestimmt immer noch ganz gut.
Es hält sich
in Grenzen, Leute. Guckt mal,
so viel tut sich da nicht.
Also, es ist...
Ja, okay, hier ist schon ein bisschen mehr.
Ja, Lukas, es
ist auch so. Es gibt halt so ein paar
Bereiche, da kommst du an C++ nicht drum herum.
Ja, zum Beispiel,
wenn ich meinen ESP-Microcontroller
programmieren will.
Die beste Programmierung ist DreamBeard.
Perfect Programming Language.
DreamBeard.
Moment, kompiliert das zu JavaScript?
Oh, Mann.
DreamBeard. Alles klar.
Ich bin mir
hier übrigens nicht sicher, Leute.
Ist das irgendeine Meme-
Sprache?
So ein bisschen esoterische
Programmier-Sprache? Oder ist das
ernst gemeint?
Ich würde sagen, das ist ein bisschen G-Bait.
Aber für ein bisschen G-Bait
ist es mir ein bisschen viel Doku und
ernsthafte Sachen.
Gibt es ein Mod, der IHK-Prüfer
ist? Nee, glaub ich hier nicht.
109% Coverage.
Es hat einfach nur ein Bild.
Und welche Vor- oder auch
welche Nachteile all diese neuen
Funktionen haben? Und ich würde sagen,
das ist so ein bisschen wie mit Immutable-Datentypen.
Generell, das ist immer dann sehr
praktisch, wenn man zum Beispiel
sehr effizient erkennen können möchte.
Was true kann, kann auch maybe sein.
Stand das da?
Also, ich hab mal
vor Jahren einen Blogpost gesehen
bei DailyWTF.
True, false, file not
found.
Ja, von 2005 ist das.
Da gab es einen Blogpost,
das ist wirklich aus einem
echten Projekt, der Code.
Da gab es hier einen Enum. Enum
Bool. True, false, file not
found. Das fand ich damals
so verstörend, dass ich mir das bis heute
gemerkt hab. Gibt es das eigentlich
noch? Wird das noch aktiv geschrieben?
Vor- oder auch welche Nachteile
all diese neuen Funktionen haben? Und ich würde
sagen, das ist so ein bisschen wie mit Immutable-Datentypen.
Generell, das ist immer
dann sehr praktisch, wenn man zum Beispiel
sehr effizient erkennen können
möchte, ob sich an einem komplexen
Datentyp, wie in diesem Fall
eben einem Array, etwas verändert
hat. Dann sind Immutable-Datentypen
eine feine Sache. Also gerade
React zum Beispiel dürfte davon profitieren.
Auf der anderen Seite ist es
Wie gut, dass ich kein React benutze.
natürlich so, dass dadurch, dass jedes
Mal das ganze Array kopiert werden
muss, die Immutable-Datenstrukturen
nicht unbedingt die schnellsten sind.
Und sie außerdem deutlich mehr
Speicher verbrauchen, weil eben
ständig neu kopiert werden muss. Das heißt,
hier muss man ein bisschen überlegen, was
wichtiger ist. Ich glaube, das ist ein typischer Fall von
wenn man es braucht, weiß man, dass man es braucht
und dann ist man froh, dass es da ist.
Die effiziente Erkennung von Änderungen
oder der Speicherbedarf und die generelle
Performance der Array-Zugriffe.
Und das gilt es halt von Fall zu Fall.
Was gibt es als nächstes?
Das war es. Tja, und das sind
die vier neuen Features von ECMAScript.
Okay, es hält sich wirklich gegen Grenzen,
was es im neuen JavaScript-Standard gibt.
2023. Aber immerhin
gut überlegte Sachen
drinne.
Immerhin gut überlegte Sachen drinne.
Was machen die ein Jahr lang?
Die haben sich wahrscheinlich ein Jahr lang drüber
gestritten, ob es
toReversed, sReversed
oder
reversing hieß.
Ihr wisst, über solche
Namensgebungen kann man sich vortrefflich
monatelang streiten.
Neues Fireship-Video.
Okay, hat er ein neues Fireship
YouTube-Video.
2CPA.
Was soll das sein?
It is July 17th, 2023
and you're watching the Code Report.
The Internet has a big problem.
When you look at an image, how do you know if it's real?
This image of the Pope... Vielleicht ist es auch NFT.
Pope tricked millions of grandmas
worldwide. When you hear someone's voice, how do you
know it's real? This is not my real voice.
It's a professional clone from 11 labs.
My biggest fear as a digital creator
is that tools like this will be used to fully
replicate my online swagger and make me
irrelevant. It's already happening to people, like
I legit thought that Greta launched her own oil
company recently. Hello, my name is Greta
and welcome to my oil company.
I love how it is pumped out of the ground.
I'm a huge fan of oil and use it all the time.
As you can see here in this documentary from Honey...
...that borrowed my deepfake animatron
to make it look like I'm not AI-generated.
Luckily though, there's a new coalition in town
that includes friendly megacorporations like
Adobe and Microsoft, who have stepped up to rescue
us from these generative AI problems that
they created. It's called the Coalition for
Content Provenance and Authenticity.
Not many people know about it yet, but it should be on every
developer's radar, because it could change the Internet
as we know it. Basically, it's a spec
or set of guidelines for both hardware and
software providers that would attach metadata
to every media file, like images,
videos, audio, and so on, then
use cryptography to digitally sign it,
making every file tamper-aware. The
idea is to make it impossible to change a pixel
without the provenance of those changes being recorded
on the file itself, or to a manifest
that is permanently attached to that file.
The first record will happen on the camera...
...where the photo is taken, then when you go to
edit it in Photoshop, another record will be
logged and signed there. It's almost like
every image will become an NFT, minus the
blockchain. You'll be able to click on this icon
to inspect the provenance information, to
determine if that image was generated...
...by AI, or determine
if it comes from a trusted news source like
BuzzFeed or InfoWars. This technology is
already here, and just last week, the Coalition
was urging the US Senate to put laws on
the books that would make this technology essential.
That actually sounds great.
As a creator, I don't want to be
impersonated, and as an end-user, I want to
make sure that I'm consuming authentic content.
And it would be very useful to companies like Valve,
who have recently started banning games on Steam
that are suspected of using AI-generated
content. That could potentially violate someone's
copyright. And other top companies like
Stability AI are fully on board.
And not surprisingly, the US Department of
Defense is on board, because they believe this
technology can help surface bad actors,
like Steven Seagal, or anyone else creating
horrible synthetic content. Sounds pretty
awesome, and I love when big corporations team
up with the government to keep me safe. But when
looked at from another angle, this could be viewed
as a mass surveillance apparatus. In the
future, it may be impossible to change a pixel
on the internet without leaving a digital footprint.
Currently, the spec allows for anonymity,
but it talks about how this technology could be
used with digital IDs issued by the
government, that would make it far easier to figure
out who's creating all these memes that are offensive
to our dear leaders. When this technology is
combined with a digital currency and social
credit system, we could easily shut down the
Team Warrior's internet access, and reduce their
allowance of lab-grown meat to just 12 ounces
per week. In addition, it would give the establishment
a monopoly on disinformation.
Hypothetically, they could create all the AI-generated
content they want, while making it look trustworthy.
And the vast majority of people out there
will believe whatever authorities tell them. Like if
this image had a NASA provenance signature on it,
almost everybody would believe that we went to Mars,
even though it's not a real place you can go to.
In 1981,
almost everybody would believe that we went to Mars,
even though it's not a real place you can go to.
In 1981, the CIA director said,
we'll know our disinformation program is complete
when everything the American public believes
is false. This has been the Code Report,
thanks for watching, and I will see you in the next one.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

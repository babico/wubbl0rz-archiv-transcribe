WEBVTT

01:03.220 --> 02:08.460
Hallo, warum nicht früher?

02:08.920 --> 02:10.680
Das ist die genauere Frage, wie warum nicht später.

02:16.060 --> 02:17.740
Wahrscheinlich sind die meisten gerade auf dem Heimweg.

02:24.130 --> 02:25.450
Ich kann dir sagen, warum nicht früher.

02:26.150 --> 02:27.510
Weil ich früher keinen Bock hatte.

02:33.400 --> 02:35.140
Kannst du mal mitbekommen, kannst du mal noch ins Wort gucken.

02:36.600 --> 02:39.560
Ansonsten gibt es ja noch mehr.

02:41.380 --> 02:47.150
Oh Mann, mir tut das Bein weh, Leute.

02:49.090 --> 02:50.230
Was es heute zum Mittagessen gab?

02:53.640 --> 02:54.880
Nudeln mit Lachs?

02:55.480 --> 02:57.400
Ne, es gab keinen Nudeln mit Lachs.

02:58.560 --> 03:03.760
Es gab, oh ja, ja, Leute, furchtbar gesund, furchtbar gesund gab es heute zum Mittagessen.

03:05.880 --> 03:07.500
Mozzarella Sticks und Pommes Frites.

03:09.120 --> 03:16.160
Highly, highly, äh, Bio Pommes Frites und Mozzarella Sticks.

03:16.300 --> 03:23.840
Aber kurz die VM an- und Updater mal.

03:25.020 --> 03:28.660
Ja, furchtbar gesund, ultra gesund, hyper gesund.

03:28.980 --> 03:30.280
Es reicht ultra gesund, reicht nicht mehr.

03:30.320 --> 03:32.020
Hyper gesundes Mittagessen gab es heute.

03:34.460 --> 03:39.120
Wisst ihr, meine VMs sind so dämlich benannt, dass ich meistens auf den ersten Blick nicht weiß, welche ich benutzen muss.

03:39.520 --> 03:41.760
Muss ich Poggers benutzen oder muss ich Stream benutzen?

03:41.800 --> 03:45.060
Nein, ich muss Stream benutzen, weil Poggers ist die alte Stream-VM.

03:45.300 --> 03:46.320
Warum habe ich die überhaupt noch?

03:46.880 --> 03:49.200
Wahrscheinlich zum Zeug nachgucken, falls ich mal was brauche.

03:49.940 --> 03:50.500
Ahem.

03:52.770 --> 03:53.950
Spaghetti mit Lachs.

03:54.570 --> 03:54.990
Ne, ne, ne.

03:56.390 --> 03:59.250
Mal gucken, ob es das passende Hintergrundbild heute gibt.

04:01.760 --> 04:04.600
Gucken, was für ein random Hintergrundbild ausgewählt wird heute.

04:16.960 --> 04:18.660
Moment, Moment, das hat er noch nicht geupdatet.

04:19.100 --> 04:21.660
Ich muss erstmal Package-Updates machen und dann rebooten.

04:21.720 --> 04:23.660
Dann mal gucken, was für ein random Bild ich bekomme.

04:25.240 --> 04:26.360
Ich schreibe am 28.

04:26.660 --> 04:28.020
Ach, ist es mal wieder soweit, ja.

04:30.240 --> 04:32.480
Meine erste AP1.

04:32.480 --> 04:37.370
Ach ja, ich dachte, ich dachte, das ist...

04:37.650 --> 04:42.480
Eher sowas wie Zwischenprüfung im Februar.

04:43.900 --> 04:44.120
Naja.

04:45.780 --> 04:47.240
Immer so zwei bis drei.

04:49.620 --> 04:51.780
Ah, ne, habe in den Probe-Prüfe immer so zwei bis drei.

04:52.240 --> 04:56.020
Und habe mich mit so einem Vorbereitungskurs und ein Vorbereitung durch...

04:57.100 --> 04:59.020
Und ein Vorbereitung-Buch vorbereitet.

04:59.980 --> 05:01.060
Meinst du, das reicht aus?

05:04.070 --> 05:04.310
Ja.

05:05.690 --> 05:07.490
Wenn du immer ganz gut durchkommst.

05:07.490 --> 05:09.090
Ich würde dir allerdings empfehlen,

05:09.290 --> 05:10.490
trotzdem noch ein paar Probe-Prüfungen...

05:11.170 --> 05:13.170
zu machen, weil...

05:13.170 --> 05:14.870
in der Probe-Prüfung ist es immer einfacher,

05:14.990 --> 05:16.510
als wenn man dann echt vor Ort da sitzt.

05:16.650 --> 05:19.150
Also, guck lieber, dass du bei der Probe-Prüfung

05:19.150 --> 05:21.310
das nicht gerade so packst, sondern wirklich easy.

05:22.010 --> 05:24.590
Und dann schaffst du es auch ganz gut vor Ort.

05:24.870 --> 05:26.010
Weil das ist wirklich was anderes,

05:26.110 --> 05:28.050
ob man dann da sitzt und es ist ja zu weit.

05:28.390 --> 05:30.470
Und dann teilen die IHK-Leute das aus.

05:30.570 --> 05:32.050
Und man versteht die Hälfte der Fragen nicht,

05:32.090 --> 05:33.530
weil die schon so scheiße formuliert sind.

05:34.790 --> 05:35.710
Also, es ist immer ganz gut,

05:35.770 --> 05:41.060
wenn man im Vorfeld besser ist und nicht gerade so...

05:41.060 --> 05:42.140
Oh, ich denke...

05:42.140 --> 05:43.180
Ich denke, das reicht.

05:43.180 --> 05:43.900
Das reicht aus.

05:45.680 --> 05:46.680
Mein Vorbereitungs...

05:46.680 --> 05:47.380
Was hast du gemacht?

05:47.460 --> 05:48.620
Ein Vorbereitungskurs.

05:48.920 --> 05:50.460
Du hast Probe-Prüfungen gemacht.

05:50.600 --> 05:51.240
Also, ganz ehrlich.

05:52.120 --> 05:53.220
Viel mehr kannst du nicht machen.

05:53.840 --> 05:54.620
Es wird schon hinhauen.

05:55.180 --> 05:55.900
Aber es ist schade.

05:56.020 --> 05:57.940
Ich mache ruhig noch ein paar Probe-Prüfungen.

05:58.920 --> 05:59.240
Bis...

05:59.240 --> 06:01.780
Ich meine, guck mal, es ist ja noch jetzt eine Woche Zeit.

06:01.920 --> 06:02.240
28.

06:02.400 --> 06:03.560
Nächste Woche Montag, ja?

06:04.220 --> 06:05.380
An die nächste Woche Mittwoch.

06:05.720 --> 06:07.660
Ja, da kannst du schon noch mal so ein paar Prüfungen machen.

06:08.780 --> 06:10.960
Umso mehr du dich in diesen IHK-Speak

06:10.960 --> 06:12.560
und in diesen ganzen Blödsinn da...

06:13.180 --> 06:14.460
reindenken kannst,

06:15.880 --> 06:16.580
umso besser.

06:19.360 --> 06:20.820
Ja, mach dir aber nicht zu viele Gedanken.

06:20.960 --> 06:22.420
Im Prinzip sind die Prüfungen einfach.

06:22.980 --> 06:24.580
Das Schwierige an den Prüfungen ist,

06:25.300 --> 06:29.380
die IHK-Sprechweise und die IHK-Logik verstanden zu haben.

06:29.380 --> 06:31.140
Die Prüfungen selbst sind nicht schwer.

06:31.560 --> 06:33.080
Äh, ich kann nicht mehr richtig reden, Alter.

06:33.440 --> 06:35.540
Die Prüfungen selbst sind nicht schwer.

06:36.480 --> 06:37.960
Zu verstehen, was die wissen wollen

06:37.960 --> 06:38.820
und wie die Fragen stellen,

06:38.920 --> 06:40.440
das ist das Schwierige dran.

06:40.840 --> 06:43.220
Die Fragen selbst, wenn man wirklich verstanden hat,

06:43.240 --> 06:45.040
was die wollen, sind teilweise so triffig,

06:45.120 --> 06:45.840
wie halt simpel.

06:46.840 --> 06:49.620
So, ihr kennt ja diese typischen IHK-Prüfungen so.

06:50.000 --> 06:51.520
Ordnen sie die Punkte zu.

06:51.980 --> 06:53.600
Dass du links dann so...

06:53.600 --> 06:56.320
Oder bringen sie die Punkte in die richtige Reihenfolge.

06:57.020 --> 07:00.140
Das ist meistens so hirnverbrannt easy,

07:00.520 --> 07:02.540
wenn man verstanden hat, was die eigentlich wollen.

07:12.840 --> 07:14.180
Ach, AP1 ist jetzt...

07:14.180 --> 07:15.540
Ach, das ist die Zwischenprüfung.

07:15.600 --> 07:16.900
Heißt das jetzt AP1?

07:18.320 --> 07:19.940
Bei mir hieß das noch Zwischenprüfung.

07:20.660 --> 07:21.800
Aber es kann sein, ja?

07:21.860 --> 07:23.800
Macht ja Sinn, dass das jetzt AP1 heißt.

07:24.340 --> 07:24.520
Ja, das ist die Zwischenprüfung.

07:24.520 --> 07:24.560
Ja, das ist die Zwischenprüfung.

07:24.560 --> 07:24.640
Ja, das ist die Zwischenprüfung.

07:24.640 --> 07:24.780
Ja, das ist die Zwischenprüfung.

07:24.780 --> 07:24.800
Ja, das ist die Zwischenprüfung.

07:25.580 --> 07:29.520
Weil die Zwischenprüfung zählt jetzt ja auch zur Abschlussprüfung irgendwie, gell?

07:29.940 --> 07:31.660
Ich blicke da nicht durch.

07:31.780 --> 07:33.800
Ich hab mich da ehrlich gesagt nie wieder mit beschäftigt.

07:34.220 --> 07:35.840
Hab ich auch keinen Bock, weil warum?

07:36.000 --> 07:36.660
Ich bin...

07:36.660 --> 07:40.300
Warum sollte ich mich jemals wieder mit IHK-Prüfungen beschäftigen?

07:42.570 --> 07:43.830
Warte mal, hab ich jetzt Reboot oder nicht?

07:44.450 --> 07:44.870
Ja, hab ich.

07:45.050 --> 07:45.230
Moment.

07:45.730 --> 07:47.670
Alter, was ist denn das für ein Zufall, Mann?

07:48.710 --> 07:49.430
Guck mal, Leute.

07:49.850 --> 07:50.750
Ich hab rebooted.

07:51.210 --> 07:54.210
Und er hat von irgendwie 20 möglichen Hintergrundbildern

07:54.210 --> 07:55.830
exakt das gleiche wieder ausgewählt.

07:55.830 --> 07:58.650
Moment, das muss ich jetzt checken, dass wir hier nicht jebaited werden.

08:01.400 --> 08:02.460
Der Jebait-Test.

08:07.050 --> 08:08.490
20% zählt die, okay.

08:10.960 --> 08:11.680
Ja, tatsächlich.

08:12.500 --> 08:13.160
Das war Glück.

08:14.040 --> 08:16.180
Weil jetzt haben wir den Workout-Champ im Hintergrund.

08:16.540 --> 08:18.260
Den Workout-Pepo im Hintergrund.

08:26.100 --> 08:30.670
So, diesen ganzen Krempel hier mal zu.

08:36.420 --> 08:39.080
Ja, also mach dir keine allzu vielen Gedanken.

08:39.160 --> 08:40.500
Wie gesagt, die Prüfungen sind easy.

08:41.280 --> 08:42.500
Und solange du das IHK...

08:43.240 --> 08:46.740
Die IHK-Sprechweise und was die wissen wollen, verstanden hast, schaffst du das locker.

08:47.160 --> 08:49.600
Ich würde trotzdem noch mal bis 28.02.

08:49.860 --> 08:50.560
Also, mein Weg sein.

08:50.900 --> 08:53.000
Mach ruhig noch die Woche noch ein paar Prüfungen.

08:53.340 --> 08:56.560
Weil, sonst vergisst man es ja auch wieder.

09:00.130 --> 09:02.390
Es schadet nicht, noch mal so zwei, drei Prüfungen zu machen.

09:03.530 --> 09:05.870
Mach noch mal irgendwie die Woche zwei, drei Stück.

09:06.670 --> 09:07.850
Nächste Woche musst du dann...

09:07.850 --> 09:08.790
Ich meine, hier ist gut.

09:09.390 --> 09:10.790
Bis kurz davor muss man das nicht machen.

09:11.070 --> 09:11.630
Das schadet nicht.

09:11.670 --> 09:12.930
Es gibt ja auch mittlerweile genug.

09:13.770 --> 09:14.710
Ich weiß gar nicht.

09:15.010 --> 09:15.770
Gibt es eigentlich...

09:15.890 --> 09:19.870
Gibt es mittlerweile eine offizielle Quelle für alte IHK-Prüfungen?

09:20.490 --> 09:21.970
Oder ist das immer noch so ein Ding?

09:23.710 --> 09:26.670
Irgendeinen File-Hoster suchen, wo es mal einer drauf abgelegt hat?

09:28.270 --> 09:30.950
Also, ich meine offizielle, kostenlose Quelle.

09:31.470 --> 09:33.430
Dass man die sich kaufen kann, irgendwo weiß ich.

09:38.980 --> 09:39.920
Soll ich euch mal sagen?

09:39.980 --> 09:45.140
Ich finde das nach wie vor ein komplettes Unding, dass ein Azubi sich alte Prüfungen kaufen sollte.

09:47.520 --> 09:49.460
Ich weiß gar nicht, was kosten die eigentlich?

09:50.440 --> 09:54.640
Was kosten sowas eigentlich?

09:55.660 --> 09:56.380
Ja, ja, später.

09:58.400 --> 09:58.960
Fachinformatikerprüfung.

09:59.380 --> 10:01.340
Was ist das für eine Webseite, Mann?

10:04.810 --> 10:06.630
Was ist das für eine Webseite, Alter?

10:08.370 --> 10:13.570
Optimiert für Microsoft Internet Explorer in 1024x768, oder was?

10:14.290 --> 10:15.750
Exzellente Bewertung, haben die, guck mal.

10:16.330 --> 10:16.930
Exzellent.

10:18.850 --> 10:21.090
E-Komi, exzellente Bewertung.

10:21.690 --> 10:22.270
Alle ablehnen.

10:24.270 --> 10:24.790
Exzellent.

10:25.110 --> 10:27.910
Ist das Wordpress?

10:28.190 --> 10:29.470
Mal kurz gucken, was das ist.

10:34.100 --> 10:34.740
Webstiles?

10:38.400 --> 10:39.040
WSWS?

10:39.680 --> 10:40.980
Ist das Wordpress?

10:41.820 --> 10:42.180
Chatge?

10:43.060 --> 10:45.000
Ihr kennt euch mit sowas besser aus.

10:46.900 --> 10:47.580
Websale.

10:47.900 --> 10:49.100
Websale ist das.

10:49.620 --> 10:50.640
Was ist Websale?

10:56.320 --> 10:57.920
Shopify für Arme, oder wie?

11:02.310 --> 11:03.830
Webshop as a Service.

11:03.830 --> 11:05.190
Also, seriously.

11:05.730 --> 11:09.930
Wenn das ein Webshop as a Service ist, dann weiß ich, dann verstehe ich die Welt nicht mehr.

11:10.910 --> 11:15.850
Das sieht aus, als hätte das mal vor 20 Jahren einer gebaut, und danach wurde das nie wieder angepasst.

11:16.250 --> 11:19.730
Also, nach einer Service-Anwendung sieht das beim besten Willen nicht aus.

11:20.630 --> 11:20.770
Okay.

11:21.230 --> 11:22.810
Wie dem auch sei, Systemintegration.

11:22.890 --> 11:24.110
Was kosten so Abschlussprüfungen?

11:25.610 --> 11:26.050
Fachinformatiker.

11:27.290 --> 11:30.750
Erzähl dem Erfolgspaket plus Abschlussprüfung Teil 1.

11:33.440 --> 11:34.160
Das Erfolgspaket.

11:34.160 --> 11:37.160
Was genau ist denn das Erfolgspaket?

11:37.680 --> 11:44.320
Was, was ist das F?

11:44.320 --> 11:46.320
Erfolgsgarantie, auch noch.

11:46.320 --> 11:48.320
Da wäre ich, da wäre ich aber mal zurückhaltender.

11:48.320 --> 11:50.320
Was ist denn da drinnen?

11:50.320 --> 11:54.080
Ihre Vorteile, perfekt gepackt.

11:54.080 --> 12:10.900
Ja, und was ist, was ist jetzt dabei?

12:10.900 --> 12:12.900
Ja, und was ist denn jetzt dabei?

12:12.900 --> 12:16.980
Erfolg.

12:16.980 --> 12:18.980
Das Selbstcoachingbuch.

12:18.980 --> 12:26.390
Meine Güte, machen die jetzt auf KLS, oder was?

12:26.390 --> 12:29.830
Die Versandkostenfreilieferung schont ihr Budget.

12:29.830 --> 12:31.830
Das Selbstcoachingbuch.

12:31.830 --> 12:33.830
Meine Güte, machen die jetzt auf KLS, oder was?

12:33.830 --> 12:38.230
Die Versandkostenfreilieferung schont ihr Budget.

12:38.230 --> 12:40.230
Das Selbstcoachingbuch. Meine Güte, machen die jetzt auf KLS, oder was?

12:40.230 --> 12:42.230
Der Shit kostet 74 Euro, Mann.

12:42.230 --> 12:46.630
Okay, im Prinzip sind das einfach nur Abschlussinhalte.

12:46.630 --> 12:48.630
Okay, im Prinzip sind das einfach nur Abschlussinhalte.

12:48.630 --> 12:50.630
Prüfungstrainer-IT-Berufe, braucht keiner.

12:50.630 --> 12:52.630
Prüfungstrainer-IT-Berufe, braucht keiner.

12:52.630 --> 12:54.630
Lernkarten braucht auch keiner.

12:54.630 --> 12:56.630
Prüfungs... Ja, das vielleicht schon eher.

12:56.630 --> 12:58.630
Original IHK-Abschlussprüfung Dezember.

12:58.630 --> 13:00.630
Moment, das ist, da ist nur eine Prüfung dabei.

13:00.630 --> 13:02.630
Moment, das ist, da ist nur eine Prüfung dabei.

13:02.630 --> 13:04.630
Herbst 2003, nur eine Prüfung.

13:04.630 --> 13:09.280
Die wollen dich doch verarschen, oder?

13:09.280 --> 13:17.840
Das ist doch Schwachsinn.

13:17.840 --> 13:19.840
Ganz ehrlich, Leute.

13:19.840 --> 13:21.840
Ganz ehrlich, Leute. Wir haben das damals verarscht.

13:21.840 --> 13:23.840
Wir haben uns von Rapidshare oder so runtergeladen.

13:23.840 --> 13:28.180
Mich würde nicht wundern,

13:28.180 --> 13:30.180
ich möchte natürlich keinen dazu auffordern,

13:30.180 --> 13:32.180
aber mich würde nicht wundern,

13:32.180 --> 13:34.180
was es heute auch noch gibt.

13:34.180 --> 13:36.180
Vielleicht nicht auf Rapidshare.

13:36.180 --> 13:38.180
Weil ich glaube, Rapidshare selbst

13:38.180 --> 13:40.180
gibt es nicht mehr.

13:40.180 --> 13:42.180
Rapidshare hat auch ein bisschen die Arschkarte gehabt,

13:42.180 --> 13:44.180
dass sie so einer der ersten, so On-Click...

13:44.180 --> 13:46.180
Nämlich OneClick...

13:46.180 --> 13:48.180
Wie hieß das?

13:48.180 --> 13:50.180
Free...

13:50.180 --> 13:52.180
So Share...

13:52.180 --> 13:54.180
...OneClick-Hoster?

13:54.180 --> 14:05.110
Denn davon will ich gar nichts wissen.

14:05.650 --> 14:07.110
Wenn ich sehe, wird es gelöscht.

14:12.650 --> 14:13.090
Kappa.

14:14.370 --> 14:15.330
Sharehoster, ja.

14:18.420 --> 14:22.020
Guck mal, es ist die eine Sache, was ich offiziell sagen muss und das andere, was ich mache.

14:22.720 --> 14:27.200
Also, ich erlaube nicht, dass auf meinem Discord solche Sachen gepostet werden.

14:28.920 --> 14:30.480
Wo kämen wir denn dahin, Mann?

14:31.620 --> 14:33.520
Wie findest du die Programmiersprache Java?

14:34.420 --> 14:36.800
Viel wichtiger ist die Frage, wie man das ausspricht.

14:36.820 --> 14:39.140
Ist es Java?

14:40.060 --> 14:41.060
Ist es Java?

14:41.960 --> 14:46.400
Bisschen die Frage wie bei Kubernetes.

14:47.400 --> 14:52.770
Ich mag Java nicht sonderlich.

14:53.310 --> 14:55.010
Ich habe aber auch nichts dagegen.

15:00.900 --> 15:03.160
Ich würde zumindest meine Projekte nicht in Java machen.

15:04.000 --> 15:07.520
Java ist, zumindest alles, was ich bisher gesehen habe,

15:08.420 --> 15:09.920
beziehungsweise gelesen habe,

15:10.540 --> 15:15.900
ist ultra verbose oder verbose, wenn man das ganz richtig aussprechen muss.

15:15.900 --> 15:17.260
Also, das sieht irgendwie so,

15:17.280 --> 15:18.900
so, so bloated aus.

15:20.120 --> 15:23.240
Man könnte dann sagen, dass es bei .NET und C-Sharp ähnlich ist,

15:23.320 --> 15:25.260
aber ich finde es bei weitem nicht so krass wie in Java.

15:37.910 --> 15:42.550
Ja, gibt es eigentlich wirklich noch Unternehmen, die Programmierer nach programmierten Zeilen bezahlen?

15:44.410 --> 15:45.650
Das gibt es doch nicht mehr, oder?

15:45.710 --> 15:47.810
Das macht doch 2024 niemand mehr.

15:49.170 --> 15:49.850
Was hältst du von Go?

15:50.130 --> 15:50.990
Go ist nice.

15:57.650 --> 16:00.810
Viele Java-Leute schwärmen ja von Kotlin, so ein bisschen,

16:02.110 --> 16:04.230
aber sind dann richtig sad-kill,

16:04.230 --> 16:06.610
dass sie im Beruf nicht Kotlin verwenden dürfen,

16:06.610 --> 16:08.110
sondern weiter mit Java rumhantieren.

16:10.670 --> 16:12.670
Ja, dass sie weiter mit Java rumhantieren müssen.

16:17.740 --> 16:18.680
Ja, das schadet nicht.

16:18.940 --> 16:23.800
Es ist jetzt nicht so, als wäre Java und das Java-Ökosystem unerträglich kacke.

16:24.200 --> 16:27.960
Ich glaube, das Schlimmste am Java-Umfeld ist tatsächlich Oracle,

16:28.820 --> 16:31.960
wobei es ja mittlerweile mit OpenJDK und was sonst nicht noch alles,

16:31.960 --> 16:34.300
ich bin da nicht so drinne, was das Java-Ökosystem angeht,

16:35.220 --> 16:36.520
sicherlich ja auch vieles gibt,

16:36.860 --> 16:37.760
wo man großen Bogen,

16:37.760 --> 16:41.240
wo man großen Bogen um Oracle machen kann.

16:47.410 --> 16:51.210
Ein Kollege von mir auf der Arbeit mag Oracle auch nicht.

16:52.350 --> 16:54.750
Man muss aber wissen, der hat früher bei Sun gearbeitet

16:54.750 --> 16:58.190
und wurde dann zwangseinverleibt von Oracle

16:58.190 --> 17:00.690
und hatte dann nach ein paar Jahren keinen Bock mehr.

17:12.180 --> 17:15.720
Das finde ich, das trifft echt ganz gut.

17:17.060 --> 17:20.720
Go, wenn es schnell gehen soll und Rust, wenn man nichts von Bugs wissen will.

17:21.720 --> 17:23.220
Das ist natürlich im Detail.

17:23.240 --> 17:26.920
Nicht so, aber so ganz grob finde ich das gar nicht so schlecht.

17:27.340 --> 17:29.240
In Go kann man wirklich auf die Schnelle was zusammenzimmern,

17:30.080 --> 17:33.120
was man übrigens in C Sharp und Python und anderen Programmiersprachen auch kann.

17:33.780 --> 17:35.300
Kommt ein bisschen drauf an, was man machen will.

17:36.020 --> 17:38.820
Und Rust ist die einzige Programmiersprache, die ich kenne,

17:39.280 --> 17:41.120
wo man sagen kann, dass es in der Regel,

17:41.860 --> 17:46.400
sobald es kompiliert, das macht, was da steht oder was man zu sehen glaubt.

17:46.840 --> 17:49.000
Dass man jetzt selbst irgendwie einen Denkfehler gemacht hat

17:49.000 --> 17:51.640
und der Ablauf nicht richtig ist, da kann Rust auch nichts dagegen.

17:51.920 --> 17:52.720
Aber zumindest,

17:53.240 --> 17:57.940
in der Regel macht Rust-Code das, was da steht.

17:59.220 --> 18:02.540
Also, ne, was da steht, sollten sie alle machen, außer C++.

18:02.540 --> 18:04.900
C++ macht noch nicht mal das, was da steht. Das ist kein Witz.

18:05.420 --> 18:08.740
Wir haben uns letztens, letztens habe ich euch wieder was gezeigt, wo in C++

18:09.320 --> 18:11.400
was anderes gemacht wird, als da steht.

18:14.660 --> 18:18.920
Aber bei Rust ist es so, das was da steht und das was du verstehst, ist in der Regel,

18:19.200 --> 18:21.520
sobald es sich kompilieren lässt, auch das, was es macht.

18:21.640 --> 18:25.100
Also Rust ist da schon ganz gut, ne, wenn du natürlich Blödsinn-Schränen schreibst und denkst,

18:25.100 --> 18:27.180
dass da ein Denkfehler drin ist, da kann Rust auch nichts dagegen machen.

19:02.040 --> 19:05.200
Ja, ich finde das, ich finde das auch ganz gut gemacht.

19:05.720 --> 19:08.680
Rust hat ja von Anfang an gesagt, ey, Exceptions wollen wir nicht.

19:09.080 --> 19:11.700
Wir haben nur Result-Types und Option-Types und sowas.

19:12.600 --> 19:14.040
Die haben das halt konsequent gemacht.

19:14.160 --> 19:15.880
In Go haben sie es nicht konsequent gemacht.

19:16.780 --> 19:19.940
In Go hast du deinen Error-Type, kannst aber auch paniken und recovern.

19:21.640 --> 19:22.840
So halbe-halbe ist das.

19:24.420 --> 19:26.280
Und in C-Sharp kannst du auch beides machen.

19:26.280 --> 19:28.780
In C-Sharp kannst du auch Error-Types verwenden.

19:29.240 --> 19:36.940
Oder, also, ich glaube, offizielle Option- und Error-Types gibt es in der Standard-Library nicht,

19:37.060 --> 19:38.440
aber du kannst sie ohne Probleme verwenden.

19:38.860 --> 19:46.300
Und in Exceptions, was halt richtig nice wäre, in C-Sharp, wenn sie es mal hinkriegen,

19:47.040 --> 19:52.330
würden, dass du, also ohne den gleichen Base-Type zu haben,

19:53.630 --> 19:56.630
mehrere Sachen, unterschiedliche Types returnen könntest.

19:59.700 --> 20:02.340
Irgendwelche Union-Types, aber das wollen sie irgendwie nicht.

20:04.060 --> 20:04.740
Hast du auch?

20:04.780 --> 20:06.940
Hast du auch studiert oder Ausbildung als Fachinformatiker?

20:07.620 --> 20:12.960
Ich habe 2007, also das jetzt vor, ach du Scheiße, ist das schon lange her, Mann.

20:14.440 --> 20:16.160
Das ist ernsthaft, 17 Jahre her schon.

20:16.660 --> 20:17.660
Quick Maths, stimmt das?

20:18.620 --> 20:18.740
Ja.

20:19.740 --> 20:24.360
17 Jahre her habe ich eine Ausbildung als Fachinformatiker, Systemintegration gemacht.

20:25.160 --> 20:27.040
Das gab es zu dem Zeitpunkt noch nicht so lang.

20:30.560 --> 20:31.880
Schon ein paar Jahre, aber nur nicht so lang.

20:33.580 --> 20:36.020
Meinungen zu Broadcom-Lizenzmodell der Zukunft?

20:36.120 --> 20:37.540
Ich habe absolut keine Ahnung.

20:37.640 --> 20:41.080
Was das Broadcom-Lizenzmodell der Zukunft ist.

20:42.840 --> 20:43.600
Stellst du von C...

20:43.600 --> 20:45.420
Nein, nein, nein, nein, da fahren wir jetzt nicht hin.

20:45.680 --> 20:48.940
Übrigens, das ist das Einzige, was ich jetzt zu C++ sage.

20:50.480 --> 21:00.820
Wisst ihr eigentlich, dass in C++ das hier, while, oder while true,

21:00.960 --> 21:04.540
ich kann C++ nicht aus dem Kopf gescheit, while true hier,

21:04.540 --> 21:08.020
print, print,

21:09.520 --> 21:11.980
was hat er denn, was glaubt er denn jetzt eigentlich für ein...

21:11.980 --> 21:13.240
Ach ja, was gibt Kackel?

21:14.040 --> 21:20.790
Wisst ihr eigentlich, dass in C++ es nicht klar ist, was hier passiert?

21:21.890 --> 21:26.630
Habe ich schon mal erzählt, ja, aber in C++ ist es tatsächlich nicht so,

21:27.030 --> 21:28.490
dass das passiert, was man denkt.

21:29.370 --> 21:31.090
Was würdet ihr denken über diesen Code?

21:31.730 --> 21:32.770
Was passiert da?

21:33.030 --> 21:35.730
Es ist jetzt übrigens keine konkrete Programmiersprache.

21:36.910 --> 21:37.790
Nur vom Ablauf.

21:37.850 --> 21:39.890
Wenn ihr sowas ähnliches in C++ stehen hättet,

21:39.890 --> 21:41.890
in C++ ist es dann noch einmal...

21:42.170 --> 21:49.130
Standard, nee, doch Standard, so irgendwie.

21:49.530 --> 21:53.510
Allein schon, wenn ich diese Syntaxe immer sehe, kriege ich Anfälle.

21:58.690 --> 22:00.750
Kommt auf den Compiler an, das ist korrekt.

22:03.280 --> 22:07.000
Die Schleife ist leer und wird je nach Dings wegoptimiert.

22:16.430 --> 22:16.910
Korrekt.

22:17.430 --> 22:20.090
Psytech, genau so finde ich, sollte das auch sein.

22:20.170 --> 22:21.570
Ist es aber nicht zwangsläufig.

22:22.490 --> 22:25.030
Also ich würde auch sagen, es muss eindeutig so sein,

22:25.030 --> 22:26.990
damit das halt passt, was da steht.

22:27.610 --> 22:28.390
Es gibt das aus.

22:28.390 --> 22:29.450
Und dann hängt es unendlich.

22:29.590 --> 22:30.910
Aber nein, das ist nicht so.

22:31.370 --> 22:34.970
Und es ist übrigens nicht so, weil die Schleife wegoptimiert wird.

22:36.610 --> 22:37.390
Es ist so, weil...

22:38.250 --> 22:41.850
Weil ohne Abbruchbedingungen undefined behavior ist.

22:42.050 --> 22:42.570
Warum auch immer.

22:43.090 --> 22:46.250
Das haben sich die Leute vom C++-Gremium sicherlich gut überlegt.

22:46.910 --> 22:49.810
Und das ist so schlimm, dass es zwischen Compiler-Versionen

22:49.810 --> 22:52.150
und Compiler-Upgrades sich ändert.

22:52.250 --> 22:55.430
Also sprich, wenn du das hier, sagen wir mal, mit GCC9 kompilierst,

22:55.790 --> 22:57.130
dann hängt es in der Endlosschleife.

22:57.130 --> 23:01.670
Kompilierst du es mit GCC10, dann gibt es Kekkel 1 und Kekkel 2 aus.

23:02.450 --> 23:07.150
Es ist so ein Bullshit, diese Sprache und was die Standardleute da bauen.

23:07.930 --> 23:09.310
Ich meine, allein schon, dass eine leere...

23:09.310 --> 23:12.490
Ich weiß gar nicht, ob das leer sein muss.

23:12.950 --> 23:16.410
Eine Endlosschleife ohne Abbruchbedingungen undefined behavior ist.

23:16.470 --> 23:19.510
Wer hat sich diesen dummen Schwachsinn ausgedacht?

23:23.530 --> 23:25.530
Ja, also C++ kannst du echt klicken.

23:25.970 --> 23:28.090
Zumindest ist C++ die einzige Sprache,

23:28.090 --> 23:30.270
wo du wirklich vom Angucken nicht weißt,

23:30.270 --> 23:30.290
was das ist.

23:30.290 --> 23:30.410
Und das ist so schlimm.

23:30.410 --> 23:31.670
Weil du nicht wissen kannst, was es macht.

23:34.190 --> 23:37.050
Aber Rust ist schon gut in der Beziehung.

23:54.420 --> 23:55.200
Das weiß ich nicht.

23:55.400 --> 23:56.880
Es geht aber hauptsächlich darum...

23:56.880 --> 23:57.080
Warte mal.

24:03.200 --> 24:04.380
Zumindest hat der Typ das

24:04.380 --> 24:06.680
in der Präsentation so erzählt.

24:06.840 --> 24:07.900
Ich habe den Standard nicht gelesen.

24:09.260 --> 24:11.460
Ich habe eine C++-Con-Präsentation geguckt,

24:12.120 --> 24:13.640
wo es um undefined behavior geht.

24:15.640 --> 24:17.660
Und der meinte, das Problem ist,

24:18.160 --> 24:20.200
die Endlosschleife und Abbruchbedingungen,

24:20.240 --> 24:21.220
das wäre nicht definiert.

24:21.220 --> 24:30.610
Und ich glaube, das kann man nicht.

24:30.890 --> 24:32.910
Das schaffen die doch nicht mal selbst.

24:34.630 --> 24:37.170
C++ ist einfach komplett für den Arsch.

24:39.130 --> 24:40.590
So, machen wir das mal zu.

24:40.710 --> 24:41.490
Machen wir das mal zu.

24:41.610 --> 24:42.990
Wobei, einen Browser brauchen wir schon noch.

24:43.750 --> 24:45.650
Wir gucken uns heute das Welt 5 an.

24:47.130 --> 24:48.910
Ich gebe zu, die Streamingzeit

24:48.910 --> 24:51.690
ist vielleicht nicht für alle so praktisch.

24:52.350 --> 24:53.810
Die meisten Leute sind jetzt fertig mit der Arbeit,

24:53.930 --> 24:54.650
fahren jetzt heim.

24:55.650 --> 24:56.850
Aber ich schwätze ja lang genug rum.

24:56.850 --> 24:58.450
Vielleicht seid ihr ja mittlerweile schon daheim.

24:58.450 --> 24:59.530
Und könnt gucken.

25:00.250 --> 25:01.490
Ansonsten gibt es immer noch das Wort.

25:02.490 --> 25:04.510
Oder wir machen ja demnächst noch ein paar mehr Streams

25:04.510 --> 25:05.490
in der Richtung.

25:06.310 --> 25:09.430
Zumindest, ich wollte mir heute mal das Welt 5 angucken.

25:10.050 --> 25:12.510
Weil das ist ja irgendwann gescheduled,

25:12.690 --> 25:14.730
released 2024 irgendwann,

25:14.890 --> 25:16.150
wenn ich das richtig gelesen habe.

25:17.030 --> 25:19.130
Und das Welt 5 hat

25:19.130 --> 25:21.770
bei der Ankündigung

25:21.770 --> 25:23.290
einen riesen Aufschrei

25:23.290 --> 25:25.410
in der Svelte-Community verursacht,

25:25.790 --> 25:27.810
weil sich die Syntax etwas ändert.

25:28.130 --> 25:28.430
Und das ist ja auch ein bisschen

25:28.450 --> 25:28.570
komisch.

25:28.570 --> 25:31.970
Als ich das das erste Mal gesehen habe,

25:32.130 --> 25:33.470
wir gucken es uns gleich an.

25:33.510 --> 25:34.650
Ich habe eine coole Seite gefunden,

25:34.730 --> 25:35.570
in einem Video auf YouTube,

25:36.130 --> 25:38.970
wo man schön die alten und neuen Versionen vergleichen kann.

25:40.490 --> 25:42.430
Zumindest war der Aufschrei relativ groß,

25:42.630 --> 25:43.830
weil sich an der Syntax

25:43.830 --> 25:45.110
ein bisschen was geändert hat.

25:46.390 --> 25:48.170
Und ich dachte mir am Anfang auch,

25:49.050 --> 25:50.630
ich weiß nicht,

25:51.250 --> 25:53.310
irgendwie falte ich die alte Sache ja ganz cool.

25:55.170 --> 25:55.770
Aber jetzt,

25:55.890 --> 25:57.150
nachdem ich mir eine Weile überlegt habe,

25:57.150 --> 25:58.670
glaube ich, das neue ist wirklich besser.

25:59.890 --> 26:01.090
Und eindeutiger.

26:01.970 --> 26:03.530
Ihr könnt das ja gleich selbst entscheiden,

26:03.630 --> 26:04.650
wenn wir es uns angeguckt haben.

26:05.330 --> 26:06.850
Ich bin übrigens bei weitem kein Frontend

26:06.850 --> 26:08.650
oder Svelte-Professional.

26:09.490 --> 26:10.510
Also es kann durchaus sein,

26:10.610 --> 26:12.350
dass ich auch in Svelte 4 bei einigen Sachen

26:12.350 --> 26:13.750
gar nicht so genau weiß aus dem Kopf,

26:13.850 --> 26:14.570
wie sie funktionieren.

26:17.000 --> 26:17.960
Kein TypeScript mehr?

26:18.080 --> 26:19.420
Nee, wir machen hier nie TypeScript.

26:20.320 --> 26:21.460
Oder was meinst du?

26:22.300 --> 26:24.320
Ach, Svelte 5, kein TypeScript mehr?

26:24.380 --> 26:26.200
Nee, du kannst das mit TypeScript verwenden,

26:26.200 --> 26:27.420
wenn du willst.

26:27.580 --> 26:28.500
Du kannst es auch sein lassen.

26:29.360 --> 26:31.180
Das Einzige, wo die kein TypeScript,

26:31.200 --> 26:33.560
das hat auch einen Riesenaufschrei verursacht.

26:34.040 --> 26:35.200
Als die angeblich

26:35.840 --> 26:37.960
verwendet Svelte 5 kein TypeScript mehr.

26:38.240 --> 26:39.220
Das ist auch Blödsinn.

26:40.260 --> 26:41.520
Die verwenden intern

26:41.520 --> 26:43.860
in ihren,

26:44.400 --> 26:44.640
tja,

26:44.820 --> 26:50.540
so wie sie Svelte bauen quasi,

26:50.660 --> 26:52.840
verwenden sie intern kein TypeScript mehr.

26:53.860 --> 26:54.840
Aber du kannst Svelte

26:54.840 --> 26:56.620
selbstverständlich mit TypeScript benutzen

26:56.620 --> 26:58.940
und die offiziellen Beispiele sind auch zum größten Teil

26:58.940 --> 26:59.600
mit TypeScript.

27:03.330 --> 27:04.070
Ja, genau.

27:06.780 --> 27:07.580
Das heißt nicht,

27:07.580 --> 27:09.660
dass du Svelte nicht benutzen kannst mit TypeScript.

27:10.340 --> 27:12.740
Sie verwenden intern in Svelte kein TypeScript mehr.

27:13.180 --> 27:13.900
Das liegt daran,

27:13.900 --> 27:16.340
ich habe auch ein Video gesehen mit dem Svelte-Erfinder.

27:16.660 --> 27:18.700
Die haben gesagt, weil sie große Probleme haben,

27:19.640 --> 27:23.640
Svelte kompiliert das ja dann zu plain JavaScript alles,

27:23.980 --> 27:26.760
was du da an syntaktischem Zucker in Svelte machen kannst.

27:27.140 --> 27:28.260
Die haben große Probleme,

27:29.260 --> 27:31.260
TypeScript da zwischendrin zu parsen.

27:31.820 --> 27:32.900
Deswegen machen sie, glaube ich,

27:32.900 --> 27:35.940
jetzt JS-Docs intern und verzichten auf TypeScript.

27:36.220 --> 27:37.420
Du kannst aber Svelte wunderbar,

27:37.420 --> 27:40.140
wunderbar mit TypeScript verwenden und du wirst sogar,

27:40.140 --> 27:42.300
glaube ich, in den offiziellen Docs dazu ermutigt.

27:42.660 --> 27:44.460
So nach dem Motto macht's mit TypeScript.

27:45.180 --> 27:47.260
Also das, das, was die intern machen und das,

27:47.260 --> 27:48.660
wie du es dann am Ende verwenden kannst,

27:48.660 --> 27:49.980
hat ja gar nichts miteinander zu tun.

27:54.940 --> 27:57.620
So, und ich habe eine Seite gefunden in einem YouTube-Video.

27:57.700 --> 27:59.100
Ich zeige euch das YouTube-Video mal.

27:59.140 --> 28:00.020
Also wir gucken uns das jetzt an.

28:00.380 --> 28:00.880
Ich habe.

28:01.180 --> 28:01.680
Ah ja.

28:02.620 --> 28:05.340
Ich habe ein YouTube-Video gefunden und zwar das da.

28:06.300 --> 28:08.700
Und er hat da drin eine wirklich coole Seite gezeigt.

28:08.700 --> 28:09.780
Und zwar guckt mal hier.

28:09.780 --> 28:12.580
Komponent-Party.dev.

28:13.140 --> 28:13.820
Kanntet ihr das?

28:13.820 --> 28:14.820
Also ich kannte das vorher nicht.

28:16.220 --> 28:18.820
Das ist aber extremly nice.

28:20.180 --> 28:24.180
Denn man kann hier beispielsweise alle möglichen Frontend-Frameworks

28:24.620 --> 28:29.060
vergleichen, wie ähnliche Konstrukte untereinander aussehen.

28:29.060 --> 28:30.620
Also wir können jetzt zum Beispiel sagen,

28:31.100 --> 28:35.860
wie sieht dann State-Handling aus in Svelte 4 versus React?

28:36.340 --> 28:39.540
Oder wie sieht State-Handling aus in Svelte 5

28:39.540 --> 28:42.940
versus React oder in Vue 3 oder in Vue 2 oder so.

28:46.770 --> 28:48.330
Da sieht man die Unterschiede.

28:49.890 --> 28:51.010
Also aber richtig nice.

28:51.330 --> 28:52.730
Ah, so sieht es in Svelte 4 aus.

28:52.730 --> 28:53.810
So sieht es in React aus.

28:53.810 --> 28:54.810
So sieht es in Svelte 5 aus.

28:54.810 --> 28:57.130
So sieht es, so sah es in Vue 2 aus.

28:57.490 --> 28:59.730
Vue 2 fand ich super nice damals.

29:00.690 --> 29:08.240
Das war so das erste Frontend-Framework, wo ich so, wo ich so, wo mir es so richtig gefallen hat.

29:09.600 --> 29:13.800
Ich habe das Interesse ein bisschen verloren, weil das Upgrade zu Vue 3 sich so schleppend,

29:13.800 --> 29:17.560
so schleppend hingezogen hat und irgendwann bin ich dann bei Svelte gelandet.

29:19.840 --> 29:22.320
Um alle anderen mache ich ein bisschen einen Bogen.

29:22.800 --> 29:26.280
Was ich mir irgendwann mal angucken wollte, ist tatsächlich Solid,

29:29.060 --> 29:31.940
weil Solid ist ja, dachte ich eigentlich.

29:32.740 --> 29:37.140
Ich dachte eigentlich, dass Solid quasi wie React ist, nur ohne JSX.

29:37.220 --> 29:39.220
Aber anscheinend, anscheinend doch nicht.

29:40.540 --> 29:42.940
Weil das ist doch eindeutig JSX hier unten, oder?

29:44.420 --> 29:46.620
Es ist, es ist HTML in JavaScript.

29:46.620 --> 29:53.900
Vielleicht haben sie das auch nur für die Einfachheit halber der Beispiele gemacht.

29:57.530 --> 30:00.490
Egal. Zumindest, wir planten hier mal alles aus.

30:01.730 --> 30:07.890
Wir planten Solid aus, wir planten Vue aus, wir planten React, wo ist denn React?

30:09.690 --> 30:13.010
React aus. Da bleibt jetzt nur noch übrig Svelte 4 und Svelte 5.

30:14.530 --> 30:16.410
Aber die Seite ist mega poggast, muss man sagen.

30:17.610 --> 30:19.530
Und wir gucken uns mal ein paar Beispiele an.

30:20.370 --> 30:22.850
Ich habe sogar gesehen, man kann das mittlerweile ziemlich easy auswählen.

30:22.930 --> 30:27.250
Man muss das nicht mehr offiziell in diesem offiziellen Baukasten machen,

30:27.410 --> 30:30.970
sondern wenn man ein neues Svelte-Kit-Projekt anlegt.

30:32.330 --> 30:35.170
Mkdir. Das Dumme ist, ich gucke mal hier.

30:40.690 --> 30:42.090
Meine Ordnernamen, Alter.

30:51.180 --> 30:52.500
Wie war das? NPX?

30:53.020 --> 30:53.220
Nee.

31:02.940 --> 31:05.880
Alter, JavaScript-Ökosystem, wie ging das nochmal?

31:07.580 --> 31:08.260
NPX?

31:14.570 --> 31:20.020
Nee, keine Ahnung.

31:20.540 --> 31:24.260
Keine Ahnung.

31:24.900 --> 31:27.660
Moment, das Svelte-Kit 2 ist das Normale heutzutage, gell?

31:30.540 --> 31:30.860
Create.

31:37.780 --> 31:40.560
Ich kenne FZF, ich mag das aber für die History nicht.

31:43.080 --> 31:46.240
Ich benutze das sogar auf der Arbeit für Host-Auto-Completion,

31:46.360 --> 31:51.820
so nach dem Motto, ich suche die Webserver-Kiste aus dem und dem Projekt.

31:52.820 --> 31:55.180
Ja, ich kenne das. Ich habe das, glaube ich, sogar installiert.

31:59.180 --> 32:03.800
Ja, ich habe das sogar installiert.

32:05.960 --> 32:08.000
Kennst du C-Oxygen?

32:08.520 --> 32:09.640
Ja, das kenne ich.

32:10.400 --> 32:12.300
Das ist ein CD in Rust.

32:12.980 --> 32:14.060
Verwende ich aber auch nicht.

32:15.160 --> 32:17.000
Aus genau dem gleichen Grund,

32:18.200 --> 32:24.240
warum ich auch kein FZF verwende für Sachen wie Shell History und sowas.

32:24.860 --> 32:29.760
Und das liegt daran, dass ich einen nicht unerheblichen Teil meiner Arbeitszeit

32:29.760 --> 32:32.260
auf Remote-Systemen verbringe, per SSH.

32:32.780 --> 32:34.260
Und dort ist dieser ganze Kram nicht drauf.

32:34.260 --> 32:37.880
Und wenn du dich daran gewöhnst, dass du nur noch CD navigieren kannst,

32:37.980 --> 32:38.260
mit C-Oxygen,

32:38.520 --> 32:42.420
sei es, dass du dich nur noch daran gewöhnst, dass deine Bash-History fuzzy-searchable ist,

32:42.780 --> 32:45.120
dann drehst du durch auf Serversystemen.

32:46.060 --> 32:49.140
Weil es hat sehr viel damit zu tun, was man gewöhnt ist zu tippen.

32:49.560 --> 32:53.940
Und man tippt ja oftmals schneller, als man wirklich realisiert, was passiert.

32:57.520 --> 33:00.460
Man denkt sich im Kopf schon immer das, was dann kommt, und tippt dann weiter,

33:00.860 --> 33:03.180
bis man irgendwie feststellt, oh fuck, das ist ja hier gar nicht drauf.

33:03.680 --> 33:04.320
Kannst vergessen.

33:04.780 --> 33:06.620
Also das ist der Grund, warum ich das nicht verwende.

33:12.210 --> 33:16.030
Ist auch der Grund, warum ich bei allen Standard-Tools,

33:16.030 --> 33:19.750
die Standard-Sachen verwende, warum ich bei LS noch LS verwende

33:19.750 --> 33:25.930
und nicht etwa eines der 5000 LS-Rewrites in Rust.

33:30.360 --> 33:31.380
So, wie ging das jetzt hier nochmal?

33:31.520 --> 33:33.460
Svelte, create a latest MyApp.

33:33.960 --> 33:38.020
Nein, nein, nicht latest, via Example.

33:39.020 --> 33:44.330
So, angeblich Svelte-Kit-Demo-App.

33:45.910 --> 33:47.010
Skeleton-Project.

33:47.450 --> 33:49.090
Angeblich soll der mich jetzt fragen,

33:49.090 --> 33:51.090
ob ich nicht...

33:51.150 --> 33:53.730
Ob ich ein Svelte-5-Testprojekt...

33:53.730 --> 33:54.290
Ach, hier, guck mal.

33:54.770 --> 33:57.010
Try the Svelte-5-Preview-Unstable.

33:57.170 --> 33:58.210
Genau, das will ich haben.

34:01.670 --> 34:02.570
Browser-Testing.

34:05.040 --> 34:07.480
Wer braucht Tests, wenn alles immer first try funktioniert?

34:20.310 --> 34:21.590
Okay, npm install.

34:21.750 --> 34:25.350
Mal schauen, wie viele Pakete gleich wieder installiert sind.

34:27.490 --> 34:28.310
Das sparen wir uns.

34:28.650 --> 34:29.850
Das brauchen wir gleich.

34:36.050 --> 34:36.290
Okay.

34:37.330 --> 34:38.250
Node-Modules.

34:39.530 --> 34:40.450
Was ist das?

34:42.270 --> 34:44.110
Warum sind das nur 28 MB?

34:44.350 --> 34:45.450
Bei einem neuen Projekt.

34:47.170 --> 34:48.370
Das ist viel zu wenig.

34:51.380 --> 34:55.060
Also, ich glaube, unter 2-3 GB Node-Modules ist irgendwas verkehrt.

34:59.730 --> 35:00.970
Und das funktioniert jetzt, ja?

35:06.780 --> 35:11.100
Na gut, immerhin 48 Node-Packages am Start.

35:11.580 --> 35:13.160
Was installiert denn der da so eigentlich?

35:15.060 --> 35:16.380
Übrigens kann man minus R...

35:16.380 --> 35:18.300
Du weißt nicht, minus R, dass er die Farbe macht.

35:19.760 --> 35:20.280
Also, guck mal hier.

35:20.280 --> 35:21.360
Was installiert der?

35:21.640 --> 35:23.200
Acorn, was auch immer das ist.

35:23.900 --> 35:24.860
Am Projekt.

35:24.940 --> 35:25.640
Keine Ahnung.

35:26.900 --> 35:27.700
Cookie-Debug.

35:27.820 --> 35:28.440
Deep Merge.

35:29.780 --> 35:30.340
Cleor.

35:31.260 --> 35:32.340
Magic String.

35:33.780 --> 35:34.260
MS.

35:34.420 --> 35:35.080
Nano-ID.

35:35.720 --> 35:36.660
Pico Colors.

35:38.060 --> 35:38.540
Sirf.

35:41.060 --> 35:42.380
Viet und Vietfu.

35:43.620 --> 35:44.180
Zimmerframe.

35:45.480 --> 35:45.940
Zertke.

35:46.480 --> 35:46.920
Installiert.

35:46.920 --> 35:47.220
Ja, guck mal.

35:47.280 --> 35:48.060
Da installiert Zertke.

35:49.780 --> 35:51.320
Okay, dann starten wir das mal.

35:52.300 --> 35:54.100
Und gucken, wie es mit 12.5 aussieht.

35:54.480 --> 35:55.140
Achso, ne Moment.

35:55.240 --> 35:55.380
Moment.

35:55.520 --> 35:55.960
Das war mal nett.

35:56.000 --> 35:56.360
Das starten wir.

35:56.380 --> 35:56.520
Das war mal nett.

35:57.100 --> 35:59.260
Wir starten jetzt erstmal Visual Studio Code hier drinnen.

36:00.300 --> 36:02.440
Schieben Visual Studio Code auf den zweiten Bildschirm.

36:02.580 --> 36:03.800
Und jetzt starten wir den Camp.

36:04.100 --> 36:04.240
So.

36:06.080 --> 36:07.440
Und jetzt können wir es auch rüberschieben.

36:07.600 --> 36:11.060
So, Demo-Anwendung sieht noch genauso aus wie die alte Demo-Anwendung.

36:11.880 --> 36:15.780
Nur, dass es jetzt Svelte 5 ist.

36:17.920 --> 36:18.440
Source.

36:19.720 --> 36:21.380
Was fällt mir denn auf?

36:21.560 --> 36:22.720
Als erstes.

36:26.380 --> 36:28.360
Dass ich nicht weiß, wo meine...

36:28.360 --> 36:29.700
Sag ich jetzt mal eine Startzeit.

36:30.040 --> 36:33.380
Gut, da kann da noch nichts auffallen, weil das mehr oder weniger plain HTML ist.

36:33.800 --> 36:34.780
Ohne Spirenzien.

36:37.030 --> 36:38.110
Svelte ist feife...

36:38.110 --> 36:39.630
Ja, Svelte ist richtig feife.

36:41.430 --> 36:43.150
So, und jetzt können wir das mal vergleichen.

36:43.150 --> 36:45.350
Was der Unterschied ist zwischen 4 und 5.

36:46.230 --> 36:50.270
Zum Beispiel eine Sache, die sehr kontrovers war.

36:50.530 --> 36:52.590
Also als Svelte 5 angekündigt wurde.

36:53.590 --> 36:55.530
Announcing Svelte 5.

36:58.050 --> 36:59.350
Svelte 5.

37:05.010 --> 37:05.130
Ja.

37:05.750 --> 37:10.390
Das war so eines der ersten Sachen, die bekannt wurde über Svelte 5.

37:11.090 --> 37:12.750
Das haben die dann hier gezeigt.

37:13.290 --> 37:21.780
Und da war dann auf Reddit, gingen sie alle wieder ab, dass sie das scheiße finden.

37:22.660 --> 37:26.640
Und ein paar fanden es auch gut, aber der überwiegende Teil fand es ziemlich kacke.

37:27.480 --> 37:30.260
Ich musste mich auch erst mal am Anfang dran gewöhnen.

37:47.240 --> 37:51.260
Naja, zumindest ist das jetzt der Unterschied zwischen alt und neu.

37:51.260 --> 37:52.400
Also früher hat man...

37:52.400 --> 37:54.320
Wir nehmen das ja einfach mal als Beispiel.

37:54.480 --> 37:55.840
Ja, wir kopieren uns das mal als Beispiel.

37:56.520 --> 37:57.740
Ja, cute chat.

37:59.000 --> 38:01.600
Wenn man das...

38:01.600 --> 38:01.780
Ja.

38:02.180 --> 38:04.840
Also früher hat man State so deklariert.

38:04.980 --> 38:07.180
Also man hat überhaupt nicht erkannt, dass das State ist.

38:07.620 --> 38:10.700
Das war in Svelte in gewisser Weise irgendwie magic.

38:14.400 --> 38:17.920
Da hat man eine Variable deklariert im Skriptteil und konnte das dann hier verwenden.

38:25.420 --> 38:27.380
Ich meine, das ist ein bisschen minimalistisch, das Beispiel.

38:30.180 --> 38:32.060
Weil hier auch nichts geupdatet wird.

38:32.180 --> 38:34.180
Oder irgendwas passiert.

38:38.920 --> 38:42.040
Zumindest in Svelte 5 ist das gleiche Beispiel.

38:42.220 --> 38:43.060
Ein Ticken länger.

38:44.660 --> 38:45.060
Und...

38:45.060 --> 38:50.500
Also der einzige Unterschied zwischen Svelte 4 und 5 ist, dass du hier noch State drumherum machen musst.

38:50.980 --> 38:52.800
Also dass das hier nicht mehr automatisch passiert.

38:53.600 --> 38:57.120
Ich fand es am Anfang doof, als ich das erste Mal das Beispiel gesehen habe.

38:57.400 --> 39:00.480
Habe ich mir gedacht, warum muss man das noch...

39:00.480 --> 39:04.700
Also warum muss man da noch was drumherum schreiben, wenn man das noch automatisch machen kann?

39:05.540 --> 39:11.480
Ich glaube, den Vorteil erkennt man erst, wenn man ein bisschen mehr als 3-4 Variablen hat.

39:13.300 --> 39:16.900
Spätestens wenn man Variablen anlegen will, die kein...

39:16.900 --> 39:17.360
Wie soll man sagen?

39:17.700 --> 39:20.840
Kein State sind, den du irgendwie im View verwenden willst.

39:22.460 --> 39:26.760
Aber Svelte automatisch das versucht irgendwie zu tracken, dann bringt es wahrscheinlich was.

39:27.440 --> 39:28.600
Mir fehlt mir ein bisschen die Erfahrung.

39:29.580 --> 39:35.520
Auf der anderen Seite, auch als jemand, der jetzt nicht hauptberuflich als Frontendentwickler arbeitet,

39:35.540 --> 39:39.120
eine Sache, die ich an der neuen Syntax persönlich ganz gut finde, ist,

39:40.800 --> 39:46.400
dass man eben halt genau sieht, wann was Reactive ist und wann nicht.

39:52.500 --> 39:54.000
Oder ist Reactive das richtige Wort?

39:59.970 --> 40:07.090
Also das ist der Unterschied zwischen Svelte 4 und Svelte 5, wenn es um State geht.

40:07.190 --> 40:10.070
Ich weiß nicht, ob man dazu Reactive sagen darf.

40:12.740 --> 40:14.220
Weil ist es ja im Endeffekt auch.

40:15.720 --> 40:18.900
Du kannst jetzt da ja auch Two-Way-Binding oder sowas machen.

40:18.900 --> 40:19.080
Oder?

40:19.620 --> 40:24.500
Man kann ja auch zum Beispiel an der Stelle jetzt sagen, hier, das ist, das ist, ihr Count, ja.

40:25.200 --> 40:26.940
Count fängt an mit 1.

40:27.960 --> 40:28.580
Ja, ja.

40:30.950 --> 40:40.190
Fängt an mit 1 und dann machen wir irgendwie einen Button dahin und sagen hier On, Klick.

40:40.410 --> 40:41.710
Das geht übrigens jetzt auch anders.

40:41.830 --> 40:43.970
Ich glaube, man kann jetzt einfach sagen, direkt On, Klick.

40:44.630 --> 40:46.190
Also, On, Klick.

40:50.230 --> 40:52.010
Und dann sagen wir jetzt hier Count.

40:53.410 --> 40:53.810
Count.

40:54.350 --> 40:55.570
Und jetzt riecht hier Plus, Plus.

40:56.190 --> 40:57.170
Und jetzt sollte...

40:57.170 --> 41:02.090
Und jetzt sollte der hochzählen, wenn ich hier unten draufklicke.

41:03.810 --> 41:05.890
Also sieht man, das geht Two-Way.

41:06.130 --> 41:10.970
Das geht einmal in den View rein und einmal quasi von Interaktiv klicken, dann auch wieder.

41:17.000 --> 41:17.180
So.

41:17.580 --> 41:20.720
Und ich glaube, das Problem, was die versuchen damit zu lösen ist,

41:21.960 --> 41:25.740
dass wenn ich jetzt noch mehr solcher Dinge habe, hier Count, hier was weiß ich,

41:25.740 --> 41:27.180
wenn ich mal angenommen habe, ich habe jetzt Name.

41:28.020 --> 41:29.340
Und das soll halt...

41:29.340 --> 41:33.500
Das soll halt wirklich nur intern in meinem JavaScript hier oben verwendet werden.

41:34.200 --> 41:40.860
Dann würde Svelte das trotzdem tracken, ob damit nicht was passiert.

41:41.320 --> 41:43.180
Obwohl man eigentlich genau weiß, es passiert nichts damit.

41:44.480 --> 41:47.420
Und in Svelte 5 passiert das nicht, weil man sagen muss, hier Dollar State.

41:50.540 --> 41:52.600
Das sieht mir zu sehr nach PHP aus.

41:56.120 --> 41:58.180
Das sieht legit null aus wie PHP.

42:06.040 --> 42:07.900
Ich meine, es ist JavaScript und HTML.

42:09.300 --> 42:12.000
Das machst du inline in PHP oftmals auch, ja.

42:14.700 --> 42:16.400
Das Ding ist nur...

42:16.400 --> 42:22.520
Das Ding ist nur, wie verwendet man das jetzt?

42:22.680 --> 42:26.300
Also, machen wir da mal jetzt Svelte 5 draus, ja.

42:26.460 --> 42:28.700
Dollar State muss da im Endeffekt bloß hin.

42:29.520 --> 42:30.380
Dollar State.

42:33.090 --> 42:34.150
Und es funktioniert wieder, ne?

42:34.730 --> 42:35.030
Nice.

42:35.890 --> 42:37.870
Ansonsten muss man da nichts ändern.

42:39.230 --> 42:41.310
Muss man das nicht irgendwie includen oder so?

42:41.310 --> 42:42.370
Include State?

42:42.730 --> 42:45.890
Das scheint Standard Library zu sein.

42:46.430 --> 42:52.090
Okay, und das in den Klammern ist der Initial Value.

42:52.390 --> 42:56.530
Dollar State ist insofern schon mal ein bisschen verwirrend für mich,

42:56.990 --> 42:59.630
weil Dollar war in Svelte immer Stores.

42:59.990 --> 43:02.010
Aber das scheint jetzt kein Store zu sein.

43:04.010 --> 43:05.550
Das ist jetzt irgendwas anderes.

43:05.610 --> 43:07.930
Moment, das ist die TypeScript-Definition.

43:08.030 --> 43:09.230
Das ist jetzt irgendwas anderes.

43:10.950 --> 43:11.150
Gut.

43:11.590 --> 43:12.810
Wie dem auch sei, das von...

43:12.810 --> 43:15.150
Ich muss mal den Hintergrund hier ein bisschen anders machen.

43:15.710 --> 43:16.230
Das sieht ja...

43:16.230 --> 43:17.330
Sieht ja abartig aus.

43:40.390 --> 43:41.010
Ach so.

43:42.110 --> 43:43.710
Moment, wir haben ja gar keinen Tailwind.

43:44.110 --> 43:48.890
Wie macht man mit Plain CSS Background Color?

43:50.150 --> 43:51.030
Machen wir irgendwas?

43:51.210 --> 43:51.650
Keine Ahnung.

43:51.930 --> 43:53.270
Was ist eine schöne Background Color?

44:02.110 --> 44:02.510
Monkeys.

44:04.630 --> 44:05.610
Ah, hier ist...

44:05.610 --> 44:06.750
Alter, sieht das kacke aus.

44:07.390 --> 44:08.610
Kann man da nicht irgendwas...

44:08.610 --> 44:10.890
Kann man da nicht irgendwie ein bisschen angenehmeres verwenden, so?

44:11.770 --> 44:12.730
Ja.

44:15.370 --> 44:16.190
Ach, das ist Alpha.

44:16.330 --> 44:16.910
Alpha will ich nicht.

44:18.130 --> 44:19.490
Irgendwie sowas hier oder so.

44:23.920 --> 44:26.260
Ja, okay, schon nicht mal ganz so schlimm.

44:30.990 --> 44:33.990
Oder kannst du Syntax aus 4 und auch in 5 verwenden?

44:34.710 --> 44:39.590
Also, Freezei, dankeschön für den Sub 420.

44:39.910 --> 44:40.750
Proc Subscription.

44:41.250 --> 44:43.490
Oder kannst du Syntax aus 4 auch in 5 verwenden?

44:44.030 --> 44:48.830
Also, soweit ich das gelesen habe, kannst du die alten Syntax weiterverwenden?

44:48.830 --> 44:48.910
Ja.

44:50.310 --> 44:54.650
Du musst nicht jetzt deine komplette Anwendung umschreiben, wenn du Upgradest auf Svelte 5.

44:55.930 --> 45:00.230
Was wohl Probleme machen kann, ist, oder was schlicht und ergreifend dann gar nicht kompiliert ist,

45:00.830 --> 45:06.550
manche Svelte 5 Konstrukte im gleichen File mit manchen Svelte 4 Konstrukten.

45:07.070 --> 45:12.130
Also, was wohl nicht funktionieren muss, ist Dollar State und die alte...

45:12.130 --> 45:16.110
und diese alte Schreibweise.

45:16.490 --> 45:17.170
Da mag er nicht.

45:18.430 --> 45:19.170
Guck, da sagt...

45:20.310 --> 45:23.030
Dollar Doppelpunkt ist not allowed in Runes Mode.

45:24.310 --> 45:31.850
Das ist die alte Schreibweise für mach irgendwas reaktiv und update das immer, wenn davon sich was ändert.

45:32.550 --> 45:34.430
Das kann man nicht verwenden zusammen mit der neuen.

45:34.430 --> 45:42.570
Aber was du machen kannst ist, wenn du jetzt eine Komponente hast, die noch mit der Svelte 4 Syntax geschrieben ist,

45:42.630 --> 45:44.790
dann kannst du sie in ein Svelte 5 Projekt einbinden.

45:45.230 --> 45:46.430
Beziehungsweise kannst du die auch weiterhin...

45:47.390 --> 45:48.250
Hast du ja gesehen.

45:48.890 --> 45:49.430
Ne, ich kann es auch weiterhin...

45:49.430 --> 45:50.150
Ich kann es auch weiterhin...

45:50.150 --> 45:50.290
Ich kann es auch weiterhin...

45:50.290 --> 45:50.830
Ich kann es auch weiterhin so machen.

45:51.730 --> 45:53.170
Und das funktioniert jetzt auch.

45:55.660 --> 46:00.120
Also man kann bloß manche Sachen nicht zusammen im gleichen File verwenden.

46:00.840 --> 46:04.640
Aber im besten Fall macht man diese einzelnen Komponenten, falls er eh halbwegs übersichtlich.

46:05.460 --> 46:06.580
Class machen wir jetzt mal nicht.

46:06.680 --> 46:07.340
Class Style.

46:08.880 --> 46:09.400
Text.

46:10.620 --> 46:10.920
Color?

46:11.740 --> 46:12.800
Ne, ne, Moment.

46:12.940 --> 46:14.780
Es ist einfach nur Color in CSS, oder?

46:15.700 --> 46:15.900
Ja.

46:16.760 --> 46:17.280
Excellent.

46:18.960 --> 46:20.060
Massive Web Design.

46:21.920 --> 46:22.960
Font.

46:23.260 --> 46:23.720
Family.

46:28.680 --> 46:29.100
Wow.

46:29.480 --> 46:29.920
Huge.

46:31.020 --> 46:32.360
Massive Web Design.

46:32.500 --> 46:33.800
So Skills wieder am Start hier.

46:36.020 --> 46:37.120
Magst du ans Trinken erinnern?

46:37.220 --> 46:37.340
Ja.

46:37.620 --> 46:38.380
Mein Wasser ist leer.

46:38.460 --> 46:39.320
Ich hab nur noch ein bisschen hier.

46:40.560 --> 46:41.000
So.

46:41.220 --> 46:42.000
Also es geht weiter.

46:42.880 --> 46:43.660
Declare State.

46:43.740 --> 46:46.360
Wissen wir jetzt, dass das funktioniert mit Dollar State?

46:47.940 --> 46:49.100
Ich mein, das hat vorher auch schon funktioniert.

46:49.220 --> 46:50.760
Das war jetzt recht übersichtlich.

46:51.860 --> 46:53.820
You have Docker installed on your system.

46:53.820 --> 46:54.820
Ja, no shit Microsoft.

46:55.540 --> 47:01.140
Sagt mal, sind die, sind die Icons hier nebenanders als früher?

47:02.200 --> 47:03.340
Oder bin ich einfach nur für...

47:03.340 --> 47:11.540
Möchte mir Microsoft irgendwas mitteilen, dass die C++ Extensions ganz oben stehen?

47:12.840 --> 47:15.800
Ne, die sind wahrscheinlich einfach alphabetisch sortiert.

47:26.760 --> 47:28.720
Ja, das alles ohne Konzeptzeichnung.

47:29.960 --> 47:39.180
So, jetzt geht's weiter mit Update State.

47:44.180 --> 47:44.420
Gut.

47:44.700 --> 47:46.860
Das haben wir ja schon mehr oder weniger gerade ausprobiert.

47:46.860 --> 47:48.180
In dem ich hier unten bei dem...

47:48.180 --> 47:50.100
Bei dem Button der ganzen Sache was zugeordnet hab.

47:51.420 --> 47:53.000
Also sprich, das müssen wir nicht ausprobieren.

47:54.380 --> 47:55.460
Ändert sich nix.

47:56.100 --> 47:57.580
Bleibt weiterhin, dass man Dollar State...

47:57.580 --> 47:58.600
Computed State.

47:59.240 --> 47:59.480
Okay.

48:00.060 --> 48:06.440
Jetzt, jetzt wird's spannend, weil in Svelte 4, und das ist das, was viele extrem mochten an Svelte,

48:06.920 --> 48:11.180
ist diese Syntax hier, dass man Sachen Reactive macht,

48:11.640 --> 48:15.400
beziehungsweise automatisch sich ändern lässt,

48:15.400 --> 48:17.400
wenn es Abhängigkeiten untereinander...

48:18.180 --> 48:20.180
Also was man in Svelte 4 machen konnte...

48:20.180 --> 48:23.180
Machen wir jetzt mal, machen wir jetzt mal ein Beispiel, ja?

48:23.180 --> 48:25.180
Oder brauchen wir das gar nicht, machen wir das mal weg.

48:25.180 --> 48:28.180
Also was man, was man in Svelte 4 machen konnte, ist...

48:28.180 --> 48:30.180
Man kann zum Beispiel...

48:30.180 --> 48:34.180
Das einfachste Beispiel ist wahrscheinlich mit nem, mit nem Console-Log, ja?

48:34.180 --> 48:38.180
Also mal angenommen, ich möchte jetzt was ausführen, jedes Mal, wenn sich Count ändert.

48:38.180 --> 48:41.180
Dann konntest du in Svelte 4 einfach sowas hier sagen, ja?

48:41.180 --> 48:43.180
Log Count.

48:43.180 --> 48:45.180
Und jedes Mal...

48:45.180 --> 48:47.180
Guckt, seht ihr's hier unten?

48:47.180 --> 48:48.020
Jedes Mal...

48:48.020 --> 48:52.020
Jedes Mal, wenn sich Count ändert, wird das hier ausgeführt.

48:52.020 --> 48:56.020
Das war so diese Reactivity-Syntax von Svelte 4.

48:56.020 --> 48:59.020
Und das haben ganz viele Leute extrem gemocht an Svelte.

48:59.020 --> 49:02.020
Das war so für viele so ein bisschen wie damals in Vue 2,

49:02.020 --> 49:07.020
eben diese so Klassenschreibweise von den Komponenten, die viele gut fanden.

49:07.020 --> 49:09.020
Das haben viele extrem gemocht in Svelte.

49:09.020 --> 49:11.020
Und das gibt es in der Form jetzt nicht mehr.

49:11.020 --> 49:15.020
Ja, und nächstes Beispiel, was man hier drinnen machen kann zum Beispiel, ist...

49:15.020 --> 49:16.020
Ja, okay.

49:16.020 --> 49:17.020
Ich will jetzt jedes Mal...

49:17.020 --> 49:24.020
Jedes Mal irgendwie, wenn sich Count ändert, will ich irgendwas damit machen.

49:24.020 --> 49:25.020
Ja, zum Beispiel könnt ihr sagen...

49:25.020 --> 49:26.020
Let...

49:26.020 --> 49:27.020
Let name...

49:27.020 --> 49:29.020
Cackle oder so.

49:29.020 --> 49:30.020
So, und jetzt geben wir nicht...

49:30.020 --> 49:35.020
Jetzt geben wir nicht Count aus, sondern geben Name aus.

49:35.020 --> 49:41.020
Und jedes Mal, wenn sich eben Count ändert, sage ich name gleich...

49:41.020 --> 49:44.020
Ja, name plus...

49:44.020 --> 49:46.020
Das ist jetzt JavaScript, dass das funktioniert.

49:46.020 --> 49:48.020
Oh, guckt.

49:48.020 --> 49:54.080
Das geht auch nur in JavaScript.

49:54.080 --> 49:57.080
Einen String und eine Eins und einen Plus.

49:57.080 --> 49:58.080
Keine Ahnung.

49:58.080 --> 50:00.080
Fragt nicht, aber das funktioniert.

50:00.080 --> 50:05.220
Das war so die Reactivity Syntax von Svelte 4.

50:05.220 --> 50:06.220
So, das hat sich jetzt geändert.

50:06.220 --> 50:09.220
Und zwar kann man...

50:09.220 --> 50:10.220
Ach so, das war die...

50:10.220 --> 50:12.220
Das war die Kurzschreibweise.

50:12.220 --> 50:14.220
Das war die Kurzschreibweise von dem, was ich euch gezeigt habe.

50:14.220 --> 50:20.220
Also, anstatt das so zu machen, könnte ich auch, solange es einzeilig bleibt...

50:20.220 --> 50:21.220
Das war auch so ein Ding, was mich immer ein bisschen genervt hat.

50:21.220 --> 50:23.220
Ins Svelte 4.

50:23.220 --> 50:25.220
Dass das nur einzeilig ging.

50:25.220 --> 50:26.220
Ja.

50:26.220 --> 50:32.540
Ja, also sprich, anstatt so, hätte ich quasi auch schreiben können...

50:32.540 --> 50:39.380
Dollar name gleich name...

50:39.380 --> 50:42.380
Ich weiß gar nicht, ob das funktioniert hätte überhaupt.

50:42.380 --> 50:45.820
Plus 1?

50:45.820 --> 50:46.820
Könnte ich das hier wegmachen?

50:46.820 --> 50:47.820
Keine Ahnung, ob das Funs...

50:47.820 --> 50:49.820
Not the number?

50:49.820 --> 50:50.820
Nee, Funs gar nicht.

50:50.820 --> 50:51.820
Guck mal.

50:51.820 --> 50:52.820
Ha.

50:52.820 --> 50:53.820
Ah, nee, nicht plus 1.

50:53.820 --> 50:54.820
Plus Count.

50:54.820 --> 50:55.820
Ich kann...

50:55.820 --> 50:59.200
Nee, das geht gar nicht.

50:59.200 --> 51:01.200
Wahrscheinlich, weil das nicht belegt ist.

51:01.200 --> 51:05.240
Ah, jetzt...

51:05.240 --> 51:06.240
Jetzt...

51:06.240 --> 51:07.240
Jetzt...

51:07.240 --> 51:10.240
So, und das haben sie jetzt abgeschafft.

51:10.240 --> 51:13.240
Das haben sie jetzt abgeschafft.

51:13.240 --> 51:18.240
Und die neue Syntax ist jetzt explizit...

51:18.240 --> 51:25.240
Dass man explizit definieren muss, wenn man Abhängigkeiten hat.

51:25.240 --> 51:29.240
So genau, warum das derived heißt, habe ich ehrlich gesagt...

51:29.240 --> 51:33.830
Nur semi-kapiert.

51:33.830 --> 51:34.830
Hm.

51:34.830 --> 51:35.830
Ach so, Moment.

51:35.830 --> 51:52.290
Derived, dann muss das hier Dollar State sein, dass das funktioniert, oder?

51:52.290 --> 51:57.290
Derived wahrscheinlich, weil das, was in derived drinne steht, hier hinten dann die Abhängigkeiten

51:57.290 --> 51:58.290
sind.

51:58.290 --> 52:03.290
Also, das ist jetzt nicht mal Magic, wie in Svelte 4, wo das hier im Endeffekt dafür

52:03.290 --> 52:06.290
gesorgt hat, dass der gepasst hat, so, was ist da hinten drinne?

52:06.290 --> 52:07.290
Ist das Reactive?

52:07.290 --> 52:08.290
Wie hängt das von ab?

52:08.290 --> 52:12.290
Jetzt musst du explizit sagen, ey, ich will eine Variable haben.

52:12.290 --> 52:16.290
Und wenn sich an dieser Variable was ändert, möchte ich das hier neu ausführen.

52:16.290 --> 52:18.290
Das geht halt mit dieser derived-Geschichte.

52:18.290 --> 52:23.290
Übrigens, ich habe bis heute nicht gecheckt, warum sich das Runes nennt.

52:23.290 --> 52:25.290
Brauche mir nicht ein cooles Wort für.

52:25.290 --> 52:35.340
Ja, also, ich könnte da jetzt natürlich auch sowas hier machen.

52:35.340 --> 52:38.340
Kekkel plus Count.

52:38.340 --> 52:40.340
Und dann wird das auch hochzählen.

52:40.340 --> 52:45.290
Wo ich mir nicht ganz sicher bin...

52:45.290 --> 52:47.290
Geht sowas?

52:47.290 --> 52:49.290
Wahrscheinlich nicht, oder?

52:49.290 --> 52:50.290
Nee.

52:50.290 --> 52:51.290
Das mag er nicht.

52:51.290 --> 52:53.290
Also, man kann da nicht auf sich selbst referenzieren.

52:53.290 --> 52:54.290
Okay.

52:54.290 --> 53:02.840
Ich bin mir ehrlich gesagt auch nicht sicher, wie oft ich das verwenden werde, weil so einzeilige

53:02.840 --> 53:04.840
Sachen reichen mir meistens nicht.

53:04.840 --> 53:11.840
Die Frage ist jetzt ja auch, kann man dort, kann man dort irgendwie sowas?

53:11.840 --> 53:17.290
Achso, ja gut.

53:17.290 --> 53:18.290
Name.

53:18.290 --> 53:19.290
Okay.

53:19.290 --> 53:20.290
Warte mal, ich schreibe wieder Count rein.

53:20.290 --> 53:25.290
Kann man, kann man da sowas machen, wie ausführen bei jedem, bei jeder State-Änderung?

53:25.290 --> 53:30.670
Wird auch nicht funktioniert.

53:30.670 --> 53:31.670
Wird auch nicht funktionieren, oder?

53:31.670 --> 53:32.670
Nee, das mag der nicht.

53:32.670 --> 53:36.580
Das ist irgendein Objekt, das ist keine Function.

53:36.580 --> 53:37.580
Aber ich kann bestimmt sowas machen, ne?

53:37.580 --> 53:38.580
Haben wir das nicht ausgeführt.

53:38.580 --> 53:39.580
Okay, keine Ahnung.

53:39.580 --> 53:40.580
Kann man andere derived Variablen in derived reinmachen?

53:40.580 --> 53:41.580
Das ist eine gute Frage.

53:41.580 --> 53:45.370
Das probieren wir mal aus.

53:45.370 --> 53:46.370
Wollen wir nochmal.

53:46.370 --> 53:47.370
Name.

53:47.370 --> 53:51.150
So.

53:51.150 --> 53:52.150
Name is derived from...

53:52.150 --> 53:53.150
Okay, jetzt machen wir mal...

53:53.150 --> 53:54.150
Name 2.

53:54.150 --> 53:55.150
Name 2 is derived from...

53:55.150 --> 53:56.150
Name 2 is derived from...

53:56.150 --> 53:57.150
Name 2.

53:57.150 --> 53:58.150
Name 2 is derived from...

53:58.150 --> 53:59.150
Name 2.

53:59.150 --> 54:00.150
Name 2.

54:00.150 --> 54:01.150
Name 2.

54:01.150 --> 54:02.150
Name 2.

54:02.150 --> 54:03.150
Name 2.

54:03.150 --> 54:04.150
Name 2.

54:04.150 --> 54:05.150
Name 2.

54:05.150 --> 54:06.150
Name 2.

54:06.150 --> 54:07.150
Name 2.

54:07.150 --> 54:08.150
Name 2.

54:08.150 --> 54:09.150
Name 2.

54:09.150 --> 54:13.640
Name 2.

54:13.640 --> 54:14.640
Name 2.

54:14.640 --> 54:15.640
Name 2.

54:15.640 --> 54:16.640
Name 2.

54:16.640 --> 54:17.640
Name 2.

54:17.640 --> 54:18.640
Name 2.

54:18.640 --> 54:22.810
Name 2.

54:22.810 --> 54:23.810
Name 2.

54:23.810 --> 54:24.810
Name 2.

54:24.810 --> 54:29.360
Name 2.

54:29.360 --> 54:30.360
Name 2.

54:30.360 --> 54:31.360
Name 2.

54:31.360 --> 54:32.360
Name 2.

54:32.360 --> 54:33.360
Name 2.

54:33.360 --> 54:34.360
Name 2.

54:34.360 --> 54:35.360
Name 2.

54:35.360 --> 54:36.360
Name 2.

54:36.360 --> 54:37.360
Name 2.

54:37.360 --> 54:38.360
Name 2.

54:38.360 --> 54:52.700
Name 2.

54:52.700 --> 54:53.700
Name 2.

54:53.700 --> 54:54.700
Name 2.

54:54.700 --> 54:55.700
Name 2.

54:55.700 --> 54:56.700
Name 2.

54:56.700 --> 54:57.700
Name 2.

54:57.700 --> 54:58.700
Name 2.

54:58.700 --> 54:59.700
Name 2.

54:59.700 --> 55:00.700
Name 2.

55:00.700 --> 55:01.700
Name 2.

55:01.700 --> 55:02.700
Name 2.

55:02.700 --> 55:03.700
Name 2.

55:03.700 --> 55:04.700
Name 2.

55:04.700 --> 55:05.700
Name 2.

55:05.700 --> 55:06.700
Name 2.

55:06.700 --> 55:07.700
Name 2.

55:07.700 --> 55:08.700
Name 2.

55:08.700 --> 55:09.700
Name 2.

55:09.700 --> 55:10.700
Name 2.

55:10.700 --> 55:11.700
Name 2.

55:11.700 --> 55:12.700
Name 2.

55:12.700 --> 55:13.700
Name 2.

55:13.700 --> 55:14.700
Name 2.

55:14.700 --> 55:15.700
Name 2.

55:15.700 --> 55:16.700
Name 2.

55:16.700 --> 55:38.020
Name 2.

55:38.020 --> 55:39.020
Name 2.

55:39.020 --> 55:40.020
Name 2.

55:40.020 --> 55:41.020
Name 2.

55:41.020 --> 55:42.020
Name 2.

55:42.020 --> 55:43.020
Name 2.

55:43.020 --> 55:44.020
Name 2.

55:44.020 --> 55:45.020
Name 2.

55:45.020 --> 55:46.020
Name 2.

55:46.020 --> 55:47.020
Name 2.

55:47.020 --> 55:52.340
Name 2.

55:52.340 --> 55:53.340
Name 2.

55:53.340 --> 55:54.340
Name 2.

55:54.340 --> 55:55.340
Name 2.

55:55.340 --> 55:57.500
keine Abbruchbedingungen hat, was ja wohl das Problem

55:57.500 --> 56:03.100
ist. Und dass sich

56:03.100 --> 56:05.180
das dann noch zwischen zwei Compiler-Versionen ändert

56:05.180 --> 56:06.980
von logisch zu unlogisch,

56:07.040 --> 56:08.160
ist ja auch nochmal bescheuert.

56:09.200 --> 56:11.080
Aber wir machen jetzt weiter mit Svelte 5.

56:13.540 --> 56:14.580
Also das funktioniert schon mal.

56:15.420 --> 56:16.460
Jetzt habe ich mal eine Frage

56:16.460 --> 56:17.300
an euch, Chat.

56:18.700 --> 56:20.040
Welche der beiden Sachen

56:20.040 --> 56:21.440
denkt ihr ist besser?

56:23.800 --> 56:24.340
Nehmen wir

56:24.340 --> 56:26.340
jetzt, nehmen wir mal das Beispiel hier

56:26.340 --> 56:27.940
hier unten. Da hat man halt die zwei Sachen drin.

56:27.940 --> 56:30.060
Also, das ist die Svelte 4

56:30.060 --> 56:32.160
Variante. Das ist so quasi der Klassiker,

56:32.280 --> 56:33.320
den ganz viele mochten.

56:34.140 --> 56:34.600
Also sprich,

56:35.900 --> 56:37.800
ohne dass du explizit sagen musst,

56:37.880 --> 56:39.200
hier, tracke mir die Variable.

56:39.800 --> 56:41.760
Ohne dass du hier explizit sagen musst,

56:42.520 --> 56:43.980
sei reactive, wenn sich

56:43.980 --> 56:44.700
was ändert.

56:46.580 --> 56:48.100
Bevor ich jetzt sage, was ich denke,

56:48.240 --> 56:49.080
frage ich mal, was ihr denkt.

56:49.800 --> 56:51.920
Was findet ihr besser? Man könnte

56:51.920 --> 56:53.380
auf den ersten Blick natürlich schon sagen, ey,

56:53.820 --> 56:55.520
warum machen wir es komplizierter?

56:55.900 --> 56:57.100
Svelte 5 ist ja doppelt

56:57.100 --> 56:59.640
gemoppelt irgendwie hier mit den Dingen.

56:59.760 --> 57:01.320
Also, Svelte 5 ist im Endeffekt nur länger.

57:06.720 --> 57:07.800
Für jemanden, der die Sprache

57:07.800 --> 57:09.520
zum ersten Mal sieht, ist das neue besser.

57:09.760 --> 57:11.900
Okay. Also, viele mochten

57:11.900 --> 57:13.800
ja gerade das hier und sind deswegen bei Svelte

57:13.800 --> 57:15.960
hängen geblieben. Also, unter anderem mochten sie so was hier.

57:17.420 --> 57:17.580
Also,

57:17.820 --> 57:19.520
ich muss sagen, für

57:19.520 --> 57:21.920
um Leute

57:21.920 --> 57:23.780
zu beeindrucken, um zu sagen, boah,

57:23.820 --> 57:25.860
ist das eine coole Sache, ist die Svelte 4

57:25.860 --> 57:26.560
so ein Tags besser.

57:31.330 --> 57:32.250
Aber für

57:32.250 --> 57:34.390
Klarheit,

57:34.710 --> 57:37.330
dass das, was du siehst, auch das

57:37.330 --> 57:37.710
ist,

57:39.210 --> 57:41.510
ja, also das, was du erwartest,

57:41.970 --> 57:43.210
auch das ist, was passiert

57:43.210 --> 57:44.950
und dass man die,

57:46.530 --> 57:47.410
dass man es auch besser

57:47.410 --> 57:49.290
erkennt, was Reactive ist

57:49.290 --> 57:51.290
und was nicht. Also, im Gegensatz

57:51.290 --> 57:53.050
zu Undefined Behavior und C++,

57:53.330 --> 57:55.030
wo eine Endlosschleife und Abbruchbedingungen

57:55.030 --> 57:57.050
Dinger macht, die sie nicht machen sollte,

57:57.370 --> 57:58.470
finde ich Svelte 5 besser.

58:03.360 --> 58:05.000
Aber gibt es denn jetzt mehrzeitige

58:05.000 --> 58:06.880
Computed States analog zu

58:06.880 --> 58:08.740
Sternchen, Doppelpunkt,

58:08.780 --> 58:10.800
das habe ich mich auch gerade gefragt,

58:10.980 --> 58:13.000
ja, das habe ich mir auch gerade gefragt,

58:13.100 --> 58:14.940
das habe ich zumindest in dem Beispiel nicht

58:14.940 --> 58:21.050
gefunden, deswegen habe ich ja

58:21.050 --> 58:21.790
eben probiert,

58:23.090 --> 58:24.530
ob man da nicht jetzt irgendwie, sagen wir mal,

58:24.590 --> 58:26.030
zum Beispiel,

58:27.170 --> 58:27.890
ich habe eine Idee,

58:28.950 --> 58:30.850
Dollar Effect, ja, aber das kommt wahrscheinlich

58:30.850 --> 58:32.970
gleich noch, weiß ich nicht, jetzt habe ich auch schon

58:32.970 --> 58:33.930
diese, also,

58:35.170 --> 58:36.990
was man vielleicht machen

58:36.990 --> 58:37.750
kann, ist,

58:39.170 --> 58:40.530
sieht das eigentlich bei sowas hier aus,

58:45.910 --> 58:46.410
hehehe,

58:47.030 --> 58:48.750
nicht wirklich,

58:49.450 --> 58:51.450
das wäre jetzt fast schon React,

58:51.730 --> 58:55.110
äh, jetzt muss ich wahrscheinlich

58:55.110 --> 58:55.790
Klammer machen,

58:58.280 --> 58:59.080
das funzt,

58:59.980 --> 59:02.380
das funzt, das ist aber, glaube ich, nicht

59:02.380 --> 59:03.760
im Sinne des Erfinders, oder?

59:04.760 --> 59:05.800
Wenn man das so macht,

59:06.840 --> 59:08.600
das funktioniert,

59:12.240 --> 59:13.020
das ist aber, glaube ich,

59:13.020 --> 59:14.420
nicht so gedacht, ehrlich gesagt,

59:15.540 --> 59:17.040
und das sieht auch schon ein bisschen

59:17.040 --> 59:18.900
hässlich aus, wobei man immer noch

59:18.900 --> 59:20.840
sagen muss, man versteht tatsächlich ganz gut, was

59:20.840 --> 59:22.660
funzt, was passiert,

59:22.700 --> 59:29.200
ja, also, alles in allem,

59:29.320 --> 59:31.200
das hat ja sehr viel, für sehr viele

59:31.200 --> 59:33.460
Diskussionen und Kontroverse gesorgt,

59:33.560 --> 59:35.140
am Anfang von 2005, von der

59:35.140 --> 59:35.600
Ankündigung,

59:36.120 --> 59:38.480
ich fand es auch am Anfang doof,

59:39.420 --> 59:41.240
aber es ist schwer zu beschreiben,

59:41.520 --> 59:42.660
kennt ihr das, ihr habt so einen,

59:42.980 --> 59:45.040
als Programmierer, oder auch als Admin, oder

59:45.040 --> 59:46.700
generell, als jemand, der in IT arbeitet,

59:47.140 --> 59:49.500
hat man so einen gewissen inneren

59:49.500 --> 59:51.520
Ordnungssinn,

59:51.880 --> 59:53.280
man hat bei Sachen, die richtig

59:53.280 --> 59:55.160
aussehen, ein gutes Gefühl, wisst ihr,

59:55.160 --> 59:55.760
was ich meine?

59:56.820 --> 59:59.060
Und ich habe, wenn ich die Svelte 5

59:59.060 --> 01:00:01.120
so einen Tag sehe, das bessere

01:00:01.120 --> 01:00:03.260
Gefühl, als bei der

01:00:03.260 --> 01:00:05.160
Vierer, die Vierer ist so magic,

01:00:06.200 --> 01:00:07.280
und du

01:00:07.280 --> 01:00:08.920
erkennst vom Angucken her,

01:00:09.420 --> 01:00:11.220
nicht genau, es sei denn, du kennst

01:00:11.220 --> 01:00:13.000
Svelte gut, was es macht,

01:00:13.880 --> 01:00:15.380
wohingegen du die Svelte 5

01:00:15.380 --> 01:00:16.980
so einen Tag anguckst, und dir eigentlich

01:00:16.980 --> 01:00:19.060
sofort klar ist, okay, hier passiert

01:00:19.060 --> 01:00:20.780
irgendwas mit, vielleicht weißt du nicht

01:00:20.780 --> 01:00:22.700
hundertprozentig genau was, aber du siehst schon mal, okay,

01:00:23.100 --> 01:00:24.980
das ist keine normale Variable,

01:00:29.440 --> 01:00:30.360
also ich muss sagen, ich

01:00:30.380 --> 01:00:31.700
finde das Svelte 5 besser.

01:00:35.780 --> 01:00:37.700
Findest du, dass Svelte 5 weniger intuitiv

01:00:37.700 --> 01:00:42.500
aussieht? Ich finde, es ist viel

01:00:42.500 --> 01:00:43.240
eindeutiger,

01:00:44.240 --> 01:00:45.780
was es macht.

01:00:52.200 --> 01:00:53.780
Ja, nimm Svelte, Svelte ist nice.

01:00:55.990 --> 01:00:57.010
Es gibt schon ein Release Date,

01:00:57.150 --> 01:00:58.070
irgendwann 2024.

01:01:06.420 --> 01:01:08.200
Ach ja, und ein weiterer Nachteil

01:01:08.200 --> 01:01:09.800
ist natürlich, von der

01:01:09.800 --> 01:01:10.720
Svelte 4 Geschichte,

01:01:11.900 --> 01:01:14.080
dass Svelte alles, was du hinschreibst,

01:01:14.080 --> 01:01:15.220
irgendwie tracken muss.

01:01:16.620 --> 01:01:17.980
Und hier nur das, was du

01:01:17.980 --> 01:01:19.640
explizit markierst, als das,

01:01:19.740 --> 01:01:21.080
was getrackt werden muss.

01:01:25.610 --> 01:01:27.270
Also ich glaube, das hat mehrere Vorteile.

01:01:27.410 --> 01:01:29.470
Über die, sagen wir so, was schöner ist, kann man

01:01:29.470 --> 01:01:31.610
sich sicherlich drüber streiten, auch was intuitiver

01:01:31.610 --> 01:01:33.430
ist, kann man sich sicher drüber streiten, ja.

01:01:34.110 --> 01:01:35.570
Ich persönlich kann das

01:01:35.570 --> 01:01:37.470
Svelte 5 Sache tatsächlich mehr abgewinnen,

01:01:37.530 --> 01:01:39.090
jetzt, nachdem ich mir das ein paar Mal angeguckt hab,

01:01:39.830 --> 01:01:40.790
als das Svelte 4 Sache.

01:01:41.770 --> 01:01:43.390
Aber es wird auch handfeste

01:01:43.390 --> 01:01:45.350
Vorteile haben, bei

01:01:45.350 --> 01:01:47.350
bisschen größeren Anwendungen. Ich glaube

01:01:47.350 --> 01:01:49.350
nicht, dass sie das einfach just for fun gemacht haben.

01:01:49.990 --> 01:01:51.290
Ich kann euch nicht sagen, was, weil ich

01:01:51.290 --> 01:01:53.250
keine größere Svelte-Anwendung irgendwie betreue,

01:01:53.350 --> 01:01:55.490
aber ich gehe davon aus, dass das noch weitere

01:01:55.490 --> 01:01:57.450
Vorteile haben wird. Und nicht nur, dass

01:01:57.450 --> 01:02:01.580
es schneller ist, wobei das

01:02:01.580 --> 01:02:03.200
bestimmt auch eines der Punkte sein wird.

01:02:06.000 --> 01:02:07.600
Die Seite zeigt ja nur an, was der

01:02:07.600 --> 01:02:09.320
Unterschied ist und nicht, was sie sich dabei gedacht haben.

01:02:09.700 --> 01:02:11.460
Da müsste man irgendwelche Blog-Posts lesen,

01:02:12.700 --> 01:02:13.740
ja, wie zum Beispiel hier

01:02:13.740 --> 01:02:14.260
das da.

01:02:16.320 --> 01:02:17.480
Okay, gucken wir mal weiter.

01:02:18.480 --> 01:02:19.560
Also so sieht das mit

01:02:19.560 --> 01:02:21.460
Variablen und State aus. Ich bin mal

01:02:21.460 --> 01:02:23.040
gespannt, was sie

01:02:23.040 --> 01:02:24.660
bei, was sie mit

01:02:24.660 --> 01:02:26.480
Stores

01:02:28.890 --> 01:02:30.970
jetzt machen. Weil ich habe im Vorfeld

01:02:30.970 --> 01:02:33.010
schon gelesen, es gibt keine Svelte-Stores

01:02:33.010 --> 01:02:37.860
mehr. Stores war,

01:02:37.980 --> 01:02:39.140
um es kurz zu erklären,

01:02:39.580 --> 01:02:41.680
Stores war eine Möglichkeit ins Welt

01:02:41.680 --> 01:02:44.000
Variablen anwendungsweit

01:02:44.000 --> 01:02:45.460
zur Verfügung zu stellen, quasi

01:02:45.460 --> 01:02:46.520
Global-Variablen.

01:02:47.660 --> 01:02:49.220
Also quasi sowas hier,

01:02:51.210 --> 01:02:52.030
nur global.

01:02:54.390 --> 01:02:56.490
Was durchaus sinnvoll ist, zum Beispiel

01:02:56.490 --> 01:02:58.310
stellt euch vor, euer User

01:02:58.310 --> 01:03:00.490
lockt sich ein und

01:03:00.490 --> 01:03:02.490
ihr braucht den Username auf

01:03:02.490 --> 01:03:04.490
mehreren Unterseiten in mehreren Unterkomponenten.

01:03:04.490 --> 01:03:06.490
Wie wollt ihr das

01:03:06.490 --> 01:03:08.490
hin, wie wollt ihr das

01:03:08.490 --> 01:03:10.490
sharen?

01:03:10.490 --> 01:03:12.490
Und da hast du beispielsweise

01:03:12.490 --> 01:03:14.490
einen Svelte-Store gemacht, der war dann

01:03:14.490 --> 01:03:16.490
anwendungsweit verfügbar und du konntest das in

01:03:16.490 --> 01:03:18.490
jeder Komponente importieren und dann konntest du

01:03:18.490 --> 01:03:20.490
auf den Username zugreifen.

01:03:20.490 --> 01:03:22.490
Das gibt es jetzt nicht mehr, habe ich gelesen. Moin,

01:03:22.490 --> 01:03:24.490
Sarix. Also weiter

01:03:24.490 --> 01:03:26.490
geht's. Update-State, Computed-State

01:03:26.490 --> 01:03:28.490
haben wir uns jetzt auch schon angeguckt.

01:03:28.490 --> 01:03:30.490
So, Templating.

01:03:30.490 --> 01:03:32.490
Geht's jetzt weiter.

01:03:32.490 --> 01:03:34.330
Mindest-State.

01:03:34.330 --> 01:03:36.330
Minimal-Template.

01:03:36.330 --> 01:03:41.500
Da ist legit

01:03:41.500 --> 01:03:43.500
kein Unterschied.

01:03:43.500 --> 01:03:48.340
Styling. Da ist

01:03:48.340 --> 01:03:50.340
auch kein Unterschied, oder?

01:03:50.340 --> 01:03:52.340
Seht ihr da

01:03:52.340 --> 01:04:01.800
einen Unterschied? Ne,

01:04:01.800 --> 01:04:05.620
ich sehe keinen Unterschied. Loop.

01:04:05.620 --> 01:04:13.030
LeLoop. Sehe ich auch keinen Unterschied.

01:04:13.030 --> 01:04:15.030
Ach ja, und

01:04:15.030 --> 01:04:17.030
übrigens, eines der coolen Sachen ist,

01:04:17.030 --> 01:04:19.030
ich hab's am Anfang ja schon gesagt, weil jemand gefragt

01:04:19.030 --> 01:04:21.030
hat, man kann Svelte 4

01:04:21.030 --> 01:04:23.030
Syntax auch in Svelte 5 benutzen.

01:04:23.030 --> 01:04:25.030
Man kann bloß nicht alles Mix und

01:04:25.030 --> 01:04:29.430
Matchen, wie man will.

01:04:29.430 --> 01:04:35.430
Loop ist das gleiche.

01:04:35.430 --> 01:04:40.410
Event-Click.

01:04:40.410 --> 01:04:42.410
Ah, das ist nicht das gleiche.

01:04:42.410 --> 01:04:44.410
Also einmal hier die State-Geschichte,

01:04:44.410 --> 01:04:46.410
aber auch

01:04:46.410 --> 01:04:48.410
OnClick.

01:04:48.410 --> 01:04:50.410
Jetzt bin ich

01:04:50.410 --> 01:04:54.870
irritiert. Ist das nicht hier

01:04:54.870 --> 01:04:56.870
der normale Vanilla

01:04:56.870 --> 01:04:58.870
Plain JavaScript

01:04:58.870 --> 01:05:03.080
OnClick-Händler von einem Button?

01:05:03.080 --> 01:05:05.080
Also wenn ich Button OnClick schreibe

01:05:05.080 --> 01:05:07.080
in Plain JavaScript, dann sieht das genauso

01:05:07.080 --> 01:05:09.080
aus. Anscheinend

01:05:09.080 --> 01:05:11.080
haben die ihre eigene

01:05:11.080 --> 01:05:13.080
Event-Syntax in die Tonne

01:05:13.080 --> 01:05:20.940
gekloppt jetzt. Das ist

01:05:20.940 --> 01:05:22.940
in der Tat recht interessant.

01:05:22.940 --> 01:05:24.940
Also, das müssen wir mal

01:05:24.940 --> 01:05:28.500
ausprobieren. Also sprich,

01:05:28.500 --> 01:05:30.500
das sollte jetzt funktionieren.

01:05:30.500 --> 01:05:32.500
Ah, es funktioniert beides noch.

01:05:32.500 --> 01:05:34.500
Okay. Hätte das denn

01:05:34.500 --> 01:05:38.200
auch funktioniert

01:05:38.200 --> 01:05:45.220
in der alten

01:05:45.220 --> 01:05:49.690
Schreibweise?

01:05:49.690 --> 01:05:51.690
Okay, genau so. Ja, das ist anscheinend das eine

01:05:51.690 --> 01:05:53.690
nicht vom anderen abhängig.

01:05:53.690 --> 01:05:55.690
Okay, es geht jetzt beides.

01:05:55.690 --> 01:05:57.690
Man kann jetzt,

01:05:57.690 --> 01:05:59.690
also wahrscheinlich sollte man

01:05:59.690 --> 01:06:01.690
jetzt das neue verwenden. Man braucht

01:06:01.690 --> 01:06:03.690
keine spezielle Event-Syntax mehr

01:06:03.690 --> 01:06:05.690
in Svelte, sondern kann einfach die

01:06:05.690 --> 01:06:07.690
Build-In. Das ist

01:06:07.690 --> 01:06:09.690
gut, ganz ehrlich, da würde ich einfach

01:06:09.690 --> 01:06:11.690
sagen, das ist grundlegend einfach mal besser.

01:06:11.690 --> 01:06:13.690
Warum eine extra Spezial-Syntax,

01:06:13.690 --> 01:06:15.690
wenn man auch die Build-In-Syntax benutzen kann?

01:06:15.690 --> 01:06:17.690
Die Frage ist jetzt viel eher,

01:06:17.690 --> 01:06:19.690
gehen damit auch solche Sachen wie

01:06:19.690 --> 01:06:21.690
oh, was war das? Prevent?

01:06:21.690 --> 01:06:23.690
Das weiß ich nicht mehr. Svelte

01:06:23.690 --> 01:06:25.690
Prevent Default, gab es doch irgendwie so

01:06:25.690 --> 01:06:31.180
einen On-Click.

01:06:31.180 --> 01:06:33.180
Ja, Prevent Default

01:06:33.180 --> 01:06:35.180
konnte man in Svelte machen. Geht das

01:06:35.180 --> 01:06:37.180
jetzt hier auch? Ah,

01:06:37.180 --> 01:06:43.500
das geht nicht. Und das geht nur noch so?

01:06:43.500 --> 01:06:45.500
Jetzt bin ich

01:06:45.500 --> 01:06:47.500
unschlüssig, ob

01:06:47.500 --> 01:06:49.500
das neue jetzt so viel geiler ist, weil man

01:06:49.500 --> 01:06:51.500
die Modifier nicht mehr verwenden kann.

01:06:51.500 --> 01:06:53.500
Aber habe ich zu wenig

01:06:53.500 --> 01:06:55.500
Beispiele von gesehen jetzt? Keine Ahnung.

01:06:55.500 --> 01:06:57.500
Aber die braucht man auch

01:06:57.500 --> 01:06:59.500
relativ selten. Braucht man eigentlich hauptsächlich

01:06:59.500 --> 01:07:02.870
Forms und solchen Sachen.

01:07:02.870 --> 01:07:04.870
Finde ich aber gut, dass man jetzt normale

01:07:04.870 --> 01:07:06.870
Event-Händler-Syntax verwenden kann.

01:07:06.870 --> 01:07:08.870
Anstatt, dass

01:07:08.870 --> 01:07:10.870
man Doppelpunkt braucht.

01:07:10.870 --> 01:07:12.870
Was macht Prevent Default?

01:07:12.870 --> 01:07:17.780
Wenn ich dir sage, dass

01:07:17.780 --> 01:07:19.780
Prevented das Default-Verhalten,

01:07:19.780 --> 01:07:21.780
sagt dir das wahrscheinlich nichts. Stell dir mal vor,

01:07:21.780 --> 01:07:23.780
du hast eine Form mit einem Submit-Button.

01:07:23.780 --> 01:07:25.780
Der Submit-Button macht standardmäßig

01:07:25.780 --> 01:07:27.780
ein Post-Request gegen den Server.

01:07:27.780 --> 01:07:29.780
Wenn du das nicht willst, brauchst du

01:07:29.780 --> 01:07:33.800
Prevent Default.

01:07:33.800 --> 01:07:35.800
Wenn du sagst Type

01:07:35.800 --> 01:07:37.800
und du klickst hier drauf.

01:07:37.800 --> 01:07:39.800
Achso, Moment, das ist ja nicht innerhalb

01:07:39.800 --> 01:07:41.800
von einer Form.

01:07:41.800 --> 01:07:43.800
Wie geht das?

01:07:43.800 --> 01:07:45.800
Form?

01:07:45.800 --> 01:07:49.240
Okay, ich bin kein

01:07:49.240 --> 01:07:51.240
JavaScript-Hacker, man.

01:07:51.240 --> 01:07:53.240
Also er macht jetzt Server-Requests,

01:07:53.240 --> 01:07:55.240
wenn du das hier ...

01:07:55.240 --> 01:07:57.240
Ich weiß gar nicht, wie das funktioniert.

01:07:57.240 --> 01:07:59.240
Ja, guck.

01:07:59.240 --> 01:08:01.240
Genau.

01:08:01.240 --> 01:08:03.240
So. Der Default-Verhalten

01:08:03.240 --> 01:08:05.240
von so einem Button ist,

01:08:05.240 --> 01:08:07.240
dass er einen Post macht auf den

01:08:07.240 --> 01:08:09.240
Form-Endpunkt.

01:08:09.240 --> 01:08:11.240
So, und wenn du jetzt sagst hier

01:08:11.240 --> 01:08:13.240
OnClick

01:08:13.240 --> 01:08:16.620
Prevent Default

01:08:16.620 --> 01:08:18.620
Achso, ich brauche

01:08:18.620 --> 01:08:26.660
einen Händler, ja.

01:08:26.660 --> 01:08:31.700
Dann macht er nichts mehr.

01:08:31.700 --> 01:08:33.700
Dann führt er nur noch mein Event aus

01:08:33.700 --> 01:08:35.700
und macht kein Post-Request mehr.

01:08:35.700 --> 01:08:37.700
Wenn ich Prevent Default weg mache,

01:08:37.700 --> 01:08:39.700
dann schickt er das.

01:08:39.700 --> 01:08:41.700
Dann schickt er wieder ein Post-Request.

01:08:41.700 --> 01:08:43.700
Also, das braucht man bei so Sachen wie beispielsweise

01:08:43.700 --> 01:08:45.700
Submit-Buttons in der Form und sowas.

01:08:45.700 --> 01:08:49.850
Kommt nicht oft vor, dass man es braucht.

01:08:49.850 --> 01:08:51.850
Aber wenn man es braucht, ist man froh, dass es da ist.

01:08:51.850 --> 01:08:53.850
Gut, anscheinend

01:08:53.850 --> 01:08:55.850
kann man in Svelte 5 jetzt die normale

01:08:55.850 --> 01:08:57.850
Event-Syntax verwenden von Buttons.

01:08:57.850 --> 01:08:59.850
Okay, das ist doch schon mal auch nicht verkehrt.

01:08:59.850 --> 01:09:05.590
Ja, das heißt, wenn man OnClick

01:09:05.590 --> 01:09:07.590
definiert, wird das Default-File immer nicht überschritten.

01:09:07.590 --> 01:09:09.590
Ne. Ja, tatsächlich.

01:09:09.590 --> 01:09:11.590
Ja. Ja.

01:09:11.590 --> 01:09:13.590
So ist es.

01:09:13.590 --> 01:09:15.590
Nur wenn du OnClick definierst, heißt

01:09:15.590 --> 01:09:17.590
es nicht, dass er das nicht als Default macht.

01:09:17.590 --> 01:09:19.590
Du könntest

01:09:19.590 --> 01:09:21.590
in der Funktion selber

01:09:21.590 --> 01:09:23.590
event

01:09:23.590 --> 01:09:25.590
event

01:09:25.590 --> 01:09:27.590
preventDefault.

01:09:27.590 --> 01:09:29.590
Das würde auch funktionieren.

01:09:29.590 --> 01:09:31.590
Guck, jetzt macht er es auch nicht.

01:09:31.590 --> 01:09:33.590
Das ist quasi ein Shortcut

01:09:33.590 --> 01:09:35.590
dafür, dass du es selbst

01:09:35.590 --> 01:09:37.590
im OnClick überschreiben musst.

01:09:37.590 --> 01:09:39.590
Finde ich eigentlich ganz nice, dass es das gibt.

01:09:39.590 --> 01:09:41.590
Gibt es übrigens in Vue auch.

01:09:41.590 --> 01:09:43.590
Ich gehe mal davon aus, in vielen anderen Frontend-Frameworks

01:09:43.590 --> 01:09:45.590
wird das auch so funktionieren.

01:09:45.590 --> 01:09:47.590
Okay, also. Ja.

01:09:47.590 --> 01:09:49.590
Kann man jetzt verwenden. Alles gut.

01:09:49.590 --> 01:09:51.590
Nice.

01:09:51.590 --> 01:09:53.590
Oh, das ist eine ganze Ecke kürzer geworden.

01:09:53.590 --> 01:09:58.890
OnMount.

01:09:58.890 --> 01:10:03.100
Ah.

01:10:03.100 --> 01:10:06.410
Guck mal,

01:10:06.410 --> 01:10:08.410
es gibt keine Lifecycle-Events

01:10:08.410 --> 01:10:13.640
mehr. Kann das sein?

01:10:13.640 --> 01:10:15.640
Also bisher hat man in Svelte beispielsweise,

01:10:15.640 --> 01:10:17.640
wenn man, wenn die Komponente

01:10:17.640 --> 01:10:19.640
eingehängt wird

01:10:19.640 --> 01:10:21.640
in dein HTML-Element,

01:10:21.640 --> 01:10:23.640
äh, in dein HTML-Baum,

01:10:23.640 --> 01:10:25.640
konnte man beispielsweise

01:10:25.640 --> 01:10:27.640
bei OnMount einmalig was ausführen

01:10:27.640 --> 01:10:29.640
lassen. Also stellt euch jetzt mal vor,

01:10:29.640 --> 01:10:34.680
ihr habt, äh,

01:10:34.680 --> 01:10:36.680
ein Formular und ihr wollt,

01:10:36.680 --> 01:10:38.680
dass dort,

01:10:38.680 --> 01:10:40.680
sobald das eingefügt wird in die Webseite,

01:10:40.680 --> 01:10:42.680
die erste,

01:10:42.680 --> 01:10:44.680
die erste Zeile

01:10:44.680 --> 01:10:46.680
Input fokussiert wird.

01:10:48.680 --> 01:10:50.680
Dann hättet ihr das früher so machen müssen.

01:10:50.680 --> 01:10:52.680
OnMount und dann Input Element

01:10:52.680 --> 01:10:54.680
Fokus.

01:10:54.680 --> 01:10:56.680
Und damit man auf das Input Element referenzieren kann,

01:10:56.680 --> 01:10:58.680
musste man das quasi hier so

01:10:58.680 --> 01:11:00.680
binden. Das ist übrigens,

01:11:00.680 --> 01:11:02.680
das fand ich damals schon übelst umständlich.

01:11:02.680 --> 01:11:04.680
Ist anscheinend jetzt immer noch das gleiche.

01:11:04.680 --> 01:11:06.680
Und jetzt gibt es wohl Effekt

01:11:06.680 --> 01:11:08.680
oder Dollar-Effekt, was mich ein bisschen an React

01:11:08.680 --> 01:11:14.490
erinnert, ja. Dollar,

01:11:14.490 --> 01:11:16.490
ach, ist Dollar-Effekt sowas

01:11:16.490 --> 01:11:18.490
wie früher Doppelpunkt?

01:11:18.490 --> 01:11:20.490
Dollar-Doppelpunkt?

01:11:20.490 --> 01:11:22.490
Also, boah, Dollar-Effekt,

01:11:22.490 --> 01:11:25.800
dann kann man da

01:11:25.800 --> 01:11:32.890
einfach, probieren wir mal,

01:11:32.890 --> 01:11:34.890
Lock.

01:11:34.890 --> 01:11:36.890
Und jetzt immer, wenn sich Count ändert,

01:11:36.890 --> 01:11:38.890
wird das gelockt. Ah ja.

01:11:38.890 --> 01:11:40.890
Okay.

01:11:40.890 --> 01:11:45.290
Also Dollar-Effekt.

01:11:45.290 --> 01:11:47.290
Das heißt, im Endeffekt, Doppelpunkt,

01:11:47.290 --> 01:11:49.290
also,

01:11:49.290 --> 01:11:51.290
Dollar-Doppelpunkt ist das

01:11:51.290 --> 01:11:54.600
alte Effekt, beziehungsweise

01:11:54.600 --> 01:11:56.600
Effekt ist das neue

01:11:56.600 --> 01:11:58.600
Doppelpunkt, äh, Dollar-Doppelpunkt.

01:11:58.600 --> 01:12:03.580
Ja, da kann man

01:12:03.580 --> 01:12:05.580
sich jetzt drüber streiten, was da geiler ist.

01:12:05.580 --> 01:12:09.720
Ich denke mal,

01:12:09.720 --> 01:12:11.720
im Endeffekt ist Effekt wahrscheinlich

01:12:11.720 --> 01:12:13.720
weniger

01:12:13.720 --> 01:12:15.720
Magic, weil

01:12:15.720 --> 01:12:17.720
wenn du's Welt nicht kennst,

01:12:17.720 --> 01:12:19.720
hast du keine Ahnung, was Dollar-Doppelpunkt ist.

01:12:19.720 --> 01:12:21.720
Auf der anderen Seite, jeder, der sich

01:12:21.720 --> 01:12:23.720
fünf Minuten mit's Welt beschäftigt hat,

01:12:23.720 --> 01:12:25.720
wird Dollar-Doppelpunkt kennen.

01:12:25.720 --> 01:12:27.720
Ansonsten

01:12:27.720 --> 01:12:29.720
ist es einfach nur ein bisschen mehr.

01:12:29.720 --> 01:12:31.720
Aber ich bin da auch nicht tief genug drin,

01:12:31.720 --> 01:12:33.720
um die Unterschiede jetzt so

01:12:33.720 --> 01:12:35.720
direkt rauslesen zu können.

01:12:35.720 --> 01:12:37.720
Zumindest ist Dollar-Effekt

01:12:37.720 --> 01:12:39.720
anscheinend jetzt das gleiche wie Dollar-Doppelpunkt.

01:12:39.720 --> 01:12:44.820
Okay, warum nicht?

01:12:44.820 --> 01:12:46.820
Gewöhnt man sich auch

01:12:46.820 --> 01:12:48.820
dran. Ich persönlich

01:12:48.820 --> 01:12:50.820
find's gut. Ich finde,

01:12:50.820 --> 01:12:52.820
es ist weniger Magic.

01:12:52.820 --> 01:12:54.820
Und ich gehe ganz stark davon aus,

01:12:54.820 --> 01:12:56.820
dass das

01:12:56.820 --> 01:12:58.820
absichtlich gemacht wurde,

01:12:58.820 --> 01:13:00.820
weil's auch nicht nur

01:13:00.820 --> 01:13:02.820
die Optik

01:13:02.820 --> 01:13:04.820
hier im Source-Code verbessert,

01:13:04.820 --> 01:13:08.580
sondern auch anderweitig

01:13:08.580 --> 01:13:10.580
Vorteile hat. Sei es nur Performance.

01:13:10.580 --> 01:13:12.580
Gut, DOM-Referenz vom Element

01:13:12.580 --> 01:13:14.580
müssen wir uns nicht angucken. Das funktioniert

01:13:14.580 --> 01:13:16.580
noch genauso wie

01:13:16.580 --> 01:13:18.580
in der alten Svelte-Version.

01:13:18.580 --> 01:13:20.580
Du definierst ne Variable. Die machst du jetzt

01:13:20.580 --> 01:13:22.580
witzigerweise mit let und nicht mit state.

01:13:22.580 --> 01:13:26.470
Gut, weil's

01:13:26.470 --> 01:13:28.470
kein state ist.

01:13:28.470 --> 01:13:30.470
Weil's einmalig reingeschrieben wird

01:13:30.470 --> 01:13:36.600
und dann war's das.

01:13:36.600 --> 01:13:38.600
Aber dass es OnMount nicht mehr gibt, find ich

01:13:38.600 --> 01:13:40.600
schade. Wobei ist die Frage, gibt es denn

01:13:40.600 --> 01:13:42.600
OnMount auch gar nicht mehr?

01:13:42.600 --> 01:13:44.600
OnMount? Doch, gibt es immer noch.

01:13:44.600 --> 01:13:46.600
Also kann man immer noch verwenden,

01:13:46.600 --> 01:13:51.700
wenn man will.

01:13:51.700 --> 01:13:53.700
Der Unterschied ist jetzt halt hier,

01:13:53.700 --> 01:13:59.740
dass...

01:13:59.740 --> 01:14:01.740
Guck, der Unterschied ist halt hier,

01:14:01.740 --> 01:14:03.740
dass Dollar-Effekt

01:14:03.740 --> 01:14:05.740
jedes Mal ausgeführt

01:14:05.740 --> 01:14:07.740
wird und Dollar-Mount

01:14:07.740 --> 01:14:09.740
wird nur einmalig ausgeführt

01:14:09.740 --> 01:14:11.740
beim Einhängen

01:14:11.740 --> 01:14:13.740
der

01:14:13.740 --> 01:14:15.740
Komponente.

01:14:15.740 --> 01:14:19.560
Ja, das ist aber dann ein doofes Beispiel.

01:14:19.560 --> 01:14:21.560
Es gibt ja durchaus

01:14:21.560 --> 01:14:23.560
Sachen, die man einmalig nur machen möchte

01:14:23.560 --> 01:14:25.560
und nicht bei jedem Mal ändern von der Variable.

01:14:25.560 --> 01:14:27.560
Zum Beispiel

01:14:27.560 --> 01:14:29.560
initial irgendwie was runterladen

01:14:29.560 --> 01:14:32.870
von irgendeiner API oder so.

01:14:32.870 --> 01:14:34.870
Aber wisst ihr, ich glaube

01:14:34.870 --> 01:14:36.870
auch eines der Änderungsgründe,

01:14:36.870 --> 01:14:38.870
warum die so viel geändert haben ist,

01:14:38.870 --> 01:14:40.870
dass Server-Site-Rendering besser

01:14:40.870 --> 01:14:42.870
funktioniert. Was ich ja bei

01:14:42.870 --> 01:14:47.140
SvelteKit sehr, sehr selten benutze.

01:14:47.140 --> 01:14:49.140
Ich glaube, das liegt auch mit daran.

01:14:49.140 --> 01:14:51.140
Weil das waren

01:14:51.140 --> 01:14:53.140
hier so Dinger, die sind nur im Browser gelaufen

01:14:53.140 --> 01:14:55.140
und da weiß ich nicht, wie es hier

01:14:55.140 --> 01:14:57.140
ist, ob das dazu beiträgt, dass

01:14:57.140 --> 01:14:59.140
du die Seiten schon besser vorrendern

01:14:59.140 --> 01:15:01.140
kannst, bevor du sie initial auslieferst.

01:15:01.140 --> 01:15:03.140
Kein Schimmer.

01:15:03.140 --> 01:15:05.140
Aber zumindest muss man

01:15:05.140 --> 01:15:09.740
auch mit Effekt auch irgendwas,

01:15:09.740 --> 01:15:11.740
dass es nur einmalig ausgeführt wird.

01:15:11.740 --> 01:15:13.740
Es wäre doch blöd, wenn das nicht funktioniert.

01:15:13.740 --> 01:15:27.740
DollarState.

01:15:27.740 --> 01:15:29.740
Ja, das haben wir gerade schon ausprobiert.

01:15:29.740 --> 01:15:33.500
Ja, Effekt.

01:15:33.500 --> 01:15:35.500
ToRunSideEffects.

01:15:35.500 --> 01:15:37.500
Ja, das haben wir auch schon gecheckt.

01:15:37.500 --> 01:15:43.240
Wow!

01:15:43.240 --> 01:15:55.320
Jetzt wird es aber advanced hier.

01:15:55.320 --> 01:15:57.320
Aha!

01:15:57.320 --> 01:15:59.320
So macht man jetzt

01:15:59.320 --> 01:16:01.320
OnMount. Okay, das ist

01:16:01.320 --> 01:16:03.320
komplizierter als früher.

01:16:03.320 --> 01:16:05.320
So, also entweder

01:16:05.320 --> 01:16:07.320
kann man Effekt benutzen, so als

01:16:07.320 --> 01:16:09.320
jedes Mal ausführen,

01:16:09.320 --> 01:16:11.320
wenn sich der Value ändert.

01:16:11.320 --> 01:16:13.320
Oder man kann einen Callback

01:16:13.320 --> 01:16:16.700
zurückliefern.

01:16:16.700 --> 01:16:18.700
If a Callback is provided, it will run

01:16:18.700 --> 01:16:20.700
immediately

01:16:20.700 --> 01:16:22.700
before the effect reruns

01:16:22.700 --> 01:16:24.700
be when the component is destroyed.

01:16:24.700 --> 01:16:28.900
Hä?

01:16:28.900 --> 01:16:30.900
Da kann man, da kann man

01:16:30.900 --> 01:16:32.900
Hä?

01:16:32.900 --> 01:16:34.900
Kann man

01:16:34.900 --> 01:16:36.900
doch irgendwie aufräumen lassen oder so danach.

01:16:36.900 --> 01:16:38.900
Okay, das wird man, wird man

01:16:38.900 --> 01:16:40.900
Okay, das

01:16:40.900 --> 01:16:42.900
guckt, das ist das, was ich schon vermutet habe.

01:16:42.900 --> 01:16:44.900
Das Replaced Dollar Doppelpunkt.

01:16:44.900 --> 01:16:49.750
Effekt only

01:16:49.750 --> 01:16:51.750
run in browser, not during server side

01:16:51.750 --> 01:17:16.440
rendering.

01:17:16.440 --> 01:17:25.000
Aha.

01:17:25.000 --> 01:17:28.380
Untrack. What?

01:17:28.380 --> 01:17:35.140
Effekt pre?

01:17:35.140 --> 01:17:37.140
Das wollen sie es aber wissen, ja.

01:17:37.140 --> 01:17:39.140
Okay, da muss man, muss ich mich noch mal wissen.

01:17:39.140 --> 01:17:41.140
Aber ich sehe jetzt noch nicht, wie sich Effekt

01:17:41.140 --> 01:17:43.140
Die schreiben mir was von OnMount,

01:17:43.140 --> 01:17:45.140
aber ich sehe jetzt nicht, wie sich, wie ich damit

01:17:45.140 --> 01:17:51.460
OnMount ersetzen kann.

01:17:51.460 --> 01:17:53.460
Gibt es hier vielleicht irgendwelche

01:17:53.460 --> 01:18:01.000
Ne.

01:18:01.000 --> 01:18:06.360
Ja, keine Ahnung.

01:18:06.360 --> 01:18:08.360
Ich dachte, vielleicht gibt es irgendwelche

01:18:08.360 --> 01:18:10.360
Effekt Arcs oder so, aber das

01:18:10.360 --> 01:18:12.360
ist undefined.

01:18:12.360 --> 01:18:14.360
Ja, keine Ahnung, weiß ich nicht. Also

01:18:14.360 --> 01:18:16.360
Ich sehe, ich wüsste

01:18:16.360 --> 01:18:18.360
jetzt nicht, wie ich damit OnMount

01:18:18.360 --> 01:18:20.360
ersetzen soll.

01:18:20.360 --> 01:18:26.230
Wenn die Variable untrack ist.

01:18:26.230 --> 01:18:31.140
Ja.

01:18:31.140 --> 01:18:33.140
Ich, aber was soll

01:18:33.140 --> 01:18:38.890
untrack? Aha.

01:18:38.890 --> 01:18:40.890
Oh, das ist

01:18:40.890 --> 01:18:42.890
aber schon ziemlich Magic, oder?

01:18:42.890 --> 01:18:44.890
Also würde ich jetzt sagen, untrack,

01:18:44.890 --> 01:18:50.980
Count? Ne.

01:18:50.980 --> 01:18:59.540
Hä? Das macht es schon

01:18:59.540 --> 01:19:05.930
ein bisschen komplizierter.

01:19:05.930 --> 01:19:07.930
Ach so, da muss der Callback dann rein.

01:19:07.930 --> 01:19:09.930
Also im Endeffekt

01:19:09.930 --> 01:19:11.930
Antwort,

01:19:11.930 --> 01:19:13.930
das ist ja, äh.

01:19:13.930 --> 01:19:15.930
Was ist denn das, Mann?

01:19:15.930 --> 01:19:17.930
Und jetzt kann ich sagen,

01:19:17.930 --> 01:19:19.930
Lock, Count und das ist jetzt quasi

01:19:19.930 --> 01:19:21.930
Ersatz für OnMount.

01:19:21.930 --> 01:19:23.930
Guck, jetzt wird es nämlich auch nicht ausgeführt.

01:19:23.930 --> 01:19:25.930
Jetzt, jetzt wird es auch

01:19:25.930 --> 01:19:27.930
nur einmalig.

01:19:27.930 --> 01:19:29.930
Ich weiß ja nicht.

01:19:29.930 --> 01:19:31.930
Ich weiß

01:19:31.930 --> 01:19:33.930
ja nicht. Ganz ehrlich,

01:19:33.930 --> 01:19:35.930
da ist OnMount

01:19:35.930 --> 01:19:37.930
doch schon irgendwie die schönere Variante,

01:19:37.930 --> 01:19:39.930
oder? Was denkt ihr?

01:19:39.930 --> 01:19:41.930
Ich meine, OnMount ist vollkommen klar, was passiert.

01:19:41.930 --> 01:19:43.930
Wird einmal beim Einhängen der Komponente

01:19:43.930 --> 01:19:45.930
ausgeführt und, ja, zum Glück gibt es

01:19:45.930 --> 01:19:47.930
OnMount noch. Aber das ist,

01:19:47.930 --> 01:19:49.930
das ist doch echt ein bisschen durch die Brust ins Auge.

01:19:49.930 --> 01:19:51.930
Aber,

01:19:51.930 --> 01:19:53.930
es hat auch seinen Vorteil,

01:19:53.930 --> 01:19:55.930
wenn ich

01:19:55.930 --> 01:19:57.930
irgendwo mal auf, auf

01:19:57.930 --> 01:19:59.930
einen State zugreifen möchte,

01:19:59.930 --> 01:20:01.930
innerhalb von Effekt,

01:20:01.930 --> 01:20:03.930
will aber nicht,

01:20:03.930 --> 01:20:05.930
dass durch diesen State getriggert,

01:20:07.930 --> 01:20:09.930
jedes Mal die ganze Funktion läuft,

01:20:09.930 --> 01:20:11.930
dann ist Untrack sinnvoll.

01:20:11.930 --> 01:20:13.930
Weil,

01:20:13.930 --> 01:20:15.930
das war tatsächlich, das war tatsächlich

01:20:15.930 --> 01:20:17.930
ein Problem, wenn man die alte Syntax

01:20:17.930 --> 01:20:19.930
verwendet hat. Also, mal angenommen,

01:20:19.930 --> 01:20:21.930
mal angenommen,

01:20:21.930 --> 01:20:23.930
wir machen jetzt mal ein sinnloses Beispiel, ja.

01:20:23.930 --> 01:20:25.930
Mal angenommen, ich wollte jedes Mal,

01:20:25.930 --> 01:20:27.930
wenn sich Count ändert, Count ausgeben.

01:20:27.930 --> 01:20:29.930
Aber zusätzlich wollte ich

01:20:29.930 --> 01:20:31.930
auch noch Name ausgeben.

01:20:31.930 --> 01:20:33.930
Dann wurde jetzt bei jeder Änderung von

01:20:33.930 --> 01:20:35.930
Name und bei jeder Änderung von Count

01:20:35.930 --> 01:20:37.930
das Ganze getriggert.

01:20:37.930 --> 01:20:39.930
Und jetzt würde ich dann quasi sagen, Untrack

01:20:39.930 --> 01:20:41.930
an der Stelle, ja gut,

01:20:41.930 --> 01:20:43.930
mit dem geht es ja so, an der Stelle.

01:20:43.930 --> 01:20:45.930
Und jetzt wird das nicht jedes Mal

01:20:45.930 --> 01:20:47.930
ausgeführt, wenn sich Count ändert.

01:20:47.930 --> 01:20:51.560
Das macht durchaus Sinn,

01:20:51.560 --> 01:20:55.000
dass es das gibt.

01:20:55.000 --> 01:20:57.000
Okay, ja, okay, leuchtet ein.

01:20:57.000 --> 01:21:05.110
Also es gibt keinen direkten Ersatz

01:21:05.110 --> 01:21:07.110
für Dollar-Doppelpunkt.

01:21:07.110 --> 01:21:09.110
Weiß ich noch nicht.

01:21:09.110 --> 01:21:11.110
Sie haben auch viele Verbesserungen für

01:21:11.110 --> 01:21:13.110
Server-Site-Rendering drin. Ich gehe davon aus,

01:21:13.110 --> 01:21:21.350
dass es da schon einen Ersatz für gibt.

01:21:21.350 --> 01:21:23.350
Hallo Max, bist du am merken? Ja, ich bin gerade

01:21:23.350 --> 01:21:27.180
in deinem Twitch-Account drin.

01:21:27.180 --> 01:21:29.180
Eigentlich habe ich die Chat-Nachricht selbst geschrieben.

01:21:29.180 --> 01:21:42.280
Moment, wir brauchen die richtige.

01:21:42.280 --> 01:21:46.620
Jetzt, okay.

01:21:46.620 --> 01:21:51.080
Wobei ich ja mittlerweile die Variante

01:21:51.080 --> 01:22:05.210
bevorzuge.

01:22:05.210 --> 01:22:07.210
Alter, ich bin müde, warum?

01:22:07.210 --> 01:22:09.210
Weil es ist 17.33 Uhr, keck wait.

01:22:09.210 --> 01:22:11.210
Okay, also lasst uns mal weiter gucken.

01:22:11.210 --> 01:22:13.210
Event-Click.

01:22:13.210 --> 01:22:15.210
Das hatten wir schon.

01:22:15.210 --> 01:22:17.210
DOM-REF hatten wir auch schon. Conditional.

01:22:17.210 --> 01:22:19.210
Okay, was ist der

01:22:19.210 --> 01:22:23.480
Unterschied?

01:22:23.480 --> 01:22:25.480
Const-Traffic-Lights.

01:22:25.480 --> 01:22:27.480
Okay, das ist State.

01:22:27.480 --> 01:22:29.480
Das hatten wir schon.

01:22:29.480 --> 01:22:31.480
Es ist nicht mehr Dollar-Doppelpunkt,

01:22:31.480 --> 01:22:33.480
sondern es ist Derived.

01:22:33.480 --> 01:22:38.260
Ja.

01:22:38.260 --> 01:22:40.260
On-Click ist anders.

01:22:40.260 --> 01:22:46.580
Und der Rest ist gleich.

01:22:46.580 --> 01:22:48.580
Ja, das Beispiel, keine Ahnung.

01:22:48.580 --> 01:22:50.580
Lifecycle. Ah, ja.

01:22:50.580 --> 01:23:01.450
Aber das Beispiel

01:23:01.450 --> 01:23:03.450
ist doof, weil wie wir jetzt gerade

01:23:03.450 --> 01:23:05.450
schon gelernt haben,

01:23:05.450 --> 01:23:07.450
ist On-Mount

01:23:07.450 --> 01:23:09.450
nicht exakt

01:23:09.450 --> 01:23:11.450
äquivalent zu Dollar-Effekt.

01:23:11.450 --> 01:23:20.390
Sollte sich nämlich

01:23:20.390 --> 01:23:22.390
Page-Titel

01:23:22.390 --> 01:23:26.790
ändern, dann wird

01:23:26.790 --> 01:23:28.790
das hier neu ausgeführt.

01:23:28.790 --> 01:23:30.790
Und hier nur einmalig

01:23:30.790 --> 01:23:32.790
beim Seite laden, beziehungsweise

01:23:32.790 --> 01:23:34.790
beim Komponente einfügen.

01:23:36.790 --> 01:23:38.790
Also das Beispiel ist nicht richtig, was

01:23:38.790 --> 01:23:42.490
hier steht.

01:23:42.490 --> 01:23:44.490
On-Mount.

01:23:44.490 --> 01:23:46.490
Ah ja, gut, guck, hier sieht man das, was wir

01:23:46.490 --> 01:23:48.490
eben gelesen haben in der Hilfeseite von

01:23:48.490 --> 01:23:50.490
Effekt.

01:23:50.490 --> 01:23:52.490
Wenn auch super umständliches Beispiel, aber

01:23:52.490 --> 01:23:54.490
okay, man kann eine Funktion

01:23:54.490 --> 01:23:56.490
zurückliefern und die wird dann quasi so als

01:23:56.490 --> 01:23:58.490
Cleanup ausgeführt.

01:23:58.490 --> 01:24:00.490
Das finde ich gar nicht schlecht, aber ich meine

01:24:00.490 --> 01:24:02.490
seriously, warum nicht einfach

01:24:02.490 --> 01:24:04.490
On-Destroy verwenden?

01:24:04.490 --> 01:24:06.490
Ich finde das deutlich klarer

01:24:06.490 --> 01:24:08.490
als Effekt

01:24:08.490 --> 01:24:10.490
für On-Mount und On-Destroy.

01:24:10.490 --> 01:24:19.620
Aber es bleibt ja weiterhin drinnen,

01:24:19.620 --> 01:24:21.620
man kann es ja weiterhin verwenden.

01:24:21.620 --> 01:24:23.620
Also für solche Sachen werde ich weiterhin On-Mount

01:24:23.620 --> 01:24:25.620
und On-Destroy verwenden. Das finde ich unnötig

01:24:25.620 --> 01:24:27.620
kompliziert hier.

01:24:27.620 --> 01:24:29.620
Hier versteht jeder, was passiert,

01:24:29.620 --> 01:24:31.620
oder? Und das war ja auch mein Argument

01:24:31.620 --> 01:24:33.620
für die andere Sache oben, dass man in der

01:24:33.620 --> 01:24:35.620
Welt 5 das besser versteht, was

01:24:35.620 --> 01:24:37.620
passiert. Aber hier versteht man eindeutig

01:24:37.620 --> 01:24:39.620
die 4er-Version, wie sie es schreiben, besser.

01:24:39.620 --> 01:24:41.620
On-Destroy, was passiert, wenn die Komponente

01:24:41.620 --> 01:24:43.620
quasi rausgeschmissen wird aus

01:24:43.620 --> 01:24:45.620
der DOM, dann wird Clear Interval

01:24:45.620 --> 01:24:47.620
ausgeführt. So, und hier,

01:24:47.620 --> 01:24:49.620
hä, what?

01:24:49.620 --> 01:24:55.430
Werde ich weiterverwenden.

01:24:55.430 --> 01:24:58.810
Wir gucken uns gerade Unterschiede an.

01:24:58.810 --> 01:25:00.810
Also finde ich das hier schöner.

01:25:00.810 --> 01:25:02.810
Ok, was geht weiter?

01:25:02.810 --> 01:25:08.300
Component Composition.

01:25:08.300 --> 01:25:10.300
Import User Profile, ok, importiere nochmal

01:25:10.300 --> 01:25:14.060
das Feldkomponente.

01:25:14.060 --> 01:25:16.060
Weiß nicht, ob du schon gesagt hast,

01:25:16.060 --> 01:25:18.060
aber das ist 1 zu 1 UseEffect

01:25:18.060 --> 01:25:20.060
aus React. Ne, das habe ich noch nicht

01:25:20.060 --> 01:25:23.880
gesagt. Und ich weiß auch nicht,

01:25:23.880 --> 01:25:25.880
ob es so ist, weil ich bin

01:25:25.880 --> 01:25:27.880
kein React User.

01:25:27.880 --> 01:25:29.880
Ich habe keine Ahnung von React.

01:25:29.880 --> 01:25:35.880
Was genau ist hier

01:25:35.880 --> 01:25:37.880
der Unterschied? Nichts, oder?

01:25:37.880 --> 01:25:39.880
Genau das gleiche.

01:25:39.880 --> 01:25:47.670
Was? Emit to

01:25:47.670 --> 01:25:49.670
Parent. Ah, Event Handling, ok.

01:25:49.670 --> 01:25:55.670
Ach stimmt, da gibt es ja noch eine 2. Datei.

01:25:55.670 --> 01:25:57.670
Tatsächlich.

01:25:57.670 --> 01:25:59.670
Oh, das sieht tatsächlich anders an.

01:25:59.670 --> 01:26:01.670
Anders aus jetzt.

01:26:01.670 --> 01:26:03.670
Was haben wir denn hier jetzt?

01:26:03.670 --> 01:26:05.670
Export Let.

01:26:05.670 --> 01:26:07.670
Name, Age, Favorite Color

01:26:07.670 --> 01:26:09.670
is available.

01:26:09.670 --> 01:26:11.670
Da unten drunter der Kram ist alles gleich.

01:26:11.670 --> 01:26:13.670
Und jetzt,

01:26:13.670 --> 01:26:15.670
was ist das?

01:26:15.670 --> 01:26:17.670
Const?

01:26:17.670 --> 01:26:27.190
Ne. Ok, das finde ich jetzt

01:26:27.190 --> 01:26:29.190
auf den

01:26:29.190 --> 01:26:31.190
ersten Blick

01:26:31.190 --> 01:26:33.190
irgendwie

01:26:33.190 --> 01:26:40.020
unintuitiver.

01:26:40.020 --> 01:26:42.020
Das hat aber bestimmt auch seinen Sinn.

01:26:42.020 --> 01:26:44.020
Wahrscheinlich kann man

01:26:44.020 --> 01:26:46.020
jetzt einfacher Properties

01:26:46.020 --> 01:26:48.020
durchreichen oder sowas. Aber das

01:26:48.020 --> 01:26:50.020
sagt mir jetzt ehrlich gesagt nicht zu.

01:26:50.020 --> 01:26:57.880
Lass uns das mal ausprobieren.

01:26:57.880 --> 01:26:59.880
Irgendeinen Vorteil muss das Ganze ja haben.

01:26:59.880 --> 01:27:01.880
Legen wir mal

01:27:01.880 --> 01:27:03.880
eine Komponente an. Irgendwas

01:27:03.880 --> 01:27:05.880
kleines.

01:27:12.010 --> 01:27:14.010
Wie machen die coolen Leute das unter Lib

01:27:14.010 --> 01:27:18.220
einen Components Ordner?

01:27:18.220 --> 01:27:20.220
Oder? Wie machen das die coolen Svelte Leute?

01:27:22.220 --> 01:27:24.220
Machen wir jetzt hier kekel.svelt.

01:27:26.220 --> 01:27:28.220
Bestes Svelt Komponente überhaupt.

01:27:28.220 --> 01:27:30.220
Die kann nur eine Sache ausgeben, nämlich kekel.

01:27:30.220 --> 01:27:32.220
Und das binden wir jetzt in unsere

01:27:32.220 --> 01:27:35.590
Edge ein.

01:27:35.590 --> 01:27:37.590
Und zwar hier oben drüber

01:27:37.590 --> 01:27:39.590
kekel.

01:27:39.590 --> 01:27:41.590
Oh ne, Visual Studio Code hat es mal wieder nicht

01:27:41.590 --> 01:27:43.590
gecheckt, Mann.

01:27:43.590 --> 01:27:45.590
Warum ist Visual Studio Code so pepega

01:27:45.590 --> 01:27:47.590
teilweise? Reicht das, wenn ich reloade?

01:27:47.590 --> 01:27:56.660
Oder muss das groß geschrieben sein?

01:27:56.660 --> 01:27:58.660
Das muss groß geschrieben sein, gell?

01:27:58.660 --> 01:28:09.270
Oder nicht?

01:28:09.270 --> 01:28:14.380
Ich bin mir jetzt gar nicht sicher, wo das hin muss.

01:28:14.380 --> 01:28:16.380
Import

01:28:16.380 --> 01:28:18.380
from

01:28:18.380 --> 01:28:20.380
$lib

01:28:20.380 --> 01:28:47.020
Hä? Muss das

01:28:47.020 --> 01:28:55.960
groß geschrieben sein?

01:28:55.960 --> 01:28:57.960
Oh ne, wie funktioniert das

01:28:57.960 --> 01:29:03.130
jetzt nochmal?

01:29:03.130 --> 01:29:05.130
Achso, ah ne, das muss man nicht.

01:29:05.130 --> 01:29:08.570
Keine Klammern.

01:29:08.570 --> 01:29:13.290
Dann funzt das

01:29:13.290 --> 01:29:15.290
auch.

01:29:15.290 --> 01:29:17.290
Warum erkennt Visual Studio

01:29:17.290 --> 01:29:21.820
Code das nicht?

01:29:21.820 --> 01:29:23.820
Ja, da ist es doch.

01:29:23.820 --> 01:29:25.820
Und stylen wir das jetzt mal.

01:29:25.820 --> 01:29:27.820
Super High IQ Styling.

01:29:27.820 --> 01:29:29.820
Style.

01:29:31.820 --> 01:29:33.820
Äh.

01:29:33.820 --> 01:29:35.820
Color.

01:29:35.820 --> 01:29:37.820
Brown.

01:29:37.820 --> 01:29:39.820
Red.

01:29:39.820 --> 01:29:41.820
Und jetzt machen wir da mal

01:29:41.820 --> 01:29:43.820
eine H2 draus, das ist schön fett.

01:29:43.820 --> 01:29:47.130
So, unsere

01:29:47.130 --> 01:29:49.130
Kekkel-Component ist am Start.

01:29:49.130 --> 01:29:51.130
So, und was kann die jetzt

01:29:51.130 --> 01:29:53.130
exportieren?

01:29:53.130 --> 01:29:55.130
Das muss ich jetzt versuchen mal zu checken.

01:29:55.130 --> 01:29:57.130
Also früher hat man, also

01:29:57.130 --> 01:29:59.130
früher hätte ich da jetzt gesagt, okay.

01:29:59.130 --> 01:30:01.130
Früher hätte ich

01:30:01.130 --> 01:30:03.130
gesagt, Script.

01:30:03.130 --> 01:30:05.130
Script.

01:30:05.130 --> 01:30:07.130
Und jetzt export let,

01:30:07.130 --> 01:30:09.130
sag mal Text zum Beispiel.

01:30:09.130 --> 01:30:11.130
Default Text ist Kekkel.

01:30:11.130 --> 01:30:13.130
So, und hier

01:30:13.130 --> 01:30:15.130
rendern wir jetzt den Text, den wir übergeben.

01:30:15.130 --> 01:30:18.890
Äh, nicht der Text.

01:30:18.890 --> 01:30:20.890
Ja, das funzt.

01:30:20.890 --> 01:30:22.890
So, jetzt kann ich das ganze hier drinnen überschreiben.

01:30:22.890 --> 01:30:24.890
Ich kann jetzt zum Beispiel sagen, Text ist jetzt nicht

01:30:24.890 --> 01:30:26.890
Kekkel, sondern Lull. Und dann steht da

01:30:26.890 --> 01:30:28.890
Lull drinnen. So, und

01:30:28.890 --> 01:30:30.890
was ist jetzt der Vorteil von dieser

01:30:30.890 --> 01:30:32.890
komischen Geschichte hier?

01:30:32.890 --> 01:30:34.890
What the

01:30:34.890 --> 01:30:36.890
fuck?

01:30:36.890 --> 01:30:38.890
Also,

01:30:38.890 --> 01:30:40.890
man darf das nicht mischen, okay.

01:30:40.890 --> 01:30:46.180
Also, anstelle,

01:30:46.180 --> 01:30:48.180
okay, also,

01:30:48.180 --> 01:30:50.180
anstelle von export let,

01:30:50.180 --> 01:30:52.180
sag ich jetzt Text gleich

01:30:52.180 --> 01:30:54.180
sowas hier. So, und dann

01:30:54.180 --> 01:30:56.180
funzt's wieder. Aber was

01:30:56.180 --> 01:30:58.180
ist jetzt der Vorteil davon?

01:30:58.180 --> 01:31:00.180
Außer, dass es komplizierter ausschaut.

01:31:00.180 --> 01:31:05.740
Das check ich nicht.

01:31:05.740 --> 01:31:10.650
Was bringt das jetzt?

01:31:10.650 --> 01:31:14.410
Guck mal doch mal.

01:31:14.410 --> 01:31:27.130
Okay, Props.

01:31:27.130 --> 01:31:29.130
To declare component props, use the

01:31:29.130 --> 01:31:31.130
props rune. Okay,

01:31:31.130 --> 01:31:34.700
ja, haben wir gemacht.

01:31:34.700 --> 01:31:36.700
Dass du alle Props in einem Objekt,

01:31:36.700 --> 01:31:38.700
ja und, was interessiert mich das?

01:31:38.700 --> 01:31:40.700
Ob ich jetzt fünf Exports untereinander

01:31:40.700 --> 01:31:42.700
schreibe oder das hier geklammert,

01:31:42.700 --> 01:31:46.840
macht doch für mich keinen Unterschied?

01:31:46.840 --> 01:31:48.840
You can use familiar, aha, okay,

01:31:48.840 --> 01:31:50.840
okay, okay.

01:31:50.840 --> 01:31:52.840
You can use familiar destructing syntax

01:31:52.840 --> 01:31:59.100
to rename props in case...

01:31:59.100 --> 01:32:01.100
Ja, gut, das ist ja sehr,

01:32:01.100 --> 01:32:03.100
sagen wir mal,

01:32:03.100 --> 01:32:05.100
in dieser Nische jetzt,

01:32:05.100 --> 01:32:07.100
dass man Schlüsselwörter, dass man quasi

01:32:07.100 --> 01:32:09.100
Prop-Namen wie Schlüsselwörter braucht.

01:32:09.100 --> 01:32:11.100
Aber okay, gut, dass er...

01:32:11.100 --> 01:32:13.100
To get all properties, use

01:32:13.100 --> 01:32:15.100
rest syntax.

01:32:15.100 --> 01:32:17.100
Aaaah.

01:32:19.100 --> 01:32:21.100
Ach so!

01:32:21.100 --> 01:32:27.160
Okay,

01:32:27.160 --> 01:32:29.160
das ist glaube ich ganz

01:32:29.160 --> 01:32:32.470
nice. Da bin ich mir jetzt

01:32:32.470 --> 01:32:34.470
und so, ich glaube das ist ganz nice.

01:32:34.470 --> 01:32:36.470
Da kann ich jetzt zum Beispiel

01:32:36.470 --> 01:32:40.550
sowas hier machen.

01:32:40.550 --> 01:32:42.550
Nennen wir das mal, so.

01:32:42.550 --> 01:32:44.550
Okay, okay.

01:32:44.550 --> 01:32:46.550
Mal angenommen, ich übergebe jetzt hier sowas wie optional,

01:32:46.550 --> 01:32:48.550
ja, irgendwie, ich übergebe

01:32:48.550 --> 01:32:50.550
jetzt sowas wie, wie,

01:32:50.550 --> 01:32:52.550
onclick.

01:32:52.550 --> 01:32:56.060
Okay, ich glaube,

01:32:56.060 --> 01:32:58.060
das ist tatsächlich sehr nice.

01:32:58.060 --> 01:33:00.060
Ich übergebe jetzt onclick.

01:33:00.060 --> 01:33:02.060
Count

01:33:02.060 --> 01:33:04.060
plus plus.

01:33:04.060 --> 01:33:08.200
So, und in diesem Rest

01:33:08.200 --> 01:33:10.200
ist jetzt, so mal angenommen, ich hab

01:33:10.200 --> 01:33:12.200
jetzt hier drinnen, wir machen das mal weg,

01:33:12.200 --> 01:33:14.200
ich hab jetzt hier drinnen einen Button, wir kopieren uns

01:33:14.200 --> 01:33:16.200
mal den Button.

01:33:16.200 --> 01:33:18.200
Ich hab jetzt hier drinnen einen Button

01:33:20.200 --> 01:33:22.200
und der kriegt jetzt, ja, wie mach ich

01:33:22.200 --> 01:33:24.200
denn das? Dollar, Dollar,

01:33:24.200 --> 01:33:26.200
Rest vielleicht? Nee, äh, what the

01:33:26.200 --> 01:33:28.200
fuck?

01:33:28.200 --> 01:33:30.200
Hops, so?

01:33:32.200 --> 01:33:34.200
Rest? Nee.

01:33:34.200 --> 01:33:38.470
Einfach so?

01:33:38.470 --> 01:33:45.940
Nee. Ah, ich hab gedacht,

01:33:45.940 --> 01:33:47.940
das funktioniert.

01:33:47.940 --> 01:33:49.940
Das sind Runes!

01:33:49.940 --> 01:33:51.940
Nee.

01:33:51.940 --> 01:33:53.940
Ich dachte, so funktioniert das.

01:33:53.940 --> 01:33:55.940
Das wär nämlich nice, wenn man das machen

01:33:55.940 --> 01:34:02.070
könnte, aber so.

01:34:02.070 --> 01:34:04.070
Also, man kann es destructen.

01:34:04.070 --> 01:34:11.350
This replaces export let

01:34:11.350 --> 01:34:13.350
export, ja, ja.

01:34:13.350 --> 01:34:15.350
It also

01:34:15.350 --> 01:34:17.350
replaces dollar dollar props

01:34:17.350 --> 01:34:22.580
and rest props.

01:34:22.580 --> 01:34:24.580
So richtig checken tue ich sein?

01:34:24.580 --> 01:34:26.580
Also, wisst ihr,

01:34:26.580 --> 01:34:28.580
wisst ihr, was ich jetzt eigentlich dachte ist?

01:34:28.580 --> 01:34:30.580
Man kann so

01:34:30.580 --> 01:34:32.580
quasi Sachen

01:34:32.580 --> 01:34:34.580
durchreichen an

01:34:34.580 --> 01:34:36.580
Child-Elemente innerhalb dieser

01:34:36.580 --> 01:34:38.580
Component, ohne dass ich

01:34:38.580 --> 01:34:40.580
jeden Mist extra

01:34:40.580 --> 01:34:42.580
definieren muss.

01:34:42.580 --> 01:34:44.580
Das ging vorher auch schon, war aber vorher ein bisschen

01:34:44.580 --> 01:34:46.580
Achso, ja.

01:34:46.580 --> 01:34:48.580
Weiß ich nicht.

01:34:48.580 --> 01:34:50.580
Was ist mit

01:34:50.580 --> 01:34:52.580
der Chat, als er da immer

01:34:52.580 --> 01:34:54.580
Alter, ich kann ja immer

01:34:54.580 --> 01:35:01.350
What the fuck?

01:35:01.350 --> 01:35:03.350
Ah, das Fundst.

01:35:03.350 --> 01:35:05.350
Nice! Ja, das

01:35:05.350 --> 01:35:07.350
ist cool!

01:35:07.350 --> 01:35:09.350
Das ist cool! Okay, das gefällt,

01:35:09.350 --> 01:35:11.350
ja, das hat was.

01:35:11.350 --> 01:35:13.350
Ich mach mal kurz hier unten den Kram weg.

01:35:13.350 --> 01:35:15.350
Guckt mal.

01:35:15.350 --> 01:35:17.350
Moment, okay, count muss ich da lassen.

01:35:17.350 --> 01:35:19.350
Ich mach mal nur den Button weg.

01:35:19.350 --> 01:35:21.350
Ja, das ist in der Tat jetzt wirklich nice.

01:35:21.350 --> 01:35:23.350
Also,

01:35:23.350 --> 01:35:25.350
nur mal zur Erklärung, guckt mal.

01:35:25.350 --> 01:35:27.350
Ich übergebe hier,

01:35:27.350 --> 01:35:29.350
das kennt er jetzt natürlich nicht, oder?

01:35:29.350 --> 01:35:31.350
Weiß der, dass ich on

01:35:31.350 --> 01:35:33.350
key

01:35:33.350 --> 01:35:35.350
oder so, weiß der, dass das

01:35:35.350 --> 01:35:37.350
in einem Button sitzt? Ist der so schlau?

01:35:37.350 --> 01:35:39.350
Guckt mal, ich übergebe hier

01:35:39.350 --> 01:35:42.860
als Property

01:35:42.860 --> 01:35:44.860
gibt es Text. Text ist

01:35:44.860 --> 01:35:46.860
das einzige, was ich definiert habe.

01:35:46.860 --> 01:35:48.860
Aber ich kann auch on click zum Beispiel

01:35:48.860 --> 01:35:50.860
übergeben und on click

01:35:50.860 --> 01:35:52.860
hänge ich dann hier unten drunter

01:35:52.860 --> 01:35:54.860
an den Button. Das heißt, ich kann

01:35:54.860 --> 01:35:56.860
jetzt hier alles durchreichen an

01:35:56.860 --> 01:35:58.860
den Button in der Component, also auch

01:35:58.860 --> 01:36:00.860
sowas wie

01:36:00.860 --> 01:36:02.860
on key down und solche Sachen.

01:36:02.860 --> 01:36:04.860
Das ist

01:36:04.860 --> 01:36:06.860
cool.

01:36:06.860 --> 01:36:11.900
Das finde ich ganz nice.

01:36:11.900 --> 01:36:13.900
Kann ich auch sowas durchreichen

01:36:13.900 --> 01:36:15.900
wie class gleich?

01:36:15.900 --> 01:36:17.900
Class gleich?

01:36:17.900 --> 01:36:19.900
Ja,

01:36:19.900 --> 01:36:21.900
keine Ahnung.

01:36:21.900 --> 01:36:23.900
Hallo?

01:36:23.900 --> 01:36:27.400
Red?

01:36:27.400 --> 01:36:29.400
Ne, das funktioniert nicht.

01:36:29.400 --> 01:36:31.400
Das liegt aber bestimmt daran, weil das irgendwie

01:36:31.400 --> 01:36:33.400
reserved ist.

01:36:33.400 --> 01:36:35.400
Das funktioniert bestimmt auch irgendwie,

01:36:35.400 --> 01:36:41.400
wenn man es gescheit macht.

01:36:41.400 --> 01:36:43.400
Aber nicht direkt.

01:36:43.400 --> 01:36:45.400
Moment, das ist ja auch nicht

01:36:45.400 --> 01:36:47.400
class. Style will ich durchreichen.

01:36:47.400 --> 01:36:49.400
Das Funst. Ja, das ist cool,

01:36:49.400 --> 01:36:58.660
dass das geht.

01:36:58.660 --> 01:37:00.660
Das gefällt mir in der Tat ganz gut.

01:37:00.660 --> 01:37:07.300
Da kann man

01:37:07.300 --> 01:37:09.300
quasi jetzt auch

01:37:09.300 --> 01:37:11.300
Komponenten stylen, wie man das in

01:37:11.300 --> 01:37:13.300
View machen konnte.

01:37:13.300 --> 01:37:15.300
Ohne Trick 17.

01:37:15.300 --> 01:37:24.950
Das finde ich gut.

01:37:24.950 --> 01:37:28.780
Das gefällt mir.

01:37:28.780 --> 01:37:35.100
Ja.

01:37:35.100 --> 01:37:37.100
Ja, das hat was.

01:37:37.100 --> 01:37:39.100
Das ist eine gute Änderung.

01:37:39.100 --> 01:37:41.100
Also, ich werde immer noch nicht

01:37:41.100 --> 01:37:43.100
so ganz mit dieser Syntax da oben warm,

01:37:43.100 --> 01:37:46.470
ehrlich gesagt.

01:37:46.470 --> 01:37:50.040
Aber das gefällt mir, das ist cool.

01:37:50.040 --> 01:37:57.190
Was schreiben die sonst noch so?

01:37:57.190 --> 01:38:02.740
Oh, nix weiter, oder?

01:38:02.740 --> 01:38:04.740
Das wird gebaut, gar nix.

01:38:04.740 --> 01:38:06.740
Wir gucken uns die Unterschiede zwischen

01:38:06.740 --> 01:38:08.740
Svelte 5 und Svelte 4 an.

01:38:08.740 --> 01:38:10.740
Ups.

01:38:10.740 --> 01:38:12.740
Ne, das gefällt mir. Das ist nice.

01:38:12.740 --> 01:38:14.740
Das ist nice.

01:38:14.740 --> 01:38:16.740
Dass man das so durchreichen kann.

01:38:16.740 --> 01:38:18.740
Ohne, vor allem durchreichen kann,

01:38:18.740 --> 01:38:20.740
ohne irgendwelche Magic Sachen.

01:38:20.740 --> 01:38:22.740
Es gab ja vorher auch schon so komische

01:38:22.740 --> 01:38:24.740
Dinger hier, aber das ist jetzt relativ

01:38:24.740 --> 01:38:26.740
klar. Du siehst hier oben, okay, Reste,

01:38:26.740 --> 01:38:28.740
restliche Sachen stecken hier drin und hier werden die dann

01:38:28.740 --> 01:38:32.570
quasi destructed.

01:38:32.570 --> 01:38:34.570
Sehr nice. Das ist eine gute Sache. Das gefällt mir.

01:38:34.570 --> 01:38:36.570
Okay.

01:38:36.570 --> 01:38:38.570
Also, proper.

01:38:38.570 --> 01:38:40.570
Ja, und ansonsten, hat das sonst irgendwelche Vorteile?

01:38:40.570 --> 01:38:42.570
Nö, oder? Einfach, dass es ein bisschen hübscher ist.

01:38:42.570 --> 01:38:44.570
Wobei das hier, da kann man

01:38:44.570 --> 01:38:46.570
sich jetzt echt drüber streiten. Also, ich muss sagen,

01:38:46.570 --> 01:38:48.570
Export LED finde ich

01:38:48.570 --> 01:38:50.570
optisch schon etwas schöner als

01:38:50.570 --> 01:38:52.570
so, wie

01:38:52.570 --> 01:38:54.570
es jetzt ist. In 5.

01:38:56.570 --> 01:38:58.570
Aber das Destructing finde ich

01:38:58.570 --> 01:39:00.570
tatsächlich in 5 sehr nice.

01:39:00.570 --> 01:39:05.990
Ja, gut.

01:39:05.990 --> 01:39:07.990
Da muss man sich dran gewöhnen.

01:39:07.990 --> 01:39:09.990
Es ist aber nicht so eine große Umstellung wie

01:39:09.990 --> 01:39:11.990
damals von View 2 auf View 3,

01:39:11.990 --> 01:39:13.990
wo gefühlt alles anders aussah.

01:39:13.990 --> 01:39:15.990
Man konnte zwar das alte noch

01:39:15.990 --> 01:39:17.990
verwenden, aber keiner wollte es. Übrigens, vieles davon

01:39:17.990 --> 01:39:19.990
ist ähnlich, wie sie es auch in View 3

01:39:19.990 --> 01:39:25.480
gemacht haben. Ja, in

01:39:25.480 --> 01:39:27.480
View 3 heißt es eigentlich dann Use Ref

01:39:27.480 --> 01:39:32.460
und so Zeug. Okay, nice.

01:39:32.460 --> 01:39:34.460
Ah, das gefällt mir schon mal.

01:39:34.460 --> 01:39:47.180
Emit to Parent.

01:39:47.180 --> 01:39:50.940
Ich sehe keinen Unterschied.

01:39:50.940 --> 01:39:55.270
Achso, ich muss in Button gucken.

01:39:55.270 --> 01:39:59.160
Oh, okay.

01:39:59.160 --> 01:40:01.160
Achso!

01:40:01.160 --> 01:40:03.160
Jetzt ergibt das mit den

01:40:03.160 --> 01:40:05.160
Props nochmal ein bisschen mehr Sinn.

01:40:05.160 --> 01:40:12.700
Man kann quasi

01:40:12.700 --> 01:40:14.700
auch da drüber logischerweise dann

01:40:14.700 --> 01:40:16.700
Events bzw. Funktionen

01:40:16.700 --> 01:40:18.700
austauschen. Ja, das

01:40:18.700 --> 01:40:24.180
ist cool. Wobei,

01:40:24.180 --> 01:40:26.180
warum ging das eigentlich im Alten nicht schon?

01:40:26.180 --> 01:40:35.060
Mir ist eigentlich fast erwartet, dass es ging

01:40:35.060 --> 01:40:37.060
im Alten auch schon, aber anscheinend nicht.

01:40:37.060 --> 01:40:39.060
Ja, also in

01:40:39.060 --> 01:40:41.060
World 4, da kann ich mich noch dunkel dran erinnern,

01:40:41.060 --> 01:40:43.060
da musste man so komische Dinger hier machen.

01:40:43.060 --> 01:40:45.060
Also, wenn du eine Custom Komponente

01:40:45.060 --> 01:40:47.060
hattest

01:40:47.060 --> 01:40:49.060
und ich sollte ein Event werfen

01:40:49.060 --> 01:40:51.060
oder auch nur

01:40:51.060 --> 01:40:53.060
das Button

01:40:53.060 --> 01:40:55.060
Event irgendwie durchreichen,

01:40:55.060 --> 01:41:02.470
dann musste man das mit

01:41:02.470 --> 01:41:06.420
Create Event Dispatcher

01:41:06.420 --> 01:41:08.420
machen. Okay.

01:41:08.420 --> 01:41:10.420
Ja, also sprich, das was wir hier gemacht haben,

01:41:10.420 --> 01:41:12.420
wir haben quasi intuitiv

01:41:12.420 --> 01:41:14.420
das gemacht, was wir in dem nächsten Beispiel

01:41:14.420 --> 01:41:25.930
erklären. Ne, keine Ahnung.

01:41:25.930 --> 01:41:29.430
Odolmit.

01:41:29.430 --> 01:41:31.430
Wir haben das nächste Beispiel schon vorweg gegriffen,

01:41:31.430 --> 01:41:33.430
ohne dass wir es gesehen haben.

01:41:33.430 --> 01:41:35.430
Die machen nämlich genau das hier, guck mal.

01:41:35.430 --> 01:41:37.430
Die reichen quasi Child Elemente

01:41:37.430 --> 01:41:39.430
Events

01:41:39.430 --> 01:41:41.430
durch

01:41:41.430 --> 01:41:45.130
an die Parent

01:41:45.130 --> 01:41:47.130
Komponente hier, mit OnClick in dem Fall.

01:41:47.130 --> 01:41:49.130
Also, wir geben die Funktion da rein, aber

01:41:49.130 --> 01:41:51.130
das OnClick Event kommt ja von dem Button

01:41:51.130 --> 01:41:53.130
hier

01:41:53.130 --> 01:41:55.130
in der

01:41:55.130 --> 01:41:57.130
Child Component.

01:41:57.130 --> 01:41:59.130
Und das ging anscheinend vorher nicht.

01:41:59.130 --> 01:42:01.130
Vorher musste man wohl

01:42:01.130 --> 01:42:03.130
jedes Event, was man weiterreichen

01:42:03.130 --> 01:42:05.130
möchte, von einem

01:42:05.130 --> 01:42:07.130
quasi nested Element

01:42:07.130 --> 01:42:09.130
in der Child Component, musste man irgendwie explizit

01:42:09.130 --> 01:42:11.130
nochmal exporten.

01:42:11.130 --> 01:42:13.130
Ja, das ist nice, dass das

01:42:13.130 --> 01:42:15.130
jetzt nicht mehr braucht, dass man das jetzt nicht mehr braucht.

01:42:15.130 --> 01:42:17.130
Das finde ich schonmal viel besser so.

01:42:17.130 --> 01:42:19.130
Dann nehme ich auch diese komische Prop Syntax

01:42:19.130 --> 01:42:21.130
in Kauf.

01:42:21.130 --> 01:42:23.130
Das finde ich cool.

01:42:23.130 --> 01:42:25.130
Doch, das hat

01:42:25.130 --> 01:42:27.130
tatsächlich was.

01:42:27.130 --> 01:42:29.130
Du, du, du, du, du,

01:42:29.130 --> 01:42:31.130
du, du, du, du, du, du,

01:42:31.130 --> 01:42:47.370
du.

01:42:47.370 --> 01:42:49.370
Ein Stream ist super, schön, dass ihr das gefällt.

01:42:49.370 --> 01:42:51.370
Hog.

01:42:51.370 --> 01:42:57.620
Oder um nicht zu sagen,

01:42:57.620 --> 01:42:59.620
sehr, sehr

01:42:59.620 --> 01:43:04.860
Chat wieder super

01:43:04.860 --> 01:43:06.860
freundlich zu neuen Leuten.

01:43:06.860 --> 01:43:17.400
Ja, ja, ich sehe es schon.

01:43:17.400 --> 01:43:19.400
Ja, das ist gut.

01:43:19.400 --> 01:43:21.400
Ich glaube, das werde ich ausgiebig benutzen.

01:43:21.400 --> 01:43:23.400
Wenn dann Svelte 5.

01:43:23.400 --> 01:43:25.400
Wenn

01:43:25.400 --> 01:43:27.400
der Fiat Champ irgendwann

01:43:27.400 --> 01:43:31.100
mal weiterentwickelt wird,

01:43:31.100 --> 01:43:33.100
was er ja nicht notwendig hat, weil es sind ja

01:43:33.100 --> 01:43:35.100
keine Probleme bekannt, wie man hier

01:43:35.100 --> 01:43:37.100
sieht. Das ist alles

01:43:37.100 --> 01:43:39.100
Skill Issues auf

01:43:39.100 --> 01:43:41.100
User Seite.

01:43:41.100 --> 01:43:43.100
Wenn er mal irgendwann weiterentwickelt wird,

01:43:43.100 --> 01:43:45.100
dann, oh, guck mal,

01:43:45.100 --> 01:43:47.100
ich habe die 80 Sterne, nice.

01:43:47.100 --> 01:43:49.100
Dann kriegt das ins

01:43:49.100 --> 01:43:57.270
Svelte 5 Frontend.

01:43:57.270 --> 01:43:59.270
Nicht won't fix, ich brauche Hashtag Skill Issue.

01:43:59.270 --> 01:44:04.500
Es ist ja

01:44:04.500 --> 01:44:06.500
offensichtlich

01:44:06.500 --> 01:44:08.500
der User Fehler, dass es keine AM64

01:44:08.500 --> 01:44:10.500
Version gibt, oder?

01:44:10.500 --> 01:44:12.500
Kann ich doch nichts für.

01:44:14.500 --> 01:44:16.500
Wobei,

01:44:16.500 --> 01:44:18.500
jetzt so blöd es klingt, ich glaube, es gibt wirklich

01:44:18.500 --> 01:44:20.500
eine AM64 Version davon.

01:44:20.500 --> 01:44:22.500
Moment, Moment.

01:44:22.500 --> 01:44:26.330
Ach nee, gibt es nicht.

01:44:26.330 --> 01:44:30.220
Okay, ich habe nichts gesagt.

01:44:30.220 --> 01:44:32.220
Es gibt nur eine

01:44:32.220 --> 01:44:34.220
AMD64 und eine AMV7 Version.

01:44:34.220 --> 01:44:36.220
Auf der anderen Seite,

01:44:36.220 --> 01:44:38.220
der kann doch ohne Probleme

01:44:38.220 --> 01:44:40.220
die AMV7 auf

01:44:40.220 --> 01:44:42.220
AM64 laufen lassen, oder?

01:44:42.220 --> 01:44:44.220
Natürlich

01:44:44.220 --> 01:44:46.220
geht das.

01:44:46.220 --> 01:44:48.220
Also ich bin jetzt immer fest davon ausgegangen,

01:44:48.220 --> 01:44:51.850
dass das funktioniert.

01:44:51.850 --> 01:44:53.850
Guck mal hier, gar nicht so wenige Downloadzahlen

01:44:53.850 --> 01:45:01.260
der Fiat Champ.

01:45:01.260 --> 01:45:03.260
13.000 Downloads hier.

01:45:03.260 --> 01:45:23.980
Ich habe Hunger.

01:45:23.980 --> 01:45:25.980
Ich muss mir gleich was zu essen holen.

01:45:25.980 --> 01:45:32.620
Aber wir sind noch nicht fertig.

01:45:32.620 --> 01:45:34.620
Wir können auch kurze Pause machen.

01:45:34.620 --> 01:45:36.620
Ich esse was, wir gucken irgendwas und danach machen wir weiter.

01:45:36.620 --> 01:45:38.620
Könnten wir auch machen.

01:45:38.620 --> 01:45:42.570
Pause Champ sozusagen.

01:45:42.570 --> 01:45:44.570
Real Life Pause Champ.

01:45:44.570 --> 01:45:54.280
Eating Champ.

01:45:54.280 --> 01:46:01.180
Dinner Champ.

01:46:01.180 --> 01:46:03.180
Okay, was ändert sich noch?

01:46:03.180 --> 01:46:05.180
Slot ändert sich.

01:46:05.180 --> 01:46:07.180
Svelte 4 vs Svelte 5.

01:46:07.180 --> 01:46:09.180
Ich sehe keinen Unterschied.

01:46:09.180 --> 01:46:11.180
Okay, ich sehe einfach,

01:46:11.180 --> 01:46:13.180
dass es größer, dass es länger ist.

01:46:15.180 --> 01:46:18.550
Okay, was bin ich hier sehend?

01:46:18.550 --> 01:46:20.550
Let children props

01:46:20.550 --> 01:46:24.060
render?

01:46:24.060 --> 01:46:29.220
But why?

01:46:29.220 --> 01:46:37.270
Was ist der Sinn davon?

01:46:37.270 --> 01:46:41.610
Also Slot

01:46:41.610 --> 01:46:43.610
ist

01:46:43.610 --> 01:46:45.610
bei Svelte quasi ein Platzhalter,

01:46:45.610 --> 01:46:47.610
wo

01:46:47.610 --> 01:46:49.610
andere Komponenten

01:46:49.610 --> 01:46:51.610
also andere Sachen eingesetzt werden.

01:46:51.610 --> 01:46:53.610
Also

01:46:53.610 --> 01:46:55.610
ich kann zum Beispiel, ich zeige euch das mal,

01:46:55.610 --> 01:46:57.610
ich kann jetzt zum Beispiel hier sagen,

01:46:57.610 --> 01:46:59.610
keine Ahnung,

01:46:59.610 --> 01:47:01.610
div, da schreibe ich rein

01:47:01.610 --> 01:47:04.980
Slot

01:47:04.980 --> 01:47:06.980
und

01:47:06.980 --> 01:47:08.980
jetzt kann ich in die

01:47:08.980 --> 01:47:10.980
in die Komponente kann ich noch was reinschreiben,

01:47:10.980 --> 01:47:12.980
was dann in den Slot gerendert wird.

01:47:12.980 --> 01:47:14.980
Zum Beispiel kekw.

01:47:14.980 --> 01:47:16.980
Guck, dann taucht das da drin auf.

01:47:16.980 --> 01:47:18.980
Der rendert quasi das,

01:47:18.980 --> 01:47:20.980
was ich hier reinstecke in den ersten Slot.

01:47:20.980 --> 01:47:25.130
Vorher konnte man nicht

01:47:25.130 --> 01:47:27.130
selektieren, wo was angezeigt wird, wenn es mehrere

01:47:27.130 --> 01:47:29.130
sind. Doch, oder?

01:47:29.130 --> 01:47:31.130
Du konntest doch Name Slots verwenden.

01:47:31.130 --> 01:47:33.130
Du konntest sagen name kekw

01:47:33.130 --> 01:47:35.130
und dann konntest du das irgendwie

01:47:35.130 --> 01:47:37.130
frag mich nicht mehr, wie das genau

01:47:37.130 --> 01:47:41.850
funktioniert hat.

01:47:41.850 --> 01:47:43.850
Ich weiß jetzt nicht, wie man da

01:47:43.850 --> 01:47:45.850
also, da bin ich jetzt

01:47:45.850 --> 01:47:47.850
überfragt, wie man das jetzt dort

01:47:49.850 --> 01:47:51.850
richtig rein gerendert hat.

01:47:51.850 --> 01:47:53.850
Musste man dann hier irgendwie sagen Slot

01:47:53.850 --> 01:47:55.850
oder so?

01:47:55.850 --> 01:48:02.300
kekw?

01:48:02.300 --> 01:48:04.300
Ja, so ging das.

01:48:04.300 --> 01:48:06.300
Aber, da verstehe ich jetzt den

01:48:06.300 --> 01:48:08.300
den Sinn davon ehrlich gesagt nicht.

01:48:08.300 --> 01:48:14.040
Slot

01:48:14.040 --> 01:48:24.710
Ja, if

01:48:24.710 --> 01:48:26.710
Ja, okay, okay, das leuchtet mir alles

01:48:26.710 --> 01:48:34.700
ein, aber Slot.

01:48:34.700 --> 01:48:39.220
Da müssen wir uns jetzt...

01:48:39.220 --> 01:48:46.890
Render. Ja.

01:48:46.890 --> 01:48:48.890
Snippets?

01:48:48.890 --> 01:48:50.890
Ist hier drinne?

01:48:50.890 --> 01:48:52.890
Äh.

01:48:52.890 --> 01:48:54.890
Endhändler, Functions?

01:48:54.890 --> 01:48:56.890
Render.

01:48:56.890 --> 01:48:58.890
Add Render.

01:48:58.890 --> 01:49:00.890
Hier ist nichts drinne.

01:49:00.890 --> 01:49:02.890
Ah, doch, tatsächlich.

01:49:02.890 --> 01:49:06.520
Okay, also.

01:49:06.520 --> 01:49:08.520
Das Ganze ist wohl ein Bestandteil

01:49:08.520 --> 01:49:12.220
von Snippets.

01:49:12.220 --> 01:49:14.220
Was auch immer. Okay, Beispiel.

01:49:14.220 --> 01:49:16.220
Snippets and Render Tags

01:49:16.220 --> 01:49:18.220
are a way to create reusable

01:49:18.220 --> 01:49:20.220
chunks of markup inside your

01:49:20.220 --> 01:49:22.220
Components. Also quasi kleine

01:49:22.220 --> 01:49:24.220
Subkomponenten in der Komp...

01:49:24.220 --> 01:49:26.220
Naja, ne, nicht Komponenten.

01:49:26.220 --> 01:49:28.220
Ja, Snippets halt.

01:49:28.220 --> 01:49:30.220
Wiederverwendbare

01:49:30.220 --> 01:49:32.220
Ach

01:49:32.220 --> 01:49:34.220
so!

01:49:34.220 --> 01:49:36.220
Ich glaub so langsam

01:49:36.220 --> 01:49:38.220
aber sicher check ich, worauf das

01:49:38.220 --> 01:49:40.220
rausläuft.

01:49:40.220 --> 01:49:42.220
Ich könnte jetzt quasi sowas hier

01:49:42.220 --> 01:49:44.220
reinschreiben. Und das irgendwie

01:49:44.220 --> 01:49:50.150
mehrfach verwenden.

01:49:50.150 --> 01:49:52.150
Wie referenziert man da jetzt drauf?

01:49:52.150 --> 01:49:54.150
Also hier, kein Slot.

01:49:54.150 --> 01:49:56.150
Oder wie auch immer.

01:49:56.150 --> 01:49:58.150
Wie Referenz. Das muss ich auch mal durch...

01:49:58.150 --> 01:50:03.510
Das könnte tatsächlich was cooles sein.

01:50:03.510 --> 01:50:05.510
If Image...

01:50:05.510 --> 01:50:07.510
Snippet.

01:50:07.510 --> 01:50:11.660
Ah!

01:50:11.660 --> 01:50:13.660
Ach so!

01:50:13.660 --> 01:50:15.660
Okay, das ist in der Tat doch ganz cool.

01:50:15.660 --> 01:50:17.660
Ich checke noch nicht,

01:50:17.660 --> 01:50:19.660
was es mit Slots zu tun hat, ehrlich gesagt.

01:50:19.660 --> 01:50:21.660
Aber okay.

01:50:21.660 --> 01:50:23.660
Das ist in der Tat ganz cool.

01:50:23.660 --> 01:50:27.930
Also, kopieren wir

01:50:27.930 --> 01:50:29.930
das mal.

01:50:29.930 --> 01:50:31.930
Snippet.

01:50:31.930 --> 01:50:33.930
Das nennen wir nicht Figure, das nennen wir...

01:50:33.930 --> 01:50:35.930
Cackle.

01:50:35.930 --> 01:50:37.930
Oh!

01:50:37.930 --> 01:50:46.680
Image.

01:50:46.680 --> 01:50:48.680
Oh!

01:50:48.680 --> 01:50:50.680
Source.

01:50:50.680 --> 01:50:52.680
Ja.

01:50:52.680 --> 01:50:54.680
Ist mir alles egal, ja.

01:50:54.680 --> 01:51:02.980
Ach so, der sagt, dass ich

01:51:02.980 --> 01:51:04.980
kein Alt-Text hab.

01:51:04.980 --> 01:51:06.980
So, jetzt haben wir einen

01:51:06.980 --> 01:51:08.980
Snippet-Cackle, was

01:51:08.980 --> 01:51:10.980
jetzt ja so nichts macht.

01:51:10.980 --> 01:51:15.000
Und jetzt kann ich sagen,

01:51:15.000 --> 01:51:17.000
ich will das mehrfach rendern.

01:51:17.000 --> 01:51:19.000
An unterschiedlichen Stellen.

01:51:19.000 --> 01:51:23.020
Und wie?

01:51:23.020 --> 01:51:25.020
Add Render.

01:51:25.020 --> 01:51:27.020
Okay.

01:51:27.020 --> 01:51:29.020
Also, Add Render Cackle.

01:51:29.020 --> 01:51:31.020
Da ist es

01:51:31.020 --> 01:51:33.020
einmal. Und jetzt?

01:51:35.020 --> 01:51:39.670
Aha!

01:51:39.670 --> 01:51:41.670
Okay, das ist nicht übel.

01:51:41.670 --> 01:51:43.670
Das ist tatsächlich

01:51:43.670 --> 01:51:45.670
ganz cool. Ich hab jetzt

01:51:45.670 --> 01:51:47.670
wirklich grad nicht greifbar,

01:51:47.670 --> 01:51:51.500
weil ich das gebraucht hätte.

01:51:51.500 --> 01:51:53.500
Aber ich geh davon aus, wenn es das gibt,

01:51:53.500 --> 01:51:55.500
man braucht das tatsächlich öfters.

01:51:55.500 --> 01:51:57.500
Das Beispiel ist doch gar nicht so schlecht.

01:51:57.500 --> 01:51:59.500
Guck mal.

01:51:59.500 --> 01:52:01.500
Die wollen beide Male

01:52:01.500 --> 01:52:03.500
wollen sie hier Image-Sachen rendern.

01:52:03.500 --> 01:52:05.500
Einmal

01:52:05.500 --> 01:52:07.500
bei der Bedingung und einmal

01:52:07.500 --> 01:52:13.750
default im Endeffekt.

01:52:13.750 --> 01:52:15.750
Ach nee. Einmal, wenn das

01:52:15.750 --> 01:52:17.750
gesetzt ist und einmal, wenn das...

01:52:17.750 --> 01:52:19.750
Okay. Heißt

01:52:19.750 --> 01:52:21.750
im Endeffekt, wenn ich

01:52:21.750 --> 01:52:23.750
beispielsweise...

01:52:23.750 --> 01:52:25.750
Ich hab ein gutes Beispiel.

01:52:25.750 --> 01:52:27.750
Avatar-Bilder zum Beispiel.

01:52:27.750 --> 01:52:29.750
Avatar-Bilder.

01:52:29.750 --> 01:52:31.750
Avatar-Bilder braucht man mehrfach auf der Seite

01:52:31.750 --> 01:52:33.750
mit ein paar unterschiedlichen Settings.

01:52:33.750 --> 01:52:35.750
Vielleicht.

01:52:35.750 --> 01:52:37.750
Und dann legt man sich einmal hier das Snippet

01:52:37.750 --> 01:52:39.750
für Avatar-Bilder an.

01:52:39.750 --> 01:52:41.750
Und kann das dann rendern.

01:52:41.750 --> 01:52:43.750
Ja, irgendwie

01:52:43.750 --> 01:52:45.750
oben links in der Komponente

01:52:45.750 --> 01:52:47.750
und dann irgendwie nochmal in der Mitte von der Komponente.

01:52:47.750 --> 01:52:49.750
Was auch immer.

01:52:49.750 --> 01:52:51.750
Da ist noch kein richtig greifbares

01:52:51.750 --> 01:52:53.750
richtig gutes Beispiel.

01:52:53.750 --> 01:52:55.750
Aber ich glaube, das kann man gut verwenden.

01:52:55.750 --> 01:52:57.750
Ich meine, an der Stelle

01:52:57.750 --> 01:52:59.750
ist es natürlich bescheuert, was ich hier gemacht habe.

01:52:59.750 --> 01:53:01.750
Das Beispiel. Weil ich könnte genauso gut

01:53:01.750 --> 01:53:03.750
das hier alles weglassen.

01:53:03.750 --> 01:53:05.750
Eine Schleife machen.

01:53:05.750 --> 01:53:07.750
Fünfmal Image reinpasten.

01:53:07.750 --> 01:53:09.750
Da brauche ich keinen Mager.

01:53:09.750 --> 01:53:11.750
Was es natürlich in der Tat ganz interessant

01:53:11.750 --> 01:53:13.750
macht, ist

01:53:13.750 --> 01:53:15.750
dass man jetzt hier verschiedene

01:53:15.750 --> 01:53:21.430
Parameter reinstecken kann.

01:53:21.430 --> 01:53:23.430
Also ich kann beispielsweise hier Parameter

01:53:23.430 --> 01:53:25.430
reinstellen. Name.

01:53:25.430 --> 01:53:27.430
Gibt es Default-Parameter

01:53:27.430 --> 01:53:29.430
bei JavaScript?

01:53:29.430 --> 01:53:34.280
Geht else im Snippet?

01:53:34.280 --> 01:53:36.280
Höchstwahrscheinlich, ja.

01:53:36.280 --> 01:53:38.280
Gucken wir doch mal.

01:53:40.280 --> 01:53:42.280
Sagen wir mal, Default-Name ist leer.

01:53:42.280 --> 01:53:44.280
Dann machen wir jetzt mal so.

01:53:44.280 --> 01:53:47.660
If. Moment.

01:53:47.660 --> 01:53:49.660
If.

01:53:49.660 --> 01:53:51.660
If.

01:53:51.660 --> 01:53:53.660
If not name.

01:53:53.660 --> 01:53:55.660
Dann keckel.

01:53:55.660 --> 01:54:02.870
Okay.

01:54:02.870 --> 01:54:07.530
Name is deprecated.

01:54:07.530 --> 01:54:11.540
Ich glaube,

01:54:11.540 --> 01:54:13.540
JavaScript spinnt einfach nur rum.

01:54:15.540 --> 01:54:17.540
Aber jetzt ist es weg.

01:54:17.540 --> 01:54:19.540
Oder alternativ will ich einfach

01:54:19.540 --> 01:54:21.540
Name anzeigen.

01:54:21.540 --> 01:54:23.540
Ja, das

01:54:23.540 --> 01:54:25.540
funktioniert. Guck mal.

01:54:25.540 --> 01:54:27.540
Wenn ich hier was reinschreibe, dann wird das gerendert.

01:54:27.540 --> 01:54:29.540
Und wenn ich nichts reinschreibe,

01:54:29.540 --> 01:54:31.540
also wenn ich hier

01:54:31.540 --> 01:54:33.540
irgendwas reinschreibe, wird

01:54:33.540 --> 01:54:35.540
das gerendert. Und ansonsten wird

01:54:35.540 --> 01:54:37.540
das gerendert. Das ist wirklich cool.

01:54:37.540 --> 01:54:39.540
Vor allem kann man das

01:54:39.540 --> 01:54:41.540
jetzt mehrfach an der Seite verwenden.

01:54:41.540 --> 01:54:45.750
Mir fehlt leider so

01:54:45.750 --> 01:54:47.750
ein richtig gutes Beispiel

01:54:47.750 --> 01:54:49.750
jetzt dafür. Aber

01:54:49.750 --> 01:54:51.750
ich hab so irgendwie

01:54:51.750 --> 01:54:53.750
das... Mir juckt so

01:54:53.750 --> 01:54:55.750
in den Fingern zu sagen so, das ist

01:54:55.750 --> 01:54:59.830
sehr praktisch.

01:54:59.830 --> 01:55:01.830
Und was hat das jetzt mit Slots Replacement

01:55:01.830 --> 01:55:03.830
zu tun?

01:55:03.830 --> 01:55:05.830
Snippet Params can be destructed.

01:55:05.830 --> 01:55:07.830
Snippet Params can be destructed.

01:55:07.830 --> 01:55:09.830
Aber wieso ist Welt, wenn man auch View nutzen kann?

01:55:09.830 --> 01:55:11.830
Warum benutzt du View und nicht React?

01:55:11.830 --> 01:55:16.550
Oder jQuery?

01:55:16.550 --> 01:55:18.550
Oder Solid?

01:55:18.550 --> 01:55:22.310
Oder Knockout.js?

01:55:22.310 --> 01:55:24.310
Oder

01:55:24.310 --> 01:55:40.420
gar Angular?

01:55:40.420 --> 01:55:42.420
Doch, das gefällt mir. Das hat was.

01:55:42.420 --> 01:55:44.420
Snippet Scope.

01:55:44.420 --> 01:55:59.900
Passing Snippets to Components.

01:55:59.900 --> 01:56:05.900
Oh,

01:56:05.900 --> 01:56:07.900
das ist cool.

01:56:07.900 --> 01:56:13.260
Ja gut, Passing Snippets to Components

01:56:13.260 --> 01:56:15.260
ist im Prinzip genau das, was

01:56:15.260 --> 01:56:19.400
die mit Slot...

01:56:19.400 --> 01:56:21.400
Slot ist ein Sonderfall von Passing

01:56:21.400 --> 01:56:31.500
Snippets to Components.

01:56:31.500 --> 01:56:33.500
Wird jQuery 2024

01:56:33.500 --> 01:56:35.500
noch maintained?

01:56:35.500 --> 01:56:37.500
Du wirst überrascht sein.

01:56:37.500 --> 01:56:39.500
jQuery wird nicht nur maintained,

01:56:39.500 --> 01:56:46.840
sondern

01:56:46.840 --> 01:56:50.600
es kam

01:56:50.600 --> 01:56:52.600
vor noch nicht allzu langer Zeit

01:56:52.600 --> 01:56:54.600
sogar jQuery 4

01:56:54.600 --> 01:56:56.600
am Start.

01:56:56.600 --> 01:57:02.600
Es ist noch Beta,

01:57:02.600 --> 01:57:04.600
aber guck hier.

01:57:04.600 --> 01:57:06.600
Aber 2024,

01:57:06.600 --> 01:57:10.870
jQuery 4.0 Beta.

01:57:10.870 --> 01:57:12.870
Das ist nicht nur maintained,

01:57:12.870 --> 01:57:41.850
das ist noch voll active in development.

01:57:41.850 --> 01:57:43.850
Doch das Feature gefällt mir hier.

01:57:43.850 --> 01:57:45.850
Snippets and Slots.

01:57:45.850 --> 01:57:47.850
In Zwelt 4 Content can be passed

01:57:47.850 --> 01:57:49.850
using Slots.

01:57:49.850 --> 01:57:51.850
Snippets are more powerful and flexible.

01:57:51.850 --> 01:57:57.020
Ja.

01:57:57.020 --> 01:57:59.020
Man kann weiterhin Slot verwenden.

01:57:59.020 --> 01:58:01.020
Finde ich eine gute Sache.

01:58:01.020 --> 01:58:03.020
Ich fand es erstmal jetzt unsinnig.

01:58:03.020 --> 01:58:05.020
Das ist so ein Ding, wisst ihr?

01:58:05.020 --> 01:58:07.020
Man neigt ja persönlich immer dazu,

01:58:07.020 --> 01:58:09.020
wenn man sowas hier sieht.

01:58:09.020 --> 01:58:11.020
Zum ersten Mal sagt man,

01:58:11.020 --> 01:58:13.020
das will ich nicht, warum nicht so,

01:58:13.020 --> 01:58:15.020
ist doch viel einfacher.

01:58:15.020 --> 01:58:17.020
Aber das ist mit vielen Sachen so.

01:58:17.020 --> 01:58:19.020
Wenn man sich damit beschäftigt,

01:58:19.020 --> 01:58:21.020
ein bisschen an der Oberfläche zu kratzen,

01:58:21.020 --> 01:58:23.020
sich anzugucken, warum das gemacht wurde,

01:58:23.020 --> 01:58:25.020
ergibt das durchaus Sinn.

01:58:25.020 --> 01:58:27.020
Also oftmals durchaus Sinn.

01:58:27.020 --> 01:58:31.100
Und hier ist es genauso.

01:58:31.100 --> 01:58:33.100
Wenn ich mir die Sache hier mit den Snippets angucke,

01:58:33.100 --> 01:58:35.100
finde ich das eine sehr sinnvolle Sache.

01:58:35.100 --> 01:58:37.100
Und dementsprechend verstehe ich auch,

01:58:37.100 --> 01:58:39.100
dass Slots deprecated sind,

01:58:39.100 --> 01:58:41.100
im Prinzip Slots.

01:58:41.100 --> 01:58:43.100
Zumal du weiterhin Slot verwenden kannst,

01:58:43.100 --> 01:58:45.100
für einfache Sachen.

01:58:45.100 --> 01:58:48.730
Interessant, gefällt mir.

01:58:48.730 --> 01:58:54.790
Wie geht es weiter?

01:58:54.790 --> 01:58:56.790
Context.

01:58:56.790 --> 01:58:58.790
Jetzt kommt der Ersatz von Stores.

01:58:58.790 --> 01:59:00.790
Das ist vielleicht zu kompliziert

01:59:00.790 --> 01:59:02.790
jetzt für den...

01:59:02.790 --> 01:59:04.790
User Store,

01:59:04.790 --> 01:59:06.790
Get Context,

01:59:06.790 --> 01:59:08.790
Create User Store.

01:59:08.790 --> 01:59:10.790
Okay, was ist der Unterschied?

01:59:10.790 --> 01:59:15.510
Ich will es nicht...

01:59:15.510 --> 01:59:17.510
Was bin ich?

01:59:17.510 --> 01:59:19.510
Okay, das ist das eigentlich Interessante.

01:59:19.510 --> 01:59:21.510
Es gibt

01:59:21.510 --> 01:59:23.510
keine Stores mehr.

01:59:23.510 --> 01:59:27.140
Ah, aber es gibt

01:59:27.140 --> 01:59:29.140
jetzt .swelt.js

01:59:29.140 --> 01:59:31.140
Files,

01:59:31.140 --> 01:59:33.140
um sowas ähnliches zu machen.

01:59:33.140 --> 01:59:35.140
Oh, da wird es jetzt aber langsam abgedreht.

01:59:35.140 --> 01:59:40.700
Also eine Kombination

01:59:40.700 --> 01:59:42.700
aus

01:59:42.700 --> 01:59:44.700
Export Function und

01:59:44.700 --> 01:59:46.700
State ist quasi ein

01:59:46.700 --> 01:59:48.700
Replacement für Stores.

01:59:48.700 --> 01:59:50.700
Es gibt keine Stores mehr.

01:59:50.700 --> 01:59:52.700
Das ist etwas, was ganz viele Leute

01:59:52.700 --> 02:00:01.640
super toll ins Welt fanden,

02:00:01.640 --> 02:00:03.640
weil das schon eingebaut ist.

02:00:03.640 --> 02:00:05.640
Das heißt, jetzt braucht man keine Stores mehr.

02:00:05.640 --> 02:00:07.640
Jetzt kann man...

02:00:07.640 --> 02:00:09.640
Das mit was?

02:00:09.640 --> 02:00:11.640
Mit Get und Set?

02:00:11.640 --> 02:00:13.640
Erinnert mich ein bisschen an Java,

02:00:13.640 --> 02:00:31.670
wenn ich ehrlich bin.

02:00:31.670 --> 02:00:37.420
Das muss ich mal ausprobieren.

02:00:37.420 --> 02:00:39.420
Nennen wir das jetzt mal einfach Store.

02:00:39.420 --> 02:00:41.420
Ne, nicht Store.

02:00:41.420 --> 02:00:47.480
Store ist Blödsinn.

02:00:47.480 --> 02:00:49.480
Ja...

02:00:49.480 --> 02:00:52.920
Warum ist es egal, wie ich es nenne?

02:00:52.920 --> 02:00:54.920
.swelt.js

02:00:54.920 --> 02:00:56.920
.swelt.js

02:00:56.920 --> 02:00:58.920
.swelt.js

02:00:58.920 --> 02:01:00.920
.swelt.js

02:01:00.920 --> 02:01:02.920
.swelt.js

02:01:02.920 --> 02:01:04.920
Hauen wir das jetzt mal rein.

02:01:04.920 --> 02:01:06.920
Initial, Username, blablabla.

02:01:06.920 --> 02:01:08.920
So.

02:01:08.920 --> 02:01:10.920
Und jetzt importieren wir das Ganze mal.

02:01:10.920 --> 02:01:16.090
Create.

02:01:16.090 --> 02:01:18.090
Ah, das funktioniert nicht. Also brauchen wir jetzt hier...

02:01:18.090 --> 02:01:20.090
Wie importiert man den Kram?

02:01:20.090 --> 02:01:25.610
Hier.

02:01:25.610 --> 02:01:30.460
Create. State.

02:01:30.460 --> 02:01:32.460
Ja, ich hätte es mal anders nennen sollen.

02:01:32.460 --> 02:01:38.740
.slip.

02:01:38.740 --> 02:01:40.740
Okay, das hat funktioniert.

02:01:40.740 --> 02:01:42.740
Create User State.

02:01:42.740 --> 02:01:44.740
.slip.

02:01:44.740 --> 02:01:46.740
.slip.

02:01:46.740 --> 02:01:48.740
.slip.

02:01:48.740 --> 02:02:05.560
.slip.

02:02:05.560 --> 02:02:07.560
.slip.

02:02:07.560 --> 02:02:09.560
.slip.

02:02:09.560 --> 02:02:11.560
.slip.

02:02:11.560 --> 02:02:13.560
.slip.

02:02:13.560 --> 02:02:15.560
.slip.

02:02:15.560 --> 02:02:17.560
.slip.

02:02:17.560 --> 02:02:21.450
.slip.

02:02:21.450 --> 02:02:23.450
.slip.

02:02:23.450 --> 02:02:25.450
.slip.

02:02:25.450 --> 02:02:27.450
.slip.

02:02:27.450 --> 02:02:29.450
.slip.

02:02:29.450 --> 02:02:32.820
.slip.

02:02:32.820 --> 02:02:34.820
.slip.

02:02:34.820 --> 02:02:47.290
.slip.

02:02:47.290 --> 02:02:48.270
.slip.

WEBVTT

00:30.000 --> 00:56.440
So, ich brauche mal zum Intro ein bisschen Musik zum Wachwerden.

00:56.480 --> 01:09.600
Könnte ich dann immer Game gedudelt haben im Hintergrund.

01:09.600 --> 01:16.480
Leider ist die meiste ordentliche Musik M mosskatoz,

01:16.480 --> 01:23.120
aber das nicht, weil es auch ein Game Soundtrack ist.

01:23.640 --> 01:29.220
Das ist der Metal Hellsinger Soundtrack.

01:45.960 --> 01:50.280
Wenn wir alle wach sind, kann ich euch erzählen, was wir heute machen.

03:50.280 --> 04:07.800
Wir schauen uns die neue°C-Sharp 12 Preview Version an.

04:07.800 --> 04:11.780
Die myself, durch einisses und eine 3 Features.

04:11.780 --> 04:14.680
Ne, wir gucken uns erst mal vor.

04:14.680 --> 04:15.480
死

04:17.180 --> 04:18.580
….

04:18.580 --> 04:20.180
Es ist fertig, glaube ich.

04:20.280 --> 04:22.280
Ne, noch nicht ganz.

04:25.180 --> 04:27.980
Hat Twitch Soundtrack oder was heißt der in den Lieblingssongs nicht?

04:27.980 --> 04:29.980
Ich habe keine Ahnung was Twitch Soundtrack ist.

04:35.880 --> 04:37.880
Soundtrack by Twitch.

04:46.880 --> 04:48.880
Okay, wie funktioniert das?

04:49.180 --> 04:51.180
How does he sound?

04:58.180 --> 05:00.180
Twitch Soundtrack ist wieder tot?

05:03.080 --> 05:05.140
Ich glaube, ich muss im VOD etwas anderes laufen lassen als im Stream.

05:12.400 --> 05:14.400
Oder das VOD.

05:48.880 --> 05:50.880
Ich glaube, ich muss im VOD etwas anderes laufen lassen als im Stream.

06:18.880 --> 06:20.880
Ich glaube, ich muss im VOD etwas anderes laufen lassen als im Stream.

06:48.880 --> 06:50.880
Ich glaube, ich muss im VOD etwas anderes laufen lassen als im Stream.

07:18.880 --> 07:20.880
Ich glaube, ich muss im VOD etwas anderes laufen lassen als im Stream.

07:48.880 --> 07:50.880
Ich glaube, ich muss im VOD etwas anderes laufen lassen als im Stream.

08:18.880 --> 08:20.880
Ich glaube, ich muss etwas anderes laufen lassen als im Stream.

08:48.880 --> 08:50.880
Ich glaube, ich muss etwas anderes laufen lassen als im Stream.

09:48.880 --> 09:50.880
Okay, verstehe, verstehe.

09:53.220 --> 09:55.220
Okay, das kann man nicht on-the-fly machen, da muss man den Stream neu starten.

10:25.740 --> 10:27.740
Ja

10:33.780 --> 10:35.780
Ja

10:36.780 --> 10:42.780
Okay, erst mal updaten, erst mal updaten, archi, wie, gibt keine updates, was da los, warum nicht?

10:43.780 --> 10:45.780
was da los warum nicht?

10:47.480 --> 10:50.540
Ich dachte arch, arch linux hat den greif umgezogen

10:51.380 --> 10:53.520
den krempel umgezogen

10:57.520 --> 11:03.940
Was ist was ist force update? ach kann man das immer nicht merken, gibt keine updates was da los

11:06.720 --> 11:13.920
Mirror noch nicht gesüngt also bei mir oder ach so mein mirror ist doch nicht gesüngt ja wahrscheinlich

11:14.240 --> 11:15.540
ich

11:15.540 --> 11:21.760
Da mache ich mal eine neue mirror list danke für den zapp

11:23.180 --> 11:27.380
Fесте tv

11:34.880 --> 11:36.720
Wie das hier no xD

11:36.720 --> 11:38.720
Keine ahnung was ich hab

11:41.280 --> 11:43.280
Germany

11:44.120 --> 11:46.620
Auf was hast du umgestellt max

11:54.200 --> 11:58.160
Und ich, weiß gar nicht, mal wie das geht mit der mirrorlist da

12:01.960 --> 12:05.220
da gab es doch so was wo man die mirrors pingen konnte und dann die

12:08.280 --> 12:10.820
Und und dann die schnellsten irgendwie nehmen

12:13.680 --> 12:15.680
dann

12:22.720 --> 12:24.720
sie

12:26.600 --> 12:32.380
Ranke mirros das ging Lag das ging noch Mittlerweile Irgendwie einfacher

12:39.240 --> 12:41.240
Hatte ich Mal

12:43.800 --> 12:45.800
Also

12:47.880 --> 12:53.960
Ich werde einfach was du drinnen stehen hast sind fertig, dann treibst es auch ein man runde update ja also leute

12:53.960 --> 12:57.360
Wir gucken uns heute kurz gucken ob die lautstärke jetzt okay, is ja die passt

12:57.720 --> 13:01.580
Wir gucken uns heute ein paar styles die schabel features an ich habe mir İn doin einen blog post gefunden

13:02.600 --> 13:06.000
Microsoft der ist zwar schon vom 11. April

13:09.440 --> 13:13.000
Es gibt noch einen neuen zur comin bastion

13:13.280 --> 13:16.080
Die müssten wir wicked bei der gelegenheit gerade mal installieren

13:18.380 --> 13:24.920
Genau nut你说 da욷net version runterladen wir können auch gerade mal rider und das ganze. Ob es. Musst haben wir jetzt gestartet

13:25.760 --> 13:31.940
Ein paketёлene nicht standen ver cannons ruhig kannst ruhig wieder zugehen hier wieder zuRC allem alles gut geht zu

13:33.120 --> 13:34.680
mensch

13:34.680 --> 13:39.580
musst du da fünf mal zu!]

13:39.760 --> 13:41.760
So Update check for update

13:42.640 --> 13:44.640
Updates

13:46.240 --> 13:51.640
Leider ich meine es gibt ja so ein paar helfer libraries davon es gibt da zum beispiel

13:52.860 --> 13:55.980
dass schon ganz dass ganz nice ist aber

14:05.660 --> 14:08.580
Das war auch sehr unglücklich formattiert den kram hier

14:12.320 --> 14:15.800
Aber immer was offizielles wäre schon wäre schon sehr sehr praktisch ja

14:20.680 --> 14:22.680
Refleck was ist denn das

14:25.240 --> 14:27.240
Reflektor

14:34.680 --> 14:36.520
Alles klar chat

14:42.280 --> 14:43.640
Chatge

14:43.640 --> 14:46.600
Weißt инд, muss wahrscheinlich als root machen oder

14:57.120 --> 15:01.800
Ok achSo jetzt habe ich hier noch mehr was du ist , die ich gar nicht haben will

15:07.480 --> 15:09.480
Ach das printen nur, ach so

15:12.560 --> 15:15.020
Welcher mirror ist bei dir ganz oben

15:15.800 --> 15:18.820
icarilla der signal

15:18.840 --> 15:23.080
was ich trag den jetzt einfach mal ein bei mir in die mirrorlist

15:28.380 --> 15:29.980
Und dann

15:32.460 --> 15:34.460
Und dann zück ich einfach neu

15:35.260 --> 15:37.120
ein

15:41.140 --> 15:43.360
mal madina so ewig gebraucht zum speichern

15:45.040 --> 15:47.040
Okay pack man

15:50.160 --> 15:55.760
Jetzt Gibt's updates downgrading what

16:04.460 --> 16:19.920
So ganz aktuell scheint, Er auch nicht zu sein oder

16:21.180 --> 16:23.180
Naja

16:28.060 --> 16:30.060
Okay

16:30.780 --> 16:34.020
Komm tulast

16:37.960 --> 16:39.580
deadline жизיים nicht neu

16:44.200 --> 16:52.340
待 manual 6.0.2 informative so wie moment ich muss pack man selbst updateen jetzt vorher oder was weg mär familie

17:01.020 --> 17:03.600
aber das ist das ist nicht das aktuelle

17:12.860 --> 17:14.940
das ist 6 0 26

17:18.940 --> 17:24.420
da alec arch bei de way was ist das ist es es da hätte someone das problem

17:30.540 --> 17:33.040
counts

17:38.480 --> 17:42.300
ok keine ahnung was der verschmerzen hat ich radi retained und ein paar tage bis

17:42.300 --> 17:45.840
die mir aus ges щоnzet und dann ist gut

17:47.380 --> 17:54.420
ok also was was soll man machen wir sind dank der mittleren käksin

17:55.220 --> 18:00.780
sehr schön

18:03.180 --> 18:04.580
ja eh gut es gibt ja noch gar nix neues

18:07.700 --> 18:15.980
kann man das einfach so eingeben will doch das einfach so eingeben

18:21.480 --> 18:21.980
nee

18:24.960 --> 18:26.420
For users

18:26.420 --> 18:29.580
of the now deprecate R pratique

18:36.440 --> 18:41.300
This is required as we have moved

18:54.700 --> 19:01.240
Ich meine, wir können auch noch Mal das Laufen lassen

19:05.240 --> 19:06.140
Reflektor

19:10.580 --> 19:14.820
Jetzt haben wir die MiRos List

19:17.420 --> 19:22.200
ETC Pack «Man»

19:24.540 --> 19:25.920
Was ist hier drinnen?

19:26.540 --> 19:28.540
ok das ist die, was ich installiere

19:32.160 --> 19:35.460
Ich fast 것을 brochen wer weis, vielleicht bräuchte man diese

19:35.760 --> 19:37.400
Packel-Liste

19:42.060 --> 19:45.560
Jetzt wird die Karte einfach gelöscht, nueh expresses

19:47.700 --> 19:49.700
derrichardneumann.de

19:50.240 --> 19:51.340
Alles klar

19:55.020 --> 19:57.020
ja ja

20:10.000 --> 20:12.740
ich hab keine ahnung

20:16.060 --> 20:17.900
É ist es nicht

20:18.240 --> 20:18.740
ah?

20:18.740 --> 20:21.220
ah nee das ist nur Bail.

20:21.800 --> 20:22.200
..

20:24.000 --> 20:25.160
ok keine ahnung

20:25.900 --> 20:28.260
was er für schmerzen hat aber

20:28.960 --> 20:33.480
meine mirrores sind noch nicht

20:33.500 --> 20:35.500
zu sehen

20:36.940 --> 20:41.100
aber wenn ich den bei mir eintrage

20:41.500 --> 20:44.540
dann ist er der meinungen ich soll downcrate

20:46.540 --> 20:48.580
und erfind- wie kann das sein dass wir

20:48.580 --> 20:54.520
den gleichen mirror haben, aber er bei mir das packman nicht findet, das neuere

20:54.540 --> 20:55.640
packman

20:59.660 --> 21:00.380
hä?

21:07.520 --> 21:08.780
D.N.S.?

21:09.560 --> 21:11.900
Das das unterschiedlich auflöst

21:15.200 --> 21:16.820
Also das ist schon komisch

21:17.740 --> 21:20.060
Achja gut

21:22.380 --> 21:24.840
Okay Leute was ich mache jetzt gar nichts,

21:24.840 --> 21:28.620
ich move meine Kegge-List wieder da hin

21:32.300 --> 21:33.540
Kann man das überhaupt so machen?

21:36.000 --> 21:40.460
Wahrscheinlich habe ich jetzt irgendwelche Datei-Rechte geschrottet damit

22:17.240 --> 22:18.640
Аrate

22:25.780 --> 22:29.240
Warum also ich wie gesagt keine ahnung warum das nicht funktioniert

22:32.400 --> 22:35.700
Das mal warten bis die alle bis die ganzen mehr ausgesunken sind

22:35.700 --> 22:40.900
Keine ahnung, das für der verschmerzen hat blended

22:43.020 --> 22:43.920
Comment also нейtim

22:43.920 --> 22:45.240
Neues

22:48.400 --> 22:50.400
Von beige ist es nicht

22:56.000 --> 23:04.160
Jacticamente extra syrvers lassen wir den laufend ok. Also gucken mase mal die eigentlichen sacher ich habe jetzt alles geupdatet

23:07.120 --> 23:09.420
Was ist mit meiner toolbox los

23:09.820 --> 23:11.240
Die ist die ist

23:11.240 --> 23:11.880
이야기

23:11.880 --> 23:16.160
Mal rumspinnen ok. Weiter updatedcare vormen goal dan upgraded

23:16.960 --> 23:21.080
Das aktuelle 1972 soll also auch installiert glaube ich das ging ja eben durch

23:21.080 --> 23:24.420
Ok ich gute noch mal man Dinner weiß ja nie was sache ist

23:27.180 --> 23:29.020
implies das ganze bahn

23:29.020 --> 23:36.140
Also weil ich habe gelesen es gibt drei neue features in derune preview version und die finde ich eigentlich alle

23:36.140 --> 23:37.960
rechts

23:37.960 --> 23:39.660
auch wartet mal

23:56.000 --> 23:59.320
Ich muss mal kurz meine katze medizin verabreichen

23:59.940 --> 24:02.220
Ihr könnt euch jetzt ascii aquarium angucken

24:04.000 --> 24:07.700
Und den esen peto Hintergrund vom r pourraadores ich bin in zwei drei minuten, da

24:24.740 --> 24:28.660
Ich muss auch noch mal kurz meine katze medizin verabreichen

24:29.320 --> 24:31.320
Ich muss auch noch mal kurz meine katze medizin verabreichen

24:59.320 --> 25:01.320
Ich muss auch noch mal kurz meine katze medizin verabreichen

25:29.320 --> 25:31.320
Ich muss auch noch mal kurz meine katze medizin verabreichen

25:59.320 --> 26:02.320
Okay.

26:19.720 --> 26:25.720
So

26:25.720 --> 26:27.720
So

26:29.560 --> 26:33.720
Das Klima al Birth versch bins auch noch jetzt ganz schön warm drin. Was haben wir denn hier gerade? Lass mal kurz gucken

26:37.280 --> 26:40.060
Aufgerundet. Aye,簡 Ah! 24,5, ist das richtig!

26:43.860 --> 26:45.860
Nicht ganz, ganz schön warm

26:46.620 --> 26:53.380
Gibt es das Ascii-Quarium auch unter Windows? Wahrscheinlich gibt es da irgendeine Variante von die ja unter Windows. Ich meine mit WSL auf jeden fall

26:56.400 --> 26:58.800
So also rubbing mushroom

27:00.260 --> 27:02.260
Restore

27:05.440 --> 27:07.440
Was hat die Daiqqa'z?

27:08.880 --> 27:15.800
Die ist ja schon 13 oder so jetzt, glaube so in 12.13 ist die jetzt. Die hat

27:16.700 --> 27:18.700
Schilddrüsen

27:20.140 --> 27:25.360
Überfunktion, glaub so rum ist es, Schilddrüsen überfunktion

27:26.340 --> 27:31.920
Und jetzt muss ich, der so einen Tropfen geben die die glücklicherweise haltwegs

27:32.700 --> 27:34.700
gescheit dringt

27:34.920 --> 27:39.400
Für die Schilddrüse und dabei muss ich mir selbst immer was langerbeliges anziehen σε fine

27:39.400 --> 27:41.800
dass ich nichts abkriege davon, weil das irgendwie zu Hautausschlag führt

27:44.220 --> 27:46.220
wenigstens heißt Call, Sinnvolle Sache

27:48.360 --> 27:54.640
Ja, für die niere kriegste morgens immer was, das funktioniert aber für die niere kriegste morgens immer so flüssigkeit einmal ins depth gemacht

27:55.160 --> 27:57.280
das checkte zum glück. Nicht. Dass da was drin ist

27:58.440 --> 28:00.440
und das frωzte auch

28:01.160 --> 28:06.800
ja also Leute neue C sharp 12 features wir machen mal writer aus da kann, ich würde schon

28:06.800 --> 28:08.860
Mal revenue abstellen auf das neue auf das neule dot.net framework

28:10.260 --> 28:16.040
also, es gibt neue C sharp features und es gibt eigentlich hauptsächlich drei neue C sharp Features

28:17.760 --> 28:21.000
Die finde ich eigentlich alle drei ganz interessant aber ich muss sagen

28:21.740 --> 28:24.520
ich bin ein wenig skeptisch ob's das gebraucht hat

28:25.840 --> 28:31.640
zumindest zumindest zwei der drei features bin ich ein bisschen skeptisch ob das so ob das so sinnvoll ist weil

28:34.280 --> 28:39.240
so gerne ich C Sharp als programmiersprache habe die letzten paar versionen hat Microsoft

28:39.720 --> 28:42.660
coole sachen gemacht aber auch sachen wo ich mir gedacht habe hey

28:44.640 --> 28:48.660
nur weil man dann eins zwei zeilen sparen kann muss man nicht irgendwelche doppel Yao

28:48.760 --> 28:51.520
doppeldeutigkeiten und so was einbauen und und

28:52.140 --> 28:57.540
mehrere wege was zu machen und ja also diese ganze geschichte auch diese da gebaut mit

28:59.540 --> 29:01.300
records class records

29:01.300 --> 29:03.300
struct records

29:03.340 --> 29:04.060
fa

29:04.060 --> 29:05.500
structs

29:05.500 --> 29:11.880
records was nicht alles gibt da blickt keine mehr so genau durch der hätte man sich ein bisschen schöneres überlegen müssen oder ansonsten

29:12.720 --> 29:15.020
wenn man sich so die letzte features anguckt

29:15.020 --> 29:18.980
Diese teilweise eingebaut wurden auch neue funktionen internet denkt man sich halt so

29:19.580 --> 29:25.820
zwangsläufig das hat microsoft selbst gebraucht ansonsten außerhalb davon hat es eigentlich relativ relativ wenig sinnen

29:26.180 --> 29:32.620
So, es kommen zwei neue features ist die scharp jetzt blazing lie fast. Interestingly ist die scharp einfach immer relativ fast

29:34.920 --> 29:40.500
Aber halt natürlich nicht blazing lie fast weil written in rust. Ja, das Santa find ich zum bizim spiel auch ganz gut

29:41.460 --> 29:43.100
die

29:43.100 --> 29:49.060
Das denen das required keyworth hat im endeffekt gefehlt schon

29:49.800 --> 29:51.520
seit sie

29:51.520 --> 29:54.900
dieses inline initializer zeug eingeführt haben

29:55.500 --> 30:00.140
das hätte von anfang an dabei sein muss das auf jeden fall eine der besseren sachen dies eingeführt haben

30:05.380 --> 30:12.340
Es gibt jetzt es gibt jetzt neue features says erst was wir uns antwortet gibt drei. Drei größere. Neue feature das erste sind primary

30:12.860 --> 30:15.320
Constructors dafür habe ich mir tatsächlich vor dem stream leute

30:16.620 --> 30:23.440
vorbereitung habe ich für ein beispiel überlegt was für uns zusammen im stream angucken kann wo man das besser. Sieht was ist was macht

30:24.240 --> 30:27.320
es gibt primary, constructors da kann man jetzt zum beispiel

30:29.740 --> 30:33.200
Ihr werdet es gleich nirgends ich zeige es euch gleich alles ist eines

30:34.060 --> 30:40.660
da kamen konstruktor laut burst kann man ein paar zeilen coach barn da das ist das ist eines. Der features wo ich sage würde

30:41.280 --> 30:43.960
ich weiß echt nicht ob es das gebraucht hätte

30:47.540 --> 30:54.580
Also man kann auch einen guten mittelweg, zwinden zwischen schreibt jeden scheiß doppelt und dreifach hin wie in go zum beispiel

30:55.300 --> 31:00.000
dass das. Das ja alles hundertprozentig explizit hingeschrieben wird oder

31:01.020 --> 31:06.520
C++ magic, so ein, so ein, zwischen, äh, zwischending find ich ja durchaus in ordnung

31:07.320 --> 31:13.400
Und ich finde scherb hat bis an den mittelweg ganz gut gefunden, primary constructors sind mir ein bisschen zu viel

31:15.420 --> 31:17.420
zu viel magic, die

31:19.660 --> 31:26.300
zwar potenziell die sachen ein bisschen lesbarer machen können aber überhaupt nicht klar ist was passiert und warum es noch ein weg für constructors um definieren

31:27.280 --> 31:29.280
Raucht, verstehe ich auch nicht so ganz

31:29.700 --> 31:31.700
Ja

31:37.300 --> 31:43.740
also da bin ich skeptisch ob ich zu geil finde hier. Das nächste feature, was sie eingeführt haben ist

31:44.000 --> 31:48.420
using alias types for any type selectier' ich euch auch das ist relativ easy

31:48.720 --> 31:52.120
das ist quasi ein bisschen sowas wie typedef aus c++ und c

31:52.960 --> 31:54.960
da kann man jetzt zum beispiel sagen

31:55.760 --> 31:58.200
man möchte eine list of int

31:59.760 --> 32:05.800
um benennen zu keine ahnung und list z完 kann das dann benutzen anstatt den eigentlichen typ ja gut

32:07.160 --> 32:10.140
sicherlich auch nur beschränkt sinnvoll aber wenn man es braucht bestimmt ganz nice

32:11.000 --> 32:16.980
Ob es wirklich braucht auch skeptisch aber das geht noch in ordnung und das

32:16.980 --> 32:19.860
Letzte feature das ist tatsächlich ein wirklich gutes feature das hätte es schon lange

32:19.860 --> 32:24.680
Gebraucht gerade wenn microsoft jetzt anfängt mit minimale api's und sonst was man kann jetzt

32:25.280 --> 32:27.280
default values für

32:57.540 --> 33:02.560
feelings about ich hab auch mixed feelings über die primary constructors

33:14.960 --> 33:17.440
Naja

33:17.440 --> 33:19.440
also ups

33:19.640 --> 33:26.240
Wir bauen jetzt mal was auf die die alt die altmodische art ist albo ist halt modisch auf die auf die sächerp 11

33:26.240 --> 33:28.240
variant. Wir machen jetzt mal

33:29.700 --> 33:32.940
Ich hab mich schon im vorfeld was überlegt das bl Leben 00 dann hier

33:33.440 --> 33:36.760
Genau, wir machen jetzt mal hier publik klasse

33:37.800 --> 33:39.140
chatter

33:39.140 --> 33:41.140
oder

33:41.760 --> 33:43.760
suicidal

33:44.000 --> 33:45.600
und

33:45.600 --> 33:48.460
ich kann auch noch ein chat user hat einen

33:50.020 --> 33:52.020
Username und hat ein

33:53.220 --> 33:54.740
bull

33:54.820 --> 33:57.300
ist Prem's ab so

33:59.080 --> 34:01.340
Und dann legen wir den Constructor dafür, an

34:04.700 --> 34:06.700
Der heißt kann liquidity

34:07.660 --> 34:15.220
Cool ist Prem's und hier drin machen wir nichts anderes wie das zuweisen. Das erscheint gleich

34:15.280 --> 34:16.820
oder

34:16.820 --> 34:18.320
어

34:18.320 --> 34:20.340
там

34:21.180 --> 34:25.020
Und dann hat das den User kriegt dann noch einen Icon

34:26.280 --> 34:32.220
Das Icon ist ituzzert sich Araussum. Ist er псих geangelt oder nicht da

34:33.220 --> 34:35.220
So string

34:36.360 --> 34:39.200
Wenn habe ich auch mir dann 백

34:40.040 --> 34:43.260
Einer sternchen steher lieb und wir machen das besser als besser, da

34:44.140 --> 34:46.140
Wenn apply

34:46.680 --> 34:50.580
Ja ich weiß was wir machen wenn er wenn er Primes ab ist

34:52.980 --> 34:59.280
Dann hatte ein 좋을 icon davor und wenn er halt kein Rome ist dann hat er keine ahnung

34:59.780 --> 35:01.780
sondern

35:02.760 --> 35:04.760
Party party phase moti

35:05.400 --> 35:11.040
Ist ja nur zum Beispiel ich道 część wirklich jetzt für irgendwas verwenden und dann gibt es hier drinnen auch public

35:11.820 --> 35:14.680
comment void print

35:15.900 --> 35:18.260
eine message so aus sicht des users

35:20.240 --> 35:25.060
String message und das passiert eigentlich, bloß folgendes drinne console Rideline

35:26.580 --> 35:28.440
der name

35:28.440 --> 35:34.360
Und dahinter kommt dann das icon und dahinter kommt dann die message

35:35.400 --> 35:38.880
Redest, wenn ich das wenn ich das jetzt anlegETS Hollika war

35:39.540 --> 35:41.540
chatter, gleich

35:42.000 --> 35:44.340
nehmen wir namen an, wen haben wir denn hier zum beispiel

35:45.380 --> 35:49.020
mal hier zuletzt hier, komm easy, easy lite

35:51.120 --> 35:56.440
Und der ist kein primes sub deswegen ist falls, und wenn man das jetzt wenn man das jetzt

36:00.860 --> 36:06.220
Message kacke hat er geschrieben und das stelle ich ihm jetzt einfach mal jetzt fühlen wir das mal aus

36:07.180 --> 36:09.180
und

36:09.300 --> 36:11.300
dann, bauen wir das um auf

36:11.500 --> 36:16.180
statement 12 und da wird man sehen man kann das schon ein, bisschen kürzer machen aber ist das das wirklich wert

36:18.120 --> 36:20.120
...schauen

36:29.900 --> 36:34.300
Funktioniert wir könnten jetzt auch mehrere user anlegen oder nehmen wir mal hier

36:37.100 --> 36:40.380
Den Sirius Max der ist sogar Modg you noch zusätzlich

36:43.700 --> 36:49.840
Der ist auf Prime Sub, und wenn man denen was ausfüllen lassen soll, dann hat er

36:49.840 --> 36:51.440
Das Geld e gloss Thursday ultra content

36:51.440 --> 36:55.980
Also also könnte man das in den Soup 12 machen man muss jetzt sagen es ist ein, bisschen

36:59.600 --> 37:03.440
Ist das writer nee das ist das normale pas auch stimmt es kann es dann. Singing noch

37:03.460 --> 37:06.660
Keine da keine seeschap 11 12 unterstützung

37:06.660 --> 37:09.160
Mal gucken mal gucken ist das nicht

37:13.020 --> 37:17.540
Also das ist ja relativ relativ überschaubar ich meinen wir haben eine. Klasse

37:18.620 --> 37:22.360
Da gibt das public properties drehende namen und is primes ab

37:23.540 --> 37:28.620
Das die klasse kann man initialisieren mit dem userает. Name und ob es primes ab ist oder nicht

37:29.620 --> 37:31.140
Aus dem

37:31.140 --> 37:37.060
Aus dem ob er ob jemand primes ab ist oder nicht, wird ein eiken ausgewählt und wenn man hier eine message outside gibt

37:37.080 --> 37:39.080
Da gibt es aus also das ist tatsächlich

37:39.240 --> 37:46.740
relativ e. Say was es jetzt gibt in 11 12 ich guck mal ob ich das. Hier umgestellt bekomme falls. Das. Mode überhaupt überhaupt kann

37:48.280 --> 37:49.440
так Breakdown

37:50.040 --> 37:53.780
Eat

37:54.420 --> 37:57.160
ja war doch vor stellt man das jetzt nochmal um projektweise

37:59.940 --> 38:01.940
Tuols

38:03.060 --> 38:05.980
Warte mal tulles shouting

38:10.100 --> 38:12.660
toolset ja

38:15.880 --> 38:17.880
Ja

38:18.560 --> 38:20.380
ンフ

38:22.200 --> 38:24.200
Okay

38:24.280 --> 38:30.240
Jetzt muss ich nochmal neu laden weil das sonst nicht gecheckt habe dass die frame framework version gesad morphe

38:35.420 --> 38:41.320
Ok so und jetzt schalten wir hier mal und auf dotnet 8

38:43.440 --> 38:45.440
Und sich

38:46.380 --> 38:46.380


38:50.080 --> 38:53.040
Natürlich funktioniert der alte code immer noch aber

38:55.160 --> 38:57.660
Ach so jetzt muss ich auch dotnet

39:01.780 --> 39:03.780
Das verwendet, dass das funktioniert

39:06.260 --> 39:07.460
Funktioniert, ok

39:07.460 --> 39:12.500
So und jetzt gibt es ein neues feature und zwar kann man diese ganzen sachen jetzt etwas kürzer schreiben

39:13.320 --> 39:15.480
Weil irgendjemand bei microsoft hat gedacht ok

39:15.480 --> 39:19.940
das ist ein bisschen zu viel boilerplate code für, so eine einfache klasse die ja im prinzip nur

39:20.840 --> 39:26.180
Ja nur zuweisung und paar datenfelder enthält. Son Microsoft hat jetzt gedacht ok

39:26.620 --> 39:32.620
Warum sollte man diesen expliziten konstrukte schreiben? Müssen, der ja nichts anderes macht wie hier irgendwelche werte zuweisen

39:33.080 --> 39:38.420
Und warum sollte man überhaupt hier irgendwelche properties definieren? Müssen wenn man sie public gar nicht braucht

39:38.460 --> 39:43.380
Sondern nur intern verwendet hier so zum beispiel in dieser in dieser print metode und hier zum

39:43.700 --> 39:44.600
zum

39:44.600 --> 39:50.120
auswählen des eichens das haben sie sich ja gut gedacht aber ich finde ein bisschen

39:51.720 --> 39:54.260
Es hat eigentlich nicht gebraucht weil man kann jetzt folgendes machen

39:54.920 --> 39:56.660
man kann jetzt

39:56.660 --> 40:01.920
Anstatt den constructor hier zu schreiben kann man den constructor jetzt da schreiben den löschen

40:03.100 --> 40:05.100
Da habe ich auch richtig gemacht

40:05.220 --> 40:08.200
Ich glaube Ryder kann Glass, Cannot Have Primary Konstruktion warum nicht

40:13.820 --> 40:15.820
Why not

40:21.200 --> 40:23.200
Das ist doch bestimmt irgendwas

40:23.880 --> 40:25.880
Ja geht auch

40:26.780 --> 40:28.880
Es folgt Ryder kriegt es einfach noch nicht auf die Reihe

40:32.940 --> 40:34.940
Es geht auch

40:35.220 --> 40:40.340
Ok es funktioniert aber Ryder mag nicht so und jetzt ist es so man kann wie gesagt man kann又

40:41.060 --> 40:45.020
Nee ich habe nicht auf die Preview geupgradet das wird sein also man kann den

40:45.760 --> 40:48.800
man Kann den Konstrukte Ja wir Können Tatsächlich die

40:50.100 --> 40:52.100
Coolbox

41:01.560 --> 41:03.560
Wie macht man das überhaupt

41:05.100 --> 41:07.100
Ah

41:22.380 --> 41:24.380
Alter was mit meiner Toolbox

41:29.580 --> 41:31.580
Wildes update

41:35.780 --> 41:43.280
Okay thieves installiert trotzdem aber das machen wir mal kurz drei dazu und vielleicht checkt sein an die neue version

41:46.180 --> 41:50.540
Okay, es ist wohl nur diese eine install klopf gewesen nicht die anderen install knöpfe

42:05.100 --> 42:07.100
...

42:10.940 --> 42:17.540
Wie geht das dann mit super constructor calls ich glaube gar nicht dazu musste wieder eine inline definieren in drinnen

42:20.760 --> 42:21.560
X sollte

42:21.580 --> 42:25.980
langsam in Rente geschickt werden ich glaube das liegt eher an den grafikkarten sachen nicht nicht so sehr an X

42:28.120 --> 42:31.240
Außer x kann ich in Rente geschickt werden weil Wayland nicht richtig funktioniert

42:31.820 --> 42:33.160
Wow

42:34.080 --> 42:38.600
Mein auge und was ist das für eine font rendering java alter

42:38.600 --> 43:02.380
Jetzt

51:02.380 --> 51:08.900
Das ist eines der Big Features für C-Sharp 12, ja tatsächlich. Welches, welches Doppelpunkt

59:38.960 --> 59:47.620
Da kommt true raus, weil structs juckt nicht die Referenz, sondern structs juckt die

59:47.620 --> 59:55.760
Werte die drin stehen. Und hier sind die Werte bei beiden gleich. Deswegen hat man früher in C-Sharp

59:55.760 --> 01:00:02.580
sowas gesagt wie, Klassen sind Reference Types und Stcts sind Value Types.odypes war so das,

01:00:02.720 --> 01:00:09.540
was es von Anfang an in C-Sharp seit Version 1 gab. Make ja auch Sinn,

01:00:10.820 --> 01:00:14.700
gerade wenn du Low Level Sachen hast wo du wissen willst wie das im Speicher drin

01:00:14.700 --> 01:00:20.060
steht, oder für Interop mit irgendwelchen Extend Library sind Structs eine super Geschichte.

01:00:20.060 --> 01:00:24.820
Bei so einem Struct weißt du ok, das fängt da an. Keine Ahnung, 4 bytes

01:00:24.820 --> 01:00:30.400
für einen Int oder sowas und dann ist gut. Also das hat beides ja schon seinen Sinn,

01:00:30.400 --> 01:00:36.040
aber das ist nun mal der grundsätzliche Unterschied zwischen Structs Und Klassen.

01:00:36.040 --> 01:00:39.660
So! jetzt bauen wir das ganze Mal wieder zurück.

01:00:39.660 --> 01:00:42.020
Hier kommt jetzt ja mit Klassen, kommt Falls raus...we

01:00:44.800 --> 01:00:47.080
hatten ja gesagt es ist nicht die gleiche Referenz.

01:00:47.080 --> 01:00:53.660
Und jetzt ändern wir mal eine Sache an dieser Klasse und machen daraus...

01:00:53.660 --> 01:00:57.320
records. Machen daraus ein Records.

01:01:27.320 --> 01:01:35.900
So und hier jetzt haben wir anstatt Clash Records und wenn ich das jetzt

01:01:35.900 --> 01:01:41.040
ausführe dann ist es true. Und das ist quasi so eine so eine so

01:01:41.040 --> 01:01:47.160
eine hybrid Geschichte. Unter der haube ist ein Record implizit eine Klasse deswegen kann

01:01:47.160 --> 01:01:51.340
ich auch Record Clash hinschreiben. Aber man sieht ja schon Rider sagt man muss Clash nicht

01:01:51.420 --> 01:01:59.700
hinschreiben. Und zwar ist ein Record eigentlich auch nur eine Klasse wo manche Sachen überschrieben

01:01:59.700 --> 01:02:05.640
wurden dass sie sich mehr verhalten wie ein Struct. Da kannst du zum Beispiel wenn du

01:02:05.640 --> 01:02:10.380
weiterhin diese diese pointless-reference-Karakteristik

01:02:10.380 --> 01:02:15.340
von der Klasse benutzen willst. Ohne das Hin und her kopieren von einem Struct aber

01:02:15.340 --> 01:02:19.620
trotzdem ist dir mehr um die Werte geht in der Klasse anstatt um die Referenz selbst

01:03:19.820 --> 01:03:27.660
diese drei Sachen gibt es jetzt in die Scharpezeit eine ganze Weile. Das hier ist Reihenwerte

01:03:27.660 --> 01:03:31.740
basiert und wird immer kopiert, auch wenn du es als Parameter immer übergibst. Das

01:03:31.740 --> 01:03:38.020
hier ist immer Pointer Magic referenzbasiert wo die Werte nicht so wirklich interessieren

01:03:38.020 --> 01:03:43.360
und das hier ist eine Klasse was sich ein bisschen mit acts als Struct verhält aber

01:03:43.360 --> 01:03:48.580
eigentlich noch Klasse ist. So Record für was verändert du sowas?

01:03:48.820 --> 01:03:52.560
Also wenn Struct verwende man eindeutig zum Beispiel wenn ich mit

01:03:52.560 --> 01:03:59.760
irgendwelchen doch bis hierhin finde ich ganz sinnvoll was Microsoft

01:03:59.760 --> 01:04:02.700
gemacht hat ja. Also Struts sind eine super

01:04:02.700 --> 01:04:07.360
Geschichte wenn du interagieren willst mit irgendwelchen C-LIBRARIES oder

01:04:07.360 --> 01:04:13.580
irgendwelchen Sachen wo du das Speicher layout irgendwie durch steigen musst.

01:04:13.580 --> 01:04:16.940
Ihr Anlass bei einem St profoundly EZ. Wenn ich hier ein supervision anlegende

01:05:16.980 --> 01:05:18.020
Was wollte ich jetzt sagen?

01:05:20.680 --> 01:05:25.620
Genau also da hast du Struts normalerweise für verwendet.

01:05:25.620 --> 01:05:26.820
So na mal rückgängig.

01:05:31.560 --> 01:05:33.900
Klassen verwendest du eher für Sachen mit Logik drinne also wenn jetzt

01:05:35.760 --> 01:05:36.200
nicht einfach nur reine Reine Daten Kapsel

01:05:39.820 --> 01:05:41.060
ê Dinger sind sondern auch noch irgendwie

01:05:41.060 --> 01:05:43.660
Logik drinne ist wenn du da verschiedene Methoden Drinne hast

01:06:43.800 --> 01:06:45.800
Ist Prime Sub quickly

01:06:46.000 --> 01:06:46.020
Connoagarya Bosongσ

01:06:53.600 --> 01:06:55.600
zum Daten Zusammenfassen gewesen sind

01:06:55.760 --> 01:06:57.800
und nachdem das so oft vorgekommen ist und

01:06:57.820 --> 01:07:04.860
dich bei so einer Klasse ja auch eher interessiert ob die Werte übereinstimmen und nicht so sehr ob die Referenz übereinstimmt

01:07:05.100 --> 01:07:08.360
tämä Microsoft irgendwann auf die Idee

01:07:08.460 --> 01:07:09.620
so vor Keiner Ahnung

01:07:09.620 --> 01:07:12.160
2-3 C-Sharp Versionen so lang gibt's das noch gar nicht

01:07:12.620 --> 01:07:18.040
Rekords einzuführen was im Endeffekt eine Klasse ist, allerdings sich ein bisschen wie instructor hält

01:07:20.140 --> 01:07:24.740
So verwendet man die unterschiedlichen paar dinger die Baute von unterschiedlichen Typen diese eingebaut haben

01:07:25.900 --> 01:07:28.360
oder der Typen sind sie ja gar nicht unterschiedliche

01:07:30.000 --> 01:07:31.720
meinungs sneakers

01:07:31.720 --> 01:07:33.720
Das Никlas ravas microsoft das total

01:07:34.480 --> 01:07:41.420
Es sind überhaupt Geb душ ab migrantenölzeit die haben sie haben das noch viel mehr verkompliziert z.b kam an jetzt

01:07:42.160 --> 01:07:47.640
Wie gesagt ich habe. Ihr gesagt Rekord sind eigentlich Klassen jetzt gibt es auch noch einen Rekord lust

01:07:48.500 --> 01:08:08.800
so gibt es auch noch. Ein Rekord

01:10:09.760 --> 01:10:12.700
nie benutzten die Nutzung ich habe jetzt aber vergessen wie ich darauf gekommen bin

01:10:12.700 --> 01:10:18.400
glaube ich glaube das Microsoft ist halt ein bisschen übertreibt,

01:10:18.400 --> 01:10:27.460
mit und durchsichtigen Sachen. diese Sachen jetzt wir auch alle ein bisschen unterschiedlich

01:10:27.460 --> 01:10:33.280
sind ja, Rekord so zu initialisieren ging schon immer, ne Klaas so zu initialisieren geht jetzt

01:13:03.400 --> 01:13:08.800
ein bisschen Platz spart so doppelte Sachen vermeidet, ja, ihr seht ja den

01:13:08.800 --> 01:13:14.440
Unterschied also es ist schon eine ganze Ecke kürzer also das hier entspricht auf beiden Seiten

01:13:14.440 --> 01:13:21.700
das gleiche, was es macht. Warum hast du den in C sharp geschrieben? Weil die einfachste Programmiersprache

01:13:21.700 --> 01:13:28.000
ist, ganz einfach man hätte das durchaus auch in anderen Sprachen machen können wobei wie gesagt

01:13:28.640 --> 01:13:36.200
Interop mit C ist in C sharp tatsächlich ganz ok gelöst also da kriegt man keine

01:13:36.200 --> 01:13:48.640
Anfälle wie beispielsweise in GO. Das kann man ganz gut verwenden und sie drehen ja da auch die

01:13:48.640 --> 01:13:54.320
ganze Zeit ein bisschen dran zum Beispiel gibt es jetzt ja library import anstatt dll import was

01:14:24.320 --> 01:14:39.840
ist mit GO also zu den fallen ich eben angesprochen habe. ist die

01:14:39.840 --> 01:14:44.340
zusammenarbeit mit C library aus GO raus absoluter pains champ also sowohl

01:15:15.100 --> 01:15:22.340
sieht zum beispiel so aus dass ihr meine musst zur geben. das sieht, das sieht schon sehr

01:15:22.340 --> 01:15:33.380
sehr C-style aus. ist das aber nicht, das ist C sharp und man kann also man kann

01:15:33.380 --> 01:15:38.500
hier wie man sieht relativ easy in C sharp mit c funktion interagieren

01:15:38.500 --> 01:15:42.900
man kann sogar so abgedrehte sachen machen wie pointer auf den pointer und

01:15:43.140 --> 01:15:54.540
das geht ganz gut. wenn man externe externe c library funktionen aufrufen will kann man

01:15:54.540 --> 01:16:04.520
diese definition. also ich nichts abgedrehe dass das stimmtcrire oben wird's teilweise

01:16:04.520 --> 01:16:05.340
schon ein bisschen eklig二

01:16:05.700 --> 01:16:20.380
hätte du das nicht auch in bash machen können. potentiell kannst du alles irgendwie in jeder

01:16:20.380 --> 01:16:28.220
sprache machen. gut aus bash c funktionen aufrufen ist nicht da müsstest du selbst

01:19:28.260 --> 01:19:32.860
für solche sachen ist das natürlich ganz nice. ich muss euch sagen ich bin da eigentlich bisher

01:19:32.860 --> 01:19:40.700
immer ohne ausgekommen aber ich gedde das. ist ok und om wird es wahrscheinlich auch an

01:19:40.700 --> 01:19:48.340
der einen oder anderen stelle benutzen. gerade wenn du vielleicht Sachen hast,

01:19:48.340 --> 01:19:54.780
die doppel deutlich heißen kann das schön sein. also das ist jetzt auch ein neues feature.

01:19:54.780 --> 01:20:02.100
das würde ich auch so irgendwie unterschreiben, dass ist eine sinnvolle sache ist das so einzubauen.

01:20:08.680 --> 01:20:12.220
hier machen sie das mit irgendwelchen tuppels,

01:20:12.220 --> 01:20:19.020
was jetzt nicht funktioniert. ok,

01:20:19.020 --> 01:20:23.420
ich habe keine Ahnung warum das angeblich jetzt je darum nicht funktioniert.

01:20:24.060 --> 01:20:27.340
ah, funktioniert doch,Rider checkt es bloß nicht.

01:20:40.300 --> 01:20:45.440
rainfall checkt es noch nicht, ja also das geht jetzt, da können ich jetzt quasi so

01:20:45.440 --> 01:20:51.460
so ein tuppel hier referenz. wobei man sich da halt fragen muss, wenn ich sowas hier anlege,

01:20:51.460 --> 01:20:58.640
warum mache ich nicht gleich den record, der sich measurement nennt und stringding hat.

01:21:05.780 --> 01:21:08.100
wird ja auch in dem fall gehen,

01:21:08.460 --> 01:21:11.380
deswegen habe ich gedacht, ich machs mal mit einem beispiel von der liste,

01:21:11.840 --> 01:21:16.300
weil sowas wie ne liste mit einem festen typ anlegen,

01:21:16.300 --> 01:21:19.800
das kann man so nicht ohne weiteres schnell mit einem eigenen typ anlegen.

01:22:19.840 --> 01:22:23.080
und das hier, das hätte schon lange gebraucht

01:22:23.340 --> 01:22:23.960
so

01:22:25.800 --> 01:22:27.800
und zwar war es bisher so

01:22:27.960 --> 01:22:31.640
wir legen jetzt mal, wir legen jetzt mal eine anonyme, ne anonyme funktion an

01:22:31.640 --> 01:22:33.240
da machen wir jetzt mal irgendwie sowas hier

01:22:36.140 --> 01:22:37.840
ich mach den, ich mach den kram ja mal wieder raus

01:23:08.240 --> 01:23:09.340
message

01:23:12.700 --> 01:23:13.860
so und ähmm

01:23:16.200 --> 01:23:18.580
ja jetzt fun- jetzt funktionierts nicht

01:23:21.720 --> 01:23:24.360
und was bisher nicht ging ist

01:23:25.300 --> 01:23:27.480
hier die faultwerte anlegen

01:23:29.080 --> 01:23:30.440
in der anonyme funktion

01:23:31.300 --> 01:23:33.300
und das geht jetzt

01:23:33.800 --> 01:23:35.740
und das ist äußerst nice

01:23:35.740 --> 01:23:37.660
ich mein in dem fall ist es natürlich

01:23:37.660 --> 01:23:38.640
bescheuert

01:23:38.640 --> 01:23:40.160
weil ich könnte auch einfach sagen

01:23:40.160 --> 01:23:41.120
public

01:23:41.200 --> 01:23:42.760
ähmm void

01:23:42.760 --> 01:23:44.800
keine Ahnung hier print

01:23:44.860 --> 01:23:46.360
ähh string message

01:23:46.360 --> 01:23:47.860
und eine richtig echte funktion anlegen

01:23:47.860 --> 01:23:49.360
die da auch irgendwie heißt so. ja

01:23:49.360 --> 01:23:51.520
also das wäre auch schon in ordnung an

01:23:51.520 --> 01:23:52.900
anstatt so was anzulegen

01:23:52.900 --> 01:23:54.900
aber sowas kann man zum beispiel auch

01:23:54.900 --> 01:23:56.900
als parameter verwenden

01:23:57.520 --> 01:23:58.700
oder aber

01:23:59.060 --> 01:24:00.360
wo ich das

01:24:00.360 --> 01:24:02.060
wo ich das häufig das problem

01:24:02.220 --> 01:24:04.220
hatte ist wenn du kommando zeilen anwendung machst

01:24:05.860 --> 01:24:07.100
zum beispiel

01:24:07.100 --> 01:24:09.100
was ich ganz gerne als kommando zeilen framework

01:24:09.100 --> 01:24:11.100
verwende ist das da

01:24:15.940 --> 01:24:18.080
kann man kann man sowas hier machen

01:24:18.140 --> 01:24:20.140
ich zeig euch das mal schnell

01:24:20.400 --> 01:24:22.400
wo ist mein nougat

01:24:32.060 --> 01:24:34.060
der heisst anders

01:24:38.880 --> 01:24:40.880
es heisst wirklich cocoona

01:24:42.240 --> 01:24:43.280
oder so ähnlich

01:24:43.940 --> 01:24:45.940
was man damit machen kann

01:24:45.940 --> 01:24:47.520
ist zum beispiel ganz

01:24:47.520 --> 01:24:49.520
easy kommando zeilen anwendung erstellen

01:24:49.720 --> 01:24:51.720
also wenn ich sowas hier ausführe

01:24:51.760 --> 01:24:53.760
dotnet run minus helLAUGH

01:24:53.760 --> 01:24:54.620
und sagt er mir

01:24:54.620 --> 01:24:56.140
ah guckt mal

01:24:56.140 --> 01:24:57.320
es gibt

01:24:58.300 --> 01:25:00.140
zwei optionen die du angeben kannst

01:25:00.140 --> 01:25:01.460
nämlich name

01:25:02.320 --> 01:25:04.320
und name ist vom typ string

01:25:04.320 --> 01:25:06.620
du musst es jetzt so aufrufen

01:25:06.620 --> 01:25:08.380
minus minus name

01:25:11.760 --> 01:25:13.040
also das funktioniert

01:25:13.040 --> 01:25:14.020
ziemlich gut

01:25:14.520 --> 01:25:16.520
ich schreibs mal

01:25:18.180 --> 01:25:20.180
und das hier ist

01:25:20.260 --> 01:25:20.940
차

01:25:20.940 --> 01:25:28.720
ein lambda Along

01:25:58.800 --> 01:25:59.300
achso

01:25:59.800 --> 01:26:01.060
das ist natürlich

01:26:01.060 --> 01:26:02.480
okay, wobei warum nicht

01:26:07.760 --> 01:26:11.080
..und jetzt kann man da default values angeben

01:26:11.080 --> 01:26:12.280
das ist enorm nützlich

01:26:12.420 --> 01:26:14.420
für frameworks in der richtung

01:26:14.500 --> 01:26:19.220
wenn man die quasi anonymous function lambda aufrufe joins an der stelle verwendet

01:26:19.220 --> 01:26:19.720
oder

01:26:20.280 --> 01:26:22.840
für minimale api ist das auch sehr sinnig

01:26:24.520 --> 01:26:25.780
weil die haben sich doch aus

01:26:25.780 --> 01:26:26.360
die haben sich doch

01:26:26.360 --> 01:26:27.760
wir machen mal eine web-anwendung

01:26:27.760 --> 01:26:28.380
wartet mal

01:26:29.660 --> 01:26:30.360
ajem

01:26:34.400 --> 01:26:35.220
Kekkel

01:26:37.340 --> 01:26:37.680
..äh

01:26:37.680 --> 01:26:38.500
..dot.net

01:26:38.500 --> 01:26:39.120
..new

01:26:40.600 --> 01:26:41.840
web

01:26:41.840 --> 01:26:43.840
das ist es glaube ich

01:26:43.840 --> 01:26:44.360
so mahmme

01:26:44.380 --> 01:26:45.020
..machmal die

01:26:45.020 --> 01:26:45.520
die

01:26:45.520 --> 01:26:47.220
das andere projekt auf

01:26:50.520 --> 01:26:51.020
allah was

01:26:51.740 --> 01:26:52.240
autor

01:26:54.080 --> 01:26:54.580
kekkel

01:26:56.600 --> 01:26:57.200
trust

01:26:57.540 --> 01:26:58.080
trust

01:26:58.080 --> 01:26:58.580
jawoll

01:26:59.060 --> 01:26:59.900
wir trusten

01:27:02.920 --> 01:27:03.420
äh

01:27:07.080 --> 01:27:07.580
..was

01:27:11.980 --> 01:27:12.480
ehh ok

01:27:12.480 --> 01:27:13.000
es ist

01:27:13.000 --> 01:27:14.980
es ist die RID3R preview version

01:27:16.840 --> 01:27:18.840
die noch irgendwie so mahmme schmerzen hat

01:27:23.140 --> 01:27:23.640
ah

01:27:27.780 --> 01:27:28.280
eh

01:27:28.280 --> 01:27:28.780
wo once

01:27:35.820 --> 01:27:36.420
unload

01:27:37.940 --> 01:27:38.440
load

01:27:38.680 --> 01:27:39.580
jetzt vielleicht

01:27:46.000 --> 01:27:46.500
ok

01:27:46.700 --> 01:27:48.320
target framework C sharp 8

01:27:48.400 --> 01:27:51.900
äh

01:27:51.900 --> 01:27:54.100
schon dabei ihre Minimal APIs zu pushen

01:27:54.320 --> 01:27:55.440
als wenn ich das ding jetzt

01:27:55.620 --> 01:27:56.340
hier jetzt starte

01:27:58.340 --> 01:28:01.000
then starten in web server

01:28:01.340 --> 01:28:01.840
und wenn ich sag

01:28:09.100 --> 01:28:11.460
dann kommt der hello world zurück

01:28:11.840 --> 01:28:12.340
so

01:28:12.340 --> 01:28:15.360
das ist relativ easy

01:28:15.440 --> 01:28:15.940
ter zu bauen

01:28:15.940 --> 01:28:16.440
ohne das du

01:28:16.440 --> 01:28:20.440
dich mit

01:28:20.440 --> 01:28:21.000
udc

01:28:21.020 --> 01:28:21.420
us Ocean

01:28:21.420 --> 01:28:22.160
wobei

01:28:22.160 --> 01:28:22.160


01:28:22.160 --> 01:28:23.680
obwohl

01:28:23.680 --> 01:28:25.140
hat

01:29:26.000 --> 01:29:26.800
vrage zeichen

01:29:38.800 --> 01:29:41.640
ja

01:29:45.640 --> 01:29:48.220
damit, dass es default parametern gibt

01:29:48.220 --> 01:29:49.740
ich kann jetzt sagen

01:29:49.740 --> 01:29:50.440
und bedruckt

01:29:50.440 --> 01:29:51.840
ist dwell

01:29:51.840 --> 01:29:53.740
und wenn ich jetzt

01:29:53.740 --> 01:29:56.540
und wenn ich jetzt nichts übergebe

01:29:56.540 --> 01:30:00.320
dann geht es nicht kaputt

01:30:00.320 --> 01:30:02.220
sondern nehmt den defaultvalue

01:30:02.220 --> 01:30:04.660
also das ist wirklich eine äußerst sinnvolle

01:30:04.660 --> 01:30:06.200
funktion dass es es jetzt hier erlaubt

01:30:06.200 --> 01:30:06.580
ist

01:30:06.580 --> 01:30:08.980
das ist quasi das Gegenstück zu

01:30:08.980 --> 01:30:09.840
also es gibt ja

01:30:09.840 --> 01:30:11.580
es gibt da schon

01:30:11.580 --> 01:30:14.260
default values für paramet' da gibt es da schon

01:30:14.260 --> 01:30:15.100
ewig

01:30:15.100 --> 01:30:17.400
seit 15 Jahren oder So

01:30:17.400 --> 01:30:20.140
In harmonica war allerdings bisher immer nur

01:30:20.140 --> 01:30:22.340
echten funktionen vorneihalten also

01:30:22.420 --> 01:30:24.180
wenn ich sowas machen wollte hier wollte

01:30:24.180 --> 01:30:28.180
void print

01:30:28.180 --> 01:30:29.620
dann konnte ich hier zum Beispiel sagen

01:30:29.620 --> 01:30:31.620
string message gleich

01:30:31.620 --> 01:30:33.140
eat chat

01:30:33.140 --> 01:30:34.480
das geht schon

01:30:34.480 --> 01:30:35.440
ewig

01:30:35.440 --> 01:30:37.540
ich glaube nicht immer

01:30:37.540 --> 01:30:40.540
aber schon ewig geht das in z-shop

01:30:47.160 --> 01:30:50.720
aber hier in anonymous-funktion gegen das die ganze zeit nicht

01:30:50.820 --> 01:30:54.300
und das ist ein sehr sehr sinnvolles feature dass es das endlich eingebaut

01:30:54.300 --> 01:30:57.300
haben

01:30:57.300 --> 01:31:00.300
gab es in zwei Punkten sowas wie einPeople-Objekt

01:31:01.200 --> 01:31:02.900
was

01:31:02.900 --> 01:31:05.920
du meinst was? wo von allen Klassen ab stammen oder wie oder was?

01:31:07.740 --> 01:31:09.020
Ja das gibt's

01:31:09.020 --> 01:31:12.000
die stammen alle von Objekts ab

01:31:14.000 --> 01:31:17.480
außer außer und solche Sachen die stammt

01:31:17.580 --> 01:31:21.240
von Value-Type glaub ich ab der wiederum von Objekt

01:31:21.980 --> 01:31:22.960
abstand

01:31:22.960 --> 01:31:26.280
also details mit denen beschäftigt man sich selber

01:31:26.860 --> 01:31:29.260
Er meinst sowas wie gleich-Default

01:31:29.260 --> 01:31:31.440
Ja, ja, das gibt's das gibt's auch

01:31:31.440 --> 01:31:34.740
Gleich-Default gibt's gibt's auch

01:31:36.960 --> 01:31:41.420
Definitiv ist halt immer

01:31:41.620 --> 01:31:42.940
ist Hz schwierig zu erklären

01:31:43.420 --> 01:31:45.420
Immer der

01:31:47.960 --> 01:31:50.300
Ja wenn ich sage, er default wert ist blöd

01:31:50.300 --> 01:31:55.080
Der default wert für. Einen typ und das ist das ist bij

01:31:55.300 --> 01:31:57.300
Reference-Types ist das immer null

01:31:58.800 --> 01:32:02.000
Deswegen sagt mir auch hier ich muss sagen dass das in alle bild sein soll

01:32:02.660 --> 01:32:06.200
Ja bei struct sieht das zumواh school schon wieder ein bisschen anders aus

01:32:08.660 --> 01:32:10.660
Ja, gibt das gibt es gibt es tatsächlich

01:32:13.080 --> 01:32:15.080
das ist nicht das gleiche ja

01:32:16.280 --> 01:32:18.280
Dass das hier wäre das gleiche

01:32:20.260 --> 01:32:23.300
Wobei man an manchen stellen null nicht verwenden kann die fold aber schon

01:32:25.720 --> 01:32:26.720
Aber

01:32:26.720 --> 01:32:30.320
wie gesagt also die fall wird der in funktionen gibt schon ewig

01:32:30.480 --> 01:32:36.440
aber in anonymen funktionen jetzt erst sei es die schaft 12 und das ist sehr nice dass das endlich drinne ist

01:32:37.000 --> 01:32:42.600
Das erspart ein viel rum getrickste wenn man es einfach direkt. Benutzen kann

01:32:43.160 --> 01:32:45.160
der

01:32:55.240 --> 01:32:57.360
Also für mich ist das eindeutig das beste feature

01:32:59.380 --> 01:33:04.380
Was die mir schrès 12 bringen den rest könnten, so eigentlich behalten aber das ist wirklich wichtig das hätte schon lange gebraucht

01:33:04.660 --> 01:33:07.660
tangled

01:33:19.500 --> 01:33:22.540
weißt du, was sie weirdes machen, dass das die

01:33:26.980 --> 01:33:28.980
Stange

01:33:30.380 --> 01:33:32.140
Star

01:34:02.580 --> 01:34:05.260
phm mit laure vielleicht noch irgendwo

01:34:06.880 --> 01:34:09.360
Aber ich muss sagen asb net ist sehr angenehm

01:34:10.640 --> 01:34:13.480
es ist ja ja auch auch

01:34:14.320 --> 01:34:15.480
quasi voll stack

01:34:15.480 --> 01:34:18.360
das welt set kann frontend rennen

01:34:19.620 --> 01:34:22.120
und backend sachen ausführen

01:34:23.780 --> 01:34:28.980
du kannst mitねكن zb seiten schon vor rennen beim ersten mal ausliefern

01:34:32.520 --> 01:34:35.020
überallodo

01:34:41.380 --> 01:34:43.900
er sei ich auch so

01:34:45.340 --> 01:34:48.420
das besten ist in der regel das womit man sich am besten auskennt

01:34:48.420 --> 01:34:53.100
tatsächlich sehe ich auch so sie ich ganz genauso

01:34:53.980 --> 01:34:56.860
aber spt etwa finde ich persönlich sehr angenehm

01:35:02.860 --> 01:35:18.300
so das waren jetzt erst mal die 90 scharp features es gibt allerdings noch ein paar neue funktionen

01:35:18.900 --> 01:35:30.500
what's new in dotnet 8 und da sind jetzt zur abwechslung ein paar sachen darin, wo ich

01:35:30.500 --> 01:35:39.620
denke, ja das ist sehr nice. zumindest ein paar sachen davon, da zeige ich euch jetzt

01:35:39.620 --> 01:35:44.940
auch noch mal welche also gerade die neuen random-funktion finde ich, finde ich sehr

01:35:45.420 --> 01:35:50.880
joymax was ist mit der frage von personal können sie linux gemeint, da musste ich

01:35:50.880 --> 01:35:59.380
die mal fragen. definiere können ich bezweifel dass die personaler überhaupt wissen wovon

01:35:59.380 --> 01:36:08.280
sie sprechen themen sagen ich habe 15 jahre erfahrung mit linux in dem ande nbereich wenn

01:36:08.280 --> 01:36:11.020
du sie hast, keine ahnung, die wissen wahrscheinlich selbst nich, ich würde sagen

01:37:41.860 --> 01:37:55.040
ok weiß gar nicht wofür man das braucht, ich muss euch sagen ich bin ja der old school ich verwende

01:37:55.040 --> 01:38:00.100
immer noch jason.net ich weiß nicht wie ist bei euch aussieht chat

01:38:00.100 --> 01:38:04.620
wenn einer von euch hauptsächlich csharp benutzt benutzt ihr noch jason.net?

01:38:04.620 --> 01:38:07.340
oder seid ihr ja schon komplett beim build in?

01:38:08.340 --> 01:38:11.220
jason serialisieren

01:38:13.360 --> 01:38:17.980
ich weiß nicht also wenn ich jetzt super kras mega performance bräuchte dann

01:38:17.980 --> 01:38:22.060
würde ich vielleicht was anderes nehmen aber in der regelREICH mit

01:38:22.060 --> 01:38:27.380
jason.net eigentlich immer noch am angenehmsten bis letztes auf das build in

01:38:27.380 --> 01:38:28.900
umgestiegen okay

01:38:33.080 --> 01:38:35.020
moin kingflex

01:38:37.860 --> 01:38:42.280
to

01:38:44.640 --> 01:38:48.980
ja also was ich jetzt viel interessanter finde ist also das interessiert mich

01:38:48.980 --> 01:38:52.340
jetzt auch nicht so sehr sie haben irgendwas an irgendwelchen time stead

01:38:52.340 --> 01:38:57.360
darum gedreht das wird ja fast so abgetreten von javascript mittlerweile

01:38:57.680 --> 01:39:02.300
aber was ich ganz cool finde ist hier ist das hier.

01:39:02.300 --> 01:39:05.580
und das ist sowas, das fehlt mir schon lange das kann man übrigens relativ

01:39:05.680 --> 01:39:10.720
Easy sich sich bauen aber sie haben jetzt endlich mal ein paar sinnvolle methoden dafür

01:39:10.720 --> 01:39:14.720
eingebaut dass man arrays zum beispiel random

01:39:14.720 --> 01:39:16.800
Durch mischen kann und so was

01:39:19.000 --> 01:39:21.520
Man siehts hier zum beispiel

01:39:23.700 --> 01:39:25.500
Können wir mal ausprobieren

01:39:26.440 --> 01:39:29.280
Also es gibt jetzt get items

01:39:29.680 --> 01:39:31.080
und shuffle

01:39:31.180 --> 01:39:34.540
Und damit kann man zum beispiel in random item nehmen wir das mal von hier

01:39:34.840 --> 01:39:37.460
gucken wir, dass einfach hier copy copypasten kann

01:39:37.460 --> 01:39:40.160
ich mach mal, ich mach mal grad wieder das andere auf

01:39:42.560 --> 01:39:43.220
wartet mal

01:39:44.040 --> 01:39:44.940
open

01:39:45.720 --> 01:39:46.500
consoleapp

01:39:47.320 --> 01:39:48.300
this window

01:39:50.440 --> 01:39:51.700
consoleapp 2

01:39:52.160 --> 01:39:52.760
Jawoll

01:39:52.940 --> 01:39:54.060
Hör schonmal den Klampel

01:39:55.920 --> 01:39:56.780
Ja

01:39:57.160 --> 01:39:58.220
hatten, Albeddel

01:39:59.100 --> 01:40:00.540
und jetzt machen wir int

01:40:03.160 --> 01:40:05.240
Mal gucken, ob das mit einer stinknormanen Liste geht

01:40:05.500 --> 01:40:08.380
var list gleich new list

01:40:08.580 --> 01:40:09.080
int

01:40:09.340 --> 01:40:09.840
So

01:40:10.020 --> 01:40:11.540
Schreiben wir jetzt mal etwas rein

01:40:12.840 --> 01:40:17.560
1 5 8 3 2 4

01:40:17.880 --> 01:40:19.620
so 45 ja perfekt

01:40:20.300 --> 01:40:21.780
So und da kann man jetzt sagen

01:40:22.400 --> 01:40:22.900
Ähm

01:40:23.340 --> 01:40:23.840
ja

01:40:24.680 --> 01:40:25.420
novo

01:40:25.700 --> 01:40:26.220
kann man sagen

01:40:26.220 --> 01:40:28.160
random shared get items

01:40:28.160 --> 01:40:29.320
und jetzt hier eine Liste übergeben

01:40:29.320 --> 01:40:30.640
ok das funktioniert nicht warum

01:40:31.600 --> 01:40:32.100
weil

01:40:34.480 --> 01:40:37.500
The type argument cannot be inferred from usage

01:40:47.120 --> 01:40:47.620
ok

01:40:56.380 --> 01:40:58.380
geht das mit listen nicht

01:41:13.820 --> 01:41:15.820
ok als array funktioniert es

01:41:17.680 --> 01:41:19.180
haben listen ich eh schon schaffe

01:41:20.500 --> 01:41:21.000
ja gut

01:41:22.700 --> 01:41:23.380
ja meinsch

01:41:23.380 --> 01:41:24.660
ääh, neley haben sie nich

01:41:26.240 --> 01:41:27.920
ich will die auch vielleicht nicht shuffeln

01:41:27.920 --> 01:41:30.320
sondern ein random item daraus daraus holen

01:41:30.740 --> 01:41:33.060
also was das hier macht ist folgendes

01:41:33.180 --> 01:41:35.840
das holt sich random zwei elemente

01:41:35.840 --> 01:41:37.840
aus der liste raus

01:41:40.360 --> 01:41:42.360
und das ist was das finde ich sehr nice

01:41:42.360 --> 01:41:44.000
das das mittlerweile drinne ist

01:41:44.000 --> 01:41:46.180
beste variation benamung aller zeiten

01:41:46.900 --> 01:41:47.400
hallo

01:41:47.620 --> 01:41:49.120
wenn schon nennen wir das jetzt I

01:41:51.440 --> 01:41:52.200
run

01:41:56.720 --> 01:41:57.220
ran

01:41:59.240 --> 01:42:01.240
oh zack 3 und 2 hast du rausgeholt

01:42:01.260 --> 01:42:02.340
ja wunderbar

01:42:02.340 --> 01:42:03.840
3 und 45 er herausgeholt

01:42:03.840 --> 01:42:05.660
2 und 2

01:42:05.660 --> 01:42:06.860
er rausgeholt

01:42:06.860 --> 01:42:07.980
kann auch doppelt

01:42:07.980 --> 01:42:08.980
kann auch doppelt kommen

01:42:09.420 --> 01:42:09.780
also das finde ich sehr praktisch

01:42:09.780 --> 01:42:11.780
dass das jetzt eingebaut ist

01:42:12.320 --> 01:42:14.880
get a random item

01:42:15.480 --> 01:42:16.120
aus

01:42:16.120 --> 01:42:16.960
ner liste

01:42:17.500 --> 01:42:18.920
bzw. aus dem array

01:42:18.920 --> 01:42:20.020
das ist praktisch

01:42:20.020 --> 01:42:22.920
konnte man sich früher relativ einfach auch selbst zusammenbauen

01:42:22.920 --> 01:42:24.280
aber es ist schön dass es jetzt

01:42:24.280 --> 01:42:25.800
schön dass es drinne ist

01:42:26.640 --> 01:42:28.640
das gleiche gibt es noch hier mit shuffle

01:42:31.200 --> 01:42:35.700
Wobei man das dann wirklich als span braucht. Da kann man zumindest jetzt auch

01:42:36.000 --> 01:42:38.260
Listen irgendwie mischen lassen damit

01:42:39.040 --> 01:42:42.260
Also das finde ich gut dass das standardmäßig was eingebaut ist

01:42:44.400 --> 01:42:48.340
Achja noch noch ein hinweis nerves warum warum die hier谎那么

01:42:49.580 --> 01:42:51.940
random sch hat verwenden dass ist auch

01:42:53.020 --> 01:42:54.580
relativ neu

01:42:54.580 --> 01:42:56.580
nicht super neu

01:42:58.020 --> 01:43:02.200
Also das gibt gibt es schon. Ein paar versionen früher war das ein problem ich zeige euch

01:43:02.200 --> 01:43:06.020
Was das problem früher gewesen ist mit random übrigens ich glaube dass problem

01:43:06.260 --> 01:43:12.980
existiert in der form gar nicht mehr deswegen kann ich euch nur. Zeigen was was das problem war ohne dass hier ist wirklich

01:43:15.880 --> 01:43:19.840
Seht warum warum will. Ihr eigentlich, mein auto complete gerade nicht

01:43:19.840 --> 01:43:21.340
ville

01:43:28.500 --> 01:43:35.860
Aber was hat, er für probleme mit meinem auto complete gibt sich mehr auto computation

01:43:42.800 --> 01:43:45.540
gibt's nicht gibt, kein gibt, kein auto komplett, mehr

01:43:45.860 --> 01:43:49.560
und

01:43:59.200 --> 01:44:01.280
Wannec

01:44:01.280 --> 01:44:03.060
Nö

01:44:03.060 --> 01:44:08.740
Ok, meine autokeける Internet kaputt. Es macht nicht. Na gut also ich zeige ich zeige euch was das eigentlich ver joue

01:44:09.440 --> 01:44:14.480
Gleich Null I kleiner K保空

01:44:15.740 --> 01:44:17.740
So

01:44:18.660 --> 01:44:23.480
Früher das problem gewesen ist wie gesagt ich glaube ich glaube das Problem an sich existiert gar nicht mehr

01:44:24.260 --> 01:44:26.120
leute früher bisschen

01:44:26.120 --> 01:44:31.700
Wenn sie nicht aufgepasst haben blödsinn gebaut wenn sie random zahlen generiert halb economieren wollten

01:44:31.840 --> 01:44:33.840
Ja

01:44:34.460 --> 01:44:39.680
Und die haben so was gemacht hier war random gleich nu random

01:44:40.700 --> 01:44:48.180
Und dann wurde gesagt random. Next. Ja ne random nummer zwischen zwischen keine ahnung zwischen 50 und 5000 so

01:44:48.860 --> 01:44:54.640
Und haben sie das ausgeführt haben sie gewundert warum die zahlen immer doppelt sind wie gesagt ich glaubt das problem ja genau das problem

01:44:54.840 --> 01:44:56.840
gibt es gibt es gar nicht mehr

01:44:57.280 --> 01:45:00.100
aber das war ein problem früher weil

01:45:01.100 --> 01:45:04.700
Früher random geseadet wurde mit denen

01:45:05.420 --> 01:45:07.420
mit der uhrzeit auf jeden fall

01:45:10.840 --> 01:45:13.520
Das problem ist hacker aren maintenance

01:45:14.980 --> 01:45:21.600
Also da gab sicherlich auch ein problem ob das stress Apa nicht aber das war ursprünglich genau das hier war das problem

01:45:22.420 --> 01:45:26.420
Wenn dupapern nummer gemacht hast das wurde immer mit der urzeit geseadet

01:45:26.740 --> 01:45:29.820
und wenn du jetzt schleifen hattest die super mega schnell waren

01:45:30.140 --> 01:45:32.140
Dann

01:45:33.880 --> 01:45:38.080
Da war bei mehreren durchlauf durchläufen die urzeit die gleiche und

01:45:38.380 --> 01:45:44.980
Und das random hat den gleichen sieht bekommen und die gleiche Zahl ausgesputzt. Ich glaube das gibt es in der form jetzt nicht mehr

01:45:46.620 --> 01:45:49.700
Vielleicht ist es auch nur zu langsam wegen dem console drijt leihen

01:45:50.740 --> 01:45:52.740
kann auch sein Aber

01:45:53.140 --> 01:45:55.140
Zumindest ist das ist das ein problem

01:45:56.740 --> 01:45:59.260
Problem gewesen bei random früher

01:46:00.940 --> 01:46:02.940
Wir können sie mal ausprobieren

01:46:04.600 --> 01:46:06.600
Aber ist

01:46:07.860 --> 01:46:09.860
Nie

01:46:15.140 --> 01:46:20.700
So viel schneller also zwischenέ

01:46:25.040 --> 01:46:29.160
Mein auto comedy gibt's nicht mehr hier vor in nuess

01:46:30.540 --> 01:46:34.540
Schaue wir mal ob das jetzt irgendwie

01:46:36.540 --> 01:46:42.780
Also das problem ist wohl wirklich gefixt mit random aber das war früher ein problem definitiv wenn man da wenn man danach sucht

01:46:43.640 --> 01:46:51.160
ja w STM random number loop man, Donnern

01:46:54.120 --> 01:46:56.160
Bis ihn die hat ein Cumライon mit

01:46:58.420 --> 01:46:59.720
und

01:47:00.320 --> 01:47:02.760
Wie man das lösen konnte war eigentlich relativ einfach

01:47:03.260 --> 01:47:08.540
Man musste das random eben außerhalb von der schleife packen dann wurde das hier initial gesiedelt

01:47:08.940 --> 01:47:13.200
Und hier immer die nächste nächste random. Zahl aus dem generator genommen

01:47:14.480 --> 01:47:19.060
Also das war relativ easy zu fixen, aber da hat sich microsoft. Gedacht.idez was

01:47:20.520 --> 01:47:22.680
Warum eigentlich so kompliziert

01:47:24.000 --> 01:47:29.380
Lass uns doch einfach so was einbauen wie random punkt cheart punkt nächst

01:47:30.560 --> 01:47:31.960
und

01:47:31.960 --> 01:47:33.960
Dann hat man die ganzen probleme nicht

01:47:36.020 --> 01:47:38.020
Das ist jetzt, ein

01:47:38.380 --> 01:47:42.920
Was red safer initial gesiedelte random der keine probleme macht

01:47:43.400 --> 01:47:47.940
Und ich glaube sogar das ist fill nicht mit logs geregelt sondern irgendwie

01:47:47.940 --> 01:47:50.600
Anders also das ist wohl auch sehr

01:47:51.680 --> 01:47:55.800
high high performance ja hier diese diese random geschichte

01:47:56.620 --> 01:47:57.120
Und

01:47:57.120 --> 01:48:01.160
Es gibt auch noch nicht so, lang aber ist eine äußerst sinnvolle

01:48:02.460 --> 01:48:03.800
neue

01:48:03.800 --> 01:48:05.800
Variante gewesen diese da eingebaut haben

01:48:06.160 --> 01:48:09.340
Naja und anscheinend gibt es jetzt in der neuen version

01:48:09.860 --> 01:48:11.860
Get items

01:48:12.340 --> 01:48:15.640
Get items und shuffle für race noch

01:48:16.440 --> 01:48:18.520
Finde ich beides auch sinnig

01:48:18.540 --> 01:48:23.620
Zufallszahlen bei algorithms sind immer so eine sage für sich warum das funktioniert seit

01:48:24.200 --> 01:48:28.300
langer zeit, du darfst halt bloß nicht darauf spekulieren dass das jetzt irgendwie was

01:48:29.120 --> 01:48:34.400
vergleichbares ist mitusterfahre von atomen oder so was, was wirklich do还有

01:48:35.260 --> 01:48:41.300
bit du kannst du kannst einen zahlen generator mit dem gleichen spukt immer die gleiche

01:48:41.960 --> 01:48:44.020
aber cheeky

01:48:44.460 --> 01:48:47.460
sein sogar

01:48:49.460 --> 01:48:51.460
Die gleiche

01:48:51.580 --> 01:48:56.660
Reinfolge aus aber das ist ja oftmals auch gewollt weil das ist halt einfach 2006

01:48:57.500 --> 01:49:02.820
Und wenn du, sachen reproduziell haben willst ganz sagen wie man beispielsweise der gleiche sieht in minecraft

01:49:03.500 --> 01:49:05.500
Ist das ja auch sinnvoll

01:49:08.540 --> 01:49:11.860
Er kommt alles wie immer auf den anwendungszweck an

01:49:12.380 --> 01:49:18.000
Für. Spiele oder sowas ist den echter zufallhalten generator komplett unsinnig weil viel zu langsam

01:49:18.740 --> 01:49:23.160
Gut mittlerweile gibt es gibt es in vielen cpu. S資len unterstützen

01:49:23.960 --> 01:49:25.940
Mit mit fragt mich nicht, wie das funktioniert

01:49:26.780 --> 01:49:29.080
rauschen von irgendwelchen signalen auf

01:49:29.600 --> 01:49:37.280
Keine. Ahnung es gibt ja mittlerweile schon etwas bessere random generator sich einen in aktuellen in aktueller hardware drinnen die

01:49:37.660 --> 01:49:39.660
mehr random sind

01:49:39.980 --> 01:49:43.880
Aber ich glaube da wenn du irgendwie ein spiel hast was was wirklich

01:49:45.380 --> 01:49:51.180
So high performance random generator brauchz beispielsweise du hast sowas wie pass of exile

01:49:51.500 --> 01:50:04.540
Und lässt es also du bist der anbieter von pass of exile und hast dein random generator auf dem server

01:50:35.480 --> 01:50:37.480
journée

01:50:38.300 --> 01:50:40.300
so

01:50:42.100 --> 01:50:47.940
Also das ist eines der neuerungen hier in sich habe die ich wirklich gut finde dass sie endlich zwei sachen eingebaut haben in random

01:50:48.440 --> 01:50:55.600
Nämlich random times aus einem array und in array durchmischen wo man sich denkt warum gab es das nicht schon seit 20 jahren

01:50:56.880 --> 01:51:03.240
Ja aber gibt es nicht ja es gibt noch ein paar es gibt noch ein paar neue abgedrehte sachen es gibt so es gibt

01:51:03.780 --> 01:51:05.960
Sec Zhong

01:51:08.840 --> 01:51:10.800
Wie sehr nische würde ich sagen hier

01:51:13.320 --> 01:51:14.780
Mions braucht also quasi

01:51:14.780 --> 01:51:16.020
so was wie

01:51:16.020 --> 01:51:21.800
Gilbert einmal angelegt wird und dann nur noch raus gelesen wird nie wieder geschrieben wird und dafür halt ein bisschen

01:51:22.240 --> 01:51:24.720
mehr dangersoptimiert

01:51:27.720 --> 01:51:29.720
Muss ich halt auch erst mal lohnen

01:51:33.240 --> 01:51:35.240
asty

01:51:45.240 --> 01:51:47.240
Da gibt es noch ein paar mehr

01:51:48.060 --> 01:51:49.400
Magic

01:51:49.400 --> 01:51:52.120
für cpu interne funktionen also

01:51:53.240 --> 01:51:54.440
irgendwelche

01:51:54.440 --> 01:51:56.440
Vektor matrix

01:51:56.940 --> 01:51:58.500
Multiplikation

01:51:58.500 --> 01:52:00.240
auf der cpu

01:52:00.240 --> 01:52:02.240
Nicht multithreaded sondern

01:52:02.560 --> 01:52:04.560
Wie nennen sich das?

01:52:04.560 --> 01:52:06.560
Diese, geschichte das ist ja nicht

01:52:06.720 --> 01:52:08.180
sind oder sowas

01:52:08.180 --> 01:52:13.120
Das ist ja nicht wirklich multithreaded das. Ist ja quasi multi instruction also in einer

01:52:13.160 --> 01:52:20.480
instruction mehrere inputs multipliziert und sowas, ganz abgedrehter Shit, das reference jetzt für dass man es ordentlich verwenden kann

01:52:20.560 --> 01:52:22.640
Wenn, du eine cpu hast ist unterstützt

01:52:23.800 --> 01:52:28.160
Er wird aber auch langsam eckelig mit programmieren. Ja hier simpt sie veut einig

01:52:28.800 --> 01:52:31.380
Kannst, jetzt avx 512 benutzen

01:52:32.560 --> 01:52:37.020
Ja gut data validation ist abfuckt das was im framework drin ist blutzt keine mehr

01:52:40.960 --> 01:52:44.200
Man kann das finde ich eine ganz coole sache

01:52:44.820 --> 01:52:51.480
Den garbage collector irgendwie nach gucken lassen wie viel memory auf dem system jetzt verfügbar sind für irgendwelche clouds

01:52:52.080 --> 01:52:58.720
Für, irgendwelche cloud szinarien so nach dem motto man hat cloud ressourcen die hoch und runterskalieren

01:52:59.200 --> 01:53:01.700
Und der garbage collector hat vorher nicht mitbekommen

01:53:02.620 --> 01:53:04.920
wenn beispielsweise ressourcen

01:53:04.920 --> 01:53:08.240
beschnitten wurden und jetzt kriege das mite kann man irgendwie so ganz

01:53:08.980 --> 01:53:13.520
Obskur art und weise refreshen lassen was wie viel memory. Im system ist

01:53:14.240 --> 01:53:18.300
Also meinen gehen sie auch eine schönere abspur. Überlegen können als irgendwas interne ist was mal über reflection aufrufen

01:53:18.300 --> 01:53:21.620
Aufrufen musste schon, echt bisschen bisschen. Trinch

01:53:22.580 --> 01:53:24.580
somsp growth generator gibt

01:53:24.820 --> 01:53:25.880
reflection

01:53:25.880 --> 01:53:29.800
improvements, native eot support das haben wir. Schon. Mal in. Zwei drei streams

01:53:31.160 --> 01:53:33.160
Komplett uns angeguckt

01:53:33.440 --> 01:53:39.760
Und ja das funktioniert viel besser noch als in den letzten dotnet version. Es ist immer noch nicht, ganz un Niye

01:53:40.180 --> 01:53:44.880
Wie go wird es wahrscheinlich auch heran weil einer ist der ursprünglichen

01:53:45.040 --> 01:53:50.900
ursprünglichen mit design entscheidungen bei go war er wurde von. Anfang an mit drauf ausgelegt

01:53:52.720 --> 01:53:54.720
Dass man, go apps

01:53:55.240 --> 01:54:02.220
singel single binary kompilieren kann rückwärts kompatibel bis zu linux kernel 2 6 32 oder so

01:54:02.960 --> 01:54:07.320
Ganz so geil ist die. Neue kompiliere technik in dotnet 8 nicht

01:54:07.720 --> 01:54:13.280
Aber sie ist schon deutlich besser als noch bei. Dotnet 6 und, dotnet. Sieben

01:54:15.360 --> 01:54:17.360
ja wir haben auch schon eine

01:54:18.840 --> 01:54:21.600
Anwendungen damit gebaut und dass das funktioniert wirklich ganz gut

01:54:22.080 --> 01:54:29.960
Er muss nur schauen auf welchem. Zielsystem bzw für, welche ziel system und auf welchem system man das ganze kompiliert sodass

01:54:29.960 --> 01:54:33.360
Ist möglichst lange rück DYLL aufwähcH in es

01:54:38.880 --> 01:54:41.120
Die können, eh noch änderungen machen weil es ist ja

01:54:42.880 --> 01:54:44.820
Ja noch preview

01:54:45.240 --> 01:54:46.240
ja

01:54:48.580 --> 01:54:51.900
Ja per performance improvements gibt neue, docker images

01:54:54.260 --> 01:55:00.180
Aber ganz ehrlich in groß und ganz. MALE STARS also die die random funktion und halt hier die

01:55:00.880 --> 01:55:04.980
diese 390 sharp version wir sind allerdings erst bei preview 4

01:55:06.300 --> 01:55:10.140
Da kann vielleicht noch das ein oder andere reinkommen

01:55:11.100 --> 01:55:15.140
weil dort, nicht 8 beziehungsweise ahí sch unaware 12 dass er blueberries

01:55:16.780 --> 01:55:20.420
Das kommt wahrscheinlich erst wieder im oktober oder november raus

01:55:21.560 --> 01:55:25.500
Immer weiß ich gar nicht. Hair Geschehen was fest Talknah November

01:55:26.040 --> 01:55:28.040
Ja

01:55:30.140 --> 01:55:34.980
Also rademit denke Ich. Ja denke, dass wir das wird. Vielleicht noch so ein paar. Kleinigkeiten stableennommen

01:55:36.000 --> 01:55:39.960
Mal, Hand

01:55:40.140 --> 01:55:45.440
Was New in dort net coA 8 es heißt nicht dort net Co8 google heißt nur noch dort net 8

01:55:46.020 --> 01:55:48.100
Weil microsoft gerne leute verwirrt mit derbenahmung

01:55:49.520 --> 01:55:51.520
1 xbox 1 x

01:56:01.260 --> 01:56:05.980
ich

01:56:07.340 --> 01:56:09.840
Warum war das random官ic static was meinte

01:56:10.840 --> 01:56:16.840
1930

01:56:18.140 --> 01:56:23.180
Das gab es. Gab dieses random Schert früher einfach nicht du musstest dass immer selbst anlegen

01:56:23.660 --> 01:56:26.920
wenn du das außerhalb von der schleife angelegt wir es auch kein problem aber

01:56:27.260 --> 01:56:29.060
Viele haben ja damals den fehler immer gemacht

01:56:29.060 --> 01:56:35.200
Um einen NIU random innerhalb von der schleife gemacht und hat es halt mehrfach den gleichen sieht gekriegt und verhalt auch langsamer

01:56:36.540 --> 01:56:39.680
Und du hast die gleichen werte das war halt nie sondern ich

01:56:40.580 --> 01:56:43.060
gut mittlerweile haben sie sehr eh gefixt

01:56:52.020 --> 01:56:56.860
Krass oder dass die xbox world auch schon zehn jahre her ist

01:56:56.860 --> 01:57:14.240
Denkst du es macht sin zum lernen von sich ab best kript umzuschreiben oder kleine moiter

01:57:14.240 --> 01:57:17.560
ja also best kript die umzuschreiben

01:57:17.560 --> 01:57:24.740
wahrscheinlich nicht best kbelievable daseinsberichtigungen für kleine sachen gerade wenn

01:58:55.620 --> 01:59:20.100
ו

01:59:20.100 --> 01:59:23.380
wir gibt es da keine gescheitermonatsübersicht mensch

01:59:24.340 --> 01:59:32.860
also heute habe ich sogar zwei maorn heute morgen und heute abend donners dach linux server davor

01:59:32.860 --> 01:59:38.760
ein bisschen geschwätze abends right guck mal hier beispielsweise kaum die woche dafür aber

01:59:38.760 --> 01:59:45.320
auch irgendwie sonntags zweimal also es ist es ist wirklich random hauptsächlich tatsächlich

01:59:45.740 --> 01:59:56.140
eher abends außer am wochenende da ist es komplett random aber ansonsten eher abends ja ist schwer

01:59:56.140 --> 02:00:04.680
zu sagen immer immer dann wenn es mir danach ist und ich zeit hab und bock hab und ich zu müde bin

02:00:09.280 --> 02:00:14.400
wir haben uns die neuen features angeguckt und ich habe die features eingeteilt in hätte ich

02:00:14.400 --> 02:00:18.280
nicht gebraucht ist ganz okay und hätte es schon immer geben sollen

02:00:25.920 --> 02:00:29.240
ja das gibt es aber das wird jetzt heißt eine lange nicht dass ich es machen würde

02:00:29.240 --> 02:00:37.480
ja dann mache halt PowerShell aber ganz im ernst da würde ich da würde ich lieber meine

02:00:38.380 --> 02:00:43.260
meine dort netd commando sign tools mit der neuen ahead-of-time compilgation zu

02:00:43.260 --> 02:00:48.260
single binaries bauen und auf die server verteilen bevor ich mir PowerShell auf

02:00:48.260 --> 02:00:51.820
allen linux server installiere und dann irgendwie auf meine dann noch eine dot

02:00:51.820 --> 02:00:55.360
net runtime brauche und dann auf meine c sharp d family aus PowerShell

02:00:55.360 --> 02:00:58.160
zugreifen nicht ne das würde ich nicht machen

02:00:59.000 --> 02:00:59.520
äh

02:01:05.660 --> 02:01:10.540
f sharp ist für die funktionalen fifehats

02:01:17.580 --> 02:01:22.340
das ist auch normal also komplexe sachen den bash machen ist übelst der

02:01:22.340 --> 02:01:25.580
abfrack so für so für sachen die maximal sagen

02:01:25.700 --> 02:01:30.680
wenn wir mal so ein zwei seiten lang sind terminal seiten lang sind ist das eigentlich alles

02:01:30.680 --> 02:01:34.900
ganz in ordnung aber danach wird es danach wird's ekel filter also bech

02:01:34.900 --> 02:01:40.820
ist halt ist halt immer noch immer noch gut zu können ja fürs so zum beispiel für

02:01:40.820 --> 02:01:45.940
irgendwelche bill scripts oder sowas ja zum beispiel für sowas hier bild punkt Ephan

02:01:46.680 --> 02:01:54.720
was also nicht mal großartig was macht außer docker-container starten und

02:01:55.280 --> 02:01:56.640
lacked ins binäanderâm

02:01:56.640 --> 02:02:00.640
jahr für so was ist betsch halt sehr ihre isse aber ansonsten wenn's wenn's

02:02:00.640 --> 02:02:05.600
bisschen komplexer wird und wo spätestens schluss ist mit best es

02:02:05.600 --> 02:02:08.960
wenn's ums thema multithreading geht und so was ja du kannst in best

02:02:08.960 --> 02:02:12.420
theoretisch halt auch verschiedene prozesse machen entam ende warten

02:02:12.420 --> 02:02:17.560
und so was aber das wird schon sehr eklig also spätestens da ist halt mit best vorbei

02:02:25.520 --> 02:02:29.600
ja wie gesagt also meine zwei minuten breakdown ist

02:02:29.600 --> 02:02:36.540
primary constructorsanting nicht gebraucht finde ich eigentlich auch keine gute

02:02:36.540 --> 02:02:40.320
entwicklung dass man mehrere varianten für die gleichen sachen

02:02:40.320 --> 02:02:49.800
bei immer mehr feature sind sie scharp einbaut doch also man kann jetzt bei

02:02:49.820 --> 02:02:51.320
ich habe es gar nicht mehr

02:02:51.320 --> 02:02:54.320
mal kurz gucken ob ich alles rückgängig machen kann

02:02:54.320 --> 02:02:58.020
na gut dann moment

02:02:58.020 --> 02:03:00.020
history

02:03:00.040 --> 02:03:04.540
Aha

02:03:04.540 --> 02:03:05.540
debatet

02:03:06.520 --> 02:03:07.520
da sind wir

02:03:08.700 --> 02:03:09.700
So

02:03:09.700 --> 02:03:11.320
ich habe es rückgängig gemacht

02:03:11.320 --> 02:03:16.800
Also man kann jetzt ich zeige es dir mal zum vergleich

02:03:16.880 --> 02:03:23.240
also, wenn du eine klasse angelegt hast früher in C-Sharp

02:03:23.400 --> 02:03:24.920
dann musstest du das so machen

02:03:24.920 --> 02:03:26.920
Tu legst eine klasse an

02:03:26.920 --> 02:03:28.280
hat ein property mit name

02:03:28.280 --> 02:03:36.960
hat ein property, hat ein property ist primes

02:03:38.120 --> 02:03:42.060
So die haben jetzt eine neue feature ausgedacht

02:03:42.060 --> 02:03:45.120
und zwar ist das hier

02:03:45.120 --> 02:03:47.120
dass der brauman übrigens nicht da oben

02:03:47.120 --> 02:03:51.880
ist das hier quasi das gleiche wie hier

02:03:52.460 --> 02:03:55.260
Und so dass man jetzt den constructor nicht mehr hier inline schreiben kann

02:03:55.760 --> 02:03:58.400
dass man den constructor nicht mehr inline schreiben muss

02:03:58.400 --> 02:04:01.240
sondern hier oben an die klasse anschreiben kann

02:04:01.240 --> 02:04:05.280
so als primary default constructor

02:04:06.480 --> 02:04:08.480
da kann man sich den ganzen anderen kram sparen

02:04:08.480 --> 02:04:10.480
sieht auf den ersten blick ganz nice aus

02:04:10.480 --> 02:04:11.700
weil es dann noch schön kurz ist

02:04:11.700 --> 02:04:14.840
aber magic und was ich halt nicht mag ist

02:04:14.840 --> 02:04:20.340
dass es zwei drei wege gibt das gleiche zu machen

02:04:20.340 --> 02:04:21.440
das finde ich doof

02:04:21.600 --> 02:04:23.600
also das ist ein feature das hätte ich nicht gebraucht

02:04:24.620 --> 02:04:26.620
type aliasing ist ganz cool

02:04:26.620 --> 02:04:27.960
das ist sowas wie type def

02:04:28.140 --> 02:04:31.120
so ein bisschen was wie type def aus c jetzt auch in c-sharp

02:04:31.980 --> 02:04:33.980
du kannst quasi zum beispiel wenn du immer

02:04:34.320 --> 02:04:36.320
liste von int anlegst

02:04:36.480 --> 02:04:39.520
kannst du jetzt quasi einen eigenen typ definieren der intlist heißt

02:04:39.520 --> 02:04:40.620
und dann macht er das immer

02:04:41.060 --> 02:04:42.940
ja und default values für lumber expressions

02:04:42.940 --> 02:04:44.020
ist relativ selbst erklärend

02:04:44.020 --> 02:04:45.900
man kann jetzt bei anonymous funktionen auch

02:04:46.260 --> 02:04:48.260
die faultwerte angeben falls parameter

02:04:48.260 --> 02:04:49.520
nicht gesetzt sind

02:04:50.560 --> 02:04:51.060
also

02:04:51.620 --> 02:04:53.620
hätte ich nicht gebraucht finde ich auch nicht sehntvoll

02:04:56.020 --> 02:04:58.300
kann man benutzen ist okay und das hätte ich schon ewig geben müssen

02:04:59.760 --> 02:05:03.420
das sind meine zwei minuten breakdown

02:05:06.880 --> 02:05:08.880
falls du überhaupt noch da bist

02:05:09.040 --> 02:05:11.040
ah doch ja nice

02:05:11.520 --> 02:05:15.020
und dann haben wir uns jetzt ein paar framework funktionen angeguckt

02:05:18.380 --> 02:05:20.380
und da gibt es also das erwähnenswerte

02:05:20.640 --> 02:05:22.380
absolut auch von dir

02:05:25.660 --> 02:05:27.960
erwähnenswerte sind tatsächlich neue funktionen

02:05:28.240 --> 02:05:32.620
für random nämlich dass man jetzt random items aus einem

02:05:32.620 --> 02:05:35.500
arre picken lassen kann oder ein arre random isen lassen kann

02:05:36.320 --> 02:05:40.320
in mt standards library ok

02:05:40.380 --> 02:05:42.860
konnte man vorher relativ einfach selbst bauen aber warum

02:05:42.860 --> 02:05:47.500
selbstfahren wenn man es auch im framework dabei haben kann

02:05:50.540 --> 02:05:52.940
Sowie im soul

02:05:58.940 --> 02:06:02.480
ist es eine idee ob es mit view auch sowas wie react native ja

02:06:02.480 --> 02:06:05.840
gibt es es gibt äh wir is das bei view

02:06:07.300 --> 02:06:09.520
ach moment react native sorry

02:06:09.660 --> 02:06:14.100
ich hab mich vertan ich dachte du meinst sowas wie next oder nookst

02:06:14.100 --> 02:06:16.640
wie heißt das bei view

02:06:17.000 --> 02:06:21.020
ja aber es gibt ich weiß nicht wie es heißt ja es gibt auch sowas wie fiery

02:06:21.020 --> 02:06:26.360
act native für für view habe ich schon hab mich schon gesehen auf github das

02:06:26.360 --> 02:06:31.160
ist irgendwie ein framework das unterstützt noch mehr als nur viewed

02:06:31.160 --> 02:06:35.240
kannst auch damit an react machen oder oder

02:06:35.240 --> 02:06:38.660
glaube sogar dass welt geht auch

02:06:38.860 --> 02:06:48.980
ja also das funktioniert auf jeden fall ich kann ja allerdings nicht sagen wie es

02:06:48.980 --> 02:06:50.500
genau heißt was ich hab nie verwendet habe

02:06:50.500 --> 02:06:58.300
oder fliegt über meinen urlaub mal ein praktikum in einem betrieb zu machen ja

02:06:58.300 --> 02:07:01.780
das warum im urlaubt du musst für deine ausbildung in praktikum machen

02:07:02.180 --> 02:07:09.100
da ich bisher auch nie was praktisch umgesetzt habe die erfahr mit praktikanten

02:07:09.100 --> 02:07:13.580
also ja du kannst natürlich praktikum machen aber du musst doch in ein

02:07:13.580 --> 02:07:18.300
praktikum in einer ausbildung machen oder dass die überhaupt abschließen kannst also deine

02:07:18.300 --> 02:07:21.380
umschulung die umschulung geht auch nur wenn man am ende in praktikum macht von irgendwie

02:07:21.380 --> 02:07:25.900
in einem halben oder 3 vierteljahr macht auch lieber in den praktikumsplatz dafür klar

02:07:26.880 --> 02:07:36.440
natürlich sicherlich nicht verkehrt sich vielleicht trotzdem also 2 3 wochen was anzugucken

02:07:36.440 --> 02:07:42.060
und dann mit denen auch gleich was auszumachen wie sieht es aus mit einem praktikum wenn du

02:07:42.060 --> 02:07:48.980
dein praktikum an auch wirklich machen muss aber ist auch so oder also du musst du musst

02:07:49.120 --> 02:07:52.580
doch auch für die umschulungen im praktikum machen soweit ich weiß

02:07:52.580 --> 02:08:04.540
dass musste das musste schon bisschen unterscheiden wenn du einen

02:08:04.540 --> 02:08:07.960
umschulungspraktikant für die drei vierteljahre kriegste kannst du schon

02:08:07.960 --> 02:08:11.220
als alsカンタ betrachten ist es ja im endeffekt auch macht ihr auch gerade

02:08:11.220 --> 02:08:16.760
eine ausbildung hat die ausbildung für euch vielleicht nicht angefangen aber das will ich

02:09:16.840 --> 02:09:22.920
von drei zwei drei viertel meistens er

02:09:28.920 --> 02:09:33.540
und ich weiß dass ich viele schwer tun einen praktikums platz zu finden was ich irgendwie

02:09:33.540 --> 02:09:37.500
auch verstehen kann weil betriebe sagen halt auch warum soll ich warum soll ich in

02:09:37.500 --> 02:09:40.040
elf monate da in den umschüler hinsetzen wenn ich mir einfach an

02:09:40.040 --> 02:09:44.120
adsubia einstellen kann denn komplett quasi ausbilden kann so wie

02:09:45.080 --> 02:09:49.920
Das für. Richtig halte und ich dann mit dem am endeffekt auch was anfangen kann. Der.Anderen seite ganz ehrlich

02:09:50.280 --> 02:09:56.420
die sollen aber alle auch gar nicht so wählericht als meine persönliche meinung jetzt ja die sollen aber alle nicht so nicht so wählerich

02:09:56.420 --> 02:09:57.760
sein weil

02:09:57.760 --> 02:10:01.540
alle suchen sie nach fachkräften aber keiner möchte dann auch mal sowas wie

02:10:01.640 --> 02:10:09.280
In umschulungspraktikum von elfen monaten eben anbieten was sich ja irgendwie bei es du kannst nicht sagen ich will fachkräfte haben aber dich selbst an der

02:10:09.280 --> 02:10:10.020
ausbildung

02:10:10.020 --> 02:10:13.080
oder den umschulen von fachkräften nicht beteiligen das ist halt Shake

02:10:13.120 --> 02:10:18.240
Das beißt sich irgendwie kann es nicht welche haben wollen aber nicht dafür sorgen dass es welche gibt

02:10:19.120 --> 02:10:23.320
Also dass sollen sich certaines nicht so anstellen soll. Das machen sollen das ruhig machen

02:10:26.000 --> 02:10:28.000
50 pro stunde

02:10:28.120 --> 02:10:32.620
Es überhaupt gibt es drei euro 50 die stunde jemand arbeiten zu lassen

02:10:35.060 --> 02:10:37.120
Dafür kann es ja nicht mal hin und zurück zur Arbeit fahren

02:10:44.080 --> 02:10:48.460
Ja dann müssen sie sich, dann müssten sie sich nicht wundern, wenn sie keine bekommen

02:10:50.360 --> 02:10:54.840
Fachkräftemangel ist eh gelungen du meinst gelogen wahrscheinlich vermut ich jetzt mal wenn ich das so lese

02:10:55.760 --> 02:10:57.780
fachkräftemangel ist gelogen

02:10:58.000 --> 02:11:00.000
ja und nein, also

02:11:00.420 --> 02:11:02.420
Fachkräftemangel in dem sinne

02:11:02.880 --> 02:11:08.520
Jeder der eine ausschreibung macht hier ich suche ein x y it Experten wie auch immer

02:11:09.520 --> 02:11:12.600
dass der einen bekommt ja das ist nicht mehr so

02:11:13.080 --> 02:11:18.960
also aus der sicht ist es schon ein mangel, weil nicht jeder der sagt ich hätte gerne einen auch jemand bekommt

02:11:20.720 --> 02:11:25.960
Auf der anderen seite mangel in Form von wenn die sich mühe geben und eine gute

02:11:26.760 --> 02:11:31.160
gute kondition bieten was gehalt angeht was home office angeht was

02:11:33.760 --> 02:11:38.400
Ja, dass unsere sulla tercer reality of life. Geschichten angeht das ist eben in guteninki

02:11:39.300 --> 02:11:41.440
Die bekommen auch welche also

02:11:42.240 --> 02:11:46.280
das ja aus der einen sicht stimmt und ne aus der anderen sicht stimmt auch wieder nett

02:11:58.600 --> 02:12:04.800
Ja deswegen, das denke ich auch, deswegen sollten sich da vielleicht mal ein paar mehr betriebe zusammen reißen, auch mal elf monate

02:12:05.040 --> 02:12:10.020
um schulpratvoll um schuller um schulungspraktikum. Ermöglichen

02:12:14.680 --> 02:12:16.680
Ja, dann sind sie. Selber schuld

02:12:23.600 --> 02:12:29.880
Ja so kann man es auch sehen es gibt zu wenige um alle stellen zu besetzen jahre aus dem gesichtspunkt ist es. Ein. Mangel

02:12:30.560 --> 02:12:36.620
Und tja wenn sich dann auch vieler auch noch so blöd anstellen kriegen halt noch mehr niemand

02:12:41.420 --> 02:12:43.420
Ja ist leider selten

02:12:43.960 --> 02:12:47.640
Wobei ich jetzt schon immer öfters gesehen hab in letzter Zeit dass zumindest mal

02:12:48.440 --> 02:12:51.340
Gehaltsspanne so ungefähr drin steht

02:12:52.600 --> 02:12:55.440
Es sei denn es geht euch so wie sei mein Ehemaligenarbeitskollege

02:12:55.660 --> 02:12:57.120
Ehemaligenarbeitskollege

02:12:57.120 --> 02:12:59.880
das hab ich ja schon erzählt deswegen nur noch mal ganz kurz, Recycle Story. gezahlte

02:12:59.880 --> 02:13:01.820
den haben sie ja richtig verarscht!

02:13:02.220 --> 02:13:04.220
der hat sich beworben

02:13:04.380 --> 02:13:08.500
als Senior DevOps probably engineer oder lief als sowas

02:13:08.500 --> 02:13:10.200
und die haben imDonald shortly gesagt

02:13:10.260 --> 02:13:12.260
Gehaltsspanne 95.000 bis 100.000

02:13:12.880 --> 02:13:12.880


02:13:12.880 --> 02:13:15.320
ST are cool nice

02:13:15.320 --> 02:13:22.760
Hat sich beworben hat, mit, denen, auch Vorstellungsgespräche gemacht hat mit denen. Sogar so eine hat, wie heißt das so einen so einen

02:13:23.480 --> 02:13:25.300
Übungsübungen

02:13:25.600 --> 02:13:30.620
Gespräch gemacht. So wie würden sie jetzt reagieren wenn eine Meldung über Systemausfall

02:13:31.040 --> 02:13:37.540
Rein kommt und so was in der richtung und am Endeffekt wenn er, fertig war mit diesen ganzen mit Vorstellungsgesprächen mit

02:13:37.700 --> 02:13:41.100
Übungs sachen hat ein paar Wochen gedauert hat sie über paar Wochen hingezogen

02:13:43.480 --> 02:13:45.480
und

02:13:47.560 --> 02:13:52.700
Danach hat er gesagt ja gut und wie war es so und was was sagt ihr und alle waren sich einig

02:13:53.340 --> 02:13:59.960
Ja also er würde das gerne machen und die wollen ihn auch haben und im endeffekt als es dann um den vertrag ging

02:13:59.960 --> 02:14:01.540
haben die gesagt

02:14:01.540 --> 02:14:08.140
Budget das budget hat leider doch keine senior stelle mehr hergegeben, wir können ihn jetzgang 75k im jahr bieten

02:14:09.100 --> 02:14:11.100
Und dann hat er halt einfach gesagt

02:14:13.980 --> 02:14:15.980
Und süß

02:14:16.160 --> 02:14:18.160
Er hat, es auch instant abgelehnt

02:14:18.740 --> 02:14:21.120
Verarschen kann ich mich, selbst alle ihr könnt

02:14:21.120 --> 02:14:25.400
Mich eine stelle ausschreiben von 95 bis 105, dann machst du den bewerbungsprozess

02:14:25.720 --> 02:14:29.540
Durch bist dir einig und dann sagen sie auch nie gibt nur 75

02:14:29.740 --> 02:14:31.640
Obwohl vorher immer

02:14:31.640 --> 02:14:36.580
von ner anderen gehalts spanne geredet wurde, da hat er auch gesagt ihr könnt mich mal also

02:14:37.280 --> 02:14:39.960
Ich weiß gar nicht was denken die sich. Denn eigentlich

02:14:41.100 --> 02:14:45.380
Was was denken die sich ich, meint geht die ernsthaft davon aus

02:14:45.980 --> 02:14:48.500
dass irgendjemand sagt ach ja

02:14:49.120 --> 02:14:51.760
Mir hats aber, so gut gefallen, bei euch

02:14:52.420 --> 02:14:54.880
20k weniger ist auch, okay

02:14:55.240 --> 02:14:59.400
Also andere was denken die sich, vor allem was ist denn das für. En start

02:14:59.400 --> 02:15:05.400
was für nen start, ist denn das schonmal, du wirst noch verarscht bevor du überhaupt unterschrieben hast

02:15:05.400 --> 02:15:08.400
Normalerweise wirst du erst verarscht nachdem du unterschrieben warst

02:15:09.560 --> 02:15:14.420
Keil ahndung, die sind echt komplett lost gewesen, dass die niemand finden, wundert mich nicht

02:15:16.200 --> 02:15:17.760
T.Rex

02:15:22.780 --> 02:15:25.360
Das ist blödsinn du kannst gar nicht alles wissen

02:15:28.340 --> 02:15:30.680
Und wenn die halt nur jemand wollen

02:15:30.860 --> 02:15:34.320
mit einer ganz speziellen Kenntnis, dann ist das ihr Ding das finden sie halt nothing

02:15:34.560 --> 02:15:39.100
Ja es ist also bei manchen sachen, ist es sicherlich sinnvoll

02:15:39.700 --> 02:15:43.640
Aber alle Sachen ist es auch wichtig, dass du jemand hast, der ahndung hat von

02:15:44.020 --> 02:15:47.920
Ich sache mal ahndung von technik ja ahndung von it themen hat

02:15:48.280 --> 02:15:54.000
und grob genug bescheid weiß um sich schnell einarbeiten zu können das ist bottom bei den meisten sachen eigentlich sogar wichtiger

02:15:54.160 --> 02:16:00.080
Als jemand der so eine ganz spezielle fachkenntnis hat aber wenn sie es haben will sollen es halt sollen es halt

02:16:00.780 --> 02:16:02.780
suchen und nicht finden

02:16:03.240 --> 02:16:05.240
orial

02:16:13.100 --> 02:16:18.780
Ja mache das ist das beste was du machen kannst ich habe es auch gemerkt job gewechselt insit mehr geld

02:16:26.080 --> 02:16:28.080
Atter auch

02:16:28.600 --> 02:16:30.600
Ge mauvais

02:16:32.080 --> 02:16:33.780
Wir limitation

02:16:33.780 --> 02:16:35.980
Burger King

02:16:35.980 --> 02:16:37.820
Birdie

02:16:37.820 --> 02:16:39.160
die

02:16:39.160 --> 02:16:41.140
K Due washes

02:16:41.140 --> 02:16:42.600
Des

02:16:42.600 --> 02:16:44.120
collaborative

02:16:44.120 --> 02:16:46.120
dasのは

02:16:47.060 --> 02:16:49.060
weary

02:16:50.540 --> 02:16:52.540
Das belongs

02:16:54.200 --> 02:16:58.040
Da müsste ich mir wirklich was was realistisches aus den fingern Sauer ich kann jetzt

02:16:58.120 --> 02:16:59.500
ja nicht komplett

02:16:59.500 --> 02:17:05.160
Sie tauschen auf auf auf kunuu, weil ich meine ich war immerhin über zehn. Jahre, da. Kann, er nicht

02:17:05.160 --> 02:17:07.520
alles scheiße gewesen sein. Man sitten sie dem jahre, da geblieben

02:17:09.000 --> 02:17:12.120
ich muss sicher sagen dass ich muss. Als schon. Sagen dass die

02:17:14.320 --> 02:17:16.320
realität

02:17:16.320 --> 02:17:19.140
Und die wunschvorstellungen da recht weit auseinanderging

02:17:20.900 --> 02:17:23.040
Also die die, eigen wahrnehmung

02:17:24.900 --> 02:17:27.680
oder, so die eigene ein bildung wie toll man. Ist

02:17:28.160 --> 02:17:30.160
Hat sich nicht so. Sehr mit der realität gedeckt

02:17:34.420 --> 02:17:36.800
In allen themen würde ich jetzt mal nicht. So unterschreiben

02:17:38.200 --> 02:17:40.340
Aber ich sage, mal so du kannst dich

02:17:40.840 --> 02:17:46.840
In einem breiten spektrum relativ schnell einarbeiten wenn du halt ein, bisschen ahnung von den von den. Themengebieten

02:17:46.840 --> 02:17:50.200
An sich. Hast ja also wenn du beispielsweise relativ viel

02:17:51.240 --> 02:17:55.220
edgeers-cloud geschichten gemacht dass kommt auch relativ schnell in google und aws reihen umgedreht

02:17:55.340 --> 02:17:56.480
nicht nur

02:17:56.480 --> 02:17:58.520
wenn, du

02:17:58.520 --> 02:18:00.500
bischen bisschen ahnung von

02:18:00.980 --> 02:18:06.500
Keine ahnung wenn du ahnung hast von um bund dies jahren kommt auch gut in red hat und und sonstige sachen rein

02:18:06.720 --> 02:18:10.940
Ja das ist das ist schon kein ding es gibt allerdings ist gibt allerdings sicherlich

02:18:11.300 --> 02:18:18.000
spezialfälle wo das nicht so ist ich ich würde mal sagen. So sape und konsorten magiser andere sein

02:18:18.860 --> 02:18:23.180
Wobei ich da glücklicherweise bisher einen großen bohren drum gemacht habe und auch weiterhin

02:18:23.680 --> 02:18:25.680
Machen werde

02:18:25.780 --> 02:18:29.480
Genau, so wie ich um windows bisher großen bogen gemacht habe und das werde ich auch weiterhin

02:18:32.100 --> 02:18:34.740
Bei, mir im vorstellungsgespräch haben sie mich gefragt

02:18:35.360 --> 02:18:41.400
Herr max dass das war so ein apUnaler trick trick personaller frage irgendwie

02:18:42.380 --> 02:18:44.380
haben sie mich gefragt

02:18:44.780 --> 02:18:50.780
was müssten wir machen dass sie so richtig ärgert, habe ich darauf geantwortet windows administrieren

02:18:53.180 --> 02:18:57.620
War eine ehrlich antwort ja, das würde mich ärgern. Und das würde ich auch nicht lange machen

02:19:00.420 --> 02:19:03.940
Weil wir sind die archmirror jetzt aktuell ok, soll ich noch mal gucken

02:19:07.580 --> 02:19:10.240
Hey, die archmirror sind aktuell

02:19:10.460 --> 02:19:12.460
Yes

02:19:20.840 --> 02:19:29.260
Windows als Anwendungen hier desktop betriebssystem zu benutzen oder Server darauf zu betreiben sind doch zwei komplett unterschiedliche Paar schuhe

02:19:32.420 --> 02:19:34.420
Chat. Ich kannst doch nicht vergleichen

02:19:35.700 --> 02:19:37.960
Ich würde im Leben keine Windows Server betreuen wollen

02:19:38.200 --> 02:19:42.560
Ich meine 5 Windows schon scheiße genug jetzt weil auf dem desktop hier

02:19:45.100 --> 02:19:46.980
Vielleicht

02:19:47.920 --> 02:19:52.720
Vielleicht ist das vielleicht ist das wirklich der Hintergrund Aber ganz im ernst

02:19:53.720 --> 02:19:59.940
Wenn dass es echt der Hintergrund sein sollte dann würde ich Ja noch weniger dort arbeiten wollen

02:20:01.880 --> 02:20:05.380
Also wenn du schon Beschissen Wirst bevor du unterschrieben hast es irgendwas verkehrt

02:20:07.960 --> 02:20:09.960
aber

02:20:22.760 --> 02:20:25.560
Bei mir bei mir ist das mit einarbeiten ähnlich

02:20:25.740 --> 02:20:31.300
Also ich denke auch dass es bestimmt eine halbes Jahr oder Drei viertel Jahr oder erst Nächstes Jahr wird ... bis ich dort

02:20:32.700 --> 02:20:37.760
Wirklich so weit den Durchblick hab dass wenn ich mal morgens alleine da bin was kaputt geht

02:20:38.520 --> 02:20:55.240
Ich, dass komplett alleine fixen kann seien es war super simples ja

02:20:55.240 --> 02:20:56.140
das dauert ne weile wenn ich genug den Durchblick hab

02:21:08.220 --> 02:21:20.760
ja also Fahrtkostenerstattung sollte schon seien

02:21:20.760 --> 02:21:25.440
gerade wenn es ein bisschen weiter weg ist, Du kannst nicht von jemanden erwarten dass der

02:21:25.440 --> 02:21:29.800
dahin fährt und vielleicht irgendwie noch, keine Ahnung, mit Hin- und Rückfahrt 70- 80 Euro

02:21:29.980 --> 02:21:35.220
Zugticket kosten ausgeben mittlerweile gibt es Deutschland Ticket aus gibt für

02:21:35.220 --> 02:21:39.500
irgendwie so ne zu random sache wir haben jetzt doch kein Bock mehr

02:21:39.500 --> 02:21:42.100
also ganz ehrlich Fahrtkostenerstattung sollte es eigentlich immer geben automatisch

02:21:44.180 --> 02:21:48.460
Aber es ist nicht so

02:21:59.800 --> 02:22:11.000
Im Oppo

02:22:11.100 --> 02:22:16.300
Schonmal Fedora Server nie

02:22:17.260 --> 02:22:20.980
Weiss gar nicht ob irgendjemand Fedora als Server Betriebssystem benutzt

02:22:20.980 --> 02:22:26.320
Desktop ja aber ich bin kein fan Sakie von Fedora und auch lustigerweise von

02:23:26.540 --> 02:23:42.980
und ich wüsste nicht was ich groß vermissen würde unter Ubuntu

02:23:47.100 --> 02:23:52.120
Mein alter Arbeitgeber weiß ich nicht ob die so was gemacht haben aber ich wüsst ihnen zutrauen

02:24:22.540 --> 02:24:33.200
Lpa an Linux und dann hast du DNS Auflösungsprobleme

02:24:33.200 --> 02:24:42.680
aber Lpa an linux ist schon okay, wenn es besonders kleine Container Images sein müssen

02:25:22.120 --> 02:25:42.120
Lpa an linux ist schon okay, wenn es besonders kleine Container Images sein müssen


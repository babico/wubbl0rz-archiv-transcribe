Das war's für heute.
Ich hoffe, dass euch das Video gefallen hat.
Vielen Dank für's Zuschauen.
Bis zum nächsten Mal.
Ich hoffe, dass euch das Video gefallen hat.
Bis zum nächsten Mal.
Guckt euch mal dieses Kack Windows Feature an, Leute.
Ich will einfach mein Emote hier hinschieben.
Das geht nicht.
Ich darf mein Emote hier nicht hinschieben.
Windows ist der Meinung, du musst das maximieren, wenn du das in diese Ecke schiebst.
Alter, diese Features fucking nicht so ab, man.
Das kann man bestimmt irgendwie ausschalten, aber im Prinzip, wisst ihr, das ist der Grund.
Ohne Scheiß.
Das ist der Grund, warum ich unter Linux i3 verwende.
i3 ist einfach im Hintergrund und macht nichts.
Aber nein, Windows ist der Meinung.
Ich möchte das sicherlich maximieren jetzt hier, so einen floating Window mit Emotes
drinne.
Ganz genau, das will ich maximieren.
Das ist das Allerwichtigste, was ich machen will, Windows.
Ich will das unbedingt.
Wichtig.
Ich verstehe das echt nicht.
Wie man es einfach immer weiter verschlimmbessern kann.
So gut gedacht, aber der Umsetzung total mies.
Oh, der Stream hat geleckt.
Vodafone, was ist da los?
Postchamp.
Ah, okay, nein, nein, nein.
Nix will das.
Nix will das.
Ganz kurz hier anscheinend.
Ja, was denn?
Die bashen sich selbst.
Ich kann doch nichts dafür, dass das so kacke ist.
Jetzt auf der anderen Seite.
Hier ist es genauso.
Leute, ich will das Ding nicht maximieren.
Wie kann man das ausschalten?
Okay, das müssen wir jetzt mal kurz in Erfahrung bringen.
Kann man das?
Kann man das ausschalten?
Wie nennt sich das überhaupt?
Disable Windows Docking Feature oder sowas.
Warum ich nicht Links installiere?
Weil es noch genug Sachen gibt, die ich auf Windows machen will, die sich am besten unter
Windows machen lassen.
Für den Fall der Fälle.
Für alles andere.
Habe ich hier meine Linux vor allem im Fullscreen, dann ist alles gut.
So, wie geht das?
Snap Assist nennt sich das also, okay.
Also, wo muss ich hin?
Multitask.
Snap Windows Settings, okay.
Snap Windows, off.
Shit.
So.
Und jetzt?
Gucken, ob das immer noch...
Ah, jetzt ist gut.
Jetzt kann ich meine Emotes wenigstens wieder ordentlich.
Jetzt kann ich auch am Bildschirmrad raus-pause-champen, wenn ich will.
Nicht, dass ich das jetzt irgendwie oft brauchen würde, aber jetzt geht jetzt wenigstens.
Also, absolutes sinnloses Feature, man.
Übrigens, das wäre auch noch ein cooles Feature, was ich einbauen könnte, dass ich hier das
Emote einfach mirronen könnte, wenn ich hier rüber ziehe.
Gut.
Microsoft Zeug, man.
Aber wo wir gerade dabei sind, ich habe mal kurz einen Package-Update, weil wir verwenden
ja selbstverständlich Arch Linux, by the way.
Hier, Arch Linux.
Einzigware.
Superior Distribution.
Motge.
Motge, wie nennt sich das?
Wie nennt sich das, wenn man monatlich was überweist?
Zahlungsauftrag oder sowas.
Motge im Monatsgehalt.
Dauerauftrag.
Dauerauftrag.
Genau.
So, wir haben natürlich Arch Linux, weil einzigware Distribution.
Das ist ein Rolling Release, das heißt, wir müssen das ab und zu mal updaten.
Dann machen wir das jetzt mal, bevor der Stream bricht.
Das ist immer das, wenn es hier nichts zum updaten gibt über User-Repos.
Aber anscheinend gibt es nichts, gibt es nichts zu updaten.
Das, das, das.
Okay, wir rebooten mal.
Ich glaube, da war ein Kernel-Update dabei.
Oder war ein Kernel-Update dabei?
Nö.
War kein Kernel-Update dabei.
Aber scheiße, wir rebooten trotzdem.
Reboot schadet immer nicht.
Ja, mein Beileid.
Ich würde durchdrehen, wenn ich täglich Windows-Zeug machen muss.
Also ohne Scheiß, ich könnte es nicht lange machen.
Ich weiß noch, wir haben mal in einem Stream, und das war ganz furchtbar grausam.
Wir haben mal in einem Stream Windows Server 2018 oder?
Was ist das aktuelle Windows Server?
Windows Server 2020 oder irgendwie sowas in der Richtung?
Moment, ich kann es euch sagen.
archive.woblords.tv
Windows Server.
Windows Server 2022 haben wir uns vor einem Jahr angeguckt.
Und es war extrem abartig.
Guck mal, und 2019 haben wir auch schon, haben wir das auch schon mal gemacht.
Das ist, das war ganz, es war beides, es war beides.
Extrem schlimm.
Das war ganz abartig.
Da haben wir.
Ey, wenn ich, wenn ich das hier schon sehe, man.
Das Server, das Server Manager Dashboard, da kriege ich schon, da kriege ich schon Zustände.
Das war abartig.
Also da würde ich wirklich Anfälle kriegen, wenn ich das das ganze,
das ganze Jahr jeden Tag machen müsste, Windows Zeug.
So.
Kiste neu gestartet, haben wir alle aktuellen.
Das Notizprogramm ist ganz essentiell hier, das brauche ich unbedingt.
Die einzige Notiz, die da drin steht, ist das, das, das, das, das, das, das.
Gut, dass wir das mal geklärt haben.
Wir sehen, wie nice hier oben die Notification ausgefadet ist.
Hoggers fading.
Hopp, hopp, hopp, hopp, hopp, hopp.
So.
Nice.
An Titel 2, 1, don't save, don't save.
Gut, sehr schön.
Können wir weitermachen gleich.
Welches ist das? Welches ist was?
Endeavor OS habe ich letztens ausprobiert.
Ich war nicht so extrem überzeugt davon, muss ich ehrlich sagen.
KDE wirkte tatsächlich noch am meisten aus einem Guss.
Da bin ich so richtig überzeugt.
Welches OS benutzt du?
Ich benutze Windows und Archlinux.
By the way, selbstverständlich.
Ich meine, gibt es noch was anderes als Archlinux?
Vielleicht Gentoo oder Gentoo, wie das die coolen Leute sagen.
Aber ansonsten, alle anderen Sachen gibt es ja nicht.
Die sind ja einfach inferior zu Archlinux.
Archlinux beste und das Wichtigste ist.
Ja, da kann ich mich noch dran erinnern, genau.
Das Wichtigste ist natürlich, dass man jedem auch erzählt, dass man Archlinux verwendet.
Man kann das nicht einfach nur benutzen.
Das ist ein bisschen wie mit dem Veganerwitz.
Wie bekommst du raus, ob jemand Veganer ist?
Gar nicht, er erzählt dir.
So ist das auch bei Archlinux-Usern oder auch bei Gentoo-Usern.
Du musst dir nicht fragen, was die benutzen, die erzählen es dir schon laufend.
Ich habe jahrelang Manjaro verwendet.
Die Musik, die willst du aber jetzt schon wissen, oder?
Vielleicht etwas zu energisch, für das das eigentlich gar nichts Großartiges passiert.
Rise and shine, early morning music.
Hauptsache, Hauptsache ist es relaxing.
Ja, das ist gut.
Das ist schon fast ein bisschen.
Was ein bisschen zu relaxing ist, da schlafen wir ja ein bei.
Aber okay.
Wie gesagt, ich habe Manjaro richtig lange verwendet.
Bestimmt drei, vier Jahre fast.
Aber mittlerweile bin ich schon jetzt eine Weile bei plain Archlinux.
Und mit dem Installer muss ich sagen, hat Manjaro für mich auch so ein bisschen die Daseinsberechtigung verloren.
Ich sehe keinen Sinn da drinnen, warum ich Manjaro verwenden sollte anstatt Archlinux,
seit es diesen Easy Installer gibt.
Was steht denn heute auf dem Plan?
Wir machen unsere Browser Extension, wobei Browser Extension ist jetzt ein bisschen zu viel gesagt.
Ich sage mal unsere Browser Extension weiter.
Das heißt, es wird JavaScript Zeug gebastelt, was schon mal ganz eklig sein wird.
Wieder.
Das Notizprogramm.
Warum sehe ich nicht, dass du das gequotet hast in dem Chat?
Das verstehe ich nicht.
Bei mir auf dem Vorschau Bildschirm sehe ich es, hier sehe ich es nicht.
Okay, also das Notizprogramm, was ich verwende, ist das hier.
Das da.
Findest du GitHub?
Das da.
Hier.
Guck.
Fast nur 35.000 Sterne.
Leider Electron, aber was willst du sonst machen?
Der hauptsächliche Grund, warum ich das verwende, liegt darin, weil es das einzige Notizprogramm ist,
was ich kenne, dass es für, lasst mich ausreden, bevor ihr irgendwas anderes schreibt.
Ihr wisst nämlich auch gar nicht, was kommt, weil ich weiß, dass die Leute jetzt gleich wiederkommen.
Aber Obsidian, Obsidian beste.
Wartet mal ab, ganz ruhig.
Also, das ist das einzige Notizprogramm, was ich kenne.
Also Open Source Notizprogramm und was man auch selbst betreiben und sunken kann.
Was Multi- und Cross-Plattform ist.
Also sprich, was Windows, Linux, Mac, iOS und Android unterstützt.
Und was die jeweilige, auch wenn die Mobile Apps schon ein bisschen Liebe gebrauchen könnten,
aber die funktionieren ganz gut.
Und was das einzige, die einzige Plattform ist, die ich kenne,
die in diesem Zusammenhang auch Notifications auf allen Plattformen unterstützt.
Also ich kann hier drinnen Notizen verwalten, To-Do-Listen verwalten
und auch auf die To-Do-Reminder setzen.
Und das halt Cross-Plattform.
Sodass es unter Mac, Linux, Windows, iOS, ohne Android funktioniert
und die jeweiligen System-Notifications benutzt.
Das kann kein anderes Programm.
Und ich finde das wichtig, dass ich ab und zu bei manchen To-Do's,
ich benutze das nicht so oft, aber ich benutze das schon ab und zu mal,
dass ich bei manchen To-Do's auch mal eine Erinnerung dran schreiben kann.
Zum Beispiel, was ich ganz gerne mache, ist Folgendes.
Ich habe einen neuen Ausweis beantragt, weil mein Alter abgelaufen ist.
So und jetzt habe ich einen To-Do, habe ich einen To-Do reingeschrieben,
neuen Ausweis beantragen bzw. jetzt einen To-Do neuen Ausweis abholen.
Da habe ich jetzt mal eine Notification dran gemacht für Montag.
Hier, ich weiß allerdings noch gar nicht, ob der Montags wirklich da ist.
Also Kalendereintrag ist da gar nicht so sinnvoll,
weil ich kann nicht gleich hinschreiben, Montag 12 Uhr Ausweis abholen,
wenn ich noch gar nicht weiß, ob der Montag überhaupt um 12 Uhr da ist.
Aber in einem To-Do List ist es tatsächlich ganz praktisch,
dass man ab und zu mal dran erinnert wird.
So nach dem Motto, hä, Moment, der ist immer noch nicht da, der Ausweis,
da musst du da vielleicht mal anrufen.
Wisst ihr sowas in der Richtung?
Also Notifications bei To-Do dabei sind gar nicht so blöd.
Ja, aber Obsidian kann leider keine Native Notifications auf Mobile Plattform.
Gibt es schon seit Ewigkeiten, gibt es einen Feature Request, aber...
Aber das interessiert sie nicht.
Wisst ihr, gibt es nicht.
Ja, es ist leider, es ist halt, es ist halt ein bisschen doof.
Aber was willst du machen?
Und das ist mir, glaube ich, ein bisschen zu entspannend.
Ich glaube, unsere Standard-Playlist,
unsere Standard-Brockers-Playlist muss wieder ran.
Die geht eigentlich immer.
Ich weiß schon, dass ich die auf 80% stellen muss, weil manche sonst zu laut wird.
Exzellent.
Die Fault-Brockers-Playlist.
Wie kann ich Smooth-Zoom hinbekommen?
Ich weiß noch nicht mal, was das sein soll.
Beim Browser?
Zoomen?
Was? Wie?
Keine Ahnung.
Ach, mit Touchpad.
Du meinst, dass du so mit Fingergeste reinzoomen kannst?
Das ist doch so eine reine Mobile-Geschichte, oder?
Also, ich würde mich nicht darauf verlassen, dass das unter Linux möglich ist.
Touch-Support unter Linux ist so nicht wirklich vorhanden.
Das kannst du eigentlich klicken.
Doch, doch, das geht.
Seriously, das funktioniert?
Okay, dann habe ich nichts gesagt.
Ich frage mich nur, wie das gescheit funktionieren soll.
Das müsste ja, das müsste ja theoretisch der Browser unterstützen, oder?
Und nicht irgendwie Window-Manager und sowas.
Okay, ich habe nichts gesagt, die Leute sind viel schlauer als ich.
Freifett.
Ihr wisst es besser.
Und in dem Fall muss ich tatsächlich sagen, da weiß tatsächlich der Chat wohl, wie es aussieht, besser.
Kommt auch vor.
Der Chat würde jetzt natürlich sagen, dass er es immer besser weiß, aber wir wissen auch alle insgeheim, dass das nicht so ist.
Na ja.
Oh ja, wo habe ich?
Moment, ich muss mein Access-Point erstmal einschalten, bevor wir anfangen können.
Leute, guckt euch mal eine Runde Fische an.
Oder bunte Fische.
Wo ist denn, wo ist das Netzteil?
Hier.
Kann man den Access-Point einschalten, sonst wird mit Access-Point gebastelt, heute nichts, wenn der Access-Point nicht eingeschaltet ist.
Pogu.
So, alles angestöpselt.
Und bevor jetzt wieder die Leute fragen, deswegen sage ich es jetzt am Anfang nochmal.
Wozu braucht man dann einen 1500 Euro WLAN-Access-Point?
Da kann ich euch nur sagen, dass der neu 1500 Euro kostet.
Allerdings, wenn man ihn auf Ebay kauft, nur noch um die 200.
Also die zwei Access-Points, die ich bei mir im Einsatz habe, sind folgende.
Die Dinger, die kosten neu halt irgendwie so um 1500 Euro.
Was absolut witzlos ist, weil es schon irgendwie die übernächste Generation davon gibt.
Die Sache ist halt die, die übernächste, die kostet halt gleich 2000 Euro.
Easy.
Was halt mega übertriebene Preise für Access-Point sind.
Aber die Dinger sind auch wirklich nicht schlecht.
Allerdings, wenn man mal auf Ebay guckt.
Warum? Warum?
Weil es kaputt ist? Weil es kaputt sein kann?
Das stimmt das. Also wenn das deine Bedenken sind, ja, das ist natürlich immer im Bereich des Möglichen.
Ich meine natürlich musste das Ding einmal resetten und neu flashen und so bevor das einsetzt.
Aber ja, das stimmt. Das ist schon richtig.
Aber ich meine, wenn du gerade bei den Access-Points, wenn du danach custom firmware suchst,
da gibt es eigentlich nichts und du resetterst das Ding ja eh.
Klar, das könnte Hardware mäßig manipuliert sein, dass du dir dann irgendwas, irgendwas einfängst.
Aber bei den Dingern halte ich es für sehr unwahrscheinlich.
Ja, theoretisch hast du recht, aber ich bin ja auch immer recht kritisch, was das angeht.
Aber den Dingern echt weniger.
Also von den Access-Points, ich habe einen R710, einen R610, einen R510.
Die sind richtig teuer geworden. Ich habe meinen zwischen.
Also meine habe ich gekauft zwischen 150 und 200 Euro.
Mittlerweile ist der Kram noch teurer geworden.
Aber die Dinger sind auch gebraucht. Nicht schlecht.
Ja, das sind doch schon eher bessere.
Ok, das ist natürlich jetzt Kekona Versand und sowas.
Ich habe meine aus England und Frankreich bestellt.
Das war tatsächlich ganz, ganz nice.
Die kamen auch recht schnell an.
Ich bin gerade mit dem Arm auf die Tastatur gekommen.
Also davon habe ich drei Stück, R710, R610, R510 oder R710, R610, R510.
Und die haben ein paar Features, da können sie Unify Sachen nicht mithalten.
Werdet ihr auch gleich sehen, um was es heute geht, was wir basteln.
Das wichtigste Feature, warum ich Unify rausgeschmissen habe
und mir diese Dinger geholt habe, ist, also ich habe aktuell einen davon.
Ich habe einen R710 im Wohnzimmer hängen und einen R510 im Keller.
Man muss sagen, das ist nicht die aller, aller neuste Generation.
Das sind 802.11ac Access Points und die neuen sind, also Wi-Fi 5,
und die neuen sind 802.11ax Access Points, also Wi-Fi 6.
Und wahrscheinlich sind die ganz neuen sogar Wi-Fi 6e.
Vermuten, rate ich jetzt mal, weiß ich jetzt nicht genau.
Die sind aber unglaublich teuer und die kann man auch bei eBay nicht kaufen,
wenn ihr euch beanguckt.
Was die da teilweise wollen für neue Access Points, das ist absolut lächerlich.
Hier, guck mal, gebraucht.
Jaja, neu, okay, neu.
Es ist halt ultra teuer.
Ich meine, ich mag gute Hardware und ich bin auch bereit dafür,
für ordentliche Hardware richtig Kohle auszugeben.
Aber 650 Euro für ein Access Point ist dann sogar mir etwas zu teuer.
Refurbished, 3200 Euro.
Da steige ich ja lieber bei Bitconnect ein.
Also das ist ja absolut indiskutabler Preis.
Für den Fall der Fälle, dass irgendjemand ein gutes Angebot sieht.
Ich zeige euch mal, worauf ihr achten müsst.
Eine wichtige Sache gibt es tatsächlich.
Solltet ihr mal ein gutes Angebot sehen bei eBay und euch auch so einen kaufen wollen.
Linus hat seine Rakos Rookies at Home rausgeschmissen, aber was hat er jetzt?
Und warum hat er die rausgeschmissen? Die Dinger sind mega nice.
Na gut, der macht ja öfters mal irgendwelche Aktionen.
So nach dem Motto, hat er noch sein komisches,
durch die Wand verkabeltes Virtualisierungs-Gaming Setup.
Wo ich mir damals schon gedacht habe, warum zum Teufel baut man sich sowas?
Aber wegen Wifi 6E.
Scheiß doch drauf.
Es ist nicht so, als ist das Wifi technisch irgendwie ein großer Unterschied geschwindigkeitsmäßig.
Oder hat er regelmäßig irgendwie über 1000 Geräte am Start.
Ich meine, ob das jetzt Wifi 5, Wifi 6 oder Wifi 6E ist,
macht für die normalen Anwendungen überhaupt gar keinen Unterschied.
Zumal die Technologie hier hinter wesentlich besser ist als bei den Unify-Dingern.
Bei den Unify-Dingern...
Vielleicht hat auch Unify einfach gesponsert.
Bei den Unify-Dingern, die sind ja nicht schlecht gebaut im Vergleich.
Jetzt mal zu irgendeinem billigen AliExpress Access Point oder sowas.
Die Unify-Dinger sind schon ganz okay.
Aber technologisch und qualitativ sind die, habe ich auch schon ein paar Teardowns,
wie immer gesehen, sind die Dinger besser.
Vor allem haben diese Rokos-Dinger schon seit Jahren die Möglichkeit,
dass die Antennen, wobei ich bin mir nicht sicher, ob es die Antennen sind
oder ob es eher so die Abstrahlempfangskarakteristik von den Antennen ist.
Ich habe keine Ahnung, wie es genau funktioniert, wenn ich ehrlich bin.
Aber zumindest können die seit Jahren schon die Antennen auf die Geräte ausrichten.
Du hast ja intern mehrere Möglichkeiten zum Senden und Empfang.
Und wenn du jetzt zum Beispiel im ersten Stock stehst oder im Keller oder im Dach,
dann können sich die Antennen in dem Access Point so ausrichten,
dass es besser für das jeweilige Gerät ist.
Ja, mit Wi-Fi 6E können das auch mehr Geräte, das ist richtig.
Da ist das, glaube ich, sogar im Standard mit drin.
Und das können die Dinger aber hier schon seit Jahren.
Und ich würde mal vorausgehen, dass das auch noch besser funktioniert.
Aber preislich, muss man ganz ehrlich sagen, ist das wirklich okay auf eBay.
Und für mich ist halt gar nicht so sehr das Entscheidende die Hardware an sich.
Die Hardware, muss ich sagen, finde ich auch deutlich überlegender Unify-Geschichte.
Aber die Hardware ist es gar nicht.
Bei mir sind es wirklich die Features, die mir fehlen bei Unify.
Hauptsächlich ein Feature, was mir fehlt.
Man kann übrigens auch, Leute, das müssen wir tatsächlich mal ausprobieren.
Wir müssen mal ausprobieren, wie das geht.
OpenWrt.
Ich habe doch jetzt genug Unify-Dinger.
Ich habe doch genug Unify-Dinger mittlerweile übrig.
Wir probieren einfach mal, das muss ich mir aufschreiben.
OpenWrt. Flaschen auf Unify.
Ich habe ein Nano HD.
Ich habe einen UAP Pro von Unify.
Noch einen kleineren.
Ich habe drei, vier verschiedene Unify-Access-Points.
Vier sind es.
Unify-Access-Points am Start.
Können wir mal gucken, ob wir die geflasht kriegen.
Da bin ich.
Nein, nein, nein, jetzt nicht.
Da müssen wir mal gucken, wie das geht.
Das müssen wir tatsächlich mal im Stream ausprobieren.
Da bin ich gespannt, wie gut das funktioniert.
Zeig mal her.
Unify-UAP Pro.
Hardware-Highlights. Blablabla.
Installation.
Unify-AP Pro. Current Release.
Install OpenWrt.
Device. Get IP Address from DRCP.
Loginsite. AP. SSH.
Kann ich das Ding schon mal resetten?
Download Factory Bin to Temp.
Rename den Firmware Image to FW Update Bin.
Das ist alles? Das ist ja easy.
Früher musste man die Dinger noch aufschrauben dafür, dass das funktioniert.
Kannst du sagen, welche Features du vermisst?
Ja, kann ich. Zeige ich dir gleich.
Weil da geht es heute zum größten Teil auch im Stream drum.
Es gibt einige Punkte, da habe ich ja schon oft genug,
die mich an Unify nerven.
Aber es gibt ein großes Feature, was mir fehlt.
Jetzt gucken wir uns auch gleich an.
Ist der Axis-Point mittlerweile eingeschaltet?
Ähm, ok. Passt mal kurz in mein...
Axis-Point ist nicht richtig gebootet.
Nice. GG Eats.
Und ich will mal neu starten.
IP League. Oh nein.
MonkaW. IP League.
Ah, Moment. Ha.
Ich muss mal kurz...
Lass mich mal kurz in meinen Router blicken.
Was ich das Ding...
Was ich das Ding für eine DHCP-Adresse ziehe.
DHCP Server Leases.
So, das müsste jetzt starten.
Ich muss mal kurz warten, was ich das bei DHCP zieht.
Und dann direkt da drauf...
Nee, die Kamera ist es nicht.
Auf Boote mal, Axis-Point. Let's go.
Du, du, du, du, du, du.
Du, du, du, du, du.
Ey, das Ding bootet ultra langsam.
Unleashed Test. Da ist es doch.
2.150. Ok.
2.150.
Advanced.
Yes.
Ok. Rebuilding Networks. Alles klar.
Dann soll er jetzt mal Networks rebuilden.
Ja. Aber das ist cool, dass das geht.
Das probieren wir auf jeden Fall aus.
In einem der nächsten...
In einem der nächsten Streams.
Find das mega nice, dass es mittlerweile so einfach ist.
Open VRT zu flashen auf die...
Auf die Unify-Dinger.
Wie sieht's denn aus?
Uni... Open VRT.
Die haben das Feature mittlerweile drin.
Das muss ich mir mal im Detail angucken.
Ja, ach, mach ich jetzt. Mach ich jetzt.
Tja, die Dinger sind übertrieben teuer.
Hat der Unify USB? Ja.
Was auch immer man damit machen soll.
Der hat einen USB-Anschluss. Der UAP Pro aber nur.
Der hat einen USB-Anschluss.
Ok, das Ding ist noch nicht richtig gestartet.
2.150.
Also kurz warten, bis das gebootet ist und dann...
Dann geht's.
Ok, also was ist das Feature, was mir bei Unify fehlt?
Das Feature, was mir bei Unify fehlt...
Ich wollte es euch jetzt eigentlich im Webinterface zeigen,
aber das Ding bootet anscheinend noch ein bisschen...
Ein bisschen vor sich hin.
Jetzt hat er es geschafft.
Ach so, Username, Passwort. Sekunde.
Äh, hm, äh, hm.
Ich will an nichts leaken.
Nicht, dass es relevant wäre, weil es ist eh nichts offen.
Also sollte ich... Leute, ich sage es jetzt nur mal für den Fall der Fälle,
dass nicht wieder alle wie verrückt klippen müssen.
Sollte ich in diesem Stream irgendwelche Passwörter leaken,
ist es egal, weil der Access Point, der wird nicht benutzt.
Der ist nur zum Testen da und das WLAN ist nicht mehr aktiviert.
Man kann mit diesem Passwort, egal was ich liege,
man kann damit überhaupt nichts machen.
Ich sage es nur, nicht, dass ich gleich wieder nach dem Stream in die Clips gucke
und ich sehe 60 Clips, weil ich irgendwo angeblich ein Passwort geleakt habe.
Sollte man sagen, ah, lulul, Max, Passwort liegt, Passwort liegt.
Kommt ja manchmal vor.
Dann feiern sich alle darauf ab, dass ich ein Passwort geleakt habe,
auch wenn es gar nichts bringt.
Hä, was ist das?
Okay, nachdem das Webinterface von dem Access...
Normalerweise sieht das Webinterface übrigens so aus.
Also ein bisschen Flashbang, ein bisschen Flashbang-Modus.
Mein VM-Passwort ist wahnsinnig sicher.
Das ist best practice Passwort.
Das ist auf der Welt so oft im Einsatz.
Das kann nicht schlecht sein, mein VM-Passwort.
So, also man sieht ja auch WLAN-Sachen,
die Test-WLAN ist disabled, da kommt man eh nicht dran.
Alt bewährtes Passwort.
Genau, also das hauptsächliche Feature,
was ich an diesen Dingern richtig, richtig nice finde
und was seit dem letzten Firmenpasswort,
das ich an diesen Dingern richtig, richtig nice finde
und was seit dem letzten Firmenpasswort,
das ich an diesen Dingern richtig, richtig nice finde
und was seit dem letzten Firmenpasswort,
das ich an diesen Dingern richtig, richtig nice finde
und was seit dem letzten Firmenpasswort,
das ich an diesen Dingern richtig, richtig nice finde
und was seit dem letzten Firmenpasswort,
das ich an diesen Dingern richtig, richtig nice finde
ist folgendes.
Warum geht mein Script nicht vom letzten Mal?
Ah, ich weiß warum das nicht geht.
Weil die IP von dem Ding sich geändert hat.
Okay, das müssen wir auch noch anpassen, gleich.
Die Playlist ist bisschen...
Wie viele Views hat das?
Das sind, das sind, das sind Ami, Ami Billions, oder?
Das sind, das sind Ami Billions, also es sind jetzt 1,1 Milliarden Views, 1,1 Milliarden Five Little Ducks.
Was ist das hier, was sind das hier überhaupt für Empfehlungen?
Wie funktioniert eine Spülmaschine, die Sendung mit der Maus?
Ist das das woran die Leute bei Relaxing Music vom Super Mario Series denken?
Ich hinterfrag das mal nicht, wir lassen das einfach weiter so weiter laufen.
Sendung mit der Maus ist auch Pog.
Leute, ich hab früher viel lieber Sendung mit der Maus geguckt als Sesamstraße und so was.
Sendung mit der Maus war beste.
Mit Christoph und, wie hieß der andere?
Amin, Amin und Christoph.
TS Fuchs, Dankeschön für den Sub.
Sendung mit der Maus, besser.
Aber jetzt kommen wir mal zurück zum Access Point.
Ich laber hier schon wieder viel zu sehr mit dem heißen Prei rum.
Es gibt ein Feature, was mir bei Unify echt gefehlt hat und der Timer hier oben, der geht.
Der ist bloß nicht gestartet.
Guck, wenn ich den starte, dann geht der auch.
Genau, es gibt ein Feature, was ich bei Unify vermisst habe und was so gut wie alle größeren
Hersteller mal besser, mal schlechter mittlerweile implementiert haben, außer Unify oder außer
Ubiquiti.
Die haben da keinen Bock drauf, obwohl es Feature Requests gibt, die 5 Jahre alt sind
und das finde ich ein sehr nice Feature ist und gerade für den Bereich, wo Unify stark
ist, sehr wichtig wäre, nämlich für diesen heim-semi-professionellen-amateur-bis-einsteiger-profi-Segment-Bereich,
also interessierte Enthusiasten-Benutzer bis zu preisbewusste, vielleicht auch professionelle
Anwender.
So gerade für diesen Anwendungsbereich wäre das denke ich besonders cool, wenn Unify dieses
Feature einbaut, denn Unify hat keinen Bock, nämlich, ich zeige euch das Feature, Services
Dynamic Preshared Key, es ist egal, wie die Hersteller das nennen, manche nennen es Dynamic
Preshared Key, manche nennen es PPSK, MPSK, was auch immer, PSK bezieht sich auf das WLAN
Passwort.
Also im Netzwerk, in der Netzwerksprache ist PSK das WLAN Passwort, also sprich, wenn
ihr bei eurem iPhone ein WLAN auswählt, das was ihr da eintippen müsst an Passwort, das
ist der PSK für das Netzwerk, das WLAN, das was so umgangssprachlich unter WLAN Passwort
läuft.
Das heißt Preshared Key, also quasi ein Passwort, was man im Vorfeld sich ausgetauscht hat, wo
man sich damit einloggen kann, also das stellt man dann ein und tauscht sich damit, tauscht
das mit jemand aus, der gibt es ein, kann es eingeben, sich damit autonifizieren.
Ein großer Nachteil von dem normalen, von diesem normalen Verfahren, wie man sich an
WLAN, an WLANs anmeldet ist, du hast ein Passwort für alle Geräte.
Ich brauche irgendwas anderes für den Hintergrund.
Ok kann ich vielleicht mitleben.
Ein Nachteil von, wie das normalerweise läuft, wenn man sich an WLANs anmeldet ist, es gibt
ein WLAN Passwort pro SSID für alle Geräte, das heißt für euch, für eure Bekannten,
für eure IoT Geräte, für was auch immer, es gibt für dieses WLAN, man kann natürlich
mehrere SSIDs aufmachen, das ist was anderes, man kann natürlich mehrere WLANs aufmachen,
das funktioniert.
Allerdings hast du dann das Problem ein bisschen aufgeteilt, aber du hast das Problem immer
noch.
Also alle Geräte, die in das WLAN joinen wollen, verwenden das gleiche Passwort dafür,
das heißt du kannst jetzt auch nicht, wenn du dein Passwort mal irgendjemand gegeben
hast, wo du nicht willst, dass der noch ins WLAN reinkommt, kannst du auch nicht einfach
sagen, ok, ich ändere das jetzt, weil wenn du das WLAN Passwort änderst, dann musst
du es auf allen Geräten, die in diesem WLAN sind, ändern, weil sonst kommen sie nicht
mehr ins WLAN.
Und je nachdem, was das für Geräte sind, kann das enorm aufwendig sein.
Also wenn wir sagen, wenn du so 50-60 Geräte im WLAN hast, was übrigens, nur mal angemerkt,
vielleicht viel klingt, aber gar nicht so viel ist, weil es gibt ja mittlerweile auch
viele Leute, die IoT-Geräte verwenden, sei es irgendeine Waage im Bad, zum Übertragen
vom Gewicht, LED-Dimmbare, Klübieren, irgendwelche Relays zum Schalten, Unterputz, Kameras,
alle möglichen Sachen, das ist das gar nicht mehr so viel.
Und wenn ihr das WLAN Passwort vielleicht mal aus Versehen geleakt habt, wie ich irgendwie
im Stream oder so, oder ihr habt es jemand gegeben, wo ihr dann nicht mehr wollt, dass
er reinkommt, dann müsst ihr das WLAN Passwort ändern und dann viel Spaß, das auf 60 Geräten
zu ändern und vielleicht im Zweifelsfall noch aufs Dach zu kleddern, um an ein Gerät
ranzukommen.
Also das kann mit viel, von wenig bis sehr viel Aufwand verbunden sein, das WLAN Passwort
zu ändern.
Deswegen kann man das dann natürlich ein bisschen abfedern, indem man ein Gäste-WLAN
macht, ein IoT-WLAN macht und ein WLAN für vertrauenswürdige Benutzer macht und sowas
in der Richtung.
Das geht.
Die meisten Access Points können so bis 4 SSIDs, 4 WLANs, danach machen die meisten,
haben sie keinen Bock mehr.
Es ist aber auch nicht unbedingt sinnvoll, gar so viele SSIDs aufzumachen, weil das wird
ja alles über das gleiche Shared Medium übertragen und sorgt dann für noch mehr Rauschen auf
allen möglichen Kanälen.
Aber du hast im Prinzip das gleiche Problem, wenn du ein IoT-WLAN hast, also wenn du ein
Gäste-WLAN hast und ein IoT-WLAN und ein WLAN für einen selbst, dann hast du vielleicht
nicht so das Problem, dass du einen Bekannten rausschmeißen willst und der nicht mehr ins
Netzwerk kommen darf, weil dann änderst du das Gäste-WLAN-Passwort, dann müssen dann
alle anderen Gäste, die vielleicht mal vorbeikommen, wieder ein neues Passwort eingeben, schon
nervig.
Aber gerade was IoT-Geräte angeht, ist das wirklich ein, finde ich, nicht so unterschätzendes
Problem, weil du nimmst irgendeine WLAN-Klübierne und ich sage absichtlich Klübierne, ich weiß,
dass es keine Klübierne ist, nimmst du eine RGB-LED-WLAN-Klübierne, die musst du einmal
perren am Anfang über irgendeine App, die dann im Endeffekt dein WLAN-Passwort da überträgt
hin, d.h. die, du hast, Klübierne, die hängt bei dir im WLAN und sei es nur das IoT-WLAN,
ist ja egal, ein paar Rechte haben die Dinger trotzdem und du schmeißt die Klübierne weg
und in dem Moment liegt dein WLAN-Passwort in der Mülltonne, User und Passwort liegt
in der Mülltonne, die Chancen, dass da jetzt jemand hinfährt, die Klübierne da rausholt,
im Nachhinein noch ausliest, ich will es jetzt nicht größer reden, als es ist, dass das
bei euch jetzt privat jemand macht, ist doch relativ unwahrscheinlich, aber nicht undenkbar,
falls irgendjemand euch eins reinwürgen will und auf der anderen Seite ist es ja auch letztendlich
egal, ob es wahrscheinlich ist oder unwahrscheinlich ist, es ist schon mal vom Ansatz her blöd,
dass es überhaupt möglich ist und da kommen solche Features wie Dynamic PSK ins Spiel,
Selfmade Ice, Dankeschön, Dynamic PSK, also ein dynamisches WLAN-Passwort je nach Gerät
oder für oder unter, es muss nicht wirklich nach Gerät sein, meistens benutzt man das
nach Gerät, aber es geht auch per User, so dass du quasi verschiedene Passwörter generieren
kannst, für das gleiche WLAN, also du hast dann ein WLAN, hier Test-WLAN hast du zum
Beispiel, hier WIFI, und du kannst verschiedene Passwörter für dieses WLAN generieren, was
den großen Vorteil hat, ich mach das jetzt mal, ich lass mal fünf random Passwörter
generieren, die lösche ich auch gleich wieder, die man nicht braucht, so, jetzt hab ich fünf
User, halt mit random generic Name und mit fünf Passwörtern, und wenn ich mich da jetzt
anmelde mit, man kann übrigens hier auch einen QR-Code generieren und dann das in
die Kamera halten, also guck zum Beispiel hier, show QR-Code, kann man einscannen, das
WLAN ist aus, du kannst dich nicht so reinhängen, ich hab's ja am Anfang schon gesagt, dass
die Leute nicht wieder sich Clips machen müssen oder sowas, der Access-Point ist aus, man,
so, kann man übrigens auch ausdrucken, sonst wie, und jetzt überlegt euch mal, das hier
ist zum Beispiel, man kann das jetzt übrigens ändern, das hier ist, keine Ahnung, Max iPhone,
das hier ist, also wir machen das immer exemplarisch, und das hier ist, was weiß ich, nur LichtsRGB,
irgendwas eingestellt ist, so, mal angenommen, ich werf jetzt das hier weg, nachdem das jetzt
an das Gerät gebunden ist, wobei ein bisschen an das Gerät gebunden ist nicht ganz richtig,
man kann das auch gültig machen für mehrere Geräte und man kann es eher so ein bisschen
auf User-Basis eigentlich sehen, wobei ich persönlich mache es pro Gerät, weil das ist
das, was bei mir IoT technisch relevant ist, wenn ich jetzt meine Glühbirne wegschmeiße,
mein Licht, was ich im Flur habe, dann gehe ich einfach hier hin, sag Delete, und dann
gibt es das nicht mehr, und dann kann sich das Ding nicht mehr anmelden, und die andere
löche ich jetzt auch mal, das hat natürlich einen riesen Vorteil, wenn man viele IoT-Geräte
hat, oder vielleicht auch die einen oder anderen gebrauchten Geräte, die man verkaufen will
und keinen Bock hat, dass alles zu resetten oder sich darauf zu verlassen, dass alles
komplett resettet ist, muss man immer noch dem Hersteller vertrauen, das ist die mit
Abstand einfachste und angenehmste Variante, um, ich will nicht sagen Wegwerfgeräte, aber
wechselnde Geräte im WLAN sicher abfackeln zu können, und das ist ein mega-nices Feature,
kann man generieren, man kann auch das ganze selbst anlegen, wenn man das will, wenn man
nicht diese Standard-User und Standard-Passwort haben will, kann man das ganze selbst anlegen,
und was jetzt passiert ist folgendes, wenn das hier eingestellt ist auf 000-Mac-Adresse,
das erste Gerät, was sich anmeldet mit diesem Passwort am Test-WLAN, also an dem einzigen
WLAN, was ich habe, auf diese Mac-Adresse wird das dann gelockt, sofern ich es so eingestellt
habe, dass es auf ein Gerät geht, man kann ja auch mehrere Geräte machen, und dann ist
das das ganze weg, naja versehentlich das falsche gelöcht und geklickt ist auch nicht so schlimm,
du kannst relativ easy Backups ziehen und du kannst den User auch einfach wieder anlegen,
also ok, wenn du weißt, was du gelöscht hast, wenn du es nicht weißt, kannst du ins Log
gucken, was du gelöscht hast, das ist tatsächlich ganz gut durchdacht gemacht, außerdem fragt
er dich ja nochmal, ob du es wirklich löschen willst, genau, so und was wir heute machen
ist folgendes, beziehungsweise wo wir das letzte Mal schon angefangen haben, mal kurz
in die Scripts gucken, nämlich, wir haben ja heute eine andere IP, zeige euch mal was
wir das letzte Mal gemacht haben, ok so funktioniert das schonmal nicht, ok gut nice, ach nee hier
muss man das anpassen, nicht da oben, ja jetzt greift das Script, so das was wir das letzte
Mal gemacht haben ist, ich habe versucht ein bisschen die Oberfläche zu modden, und zwar
wird euch jetzt auffallen, bisschen verbugt, es gibt jetzt einen neuen Button hier oben,
add DPSK, den gab es vorhin noch nicht den Button, den haben wir reingemoddet in die Oberfläche,
sie haben in dem letzten Firmware Update für diese Access Points ein ziemlich cooles neues
Feature eingeführt, und zwar man kann jetzt Custom User anlegen mit Custom Passwörtern,
bisher ging das nur so, bisher konnte man nur sowas machen, hier generiere mir 2 User und
dann hast du Random Passwörter gekriegt, die Random Passwörter sind vielleicht nicht
jedermanns Fall, die Dinger sind nicht merkbar und sie sind vor allem auch nicht gut zu tippen
auf mobile, klar du kannst QR Codes einscannen und alles, aber manchmal musst du das WLAN
Passwort tippen und ganz ehrlich, wenn du bis du das getippt hast, da brauchst du locker
5 Minuten bis du das eingetippt hast und das ganze wahrscheinlich 3 mal, weil du immer
irgendwelche Fehler gemacht hast, so und es gibt jetzt seit der neuen Version ein Feature,
dass man, jetzt muss ich auf einmal wieder so laut, Playlist sind echt ppig heute, ja
und es gibt seit der neusten Version ein Feature, dass man das selbst anlegen kann, leider ist
dieses Feature etwas umständlich zu benutzen, der offizielle Weg dieses Feature eigene Passwörter
zu vergeben funktioniert folgendermaßen, man klickt auf Generate, dann klickt man
auf Example Profile, was der Besonderes kann, das zeige ich gerade, das habe ich gerade
gezeigt, dann klickt man auf Example Profile, dann kriegt man eine CSV Datei, in diese CSV
Datei, also ihr seht schon wie beschissen das ist, das von Hand zu machen, in diese
CSV Datei kannst du dann zum Beispiel eintragen, das ist hier mein toller User, MAC Adresse
kannst du leer lassen, WLAN kannst du auch leer lassen und Passwort soll Omega Kekkel
0W123a werden, dann speicherst du das ganze, zack, gehst auf Browse, lädst das hoch, dann
sagt er ich habe ein Profil erkannt, dann klickst du auf Generate und dann hast du da dein User,
das ist Usability technisch einfach nur komplett für'n Arsch, das ist vielleicht cool, wenn
du regelmäßig 50 User anlegen willst und das ganze per CSV importieren willst, aber
seriously, das normale ist super easy, ich will 2 neue User Generate fertig, das ist
super, da kann ich nichts dagegen sagen, aber so dieses Anlegen mit Custom Passwort, das
hätte ich gerne ein bisschen einfacher, ihr habt es jetzt gesehen, also der Arbeitsablauf
ist komplett pepega, komplett hängen geblieben und deswegen habe ich mir gedacht, wir bauen
selbst was ein, wir haben das letzte Mal schon einen Button hier reingemoddet, wenn man jetzt
nämlich den Button drückt, kann man die Usernamen nachträglich noch ändern, ja das geht, das
kannst du machen, das kannst du machen, also du kannst theoretisch, wenn du mit den normalen
Passwörtern einverstanden bist und keine eigenen Passwörter vergeben willst, kannst
du sagen Generate 5 User und dann kannst du hier hingehen und sagen Edit Usernamen hier,
hecklW QtChat, das funktioniert, also ein bisschen angenehmer haben sie schon gemacht,
das geht übrigens auch erst seit dem neuesten Firmware Update, das Firmware Update kam vor
irgendwie 2 Monaten im Dezember raus, vorher ging das auch nicht, also es ist abartig,
so deswegen haben wir hier schon neuen Button reingemoddet in das Webinterface, wo es jetzt
auch schon ein Popup und Dialog gibt, wo man einen neuen User und Passwort anlegen kann,
wir müssen halt mal gucken, wie das jetzt im Detail genau funktioniert, um es noch kurz
zu machen, weil im Chat, weil jetzt glaube ich noch ein paar neue Leute reingekommen sind,
also der Axis Point kostet neu 1500 Euro bzw. die neue Variante sogar über 2000 Euro,
allerdings wenn man die Dinger sich auf Ebay kauft, bezahlt man 2-300 Euro aktuell, ich
habe meinen zwischen 150 und 200 Euro bekommen, es gab letztes Jahr mal so eine Welle, da
haben die alle anscheinend ihre alten Axis Points, Poggers, ihre alten Axis Points ausgemustert,
keine Ahnung, ich habe 3 Stück, ich habe einen R710, anstößige Inhalte, ok ich wusste gar
nicht, dass nach, ich wusste gar nicht, dass das das anstößte Inhalte hat, ok also ich
habe einen R710, einen R610, einen R510, das ist die vorletzte Generation von denen, es
gibt einen R750 und einen R650 mittlerweile, ich glaube es gab sogar einen R720, was ein
Refresh von dem, also es ist die letzte Generation wenn man ehrlich ist, die machen das glaube
ich auch so, die haben immer eine Serie, dann einen kleinen Refresh und dann eine neue Serie,
also 750 und 760 ist glaube ich mehr oder weniger das gleiche und R710, R720 auch irgendwie,
zumindest davon habe ich 3 Stück, also aus der gleichen Serie und warum ich die bevorzuge
versus den Unify Dingern ist folgendes, was, was hat das damit zu tun, so und warum ich
das bevorzuge ist dieses Feature hier, was man hier sieht, normalerweise hast du ja das
Problem, ich habe es jetzt die letzte halbe Stunde schon erklärt, deswegen mache ich
das jetzt nur kurz, normalerweise hast du ja das Problem, wenn du mehrere WLANs hast,
dass dann alle Geräte, die in dieses WLAN rein müssen, das gleiche Passwort verwenden,
es sei denn man macht WPA Enterprise, was nicht praktikabel ist im Heimbereich, warum
ist es nicht praktikabel, ganz einfach, ich rede gar nicht so sehr über die komplizierten
Konfigurationsgeschichten mit Radioserver und sowas, sondern weil es viele IOT Geräte
schlicht und ergreifend nicht können und um die geht das, also du wirst kaum IOT Geräte
finden, also du findest keine RGB LED Lampe, die WPA Enterprise kann, ok ich weiß was
ihr jetzt macht Chet, ihr geht jetzt in Google und sucht WLAN LED Lights WPA Enterprise und
ihr postet mit dem einzigen Link, den ihr gefunden habt, mit einer Glühbirne, die das
kann, aber in der Regel ist es so, die können das nicht, im Heimbereich bzw. IOT Geräte
können eigentlich alle keine WPA Enterprise, das heißt, wenn du dein Passwort ändern
willst, musst du bei 60, 70 Geräten dein WLAN Passwort ändern und wenn du dein Passwort
nicht in die Mülltonne werfen willst, mit deiner RGB LED WLAN Lampe, dann musst du
eigentlich auch dein Passwort ändern, weil das Passwort ist ja nach wie vor da drinnen,
also sprich, das ist ein bisschen unglücklich, gerade wenn man viele IOT Geräte hat oder
stell euch mal vor, ihr habt das Zugang zu eurem WLAN irgendjemand gegeben, der bei
euch mal zu Besuch ist und ihr wollt nicht mehr, dass er ins WLAN kommt, was müsst ihr
machen, das Passwort auf allen Geräten ändern und deswegen haben die Hersteller schon mitgedacht
seit einer ganzen Weile und bieten sowas wie Dynamic PSK oder MPSK oder DPPSK, das nennen
die alle ein bisschen unterschiedlich, aber im Prinzip ist es immer das gleiche Feature
und zwar man kann, ich zeige es dir nochmal exemplarisch, man kann für das gleiche WLAN,
es geht ja nicht um mehrere, es geht nicht darum, dass man 18 Gäste WLANs oder so aufmacht,
man kann für das gleiche WLAN mehrere Passwörter generieren und die dann unterschiedlich verteilen
und wenn irgendein User oder irgendein Gerät nicht mehr ins WLAN kommen soll, dann entfernt
man ihn hier einfach und fertig ist, easy und schon kommt er nicht mehr rein, das heißt
wenn das hier meine LED Lampe ist, dann lösche ich die und dann ist nicht mehr möglich,
dann ist egal, ob die im Müll liegt oder nicht, weil mit dem WLAN Passwort kann keiner
was anfangen.
So, das einzig blöde ist und das ist das, was wir jetzt auch gleich weiter machen werden,
das einzig blöde ist, dass das Generieren dieser Passwörter hier im Webinterface ziemlich
unständlich ist, deswegen haben wir hier schon letztes Mal einen Button reingemoddet, um
einen neuen User mit einem Custom Passwort anlegen zu können, das ist aber noch nicht
viel weiter gedient als das für einen zusätzlichen Button ins Webinterface, also dieser Add DPSK
Button ist nicht standardmäßig dabei in dieser Oberfläche, den gibt es da normalerweise
nicht, den haben wir da mit einem zusätzlichen Script rein gebastelt und soweit sind wir
noch nicht gekommen, es gibt einen Button, wo man draufklicken kann und da gibt es ein
Popup-Window, wo ich das WLAN auswählen kann, das war's, das heißt wir müssen jetzt ein
Formular machen, mit Username, Passwort, Input, Validation und dann irgendwie gucken, wie
man das dem Access Point unterschieben kann, wahrscheinlich als CSV.
Ja, äh, Patrick, der hat's wieder durchschaut, ich will nicht das gleiche WLAN Passwort an
alle leaken, nicht, dass denen noch auffällt, dass sie nicht die einzige im WLAN sind.
Du hast da einen Freifunk für WLAN, brauche kein Passwort.
Das ist aber jetzt, hat mit dem Problem jetzt aber nichts zu tun, ne, also ein offenes WLAN
kann ja jeder betreiben, wie er lustig ist, aber du willst ja nicht alle Geräte in einem
offenen WLAN hängen haben, du willst ja nicht zum Beispiel deine Kameras ins offene WLAN
hängen und dann am besten noch im Schlafzimmer eine Kamera, also offenes WLAN schön und gut,
aber alles ins offene WLAN hängen ist sicherlich nicht so sinnvoll.
Ja, genau, also hast du das Problem quasi ein bisschen verlagert, du hast zwar zwei verschiedene
WLANs, aber wenn du deine IoT-Geräte in Müll schmeißt, dann ist das Passwort immer noch
in der Mülltonne.
Kann man auch für unterschiedliche WLANs das gleiche Passwort generieren, klar, klar,
kann man das machen, so und die meisten Hersteller haben dieses Feature ja drinne, mittlerweile
sogar MikroTik bei ihren Billig-Access-Points hat das drinne, nur UniFi hat keinen Bock,
Ubiquiti hat keinen Bock, deswegen habe ich diese Access-Points am Start, so jetzt gucken
wir mal weiter, wie ging das ganze hier nochmal, also das ist aktuell unser Skript, unser
Pepega-Skript für das Web-Interface, wo man das Web-Interface moden kann, das ist nicht
schön, das ist Vanilla-Java-Skript, aber was willst du tun ja, bleibt dir nicht viel anderes
übrig, was willst du tun, wie der echte Gangster, so wir machen mal unser Darkseam an, ich bin
sonst zu geplendet, wie war das jetzt nochmal, wir müssen in Repos und dann in Python-Web-Server
starten, glaube ich, und dann auf Local Hosts, DPSK-Skript-Users, dann lösche ich das jetzt
erstmal, was ich da drinne habe, sonst kommt es bestimmt, kommt sich bestimmt in die Quere,
so DPSK-Users, Track, Confirm und jetzt sollte es eigentlich funktionieren hier auf der
Seite, haben wir noch einen Button, ja ok funktioniert, alles klar, gut, dann können wir unser Wishlist
Studio Code rausholen und anfangen ein bisschen rumzubasteln, also Ziel ist folgendes, ich
will hier den Button rein bekommen, den Button haben wir ja schon, da soll ein Popup kommen,
in diesem Popup kann ich eintragen, Username, Passwort, vielleicht noch mit ein paar Checks
drinne und wenn ich das dann abschicke, dann will ich, dass es den User hier einträgt,
also ohne diese komische Generier, Importier, Exportier, CSV-Org hier, einfach weil es
deutlich angenehmer ist und weil ich mich schon mal eine Weile, kommt ja auch noch dazu,
mit User-Skripts für Browser beschäftigen wollte, ich zeige euch gleich, was es aktuell
macht, als Browser Plugin verwenden wir das hier, Violent Monkey, das ist ein Fork eines
Forks, wenn ich das richtig verstanden habe, das ist ein Browser Addon, ursprünglich gab
es mal Grease Monkey, das war Firefox Only, glaube ich, dann gab es Temper Monkey, was
die meisten Leute, die sich damit beschäftigt haben, wahrscheinlich kennen und jetzt gibt
es einen weiteren Fork des Forks, also den Hyper Fork, das ist Violent Monkey, weil sie
nicht damit einverstanden waren, dass Temper Monkey irgendwelche Google Analytics eingebaut
hat in ihr Addon, was auch immer, und damit kann man Skripts anlegen, also man kann besser
gesagt das JavaScript der Webseite erweitern und es dann im Kontext der jeweiligen Webseite
ausführen, ihr seht es hier oben, da ist das Addon installiert, der erkennt, für diese
Webseite gibt es einen Customs Script und wenn ich die Seite jetzt quasi lade, dann hängt
sich dieses Skript in die Seite rein und erstellt hier diesen zusätzlichen Button, den es
normalerweise nicht gibt, ja ich kann euch das zeigen, wenn ich das Skript ausschalte
und die Seite refresche, dann sieht es so aus, wie es normalerweise aussieht, nämlich, dass
es hier keinen Button gibt, also der Button kommt nicht aus der Firmware, sondern von
diesem Custom Ding hier, so, so sieht es aus, jetzt können wir weitermachen, ist das Side
Loading, was, vielleicht, Ach so, Side Loading, ja ein bisschen sowas in der Richtung vielleicht,
wobei es halt auch wirklich hier im Kontext von diesem Tab läuft, das heißt du hast auch
auf alles Zugriff, du hast zum Beispiel auch Zugriff auf und das haben wir das letzte Mal
raus gekriegt, die Webseite scheint mit React, also dieses Web Interface von dem Access Point
scheint mit React erstellt worden zu sein und dementsprechend hat man auch Zugriff auf
den State Store von React, ja und dann machen wir jetzt, machen wir jetzt mal weiter, was
ich noch gucken wollte ist folgendes und zwar das hier ist ja sehr rudimentär alles, das
ist quasi Vanilla JavaScript, wie die Amis auf YouTube immer sagen, das ist Vanilla JavaScript
ohne irgendwelche Zusatzsachen, also man sieht es hier schon, so ganz, ganz klassisches Zeug
und vor allem auch noch so HTML Strings von Hand und Elemente von Hand erstellt und solche
Geschichten, dass das hier so schön aussieht liegt auch nur daran, weil wir ein Studio Code
haben, was Template Strings Highlighten kann als HTML Elemente, das ist, das ist rudimentär
genau und was ich jetzt gesehen habe bei denen auf der Webseite ist, die haben hier so eine
Guide und zwar wie man User Scripts mit Modern JavaScript, JavaScript Syntax erstellen kann,
das probieren wir jetzt mal schnell aus, weil vielleicht, das ist ja viel angenehmer als
Vanilla JavaScript all das hier damit zu machen, also die haben dann zum Beispiel JSX Support,
das heißt ich brauch keine Template Strings mehr, sondern ich kann das direkt in JavaScript
als HTML definieren, was das Sache schon ein bisschen übersichtlicher macht, man kann Tailwind
CSS verwenden, wenn man das will, brauch ich jetzt nicht so wirklich und mehr Zeug, mal
gucken wie das funktioniert, mal anschauen, wenn das nichts taugt, machen wir es einfach
hier weiter, wahrscheinlich ist es eh ein bisschen Overkill, wir probieren es einfach mal kurz
aus mit dieser Anleitung, wir machen einfach mal die Anleitung von den Typen hier durch,
CD, My Script, Moment, mein MKD ist ja schon so schlau, wechselt in My Script oder, ne ich
hab schon CD My Script, manchmal hab ich echt Brain Lag, so und was sollen wir jetzt machen,
NPX Generate, User Script, ok, alter was generiert der denn da alles für ein Publix, Leute ich
will jetzt keine 580 JavaScript Files haben nur um nen Button und nen Popup auf ne Webseite
zu kriegen, egal wir führen es mal aus und gucken was passiert, aber Frontend Zeug ist
eh pepega an sich, Press ok, ja ja alles gut, machen wir, yes, exellent, so wir generieren
erstmal ein schwarzes Loch in Note Modules, erstmal halbes Internet Downloaden, korrekt,
alter was der alles runter lädt man, das ist wirklich immer absolut lächerlich, der ganze
Frontend Shit man, guckt euch das mal an, da installiert das halbe Internet wieder dafür
dass ich 3 Files anlegen kann bei mir lokal, your project name, My Script, das ist perfekt,
Autor, Timescript, yes, warum nicht, mal gucken, alter, was zum, alter was,
ok, er hat's geschafft, alter was ist denn das, wo ist denn mein Source Code hier drinnen
überhaupt jetzt, alter die Frontend Leute haben schon bisschen Dachschaden, oder man,
Leute, ok, ich will jetzt nicht sagen, dass das hier sonderlich übersichtlich ist, ja,
was man hier fabrizieren muss, dass es funktioniert, aber jetzt mal, jetzt mal ernsthaft, also
wie viele Files sind es jetzt, für eigentlich ein paar Zeilen Code, was will der überhaupt,
was ist das für ein Icon, Show Actions, ja, wie viele Files hat er hier jetzt angelegt,
Husky, was zum Teufel ist Husky, ich weiß nicht mal was das ist, Husky Node.js, wir
suchen mal Node.js, Husky, Git Hooks made easy, Wuff, Git Hooks made easy, ich dachte
eigentlich, dass Git Hooks an sich easy sind, Husky improves your commits and more Wuff, sind
das Git Hooks, ich kann nicht richtig reden heute, sind das Git Hooks, die man jetzt in
TypeScript entwickeln kann, anstatt in Bash, oder man kann normale Git Hooks aber auch
in jeder X beliebigen Sprache machen, das ging die ganze Zeit schon, warum brauche ich,
warum brauche ich einen, ich verstehe den Sinn davon nicht, ernsthaft, ich verstehe
den Sinn wirklich nicht, Git Hooks made easy, aber Git Hooks sind easy, guckt mal, hier
mkdir, keckeltest, brauche ich irgendwas, pass mal auf, Git init, cd Git Hooks, so fertig,
hier sind Git Hooks, kann ich machen was ich will mit, also mehr easy geht doch eigentlich
gar nicht, warum brauche ich denn irgendwas in TypeScript dafür, weil das in dem Repo
mit drin ist und alle die das klonen, achso, ah, ok jetzt verstehe ich, das macht natürlich
Sinn, das macht natürlich Sinn, nee nee das macht Sinn, ich nehme es insofern zurück,
ganz unsinnig ist das nicht, in dem Fall macht das schon Sinn, da kann man quasi mit
dem Repo noch zusätzlich Git Hooks scheren, die sinnvoll sind, das ist gar nicht so blöd,
klappt natürlich nur wenn es irgendein Frontend Ding ist und die ganzen Leute den Kram installiert
haben, das ist gar nicht so blöd, da kann man zum Beispiel commit Hooks, guck mal, die
agilen Proggers haben auch sowas, ja ok verstehe, also da kann man zum Beispiel einen Sündagscheck
zum Beispiel in seinen Pre-Commit Hook rein machen und den mit anderen Leuten scheren
die auch das Repo verwenden, eigentlich dann sage ich mal das ist gar nicht so schlecht
wie ich jetzt erstmal gedacht habe, ok lasse ich mir gefallen, man lernt ja nicht aus,
manchmal sehen die Sachen auf den ersten Blick nicht sinnvoll aus, sind aber doch nicht verkehrt,
natürlich warum es bei einem generierten Projekt für User Scripts eine Husky Hooks geben muss,
weiß ich nicht so genau, aber gut, aber ok, so was haben wir hier noch alles für Zeug
am Start, Source ist klar, TypeScript gedönns, App TSX, habe ich schon mal gesagt, dass ich
JSX einfach nur hässlich finde, aber so ist es halt, es ist halt, wenn man HTML in JavaScript
macht anstelle von JavaScript in HTML, dann sieht es halt so aus, Index TS, ok nice, Meta,
das ist der Header, Style, Modules, Alter wie viele Dateien sind das denn, Types haben
wir noch, ok und dann haben wir noch was für Dinge, Browser List RC, Kein Schimmer was
es mir sagen will, Editor Config ok das kenne ich, ESLint Ignore ok, ESLint JS, Git Ignore
File ok, das kenne ich, NPM RC alles klar, Babel Conf JS, eine License ist auch mit dabei,
sehr nett, Package JSON, NPM Log, Readme Rollup Conf und TS Config JSON, also ich muss euch
ehrlich gestehen, ich finde es etwas overkill, dass ich ein Projekt Scaffolden muss für
ein Button in einer Webseite einfügen, was 15 verschiedene Config Dateien braucht, ich
glaube wir werden das einfach sein lassen, werden das einfach sein lassen und wir playen
bei unserem normalen Skript, fertig, Web Server starten, gut ist, das ist doch schon, das ist
schon sehr bloated, ok Update geht noch, ok dann machen wir mal weiter, öffnen wir mal
die Webseite, schieben wir unseren Editor hier rüber, können wir übrigens ein bisschen
kleiner machen hier, hier brauchen wir nicht so viel, reicht da wenn wir das hier sehen
so weit, ok also was ich bis jetzt gemacht habe ist folgendes, ich habe einen, ich fange
mal unten an, ich muss das vielleicht ein bisschen auslagern, weil das schon sehr unübersichtlich
ist hier an der Stelle, jetzt auch schon, also ich mache aktuell relativ easy noch alles,
ich gucke ob diese Leiste hier oben geladen ist und wenn diese Leiste geladen ist dann
füre ich die Funktion, also Rest muss man jetzt nicht im Detail so angucken, dann füre
ich die Funktion addButton aus und addButton macht nichts anderes wie ein Button HTML zu
erzeugen und an die Toolbar anzuhängen, sodass dieser Button hier hinkommt und er hängt
einen EventListener dran, dass ich das Popup was dann kommt mit cancel oder mit dem x schließen
und fertig, mehr ist bis jetzt noch nicht passiert, aber wir sollten das, wir sollten
das vielleicht ein bisschen aufräumen, dass es nicht ganz so krass unübersichtlich ist,
mal gucken, schauen wir mal, also ich meine allein schon der Button hier ist ultra unübersichtlich,
aber wir müssen jetzt, wir müssen erstmal die Funktion, die Funktion einbauen, dass
das alles funktioniert, ok also WLAN, WLAN haben wir hier schon mal, das WLAN zum Auswahl
im Dropdown, das heißt wir müssen jetzt ein Formular erstellen quasi, die eine
Eindrückung ist immer noch bescheuert, naja gut wie willst du das großartig anders machen,
ich habe ja schon nur zwei Leerzeichen, wenn du es noch viel mehr einrückst ist ja irgendwie
gar nichts mehr da, was hier ist glaube ich verkehrt ok, also ich wüsste jetzt nicht
wie man das anders einrücken sollte, gut, ich wüsste ja erst mal kurz wieder reinkommen
wo wir stehen geblieben sind, Query Selector, wir fügen den Button ein, ok und das ist
das Button HTML, so ich werde jetzt erstmal alle IDs hier drinnen löschen, weil ich
denke, dass sich das mit der normalen Seite beißt, weil diesen Dialog habe ich kopiert
und den gibt es ja woanders schon und wenn irgendwelche IDs doppelt sind, ist das meistens
für die Funktion der Webseite nicht so geil, so haben wir sonst nichts mehr, ok das heißt
wir müssen jetzt als nächstes eine Form bauen würde ich sagen, also dass es hier
Buttons gibt, wir klauen uns das einfach mal von hier oder ne Moment, wir klauen uns das
nicht von hier, ich weiß wo wir uns das her klauen, wir klauen uns das von System, Users,
Create, hier klauen wir uns das einfach, hier easy, Inspekt, Input, das hier, das wird jetzt
einfach aus der HTML, das wird jetzt einfach geklaut, so, exellent, so Popup, Set Timeout
mal 500, dann sollte das Popup gleich mal Reload der Seite aufploppen, da ist es, kleiner
chinesen Move, da muss man aber echt sagen, mittlerweile kriegst du bei AliExpress echt
coole Sachen, die gar nicht mal unbedingt geklaut sind, die sind da mittlerweile viel besser,
ich mein klar viele Sachen sind immer noch geklaut, so also wie machen wir denn jetzt
hier ein ordentliches Formular draus, so Select, oh was ist das hier, Select, Input, If, ID,
username kommt schon mal weg, das brauchen wir nicht, das machen wir 10 einfach nur weil
das da oben auch 10 ist, jetzt gucken wir mal ob wir da ein Formular drin haben, ok das
sieht halt mal richtig beschissen aus mein Formular, ah da fehlt noch was oder, da fehlt
noch ein Span davor, nee wait a minute, Sekunde, das ist falsch was ich hier mache, da ist
irgendwas, irgendwas ist da, irgendwas ist da grundsätzlich verkehrt, irgendwas ist
da, irgendwas ist da verkehrt, Bildname, muss ich da noch sowas davor machen, oh schon besser
aber wirklich gut ist es nicht oder, egal das muss ich mal woanders abgucken, das war anscheinend
doch nicht so das, gucken wir uns jetzt mal im Generate Dialog ab, wie sieht denn das
da aus, hier, Class, ah Row, Row, ach guck mal da, Row, Copy, Outer, HTML, ok, ok, ok
nice, aber das mal weg, machen das hier hin, das ist natürlich total kacke formatiert
aber ok, da haben wir das Span, Numbers to Create, das ist egal wie wir das nennen, Kackel,
ah da haben wir ein schließendes Diff, haben wir ein öffnendes Diff, ein Input und zwei
mal geschlossenes Diff, so schauen wir mal wie das jetzt aussieht, ob das jetzt besser
ist, ja das ist besser, das da oben muss bloß auch die Einrückung haben, das heißt wir
müssen den ganzen Shit den wir hier haben einfach noch mal kopieren und die Einrückung
mal wieder abfacken und ich jetzt nicht mehr weiß wohin ich was einrücken muss, so, echt
ich hab's an der falschen Stelle eingefügt, wo dann, ah ich hab's in der Row eingefügt,
ah Moment, Moment, Moment, was hab ich da gemacht, es ist PPGastellz wo ich das eingefügt
hab, du hast Recht, ist falsch wo ich das eingefügt hab, muss das, äh, Alter HTML
please, ich muss es da, nee danach einfügen, hier muss ich's einfügen, hier, hier oder,
jetzt ist es richtig glaube ich, ah ja, das ist doch schon mal besser, das ist doch schon
mal nice, so jetzt ist das alles auch schön untereinander, kann man das wenigstens, kann
man das wenigstens ordentlich erkennen, ok, Row, also nennen wir mal User, User soll das
heißen, Type Text, ok, ja, ja ok, das ergibt irgendwie Sinn und dann als nächstes wollen
wir haben Password, also nennen wir mal User, Password, ja das sieht auch schon mal ganz
ok aus, so Value soll allerdings nicht 5 sein, es soll aber beiden nicht Value 5 sein, sondern
es soll eigentlich, eigentlich leer sein, oh ok, kann ich mitleben, vielleicht soll
ich noch Autocomplete und so, ah nee, ach ich hab jetzt gar kein Autocomplete für HTML
hier, boah das ist ja eklig, ich glaube es ist Autocomplete gleich off oder so, dass es
nicht auf die Idee kommt hier irgendwas einzufügen, so aber das sieht doch jetzt schon mal, ich
mein feintunen können wir das immer noch, das sieht doch jetzt schon mal ganz brauchbar
aus, add DPSK, Neo vimconf irgendwann demnächst, wir haben ja noch einige Themen am Start, ok
jetzt kann ich irgendwas einhören, bla bla bla, bla bla bla, generate und ich kann schließen,
ok nice, das heißt vom, also vom UI her passt das eigentlich, ich nenn das mal nicht generate,
ich nenn das mal, ich brech das hier mal um an der Stelle, dass ich ja noch was erkenne,
cancel und das hier nennen wir einfach mal save, ok schick schick, jetzt kann ich irgendwas
eintragen, bla bla bla, bla bla bla, damit ich die Werte nachher wieder rauskriege, brauchen
die Dinger, die Inputs wahrscheinlich noch eine ID, äh übrigens, soll ich Input Text
oder Input Passwort machen, ich mach mal Input Text, man will ja sehen was man tippt, wäre
da Create nicht geiler, doch du hast recht, doch, ja, hast recht, Pifat Chat, der IQ der
Prime Subs, einfach way too smart, wie kannst du das denn in die bestehende Webseite importieren
mit einem Browser Addon, das ist sowas wie Temper Monkey plus ein Fork des Forks vom
Vater des Forks, kann man Custom Scripts in den Webseiten ausführen mit, Yep Fork, Leute
Yep Fork wäre ein gutes Emote oder, ich weiß nicht genau wie es aussehen, wie es aussehen
sollte, machen wir mal ein Textdatei, Emotes, Yep Fork, mal gucken was die Designer daraus
machen können, so wir müssen den Inputs mal ID's geben, so, das hier ist, oh, hab ich
irgendwie sinnvolles, sinnvolles Namensschema für den Gramm schon, wie hab ich das hier
unten dran, Custom DPSK Button Cancel, ok, dann heißt das Ding hier jetzt, dann gibt
es ein Custom DPSK Button, ein Custom DPSK Button Cancel, boah die Benamung ist ja jetzt
schon richtig hängen geblieben von mir, das Ding heißt nicht Custom DPSK Button, das Ding
heißt Custom, Benamen von Dingern ist schwierig, Yep Fork, das find ich nice, das ist die Mode,
das ist das Problem wenn man so, wenn man Plain Javascript macht, man muss es ein bisschen
übersichtlich machen, das bringt man selbst nicht mehr durch, so Custom DPSK Button, ja
das können wir noch nehmen, Custom Add DPSK Button, da weiß man doch schon mal was es
ist, so, und das ist Custom, nee, DPSK Add Button, da ist nämlich der Präfix immer der
gleiche, Custom DPSK Dialog Button Cancel, so, alles klar, jetzt kann ich mir da ein bisschen
was drunter vorstellen, ich hoffe es funktioniert noch alles, so, jetzt brauchen die Inputs,
jetzt brauchen die Inputs IDs, dass ich das später wieder auslesen kann, also, Custom
DPSK, nee nicht die Buttons, was mach ich denn, die Inputs, nicht die Buttons, hier
Input, ID gleich, gibt es irgendwas anderes wie ich da drauf referenzieren kann, ich glaub
nicht, ich glaub mit einer ID ist es tatsächlich nicht einfach, Custom DPSK, Input, Input, Passwort
und das ist ID, Input, User, gib doch deinem Formular eine ID und den Inputs dann ein Name
Attribute, und dann kann ich, aber da kann ich trotzdem nicht drauf zugreifen, oder,
weil ich muss ja nicht später das Value über JavaScript auslesen können, ich muss ja dann
später sowas hier irgendwie machen, Document, Get Element, Buy ID, bla bla Input Value und
das geht ja mit Form nicht, oder doch, gibt es die Möglichkeit aus einem Form Input mit
JavaScript was gescheites auszulesen, kann man ja mal ausprobieren, du kannst dann Query
Selector Form ID Input Name gleich, oh Hi IQ Shit, das machen wir jetzt, das machen wir
jetzt, Poggers, ok, Moment, ich hab gar keine Form sehe ich hier gerade, es gibt gar keine
Form da drum herum, das sieht das ganze irgendwie nicht, nicht vor, ich meine ich kann ja da
einfach einen Form Dialog drum machen, kann ich einfach hier sagen, Form, Form, vielleicht
sogar anstelle dem Diff, anstelle dem Diff einfach ein Form, ups, vielleicht geht das
was, mal gucken ob das jetzt gescheit noch aussieht, ja, ok, so und was jetzt, und jetzt
sage ich einfach Name, Name gleich Passwort, Name gleich User, so und da bin ich jetzt
mal gespannt, ok, tragen wir mal irgendwas ein hier, egal was da drin steht, jetzt gebe
ich der Form noch eine ID, ID gleich Kasse, Dialog, Form, so und das heißt, ok nur noch
dass ich das jetzt richtig verstehe, das heißt ich kann jetzt, nachdem ich das hier angehängt
hab, kann ich dann quasi sagen, Document, Get Element by ID, Custom DPSK Dialog Form,
schau dir mal Formdata an, Formdata kenn ich, das ist eine Klasse in JavaScript, aber jetzt
ich muss ja das Form irgendwie zu Formdata konvertieren, wobei ich brauch gar kein Formdata
in der Form, ich muss das ja als CSV machen, weil nur CSV geschluckt wird von dieser Oberfläche
zum Erstellen von Usern, ok, du kannst dann Query Selector Form ID Input, also das heißt
ich kann dann quasi sowas sagen, Input, man lernt ja was ja JavaScript Sachen angeht
aus, Name gleich User, hab ich das auch so genannt, Name gleich User, das funktioniert
jetzt so, ok, gucken wir mal, achso vielleicht soll ich das noch ausgeben, 0, ach Query Selector,
achja, ok logisch, logisch, ok, das kenn ich nicht, das ist natürlich ganz nützlich,
dann muss man sich nicht für alles super krass viele IDs aus den Fingern saugen, das
finde ich gut, das hat was, finde ich schon mal nice, so aber zum Thema Formdata kann
ich jetzt, also das ist ja Form hier, so gibt es sowas, Data oder so dann für Forms, ne
natürlich nicht, JS Form Data, From Form, heißt das Form Data oder, also wie kann ich
aus einem bestehenden Form, achso, verstehe, verstehe, also sowas hier, New Form Data,
sowas hier in der Richtung, aber doof ist es trotzdem, ich kann jetzt sicherlich nicht
einfach sagen User oder, ne, das ist ja wieder kacke, und wie greift man da jetzt, wie greift
man da jetzt drauf zu, Form Data, append Entries, get muss ich machen, da weiß ich ehrlich gesagt
gar nicht was ich jetzt besser finde, da erscheint mir das mit Form Data vielleicht ein bisschen
Overkill zu sein, an der Stelle, aber bei ist egal, ne, wir lassen es mal so wie es vorher
war, ich finde das hier eigentlich gar nicht, das was der, was der Feuder vorgeschlagen
hat fand ich gar nicht so übel, aber soweit sind wir ja noch gar nicht, so wir haben jetzt
erstmal die Form gebaut, und jetzt ist die große Preisfrage, wie kriegen wir die Daten
aus der Form an den Access Point geschickt, das ist ja tatsächlich gar nicht so easy,
ich schreibe jetzt da einfach mal was rein, was ist, was ist ja, im Endeffekt muss ich
ja jedes mal von Anfang an was reinschreiben, also, schreibe ich so Value Omega 0 User und
Passwort ist das da, irgendwas, nicht dass wir es brauchen würden, und wie pushe ich
das jetzt an den Access Point, mal kurz was gucken Leute, mal auf der Wetterkarte gucken
ob es gutes Wetter wird, sollte nämlich gleich ganz gutes Wetter geben, naja, sonnig, wolkig
gemixt, so ab 15 Uhr wird es, 15, 15, 15, 15, 30 wird es ganz gut, so, so wie kriege
ich das, moin Chandler, so also wie kriege ich das, wie kriege ich das an den Access
Point geschickt, ich weiß prinzipiell wie es geht, weil ich habe das schonmal für
ein CLI Tool gemacht, glaube aber wir haben das hier nicht mehr, haben wir das CLI Tool
noch, vielleicht in der alten VM, mal gucken, jaja, vielleicht in der alten VM ist es noch
drinne, wenn wir Glück haben, hallo, please, please starten, ah guck mal da, das hätte
ich jetzt nicht gedacht, dass ich das noch finde, ja ok, das war fake, fake shit, fake
login shit, wieder leaked, wieder leaked Leute, schon wieder leaked man, so viel leaked überall,
so und was habe ich jetzt hier gemacht, api, list user, create user, ja da steht drinne
wie das mit create user geht, also man braucht Form, man braucht Form Data, die irgendwie
so eingerichtet ist, und dann muss man das ganze an, admin upload request, ach du scheiße
wie baue ich denn das jetzt nach man, wie soll denn das funktionieren, ok ich glaube
wir schneiden einfach wirklich im Browser mit, machen wir nochmal einen anderen Schritt
davor, wir tun mal so als wüssten wir was wir machen, also als erstes brauchen wir doch
jetzt hier, wenn ich das uploaden will, als erstes brauchen wir hier Username, Passwort
und dann muss ich ja auch mal den Input checken, ob das irgendwie Sinn ergibt, also ich muss
gucken ob der Input lang genug ist und ob der Input commerce enthält, weil commerce darf
der Input nicht enthalten, dann geht kein csv, solche, solche, also ok machen wir mal
sowas, moment aber das soll der ja erst beim speichern machen, das muss ich ja erst mal,
also wenn ich auf create klicke, so on click, ach ne das geht jetzt ja nicht, weil das ja
eigentlich nur ein Format String ist hier oben, also brauche ich sowas hier, query selector,
wie heißt der Button, der Button braucht irgendeine ID, ich blick jetzt schon immer durch hier,
der button braucht eine ID, so der create button braucht eine ID und zwar ID gleich
custom dpsk button create, so query selector, custom dpsk button, wobei ich das hier aus
dem diff holen kann, query selector, diff, so und jetzt click, ne on click heißt ne, on
click gleich, ok so, also wenn ich jetzt hier auf create drücke, muss da versuchen das abzuschicken,
so das hier ist let, na guck mal const, const, user name, oder ist einfach mal user, value
und das da ist password, aus dem password input auslesen, wenn ich da drauf klicke,
so und jetzt lasst mal in mich gehen, jetzt müssen wir irgendwie schauen, ja jetzt müsste
ich jetzt an der Stelle pushen, aber bevor ich es pushe sollte ich vielleicht erstmal
mein input noch validaten, ob das sinnvoll ist, ok machen wir das doch mal, Leute wir
lagern das mal kurz aus, das wird mir zu unübersichtlich hier, ich nehm das hier mal, brauche ich da
irgendwelche Variablen aktuell, nö, noch nicht, aber bald, machen wir mal ne function,
wie nennen wir das Ding dann hier, get dialog atml, so wunderbar, return, so da kann ich
das jetzt nämlich ausplanten und es geht mir nicht mehr auf den sack, wunderbar, mal
gucken ob noch alles funktioniert, natürlich, natürlich ist es broken jetzt, diff selector
ist null, ja geil, nice, gg, warum ist das null, ich legs doch hier oben an, ach ne ich
setz das aber erst hier, alter ist das abartig oder wie, das können wir uns übrigens auch
sparen, das können wir direkt hier reinschreiben, so, macht man eigentlich bei javascript noch
nen semi-colon hinten dran oder nicht, ist das noch meta-semi-colons zu machen, so jetzt
machen wir noch ne funktion, nachdem wir das jetzt ausgelagert haben und wieder halbwegs
durchblicken, function, nennen wir mal validate input und das kriegt ein user und ein password
übergeben, so und jetzt müssen wir uns mal kurz überlegen, was wir für fälle haben,
die wir abfackeln wollen, so also das erste ist schonmal if, wenn user null ist oder wenn
password null ist oder leer ist, ich geh davon aus, dass null und empty in dem fall von javascript
gleich gehandhabt werden, wirklich sicher bin ich mir da nicht, dann geben wir ne fehlermeldung
zurück, die wir dann einplatten können, also sowas wie return user and password cannot
be empty, wenn man richtig schreiben könnte wäre noch nice, so was haben wir als nächstes
für nen fall, der nächste fall ist, dass die null, ne wobei null haben wir oben ja auch
schon gecheckt, dass sie ein comma enthalten, comma dürfen sie auch nicht enthalten, user
contains, obei ist es contains, js string contains, includes selbstverständlich, includes,
was auch sonst, übrigens in ruby ist die einzige sprache, die ich kenne und ich fand
das in ruby immer cool, wo man fragezeichen für sowas verwenden kann, includes fragezeichen,
ich fand das macht noch ein bisschen sprechbarer, aussprechbarer oder besser lesbar, sprechender,
includes ein comma oder password includes ein comma, das ist ganz böse, darf kein
comma haben, wir kopieren uns das einfach, cannot contain comma und als letzten fall
würde ich sagen, checken wir noch, password length kleiner 24, so und dann irgendwie, password
must be greater than, kann man das immer nicht merken, ich glaube es ist so, jett wer ist
higher que und weiß das, ich glaube es ist mit a, das eine ist quasi if then und das
andere ist greater than, ok mit a, wenn ihr das sagt, jett hat ja bekanntlichermaßen
immer recht, was sowas angeht, ich glaube euch das jetzt einfach, so validate input
brauchen wir jetzt hier, const username, also machen wir sowas wie hier if, nehmen wir mal
einfach, let validation result, das klingt ja schon ein bisschen nach c sharp, aber warum
nicht, input user password, so if validation result ungleich null oder einfach irgendwas,
kann man auch so machen, dann machen wir mal ein alert, alert validation result, das kann
man bestimmt einfacher schreiben, gibt es die möglichkeit, higher que java script, gibt
es die möglichkeit, also in c sharp könnte ich sowas machen, guck mal, ich schreibe es
mal in das c sharp schreibweise, aber ich bin mir nicht, in c sharp könnte ich sowas
machen, is result oder is string result, sowas, is var result, könnte ich sogar sagen, dann
könnte ich unten result benutzen, ohne dass ich extra variable brauche davor, aber ich
gehe mal davon aus, sowas gibt es in java script nicht, alert, ok heißt im endeffekt,
wenn ich das jetzt richtig gemacht habe, sollte der meckern, wenn das leer ist, ok create,
wie das hat, das hat jetzt einfach so funktioniert, ok comma, so hätte ich jetzt nicht gedacht,
dass das geht, aber nice, ich würde mich ja nicht beschweren, dass was funktioniert,
yep cock, so und jetzt machen wir nochmal ein passwort, was zu kurz ist, es geht einfach,
achso vielleicht sollten wir anstatt, das ist auch noch was, vielleicht sollten wir
anstatt einem error alert hier oben ein error anzeigen, vielleicht gar nicht so übel oder,
das klauen wir uns nochmal, wir machen die china chinesen taktik, wir klauen das einfach
aus dem generate dialog, der auch irgendwo fehler anzeigen kann, sekunde, ich mach das
mal ein bisschen größer, lass mich mal was erkennen, irgendwo kann der fehler anzeigen,
hier, nee, error da, dpsk error, das kopieren wir uns jetzt, alter html, das kopieren wir
uns jetzt und gucken mal, wenn wir das in unseren eigenen dialog rein kriegen, dass wir eine
error anzeige haben, boah sieht das kacke aus, wo war das jetzt nochmal hier oben irgendwo,
ne, display none, nein nein nein, nicht display none, ich will es ja anzeigen lassen, ok,
das ist gar nicht mal so übel, wenn das da oben angezeigt wird direkt so, id, dialog,
error, auch standardmäßig ist das leer, wo ist denn das bei dem offiziellen formular,
wo ist denn das da drinnen, generate, kurz gucken, wo ist der error hier nochmal, head,
nee, hier, batch dpsk form, da haben wir es ja, da habe ich es ja auch, nee warte, ich
glaube, hier drinnen ist es, ne, ja, wir gucken, wie es aussieht, nicht schlecht, kann man
denke ich so lassen, so, dann gibt es natürlich standardmäßig kein, ups, gibt es natürlich
standardmäßig kein text, kein text, so heißt es im endeffekt, anstatt sind alert, können
wir doch jetzt einfach an der stelle einplenden, also können wir quasi sagen, if, alert, document,
das nervt mich wirklich hier, get element by id, da kommt es wirklich auf die 1995,
so und wie heißt das ding, custom, was, hallo, warum gibt es das, warum gibt es das nicht
zur auswahl, error, ups, error, geht doch, einfach pepega visual studio code autocomplete,
so jetzt ist natürlich die frage, wie setzt man denn bei nem p den text, gibt es da sowas
wie text, validation result, keine ahnung, wie das funktioniert, gibt es da text, nö,
auch inner html, text, content, wobei inner html ist es gleich, ne, das funktioniert nicht,
inner html, das funktion, element ist 0, achso ich muss ja auch diff machen, nicht document,
wobei, das müsste beides funktionieren, muss da ein, müsste doch beides funktionieren,
query selector, achso ja, weil get element by id, das ding, ok, ok, jaja, ja, ja, ne,
aber jetzt so müsste es funktionieren, so, machen wir ein comma rein, user and pest cannot
contain comma, also wenn das nicht high IQ Error Handling ist, weiß ich auch nicht,
machen wir noch, machen wir noch mal, machen wir noch mal einen Punkt dahinter, sind wir
mal nett, oh, mal da, funktioniert das sogar, oh, hab ich ein comma drin, sagt, da kann
auch kein comma enthalten, cannot be empty, so und wenn das hier zu kurz ist, sagt er
mir, excellent, massive, 5 fat Error Handling, so, das ist schick, das gefällt, ja, das ist
nice, so muss das sein, so, jetzt haben wir, jetzt haben wir die kosmetische, die kosmetische
Sache erledigt, so siehts übrigens aus ohne Darkreader, also alles, alles gut, so, jetzt
ist natürlich immer noch die preisfrage, wie kriege ich den ganzen Mist an Server geschickt,
also ich hab jetzt meinen Input schon mal validated, also ja auch schon mal nett verkehrt und jetzt
muss ich gucken, wie das funktioniert, wenn ich das von Hand uploade, also, Network, jetzt
laden wir mal was hoch, wir hatten doch vorhin schon was, wir schneiden das einmal mit und
gucken uns an, wie das aussieht, also, Dynamic DPSK, Generate, Browse, Upload, okay, Upload,
das brauchen wir jetzt, das brauchen wir jetzt hier, Requests, aah, aha, aha, aha, aha,
aha, aha, da braucht es, das geht direkt hier im Browser sogar schon, guck mal, man kann
einfach sagen, Copy as Fetch, kannst du sagen, oh, da macht da aber kein Formdata draus,
ist aber trotzdem nicht verkehrt, okay, also, dann probieren wir das doch mal aus, so, Fetch,
Await geht schon mal nicht, logisch, dass Await nicht geht, das können wir wegmachen,
das ist Upload, Await geht nicht, weil es nicht Async ist, wo mache ich, schau, Dialog,
hier, Async, Await, ach Moment, ja, und weil das eigentlich auch egal ist, weil da kommt
ja danach nichts mehr, okay, also, Async, muss ich das machen, dann passt, wie, jetzt
gehts wieder nicht, ach, das ist ja auch ein Callback, Alter, JavaScript, please, so, Await,
bla, bla, bla, bla, also, das können wir uns alles schon mal sparen, denke ich, okay,
das hier wird noch interessant, das muss man wahrscheinlich bei jedem Request eingeben,
ist noch die Frage, wo ich das her bekomme, viel interessanter ist, wie kriege ich denn
mein Formdata generiert, wie kriege ich denn dieses Formdata Zeug generiert, Moment, was
war das hier, Formdata, also, let Formdata gleich new Formdata, so, das ist schon mal
klar, dass ich sowas hier brauche an der Stelle, so, allerdings nicht aus dem Formelement,
aber wir können uns hier unten hier angucken, wie das aussieht, Content-Type kann ich weglassen,
das kann ich wahrscheinlich alles ignoren, Frage ist jetzt nur, wie ich das da hochladen
kann, okay, Formdate, das lasse ich jetzt einfach mal so stehen, Referrer brauchen wir
nicht, MethodPost brauchen wir auch nicht, glaube ich zumindest noch, also, was ist denn
da jetzt drinnen in dem Formdata Zeug, also, wie muss ich das jetzt erstellen, also, wir
haben dort drinnen, einmal, wir haben Formdata drinnen mit dem Namen u und einem Filename,
okay, also, brauche ich jetzt sowas, wie, ich mache jetzt mal irgendwas, Append, Name,
Value, String, äh, nee, Name, Value, Filename, Name ist u, Value ist keckel, irgendwas, weiß
ich noch nicht so genau, und Filename ist dann, ja, das hier im Endeffekt, so, egal wie das
heißt, Batch.pxk.sample.csv, okay, so, also, das ist da drinnen, das haben wir doch jetzt
schon mal abgefackelt, okay, dann kommt noch was neues rein, dann kommt noch was neues
rein, Text, Text.csv, das heißt, ich muss jetzt den Data Type da irgendwie noch mal drinnen
setzen, Form, das mache ich doch hier in dem.NET Programm, wo ich das schon mal nachgebaut
habe, auch, da kann ich jetzt mal abgucken, so, was mache ich denn hier, ich blicke da
überhaupt nicht mehr durch, was ich hier gemacht habe, String, hier, String Content.csv.utf8,
Media Type Text.csv, ach, du kacke Mann, wie kriege ich denn das jetzt hin, Append, so,
das Ding heißt gar nichts, irgendwie, ah, nee, Moment, an der Stelle muss ich doch das
.csv schon setzen, oder, das ist doch der Inhalt von dem hier, ich brauche da gar nichts
Neues, boah, das ist ja abfuck, okay, hier, da muss nicht Kackel rein, da muss das.csv
rein, okay, mein.csv sieht folgendermaßen aus, alter, mein.csv sieht folgendermaßen
aus, also, als erstes der Username, dann, vielleicht hat es noch irgendjemand im Kopf,
es war Username, Mac, WLAN und dann Passwort, oder, ich hoffe, das stimmt, Passwort, machen
wir mal ne Newline, weiß nie, wir schauen einfach mal kurz nach, ähm, Batch DPSK Sample 2,
ja, ja, ja, ist es, was Zeile, du kannst so viel fragen, wie du willst, was das hier
macht, das legt ein neues Formdata Objekt an, also, ich bin jetzt auch nicht der krasse
JavaScript-Checker, ja, das legt ein neues Formdata Objekt an, das kann man dann später
an die Webseite schicken.
Hab gestern meinen Vertrag als C++ Embed-Entwickler unterschrieben und das, obwohl ich als Fachinformatiker
für Systemintegration in der Ausbildung bin, ich bin so froh, dass ich jetzt durch, doch
in die Richtung gehen kann, obwohl ich jetzt aus heutiger Sicht falsche Ausbildung gemacht
habe, na ja, falsche Ausbildung ist ja letztendlich alles Schall und Rauch, solange du Ahnung
von dem Thema hast, viele gucken sicherlich drauf, dass du eine Ausbildung hast, aber wenn
du dich in dem Bereich auskennst, ich würde auch lieber jemand nehmen, der eine Physi-Ausbildung
gemacht hat und ein bisschen weiß, wie es im Enterprise-Business-Sektor läuft, anstatt
jemand, der komplett Quereinsteiger ist.
Wolltest du das WLAN nicht auch auswählbar machen?
Doch, das mache ich aber zum Schluss, weil da muss ich immer so viel klicken, bevor
er die WLANs runterlädt und jetzt kann ich aktuell einfach nur die Seite neu laden und
mein Formular ist da.
So, Form Data Append, wie setzt man, okay, wir brauchen nochmal ein weiteres Fenster,
das ich im Fullscreen googeln kann, diesen reagieren Knopf, den gibt es erst seit einem
Monat oder so, auf jeden Fall noch nicht so lang, noch nicht so lang, okay, nach was wollte
ich jetzt suchen, genau, Form Data Set Content Type, genau das, wir könnten auch mal, Leute,
wir fragen was, ich habe doch gestern gesagt, ich habe auf Hacker News so eine coole Fint.com,
ist das glaube ich, eine Suchmaschine für so Kommando-Zeilenbefehle und sonstigen Sachen
gefunden, mal gucken, wie schlau die ist, ob die sowas rauskriegt, was ich wissen will,
Form Data Set Content Type, gucken was die dazu sagt, Alter, das ist ja noch geschwätziger
als Chat-GPT, okay, hat aber keine Ahnung von dem was ich will, sehr gut, exellent, bringt
ja schon mal gar nichts, kann GitHub Code Pilot was dazu sagen, auch nicht, ich habe
Bing User, ich habe keinen Bing GPT User hier, okay, also müssen wir Stack Overflow einfach
fragen, Composing Multi-Part Form Data with Different Content Type, ja genau, das will
ich machen, muss Content Type nicht in die Headers, nee, Content Type geht auch für jedes
einzelne Feld von einer Form, weil du kannst ja in der Form beispielsweise ein Bild anhängen,
Text anhängen, CSV anhängen, gibt ja verschiedene Sachen, nee, nee, das kann man pro Form Entries
setzen, mal gucken wie das geht, According to the Document, Leute, wer liest denn sowas,
Grinch, Alter, New Blob, was, okay, Moment, wie jetzt, New Blob,
Hä, und jetzt ein Array, was auch immer, was auch immer, und dann Type oder wie, tatsächlich,
Fuck, was war das Text, XML, ich habe jetzt nicht aufgepasst, ah, ich noob, ich habe den
Upload nicht mehr, was war das Text, XML, Text, CSV, nicht Text, XML, Text, CSV, muss
es sein, okay, alles klar, Fragezeichen, ich printe das mal, mal gucken was der macht,
Form Data, achso, kann man Form Data konvertieren zu, okay, mal schauen, mal schauen was da jetzt
drin steht, create, nice, Leute, ich blick nicht durch, warum, woher kommt denn jetzt
bitte schön Object Promise, ah, ich noob, weil ich da Async davor geschrieben habe,
warum mache ich denn sowas, create, okay, also was ist da jetzt drin, Form Data, Entries,
Null, es ist ein File drinnen mit dem Namen, Batch DPS, Late Modified, Values, File, okay,
mehr kann man sich nicht angucken, alles klar, wir machen einfach mal einen Fetch, wir machen
einfach mal einen Fetch mit dem Zeug drinnen, was braucht man sonst, das muss ich mir mal
kurz speichern, das brauchen wir gleich noch, so Form Data Append, Form Data, okay, ja ja,
vielleicht soll ich das drinnen lassen, oder doch, okay, gucken wir mal, ob der irgendwie
jetzt was macht, was so halbwegs aussieht wie das was wir brauchen, create, upload, okay,
es hat nicht funktioniert, aber es sieht schon mal gut aus, es sieht schon mal so aus wie
das was wir haben wollen, nur dass ein bisschen was fehlt, ja, also, Name, File Name, Content
Type, Octet Stream, ne, achso, ne, warum Object, ich bin verwirrt, wie macht man das denn richtig
jetzt, warum ist das, warum ist das Object, sollte, sollte Fetch, sollte Fetch daraus
nicht jetzt einen ordentlichen Request machen, sodass dann auch hier Content, Content Type,
äh, Alter, man, Java Skip, wer soll den Scheiß checken, upload, wo kommt denn das her, Object,
ne, Resturlaub ist doch nicht, ah, das hab ich falsch gemacht, oder, ich hab das, aha,
ich hab das hier mit reingepackt, da muss es hin, obviously zu erkennen natürlich, create,
upload, ah, das sieht besser aus, aber die Response stimmt immer noch nicht, aber das
ist okay, das sieht richtig aus, so, was brauchen wir jetzt als nächstes, logisch, ne, hat
jeder sofort gesehen, nur ich nicht, no cup, so, was muss denn jetzt noch rein, also, CSV,
was haben wir drin stehen, als nächstes kommt noch, okay, kommt noch mehr, Form Data, Form
Data Append, und da gibt's jetzt was, was Request Type heißt, warum auch immer, mit
dem Value XHR, alles klar, ich copy paste mir das als einfach nur, und dann kommt noch was,
was sich Action nennt, mit dem Wert Upload, Patch, DPSK, obviously, alles klar, Moment,
das N darf da nicht rein, so, und danach kommt noch was, das sich nennt Callback, was auch
immer das macht, Uploader, Patch, Upload, DPSK, okay, logisch, logisch, sollte jedem
klar sein, warum das da drin steht, Create, Upload, Leute, ich muss sagen, das sieht erstaunlich
gut aus, wie, es hat jetzt funktioniert, das ging, es hat funktioniert, easy, der Upload
hat funktioniert, okay, schauen wir mal, Service, ach so, ich hab ja noch nicht generatet, ich
habe es noch nicht generatet, da kann es noch nicht funktionieren, das muss ich ja auch
noch, das muss ich ja auch noch schicken, die Anfrage zum generieren, die Frage ist,
geht das auch noch, wenn ich das hier wegmache, wahrscheinlich nicht, Moin Fips, Create, Post,
ne, das geht nicht, fuck, wo kriege ich denn das her, wo, hat irgendjemand ne glorreiche
Idee, also irgendwo, auf der Seite muss es ja gesetzt sein, in den ihren Request steht
es ja auch drin, ne, aber Metatag, check mal, ob sich das jedes Mal ändert, das wird
wahrscheinlich Procession sein, oder, wo sieht man das überhaupt, hier irgendwo, oder,
oder auch nicht, warum steht denn das hier nicht in den Headers drin, ach so, das steht
nicht in den Headers, ich bin ja dumm, das ist ja mein Upload, kein Wunder, dass das
nicht in den Headers drin steht, ich muss den Upload mir hier angucken, den funktionierenden
Upload muss ich mir angucken, Bros, hier Upload, so, FC, ok, das ist das gleiche, aber das
wird sich, das wird sich doch ändern, oder, äh, Logout, oder so, vielleicht, ah, hier
um Logout, ok, Login, ja, geh weg, Admin, Services, DPSK, Generate, Upload, zack, ok,
Upload, ja, es ändert sich, es ändert sich, ok, Base, obviously, alles klar, da weiß
man noch mal direkt Bescheid, wenn man das so sieht, aber das ist der Stack Tracer, der
Stack Tracer bringt mir jetzt nicht allzu viel, da weiß ich nicht, wo das herkommt,
du meinst Meta-Tag, Nopaz, aha, was ist das, was ist das, CSRF, CSRF CID, da, da vielleicht,
ne, aber da ist es doch, da ist es doch, da ist es, CSRF, CSRF CID Form, da kann man
es als Value auslesen, das hat aber auch schon ein bisschen Abad, wartet mal Leute, das machen
wir mal anders, wir lassen uns mal, wo speichert man dann, jetzt hab ich euch letztens schon,
oder vielleicht steht das auch sonst irgendwo hier drinnen, CS, ach hier stehts auch noch
mal, guck mal, CSRF Talken, ist das global, ist das global, und auf dem Window Element
setzen das noch mal, ok, ich hab 3000 Varianten das auszulesen, easy, eats, eats af, log,
probieren wir mal das, ob das geht, da ist es, man braucht es doch nicht mal auf Windows,
es ist global, es ist global gespeichert, nice, dann hat sich das auch schon mal erledigt,
da ist es einfach, CSRF Talken, fertig, gutes, äh, ups, create, yep, hat funktioniert, ok,
der Upload geht, jetzt ist die nächste Frage, wie sieht das mit dem Generate aus, das muss
ich auch noch mal mitschneiden, also, Service, Dynamic PSK, Generate, Upload, soweit funktioniert
es schon, äh, Generate, was macht der beim Generate, hier, hier müssen wir mal schnell,
schnell checken, ja, so, Upload hat er gemacht, CMD, CMD Checkability, aah, was ist das, XML,
XML in, in, Jason, in Javascript, in, packe man, wer hat denn dieses Interface wieder
designt, alter, was steht da drinnen, Ajax Request, ok, Ajax Request, Action, Doc, DocMD,
ok, das System Time können wir schon mal weglassen, Comp System, so, XCMD, ich muss das, ich muss
das mal ein bisschen, dass ich, dass ich hier irgendwie durchblicke, Batch, DPSK, Upload,
WLAN, WLAN Name, ne, das geht ja, die Infos hab ich ja alle, DPSK nennen, das krieg ich
auch aus dem, ok, das krieg ich auch aus dem Store, ok, beim nächsten OTA-Firmware-Update
wird dein Script eh wieder breaken, ne, wird's nicht, weil ich hab ein Kommando-Zeilen-Tool
gebaut dafür, vor eineinhalb Jahren oder vor einem Jahr, haben wir zusammen im Stream
gemacht, und das geht immer noch, und das macht auch solche, solche eklichen XML-Shit-Dinger,
das scheint relativ stable zu sein bei denen, und wenn, wenn's break, breaks halt, was willst
du machen?
Da, da, da steckste ja nicht drin, Gatchibuzz, ok, Fetch, jetzt machen wir das mit der Form,
das brauchen wir, wir brauchen also noch, ne, das machen wir nicht hier, das machen wir,
wir brauchen noch ein XML, XML, gleich, Template String, Request, eh, xcmd, alle, kann ich
mal, please, ok, das nächste ist TypeGAN, das muss dann aber hier hin, dass es irgendwie
halbwegs sinnig aussieht, TypeNumOne, genau, MaxNum, was auch immer, File, UploadBatchDPSK,
UploadBatch, ah, das ist wahrscheinlich das, wie's genannt wird, am Ende, hoffe ich mal,
nein, nein, nein, nein, mein Command Line Tool macht exakt das über die gleiche API,
wie ich's jetzt hier mache, weil die haben keine API, ich mach das nicht über SSH, ich
mach's exakt, also mein Command Line Tool macht's exakt über die gleiche Hütte Stelle,
jedoch das bei dem CSS, das kann natürlich sein, dass es irgendwie kaputt geht, dass
der Button da nicht richtig aligned ist oder so, ja, das könnte schon sein, aber die machen
sehr minimalistische Änderungen nur an ihrem UI, also die Chance, dass das weiter funktioniert,
ist glaube ich gar nicht mal so schön, RollID, ja, und was ich meine, was ist die Alternative,
die Alternative dazu ist, jedes Mal ewig rumzuklicken, kann man dann immer noch machen, wenn's kaputt
geht, rücken wir's mal so ein, und dann muss ich doch irgendwie noch das Ganze zu machen,
oder?
Muss ich das nicht noch schließen?
Ah, nee, Moment, ich könnte das ja theoretisch einfach hier schließen, so, jetzt haben wir
das XML zum Verschicken, okay, und wie sah jetzt der Request aus für das, nein, das
war der Request, oder?
Ja.
Use Fetch in Konsole, das ist viel zu viel Zeug hier, Mann, ah, fuck, das ist zu klein.
Was geht gerade ab?
Ich versuche immer noch mal im Access Point eigene User unterzuschieben.
Kann man das nicht irgendwie löschen mit Steuerung C, oder?
Jetzt brauchen wir ein Fetch, was das XML hochlädt, okay, Credentials Include brauchen wir nicht,
Header brauchen wir auch nicht, Header haben wir hier oben, im Prinzip, ah, okay, hier
brauchen wir jetzt, verstehe, hier brauchen wir jetzt noch Content Type, das haben wir
da oben schon mal nicht gebraucht, den anderen Krämpel können wir alles sein lassen, Referrer,
Body ist das XML, XML, Method Posts, okay, alles klar, wenn ich jetzt alles richtig gemacht
habe, sollte der unseren Custom User anlegen, jetzt bin ich mal gespannt, ob das funktioniert,
zack, Network, ja, Network, Create, Upload, hat funktioniert, Generate, hat auch funktioniert,
ist unser User jetzt da, unser User ist da, Omega, Omega Lul User, okay, das war's, das
hat funktioniert, nice, easy, easy, easy, easy, easy, easy, easy, easy, easy, easy, easy, easy,
alles schön Copy Pasted, okay, was nicht funktioniert, das müssen wir jetzt noch machen,
das ist auf jeden Fall noch nicht ganz so Five Head, alles, weil, machen wir mal kurz
hier das XML, tatsächlich da oben hin, ist eigentlich besser, da können wir nämlich
die zwei Fetch Requests direkt hintereinander machen, und zwar, das WLAN wird ja noch nicht
dynamisch ausgelesen, also ich brauche hier dpsklan, das kommt aus der WLAN-Config, ich
brauche die WLAN-ID und den WLAN-Name, das kommt alles aus der, ja, das kommt alles aus
der WLAN-Config, das heißt, wir brauchen noch sowas hier wie Function, Get, nennen wir's
mal Get, WLAN, es schneit und hagelt gerade übelst los, obwohl angeblich, wenn ich hier
auf die Karte gucke, soll demnächst Sonne scheinen, da habe ich so meine Zweifel, in
20 Minuten soll hier richtig krass Sonne scheinen, nicht so ganz, aber mal gucken, so, Generate
WLAN List, so, wie kriege ich das raus, das haben wir doch hier schon, wobei, wir können
es doch erstmal hier drinne machen, also, let's store, Window, Defaults, GetState, WLAN,
SVC, List, Data, alles klar, ich habe mir das nicht ausgedacht, das heißt halt nur mal
so bei denen, so, und jetzt muss ich mal Map, WLAN-Name, was mache ich denn hier für, das
ist doch syntaktisch, das ist doch komplett verkehrt, was ich hier mache, warum zeigt
es das denn überhaupt an, das ist doch komplett falsch, was ich hier mache, Return muss es
sein, an der Stelle, Return, so, so, und jetzt stimmt das hier nämlich auch nicht, so, also,
Name, WLAN-Name, ich hoffe das stimmt, was ich hier auslese das letzte Mal, ID, WLAN-ID,
DPSK-Links, ok, alles klar, ja, vielleicht sollten wir noch Enabled oder so rein machen,
Enabled, kannst du da Runde klammern dann ohne Return, ja, aber so ist doch, ok, Enabled,
WLAN, oh, das weiß ich jetzt aus dem Kopf nicht, WLAN, irgendwas, irgendwas, WLAN, Lock,
Storedata, da wird ihr jetzt sagen, gibt es nicht an der Stelle gleich, gleich gibt es
ein Fehler, vermute ich mal, ja, leeres Array, wenn ich kurz warte zwei Sekunden, ist es
dann geladen, oder drei Sekunden, oder vier Sekunden, ist es dann geladen, wahrscheinlich
nicht, oder, ne, es ist leer, aber wenn ich das hier anklicke, dann muss es auf jeden
Fall geladen werden, yep, nice, hier sind die WLAN-Infos, ok, heißt im Endeffekt, wo sehe
ich denn jetzt, ob das WLAN-Enabled ist, gibt es da sowas wie Enabled, Enabled-Type, Enabled-Type,
also aktuell ist es Disabled, das heißt, Disabled ist eins und Enabled ist wahrscheinlich, wahrscheinlich
Null, was auch immer, brauchen wir jetzt an der Stelle nicht, ok, dann nennen wir das
mal WLANs, das können wir übrigens, das können wir übrigens auslagern, get WLAN-List, sehr
schön, genau, da kommt es rein, das ist jetzt hier, return, let WLAN, get WLAN-List, gut,
so, also, jetzt mal kurz FIFAT-Time, ja, es geht nämlich kaputt, wenn es aufgeht, ich
habe nichts angeklickt da, ok, so, get WLAN-List, jetzt muss ich nämlich die WLANs noch automatisch
da reinschreiben, und das muss beim HTML, beim HTML muss das rein, also hier oben irgendwo
rein, unser HTML, hier WLANs, ok, Leute, jetzt brauche ich mal eure Sixhead-Idee, das hier
ist ja keine Template-Engine, wie mache ich jetzt aus einer Liste mit WLANs, Moment, Moment,
das stimmt, doch, das ist richtig so, wie mache ich aus einer Liste mit WLANs ein Select
mit allen WLANs drinne, ich kann ja schlecht so was wie for each machen hier drinne, oder,
oder doch, kann ich hier drinne so was machen, ne, ja, also, und jetzt, und jetzt, jetzt bin
ich, jetzt bin ich überfragt, kann man, ok, js-template-string-for-each, map, ja, auf
die Idee wäre ich auch noch gekommen, ok, also, kann ich jetzt sinngemäß vielleicht
so was machen, WLANs, map, WLAN, wieso nutzt du keine Template-Engine, weil ich an der Stelle
keine, ich hab keine Template-Engine hier zur Verfügung, ich, das ist ein User-Script,
das in dem Web-Interface, also für das Web-Interface von meinem Access-Point läuft, wenn ich die
Möglichkeit hätte, da eine ordentliche Web-Anwendung zu machen, würde ich das machen und nicht
irgendwelche HTML-Strings rumhantieren, ich hab da nichts zur Verfügung, außer eingebautes
JavaScript-Zeug, so, WLANs, map, wie muss denn der Kram jetzt aussehen, kann man template-string
in template-string, ok, das funktioniert, jetzt wird's langsam abgedreht, ok, option,
das funktioniert doch nie im Leben und jetzt nestet, also wenn das funktioniert, dann beiße
ich mir echt in Bobbes, WLAN.id, WLAN.name, das wird doch im Leben nicht funktionieren,
das ist ja richtig, das ist ein template-string mit escaped drinnen, mit einem weiteren template-string,
in dem ich wieder was escaped habe, das geht einfach so, damit hätte ich jetzt nicht gerechnet,
hätte ich gedacht, ich muss 5 mal escapen, backslashen oder sonst irgendwas machen, jetzt
bin ich ganz klar, warum die das so gut hingekriegt haben, aber ich will mich ja mal nicht beschweren,
so, mehr brauchen wir an der Stelle doch jetzt eigentlich gar nicht, jetzt müssen wir hier
unten, dass das auch dynamisch funktioniert und nicht hardcoded ist, müssen wir sagen,
dass hier der Kram eingesetzt werden soll, das heißt ich muss jetzt erstmal gucken, welches
WLAN überhaupt selected wurde, doch lightspeed, das müsste auch funktionieren, da hast du
recht, das müsste auch gehen, doch doch, das müsste auch gehen, so, Moment, jetzt, dps
carlings, so, jetzt muss ich rauskriegen, was selected wurde, ok, wie kriege ich raus,
was selected wurde, ich muss dem select eine id geben, krasse dialog, keine Ahnung, select,
so und aus dem select kann ich mir dann rausholen, was selected wurde, wie auch immer, wahrscheinlich
heißt das dann auch selected, mal ausprobieren, wir machen mal hier einen return drin, wir
müssen jetzt ja nicht immer neu generieren, log, ok, div, query selector, was jetzt, query
selector, zack, select und jetzt selected, gäbe das sowas, nö, undefined, ok, js select,
selected, ich hab keine Ahnung, was das ist, selected value, genau, get selected value
in drop down, excellent, ach es ist einfach Punkt value, es ist einfach Punkt value, oder
was schlägt feudal vor, id option checked, nee, ich will ja wissen, welche id gecheckt
ist, oder, ich mein ich mach das einfach mal, ich mach mal was du sagst, vielleicht kommt
einer, option checked, so rum, ach, das geht echt, cool, pogu, wobei, das andere ist glaube
ich, das andere ist glaube ich in dem fall sogar besser, weil ich will ja nicht die option,
value ist ja ok, value will ich haben, value sollte mir an der stelle reichen, eins, genau,
so, also, let selected wlan id, ich kann den timeout nicht kleiner machen, ich muss ja
jedes mal noch rechtzeitig auf die wlans klicken, dass er das nachlädt, leute, wie ist es denn
jetzt eigentlich, javascript, semikolon am ende oder kein semikolon an hände, was ist
da die meta strategie gerade, was macht man da, semikolon oder kein semikolon, was machen
die coolen javascript, leute, die nice javascript da, mit, gut, aber mein document format ist
da meinung, das ist egal, mit, aber dann, ich lasse es jetzt aber tatsächlich weg, weil
ich hab kaum welche und es ist zu anstrengend, jetzt überall semikolon hin zu machen, aber
man kann bestimmt seinen formatter so einrichten, dass er das macht, oh hier, du, du, du, du,
hier, du, du, überall, so, selected wlan id haben wir, so, jetzt guck mal, wlans, filter,
wlan, wlan id, nee, moment, moment, Leute, nicht filter, find will ich machen, das ist
jetzt neu, guck mal, array, array, find, javascript, das gibt es jetzt neu und das ist sehr praktisch,
dass direkt das erste gefundene element zurück gibt. also let selected wlan. ich finde ich
muss mich mal ein bisschen kurz selbst loben. ich finde für das wie eklig das ganze ist,
ist das alles noch ziemlich gut lesbar bis jetzt? oder nicht? ok da bin ich zufrieden mit.
so selected wlan. das kackt halt ab wenn es nicht so selected wlan. ok also wo muss man das jetzt
einsetzen? patch bla bla bla id muss das eingesetzt werden. id selected wlan name und selected wlan
dpsk length hieß es glaube ich. so das fetch können wir uns sparen in der variante. oh das
ist falsch tatsächlich habe ich hier vergessen. nicht einfach nur wlan id sondern selected wlan
id. ja ja ja. ok mal gucken ob es immer noch funktioniert was ich jetzt gebaut habe.
sieht so aus. omega lul user. da ist er. das hat funktioniert. und jetzt auch dynamisch wenn
ich jetzt mehr als ein wlan habe funktioniert es. funktioniert es auch. progu easy. aber
richtig easy. easy. way too easy. easy easy easy easy easy easy easy. ob es auch ein bisschen
durchdrehen. easy. so jetzt müssen wir das natürlich noch richtig an der richtigen stelle
einbauen dass es auch funktioniert. nämlich wenn wir da drauf klicken und jetzt auf create dann
soll das hier unten erscheinen. oh wir müssen wahrscheinlich. sekunde leute ich glaube das
funktioniert noch nicht. guck mal add user created. es geht erstens nicht automatisch zu und zweitens
refresh das nicht automatisch. das heißt wir müssen diesen refresh button noch automatisch
drücken gleich. button. copy. css selector. yes. also wenn wir auf ok klicken und das hier alles
fertig ist dann erst mal diff remove dass das overlay weggeht und dann ok und dann document
oder toolbar. ne wahrscheinlich. document. query selector. ja alles klar das genau das will ich
haben. click. so. ok jetzt bin ich gespannt. nee nicht reload. dpsk add dpsk create. easy as fuck.
easy as fuck. 360. nice. 360. noscope. alter dass das einfach funktioniert. guck mal wie einfach.
was heißt wie einfach ja. man kann es auch übertreiben. ok also so das wetter wird langsam
besser. also ich würde sagen so zehn minuten, zehn viertel stunde zeit haben wir noch. dann
gehe ich noch mal kurz raus ans an die frische luft. aber erst wenn schönes wetter ist. was
können wir denn noch machen. ich weiß was wir machen. leute sixhead ich habe ich habe eine idee.
passt mal auf gleich. ich muss mal kurz aufs wetterradar gucken. so ich habe noch eine
idee was wir machen können. was haltet ihr denn davon wenn. was haltet ihr davon wenn wir hier
dahinter. ja das wehlang ist. wenn wir hier. also zwei sachen. wir machen hier unten den button zum
password generieren. weil vielleicht will man doch nix. vielleicht will man doch irgendwas
automatisch. button zum password generieren. vielleicht irgendwas sprechbares oder so oder
irgendwas ordentlich schreibbares. mal gucken kann man ja. und wir können hier dahinter eine
zahl schreiben wie lang das kennwort ist was eingegeben wurde. ich glaube ich glaube das
machen wir mal als erstes. das dürfte das dürfte doch eigentlich relativ easy sein oder. also wir
gehen mal in das html. wir gehen mal in das html input password. so und dahinter schreiben wir
jetzt einfach. da kommt irgendwie noch. ne moment. falsch falsche stelle hier. span. also erst mal
value layer. so span. span. das ding kriegt eine id. den kriegt eine id.
irgendwie password length oder sowas. so standardmäßig steht da erst mal. ich weiß
noch nicht genau was drinne. muss ich mir mal kurz überlegen. so und jetzt müssen wir mitbekommen
wenn was getippt wird. input. das ist natürlich doof. input. on input ist es glaube ich. komm wir
machen das mal anders hier. wir nennen das ding. let password input. da kann man das auch ein
bisschen kürzer schreiben alles. password input. das ist übrigens nicht document sondern es ist
diff. können wir hier nämlich hinschreiben. ne moment. ne aber da nicht. also wirklich zufrieden
bin ich damit nicht. na gut. so. dann können wir sagen password input. on input. jetzt bin ich mir
nicht ganz sicher wie das funktioniert. ne moment. ich nenne gleich user. so. ja ja. aber user.
moment. monkaS. was habe ich jetzt gemacht. user. ja ich ändere mal nix. ich ändere mal.
das da unten lasse ich. das da unten lasse ich so wie es vorher war. so on input. jetzt hört
bei mir mal das javascript zeug wieder auf. so wenn ich jetzt hier was reinschreibe dann macht
der on input data. wie kriege ich denn jetzt hier in diesem input event den schon bestehenden text
gibt's denn hier irgendwo drin oder muss da muss ich auch mit value wahrscheinlich drauf
zugreifen. da muss ich jetzt quasi sagen password input value. ok nice nice nice nice. length.
ja ja. 0 1 2 3 4 5 6 ja ok nice. so und das schreiben wir jetzt rein in
diff query selector. password length. was ist denn das hier.
und wird denn da nix angezeigt. das ding heißt custom autocomplete autocomplete
propen. custom dps. nee oh Gott wo ist es hier. password length. jetzt müssen wir es nur noch
richtig machen. das da nee. ach fuck man. das da. das da. klein inner html. password input value
punkt length. so. format doc. du sollst nicht nach unten springen. da weiß ich ja gar nicht
wo ich gewesen bin. ok was. ich brauche format und save leute. moment settings. settings open
user settings. auto save. nee nee format. format und save. gibt es doch oder. format
und save. excellent. so mal gucken. das brauche ich. jawoll endlich. endlich sieht es nicht
mal kacke aus. so und wenn ich jetzt was reinschreibe dann. fuck. ist null. ah da fehlt eine raute
davor. es funktioniert. guck mal da. die länge wird geupdatet vom password. wobei vielleicht
da noch ein paar klammern drum herum nicht verkehrt wären. oder noch ein paar klammern
drum herum. nice. guck mal da. haben wir es da noch hingekriegt. massive. finde ich
auch. extremely massive. jetzt haben wir natürlich noch keinen button für password generieren
an sich. aber das ist ja nicht so schlimm. das können wir immer noch machen. wir klauen
uns jetzt mal was. wir machen jetzt die chinesen taktik wieder. javascript generate password
snippet. ja perfekt. easy. so. wo ist die password generate funktion? wo ist die password
generate funktion? again password. mit random. ne mit random ist ein mist. da gibt es was
neues. ich hab vergessen wie es heißt. es gibt so ein neues krypto stels dafür. ne ne
ne. das gefällt mir nicht. muss es doch irgendwas gescheites fertiges geben was mich. ok wir
fragen. ok bin gpt kann ich nicht fragen. ne. gucken. generate password javascript. ich
bin auch grad bei chat gpt nicht eingeloggt. copilot fragen. alter. was ist das hier. das
ist gut. das gefällt mir. ne das ist nicht gut. das benutzt random. das ist schlecht.
das gefällt mir alles nicht. krypto get random. ja das ist schon besser hier. ich weiß zwar
nicht woras her hat. aber das finde ich schon mal gut. easy. function. generate password.
wir wollen keine komischen sonderzeichen haben. bestimmt bestimmt highly secure. die sonne
ist da. naja. wie kommste da drauf. root byte. wohnst du auch hier in der ecke. also
bei mir ist die sonne noch nicht so hundertprozentig da. aber gleich. das ist übrigens auch das
letzte was ich ausprobiere. danach gehe ich tatsächlich nochmal an die frische luft.
generate password. length können wir machen. length ist default 48. so bam. generate password.
das probieren wir jetzt hier aus an der stelle. auf gehts. cast custom password length value.
kaum richtig schreiben value. standardlänge ist ja recht einfach. 48. jetzt refreshen
wir mal. oh. achso. easy. machen die länge weg. guck mal. jetzt haben wir random generated
password am start. was sich immer neu refresht. wir machen das nächste mal noch einen button
an der stelle hin. nice. das finde ich eigentlich schon mal ganz gut. der dreizeiler ganz unten
in seiner antwort ist pog. ok. stack overflow driven sind wir wieder. der dreizeiler. das
hier. what. ja ist ja. ein nicer dreizeiler. einfach die line breaks entfernt. ein nicer
dreizeiler. oh. richtig nice. getreizeilt hat er hier. äußerst übersichtlich getreizeilt.
es sind nur 500 zeichen lang. wir können es übrigens easy auch zum one liner machen
ja. format. ne ne ne ne ne. ok. leute ich gehe jetzt mal eine runde noch an die frische
luft. wir sehen uns allerspätestens morgen früh zum aufwachen stream. bis denn machts
gut. see you.

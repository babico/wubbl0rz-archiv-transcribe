WEBVTT

00:00.000 --> 00:18.300
Ich bin froh.

00:18.300 --> 00:43.300
Ich bin froh, ich bin froh, ich bin froh.

00:48.300 --> 01:08.300
Ich bin froh, ich bin froh.

01:08.300 --> 01:20.300
Ich bin froh, ich bin froh.

01:38.300 --> 02:03.300
Ich bin froh, ich bin froh.

02:03.300 --> 02:23.300
Ich bin froh, ich bin froh.

02:23.300 --> 02:48.300
Ich bin froh.

02:53.300 --> 03:18.300
Ich bin froh, ich bin froh.

03:18.300 --> 03:43.300
Ich bin froh.

03:43.300 --> 04:08.300
Ich bin froh, ich bin froh.

04:08.300 --> 04:33.300
Ich bin froh.

04:33.300 --> 04:58.300
Ich bin froh.

04:58.300 --> 05:23.300
Ich bin froh, ich bin froh.

05:23.300 --> 05:38.300
Ich bin froh.

05:38.300 --> 06:03.300
Ich bin froh.

06:08.300 --> 06:33.300
Ich bin froh.

06:33.300 --> 06:48.300
Ich bin froh.

06:48.300 --> 07:13.300
Ich bin froh.

07:18.300 --> 07:43.300
Ich bin froh.

07:48.300 --> 08:03.300
Ich bin froh.

08:18.300 --> 08:41.300
Ich bin froh.

08:48.300 --> 09:03.300
Ich bin froh.

09:03.300 --> 09:18.300
Ich bin froh.

09:33.300 --> 09:48.300
Ich bin froh.

09:48.300 --> 10:10.300
Ich bin froh.

10:10.300 --> 10:25.300
Ich bin froh.

10:25.300 --> 10:40.300
Ich bin froh.

10:40.300 --> 11:00.300
Ich bin froh.

11:00.300 --> 11:25.300
Ich bin froh.

11:25.300 --> 11:40.300
Ich bin froh.

11:40.300 --> 11:55.300
Ich bin froh.

11:55.300 --> 12:10.300
Ich bin froh.

12:10.300 --> 12:25.300
Ich bin froh.

12:25.300 --> 12:40.300
Ich bin froh.

12:40.300 --> 12:55.300
Ich bin froh.

12:55.300 --> 13:10.300
Ich bin froh.

13:10.300 --> 13:25.300
Ich bin froh.

13:25.300 --> 13:40.300
Ich bin froh.

13:40.300 --> 13:55.300
Ich bin froh.

13:55.300 --> 14:10.300
Ich bin froh.

14:10.300 --> 14:35.300
Ich bin froh.

14:35.300 --> 15:00.300
Ich bin froh.

15:00.300 --> 15:15.300
Ich bin froh.

15:15.300 --> 15:30.300
Ich bin froh.

15:30.300 --> 15:45.300
Ich bin froh.

15:45.300 --> 16:00.300
Ich bin froh.

16:00.300 --> 16:15.300
Ich bin froh.

16:15.300 --> 16:30.300
Ich bin froh.

16:30.300 --> 16:45.300
Ich bin froh.

16:45.300 --> 17:10.300
Ich bin froh.

17:40.300 --> 18:05.300
Ich bin froh.

18:05.300 --> 18:30.300
Ich bin froh.

18:30.300 --> 18:57.300
Ich bin froh.

18:57.300 --> 19:12.300
Ich bin froh.

19:12.300 --> 19:27.300
Ich bin froh.

19:27.300 --> 19:42.300
Ich bin froh.

19:42.300 --> 20:04.300
Ich bin froh.

20:04.300 --> 20:25.300
Ich bin froh.

20:25.300 --> 20:50.300
Ich bin froh.

20:50.300 --> 21:05.300
Ich bin froh.

21:05.300 --> 21:16.300
Ich bin froh.

21:16.300 --> 21:21.300
Ich bin froh.

21:21.300 --> 21:26.300
Ich bin froh.

21:26.300 --> 21:33.300
Ich bin froh.

21:33.300 --> 21:41.300
Ich bin froh.

21:41.300 --> 21:43.300
Alter!

21:43.300 --> 21:48.300
Ich will keine fucking Class Library, man!

21:48.300 --> 21:51.300
Ach, kann man das nicht machen, oder wie?

21:51.300 --> 21:56.300
Ah, das ist ja doof.

21:56.300 --> 22:00.300
Warum kann ich in die Dornett-Version nicht runtergehen?

22:00.300 --> 22:06.300
Warum geht das nicht? Ich mein, ich kann sagen, Unload.

22:06.300 --> 22:09.300
Wo ist denn der Unload-Knopf überhaupt jetzt?

22:09.300 --> 22:12.300
Unload-Project.

22:12.300 --> 22:17.300
So, ich kann da in Dornett 7 reinschreiben. So, easy.

22:17.300 --> 22:23.300
Oh, es funktioniert jetzt auch.

22:23.300 --> 22:29.300
Äh, Ligada kann ich hier gleich was zu sagen.

22:29.300 --> 22:33.300
Eigentlich bin ich hundertprozentig sicher, bin.

22:33.300 --> 22:38.300
So. Guck mal, wie groß das ist.

22:38.300 --> 22:41.300
Okay, das ist schon ein Unterschied, guck mal.

22:41.300 --> 22:45.300
Mit der alten Dornett-Version ist es 5,6 MB für ein publisches Hello World Kurs.

22:45.300 --> 22:48.300
Und mit der neuen ist es 1,9.

22:48.300 --> 22:53.300
Das ist tatsächlich echt eine gute Verbesserung.

22:53.300 --> 22:56.300
Da kann man nichts sagen.

22:56.300 --> 22:59.300
So, also, ich bin nicht so schlapp.

22:59.300 --> 23:00.300
Ich sehe unsere Pipeline, die mir fehlt.

23:00.300 --> 23:02.300
Dornett Restore, aber auch Dornett Bild.

23:02.300 --> 23:03.300
Mit Restore nicht in Bild verwenden.

23:03.300 --> 23:05.300
Doch, die Sache ist plus die.

23:05.300 --> 23:08.300
Ich habe keine Ahnung, warum die Leute überhaupt noch Bild und Restore verwenden.

23:08.300 --> 23:09.300
Die können einfach Publish verwenden.

23:09.300 --> 23:11.300
Das macht beides in einem.

23:11.300 --> 23:13.300
Also, keine Ahnung, warum das über...

23:13.300 --> 23:21.300
Ich weiß, sogar das offizielle Dornett-Docker-File-Example macht das mit Restore.

23:21.300 --> 23:24.300
Vielleicht fürs Caching von den Containern.

23:24.300 --> 23:30.300
Das kann natürlich sein, dass wenn sich der Source-Code ändern tut es nicht.

23:30.300 --> 23:32.300
Jedes Mal...

23:32.300 --> 23:35.300
Also, du kannst ja, wenn du ein Docker-File hast,

23:35.300 --> 23:39.300
dann merkt das sicher, an welchem Step du was geändert hast

23:39.300 --> 23:40.300
und macht dann ab da weiter.

23:40.300 --> 23:43.300
So, wenn du quasi Publish, also quasi den Restore

23:43.300 --> 23:46.300
für die Dependencies und die Nougat-Packages und alles,

23:46.300 --> 23:50.300
wenn du das in einem Befehl hast mit Publish und in Bild

23:50.300 --> 23:52.300
und du änderst dein Bildbefehl was,

23:52.300 --> 23:53.300
dann muss er das alles wieder machen.

23:53.300 --> 23:57.300
Also, vielleicht ist das aufzusplitten in Restore

23:57.300 --> 24:00.300
und dann in Publish hinterher oder in Bild,

24:00.300 --> 24:04.300
ist vielleicht, dass das Docker-Caching das besser hinbekommt.

24:04.300 --> 24:06.300
Aber ansonsten kannst du einfach .NET Publish verwenden.

24:06.300 --> 24:07.300
Das macht alles in einem.

24:07.300 --> 24:10.300
Also, eigentlich braucht man das gar nicht.

24:10.300 --> 24:14.300
Eigentlich overrated, outdated, jebaited.

24:14.300 --> 24:16.300
So, alles klar.

24:16.300 --> 24:19.300
Dann können wir jetzt hier anfangen.

24:19.300 --> 24:22.300
Ich habe die .NET-Version wieder hochgestellt.

24:22.300 --> 24:24.300
Gucken wir mal, ob das wieder funktioniert.

24:24.300 --> 24:26.300
.NET Publish.

24:27.300 --> 24:29.300
Okay, funktioniert.

24:29.300 --> 24:33.300
So, und jetzt passt mal auf, was wir heute probieren werden.

24:33.300 --> 24:34.300
Ich bin mir nicht sicher,

24:34.300 --> 24:38.300
ob wir das überhaupt auf die Reihe bekommen.

24:38.300 --> 24:41.300
Ich muss gerade erst mal schnell KVM installieren.

24:41.300 --> 24:44.300
Und zwar, man kann ja auf der Lidungskiste,

24:44.300 --> 24:46.300
ja, ja, ich weiß, es läuft gerade nichts,

24:46.300 --> 24:49.300
man kann ja auf der Lidungskiste lokal VMs benutzen.

24:49.300 --> 24:51.300
So, und ich wollte schon immer mal gucken,

24:51.300 --> 25:00.300
wie man VMs erstellt über die Linux VM-Erstellungs-API.

25:00.300 --> 25:03.300
Das hat nicht wirklich so viel Sinn.

25:07.300 --> 25:10.300
Ich habe mir letztens so ein Tool zusammengescriptet,

25:10.300 --> 25:14.300
aber wir können das ja mal über die API machen.

25:14.300 --> 25:17.300
Und das Gute ist, das eignet sich dementsprechend auch wunderbar

25:17.300 --> 25:19.300
als Compiler-Testprojekt,

25:19.300 --> 25:21.300
weil ich muss Low-Level-Kram verwenden

25:21.300 --> 25:23.300
plus ein paar etwas advancedere Libraries.

25:23.300 --> 25:26.300
Ich muss mir jetzt aber erst mal LibWirt und QEMO

25:26.300 --> 25:28.300
und den ganzen Shit erstellen.

25:30.300 --> 25:32.300
Gucken wir mal, ob das überhaupt funktioniert,

25:32.300 --> 25:36.300
damit ich da drauf zugreifen kann.

25:36.300 --> 25:37.300
Okay.

25:37.300 --> 25:38.300
LibWirt gibt es nicht.

25:38.300 --> 25:41.300
Na gut, nein, deswegen muss ich das noch starten.

25:41.300 --> 25:44.300
System CTL, enable, LibWirt.

25:44.300 --> 25:47.300
Not exist, okay.

25:49.300 --> 25:51.300
Start.

25:53.300 --> 25:57.300
Sag mal, warum ist denn das so?

26:02.300 --> 26:05.300
So lahm eine Tastatur?

26:06.300 --> 26:08.300
Ah, viel besser.

26:08.300 --> 26:11.300
Okay, haben wir es jetzt laufen?

26:12.300 --> 26:14.300
Haben wir KVM laufen?

26:14.300 --> 26:16.300
Nee, wir haben kein KVM.

26:16.300 --> 26:19.300
Oh fuck, ich habe schon lange kein KVM mehr installiert.

26:19.300 --> 26:21.300
KVM?

26:25.300 --> 26:28.300
Okay, KVM ist da.

26:34.300 --> 26:36.300
Ach du Kacke.

26:36.300 --> 26:38.300
Arch KVM install.

26:38.300 --> 26:41.300
Das müssen wir jetzt mal auf die Schnelle gucken.

26:41.300 --> 26:44.300
Check support.

26:44.300 --> 26:46.300
Okay, kann meine CPU in der VM los?

26:46.300 --> 26:47.300
Nein.

26:47.300 --> 26:51.300
Das heißt, ich muss meine VM erst mal wieder ausschalten

26:51.300 --> 26:54.300
und in den Settings Nested Virtualisierung einschalten.

26:54.300 --> 26:58.300
Sonst wird das nämlich nicht funktionieren.

26:59.300 --> 27:02.300
Nested Virtualisierung, okay.

27:02.300 --> 27:06.300
Also, wenn ich eine VM in einer VM starten will,

27:06.300 --> 27:07.300
dann geht das nicht.

27:07.300 --> 27:09.300
Das geht nur, wenn man Nested Virtualisierung einschaltet.

27:09.300 --> 27:12.300
Also, falls ihr irgendwann mal Probleme habt

27:12.300 --> 27:15.300
und euch fragt, warum ihr in eurer VM keine VM starten könnt,

27:15.300 --> 27:17.300
dann liegt das höchstwahrscheinlich daran,

27:17.300 --> 27:20.300
weil keine Nested Virtualisierung eingeschaltet ist.

27:20.300 --> 27:22.300
Normalerweise braucht es ja auch niemand.

27:22.300 --> 27:25.300
Habt ihr schon mal VMs in einer VM laufen lassen?

27:25.300 --> 27:29.300
Und wenn ja, warum?

27:32.300 --> 27:34.300
Okay, Virtualisierung ist in Erbel.

27:34.300 --> 27:36.300
Proxmox Test Setup, ja, verstehe.

27:36.300 --> 27:40.300
Dafür ist es sinnvoll, auf jeden Fall.

27:40.300 --> 27:45.300
WSL, ja, gut, WSL.

27:45.300 --> 27:50.300
Moment, WSL ist doch keine Nested Virtualisierung.

27:50.300 --> 27:54.300
Es sei denn, du hast Windows in der VM und dann WSL.

27:54.300 --> 27:56.300
Zu schauen, wie scheiße die Performance ist.

27:56.300 --> 27:59.300
Die Performance ist nicht gut, aber so unter ihr die Scheiße,

27:59.300 --> 28:02.300
dass es unbenutzbar ist, ist es gar nicht.

28:02.300 --> 28:06.300
Es geht sogar halbwegs.

28:06.300 --> 28:12.300
So, geht mein KVM denn jetzt?

28:12.300 --> 28:16.300
Was ist denn das hier, Mensch, ey?

28:16.300 --> 28:19.300
KVM.

28:23.300 --> 28:26.300
No Hypervisor Options found, okay.

28:26.300 --> 28:28.300
Hab ich kein QEMO?

28:28.300 --> 28:32.300
Da muss ich mal kurz gucken, wie installiert man den ganzen Campbell.

28:36.300 --> 28:40.300
Nested, ja, okay, war alles klar.

28:40.300 --> 28:42.300
Nein, nein, nein, nein.

28:42.300 --> 28:44.300
Moment, was muss ich denn installieren?

28:44.300 --> 28:47.300
QEMO, KVM?

28:47.300 --> 28:50.300
Hm, wie heißt denn das Package, was ich da...

28:50.300 --> 28:55.300
QEMO-Full vielleicht gibt es?

28:55.300 --> 28:58.300
Okay, ja, ja, hauptsächlich.

28:58.300 --> 29:01.300
Okay, ich habe es.

29:01.300 --> 29:04.300
Gibt es?

29:04.300 --> 29:09.300
Okay, ja, ja, hau drauf, gib ihm.

29:15.300 --> 29:24.300
So, hoffen wir mal, dass ich jetzt ein funktionierendes...

29:27.300 --> 29:29.300
Ah, jetzt funktioniert es, okay.

29:29.300 --> 29:32.300
Jetzt kann ich VMS starten, alles gut.

29:32.300 --> 29:42.300
Yo, dann muss ich mich wahrscheinlich noch in die LibVirt-Gruppe packen.

29:42.300 --> 29:49.300
User and LibVirt, glaube ich zumindest, sonst darf ich von mir aus nicht drauf zugreifen.

29:49.300 --> 29:53.300
Wobei, brauche ich das überhaupt?

29:53.300 --> 30:03.300
Add Connections, User Session.

30:03.300 --> 30:06.300
Nope.

30:06.300 --> 30:09.300
Okay.

30:09.300 --> 30:13.300
Ach ja.

30:13.300 --> 30:15.300
Okay, das testen wir jetzt mal.

30:15.300 --> 30:21.300
Debian Cloud Image Download, wir gucken mal, ob die VM in der VM funktioniert.

30:21.300 --> 30:24.300
Bullseye Latest, klingt eigentlich ganz gut.

30:24.300 --> 30:32.300
AMD 64, QCOW Image, genau das brauchen wir.

30:32.300 --> 30:42.300
Debian 1 Generic, Cloud Generic, wunderbar, gib ihm.

30:42.300 --> 30:47.300
So, schauen wir mal, ob meine VM-Lokal funktioniert.

30:47.300 --> 30:52.300
Mit dem Virt-Manager, wie gesagt, das, was ich jetzt mit dem Virt-Manager mache,

30:52.300 --> 30:57.300
das will ich über die KVM bzw. die LibVirt-API machen.

30:57.300 --> 31:01.300
Das muss man über irgendwelche C-APIs aufrufen, das wird ganz abartig gleich.

31:01.300 --> 31:06.300
Aber dann sehen wir auch, ob die Kompilierung von dort net was taugt, wenn das alles funktioniert.

31:06.300 --> 31:09.300
Falls ich überhaupt was auf die Reihe kriege.

31:09.300 --> 31:15.300
So, Local, Install Media, boah, wie geht denn der Kram?

31:15.300 --> 31:17.300
Ich benutze das eigentlich nie.

31:17.300 --> 31:31.300
Download, Debian, Select, ja, Linux, Linux.

31:31.300 --> 31:37.300
2020, perfekt, das wollte ich schon immer haben.

31:37.300 --> 31:42.300
2, 1 CPU reicht, 1024 MB reicht auch.

31:42.300 --> 31:48.300
Storage, ja, perfekt, wunderbar.

31:48.300 --> 31:52.300
Alles klar, Finish.

31:52.300 --> 31:56.300
Okay, funktioniert. Funktioniert.

31:56.300 --> 32:05.300
Also, ich meine, die VM bootet nicht, aber die VM startet, das reicht mir eigentlich schon.

32:05.300 --> 32:07.300
Das ist kein easy, ISO, du hast recht.

32:07.300 --> 32:10.300
Das ist kein ISO, das ist ein komplettes, komplettes VM-Image.

32:10.300 --> 32:15.300
Okay, aber die VM startet, das ist das Eigentliche, was ich haben will.

32:15.300 --> 32:19.300
Delete, funktioniert, gut.

32:19.300 --> 32:25.300
So, und jetzt gucken wir mal, wie wir das über die API machen können.

32:25.300 --> 32:29.300
Das wird was.

32:29.300 --> 32:32.300
Das, das, das wird was.

32:32.300 --> 32:36.300
Lib wird API.

32:36.300 --> 32:46.300
Documentation, oh, jetzt wird es abartig.

32:46.300 --> 32:54.300
API-Reference, exzellent, exzellent.

32:54.300 --> 32:59.300
Okay.

32:59.300 --> 33:04.300
Domain, aus irgendwelchen Gründen nennt sich eine VM in KVM Domain, ich weiß auch nicht warum.

33:04.300 --> 33:06.300
Es hat nichts mit DNS und so.

33:06.300 --> 33:09.300
Ach du Scheiße.

33:09.300 --> 33:17.300
Alter.

33:17.300 --> 33:21.300
MonkaW, okay, ich gebe zu, ich habe im Vorfeld schon ein bisschen gespickt.

33:21.300 --> 33:23.300
Ich weiß ein bisschen, nach was ich gucken muss.

33:23.300 --> 33:26.300
Ich muss nach Connection gucken.

33:26.300 --> 33:31.300
Äh, nee, nach Connect muss ich gucken.

33:31.300 --> 33:33.300
Wenn ich das, wenn ich das richtige Erinnerung habe.

33:33.300 --> 33:38.300
Connect, hier, Connect, Connect.

33:38.300 --> 33:41.300
Aha, nope, wird nicht connected.

33:41.300 --> 33:42.300
Wo ist das denn?

33:42.300 --> 33:49.300
Also, das funktioniert folgendermaßen, eine VM über die, über die Linux-API anzulegen.

33:49.300 --> 33:53.300
Man muss als erstes Connect zu Lib wird.

33:53.300 --> 33:56.300
Lib wird ist dieses Ding, was der Wirt-Manager auch verwendet.

33:56.300 --> 33:58.300
Also keiner spricht direkt KVM.

33:58.300 --> 34:01.300
Die sprechen alle über diese API-Schnittstelle damit.

34:01.300 --> 34:02.300
Man muss sich zu Lib wird connecten.

34:02.300 --> 34:09.300
Am Ende muss man die Connection wieder closen.

34:09.300 --> 34:14.300
Dann muss man Create VM machen, wie auch immer.

34:14.300 --> 34:18.300
Dann muss man aufs Netzwerk warten, dass das Ganze funktioniert.

34:18.300 --> 34:24.300
Und dann ist gut, dann ist die VM wieder da.

34:24.300 --> 34:36.300
GitHub Code-Pilot, frag mal, frag mal.

34:36.300 --> 34:37.300
Okay, Connect.

34:37.300 --> 34:44.300
Also, wie connecten wir uns zu Lib wird?

34:44.300 --> 34:46.300
Das funktioniert so wie hier.

34:46.300 --> 34:50.300
Man muss dann hier irgendwie so eine Connection angeben.

34:50.300 --> 34:54.300
QEMO//Session.

34:54.300 --> 34:55.300
Und dann funktioniert es.

34:55.300 --> 35:01.300
Aber ich muss jetzt erstmal die richtigen APIs finden.

35:01.300 --> 35:02.300
Das heißt auf jeden Fall Connect.

35:02.300 --> 35:08.300
So viel habe ich im Vorfeld schon rausbekommen.

35:08.300 --> 35:09.300
Obvious.

35:09.300 --> 35:15.300
Ja, ich bei Cringe wäre das nicht weiß, dass es QEMO//Session ist.

35:15.300 --> 35:18.300
Wo könnte das denn hier drinnen stehen?

35:18.300 --> 35:26.300
Erstellst du gerade eine Linux VM in eine Linux VM?

35:26.300 --> 35:27.300
Richtig.

35:27.300 --> 35:28.300
Wo ist das Problem?

35:28.300 --> 35:33.300
Das ist dann zwar nicht mal blazingly fast, aber schnell genug.

35:33.300 --> 35:42.300
Host, Host muss ich bestimmt gucken.

35:42.300 --> 35:43.300
Connect.

35:43.300 --> 35:52.300
Hier, das sieht doch gut aus.

35:52.300 --> 35:53.300
Das sieht doch gut aus.

35:53.300 --> 35:54.300
Achtung hier.

35:54.300 --> 35:55.300
Guck mal, da haben wir es doch.

35:55.300 --> 35:56.300
Wir connect.

35:56.300 --> 35:59.300
Hört sich ein bisschen, wir connect.

35:59.300 --> 36:01.300
Das hört sich ein bisschen an wie...

36:01.300 --> 36:08.300
Jetzt fehlen uns bloß noch Carlos Matos.

36:08.300 --> 36:11.300
Ach, es geht ja noch weiter.

36:11.300 --> 36:18.300
Carlos Matos vom New York City New York.

36:18.300 --> 36:23.300
Hier, wir connect open.

36:23.300 --> 36:25.300
Das brauchen wir.

36:25.300 --> 36:26.300
Alles klar.

36:26.300 --> 36:27.300
IQ Shit.

36:27.300 --> 36:29.300
Wir connect open.

36:29.300 --> 36:32.300
So, jetzt wird es spannend Leute.

36:32.300 --> 36:37.300
Native C Funktion aus Dornett aufrufen.

36:37.300 --> 36:40.300
Also, jetzt...

36:40.300 --> 36:48.300
Okay, erstmal allow unsafe code, weil ohne unsafe code würde das auf jeden Fall nicht

36:48.300 --> 36:49.300
funktionieren.

36:49.300 --> 36:50.300
DLL import.

36:50.300 --> 36:52.300
So, jetzt muss ich abgucken.

36:52.300 --> 37:00.300
Ich muss abgucken, weil ich habe mir im Vorfeld schon ein Beispiel angeguckt und habe mir

37:00.300 --> 37:09.300
das ins Notepad auf dem anderen Bildschirm kopiert, weil sonst pflege ich da nicht durch,

37:09.300 --> 37:14.300
wie das aussehen muss, der Aufruf.

37:14.300 --> 37:17.300
So muss das aussehen.

37:17.300 --> 37:20.300
Sekunde.

37:20.300 --> 37:24.300
Ja, so muss das aussehen.

37:24.300 --> 37:27.300
Ha, habe ich schon rausgesucht.

37:27.300 --> 37:28.300
Guck mal.

37:28.300 --> 37:29.300
So muss das aussehen.

37:29.300 --> 37:30.300
Obviously muss das so aussehen.

37:30.300 --> 37:31.300
Ja.

37:31.300 --> 37:35.300
Also, cringe Schwimm nicht klar ist, dass das so aussehen muss.

37:35.300 --> 37:43.300
So, und jetzt müssen wir nur noch diese C Funktion irgendwie übersetzen in eine gültige

37:43.300 --> 37:45.300
C Sharp Funktionssignatur.

37:45.300 --> 37:48.300
Also, das Ganze muss schon mal in extra Klasse rein.

37:48.300 --> 37:51.300
Es gibt wird C Sharp Bindings.

37:51.300 --> 37:52.300
Ne, die gibt es nicht.

37:52.300 --> 37:55.300
Habe ich im Vorfeld geguckt, gibt es keine gescheiten.

37:55.300 --> 37:58.300
Es gibt offizielle Bindings, die sind nur für .NET Framework.

37:58.300 --> 38:03.300
Wer auch immer seriously mit .NET Framework von Windows aus Libreed verwenden will und

38:03.300 --> 38:08.300
der Rest ist outdated und hat so Sachen wie Netzwerkinfos und so nicht drinne.

38:08.300 --> 38:10.300
Es gibt keine gescheiten Libreed Bindings.

38:10.300 --> 38:12.300
Leider, sonst hätte ich die tatsächlich genommen.

38:12.300 --> 38:16.300
Okay, wir connect pointer return there.

38:16.300 --> 38:17.300
Das ist mir doch egal.

38:17.300 --> 38:18.300
Was ist der return?

38:18.300 --> 38:21.300
So, wir connect open.

38:22.300 --> 38:23.300
Das gibt einen String.

38:23.300 --> 38:25.300
Das sollte der richtig hinbekommen.

38:28.300 --> 38:32.300
Public, Public Class Interop.

38:36.300 --> 38:37.300
DLL Import.

38:40.300 --> 38:41.300
Unsave.

38:41.300 --> 38:42.300
Ne.

38:44.300 --> 38:45.300
Was?

38:47.300 --> 38:49.300
Ach so, Method.

38:49.300 --> 38:52.300
Public Static Extern.

38:54.300 --> 38:55.300
Gut, so.

38:55.300 --> 39:01.300
Das müsste als Definition ausreichen, um mich connecten zu können zu meinem lokal laufenden

39:01.300 --> 39:02.300
LibVirt.

39:02.300 --> 39:03.300
Jetzt bin ich mal gespannt.

39:03.300 --> 39:04.300
Gucken wir mal.

39:04.300 --> 39:07.300
Also, was returnt denn der überhaupt?

39:07.300 --> 39:08.300
Was ist denn das?

39:08.300 --> 39:10.300
Was ist denn das?

39:10.300 --> 39:14.300
This should be called first to get a connection to the hypervisor.

39:14.300 --> 39:16.300
Ja, das ist nice.

39:16.300 --> 39:22.300
If name is null, default environment will be used.

39:24.300 --> 39:26.300
Pointer to the hype.

39:26.300 --> 39:27.300
Jetzt geht's los.

39:27.300 --> 39:29.300
Pointer, was auch sonst logischerweise.

39:29.300 --> 39:34.300
A pointer to the hypervisor connection or null in case of error.

39:35.300 --> 39:37.300
Alles klar.

39:37.300 --> 39:38.300
Hi IQ.

39:43.300 --> 39:44.300
Probieren wir mal aus.

39:44.300 --> 39:45.300
Interop.

39:46.300 --> 39:48.300
Connection open.

39:48.300 --> 39:49.300
Qemo.

39:49.300 --> 39:50.300
Doppelpunkt.

39:50.300 --> 39:51.300
Doppelpunkt.

39:51.300 --> 39:52.300
Doppelpunkt.

39:52.300 --> 39:53.300
Slash.

39:53.300 --> 39:54.300
Slash.

39:54.300 --> 39:55.300
Session.

39:55.300 --> 39:56.300
Warum?

39:56.300 --> 39:57.300
Weil zu ist.

39:57.300 --> 40:01.300
So, und da kommt irgendeine ID zurück, irgendein Pointer.

40:01.300 --> 40:04.300
Wir gucken jetzt mal, ob das null ist.

40:04.300 --> 40:09.300
Und wenn es null ist, ist es kaputt oder ist es gecrashed oder wenn es eine Zahl ist, dann

40:09.300 --> 40:10.300
funktioniert's.

40:10.300 --> 40:11.300
Hoffentlich.

40:11.300 --> 40:12.300
Wo sind wir denn?

40:12.300 --> 40:13.300
Repo.

40:13.300 --> 40:14.300
VmChamp.

40:14.300 --> 40:15.300
Dotnet.

40:15.300 --> 40:16.300
Geh mal weg.

40:16.300 --> 40:17.300
Dotnet run.

40:17.300 --> 40:18.300
ForceChamp.

40:18.300 --> 40:19.300
Es geht.

40:19.300 --> 40:20.300
Glaub ich zumindest.

40:20.300 --> 40:21.300
Es könnte auch ein Pointer ins Nichts sein.

40:21.300 --> 40:22.300
Man weiß es nicht genau.

40:22.300 --> 40:23.300
Es könnte auch sonst wohin pointen.

40:23.300 --> 40:24.300
Ja, Dotnet 8 alpha ist rausgekommen vor zwei Wochen.

40:24.300 --> 40:26.300
Könnte auch irgendein Int im Ram sein.

40:26.300 --> 40:27.300
Random.

40:27.300 --> 40:28.300
Okay.

40:28.300 --> 40:29.300
Wir haben...

40:29.300 --> 40:31.300
Es sieht aus, als hätten wir einen Pointer auf irgendwas, wo ich nicht genau weiß, auf

40:31.300 --> 40:32.300
was.

40:32.300 --> 40:33.300
Okay.

40:33.300 --> 40:34.300
Okay.

40:34.300 --> 40:35.300
Okay.

40:35.300 --> 40:36.300
Okay.

40:36.300 --> 40:37.300
Okay.

40:37.300 --> 40:38.300
Okay.

40:38.300 --> 40:39.300
Okay.

40:39.300 --> 40:40.300
Okay.

40:40.300 --> 40:41.300
Okay.

40:41.300 --> 40:42.300
Okay.

40:42.300 --> 40:43.300
Okay.

40:43.300 --> 40:44.300
Okay.

40:44.300 --> 40:45.300
Okay.

40:45.300 --> 40:46.300
Okay.

40:46.300 --> 40:47.300
Okay.

40:47.300 --> 40:48.300
Okay.

40:48.300 --> 40:49.300
Okay.

40:49.300 --> 40:50.300
Okay.

40:50.300 --> 40:51.300
Okay.

40:51.300 --> 40:52.300
Okay.

41:23.300 --> 41:24.300
So.

41:24.300 --> 41:25.300
Connection.

41:25.300 --> 41:26.300
Connection open.

41:26.300 --> 41:27.300
Wie erstellt man damit...

41:27.300 --> 41:28.300
Ach so.

41:28.300 --> 41:30.300
Jetzt brauchen wir das Ganze natürlich noch für Connection closed.

41:30.300 --> 41:35.300
Ich predicte einfach mal, dass es closed heißt.

41:35.300 --> 41:39.300
Ich hoffe, das heißt nicht stopp oder sowas.

41:39.300 --> 41:42.300
Und dann braucht das...

41:42.300 --> 41:43.300
Hier.

41:43.300 --> 41:44.300
Was?

41:44.300 --> 41:45.300
Ach nee.

41:45.300 --> 41:46.300
Hier.

41:46.300 --> 41:50.500
Und dann braucht es diesen Pointer, um es wieder zu close.

41:50.500 --> 41:51.500
Also.

41:51.500 --> 41:52.500
Also.

41:52.500 --> 41:53.500
In pointer.

41:53.500 --> 41:54.500
Connection.

41:54.500 --> 41:55.500
Schauen wir mal.

41:55.500 --> 42:02.500
Schauen wir mal, ob das Connection herstellen und schließen wenigstens funktioniert.

42:02.500 --> 42:03.500
Close.

42:03.500 --> 42:04.500
Con ID.

42:04.500 --> 42:05.500
So.

42:05.500 --> 42:10.500
Und wenn er jetzt nicht crasht, bin ich happy.

42:10.500 --> 42:13.500
Er crasht nicht.

42:13.500 --> 42:15.500
Das sieht doch schon mal ganz gut aus.

42:15.500 --> 42:16.500
Okay.

42:16.500 --> 42:17.500
Nice.

42:18.500 --> 42:19.500
Okay.

42:19.500 --> 42:20.500
Nice.

42:20.500 --> 42:21.500
Und jetzt.

42:21.500 --> 42:27.500
Also wir können schon mal, wir können schon mal eine Verbindung herstellen.

42:27.500 --> 42:29.500
Also halber Wirtmanager ist fertig programmiert.

42:29.500 --> 42:31.500
Wir können eine Verbindung zu einem Wirt herstellen.

42:31.500 --> 42:32.500
Das reicht.

42:32.500 --> 42:35.500
Rest kommt von alleine.

42:35.500 --> 42:36.500
Okay.

42:36.500 --> 42:37.500
Create Domain.

42:37.500 --> 42:38.500
Nee.

42:38.500 --> 42:39.500
Fuck.

42:39.500 --> 42:42.500
Ach ich bin ja auch falsch.

42:42.500 --> 42:43.500
Ich bin ja auch...

42:43.500 --> 42:44.500
Genau.

42:44.500 --> 42:45.500
Ich muss zu Domain.

42:45.500 --> 42:46.500
Create Domain.

42:46.500 --> 42:47.500
Create.

42:47.500 --> 42:48.500
Create Domain.

42:48.500 --> 42:49.500
Fuck.

42:49.500 --> 42:50.500
Create.

42:50.500 --> 42:55.500
Wie erstellt man jetzt eine VM?

42:55.500 --> 43:00.500
Wir Domain Create Linux.

43:00.500 --> 43:04.500
Was?

43:04.500 --> 43:07.500
Also.

43:07.500 --> 43:09.500
Wir Domain Create Linux.

43:09.500 --> 43:12.500
Wir Domain Create XML.

43:12.500 --> 43:13.500
Wir Domain Create mit...

43:13.500 --> 43:24.500
Ach Domain Create gibt's auch einfach.

43:24.500 --> 43:27.500
Okay gucken wir mal was das macht.

43:27.500 --> 43:28.500
Launch Defined Domain.

43:28.500 --> 43:29.500
Ach nee.

43:29.500 --> 43:30.500
Moment.

43:30.500 --> 43:31.500
Ich hab ja nichts Defined.

43:31.500 --> 43:35.500
Launch Defined Domain.

43:36.500 --> 43:39.500
Nee.

43:39.500 --> 43:45.500
Nee, nee, nee.

43:45.500 --> 43:48.500
Domain Create with XML.

43:48.500 --> 43:53.500
Wir brauchen...

43:53.500 --> 43:57.500
Wir Domain Create XML.

43:57.500 --> 43:58.500
Brauchen wir anscheinend.

43:58.500 --> 44:01.500
Guck mal.

44:01.500 --> 44:07.500
Launch a new guest domain based on an XML description.

44:07.500 --> 44:12.500
Die wollen uns quälen heute, oder?

44:12.500 --> 44:19.500
XML shit.

44:19.500 --> 44:22.500
Create XML flags.

44:22.500 --> 44:24.500
Was sind Flags?

44:24.500 --> 44:29.500
Bitwise or supported via Domain Create Flags.

44:29.500 --> 44:32.500
Wir Domain Post Auto Bypass.

44:32.500 --> 44:33.500
Okay.

44:33.500 --> 44:35.500
Juckt mich nicht.

44:35.500 --> 44:36.500
Okay, also.

44:36.500 --> 44:37.500
Wir Domain.

44:37.500 --> 44:40.500
Wir Domain Create XML.

44:40.500 --> 44:44.500
Alles klar.

44:44.500 --> 44:46.500
Kopieren wir das mal.

44:46.500 --> 44:47.500
Das wird was, Leute.

44:47.500 --> 44:53.500
Ich bin mir echt gespannt, ob ich in der Lage bin, eine VM zu erstellen über die CRP.

44:53.500 --> 44:54.500
So, also.

44:54.500 --> 44:56.500
Domain Pointer kommt zurück.

44:56.500 --> 44:57.500
Wunderbar.

44:57.500 --> 44:58.500
Kann in Pointer bleiben.

44:58.500 --> 45:01.500
So, wir Connection Pointer ist richtig.

45:01.500 --> 45:03.500
XML Description.

45:03.500 --> 45:04.500
String XML.

45:04.500 --> 45:07.500
Leute, wenn man das so macht, teilweise, gibt es Memory Leaks.

45:07.500 --> 45:12.500
Das ist aber nicht schlimm, weil die Anwendung startet und stoppt sich eh wieder und wird alles aufgeräumt.

45:12.500 --> 45:16.500
Scheiß drauf, ob es Memory Leaks gibt oder nicht.

45:16.500 --> 45:21.500
Unsigned Int Flags.

45:21.500 --> 45:22.500
Flags.

45:22.500 --> 45:24.500
Okay, das setzen wir mal auf Null.

45:24.500 --> 45:28.500
Ich will eigentlich keine Flags setzen.

45:28.500 --> 45:35.500
Jetzt ist nur die Frage, wo kriegen wir mal ein gültiges XML für eine VM her?

45:35.500 --> 45:39.500
Interop Create XML.

45:39.500 --> 45:40.500
So.

45:40.500 --> 45:47.500
Connection ID von meiner LibVirt Connection.

45:47.500 --> 45:49.500
Wenn man was wie macht, gibt es Leaks.

45:49.500 --> 46:00.500
Wenn man so nette Funktionen aufruft und Managed Datentypen übergibt.

46:00.500 --> 46:03.500
In dem Fall in die Richtung geht es.

46:03.500 --> 46:08.500
Aber das ist dann problematisch, sollte das die andere Seite irgendwie freigeben oder sowas.

46:08.500 --> 46:13.500
Also es gibt manchmal Probleme, wenn man Managed Datentypen hin und her schiebt.

46:13.500 --> 46:25.500
Und da muss man muss man genau darauf achten, wer wie wann wo was freigeben muss.

46:25.500 --> 46:32.500
LibVirt DOM XML Example.

46:32.500 --> 46:49.500
Okay, das ist sehr kurz und knackig.

46:49.500 --> 46:54.500
Das ist sehr kurz und knackig.

46:54.500 --> 46:56.500
Das probieren wir jetzt mal aus.

46:56.500 --> 47:01.500
Okay, also war XML.

47:01.500 --> 47:09.500
Jetzt können wir hier das neue String Literal Syntax verwenden.

47:09.500 --> 47:10.500
Okay.

47:10.500 --> 47:12.500
Übrigens, da müsst ihr drauf achten.

47:12.500 --> 47:18.500
Das kann ich euch an der Stelle noch mal kurz erzählen, weil da macht man macht man sich Probleme und sucht danach ewig Fehler.

47:18.500 --> 47:22.500
Also das ist das erinnert vielleicht ein bisschen an Python hier an der Stelle.

47:22.500 --> 47:28.500
Das geht allerdings auch seit.net 7 glaube ich erst oder 6 oder 7.

47:28.500 --> 47:35.500
Ich weiß ich seit einem der aller aller letzten recent C Sharp Version, dass man Multiline Strings so mit dreifachen Anführungszeichen machen kann.

47:35.500 --> 47:38.500
Es gibt noch mehr Varianten, wie man das machen kann.

47:38.500 --> 47:45.500
Aber wichtig ist die schließenden hier Triple Quotes.

47:45.500 --> 47:53.500
Die müssen auf der Höhe stehen, wo euer Text in der Datei anfangen soll.

47:53.500 --> 48:00.500
Wenn ich das so habe, wenn ich das hier so habe, dann macht ihr das mal neu.

48:00.500 --> 48:08.500
Wenn ich das so habe, dann landet es mit einem Tab in der Datei und je nachdem ist das dann vielleicht nicht gültig.

48:08.500 --> 48:11.500
Also bei XML jetzt egal, aber das kann durchaus sein.

48:11.500 --> 48:23.500
Das heißt, man muss immer darauf achten, wo man hier die closenden Triple Quotes platziert, weil ihr seht es ja hier auch an dem blauen.

48:23.500 --> 48:29.500
Das ist quasi die Baseline, wo es dann am Ende ja mit Jammen wird es dann Fehler geben.

48:29.500 --> 48:33.500
Genau das ist so die Baseline, wie es am Ende dann auch wieder rauskommt.

48:33.500 --> 48:36.500
Also da muss man gucken.

48:36.500 --> 48:39.500
Man macht instinktiv ist vorne, aber es ist falsch.

48:39.500 --> 48:42.500
Es muss dort sein, wo der Text aufhören soll.

48:42.500 --> 48:50.500
Wenn ich die weiter einrücke, dann will er nicht und sagt, das geht nicht.

48:51.500 --> 48:54.500
Also man muss das wirklich hier an der Stelle machen.

48:54.500 --> 48:59.500
Das haben die in Rider auch gut gemacht, dass man hier so eine blaue Linie bekommt.

48:59.500 --> 49:05.500
Okay, also wir brauchen, müssen ein paar Sachen generieren, dass man die vm anlegen kann anscheinend.

49:05.500 --> 49:07.500
Gut, gleich, gut, neu.

49:15.500 --> 49:17.500
So, dann setzen wir das mal hier ein.

49:21.500 --> 49:23.500
Memory, ja wunderbar.

49:23.500 --> 49:26.500
Eine CPU, wunderbar, wunderbar.

49:26.500 --> 49:28.500
Local Time, wunderbar, alles gut.

49:29.500 --> 49:34.500
Emulator, User Bin, QEMO, KVM, wunderbar.

49:34.500 --> 49:39.500
Source Files, war, lib, lib wird, Images, Demo 2, Image.

49:42.500 --> 49:44.500
Latest, Moment.

49:44.500 --> 49:47.500
Moment, Debian Cloud hier.

49:47.500 --> 49:52.500
Wir müssen mal kurz noch ein Debian Cloud Image runterladen, um zu gucken, ob das dann auch funktioniert.

49:54.500 --> 49:56.500
Generic Clouds.

49:57.500 --> 49:59.500
Copy Link.

49:59.500 --> 50:01.500
Weget.

50:01.500 --> 50:02.500
Schön.

50:03.500 --> 50:05.500
32 Bit, ach so.

50:09.500 --> 50:11.500
Ja, was muss man da einstellen?

50:11.500 --> 50:14.500
Ich meine, ich kann es mal so lassen, es ist ja nicht...

50:16.500 --> 50:20.500
Es sollte ja nicht davon kaputt gehen, oder?

50:25.500 --> 50:26.500
Wir können es doch einfach mal raus.

50:26.500 --> 50:28.500
Nee, komm, wir machen Arch.

50:31.500 --> 50:33.500
Ja, keine Ahnung, wie das aussehen muss.

50:36.500 --> 50:40.500
X8664, oder so?

50:41.500 --> 50:43.500
HVM?

50:45.500 --> 50:47.500
Was ist HVM?

50:49.500 --> 50:52.500
Wir sollten uns mal so ein XML-File von irgendwo kupieren.

50:52.500 --> 50:54.500
Die Mac-Adresse schmeißen wir raus.

50:54.500 --> 50:57.500
So, ich muss gucken, ob mein...

50:58.500 --> 50:59.500
Network...

50:59.500 --> 51:03.500
Ah, Mist, das Netzwerk ist noch gar nicht da, aber das ist jetzt erstmal egal.

51:03.500 --> 51:06.500
Keymap, Graphics, Output brauchen wir nicht.

51:06.500 --> 51:08.500
Target Device, HDA.

51:08.500 --> 51:10.500
File ist...

51:12.500 --> 51:15.500
Ich bin mir gar nicht sicher, ob man das absolut angeben muss, aber wahrscheinlich.

51:16.500 --> 51:19.500
Ja, also File ist Debian Image.

51:20.500 --> 51:23.500
Bin ich mal gespannt, ob das funktioniert, alter Lul.

51:24.500 --> 51:27.500
Ich habe so meine Zweifel, ob...

51:30.500 --> 51:32.500
Moment, da muss ich auch an der Stelle...

51:32.500 --> 51:35.500
QEMU, QEMU System.

51:36.500 --> 51:39.500
AMD64, wo ist es denn?

51:39.500 --> 51:41.500
Nee, der ist irgendwo.

51:41.500 --> 51:43.500
Nee, System X86 heißt das, glaube ich.

51:43.500 --> 51:45.500
Hier, X86.

51:45.500 --> 51:49.500
Das muss ich auch eintragen, sonst kann das an der Stelle auch schon mal nicht funktionieren.

51:52.500 --> 51:54.500
Okay, nice.

51:54.500 --> 51:56.500
Jetzt bin ich mal gespannt.

51:56.500 --> 51:57.500
Demo 2.

51:57.500 --> 52:00.500
Ja, Demo 2 ist perfekter Name für die HVM.

52:01.500 --> 52:03.500
Alles klar.

52:03.500 --> 52:06.500
Okay, dann probieren wir das mal aus, ob er die HVM jetzt erstellt.

52:11.500 --> 52:13.500
Imleblich, alter, imleblich.

52:13.500 --> 52:15.500
XML.

52:15.500 --> 52:17.500
Okay, gib ihm, run.

52:21.500 --> 52:23.500
Network not fault.

52:23.500 --> 52:26.500
No network with machine, with matching name default.

52:27.500 --> 52:28.500
Ja.

52:29.500 --> 52:30.500
Toll.

52:33.500 --> 52:35.500
Um, warum, warum nicht?

52:38.500 --> 52:41.500
Wir lassen das Netzwerk einfach mal weg zum Ausprobieren.

52:41.500 --> 52:43.500
Not net run.

52:45.500 --> 52:47.500
Die HVM läuft.

52:48.500 --> 52:50.500
Die geht einfach.

52:51.500 --> 52:55.500
Okay, wir wissen nicht, ob sie geht, weil wir haben keine grafische Ausgabe, aber...

52:55.500 --> 52:57.500
Moment mal, ich delete das noch mal.

52:57.500 --> 52:58.500
Ich delete das noch mal.

52:58.500 --> 53:00.500
Wo war das jetzt mit dem VNC?

53:04.500 --> 53:05.500
Wo war das jetzt mit dem VNC?

53:05.500 --> 53:07.500
Ich hab doch irgendwo ein VNC gelöscht.

53:07.500 --> 53:08.500
Graphics.

53:08.500 --> 53:10.500
Hier, VNC kommt da unten noch mal rein.

53:13.500 --> 53:15.500
Dass ich, dass ich auch was sehe.

53:15.500 --> 53:17.500
Run.

53:17.500 --> 53:19.500
Run.

53:21.500 --> 53:23.500
Okay.

53:23.500 --> 53:25.500
Run.

53:29.500 --> 53:31.500
No boot...

53:31.500 --> 53:33.500
No bootable device?

53:36.500 --> 53:38.500
Okay, die HVM erstellt das schon mal.

53:38.500 --> 53:40.500
Und jetzt?

53:42.500 --> 53:44.500
IDE-Disk.

53:45.500 --> 53:47.500
Äh, ne, das wird so wahrscheinlich nix.

53:48.500 --> 53:49.500
Okay, delete.

53:49.500 --> 53:50.500
Ihr habt recht.

53:50.500 --> 53:52.500
Ich, ich, ich kopier mir hier eine raus.

53:54.500 --> 53:56.500
Das hier, zack.

53:57.500 --> 53:59.500
Wird, wird install.

54:00.500 --> 54:02.500
Example.

54:06.500 --> 54:08.500
Wird install.

54:08.500 --> 54:10.500
Okay, gut hab ich drauf.

54:10.500 --> 54:12.500
Ähm, also.

54:12.500 --> 54:14.500
Ich hab...

54:14.500 --> 54:16.500
KVM install GitHub.

54:17.500 --> 54:19.500
Ja.

54:19.500 --> 54:21.500
Ich verwende aktuell bei mir lokal so dieses Bash Script

54:21.500 --> 54:23.500
vom Gio Torres.

54:23.500 --> 54:25.500
Um mir ab und zu

54:25.500 --> 54:27.500
Lokaltest-VM's anzulegen.

54:27.500 --> 54:29.500
Das geht sehr zackig.

54:31.500 --> 54:33.500
Und sowas könnte man auch mal in C Sharp bauen.

54:35.500 --> 54:37.500
Allerdings kann man uns da abgucken, wie wird,

54:37.500 --> 54:39.500
wie wird install funktioniert.

54:39.500 --> 54:41.500
Nämlich so.

54:43.500 --> 54:45.500
Also, wird install.

54:45.500 --> 54:47.500
Graphics Options.

54:47.500 --> 54:49.500
Brauch man nicht.

54:52.500 --> 54:54.500
Graphics Options.

54:54.500 --> 54:56.500
Brauch man nicht.

54:56.500 --> 54:58.500
OS Variant.

54:58.500 --> 55:00.500
Hm, bin ich mir unschlüssig, was da rein muss.

55:06.500 --> 55:08.500
Äh, Network Options.

55:10.500 --> 55:12.500
Disk Options.

55:13.500 --> 55:15.500
Äh, ne, da kann ich mir nichts

55:15.500 --> 55:17.500
so zusammenreimen gerade.

55:21.500 --> 55:23.500
Shit.

55:23.500 --> 55:25.500
Okay, wir müssen das, wir müssen das anders machen.

55:25.500 --> 55:27.500
Wir müssen hier eine VM erstellen, testweise.

55:27.500 --> 55:29.500
Create New Virtual Machine.

55:31.500 --> 55:33.500
Manual Install.

55:35.500 --> 55:37.500
x8664 VM.

55:38.500 --> 55:40.500
Linux.

55:40.500 --> 55:42.500
2020 soll da Kram

55:42.500 --> 55:44.500
oder Linux, ja.

55:44.500 --> 55:46.500
Generic Linux, wunderbar.

55:46.500 --> 55:48.500
Ja, meinetwegen zwei CPUs.

55:48.500 --> 55:50.500
Select, create custom

55:50.500 --> 55:52.500
storage. So.

55:52.500 --> 55:54.500
Und da wollen wir jetzt an der Stelle haben.

55:56.500 --> 55:58.500
Wo habe ich das runtergeladen?

55:58.500 --> 56:00.500
Repos.

56:06.500 --> 56:08.500
VMChamp.

56:09.500 --> 56:11.500
Generic Cloud Image.

56:13.500 --> 56:15.500
Network Section.

56:15.500 --> 56:17.500
User Mode.

56:17.500 --> 56:19.500
Bridge Device.

56:20.500 --> 56:22.500
Was haben wir denn da?

56:26.500 --> 56:28.500
Hab ich, hab ich wir null

56:28.500 --> 56:30.500
oder sowas?

56:32.500 --> 56:34.500
Wir Br,

56:34.500 --> 56:36.500
Sudo.

56:36.500 --> 56:38.500
Und dann die standardmäßige Netzwerkinterface an.

56:42.500 --> 56:44.500
Ist doch hier, Default. Warum ist das inactive?

56:44.500 --> 56:46.500
Was ist da los?

56:46.500 --> 56:48.500
Was?

56:48.500 --> 56:50.500
Unable to find DNS

56:50.500 --> 56:52.500
Mask.

56:52.500 --> 56:54.500
Was der alles haben will, ich fasse es nicht.

56:54.500 --> 56:56.500
DNS Mask, gib ihm. Nice, DNS Mask,

56:56.500 --> 56:58.500
auch drauf.

56:58.500 --> 57:00.500
On Boot Active.

57:00.500 --> 57:02.500
Apply. So, jetzt sollten wir,

57:02.500 --> 57:04.500
jetzt sollten wir eine Virtual Interface,

57:04.500 --> 57:06.500
wir, wir Br null wollen wir haben.

57:06.500 --> 57:08.500
Wir Br,

57:08.500 --> 57:10.500
obbei, oder, oder einfach Default.

57:12.500 --> 57:14.500
Jetzt bin ich mal gespannt,

57:14.500 --> 57:16.500
ob das bootet, Alter.

57:16.500 --> 57:18.500
Okay.

57:18.500 --> 57:20.500
Bam.

57:20.500 --> 57:22.500
Debian bootet schon mal. Poggers.

57:24.500 --> 57:26.500
Aber Debian, ich habe keinen User und sonst was gesetzt.

57:26.500 --> 57:28.500
Das muss ich über Cloud in den später machen.

57:28.500 --> 57:30.500
Aber Debian bootet.

57:30.500 --> 57:32.500
Ich bin, ich bin begeistert. Das heißt,

57:32.500 --> 57:34.500
hier können wir uns gleich die VM schon mal crappen.

57:34.500 --> 57:36.500
Also das XML von der VM

57:36.500 --> 57:38.500
crappen.

57:38.500 --> 57:40.500
Und mal gucken, ob sich das

57:40.500 --> 57:42.500
in der IP zählt. Das ist eine

57:42.500 --> 57:44.500
Nested VM, ja? Das ist eine Nested

57:44.500 --> 57:46.500
VM. Wir testen

57:46.500 --> 57:48.500
auch gleich mal, wie viel Nested VM ich ab kann.

57:48.500 --> 57:50.500
Wie viel da geht.

57:50.500 --> 57:52.500
Das sieht doch eigentlich alles ganz gut

57:52.500 --> 57:54.500
aus. XML.

57:54.500 --> 57:56.500
Alter, was hat

57:56.500 --> 57:58.500
der hier denn alles?

57:58.500 --> 58:00.500
Zieht es sich, zieht es sich in der IP?

58:02.500 --> 58:04.500
Nee, sieht nicht so aus.

58:06.500 --> 58:08.500
Sollte das nicht gehen, weil das sehr

58:10.500 --> 58:12.500
wackelig aussieht alles.

58:14.500 --> 58:16.500
Wahrscheinlich habe ich keine Rechte auf die

58:16.500 --> 58:18.500
auf das

58:18.500 --> 58:20.500
Interface.

58:24.500 --> 58:26.500
Die meisten Prozessoren schützen

58:26.500 --> 58:28.500
das nicht mit Nested Virtualisierung.

58:28.500 --> 58:30.500
Doch, das kann so gut wie jede moderne CPU.

58:30.500 --> 58:32.500
Nested Virtualisierung. Du musst es

58:32.500 --> 58:34.500
in den VM-Settings einschalten, aber Nested

58:34.500 --> 58:36.500
Virtualisierung geht eigentlich schon lange.

58:38.500 --> 58:40.500
Was macht eine Nested VM? Die macht das

58:40.500 --> 58:42.500
gleiche wie eine normale VM, nur dass sie selbst

58:42.500 --> 58:44.500
wiederum in einer VM läuft. Also guck,

58:44.500 --> 58:46.500
ich habe Linux in einer VM laufen

58:46.500 --> 58:48.500
und in meiner VM habe ich ein weiteres

58:48.500 --> 58:50.500
Linux laufen.

58:50.500 --> 58:52.500
Okay, das mit

58:54.500 --> 58:56.500
Brrrr CTL

58:56.500 --> 58:58.500
Show.

58:58.500 --> 59:00.500
Okay, da sind schlichter gesagt keine

59:00.500 --> 59:02.500
Interfaces dran. Wahrscheinlich habe ich

59:02.500 --> 59:04.500
keine Rechte. Wahrscheinlich, ich gehe

59:04.500 --> 59:06.500
davon aus, dass ich keine Rechte habe.

59:06.500 --> 59:08.500
Kann ich, kann ich vielleicht

59:08.500 --> 59:10.500
via Brrrr 0 Netzwerk

59:10.500 --> 59:12.500
Interface machen?

59:12.500 --> 59:14.500
Okay.

59:16.500 --> 59:18.500
Testen wir mal. Shutdown.

59:18.500 --> 59:20.500
Force off, ja ja.

59:20.500 --> 59:22.500
Weiter.

59:22.500 --> 59:24.500
Put the VM

59:24.500 --> 59:26.500
in my VM, genauer.

59:26.500 --> 59:28.500
I can't VM

59:28.500 --> 59:30.500
while I'm VMming.

59:30.500 --> 59:32.500
Party, Dankeschön für den

59:32.500 --> 59:34.500
Zapp.

59:34.500 --> 59:36.500
Was ist der Vorteil von einer VM in einer VM?

59:36.500 --> 59:38.500
Naja, für die VM selber nichts.

59:38.500 --> 59:40.500
Du kannst es allerdings von dem System

59:40.500 --> 59:42.500
managen, was du in der VM betreibst.

59:42.500 --> 59:44.500
Was ganz praktisch ist.

59:44.500 --> 59:46.500
So, jetzt bin ich mal gespannt, ob der

59:46.500 --> 59:48.500
sich jetzt hier was zieht. Aha!

59:48.500 --> 59:50.500
Schon hängt ein Interface an meiner

59:50.500 --> 59:52.500
Bridge dran. Interessant, interessant.

59:52.500 --> 59:54.500
Jetzt kriegt er auch eine IP.

59:54.500 --> 59:56.500
Okay, das funktioniert schon mal.

59:56.500 --> 59:58.500
Das finde ich nice.

59:58.500 --> 01:00:00.500
Ping tut die VM auch.

01:00:00.500 --> 01:00:02.500
Ich habe kein Login, aber das XML

01:00:02.500 --> 01:00:04.500
können wir uns crappen.

01:00:04.500 --> 01:00:06.500
Das ist poggers, das XML.

01:00:06.500 --> 01:00:08.500
Das brauchen wir.

01:00:08.500 --> 01:00:10.500
So, delete.

01:00:10.500 --> 01:00:12.500
Delete.

01:00:12.500 --> 01:00:14.500
Alles klar, das XML nehmen wir jetzt.

01:00:14.500 --> 01:00:16.500
Perfektes XML.

01:00:16.500 --> 01:00:18.500
Nice, du XML.

01:00:18.500 --> 01:00:20.500
Nice, du XML.

01:00:20.500 --> 01:00:22.500
Alter, ist das viel! Alter,

01:00:22.500 --> 01:00:24.500
ist das viel! What the fuck!

01:00:24.500 --> 01:00:26.500
MonkaS, da muss

01:00:26.500 --> 01:00:28.500
die Hälfte raus von.

01:00:28.500 --> 01:00:30.500
Da muss die Hälfte

01:00:30.500 --> 01:00:32.500
raus von. WCF, das hört ja gar nicht mehr auf.

01:00:32.500 --> 01:00:34.500
Okay, was haben wir hier?

01:00:34.500 --> 01:00:36.500
Generic Linux.

01:00:36.500 --> 01:00:38.500
Hier, da muss wieder

01:00:38.500 --> 01:00:40.500
meine ID rein.

01:00:40.500 --> 01:00:42.500
Greed.

01:00:42.500 --> 01:00:44.500
Memory.

01:00:44.500 --> 01:00:46.500
Nee.

01:00:46.500 --> 01:00:48.500
Nee.

01:00:50.500 --> 01:00:52.500
Bytes, 2GB,

01:00:52.500 --> 01:00:54.500
dürften genau... Ah, nee, nee.

01:00:54.500 --> 01:00:56.500
Gibi?

01:00:56.500 --> 01:00:58.500
Nee,

01:00:58.500 --> 01:01:00.500
Gibi?

01:01:02.500 --> 01:01:04.500
Fuck,

01:01:04.500 --> 01:01:06.500
Alter.

01:01:10.500 --> 01:01:12.500
Das ist...

01:01:12.500 --> 01:01:14.500
Peter Bytes?

01:01:14.500 --> 01:01:16.500
Aber

01:01:16.500 --> 01:01:18.500
was?

01:01:18.500 --> 01:01:20.500
Nein, nein, nein.

01:01:20.500 --> 01:01:22.500
Ja, ja.

01:01:22.500 --> 01:01:24.500
Zu

01:01:24.500 --> 01:01:26.500
Megabyte.

01:01:26.500 --> 01:01:28.500
PMB?

01:01:28.500 --> 01:01:30.500
Ach, im Moment,

01:01:30.500 --> 01:01:32.500
das ist in unit Kilo Byte.

01:01:32.500 --> 01:01:34.500
Ah, nee, nee, nee, nee. Okay, das sind, das sind, das sind

01:01:34.500 --> 01:01:36.500
Kilo...

01:01:36.500 --> 01:01:38.500
Kibi Byte zu

01:01:38.500 --> 01:01:40.500
Megabyte. Also das ist zu

01:01:40.500 --> 01:01:42.500
Gibi. Heißt die Gibi?

01:01:42.500 --> 01:01:44.500
Gibi?

01:01:44.500 --> 01:01:46.500
Ja, okay.

01:01:46.500 --> 01:01:48.500
Also, 4GB, sehr, sehr

01:01:48.500 --> 01:01:50.500
gut. So, das heißt, wenn ich einfach

01:01:50.500 --> 01:01:52.500
nur, sagen wir mal...

01:01:54.500 --> 01:01:56.500
Wenn ich, wenn ich das Ganze nur

01:01:56.500 --> 01:01:58.500
in 500, das reicht ja

01:01:58.500 --> 01:02:00.500
als erste Mal, man muss ja jetzt übertreiben.

01:02:00.500 --> 01:02:02.500
Okay, wunderbar.

01:02:02.500 --> 01:02:04.500
Man kann die Unit

01:02:04.500 --> 01:02:06.500
anpassen wahrscheinlich schon, aber so

01:02:06.500 --> 01:02:08.500
ist, ist okay.

01:02:08.500 --> 01:02:10.500
Was?

01:02:10.500 --> 01:02:12.500
Memory? Current Memory?

01:02:12.500 --> 01:02:14.500
Ach so,

01:02:14.500 --> 01:02:16.500
naja, das interessiert mich nicht.

01:02:16.500 --> 01:02:18.500
Static? V?

01:02:18.500 --> 01:02:20.500
Was? V?

01:02:20.500 --> 01:02:22.500
Out CPU.

01:02:24.500 --> 01:02:26.500
Placement

01:02:26.500 --> 01:02:28.500
Static 1

01:02:28.500 --> 01:02:30.500
reicht.

01:02:32.500 --> 01:02:34.500
Boot Device HD?

01:02:38.500 --> 01:02:40.500
Das sieht doch, sieht doch ganz

01:02:40.500 --> 01:02:42.500
gut aus. Features?

01:02:42.500 --> 01:02:44.500
Ja, wunderbar, genau.

01:02:44.500 --> 01:02:46.500
GPU? Was?

01:02:46.500 --> 01:02:48.500
CPU Mode?

01:02:48.500 --> 01:02:50.500
Host Model? Was? Wie? Nee.

01:02:50.500 --> 01:02:52.500
Host? Was? Host?

01:02:52.500 --> 01:02:54.500
Pass to Check-None? MyCreatableOn?

01:02:58.500 --> 01:03:00.500
Kein Schimmer. Okay, gut.

01:03:00.500 --> 01:03:02.500
Clock? Yep.

01:03:02.500 --> 01:03:04.500
Yep, Clock. Power Off

01:03:04.500 --> 01:03:06.500
Destroy? PM?

01:03:06.500 --> 01:03:08.500
Devices? Okay, jetzt wird es interessant.

01:03:08.500 --> 01:03:10.500
Devices.

01:03:10.500 --> 01:03:12.500
Emulator?

01:03:12.500 --> 01:03:14.500
Disk?

01:03:14.500 --> 01:03:16.500
Okay.

01:03:18.500 --> 01:03:20.500
Hier ist mein Image drin.

01:03:20.500 --> 01:03:22.500
Controller Type?

01:03:22.500 --> 01:03:24.500
USB?

01:03:26.500 --> 01:03:28.500
Nee, das würde ich sagen, brauchen wir.

01:03:30.500 --> 01:03:32.500
Wobei, scheiß drauf, ich passe da einfach nichts.

01:03:32.500 --> 01:03:34.500
Ich passe einfach nichts

01:03:34.500 --> 01:03:36.500
dran an. Ist doch egal.

01:03:36.500 --> 01:03:38.500
Ich lasse es einfach. Komm, alles

01:03:38.500 --> 01:03:40.500
gut, wir lassen es einfach.

01:03:40.500 --> 01:03:42.500
Das Einzige, was ich ändern muss, ist

01:03:42.500 --> 01:03:44.500
die Mac-Adresse von

01:03:44.500 --> 01:03:46.500
die schmeißen wir einfach raus,

01:03:46.500 --> 01:03:48.500
in der Hoffnung er generiert dann eine neue.

01:03:48.500 --> 01:03:50.500
Was da alles drin

01:03:50.500 --> 01:03:52.500
ist, man.

01:03:52.500 --> 01:03:54.500
Ich lasse es einfach

01:03:54.500 --> 01:03:56.500
so.

01:03:56.500 --> 01:03:58.500
Ich lasse es einfach so.

01:03:58.500 --> 01:04:00.500
Okay, und jetzt kriegen wir eine

01:04:00.500 --> 01:04:02.500
VM. Run.

01:04:04.500 --> 01:04:06.500
Zack.

01:04:06.500 --> 01:04:08.500
Da ist eine VM.

01:04:08.500 --> 01:04:10.500
Und warum heißt das Linux 2020?

01:04:10.500 --> 01:04:12.500
Weil ich den Namen

01:04:12.500 --> 01:04:14.500
nicht geändert habe.

01:04:14.500 --> 01:04:16.500
Der Name muss ja

01:04:16.500 --> 01:04:18.500
keine Ahnung, VM Name

01:04:18.500 --> 01:04:20.500
gleich

01:04:20.500 --> 01:04:22.500
Test VM.

01:04:22.500 --> 01:04:24.500
Irgendwie so.

01:04:24.500 --> 01:04:26.500
So.

01:04:26.500 --> 01:04:28.500
So.

01:04:30.500 --> 01:04:32.500
Das scheint zu funktionieren.

01:04:32.500 --> 01:04:34.500
Ich bin begeistert.

01:04:38.500 --> 01:04:40.500
Und wenn ich das jetzt erstelle?

01:04:42.500 --> 01:04:44.500
Na, da heißt es auch Test VM.

01:04:44.500 --> 01:04:46.500
Das ist ja extrem

01:04:46.500 --> 01:04:48.500
nice.

01:04:52.500 --> 01:04:54.500
Nee, so einfach ist es nicht. Wir können

01:04:54.500 --> 01:04:56.500
uns aber die Publish-Size zwischendurch

01:04:56.500 --> 01:04:58.500
angucken.

01:04:58.500 --> 01:05:00.500
So einfach

01:05:00.500 --> 01:05:02.500
machen wir das der ganzen Sache hier

01:05:02.500 --> 01:05:04.500
noch nicht.

01:05:04.500 --> 01:05:06.500
Weil ich kann mich ja da beispielsweise per Netzwerk

01:05:06.500 --> 01:05:08.500
gar nicht drauf einloggen. Guckt mal.

01:05:08.500 --> 01:05:10.500
Das Ding zieht sich zwar eine IP,

01:05:10.500 --> 01:05:12.500
aber

01:05:12.500 --> 01:05:14.500
ich wette mit euch SSH.

01:05:14.500 --> 01:05:16.500
SSH Login ist nicht möglich.

01:05:16.500 --> 01:05:18.500
Nee, nee, nee, nee. Da brauchen wir jetzt noch ein

01:05:18.500 --> 01:05:20.500
Cloud-Init-File, was wir ranhängen

01:05:20.500 --> 01:05:22.500
oder so.

01:05:22.500 --> 01:05:24.500
So, aber löschen wir erstmal die VM.

01:05:26.500 --> 01:05:28.500
Ja.

01:05:28.500 --> 01:05:30.500
Exzellent.

01:05:30.500 --> 01:05:32.500
Und mal gucken, wie groß das Ganze jetzt

01:05:32.500 --> 01:05:34.500
ist. Publish.

01:05:34.500 --> 01:05:36.500
Das dürfte noch nicht sonderlich groß sein. Wir haben

01:05:36.500 --> 01:05:38.500
ja keine zusätzlichen Libraries drinne und sonst was.

01:05:42.500 --> 01:05:44.500
Ja, aber wenn man das jetzt...

01:05:44.500 --> 01:05:46.500
Sag mal. Was zum...

01:05:46.500 --> 01:05:48.500
Was genau

01:05:48.500 --> 01:05:50.500
geht mit meinem Terminal da ab?

01:05:52.500 --> 01:05:54.500
So.

01:05:56.500 --> 01:05:58.500
Immer noch 1,8 MB

01:05:58.500 --> 01:06:00.500
groß.

01:06:00.500 --> 01:06:02.500
Ja, das ist doch nicht schlecht.

01:06:02.500 --> 01:06:04.500
Das ist Rider. Ja, richtig.

01:06:08.500 --> 01:06:10.500
1,8 MB.

01:06:10.500 --> 01:06:12.500
Ja, wir haben ja auch noch nichts

01:06:12.500 --> 01:06:14.500
ernstzunehmendes gemacht.

01:06:14.500 --> 01:06:16.500
Boah, ist das ein abartig

01:06:16.500 --> 01:06:18.500
fettes, großes XML,

01:06:18.500 --> 01:06:20.500
man.

01:06:20.500 --> 01:06:22.500
So.

01:06:24.500 --> 01:06:26.500
War das Hello World

01:06:26.500 --> 01:06:28.500
nicht 1,9? Gute

01:06:28.500 --> 01:06:30.500
Frage. Weiß ich nicht mehr.

01:06:30.500 --> 01:06:32.500
Kann schon sein.

01:06:34.500 --> 01:06:36.500
So.

01:06:36.500 --> 01:06:38.500
Also. Wir haben ja

01:06:38.500 --> 01:06:40.500
ein mega hässliches XML. Interop

01:06:40.500 --> 01:06:42.500
mit C. Die Datei ist immer noch klein.

01:06:42.500 --> 01:06:44.500
Das ist schon mal nice. Jetzt müssen wir

01:06:44.500 --> 01:06:46.500
noch ein paar andere Sachen ausprobieren.

01:06:46.500 --> 01:06:48.500
Wir machen jetzt noch ein paar Libraries dazu,

01:06:48.500 --> 01:06:50.500
damit wir einfach mal sehen, wie schnell

01:06:50.500 --> 01:06:52.500
das größer wird. Wir machen mal ein bisschen

01:06:52.500 --> 01:06:54.500
farbige Konsolenausgabe.

01:06:54.500 --> 01:06:56.500
Weil wer will

01:06:56.500 --> 01:06:58.500
keine farbige Konsolenausgabe beim

01:06:58.500 --> 01:07:00.500
VM erstellen?

01:07:04.500 --> 01:07:06.500
Markup.

01:07:06.500 --> 01:07:08.500
Ah, wir müssen doch warten,

01:07:08.500 --> 01:07:10.500
ob das Netzwerk... Wir müssen

01:07:10.500 --> 01:07:12.500
warten, wenn

01:07:12.500 --> 01:07:14.500
die VM richtig hochgefahren ist und das Netzwerk

01:07:14.500 --> 01:07:16.500
ready ist. Das müssen wir

01:07:16.500 --> 01:07:18.500
natürlich noch machen. So.

01:07:18.500 --> 01:07:20.500
Markup, interpolated,

01:07:20.500 --> 01:07:22.500
was auch immer.

01:07:22.500 --> 01:07:24.500
Markup.

01:07:24.500 --> 01:07:26.500
Markup-Line.

01:07:26.500 --> 01:07:28.500
So.

01:07:28.500 --> 01:07:30.500
In...

01:07:30.500 --> 01:07:32.500
Gelb.

01:07:32.500 --> 01:07:34.500
Starting VM.

01:07:36.500 --> 01:07:38.500
VM-Name.

01:07:40.500 --> 01:07:42.500
So. Jetzt können wir das in gelb.

01:07:42.500 --> 01:07:44.500
Richtig advanced

01:07:44.500 --> 01:07:46.500
aus langsam.

01:07:46.500 --> 01:07:48.500
Boah.

01:07:48.500 --> 01:07:50.500
So, jetzt ist das Binary garantiert

01:07:50.500 --> 01:07:52.500
viel fetter.

01:07:52.500 --> 01:07:54.500
Können ich wetten.

01:07:54.500 --> 01:07:56.500
Weil jetzt ist noch Specter

01:07:56.500 --> 01:07:58.500
Konsol dabei. Das ist eine recht

01:07:58.500 --> 01:08:00.500
fette Library.

01:08:00.500 --> 01:08:02.500
Bild.

01:08:02.500 --> 01:08:04.500
Hä?

01:08:04.500 --> 01:08:06.500
Schon 3,8 MB groß.

01:08:06.500 --> 01:08:08.500
Schon 3,8 MB groß. Es wächst.

01:08:08.500 --> 01:08:10.500
Aber es ist immer noch

01:08:10.500 --> 01:08:12.500
komplett im Rahmen. Ich mein.

01:08:12.500 --> 01:08:14.500
Was

01:08:14.500 --> 01:08:16.500
sind 3,8 heutzutage? Easy.

01:08:16.500 --> 01:08:18.500
Ist doch kein Problem, oder? Ich mein.

01:08:18.500 --> 01:08:20.500
Also.

01:08:20.500 --> 01:08:22.500
Eine Go-Anwendung ist jetzt auch nicht so viel kleiner.

01:08:22.500 --> 01:08:24.500
Ich weiß nicht. Hat jemand einen Plan von euch?

01:08:24.500 --> 01:08:26.500
Wie groß ist eine Hello World

01:08:26.500 --> 01:08:28.500
Go-Anwendung?

01:08:28.500 --> 01:08:30.500
Wahrscheinlich

01:08:30.500 --> 01:08:32.500
auch ungefähr in dem

01:08:32.500 --> 01:08:34.500
Kram.

01:08:34.500 --> 01:08:36.500
Irgendwie 2 MB oder sowas.

01:08:36.500 --> 01:08:38.500
Eins, zwei MB.

01:08:38.500 --> 01:08:40.500
Das sind Log-Files größer. Ja, das stimmt.

01:08:42.500 --> 01:08:44.500
So, wie kriegen

01:08:44.500 --> 01:08:46.500
wir denn jetzt raus, ob die

01:08:46.500 --> 01:08:48.500
VM

01:08:48.500 --> 01:08:50.500
eine gültige IP hat?

01:08:54.500 --> 01:08:56.500
Da gibt es doch bestimmt

01:08:58.500 --> 01:09:00.500
Irgend

01:09:02.500 --> 01:09:04.500
irgendwelche

01:09:04.500 --> 01:09:06.500
C-Functions wieder.

01:09:06.500 --> 01:09:08.500
Suchen wir einfach mal

01:09:08.500 --> 01:09:10.500
hier. IP

01:09:10.500 --> 01:09:12.500
Address. Okay.

01:09:12.500 --> 01:09:14.500
Wir-Domain-IP-Adress.

01:09:14.500 --> 01:09:16.500
Wir-Domain-IP-Adress?

01:09:18.500 --> 01:09:20.500
Was?

01:09:22.500 --> 01:09:24.500
Was ist das?

01:09:24.500 --> 01:09:26.500
TCP-Connect

01:09:26.500 --> 01:09:28.500
als Y-Loop. Ja,

01:09:28.500 --> 01:09:30.500
ne, ne, ne. Wen schon machen wir das hier mit?

01:09:30.500 --> 01:09:32.500
Was haben wir denn hier?

01:09:32.500 --> 01:09:34.500
Wir-Domain-Interface-Adresses.

01:09:34.500 --> 01:09:36.500
Okay, das ist

01:09:36.500 --> 01:09:38.500
ein Pointer zur VM.

01:09:38.500 --> 01:09:40.500
Das ist ein...

01:09:40.500 --> 01:09:42.500
Was ist das denn?

01:09:42.500 --> 01:09:44.500
Ein Pointer auf einem Array?

01:09:44.500 --> 01:09:46.500
So was in der Richtung.

01:09:48.500 --> 01:09:50.500
Unsigned-Source-Flex.

01:09:50.500 --> 01:09:52.500
Oh, jetzt wird es eklig.

01:09:52.500 --> 01:09:54.500
Jetzt wird es eklig.

01:09:54.500 --> 01:09:56.500
Okay, auf geht's.

01:09:56.500 --> 01:09:58.500
Wie kriegen wir hier

01:09:58.500 --> 01:10:00.500
die...

01:10:00.500 --> 01:10:02.500
Ups. Äh.

01:10:02.500 --> 01:10:04.500
Wie kriegen wir jetzt hier die IP

01:10:04.500 --> 01:10:06.500
von der VM raus?

01:10:06.500 --> 01:10:08.500
Also das ganze Ding heißt schon mal

01:10:08.500 --> 01:10:10.500
Wir-Domain-Interface-Adresses.

01:10:10.500 --> 01:10:12.500
Obviously, wie soll es auch anders heißen.

01:10:12.500 --> 01:10:14.500
Dann haben wir ein

01:10:14.500 --> 01:10:16.500
Int-Pointer und das ist halt die

01:10:16.500 --> 01:10:18.500
VM.

01:10:18.500 --> 01:10:20.500
Ne, Domain heißt das bei denen

01:10:20.500 --> 01:10:22.500
immer. VM. So.

01:10:22.500 --> 01:10:24.500
Dann brauchen wir ein

01:10:24.500 --> 01:10:26.500
Wir-Domain-Interface-Pointer auf

01:10:26.500 --> 01:10:28.500
Pointer auf Pointer.

01:10:28.500 --> 01:10:30.500
Moment, ist das...

01:10:30.500 --> 01:10:32.500
Ist das ein Triple-Pointer oder was?

01:10:32.500 --> 01:10:34.500
Ein...

01:10:34.500 --> 01:10:36.500
Ein Pointer?

01:10:36.500 --> 01:10:38.500
Zu einem Pointer der offenen

01:10:38.500 --> 01:10:40.500
Po...

01:10:46.500 --> 01:10:48.500
Ne, Wir-Shell will ich nicht ausführen.

01:10:48.500 --> 01:10:50.500
Wenn schon, muss das über die AP gehen.

01:10:54.500 --> 01:10:56.500
Welchen Clip-Point-Manager

01:10:56.500 --> 01:10:58.500
benutzt du? Das ist

01:10:58.500 --> 01:11:00.500
Green-Clip-Mit-Rofi-Integration.

01:11:02.500 --> 01:11:04.500
Okay, wir machen mal die unstrittigen Teile.

01:11:04.500 --> 01:11:06.500
Unsign-Int.

01:11:08.500 --> 01:11:10.500
Also wir brauchen hier irgendwie so ein Shit, wo ich auch keine Ahnung

01:11:10.500 --> 01:11:12.500
habe, wie wir das ganze abbilden.

01:11:12.500 --> 01:11:14.500
Mal mal Zeilenumbruch,

01:11:14.500 --> 01:11:16.500
Zeilenumbruch, Zeilenumbruch.

01:11:16.500 --> 01:11:18.500
Und dann brauchen wir

01:11:18.500 --> 01:11:20.500
Source

01:11:22.500 --> 01:11:24.500
und Flex.

01:11:24.500 --> 01:11:26.500
Flex lassen wir auch auf Null.

01:11:26.500 --> 01:11:28.500
Okay.

01:11:28.500 --> 01:11:30.500
Wie kriegen

01:11:30.500 --> 01:11:32.500
wir diesen Krempel

01:11:32.500 --> 01:11:34.500
dahin? Interfaces.

01:11:36.500 --> 01:11:38.500
Wir-Domain-Interface-Pointer.

01:11:40.500 --> 01:11:42.500
Wir-Domain-Interfaces...

01:11:42.500 --> 01:11:44.500
Das ist ein...

01:11:44.500 --> 01:11:46.500
Das ist wirklich ein Triple-Pointer.

01:11:46.500 --> 01:11:48.500
Ein Pointer auf

01:11:48.500 --> 01:11:50.500
ein Pointer, der auf ein Pointer... Ach du

01:11:50.500 --> 01:11:52.500
große Scheiße, man.

01:11:52.500 --> 01:11:54.500
Okay, jetzt haben wir das da, Struct.

01:11:56.500 --> 01:11:58.500
Okay,

01:11:58.500 --> 01:12:00.500
dann brauchen wir einen Struct.

01:12:00.500 --> 01:12:02.500
Ich ahne Schlimmes.

01:12:02.500 --> 01:12:04.500
Public,

01:12:04.500 --> 01:12:06.500
Unsave, Struct.

01:12:06.500 --> 01:12:08.500
So, keine Charakter, wir wollen

01:12:08.500 --> 01:12:10.500
das als Byte-Array haben.

01:12:10.500 --> 01:12:12.500
Name.

01:12:12.500 --> 01:12:14.500
Und dann Public.

01:12:14.500 --> 01:12:16.500
Public.

01:12:18.500 --> 01:12:20.500
Moment, ich muss das gerade mal wegmachen.

01:12:20.500 --> 01:12:22.500
So, also

01:12:22.500 --> 01:12:24.500
Hardware-Adress.

01:12:24.500 --> 01:12:26.500
Nächste ist...

01:12:26.500 --> 01:12:28.500
Hardware, das ist wahrscheinlich die Mac oder sowas

01:12:28.500 --> 01:12:30.500
in der Richtung.

01:12:30.500 --> 01:12:32.500
Domain-Interfaces.

01:12:36.500 --> 01:12:38.500
Unsigned

01:12:38.500 --> 01:12:40.500
Int-Adresses.

01:12:44.500 --> 01:12:46.500
Oh je, oh je, ich ahne

01:12:46.500 --> 01:12:48.500
Schlimmes. Und dann haben wir als

01:12:48.500 --> 01:12:50.500
letztes einen weiteren Pointer auf

01:12:50.500 --> 01:12:52.500
Pointer...

01:12:52.500 --> 01:12:54.500
Was?

01:12:54.500 --> 01:12:56.500
Wie?

01:12:56.500 --> 01:12:58.500
Okay.

01:12:58.500 --> 01:13:00.500
Damit

01:13:00.500 --> 01:13:02.500
setzen wir uns erstmal nicht weiter auseinander und gucken ob

01:13:02.500 --> 01:13:04.500
es bis dahin funktioniert.

01:13:04.500 --> 01:13:06.500
Ach du kagge, man.

01:13:06.500 --> 01:13:08.500
Network-DHCP-Lease.

01:13:08.500 --> 01:13:10.500
Ja, das könnten wir auch machen.

01:13:10.500 --> 01:13:12.500
So, und das heißt jetzt,

01:13:12.500 --> 01:13:14.500
wie zum Teufel muss das hier sein?

01:13:14.500 --> 01:13:16.500
Das sind Interfaces,

01:13:16.500 --> 01:13:18.500
Pointer auf...

01:13:18.500 --> 01:13:20.500
Was hat er hier für Schmerzen?

01:13:22.500 --> 01:13:24.500
An...

01:13:24.500 --> 01:13:26.500
Das ganze Ding ist unsaved, man.

01:13:26.500 --> 01:13:28.500
Unsaved.

01:13:28.500 --> 01:13:30.500
Pointer auf

01:13:30.500 --> 01:13:32.500
Pointer auf Pointer.

01:13:34.500 --> 01:13:36.500
Oh fuck, man.

01:13:36.500 --> 01:13:38.500
Okay, komm.

01:13:40.500 --> 01:13:42.500
Unsaved, auf geht's.

01:13:42.500 --> 01:13:44.500
Ja.

01:13:44.500 --> 01:13:46.500
Int-Pointer auf die Domain.

01:13:46.500 --> 01:13:48.500
Okay.

01:13:48.500 --> 01:13:50.500
Okay, create

01:13:50.500 --> 01:13:52.500
XML.

01:13:52.500 --> 01:13:54.500
Das gibt, glaube ich, eine ID zurück,

01:13:54.500 --> 01:13:56.500
stimmt's?

01:13:56.500 --> 01:13:58.500
Das gibt eine ID zurück.

01:13:58.500 --> 01:14:00.500
Ja, das

01:14:00.500 --> 01:14:02.500
was man dann wiederum braucht, um

01:14:02.500 --> 01:14:04.500
auf das andere

01:14:04.500 --> 01:14:06.500
zu zeigen, okay.

01:14:06.500 --> 01:14:08.500
Domain.

01:14:08.500 --> 01:14:10.500
Komm, ich stelle jetzt einfach VMID, da weiß ich

01:14:10.500 --> 01:14:12.500
wenigstens was gemeint ist.

01:14:12.500 --> 01:14:14.500
Okay, Interop.

01:14:14.500 --> 01:14:16.500
Wisst ihr, wisst... Okay, wir haben noch eine VM

01:14:16.500 --> 01:14:18.500
mit IP laufen, das ist perfekt.

01:14:20.500 --> 01:14:22.500
Ach nee, wir müssen die neu erstellen,

01:14:22.500 --> 01:14:24.500
sonst klappt's ja nicht.

01:14:24.500 --> 01:14:26.500
Das ist Megasus.

01:14:26.500 --> 01:14:28.500
Um nicht zu sagen

01:14:28.500 --> 01:14:30.500
Hypersus.

01:14:30.500 --> 01:14:32.500
Ich lösche

01:14:32.500 --> 01:14:34.500
das mal.

01:14:34.500 --> 01:14:36.500
Weil um die VMID rauszukriegen,

01:14:36.500 --> 01:14:38.500
müssen wir die VM erstellen, sonst kriege ich die ID nicht mehr

01:14:38.500 --> 01:14:40.500
raus.

01:14:40.500 --> 01:14:42.500
Und das ist keine richtige ID, das ist ein Pointer.

01:14:42.500 --> 01:14:44.500
Das heißt, nachdem das Programm sich beendet,

01:14:44.500 --> 01:14:46.500
eh nicht mehr gültig.

01:14:46.500 --> 01:14:48.500
So, also, ups.

01:14:48.500 --> 01:14:50.500
Hier.

01:14:50.500 --> 01:14:52.500
Das muss rein und dann muss...

01:14:52.500 --> 01:14:54.500
Interface

01:14:54.500 --> 01:14:56.500
of...

01:14:56.500 --> 01:14:58.500
Wie lege ich das überhaupt an?

01:14:58.500 --> 01:15:00.500
Okay.

01:15:00.500 --> 01:15:02.500
Example, die hatten

01:15:02.500 --> 01:15:04.500
noch irgendein Beispiel hier drinne.

01:15:06.500 --> 01:15:08.500
Hier.

01:15:08.500 --> 01:15:10.500
We are domain

01:15:10.500 --> 01:15:12.500
Interface pointer of point...

01:15:14.500 --> 01:15:16.500
MonkaW.

01:15:24.500 --> 01:15:26.500
Was ist denn jetzt? Ah, hier null.

01:15:28.500 --> 01:15:30.500
Ah nee, das ist nicht so.

01:15:32.500 --> 01:15:34.500
Aber wir interface

01:15:34.500 --> 01:15:36.500
unsafe

01:15:36.500 --> 01:15:38.500
weil es nicht...

01:15:40.500 --> 01:15:42.500
Hehehe.

01:15:42.500 --> 01:15:44.500
Und jetzt?

01:15:44.500 --> 01:15:46.500
Nee.

01:15:46.500 --> 01:15:48.500
Doppel...

01:15:48.500 --> 01:15:50.500
Doppelpointern muss ich.

01:15:50.500 --> 01:15:52.500
Inter... Und jetzt...

01:15:52.500 --> 01:15:54.500
Und? Adresse

01:15:54.500 --> 01:15:56.500
auf interfaces.

01:15:56.500 --> 01:15:58.500
Okay.

01:15:58.500 --> 01:16:00.500
Und dann

01:16:00.500 --> 01:16:02.500
Source null flag...

01:16:02.500 --> 01:16:04.500
Ich hoffe mal, dass Source null ist.

01:16:04.500 --> 01:16:06.500
Was ist denn Source?

01:16:06.500 --> 01:16:08.500
Source ist

01:16:08.500 --> 01:16:10.500
Source.

01:16:10.500 --> 01:16:12.500
Source ist

01:16:12.500 --> 01:16:14.500
leases. Das klingt doch gut.

01:16:14.500 --> 01:16:16.500
Ancient oder Arp?

01:16:30.500 --> 01:16:32.500
Ach so scheiße.

01:16:32.500 --> 01:16:34.500
Warum geht das jetzt nicht?

01:16:34.500 --> 01:16:36.500
Weil...

01:16:36.500 --> 01:16:38.500
Inter...

01:16:38.500 --> 01:16:40.500
Moment, ist das...

01:16:40.500 --> 01:16:42.500
Das ist ein triple pointer.

01:16:42.500 --> 01:16:44.500
Seht ihr das?

01:16:54.500 --> 01:16:56.500
Triple pointer.

01:16:58.500 --> 01:17:00.500
Also ich muss quasi hier sagen

01:17:00.500 --> 01:17:02.500
Pointer...

01:17:02.500 --> 01:17:04.500
Hahaha.

01:17:04.500 --> 01:17:06.500
Ach du scheiße, man.

01:17:06.500 --> 01:17:08.500
Was ist das denn?

01:17:08.500 --> 01:17:10.500
Seriously?

01:17:10.500 --> 01:17:12.500
Pointer, Pointer.

01:17:12.500 --> 01:17:14.500
Das funktioniert.

01:17:16.500 --> 01:17:18.500
So.

01:17:22.500 --> 01:17:24.500
Und das soll jetzt gehen, oder was?

01:17:28.500 --> 01:17:30.500
Pointer Champion.

01:17:30.500 --> 01:17:32.500
Was

01:17:32.500 --> 01:17:34.500
returnt denn das eigentlich?

01:17:34.500 --> 01:17:36.500
Was mache ich? Ich versuche eine

01:17:36.500 --> 01:17:38.500
VM zu erstellen, über die CAP

01:17:38.500 --> 01:17:40.500
unter Linux. Was prinzipiell

01:17:40.500 --> 01:17:42.500
funktioniert, aber jetzt will ich rausbekommen.

01:17:42.500 --> 01:17:44.500
Okay, das ist

01:17:44.500 --> 01:17:46.500
ein Count quasi. N.

01:17:48.500 --> 01:17:50.500
N ist immer die beste

01:17:50.500 --> 01:17:52.500
Bezeichnung, weiß man Bescheid.

01:17:54.500 --> 01:17:56.500
Okay, hier haben wir die

01:17:56.500 --> 01:17:58.500
VM ID.

01:17:58.500 --> 01:18:00.500
So, und das müssen wir jetzt in einer

01:18:00.500 --> 01:18:02.500
Schleife machen, Leute, weil

01:18:02.500 --> 01:18:04.500
das braucht ja eine Weile,

01:18:04.500 --> 01:18:06.500
bis die true

01:18:06.500 --> 01:18:08.500
await... Moment.

01:18:10.500 --> 01:18:12.500
Awaiten kann man nicht in unsave,

01:18:12.500 --> 01:18:14.500
oder?

01:18:16.500 --> 01:18:18.500
Natürlich.

01:18:18.500 --> 01:18:20.500
Natürlich kann man keine

01:18:20.500 --> 01:18:22.500
Await machen in unsave, das ist natürlich

01:18:22.500 --> 01:18:24.500
klar, ja.

01:18:24.500 --> 01:18:26.500
Also müssen wir

01:18:26.500 --> 01:18:28.500
den Klassiker rausholen, thread

01:18:28.500 --> 01:18:30.500
sleep.

01:18:30.500 --> 01:18:32.500
Für eine Sekunde, und dann

01:18:32.500 --> 01:18:34.500
probieren wir das Ganze nochmal aus.

01:18:36.500 --> 01:18:38.500
Bin ich ja mal gespannt, ey, run.

01:18:42.500 --> 01:18:44.500
Okay.

01:18:50.500 --> 01:18:52.500
Ja, noch haben wir keine,

01:18:52.500 --> 01:18:54.500
noch haben wir keine IP,

01:18:54.500 --> 01:18:56.500
noch haben wir keine IP.

01:19:04.500 --> 01:19:06.500
Immer noch keine IP.

01:19:06.500 --> 01:19:08.500
Keine IP.

01:19:08.500 --> 01:19:10.500
Jetzt haben wir eine IP.

01:19:16.500 --> 01:19:18.500
Das interessiert ihn aber nicht, ob wir eine IP haben.

01:19:24.500 --> 01:19:26.500
Das ist dem ziemlich egal.

01:19:32.500 --> 01:19:34.500
Na gut,

01:19:34.500 --> 01:19:36.500
abbrechen.

01:19:38.500 --> 01:19:40.500
Das probieren wir mal aus.

01:19:40.500 --> 01:19:42.500
Auf der

01:19:42.500 --> 01:19:44.500
Shell, wie geht denn das?

01:19:44.500 --> 01:19:46.500
Wir Shell

01:19:48.500 --> 01:19:50.500
Domain Interface,

01:19:50.500 --> 01:19:52.500
Adress, ja.

01:19:54.500 --> 01:19:56.500
Alter, meine Shell ist übelst kaputt.

01:19:56.500 --> 01:19:58.500
Was ist denn das für ein Kack, man?

01:20:00.500 --> 01:20:02.500
Requires Domain. Achso, ich habe jetzt gar

01:20:02.500 --> 01:20:04.500
keine VM mehr angelegt. Doch, doch habe ich noch.

01:20:04.500 --> 01:20:06.500
Test VM.

01:20:08.500 --> 01:20:10.500
Hä?

01:20:10.500 --> 01:20:12.500
Mit der offiziellen Kommandozeile

01:20:14.500 --> 01:20:16.500
findet man auch keine IP. Warum das denn?

01:20:16.500 --> 01:20:18.500
Ist das irgendwie

01:20:18.500 --> 01:20:20.500
Special Hyper Secrets IP, oder wie?

01:20:20.500 --> 01:20:22.500
Was ist ein Pointer?

01:20:22.500 --> 01:20:24.500
Also das

01:20:24.500 --> 01:20:26.500
Konzept an sich

01:20:26.500 --> 01:20:28.500
ist relativ simpel.

01:20:28.500 --> 01:20:30.500
Insgesamt schießt es dir aber relativ

01:20:30.500 --> 01:20:32.500
schnell in den Fuß. Also ein Pointer

01:20:32.500 --> 01:20:34.500
ist eine Kombination aus zwei Sachen.

01:20:36.500 --> 01:20:38.500
Ein Pointer ist einmal

01:20:38.500 --> 01:20:40.500
die Arbeitsspeicheradresse,

01:20:40.500 --> 01:20:42.500
wo etwas liegt,

01:20:42.500 --> 01:20:44.500
und die Typinformation,

01:20:44.500 --> 01:20:46.500
was an dieser Speicheradresse

01:20:46.500 --> 01:20:48.500
liegt. Also wenn du

01:20:48.500 --> 01:20:50.500
die Information hast,

01:20:50.500 --> 01:20:52.500
ein

01:20:54.500 --> 01:20:56.500
16-Bit-Int

01:20:56.500 --> 01:20:58.500
liegt an

01:20:58.500 --> 01:21:00.500
dieser Speicheradresse,

01:21:00.500 --> 01:21:02.500
dann kannst du das auslesen. Du gehst zu dieser

01:21:02.500 --> 01:21:04.500
Speicheradresse hin und weißt,

01:21:04.500 --> 01:21:06.500
du musst zwei Byte auslesen,

01:21:06.500 --> 01:21:08.500
beginnend an der Pointer-Adresse,

01:21:08.500 --> 01:21:10.500
dass du dein 16-Bit,

01:21:10.500 --> 01:21:12.500
dein Int 16 bekommst.

01:21:12.500 --> 01:21:14.500
Also ein Pointer ist nicht wirklich nur ein

01:21:14.500 --> 01:21:16.500
Zeiger, auch wenn sich das immer so anhört.

01:21:16.500 --> 01:21:18.500
Ein Pointer ist die Kombination aus

01:21:18.500 --> 01:21:20.500
Speicheradresse plus

01:21:20.500 --> 01:21:22.500
Typ.

01:21:22.500 --> 01:21:24.500
Man wollt Pointer außen vor,

01:21:24.500 --> 01:21:26.500
das sind nur Pointer.

01:21:26.500 --> 01:21:28.500
Ja, wenn du sowas hier hast in C,

01:21:28.500 --> 01:21:30.500
dann ist das die Information.

01:21:32.500 --> 01:21:34.500
Es ist ein Int, was dort

01:21:34.500 --> 01:21:36.500
im Speicher steht.

01:21:36.500 --> 01:21:38.500
Also die

01:21:38.500 --> 01:21:40.500
Speicheradresse plus die Typinformation.

01:21:49.500 --> 01:21:51.500
Und nun? Jetzt hast du mehr

01:21:51.500 --> 01:21:53.500
RAM. Ohne RAM zu

01:21:53.500 --> 01:21:55.500
downloaden.

01:21:55.500 --> 01:21:57.500
So, also

01:21:57.500 --> 01:21:59.500
noch nicht mal die offizielle

01:21:59.500 --> 01:22:01.500
Kommando-Zellentool

01:22:01.500 --> 01:22:03.500
kriegt das raus.

01:22:03.500 --> 01:22:05.500
Was kann man hier hinten noch?

01:22:05.500 --> 01:22:07.500
Source angeben, Lease.

01:22:07.500 --> 01:22:09.500
Das ist das, was ich gerade mache. Was haben wir sonst noch zu binden?

01:22:09.500 --> 01:22:11.500
Agent,

01:22:11.500 --> 01:22:13.500
No Agent, App.

01:22:13.500 --> 01:22:15.500
Aha, App funktioniert.

01:22:15.500 --> 01:22:17.500
Okay, warum auch immer.

01:22:17.500 --> 01:22:19.500
Ich will es gar nicht wissen.

01:22:19.500 --> 01:22:21.500
App ist

01:22:21.500 --> 01:22:23.500
Magic

01:22:23.500 --> 01:22:25.500
2. Alles klar.

01:22:25.500 --> 01:22:27.500
Also muss ich hier Source 2

01:22:27.500 --> 01:22:29.500
reinschreiben.

01:22:29.500 --> 01:22:31.500
Und jetzt probieren wir das Ganze nochmal.

01:22:31.500 --> 01:22:33.500
Delete.

01:22:33.500 --> 01:22:35.500
Yep.

01:22:35.500 --> 01:22:37.500
Run. Ups.

01:22:37.500 --> 01:22:39.500
Ja, ja. Nein, nein. 2.

01:22:39.500 --> 01:22:41.500
Run.

01:22:41.500 --> 01:22:43.500
Bam.

01:22:43.500 --> 01:22:45.500
Was passiert

01:22:45.500 --> 01:22:47.500
dann, wenn ich meinen Pointer

01:22:47.500 --> 01:22:49.500
hin und her caste?

01:22:49.500 --> 01:22:51.500
Dann sagst du, du

01:22:51.500 --> 01:22:53.500
weißt es besser als dein Compiler.

01:22:53.500 --> 01:22:55.500
Du sagst ihm, ey,

01:22:55.500 --> 01:22:57.500
an dieser Stelle ist gar kein Int,

01:22:57.500 --> 01:22:59.500
sondern eigentlich ein

01:22:59.500 --> 01:23:01.500
anderes Ding.

01:23:01.500 --> 01:23:03.500
Das muss nicht zwangsläufig so

01:23:03.500 --> 01:23:05.500
sein, aber das kannst du ihm sagen, dass du das besser

01:23:05.500 --> 01:23:07.500
weißt.

01:23:07.500 --> 01:23:09.500
Wenn du einen Pointer ohne

01:23:09.500 --> 01:23:11.500
Typinformationen hast, dann musst du es sogar machen.

01:23:13.500 --> 01:23:15.500
Und was

01:23:15.500 --> 01:23:17.500
ja in C relativ... Oh, was ist das?

01:23:17.500 --> 01:23:19.500
Was ist das?

01:23:19.500 --> 01:23:21.500
Wait a minute.

01:23:25.500 --> 01:23:27.500
Der erkennt, dass es eine IP hat.

01:23:29.500 --> 01:23:31.500
Pog. Das geht einfach.

01:23:31.500 --> 01:23:33.500
Stell euch das mal vor.

01:23:35.500 --> 01:23:37.500
Also eins muss man den

01:23:37.500 --> 01:23:39.500
Linux-Leuten ja echt lassen.

01:23:39.500 --> 01:23:41.500
Das sieht immer abartig aus,

01:23:41.500 --> 01:23:43.500
weil du halt

01:23:43.500 --> 01:23:45.500
irgendwelchen C-Interop machen musst,

01:23:45.500 --> 01:23:47.500
aber unterm Strich

01:23:47.500 --> 01:23:49.500
funktioniert es meistens einfach.

01:23:51.500 --> 01:23:53.500
Natürlich kannst du dir an, ja,

01:23:53.500 --> 01:23:55.500
bei jedem Schritt selbst im Fuß schießen,

01:23:55.500 --> 01:23:57.500
aber es funktioniert

01:23:57.500 --> 01:23:59.500
meistens einfach.

01:23:59.500 --> 01:24:01.500
Und die Dinger sind ja recht gut

01:24:01.500 --> 01:24:03.500
zu bedienen auch, kann man, kann man nichts sagen.

01:24:03.500 --> 01:24:05.500
So, und jetzt,

01:24:07.500 --> 01:24:09.500
und jetzt ist die Frage,

01:24:11.500 --> 01:24:13.500
wie kann ich jetzt auf meine

01:24:13.500 --> 01:24:15.500
Interfaces zugreifen?

01:24:17.500 --> 01:24:19.500
Also wenn ich jetzt

01:24:19.500 --> 01:24:21.500
ein Interface gefunden habe,

01:24:21.500 --> 01:24:23.500
dann müsste ich doch eigentlich sagen können

01:24:23.500 --> 01:24:25.500
Interfaces

01:24:25.500 --> 01:24:27.500
Null, weil ich habe ja

01:24:27.500 --> 01:24:29.500
mindestens eins gefunden.

01:24:29.500 --> 01:24:31.500
Interfaces Null.

01:24:31.500 --> 01:24:33.500
Und dann Number of Addresses ausgeben.

01:24:35.500 --> 01:24:37.500
So.

01:24:37.500 --> 01:24:39.500
Wie wird die VM erstellen?

01:24:39.500 --> 01:24:41.500
Also woher weiß der welches Image?

01:24:41.500 --> 01:24:43.500
Hierher.

01:24:43.500 --> 01:24:45.500
Weil ich ein riesen fettes, ekliches XML habe,

01:24:45.500 --> 01:24:47.500
wo das alles drin steht.

01:24:47.500 --> 01:24:49.500
Wo man die Hälfte

01:24:49.500 --> 01:24:51.500
wahrscheinlich entfernen könnte draus.

01:24:51.500 --> 01:24:53.500
Muss ich auch mal gucken, wie man das

01:24:53.500 --> 01:24:55.500
XML vielleicht, so viele

01:24:55.500 --> 01:24:57.500
PCI und Serial und so, das brauche ich.

01:24:57.500 --> 01:24:59.500
Zata brauche ich alles gar nicht.

01:25:05.500 --> 01:25:07.500
Oh, was jetzt?

01:25:09.500 --> 01:25:11.500
198?

01:25:11.500 --> 01:25:13.500
Was habe ich jetzt verkehrt gemacht?

01:25:17.500 --> 01:25:19.500
Ah, ich kann nicht drauf zugreifen

01:25:19.500 --> 01:25:21.500
logischerweise. Ich bin ja auch doof.

01:25:21.500 --> 01:25:23.500
Ich kann nicht drauf zugreifen, solange es

01:25:23.500 --> 01:25:25.500
noch nicht angelegt ist. Okay, das ist natürlich klar.

01:25:25.500 --> 01:25:27.500
Das kann nicht funktionieren.

01:25:29.500 --> 01:25:31.500
Also muss ich checken, ob das

01:25:33.500 --> 01:25:35.500
Kann man einfach Null checken machen? Check machen?

01:25:35.500 --> 01:25:37.500
Ich muss einfach checken.

01:25:37.500 --> 01:25:39.500
If N

01:25:39.500 --> 01:25:41.500
größer Null.

01:25:41.500 --> 01:25:43.500
So, und nur dann mache ich das.

01:25:43.500 --> 01:25:45.500
Ansonsten bleiben, warten wir ab.

01:25:45.500 --> 01:25:47.500
Auf geht's.

01:25:47.500 --> 01:25:49.500
Let's go.

01:25:51.500 --> 01:25:53.500
So. Wir sollten jetzt

01:25:53.500 --> 01:25:55.500
gleich die IP-Adresse sehen.

01:25:55.500 --> 01:25:57.500
Sobald er hier eine IP-Adresse

01:25:57.500 --> 01:25:59.500
bekommt.

01:25:59.500 --> 01:26:01.500
Bin ich gespannt.

01:26:07.500 --> 01:26:09.500
Okay.

01:26:17.500 --> 01:26:19.500
Okay, da kann sogar die Adresse da

01:26:19.500 --> 01:26:21.500
rausholen.

01:26:21.500 --> 01:26:23.500
Nicht schlecht, nicht schlecht.

01:26:23.500 --> 01:26:25.500
Machen das mal alles auf den

01:26:25.500 --> 01:26:27.500
Desktop hier, sonst

01:26:27.500 --> 01:26:29.500
so viel hin und her switchen.

01:26:31.500 --> 01:26:33.500
So, eigentlich könnten wir gleich noch

01:26:33.500 --> 01:26:35.500
ein Delete hinterher machen.

01:26:35.500 --> 01:26:37.500
Wobei er dann das Image wahrscheinlich

01:26:37.500 --> 01:26:39.500
auch löscht.

01:26:39.500 --> 01:26:41.500
So, und jetzt muss ich die Adressen

01:26:41.500 --> 01:26:43.500
da rausholen.

01:26:43.500 --> 01:26:45.500
Wie hole ich die Adressen da raus?

01:26:45.500 --> 01:26:47.500
We're domain interface.

01:26:47.500 --> 01:26:49.500
We're domain IP-Adress

01:26:49.500 --> 01:26:51.500
pointer.

01:26:51.500 --> 01:26:53.500
We're domain IP-Adress

01:26:53.500 --> 01:26:55.500
pointer.

01:26:55.500 --> 01:26:57.500
Hier, das brauche ich

01:26:57.500 --> 01:26:59.500
auch noch, als

01:26:59.500 --> 01:27:01.500
Struct.

01:27:01.500 --> 01:27:03.500
Okay.

01:27:03.500 --> 01:27:05.500
Okay.

01:27:05.500 --> 01:27:07.500
Okay.

01:27:07.500 --> 01:27:09.500
Okay.

01:27:09.500 --> 01:27:11.500
Okay.

01:27:11.500 --> 01:27:13.500
Okay.

01:27:13.500 --> 01:27:15.500
Okay.

01:27:15.500 --> 01:27:17.500
Als Struct.

01:27:17.500 --> 01:27:19.500
Public

01:27:19.500 --> 01:27:21.500
unsaved Struct.

01:27:21.500 --> 01:27:23.500
We're

01:27:23.500 --> 01:27:25.500
domain IP-Adress.

01:27:25.500 --> 01:27:27.500
So, haben wir das mal weg.

01:27:27.500 --> 01:27:29.500
Sonst, also.

01:27:31.500 --> 01:27:33.500
Was brauchen wir denn hier jetzt? Wir brauchen

01:27:33.500 --> 01:27:35.500
ein Typ.

01:27:35.500 --> 01:27:37.500
Das ist ein

01:27:37.500 --> 01:27:39.500
Int.

01:27:39.500 --> 01:27:41.500
Int.

01:27:41.500 --> 01:27:43.500
Ja, ein Typ.

01:27:43.500 --> 01:27:45.500
Die Adresse als String.

01:27:49.500 --> 01:27:51.500
Als Byte, ist wahrscheinlich sinniger.

01:27:53.500 --> 01:27:55.500
Und dann ein Prefix

01:27:55.500 --> 01:27:57.500
als unsigned Int.

01:27:57.500 --> 01:27:59.500
Prefix.

01:27:59.500 --> 01:28:01.500
So, und

01:28:01.500 --> 01:28:03.500
davon wollen wir jetzt einen Array haben.

01:28:05.500 --> 01:28:07.500
Das wird ja was.

01:28:07.500 --> 01:28:09.500
Oh, ich blick nicht

01:28:09.500 --> 01:28:11.500
mehr durch. Wo muss ich mal hin? Da.

01:28:11.500 --> 01:28:13.500
So, das ist dann ja

01:28:13.500 --> 01:28:15.500
sowas hier.

01:28:15.500 --> 01:28:17.500
Ein Pointer

01:28:17.500 --> 01:28:19.500
auf

01:28:21.500 --> 01:28:23.500
das Start-Element

01:28:23.500 --> 01:28:25.500
von einem Array.

01:28:25.500 --> 01:28:27.500
Ich bin mir nicht sicher, ob ich sowas machen darf.

01:28:27.500 --> 01:28:29.500
Ob der das dann richtig erkennt.

01:28:33.500 --> 01:28:35.500
Okay.

01:28:35.500 --> 01:28:37.500
So, und wenn jetzt alles

01:28:37.500 --> 01:28:39.500
klappt.

01:28:39.500 --> 01:28:41.500
Wenn ich Number of Addresses

01:28:41.500 --> 01:28:43.500
hier hab. Ach, wir greifen da jetzt einfach drauf zu.

01:28:43.500 --> 01:28:45.500
Scheiß drauf.

01:28:45.500 --> 01:28:47.500
Addresses

01:28:47.500 --> 01:28:49.500
und davon die Erste.

01:28:49.500 --> 01:28:51.500
Und davon dann

01:28:53.500 --> 01:28:55.500
die

01:28:57.500 --> 01:28:59.500
Moment, das ist ein Byte.

01:29:01.500 --> 01:29:03.500
Wie bekomme ich aus einem Byte-Array?

01:29:09.500 --> 01:29:11.500
Dann

01:29:11.500 --> 01:29:13.500
ein String. Wie geht das

01:29:13.500 --> 01:29:15.500
gescheit? Ein 0-terminiertes

01:29:15.500 --> 01:29:17.500
Byte-Array zu einem String.

01:29:17.500 --> 01:29:19.500
Wie funktioniert das

01:29:19.500 --> 01:29:21.500
in C Sharp gescheit? Irgendwie sowas hier, ne?

01:29:21.500 --> 01:29:23.500
Encoding

01:29:23.500 --> 01:29:25.500
UTF-8. Ich hoffe mal,

01:29:25.500 --> 01:29:27.500
das sucht hier was. Get

01:29:27.500 --> 01:29:29.500
String und dann From Bytes.

01:29:29.500 --> 01:29:31.500
Aber da brauche ich

01:29:31.500 --> 01:29:33.500
einen Byte-Count.

01:29:35.500 --> 01:29:37.500
Ah, shit. Woher weiß ich denn?

01:29:39.500 --> 01:29:41.500
Woher weiß ich? Okay.

01:29:41.500 --> 01:29:43.500
Eine IP-Adresse ist einfach 8.

01:29:43.500 --> 01:29:45.500
Irgendwas. Nicht

01:29:45.500 --> 01:29:47.500
wirklich, aber die ersten, wir machen

01:29:47.500 --> 01:29:49.500
einfach mal die ersten 8 Charakters.

01:29:49.500 --> 01:29:51.500
Das ist dann quasi 192

01:29:51.500 --> 01:29:53.500
Punkt 168

01:29:53.500 --> 01:29:55.500
Punkt. Also

01:29:55.500 --> 01:29:57.500
der Anfang von der IP müsste ich dann zumindest sehen.

01:29:57.500 --> 01:29:59.500
Hier.

01:30:03.500 --> 01:30:05.500
Oh, jetzt hab ich den Wirt-Manager geschlossen. Ich noob.

01:30:05.500 --> 01:30:07.500
Okay. Run.

01:30:09.500 --> 01:30:11.500
Okay.

01:30:11.500 --> 01:30:13.500
Okay.

01:30:17.500 --> 01:30:19.500
Jetzt

01:30:19.500 --> 01:30:21.500
Crash-ts wahrscheinlich gleich.

01:30:23.500 --> 01:30:25.500
So.

01:30:25.500 --> 01:30:27.500
Der holt sich jetzt eine IP.

01:30:27.500 --> 01:30:29.500
Ah, die

01:30:29.500 --> 01:30:31.500
VM muss erst ein bisschen, dauert auch ein bisschen bis sie

01:30:31.500 --> 01:30:33.500
startet und alles.

01:30:39.500 --> 01:30:41.500
So.

01:30:59.500 --> 01:31:01.500
Funktioniert.

01:31:01.500 --> 01:31:03.500
Oh.

01:31:03.500 --> 01:31:05.500
Ah, ne, das war ein

01:31:05.500 --> 01:31:07.500
Zeilen-Unbruch-Problem hier.

01:31:07.500 --> 01:31:09.500
Es geht einfach.

01:31:13.500 --> 01:31:15.500
Aber wie kriege ich,

01:31:15.500 --> 01:31:17.500
das Problem ist nicht gelöst.

01:31:17.500 --> 01:31:19.500
Äh, wie kriege ich

01:31:19.500 --> 01:31:21.500
einen nullterminierten String?

01:31:21.500 --> 01:31:23.500
Okay, da muss du aus der

01:31:23.500 --> 01:31:25.500
Overflow fragen.

01:31:25.500 --> 01:31:27.500
Byte

01:31:27.500 --> 01:31:29.500
Byte pointer

01:31:29.500 --> 01:31:31.500
nullterminated

01:31:31.500 --> 01:31:33.500
to string

01:31:33.500 --> 01:31:35.500
Byte

01:31:35.500 --> 01:31:37.500
Byte pointer

01:31:37.500 --> 01:31:39.500
nullterminated

01:31:39.500 --> 01:31:41.500
to string

01:31:41.500 --> 01:31:43.500
Da gibt es doch bestimmt

01:31:43.500 --> 01:31:45.500
Chat-GPT

01:31:45.500 --> 01:31:47.500
Fragen.

01:31:47.500 --> 01:31:49.500
Das kriege ich auch ohne Chat-GPT.

01:31:49.500 --> 01:31:51.500
Da gibt es doch bestimmt

01:31:51.500 --> 01:31:53.500
irgendein

01:31:53.500 --> 01:31:55.500
irgendein

01:31:55.500 --> 01:31:57.500
irgendein

01:31:57.500 --> 01:31:59.500
ein

01:31:59.500 --> 01:32:01.500
Trick.

01:32:05.500 --> 01:32:07.500
Da gibt es doch bestimmt

01:32:07.500 --> 01:32:09.500
irgendein Trick.

01:32:11.500 --> 01:32:13.500
Wie man das, wie man das.

01:32:13.500 --> 01:32:15.500
Also das ist ein UTF-8-String höchstwahrscheinlich.

01:32:15.500 --> 01:32:17.500
Ein nullterminated

01:32:17.500 --> 01:32:19.500
UTF-8-String.

01:32:21.500 --> 01:32:23.500
Und das will ich in einen C-Sharp-String.

01:32:23.500 --> 01:32:25.500
Ach ja, übrigens, nur mal so.

01:32:25.500 --> 01:32:27.500
Ich, ich, ich zeige euch

01:32:27.500 --> 01:32:29.500
mal was, weil ihr, weil ihr vielleicht mal

01:32:29.500 --> 01:32:31.500
das Problem haben könntet.

01:32:31.500 --> 01:32:33.500
Man denkt sich jetzt ja so an der

01:32:33.500 --> 01:32:35.500
Stelle.

01:32:35.500 --> 01:32:37.500
Ich muss

01:32:37.500 --> 01:32:39.500
ich plus null machen, der ist schon nullterminated.

01:32:39.500 --> 01:32:41.500
So, man denkt

01:32:41.500 --> 01:32:43.500
sich jetzt ja so an der Stelle, gucke mal.

01:32:43.500 --> 01:32:45.500
Warum nehmen wir hier nicht

01:32:45.500 --> 01:32:47.500
Character?

01:32:47.500 --> 01:32:49.500
Könnte man sich ja denken, warum nehmen

01:32:49.500 --> 01:32:51.500
wir hier nicht Character? Weil es, es, es sind, es sind ja

01:32:51.500 --> 01:32:53.500
Buchstaben.

01:32:53.500 --> 01:32:55.500
Und jetzt machen wir

01:32:55.500 --> 01:32:57.500
mal, passt mal auf.

01:32:57.500 --> 01:32:59.500
New

01:32:59.500 --> 01:33:01.500
String, weil das ist dann relativ

01:33:01.500 --> 01:33:03.500
einfach. Dann darf man das

01:33:03.500 --> 01:33:05.500
direkt nullterminated reinmachen.

01:33:05.500 --> 01:33:07.500
So, was meint ihr, was jetzt passiert?

01:33:07.500 --> 01:33:09.500
Sieht doch jetzt, sieht doch jetzt eigentlich richtig

01:33:09.500 --> 01:33:11.500
aus. Ich kann euch sagen, dass es nicht funktionieren

01:33:11.500 --> 01:33:13.500
wird.

01:33:13.500 --> 01:33:15.500
Glaub ich zumindest.

01:33:21.500 --> 01:33:23.500
Es gibt einen Schonskiet an, was sonst?

01:33:23.500 --> 01:33:25.500
Was sonst? So, also

01:33:25.500 --> 01:33:27.500
ich könnte wetten, dass es nicht funktioniert.

01:33:29.500 --> 01:33:31.500
Dass es abkackt oder sehr

01:33:31.500 --> 01:33:33.500
merkwürdige Zeichen ausgibt

01:33:33.500 --> 01:33:35.500
auf der, auf der Kommandozeile.

01:33:39.500 --> 01:33:41.500
Ja, macht es. Es funktioniert

01:33:41.500 --> 01:33:43.500
nicht und mein Terminal sagt, es kackt gleich

01:33:43.500 --> 01:33:45.500
ab.

01:33:45.500 --> 01:33:47.500
Ja, ja. Ja, Chet, warum

01:33:47.500 --> 01:33:49.500
funktioniert das nicht? Es ist ein null

01:33:49.500 --> 01:33:51.500
terminatet,

01:33:51.500 --> 01:33:53.500
null terminatet Charakter Array.

01:33:53.500 --> 01:33:55.500
Das ist schon richtig.

01:33:55.500 --> 01:33:57.500
Aber warum geht das nicht? Also sprich,

01:33:57.500 --> 01:33:59.500
warum ist das hier so nicht möglich,

01:33:59.500 --> 01:34:01.500
obwohl das noch ihr Charakter ist? Das

01:34:01.500 --> 01:34:03.500
liegt daran, was ist das, was ihr euch zeigen

01:34:03.500 --> 01:34:05.500
wollt, das liegt daran, weil

01:34:05.500 --> 01:34:07.500
ein Charakter

01:34:07.500 --> 01:34:09.500
in C-Sharp

01:34:09.500 --> 01:34:11.500
nicht ein Byte

01:34:11.500 --> 01:34:13.500
ist. Normalerweise

01:34:13.500 --> 01:34:15.500
ist ein Charakter, zumindest in C ist das

01:34:15.500 --> 01:34:17.500
so, ist ein Charakter gleich

01:34:17.500 --> 01:34:19.500
ein Byte. In C-Sharp nicht.

01:34:19.500 --> 01:34:21.500
In C-Sharp ist

01:34:21.500 --> 01:34:23.500
ein Charakter. Chet,

01:34:23.500 --> 01:34:25.500
wer weiß es?

01:34:25.500 --> 01:34:27.500
Wieviel Byte

01:34:27.500 --> 01:34:29.500
hat ein Charakter in C-Sharp?

01:34:31.500 --> 01:34:33.500
Pausierungschamp.

01:34:33.500 --> 01:34:35.500
Wer ist high IQ und weiss es?

01:34:35.500 --> 01:34:37.500
Vier, nee, fast.

01:34:37.500 --> 01:34:39.500
Sixty-Nine,

01:34:39.500 --> 01:34:41.500
fast richtig.

01:34:41.500 --> 01:34:43.500
Sechzehn, nee.

01:34:43.500 --> 01:34:45.500
Du bist

01:34:45.500 --> 01:34:47.500
mit sechzehn aber schon mal nicht verkehrt.

01:34:47.500 --> 01:34:49.500
Es sind bloß nicht sechzehn Byte.

01:34:49.500 --> 01:34:51.500
Es sind zwei, richtig.

01:34:51.500 --> 01:34:53.500
Es sind zwei.

01:34:53.500 --> 01:34:55.500
Es sind zwei Byte, es sind sechzehn Byte.

01:34:55.500 --> 01:34:57.500
Es ist quasi

01:34:57.500 --> 01:34:59.500
UTF 16,

01:34:59.500 --> 01:35:01.500
wie C-Sharp

01:35:01.500 --> 01:35:03.500
intern arbeitet. Warum?

01:35:03.500 --> 01:35:05.500
Das weiß nur Microsoft.

01:35:05.500 --> 01:35:07.500
Historisch, weil das wahrscheinlich

01:35:07.500 --> 01:35:09.500
vor der Erfindung von UTF 8 war.

01:35:13.500 --> 01:35:15.500
Ja.

01:35:15.500 --> 01:35:17.500
Das sind sechzehn Byte.

01:35:17.500 --> 01:35:19.500
Deswegen funktioniert das nicht richtig.

01:35:21.500 --> 01:35:23.500
Deswegen funktioniert das nicht richtig.

01:35:23.500 --> 01:35:25.500
Deswegen muss ich explizit sagen, hier guck mal,

01:35:25.500 --> 01:35:27.500
das ist ein Byte

01:35:27.500 --> 01:35:29.500
und jetzt muss ich mir überlegen, okay,

01:35:29.500 --> 01:35:31.500
wie bekomme ich denn, bitte schön,

01:35:31.500 --> 01:35:33.500
aus diesen Bytes,

01:35:33.500 --> 01:35:35.500
aus diesen UTF 8 Bytes

01:35:35.500 --> 01:35:37.500
jetzt ein

01:35:37.500 --> 01:35:39.500
C-Sharp String?

01:35:39.500 --> 01:35:41.500
So, wo ist die John Skeet Antwort,

01:35:41.500 --> 01:35:43.500
Leute?

01:35:45.500 --> 01:35:47.500
Pass a Sway

01:35:47.500 --> 01:35:49.500
Pass a Sway to convert a

01:35:49.500 --> 01:35:51.500
possibly null terminal ASCII Byte

01:35:51.500 --> 01:35:53.500
to String.

01:35:53.500 --> 01:35:55.500
Ja, Moment, das ist,

01:35:55.500 --> 01:35:57.500
das ist, das zählt nicht.

01:36:01.500 --> 01:36:03.500
Das zählt nicht,

01:36:03.500 --> 01:36:05.500
weil das ist ja schon im Array.

01:36:05.500 --> 01:36:07.500
Und im Array

01:36:07.500 --> 01:36:09.500
ist ja schon eine Längeninformation

01:36:09.500 --> 01:36:11.500
drinne.

01:36:13.500 --> 01:36:15.500
Es muss

01:36:21.500 --> 01:36:23.500
zweite oder dritte Antwort.

01:36:29.500 --> 01:36:31.500
Nope, das stimmt nicht, das bringt

01:36:31.500 --> 01:36:33.500
nichts, das bringt nichts.

01:36:35.500 --> 01:36:37.500
Das geht

01:36:37.500 --> 01:36:39.500
so nicht.

01:36:47.500 --> 01:36:49.500
Ich meine,

01:36:49.500 --> 01:36:51.500
eine Schleife, das funktioniert,

01:36:51.500 --> 01:36:53.500
ich könnte eine Schleife machen und das selbst rausholen.

01:36:55.500 --> 01:36:57.500
Was haben wir denn hier zu bieten?

01:36:59.500 --> 01:37:01.500
Okay, C-Sharp.

01:37:01.500 --> 01:37:03.500
UTF 8

01:37:03.500 --> 01:37:05.500
Pointer

01:37:05.500 --> 01:37:07.500
to String.

01:37:09.500 --> 01:37:11.500
Native UTF 8

01:37:11.500 --> 01:37:13.500
Managed String.

01:37:15.500 --> 01:37:17.500
Boah, was?

01:37:23.500 --> 01:37:25.500
Gibt es da nichts fertig?

01:37:25.500 --> 01:37:27.500
Marshall Pointer

01:37:27.500 --> 01:37:29.500
to String.

01:37:29.500 --> 01:37:31.500
Marshall Pointer

01:37:31.500 --> 01:37:33.500
to String UTF.

01:37:33.500 --> 01:37:35.500
Ja, das sieht gut aus.

01:37:35.500 --> 01:37:37.500
Der Marshall

01:37:37.500 --> 01:37:39.500
wieder mal.

01:37:39.500 --> 01:37:41.500
Der Marshall.

01:37:41.500 --> 01:37:43.500
UTF 8

01:37:45.500 --> 01:37:47.500
Pointer

01:37:47.500 --> 01:37:49.500
to String.

01:37:49.500 --> 01:37:51.500
UTF 8

01:37:51.500 --> 01:37:53.500
Pointer, okay.

01:37:53.500 --> 01:37:55.500
Bytes.

01:37:55.500 --> 01:37:57.500
Okay,

01:37:57.500 --> 01:37:59.500
das will er als Endpointer

01:37:59.500 --> 01:38:01.500
wahrscheinlich haben, das ist okay.

01:38:01.500 --> 01:38:03.500
Darf er?

01:38:03.500 --> 01:38:05.500
Wenn er meint.

01:38:05.500 --> 01:38:07.500
Okay,

01:38:07.500 --> 01:38:09.500
String.

01:38:09.500 --> 01:38:11.500
Alles klar.

01:38:11.500 --> 01:38:13.500
Löschen wir

01:38:13.500 --> 01:38:15.500
die VM und gucken, ob es jetzt funktioniert.

01:38:15.500 --> 01:38:17.500
By the way, Leute, ich habe mich wieder

01:38:17.500 --> 01:38:19.500
übel sidetracken lassen. Eigentlich wollte ich mich mit

01:38:19.500 --> 01:38:21.500
der, mit der, meine Schelle ist

01:38:21.500 --> 01:38:23.500
kaputt. Mit, mit der, mit der

01:38:23.500 --> 01:38:25.500
Kulisse von Binaries beschäftigen.

01:38:25.500 --> 01:38:27.500
Was wir wieder

01:38:27.500 --> 01:38:29.500
nur zum Teil gemacht haben.

01:38:33.500 --> 01:38:35.500
Aber wieder was gelernt.

01:38:39.500 --> 01:38:41.500
So, wenn jetzt alles klappt, kriege ich die

01:38:41.500 --> 01:38:43.500
IP-Adresse von

01:38:43.500 --> 01:38:45.500
der VM.

01:38:45.500 --> 01:38:47.500
Ausgespuckt.

01:38:49.500 --> 01:38:51.500
Nice, easy.

01:38:53.500 --> 01:38:55.500
Ackerman Shit.

01:38:55.500 --> 01:38:57.500
Easy as fuck.

01:38:57.500 --> 01:38:59.500
Easy as fuck.

01:38:59.500 --> 01:39:01.500
Get rekt. Easy as fuck.

01:39:01.500 --> 01:39:03.500
Der Marshall war es wieder.

01:39:07.500 --> 01:39:09.500
Der Marshall war

01:39:09.500 --> 01:39:11.500
am Start.

01:39:13.500 --> 01:39:15.500
Ist es jetzt möglich, Unsafe

01:39:15.500 --> 01:39:17.500
C-Sharp Inline Assembly zu schrauben?

01:39:17.500 --> 01:39:19.500
Ich habe keine Ahnung, ob das geht.

01:39:19.500 --> 01:39:21.500
Also, direkt

01:39:21.500 --> 01:39:23.500
in der Sprache integriert ist es nicht.

01:39:23.500 --> 01:39:25.500
Aber es gibt bestimmt

01:39:25.500 --> 01:39:27.500
irgendwelche Zusatzdinger, wo das, wo das

01:39:27.500 --> 01:39:29.500
tut.

01:39:29.500 --> 01:39:31.500
Marshaller.

01:39:35.500 --> 01:39:37.500
Ja, das ist gut hier.

01:39:37.500 --> 01:39:39.500
Das finde ich nice.

01:39:41.500 --> 01:39:43.500
Was passiert eigentlich, wenn ich die VM

01:39:43.500 --> 01:39:45.500
lösche?

01:39:45.500 --> 01:39:47.500
Crash das dann, weil der Pointer nicht mal

01:39:47.500 --> 01:39:49.500
gültig ist?

01:39:49.500 --> 01:39:51.500
Oder was passiert?

01:39:51.500 --> 01:39:53.500
Jetzt bin ich gespannt.

01:39:53.500 --> 01:39:55.500
Oh ja, es crashed.

01:39:55.500 --> 01:39:57.500
Domain not found.

01:39:57.500 --> 01:39:59.500
Object

01:39:59.500 --> 01:40:01.500
instance not set.

01:40:01.500 --> 01:40:03.500
Okay, man darf, man darf ihm das nicht

01:40:03.500 --> 01:40:05.500
unterm Ass weglöschen.

01:40:05.500 --> 01:40:07.500
Dann kackt er ab.

01:40:09.500 --> 01:40:11.500
Aber das ist cool, das hätte ich nicht gedacht,

01:40:11.500 --> 01:40:13.500
dass das so geht.

01:40:13.500 --> 01:40:15.500
Publish, wie groß, wie groß ist

01:40:15.500 --> 01:40:17.500
das executable jetzt?

01:40:19.500 --> 01:40:21.500
Builds.

01:40:23.500 --> 01:40:25.500
3,8 MB, das ist ja nichts.

01:40:31.500 --> 01:40:33.500
Also, warum

01:40:33.500 --> 01:40:35.500
ist meine Shell so abgefuckt, kaputt?

01:40:35.500 --> 01:40:37.500
Was ist da los?

01:40:39.500 --> 01:40:41.500
Das ist cool.

01:40:45.500 --> 01:40:47.500
Weil das in kernel pointed, nee.

01:40:47.500 --> 01:40:49.500
Weil

01:40:51.500 --> 01:40:53.500
das ist nicht gecrashed.

01:40:53.500 --> 01:40:55.500
Weil es irgendwie unmanaged

01:40:55.500 --> 01:40:57.500
Probleme gegeben hat, das ist gecrashed.

01:40:57.500 --> 01:40:59.500
Weil

01:40:59.500 --> 01:41:01.500
er anscheinend

01:41:01.500 --> 01:41:03.500
versucht hat, hier drauf

01:41:03.500 --> 01:41:05.500
zuzugreifen, weil es

01:41:05.500 --> 01:41:07.500
noch größer, also ich habe es wahrscheinlich gerade

01:41:07.500 --> 01:41:09.500
in dem Moment gelöscht, wo es das

01:41:09.500 --> 01:41:11.500
noch größer als null war.

01:41:11.500 --> 01:41:13.500
Und dann hat er versucht hier drauf zuzugreifen,

01:41:13.500 --> 01:41:15.500
oder? In welcher Zeit? 201, ja genau.

01:41:17.500 --> 01:41:19.500
Also ich habe das gelöscht,

01:41:19.500 --> 01:41:21.500
wo der checkt, das war

01:41:21.500 --> 01:41:23.500
ein ganz unglückliches Timing anscheinend.

01:41:29.500 --> 01:41:31.500
Na oder,

01:41:31.500 --> 01:41:33.500
das ist noch irgendwie im

01:41:33.500 --> 01:41:35.500
abcached drin, dass er es gefunden hat, was auch immer.

01:41:35.500 --> 01:41:37.500
Nee, der ist gecrashed, weil ich hier versucht

01:41:37.500 --> 01:41:39.500
habe auf Interfaces zuzugreifen, auf den

01:41:39.500 --> 01:41:41.500
ersten Index.

01:41:41.500 --> 01:41:43.500
Und das gab es da nicht

01:41:43.500 --> 01:41:45.500
mehr, weil ich

01:41:45.500 --> 01:41:47.500
es gelöscht hatte.

01:41:47.500 --> 01:41:49.500
Aber gut, man

01:41:49.500 --> 01:41:51.500
war ja irgendwie zu erwarten, sollte man

01:41:51.500 --> 01:41:53.500
auch nicht machen.

01:41:55.500 --> 01:41:57.500
Haben wir wieder was gelernt, Leute.

01:41:57.500 --> 01:41:59.500
Wie man per

01:41:59.500 --> 01:42:01.500
ap, also per c-Library

01:42:01.500 --> 01:42:03.500
Interface

01:42:03.500 --> 01:42:05.500
VMs erstellt unter Linux.

01:42:05.500 --> 01:42:07.500
Pog.

01:42:09.500 --> 01:42:11.500
Was wir auf die

01:42:11.500 --> 01:42:13.500
Schnelle machen können, ich glaube nicht.

01:42:19.500 --> 01:42:21.500
Was ich mich jetzt noch frage ist,

01:42:21.500 --> 01:42:23.500
was ich mich jetzt noch frage ist,

01:42:25.500 --> 01:42:27.500
worauf sind diese

01:42:27.500 --> 01:42:29.500
Binaries jetzt lauffähig?

01:42:31.500 --> 01:42:33.500
Das müsste man vielleicht immer schnell

01:42:33.500 --> 01:42:35.500
ausprobieren noch. Ich kommentiere

01:42:35.500 --> 01:42:37.500
mal alles aus.

01:42:41.500 --> 01:42:43.500
Ich kommentiere mal alles aus.

01:42:43.500 --> 01:42:45.500
Publish.

01:42:49.500 --> 01:42:51.500
Oh nee, habe ich jetzt wieder mit.

01:42:57.500 --> 01:42:59.500
Worauf

01:42:59.500 --> 01:43:01.500
sind die lauffähig?

01:43:01.500 --> 01:43:03.500
So, machen wir mal

01:43:03.500 --> 01:43:05.500
Docker Run.

01:43:05.500 --> 01:43:07.500
Warte mal.

01:43:07.500 --> 01:43:09.500
Docker Run.

01:43:11.500 --> 01:43:13.500
Linux Support.NET

01:43:13.500 --> 01:43:15.500
Ja, das ist was sie supporten.

01:43:15.500 --> 01:43:17.500
Das geht aber meistens trotzdem

01:43:17.500 --> 01:43:19.500
eine ganze Ecke weiter

01:43:19.500 --> 01:43:21.500
zurück.

01:43:21.500 --> 01:43:23.500
Minimum.

01:43:23.500 --> 01:43:25.500
Ja, ich

01:43:25.500 --> 01:43:27.500
brauche es für.NET 8.

01:43:27.500 --> 01:43:29.500
Ich brauche es für.NET 8.

01:43:29.500 --> 01:43:31.500
Haben die da schon

01:43:31.500 --> 01:43:33.500
ein

01:43:33.500 --> 01:43:35.500
Review?

01:43:35.500 --> 01:43:37.500
Haben sie da nicht reingeschrieben?

01:43:37.500 --> 01:43:39.500
Ich weiß nicht, was Minimumsupport ist

01:43:39.500 --> 01:43:41.500
für.NET 8.

01:43:41.500 --> 01:43:43.500
Das

01:43:43.500 --> 01:43:45.500
können wir einfach ausprobieren.

01:43:45.500 --> 01:43:47.500
Wir sagen einfach

01:43:47.500 --> 01:43:49.500
Docker Run.

01:43:49.500 --> 01:43:51.500
It.

01:43:53.500 --> 01:43:55.500
Nicht Potman.

01:43:55.500 --> 01:43:57.500
Logger.

01:43:57.500 --> 01:43:59.500
Rm.

01:43:59.500 --> 01:44:01.500
Und zwar

01:44:01.500 --> 01:44:03.500
Ubuntu.

01:44:03.500 --> 01:44:05.500
20.04

01:44:05.500 --> 01:44:07.500
sollte auf jeden Fall noch

01:44:07.500 --> 01:44:09.500
gehen. Das ist glaube ich kein Problem.

01:44:09.500 --> 01:44:11.500
20.04

01:44:11.500 --> 01:44:13.500
So, jetzt müssen wir mounten.

01:44:13.500 --> 01:44:15.500
Mein Docker-Stels ist

01:44:15.500 --> 01:44:17.500
zu lange her. Wie ging das jetzt?

01:44:17.500 --> 01:44:19.500
pwd slash

01:44:19.500 --> 01:44:21.500
build

01:44:21.500 --> 01:44:23.500
mounted

01:44:23.500 --> 01:44:25.500
nach build. Mach ich das richtig so?

01:44:27.500 --> 01:44:29.500
Alter, warum ist meine

01:44:29.500 --> 01:44:31.500
Shell so im Arsch?

01:44:31.500 --> 01:44:33.500
Ich will

01:44:33.500 --> 01:44:35.500
das irgendwie kaputt, meine

01:44:35.500 --> 01:44:37.500
vorwärts und rückwärts tasten.

01:44:37.500 --> 01:44:39.500
bin bash

01:44:39.500 --> 01:44:41.500
Das testen wir jetzt mal, worauf

01:44:41.500 --> 01:44:43.500
das läuft.

01:44:43.500 --> 01:44:45.500
cd, build

01:44:45.500 --> 01:44:47.500
hier, vmchamp

01:44:51.500 --> 01:44:53.500
Was?

01:44:53.500 --> 01:44:55.500
Ah,

01:44:55.500 --> 01:44:57.500
ich verstehe.

01:44:59.500 --> 01:45:01.500
Wenn ich, wenn ich das

01:45:01.500 --> 01:45:03.500
kompiliere,

01:45:03.500 --> 01:45:05.500
dann nimmt es die C-Libraries von

01:45:05.500 --> 01:45:07.500
meinem Host. Das ist ein

01:45:07.500 --> 01:45:09.500
Sonderfall zu,

01:45:11.500 --> 01:45:13.500
also wenn ich das normale erstellen von

01:45:13.500 --> 01:45:15.500
einem executable mache mit.NET,

01:45:15.500 --> 01:45:17.500
dann benutzt er ja die Sachen, die schon

01:45:17.500 --> 01:45:19.500
drin sind, die quasi eingebaut sind.

01:45:19.500 --> 01:45:21.500
Wenn ich es allerdings komplett

01:45:21.500 --> 01:45:23.500
kompiliere, sodass gar keine.NET

01:45:23.500 --> 01:45:25.500
mehr vorhanden ist.

01:45:25.500 --> 01:45:27.500
Dann

01:45:27.500 --> 01:45:29.500
heißt es,

01:45:29.500 --> 01:45:31.500
ich benutze die von meinem

01:45:31.500 --> 01:45:33.500
Host-System.

01:45:33.500 --> 01:45:35.500
Okay, das ist natürlich blöd.

01:45:37.500 --> 01:45:39.500
Das heißt im Endeffekt,

01:45:39.500 --> 01:45:41.500
ich müsste quasi ein

01:45:41.500 --> 01:45:43.500
Docker-File bauen.

01:45:45.500 --> 01:45:47.500
Wird heute vielleicht bisschen knapp.

01:45:47.500 --> 01:45:49.500
Ich müsste ein Docker-File bauen, wo

01:45:49.500 --> 01:45:51.500
die Sachen drin gebaut werden.

01:45:51.500 --> 01:45:53.500
Wir machen

01:45:53.500 --> 01:45:55.500
mal die Kurzvariante

01:45:55.500 --> 01:45:57.500
von einem Docker-File.

01:46:01.500 --> 01:46:03.500
Und zwar, wir nehmen mal

01:46:03.500 --> 01:46:05.500
Ubuntu. Wir machen jetzt gar

01:46:05.500 --> 01:46:07.500
kein Docker-File.

01:46:07.500 --> 01:46:09.500
Ich mounte das jetzt

01:46:09.500 --> 01:46:11.500
hier rein.

01:46:11.500 --> 01:46:13.500
Ich mounte das jetzt hier rein.

01:46:13.500 --> 01:46:15.500
Curl install.NET

01:46:15.500 --> 01:46:17.500
müssen wir jetzt hier machen.

01:46:17.500 --> 01:46:19.500
Minus 8.0.

01:46:21.500 --> 01:46:23.500
Ich meine,

01:46:23.500 --> 01:46:25.500
Alter.

01:46:25.500 --> 01:46:27.500
Es ist kein

01:46:27.500 --> 01:46:29.500
Curl installiert, ich fasse es nicht.

01:46:29.500 --> 01:46:31.500
Na gut, das sind minimale Container-Images.

01:46:33.500 --> 01:46:35.500
Warum sollte da auch Curl drauf sein?

01:46:37.500 --> 01:46:39.500
Kann man sich das so vorstellen wie Server-Side-Rendering?

01:46:39.500 --> 01:46:41.500
Was? Hä?

01:46:41.500 --> 01:46:43.500
Wie jetzt?

01:46:43.500 --> 01:46:45.500
Das verstehe ich nicht.

01:46:47.500 --> 01:46:49.500
Doch, du kannst eine Image von Microsoft

01:46:49.500 --> 01:46:51.500
aufnehmen. Das bringt allerdings an der Stelle nichts.

01:46:51.500 --> 01:46:53.500
Weil du das älteste Image,

01:46:53.500 --> 01:46:55.500
also das älteste OS nehmen musst,

01:46:55.500 --> 01:46:57.500
was du mit deinem Output-Binary

01:46:57.500 --> 01:46:59.500
supporten musst. Weil wir machen kein normales

01:46:59.500 --> 01:47:01.500
.NET-Build. Wir machen diese experimentelle

01:47:01.500 --> 01:47:03.500
.NET-8

01:47:03.500 --> 01:47:05.500
Komplett-Kompilierung.

01:47:09.500 --> 01:47:11.500
Okay, Build.

01:47:11.500 --> 01:47:13.500
Das ist schon mal, da sieht man mal schon wieder,

01:47:13.500 --> 01:47:15.500
das ist schon mal abfuck im Vergleich

01:47:15.500 --> 01:47:17.500
zu

01:47:19.500 --> 01:47:21.500
zu Go. Mit Go hast du die Probleme

01:47:21.500 --> 01:47:23.500
schlicht und ergreifend nicht.

01:47:25.500 --> 01:47:27.500
Das ist schon mal doof.

01:47:27.500 --> 01:47:29.500
Das ist schon mal nicht gut.

01:47:33.500 --> 01:47:35.500
Eco, Alter.

01:47:39.500 --> 01:47:41.500
Wie heißt denn der Kram?

01:47:41.500 --> 01:47:43.500
Wie heißt das?

01:47:47.500 --> 01:47:49.500
Hier, das da.

01:47:49.500 --> 01:47:51.500
Das brauchen wir.

01:47:57.500 --> 01:47:59.500
Go-Sundags ist halt bodenlos.

01:47:59.500 --> 01:48:01.500
Ja, Go-Sundags ist...

01:48:01.500 --> 01:48:03.500
Meine Güte, jetzt ist ja mal gut hier.

01:48:03.500 --> 01:48:05.500
Go-Sundags ist...

01:48:05.500 --> 01:48:07.500
Das ist schon mal gut hier.

01:48:07.500 --> 01:48:09.500
Das ist schon mal gut hier.

01:48:09.500 --> 01:48:11.500
Go-Sundags ist...

01:48:11.500 --> 01:48:13.500
Ist schon halbwegs erträglich.

01:48:13.500 --> 01:48:15.500
Geht schon. Aber wirklich schön

01:48:15.500 --> 01:48:17.500
muss ich sagen. Also wirklich, wirklich warm.

01:48:17.500 --> 01:48:19.500
So komplett werde ich mit der Go-Sundags auch nicht.

01:48:23.500 --> 01:48:25.500
Plattform-Linker.

01:48:25.500 --> 01:48:27.500
Not found.

01:48:31.500 --> 01:48:33.500
Wie heißt das?

01:48:33.500 --> 01:48:35.500
Essentials?

01:48:35.500 --> 01:48:37.500
Nee.

01:48:39.500 --> 01:48:41.500
Base-Build? Ah fuck, wie heißt denn das unter

01:48:41.500 --> 01:48:43.500
Debian?

01:48:51.500 --> 01:48:53.500
Ah, okay.

01:48:53.500 --> 01:48:55.500
Easy.

01:48:55.500 --> 01:48:57.500
Einfach ohne S.

01:49:05.500 --> 01:49:07.500
Also unter Ubuntu 20.0

01:49:09.500 --> 01:49:11.500
Alles klar, natürlich.

01:49:11.500 --> 01:49:13.500
Was, was sonst?

01:49:15.500 --> 01:49:17.500
Ich finde, das ist ganz eindeutig,

01:49:17.500 --> 01:49:19.500
was das uns sagen soll.

01:49:21.500 --> 01:49:23.500
Komplett klar.

01:49:39.500 --> 01:49:41.500
Ja.

01:49:43.500 --> 01:49:45.500
Also wenn sich das

01:49:45.500 --> 01:49:47.500
noch nicht mal gescheit unter Ubuntu

01:49:47.500 --> 01:49:49.500
20.04 übersetzen lässt,

01:49:51.500 --> 01:49:53.500
dann kannst du es ja fast, fast

01:49:53.500 --> 01:49:55.500
komplett... Was hat er denn jetzt?

01:49:55.500 --> 01:49:57.500
Was will er mir eigentlich sagen?

01:50:03.500 --> 01:50:05.500
Bist du nicht auf V20?

01:50:05.500 --> 01:50:07.500
Doch.

01:50:07.500 --> 01:50:09.500
Was, .NET 7

01:50:09.500 --> 01:50:11.500
supportet doch nicht erst

01:50:11.500 --> 01:50:13.500
ab 22.10.

01:50:13.500 --> 01:50:15.500
.NET 7 geht glaube ich

01:50:15.500 --> 01:50:17.500
bis Ubuntu 18.04

01:50:17.500 --> 01:50:19.500
oder so?

01:50:31.500 --> 01:50:33.500
Ja, commercial-Support ist doch egal.

01:50:33.500 --> 01:50:35.500
Ihr Minimum.

01:50:37.500 --> 01:50:39.500
Minimum libc muss mal gucken.

01:50:43.500 --> 01:50:45.500
Es ist bis

01:50:45.500 --> 01:50:47.500
Debian 10

01:50:47.500 --> 01:50:49.500
und Ubuntu 18.04

01:50:49.500 --> 01:50:51.500
Die Chance, dass es auf noch

01:50:51.500 --> 01:50:53.500
älteren läuft, ist sogar

01:50:53.500 --> 01:50:55.500
gar nicht so,

01:50:55.500 --> 01:50:57.500
gar nicht so unnötig.

01:50:57.500 --> 01:50:59.500
Also,

01:50:59.500 --> 01:51:01.500
ich finde,

01:51:01.500 --> 01:51:03.500
gar nicht so, gar nicht so unnötig.

01:51:03.500 --> 01:51:05.500
Also, was der hier verschmerzt hat, ich habe

01:51:05.500 --> 01:51:07.500
absolut keinen Plassen-Schimmer.

01:51:11.500 --> 01:51:13.500
Also, ich weiß auch nicht, was

01:51:13.500 --> 01:51:15.500
er für Probleme hat, ehrlich gesagt,

01:51:15.500 --> 01:51:17.500
weil...

01:51:17.500 --> 01:51:19.500
Also, ich hab garantiert irgendeine Abhängigkeit,

01:51:19.500 --> 01:51:21.500
nicht?

01:51:23.500 --> 01:51:25.500
Aber man weiß es halt nicht.

01:51:25.500 --> 01:51:27.500
Ich kann es mal bilden, ich kann es mal

01:51:27.500 --> 01:51:29.500
bilden ohne Ahead of Time.

01:51:31.500 --> 01:51:33.500
So easy, gar kein Problem.

01:51:41.500 --> 01:51:43.500
Ich hab Dependencies.

01:51:43.500 --> 01:51:45.500
Dependencies, müssen wir mal kurz gucken.

01:51:47.500 --> 01:51:49.500
.NET 7 Dependencies, was brauchen wir denn hier?

01:51:51.500 --> 01:51:53.500
Clue C++

01:51:53.500 --> 01:51:55.500
Library, ok, das müssen wir bestimmt alles

01:51:55.500 --> 01:51:57.500
abinstall

01:51:57.500 --> 01:51:59.500
lib

01:52:01.500 --> 01:52:03.500
Es ist doch mit Build Essentials

01:52:03.500 --> 01:52:05.500
bestimmt

01:52:05.500 --> 01:52:07.500
drauf.

01:52:07.500 --> 01:52:09.500
Oder nicht?

01:52:11.500 --> 01:52:13.500
Welche davon denn jetzt?

01:52:15.500 --> 01:52:17.500
Welche davon?

01:52:19.500 --> 01:52:21.500
Geht anscheinend nicht drauf.

01:52:23.500 --> 01:52:25.500
Welche davon denn

01:52:25.500 --> 01:52:27.500
überhaupt?

01:52:27.500 --> 01:52:29.500
Kann man

01:52:29.500 --> 01:52:31.500
nicht einfach...

01:52:31.500 --> 01:52:33.500
Gibt es da nicht so eine Standard

01:52:33.500 --> 01:52:35.500
oder so?

01:52:37.500 --> 01:52:39.500
Ja, ich weiß nicht welche.

01:52:41.500 --> 01:52:43.500
Ich installiere jetzt einfach alle.

01:52:53.500 --> 01:52:55.500
Was will der eigentlich alles

01:52:55.500 --> 01:52:57.500
haben, man?

01:53:01.500 --> 01:53:03.500
Ach, Stand ist da drinne?

01:53:03.500 --> 01:53:05.500
Moment.

01:53:05.500 --> 01:53:07.500
Hätte ich mir vielleicht mit Output richtig angucken sollen.

01:53:07.500 --> 01:53:09.500
Cannot find

01:53:09.500 --> 01:53:11.500
Wo zum Teufel?

01:53:11.500 --> 01:53:13.500
Siehst du das?

01:53:13.500 --> 01:53:15.500
Cannot find, wo

01:53:15.500 --> 01:53:17.500
steht da? Wo steht Cannot

01:53:17.500 --> 01:53:19.500
find minus LZ?

01:53:19.500 --> 01:53:21.500
Ach da!

01:53:21.500 --> 01:53:23.500
Zlib

01:53:25.500 --> 01:53:27.500
Wie heißt denn das Zlib

01:53:27.500 --> 01:53:29.500
Def?

01:53:29.500 --> 01:53:31.500
Warum heißt die ganzen Sachen immer so

01:53:31.500 --> 01:53:33.500
unintuitiv?

01:53:35.500 --> 01:53:37.500
Zlib C

01:53:51.500 --> 01:53:53.500
Ja, das war bestimmt das Falsche.

01:53:55.500 --> 01:53:57.500
Zlib 1G

01:53:59.500 --> 01:54:01.500
Zlib 1G

01:54:01.500 --> 01:54:03.500
Natürlich, natürlich.

01:54:03.500 --> 01:54:05.500
Was sonst? Die Header brauchen wir ja.

01:54:05.500 --> 01:54:07.500
Ich geb dir Header.

01:54:07.500 --> 01:54:09.500
Ah, guck mal.

01:54:09.500 --> 01:54:11.500
Jetzt hat das funktioniert.

01:54:11.500 --> 01:54:13.500
Also 22.04

01:54:13.500 --> 01:54:15.500
ist überhaupt kein Problem

01:54:15.500 --> 01:54:17.500
zu bilden.

01:54:19.500 --> 01:54:21.500
Builds

01:54:21.500 --> 01:54:23.500
VmChamp

01:54:23.500 --> 01:54:25.500
Ja.

01:54:25.500 --> 01:54:27.500
Okay.

01:54:27.500 --> 01:54:29.500
Eine Sache, nochmal kurz gucken.

01:54:29.500 --> 01:54:31.500
16.04, das wird sich überhaupt nicht mehr

01:54:31.500 --> 01:54:33.500
installieren lassen, glaube ich jetzt.

01:54:43.500 --> 01:54:45.500
Das wird sich, glaube ich, gar nicht mehr

01:54:45.500 --> 01:54:47.500
installieren lassen.

01:54:47.500 --> 01:54:49.500
Also ich gehe nicht davon aus,

01:54:49.500 --> 01:54:51.500
dass es überhaupt läuft.

01:54:59.500 --> 01:55:01.500
Okay, 16.04

01:55:01.500 --> 01:55:03.500
läuft auch.

01:55:05.500 --> 01:55:07.500
Moment.

01:55:07.500 --> 01:55:09.500
.net

01:55:09.500 --> 01:55:11.500
.net

01:55:11.500 --> 01:55:13.500
Info

01:55:13.500 --> 01:55:15.500
.net

01:55:15.500 --> 01:55:17.500
Info

01:55:17.500 --> 01:55:19.500
Jaja

01:55:19.500 --> 01:55:21.500
Leute

01:55:21.500 --> 01:55:23.500
Zlib

01:55:23.500 --> 01:55:25.500
Eco 66

01:55:25.500 --> 01:55:27.500
hieß der Krempel, oder? Def?

01:55:29.500 --> 01:55:31.500
Ich hasse diese Namen von den

01:55:31.500 --> 01:55:33.500
Das kann sich doch keiner merken,

01:55:33.500 --> 01:55:35.500
Mann. 55, ne

01:55:35.500 --> 01:55:37.500
66 war gestern, 55 war

01:55:37.500 --> 01:55:39.500
damals.

01:55:39.500 --> 01:55:41.500
Obviously.

01:55:41.500 --> 01:55:43.500
Und jetzt war das was?

01:55:43.500 --> 01:55:45.500
Zlib?

01:55:49.500 --> 01:55:51.500
Ja, das, okay, das

01:55:51.500 --> 01:55:53.500
heißt einfach immer gleich.

01:55:55.500 --> 01:55:57.500
Ja, wenn man das richtig macht.

01:55:57.500 --> 01:55:59.500
Yes.

01:55:59.500 --> 01:56:01.500
Publish.

01:56:01.500 --> 01:56:03.500
CD

01:56:03.500 --> 01:56:05.500
Build

01:56:05.500 --> 01:56:07.500
.

01:56:09.500 --> 01:56:11.500
Okay.

01:56:11.500 --> 01:56:13.500
Mal gucken wir beim Abkacken zu.

01:56:13.500 --> 01:56:15.500
Plattform linke. Ach so, ja,

01:56:15.500 --> 01:56:17.500
Abinstall, Install

01:56:17.500 --> 01:56:26.220
Build

01:56:29.260 --> 01:56:31.260
Generate, okay, easy.

01:56:35.500 --> 01:56:37.500
Leute.

01:56:37.500 --> 01:56:39.500
Guck mal, das läuft sogar

01:56:39.500 --> 01:56:41.500
auf Ubuntu 16.04

01:56:41.500 --> 01:56:43.500
noch.

01:56:43.500 --> 01:56:45.500
Das ist doch gar kein Problem.

01:56:47.500 --> 01:56:49.500
Das ist doch gar kein Ding.

01:56:49.500 --> 01:56:51.500
Also 16.04 ist mir

01:56:51.500 --> 01:56:53.500
alt genug.

01:56:53.500 --> 01:56:55.500
Zeig ich euch ganz ehrlich.

01:56:59.500 --> 01:57:01.500
1,9 MB

01:57:01.500 --> 01:57:03.500
Library.

01:57:05.500 --> 01:57:07.500
Und ich meine,

01:57:07.500 --> 01:57:09.500
das ist über sechs Jahre alt

01:57:09.500 --> 01:57:11.500
des Linux. Das ist doch schon, das ist doch in Ordnung.

01:57:11.500 --> 01:57:13.500
Wollen wir nochmal Just For Fun?

01:57:13.500 --> 01:57:15.500
Okay, wir machen jetzt, wir machen

01:57:15.500 --> 01:57:17.500
jetzt als letzte Amtshandlung heute.

01:57:17.500 --> 01:57:19.500
Wie überspringen jetzt 16.04?

01:57:19.500 --> 01:57:21.500
Wir machen jetzt 12.04.

01:57:27.500 --> 01:57:29.500
12.04, okay, wir wissen jetzt ja langsam,

01:57:29.500 --> 01:57:31.500
wie es geht. Up, Update.

01:57:31.500 --> 01:57:33.500
Damals gab es noch nicht mal

01:57:33.500 --> 01:57:35.500
Abt.

01:57:39.500 --> 01:57:41.500
Abt, Get Update.

01:57:41.500 --> 01:57:43.500
Das ist so alt.

01:57:43.500 --> 01:57:45.500
Oh fuck, Leute.

01:57:45.500 --> 01:57:47.500
Dafür gibt es noch nicht mal mehr Packages.

01:57:53.500 --> 01:57:55.500
Okay, wir können das nicht verwenden. Die Mirrors sind offline.

01:57:55.500 --> 01:57:57.500
Okay, keine Chance.

01:57:57.500 --> 01:57:59.500
Okay, 14.04,

01:57:59.500 --> 01:58:01.500
komm, please, 14.04.

01:58:01.500 --> 01:58:03.500
Russen-Mirror jetzt, genau.

01:58:07.500 --> 01:58:09.500
Okay, da gab es Abt schon.

01:58:11.500 --> 01:58:13.500
Abt, It's All Cool.

01:58:15.500 --> 01:58:17.500
Schauen wir mal kurz, ob du es findest.

01:58:19.500 --> 01:58:21.500
Yes.

01:58:21.500 --> 01:58:23.500
Yes.

01:58:27.500 --> 01:58:29.500
Okay, der Download klappt noch.

01:58:33.500 --> 01:58:35.500
Abt, Install.

01:58:35.500 --> 01:58:37.500
Das da und Build

01:58:37.500 --> 01:58:39.500
Essential.

01:58:45.500 --> 01:58:47.500
Jetzt bin ich mal gespannt, ob der Build klappt.

01:58:47.500 --> 01:58:49.500
Ich glaube ja, ich glaube ja nicht.

01:58:49.500 --> 01:58:51.500
Ja, ja, genau.

01:58:51.500 --> 01:58:53.500
Wunderbar, wunderbar. Excellent, excellent.

01:58:53.500 --> 01:58:55.500
Abt, Search.

01:58:57.500 --> 01:58:59.500
Wie hieß das Ding damals?

01:58:59.500 --> 01:59:01.500
Abt, Install. Ah, 52.

01:59:01.500 --> 01:59:03.500
52 sind wir jetzt. Es wird immer

01:59:03.500 --> 01:59:05.500
älter.

01:59:05.500 --> 01:59:07.500
So, und jetzt bauen wir das

01:59:07.500 --> 01:59:09.500
Ganze mal. CD-Build.

01:59:09.500 --> 01:59:11.500
Oh.

01:59:11.500 --> 01:59:13.500
Cannot get required

01:59:13.500 --> 01:59:15.500
symbol SSLZ.

01:59:15.500 --> 01:59:17.500
Z Alpenprothos,

01:59:17.500 --> 01:59:19.500
alles klar. Die Alpenprothos sind am Start.

01:59:21.500 --> 01:59:23.500
Ich wusste gar nicht, dass die auch in den Alpen sind.

01:59:27.500 --> 01:59:29.500
Die Alpenprothos machen nicht mal mit.

01:59:29.500 --> 01:59:31.500
Okay, also, Ubuntu

01:59:31.500 --> 01:59:33.500
14.04. funktioniert nicht mehr.

01:59:33.500 --> 01:59:35.500
Das ist zu alt.

01:59:37.500 --> 01:59:39.500
Man könnte jetzt sicherlich

01:59:39.500 --> 01:59:41.500
rumbasteln und SSL-Support deaktivieren

01:59:41.500 --> 01:59:43.500
und solche Geschichten, aber

01:59:43.500 --> 01:59:45.500
scheiß drauf.

01:59:45.500 --> 01:59:47.500
Also das funktioniert nicht mehr. 16.04

01:59:47.500 --> 01:59:49.500
ist das letzte, wo es drauf läuft.

01:59:49.500 --> 01:59:51.500
Obwohl, obwohl der offizielle Support

01:59:51.500 --> 01:59:53.500
schon bei 18.04

01:59:53.500 --> 01:59:55.500
plus ist.

01:59:59.500 --> 02:00:01.500
Also finde ich, finde ich okay.

02:00:01.500 --> 02:00:03.500
Offiziellen Support auf

02:00:03.500 --> 02:00:05.500
18.04 stellen und

02:00:07.500 --> 02:00:09.500
in Wirklichkeit noch 16.04 supporten.

02:00:09.500 --> 02:00:11.500
Beziehungsweise

02:00:11.500 --> 02:00:13.500
lauffähig sein, ob es Support wird,

02:00:13.500 --> 02:00:15.500
oder nicht.

02:00:15.500 --> 02:00:17.500
Ich gehe mal davon aus,

02:00:17.500 --> 02:00:19.500
mit einem gebauten Binary,

02:00:19.500 --> 02:00:21.500
was so alt ist,

02:00:23.500 --> 02:00:25.500
geht das schon.

02:00:29.500 --> 02:00:31.500
Guck, das läuft doch hier drauf.

02:00:31.500 --> 02:00:33.500
Kann ja mehr oder weniger

02:00:33.500 --> 02:00:35.500
Zufall sein. Aber das ist

02:00:35.500 --> 02:00:37.500
gut.

02:00:37.500 --> 02:00:39.500
Dann sind die Binaries

02:00:39.500 --> 02:00:41.500
tatsächlich auch

02:00:41.500 --> 02:00:43.500
lauffähig auf

02:00:43.500 --> 02:00:45.500
den wichtigsten System.

02:00:45.500 --> 02:00:47.500
Ich mein,

02:00:47.500 --> 02:00:49.500
braucht man wirklich

02:00:49.500 --> 02:00:51.500
was,

02:00:51.500 --> 02:00:53.500
was eine C-Library

02:00:53.500 --> 02:00:55.500
voraussetzt.

02:00:55.500 --> 02:00:57.500
Die älter ist als

02:00:57.500 --> 02:00:59.500
6 Jahre rausgekommen

02:00:59.500 --> 02:01:01.500
ist die ja wahrscheinlich noch früher.

02:01:03.500 --> 02:01:05.500
Also die, guck mal mal,

02:01:05.500 --> 02:01:07.500
Ubuntu 16.04

02:01:07.500 --> 02:01:09.500
libc Version.

02:01:11.500 --> 02:01:13.500
Okay,

02:01:13.500 --> 02:01:15.500
G libc.

02:01:23.500 --> 02:01:25.500
Release date

02:01:25.500 --> 02:01:27.500
2016.

02:01:31.500 --> 02:01:33.500
Ja, 7 Jahre alt

02:01:33.500 --> 02:01:35.500
ist das jetzt genau.

02:01:37.500 --> 02:01:39.500
Also ich würde sagen,

02:01:39.500 --> 02:01:41.500
7 Jahre alte C-Libraries,

02:01:41.500 --> 02:01:43.500
damit läufst du noch.

02:01:43.500 --> 02:01:45.500
Das ist zwar nicht so krass,

02:01:45.500 --> 02:01:47.500
wie mit Go.

02:01:47.500 --> 02:01:49.500
Ich meine, Go Binaries, also

02:01:49.500 --> 02:01:51.500
alles was Go Only Sachen verwendet,

02:01:51.500 --> 02:01:53.500
wohlgemerkt nur.

02:01:53.500 --> 02:01:55.500
Also mit irgendwelchen Abhängigkeiten drum herum

02:01:55.500 --> 02:01:57.500
hast du dann auch wieder andere Probleme.

02:02:01.500 --> 02:02:03.500
Auf der Seite wurde das sogar erwähnt.

02:02:03.500 --> 02:02:05.500
Lass uns mal schnell gucken.

02:02:05.500 --> 02:02:07.500
Aber das ist nicht so krass wie Go.

02:02:07.500 --> 02:02:09.500
Mein Go Binaries sind ja lauffähig bis

02:02:09.500 --> 02:02:11.500
zurück zu

02:02:11.500 --> 02:02:13.500
Colonel 2638

02:02:13.500 --> 02:02:15.500
oder so was.

02:02:15.500 --> 02:02:17.500
Du kannst ja quasi aktuelle

02:02:17.500 --> 02:02:19.500
Go Programme auf Linux System

02:02:19.500 --> 02:02:21.500
laufen lassen von vor

02:02:21.500 --> 02:02:23.500
20 Jahren oder so.

02:02:23.500 --> 02:02:25.500
Ja, nicht ganz, aber

02:02:25.500 --> 02:02:27.500
von vor 15 Jahren

02:02:27.500 --> 02:02:29.500
oder so.

02:02:31.500 --> 02:02:33.500
Hier steht nichts.

02:02:33.500 --> 02:02:35.500
Ups.

02:02:37.500 --> 02:02:39.500
Hier steht nichts von

02:02:45.500 --> 02:02:47.500
Ach, hätte ich das mal gewusst,

02:02:47.500 --> 02:02:49.500
da hätte ich es einfach copy-pasten können.

02:02:57.500 --> 02:02:59.500
Ja, Go

02:02:59.500 --> 02:03:01.500
ist lauffähig auf

02:03:01.500 --> 02:03:03.500
Linux System, die älter sind als Go selbst.

02:03:03.500 --> 02:03:05.500
Ja.

02:03:05.500 --> 02:03:07.500
Also hier steht nichts von 16.04.

02:03:09.500 --> 02:03:11.500
Auf der

02:03:11.500 --> 02:03:13.500
Tabelle der Linux Version.

02:03:21.500 --> 02:03:23.500
Hier?

02:03:23.500 --> 02:03:25.500
18.04 steht da drinnen.

02:03:25.500 --> 02:03:27.500
16.

02:03:27.500 --> 02:03:29.500
Ach, hier.

02:03:29.500 --> 02:03:31.500
Das ist die

02:03:39.500 --> 02:03:41.500
Ja, gut.

02:03:41.500 --> 02:03:43.500
Das passt ja.

02:03:43.500 --> 02:03:45.500
Wir haben ja 223

02:03:45.500 --> 02:03:47.500
bei Ubuntu

02:03:47.500 --> 02:03:49.500
16.04 gehabt.

02:03:51.500 --> 02:03:53.500
Aber trotzdem,

02:03:53.500 --> 02:03:55.500
das ist alt

02:03:55.500 --> 02:03:57.500
genug.

02:03:57.500 --> 02:03:59.500
Kann man nichts sagen.

02:03:59.500 --> 02:04:01.500
Also ich glaube, das ist echt ganz gute

02:04:01.500 --> 02:04:03.500
Alternative, wenn man Bock hat, die Sachen in

02:04:03.500 --> 02:04:05.500
C Sharp zu programmieren.

02:04:05.500 --> 02:04:07.500
Und die

02:04:07.500 --> 02:04:09.500
Libraries und alles, das drum herum

02:04:09.500 --> 02:04:11.500
gescheit funktioniert mit dem

02:04:11.500 --> 02:04:13.500
Wir haben ja heute nicht so viele eingebunden.

02:04:13.500 --> 02:04:15.500
Reflection kannst du dir

02:04:15.500 --> 02:04:17.500
eh wahrscheinlich abschminken mit

02:04:17.500 --> 02:04:19.500
irgendwelchen Native-Kompilierung

02:04:19.500 --> 02:04:21.500
Sachen. Aber trotzdem,

02:04:21.500 --> 02:04:23.500
das ist cool, dass es geht.

02:04:27.500 --> 02:04:29.500
Okay Leute, macht's gut. Ich geh jetzt

02:04:29.500 --> 02:04:31.500
pennen. Bis denn, see you.


{"text": "So, kurz was trinken, m\u00fcsst ihr mich dran erinnern, ich muss regelm\u00e4\u00dfig ertrinken im Livestream, sonst kriege ich so einen trockenen Hals und das merkt man sp\u00e4testens so nach 1-1,5 Stunden merke ich das und dann ist aber eigentlich zu sp\u00e4t. Deswegen jetzt ordentlich hydraten. Ich glaube Twitch hat noch gar nicht gecheckt, dass der Stream \u00fcberhaupt online ist. Oh doch, jetzt ist es in 7 Leuten da, ganz davon abgesehen, so viele werden wir wahrscheinlich heute auch nicht werden, weil es ist 12.30 montags, oh das ist ein nice Seamote, wo kommt das her? Okay, sagt mir gar nichts, aber das finde ich gut. Also das war ein bisschen rare people, extra rare, also nicht gegrillt, sondern selbe, okay, ich glaube Twitch hat doch noch nicht gecheckt, dass der Stream online ist. Snacks, wie hast du es gefunden, zuf\u00e4llig oder \u00fcber Notification? Weil das dauert immer unterschiedlich lang, mal dauert das 15 Sekunden, dann hat Twitch kapiert, mal dauert es aber auch 5 Minuten und es hat auch teilweise schon mal an die 10 Minuten gedauert. Ich sehe das immer daran, wenn erstens wenn Notifications rausgehen und wenn auf einen Schwung irgendwie 40-50 Leute kommen, dann wei\u00df ich immer, ah, jetzt hat es Discord, Discord hat es jetzt auch mitgekriegt, Stripes kriegt das immer \u00fcber Discord mit. Hast du Urlaub oder ist das ein Pausestream, weder, noch, jetzt \u00fcberleg mal scharf was sonst noch sein k\u00f6nnte, der Chat spoilert schon wieder, ich gehe montags nicht arbeiten. Ich kriege aber auch kein Geld f\u00fcr montags dann logischerweise. Hey Max fand es echt cool, das ist ein ITler YouTuber, ja ich bin ja so halbe halbe, gibt er in der N\u00e4he wohnt, ja siehste, Pog wo wohnst du? Redux ist auch am Start, jetzt hat Twitch auf jeden Fall mitgekriegt, Moin aus der Pause, nice, Pausechamp, also quasi richtig echter Pausechamp, aus dem Gym, 12.35 montags, wer ist denn da im Findestudio, Hanau, ja da Hanau kenne ich auch, es ist lustig, dass ich als Benchmark f\u00fcr die Discord Notifications genutzt werde, ich wei\u00df, dass du das immer \u00fcber Discord kriegst, du bist Schausw\u00e4ngler, ja das kannst du bestimmt unter Weiterbildung buchen oder so, heute steppen wir mal wieder etwas unser Frontend Game ab und machen bisschen Datenbank Kram, ich zeige euch gleich wo wir stehen geblieben sind, ist nichts gro\u00dfartiges, also versteht man wahrscheinlich in zwei Minuten, haben nicht viel gemacht, wir haben bis jetzt mal ein bisschen Postgres rumgebastelt und ein Autocomplete Feld im Browser gebaut, ich zeig das gleich nochmal, aber ich hab eine, finde ich, m\u00fcssen wir mal gucken ob das klappt, aber ich habe da eine Idee gehabt, wie wir das noch viel viel schneller machen k\u00f6nnen, aktuell haben wir Autocomplete Zeiten so von 70 Millisekunden oder sowas und ich hoffe wir kriegen es damit deutlich schneller, nicht dass man das br\u00e4uchte, es ist einfach nur dass es funktioniert, dass das geht, agiler Twitch Coder, ja genau, der Taunuskreis war dann alter Ausbildungsbetrieb, ok ich wusste gar nicht, dass die Physis oder sowas ausbinden, ja ich hab gern Mario Kart Playlist an, das ist nicht zu aufdringlich und nicht zu einschl\u00e4fernd, also das ist optimale Mischung, finde ich f\u00fcr sowas, \u00fcbrigens wusstet ihr, das muss ich jetzt mal revealen an der Stelle, ich hab vor zwei drei Tagen erfahren, dass mein Ur-Opa, nicht mein Opa, mein Ur-Opa, kurz gucken ob die Lautst\u00e4rke von der Musik passt, ja ist ok, ich hab erfahren, dass mein Ur-Opa aus S\u00fcdafrika gekommen ist und ich bin mir jetzt nicht sicher, ich bin ja eigentlich quasi ein Achtel S\u00fcdafrikaner jetzt, Zulul, genau Zulul, verbotene Emotes hier, das muss vor dem zweiten Weltkrieg gewesen sein, das muss vor dem zweiten Weltkrieg gewesen sein, weil mein Opa war im zweiten Weltkrieg irgendwie so, keine Ahnung, 20 oder so, das muss also vor dem zweiten Weltkrieg gewesen sein, wo er in S\u00fcdafrika war, mein Ur-Opa, Max hast du schon von dem Politiker in Afrika geh\u00f6rt, da gibt es n\u00f6, aber da gibt es einige, keine Ahnung, war relativ beliebt dahin auszuwandern und ein paar Jahre sp\u00e4ter wieder zur\u00fcck, ernsthaft, vielleicht etwas ungl\u00fccklicher Name auch f\u00fcr einen s\u00fcdafrikanischen Politiker, auf der anderen Seite wahrscheinlich hat er sich nicht ausgesucht, das ist aber doch schon ganz sch\u00f6n Payne's Champ, wenn man so hei\u00dft, was der ist Pr\u00e4sident von irgendeinem Land, sehr ernsthaft, ja, wo es nicht alles gibt, wie gesagt, ich bin ja auch zu einem Achtel Afrikaner, der war wegen Corona in den Medien, aha, wahrscheinlich w\u00fcsste sonst gar keiner, dass es den gibt, so, aber widmen wir uns mal wieder unserem Upsteppen des Frontend Games, Max wie powerst du deine ESP so, wenn ich jetzt sage mit Strom, wird dir das wahrscheinlich nichts helfen, du willst wahrscheinlich wissen, ob USB oder Batterie oder sowas in der Richtung, die meisten per USB, nahezu alle per USB, ich habe mir irgendwo mal so ein PoE Kit gekauft, da kann man das dann quasi, also da steckst du Kabel rein, Netzwerkkabel rein, machst PoE am Router oder am Switch an und der zwackt das ab und konvertiert dir das dann quasi in so einem Stecker in drinnen schon irgendwie in 5 Volt oder so, habe ich nie verwendet, \u00e4hm, ansonsten USB, ich habe eigentlich nur USB, USB f\u00fcr den ESP, Vollkornmilch pro Dange f\u00fcr den Zap, hat es wieder nicht gebimmelt heute, das ist sehr unzuverl\u00e4ssig gerade Steamlabs, oder ich habe es nicht geh\u00f6rt, ich habe n\u00e4mlich gerade MassivePepoFat gemacht, Leute, es kann sein, dass ich ein bisschen hart gebimmelt, aber es kann sein, dass ich ein bisschen m\u00fcde bin, weil Verdauung gerade einsetzt. Mein Stromverbrauch m\u00fcsste relativ hoch sein, geht eigentlich, nee, warum, ich mein, weder Raspberry Piles noch ESPs brauchen nur sonderlich viel, dass es gro\u00dfartig auff\u00e4llt, ich wei\u00df aus dem Kopf nicht, keine Ahnung, also Gaspreise sind krass teuer geworden, wie sieht es mit PoE am Freitag aus, nee habe ich gerade Zeit f\u00fcr, kein PoE, mit dem ganzen Server, ja, das ist ein Inter-Low-Power-Server, der Eidl 8 Watt braucht, also das wird sich jetzt nicht nennenswert auf den Stromverbrauch auswirken, klar, sag mal so, \u00e4hm, die Festplatten, wenn die laufen, brauchen sie ein bisschen mehr, der braucht 8 Watt Eidl, Stripestesser, der braucht nix, inklusive SSD, allerdings ohne Platten, mit den Platten braucht er dann nat\u00fcrlich mehr, aber die Platten sind ja zum gr\u00f6\u00dften Teil im Sleep, da braucht mein 10G-Switch mehr, also ich glaube, das Netzwerkequipment braucht eine ganze Ecke mehr, ich mein, das ist der MikroTik-Router, der 10G-Switch, dann die 3 Access Points, die am Router \u00fcber PoE dranh\u00e4ngen, und dann halt, dann noch die Fritzbox und dieses Ding von Unity Media, also da kommen wahrscheinlich, da kommen wahrscheinlich 50, 50 Watt Netzwerkger\u00e4te zusammen, und der Server f\u00e4llt da kaum ins Gewicht, ja, in dem Geh\u00e4use ist tats\u00e4chlich 80% Luft drin, in dem Geh\u00e4use ist ja noch, das Netzteil liegt ja auch mit drin noch und alles, so, ich mach mal kurz meine VM an, und dann erz\u00e4hl ich euch, genug hier Lederhosen, Winkpippe gehabt, dann zeig ich euch mal, wo wir stehen geblieben sind, kann sein, ich glaube, ich muss erstmal VM kurz update und neu starten, habe ich so im, irgendwie das Gef\u00fchl, dass ich das machen muss, heute steppen wir mal wieder unser Frontend Game ab, genau, der Desktop, ja, der ist, finde ich schon, der ist sehr strukturiert, der mag jetzt vielleicht dem ein oder anderen nicht ordentlich erscheinen, aber der hat schon sein System, dein ganzes System, das ist aber ordentlich, ah, hier ist ja noch unser Datenbankged\u00f6ns, vorletztes Mal, alles klar, so, ich mach mal kurz, alles klar, eh, mal kurz, mal kurz, Update, ja, dachte ich mir, oh, Polkit, ja, das sollte man updaten, wieder mal Zeit, so, Polkit, Ghostman, wird auch wieder geupdatet, du hast alle Weihnachtseamots rausgeworfen, ich hab's gesehen, richtig Massive, Pog, weil ich h\u00e4tte das nie gemacht, ihr kennt mich, wenn ich sowas mache, dann dauert das da ein halbes Jahr und dann ist eigentlich schon wieder Weihnachten, du hast auch schon einmal, ja, das macht keiner gerne, wof\u00fcr n\u00fctzt du deinen Surfer aktiv oder mehr oder weniger just for fun, Ackerman Blog, also, wenn du es genau wissen willst, was ich laufen hab daheim, dann gehst du auf meinen YouTube Channel und guckst dir das vor, vor vorletzte Video an, das, das Home-Surfer-Enjoyer-Video und da zeige ich dir 26, 25 Minuten lang, was ich wie wo hab. So, ich starte mal, ich starte mal kurz das Ding hier neu, jaja, hat er jetzt geupdatet? Okay, hoffe ich mal, ich starte mal kurz neu. N\u00e4chstes Jahr Weihnachten, dieses Jahr Weihnachten, ja, dann wird's da wieder eklig, weil das kann das Zebaro machen, das Zebaro ist die ganze Zeit schon immer afk und macht komische Dinger, was, was seh ich da im Hintergrund, was ist das? Das ist das Bing Image of the Day, also nicht, dass ihr denkt, ich w\u00fcsste, was auf meinem Desktop Hintergrund ist, was seh ich da? Leute mit Hut, die, ich hab keine Ahnung, irgendwelche Stimmen, Segel, nee, was ist das? Saffran, ja wirklich, ernsthaft, Lumen-Air, ist das so? Ich h\u00e4tte jetzt eher gedacht, die stecken, die stecken das da rein. Alter Chat, Chat ist wieder richtig high IQ, Chat wei\u00df sofort, was es ist, die ganzen Prime-Subs haben sich gelohnt, zahlt sich aus. Lohnt sich Ryder? Ja finde ich schon. Du kannst dir, wenn du viel von JetBrains verwendest, du kannst ein bisschen Kohle sparen, wenn du das Desktop Package kaufst. Also wenn du mehr als eins verwendest. Und kauf dir die Privatversion, wenn du es privat verwendest. Also hier f\u00fcr pers\u00f6nliche Nutzung, nicht hier Organisation. F\u00fcr pers\u00f6nliche Nutzung kriegst du das All Products Pack f\u00fcr 250 Euro im Jahr und ab dem zweiten Jahr, also bis auf 60% geht das runter im dritten Jahr. Ich finde das lohnt sich, wenn man mehr als eins von denen verwendet. Weil allein schon, ich glaube JetBrains Ryder alleine kostet auch irgendwie 150 Euro oder sowas. Zeig mal, wo ist es denn? Entwicklertools. Muss mal kurz gucken, ich wei\u00df es selbst gar nicht, was es kostet. Kaufen. Ja, nee, hier, fast. Guckt, also wenn man mehr als eins verwendet, lohnt sich eigentlich das All Products Pack schon wieder. Ich finde es nicht schlecht und ganz ehrlich, wenn man damit professionell oder semi professionell arbeitet, so viel sind 250 Euro bzw. wird dann immer weniger, geht dann irgendwie runter bis auf 190 oder irgendwie was. Ist das im Jahr jetzt auch nicht, wenn man das t\u00e4glich oder \u00f6fters verwendet? Ist Ryder nicht dasselbe wie das Code? Nee. Ryder ist eher das wie Wishl Studio. Ryder ist quasi die Konkurrenz zu Wishl Studio, nicht zu Wishl Studio Code. Nur mit dem Unterschied, dass mir Ryder von den Funktionen und der Handhabung mittlerweile besser gef\u00e4llt als Wishl Studio. Ich habe jahrelang auch f\u00fcr .NET und sowas Wishl Studio verwendet, aber seitdem ich jetzt haupts\u00e4chlich.NET, und das ist auch schon wieder jetzt die letzten paar Jahre,.NET haupts\u00e4chlich unter Linux, fast exklusiv unter Linux entwickle, ist halt Wishl Studio selbst keine Option mehr. Wishl Studio Code ist f\u00fcr.NET nicht so fein und Ryder ist super. Das verwenden wir mittlerweile unter Windows auch. Ja, aber noch nicht selbst aus, ich habe mir ein paar Videos zu angeguckt. Da bin ich mal gespannt, ob sie es da schaffen, Wishl Studio Code ein bisschen Konkurrenz zu machen. F\u00fcr Java Script und Frontend zeug ich wahrscheinlich weniger, aber es gibt ja auch viele Plugins f\u00fcr Wishl Studio Code, die beliebt sind. Ja, von Go bis Rust und sonst was, vielleicht da. F\u00fcr Go haben sie ja eine eigene IDE. So, ich zeige euch mal kurz wo wir stehen geblieben sind. Ich muss mal kurz die Musik da noch einen Ticken leiser machen. Das ist mir das zu anstrengend. So, oh, Leute. Ich muss, gestern hat schon einer gemeint, ich h\u00f6re mich anders an. Das liegt daran, weil Teams mit der an meinem Mikrofon rumgestellt hat. Teams macht das gerne, weil Teams einfach nur zackt in der Richtung. Ich lege komplett von Windows zu Linux. Ja, dann \u00fcberleg mal. Also, kann man jetzt ja auch hier gar nichts dazu sagen, wenn du nicht, zumindest ein bisschen erz\u00e4hlst, um was du machen willst. Also, einfach so ins kalte Wasser springen w\u00fcrde ich auf jeden Fall nicht. Ich w\u00fcrde mir erstmal, ich w\u00fcrde noch nicht mal das machen, ich w\u00fcrde es erstmal so machen wie ich Linux in eine VM packen unter Windows und mir das ein bisschen angucken, weil du kannst nahezu alles relativ gut in einer VM machen. Au\u00dfer Videos gucken und sowas, dann ist ganz sch\u00f6n hohe CPU-Last. Aber zum Ausprobieren ist eine VM das beste, was du machen kannst. Das hast du schon gemacht, ja. Wenn es da nichts mehr gibt, was du exklusiv unter Windows machst, ja, warum nicht? Kann man ja machen. Aber dann gleich Art-Schlie\u00dfungs, Art-Schlie\u00dfungs by the way. Und dann die Menschheit bekehren, dass alle Art-Schlie\u00dfungs verwenden. So, ich zeige euch mal kurz wo wir stehen geblieben sind. Wie habe ich denn das Projekt genannt? SearchChamp. Also.net run. Und jetzt, wie ist das Frontend-Ding? Ah, Frontend, da h\u00e4tte ich auch selbst drauf kommen k\u00f6nnen. So, also ich zeige euch mal kurz was wir das letzte Mal gebaut haben. Wir haben ein Autocomplete-Feld, ob ich das Studio Code vielleicht aufmache neben dran. Ja, also wir haben ein Autocomplete-Feld gebaut, was Sachen vom Server autocompleted, ja. Wenn ich jetzt hier z.B. eintippe A oder S, dann sollte das normalerweise autocompleten. Was ist, oh, oh, was ist hier los? Ah, ich wei\u00df woran es liegt. Chat, warum sagt mir das denn keiner? Die Datenbank l\u00e4uft nicht. Wie? H\u00e4? Warum ist mein Datenbank-Image weg? Jetzt bin ich verwirrt. Wo ist mein Datenbank-Image hin? Wo waren wir denn hier? Temp, pg, data. \u00c4h ja, sudo, denkst dir. Ok, die Datenbank-Daten sind noch da. Die Datenbank-Daten sind noch da, hier, 1,6 Gigabyte, ok. Docker-Run? Ah, weil ich ja M gemacht habe. Keg-Wait. Warum mache ich auch so ein Mist? Ja gut, aber das sch\u00f6ne an Containerkram ist, die Daten sind ja noch da. Rest kann ich einfach so lassen. Bam, wieder starten. Und dann sollte das eigentlich wieder funktionieren. Schauen wir mal, ob es jetzt autocompleted, neu laden, ha, ha, der Harold, da ist er. Also wir haben so ein autocomplete-Ding gebaut, da kann man z.B. dann sowas hier eingeben. So hier, Ashley, autocompleted ist oder Dom oder so oder Punkt Name. Das sind \u00fcbrigens random Daten, die er da generiert. Host, ne Host haben wir da nicht drinne. Das sind random, hier Punkt Net oder so. So, wir haben so ein autocomplete-Ding gebaut und das autocomplete-Ding ist halt relativ schnell, weil wir haben 1,6 Gigabyte, Penny Punkt Name, Klassik. Penny. Oh ja, beste, beste. Ganz sch\u00f6n viele Leute die gleiche Domain, oder? Penny Punkt Name. Ja, und das autocomplete ist relativ schnell, obwohl wir haben eine Postgres-Datenbank mit 1,6 Gigabyte und ich glaube irgendwie 4,5 Millionen Eintr\u00e4gen oder so. Was ist denn 3000 mal 1500? Ja, also wir haben, habe ich doch richtig im Kopf, wir haben 4,5 Millionen Eintr\u00e4ge in der Datenbank, die alle gleich aussehen, die alle aus einem Vorname bestehen und einer Domain. Die Daten sind eigentlich relativ egal, das geht ja nur, dass man da schnell autocompleten kann. So, also wir haben eine Datenbank mit 4,5 Millionen Elementen drin und die ist insgesamt 1,6 Gigabyte gro\u00df und ihr seht, so das autocomplete ist schon sehr schnell. Wir brauchen f\u00fcr einen Datenbank-Query ungef\u00e4hr 7 und 3, also 28 bis 37 Millisekunden. Am langsamsten sind die Queries, wo man nur ein Buchstabe eingibt, der dauert 284 Millisekunden, weil der dann halt relativ viel zu suchen hat. Und da habe ich mir gedacht, das k\u00f6nnen wir jetzt noch ein bisschen optimieren. Das ist eine gute Frage. Ok, das ist die high IQ Chatfrage. W\u00e4re das auch noch schnell, wenn deine Anwendung bei 100.000 User h\u00e4tte oder skaliert deine L\u00f6sung Schei\u00dfe? Naja, das ist Read-Only, das spricht schon mal daf\u00fcr, dass das relativ schnell sein m\u00fcsste, auch bei mehreren Usern gleichzeitig. Postgres Read-Only ist ja kein Ding. Also ich w\u00fcrde sagen, das m\u00fcsste auch bei 100.000 Usern relativ schnell gehen. Ob das jetzt mega krass diagonal, horizontal und vertikal skaliert, m\u00fcsste man ausprobieren. Aber im Prinzip w\u00fcrde ich sagen, ja, das wird wahrscheinlich auch mit 100.000 Usern relativ schnell gehen. W\u00e4re f\u00fcr so eine Anwendung nicht Redis perfekt? Naja, Redis w\u00e4re insofern von der Idee her nicht schlecht, weil es rein in Memory ist. Aber das Problem an Redis ist, mach mal 4,5 Millionen Eintr\u00e4ge rein in Memory sind. Das braucht schon ein bisschen RAM, das ist das erste. Und das zweite ist, wahrscheinlich ist es sogar langsamer als Postgres in dem Fall, weil Postgres explizit einen Modus hat f\u00fcr Textsuche, der das ganze beschleunigt. Soll ich euch mal versuchen, so weit wie ich es verstanden habe, zu grob zu erkl\u00e4ren, wie das Postgres macht. Das ist eigentlich relativ sechsk\u00f6pfig. Und zwar, wenn man Postgres sagt, dass man jetzt Text in die Datenbank speichert, zum Beispiel das Wort Hallo m\u00f6chte man in die Datenbank speichern. Allerdings so, dass man es schnell wieder finden kann, schnell wieder durchsuchen kann. Dann speichert Redis, dann speichert Postgres das normalerweise halt einfach als Feldtext. Einfach Hallo drin und gut ist. Dann kannst du aber nicht schnell suchen, weil dann musst du ja vom ersten Eintrag der Datenbank bis zum letzten Eintrag der Datenbank suchen. Und was Postgres macht, ist jetzt folgendes, damit Postgres das macht, muss man folgendes setzen, man muss diese zwei Sachen in Postgres einschalten. Also man muss diese Postgres Erweiterung laden, und man muss sagen, dass er ein Textsuche, wie auch immer, Index anlegen soll da drauf. So, und was Postgres jetzt macht, ist, um das schnell durchsuchbar zu machen, der macht aus diesem Wort 3er Buchstabenpaare. Das hei\u00dft, Postgres macht daraus dann irgendwie sowas, macht irgendwie h, und dann h a, a h, glaube ich, und dann h l, a, und so, so. Diese Varianten werden da irgendwie rausgebastelt. Das kann man sich, Moment, das kann man sich sogar anzeigen lassen. Ich warte mal, ich lasse mir das mal anzeigen. Da gibt es n\u00e4mlich eine fertige Funktion, die das macht. Wartet mal, das machen wir jetzt. EF, Functions, Show, hier, so. Also das, was Postgres speichert, h\u00f6r hallo. Nat\u00fcrlich speichern wir den Text nur in klein, weil wir ja case insensitiv suchen wollen. Was kommt da \u00fcbrigens zur\u00fcck jetzt? Ein String Array, ok. Schleife, gucken wir uns das mal an, was Postgres daraus macht. Ja, lul, cw, lul, return, zack. So, gehen wir uns das mal aus. Also aus hallo, macht Postgres. Was? Ach, das muss man in einem Query machen, das kann man nicht einfach so machen, oder wie? Wie soll ich denn daraus einen Query bauen? H\u00e4? Ok, wir gucken uns jetzt einfach ein Beispiel an. Example. Gibt es ja schon genug Leute, die das machen. Kennst du mich mit QuestDB aus? Nein. Hier, also. Das macht immer so dreier Buchstabenpaare daraus. Und dann speichert es das in irgendeinem sortierten Index oder so ab. Zumindest hat das den Vorteil, dass man dementsprechend relativ schnell Wildcards suchen machen kann. So nach dem Motto enth\u00e4lt ein Wort den Buchstabe a oder enth\u00e4lt ein Wort die Zeichenfolge ca oder sowas. Das geht dann relativ schnell, weil er die W\u00f6rter ja schon so aufgesplittet speichert und sich in seinem Index per Binary Search relativ schnell da lang hangeln kann. So reime ich mir das zumindest zusammen. Nachteil ist, Rides dauern l\u00e4nger und die Datenbank wird viel gr\u00f6\u00dfer. Das ist ja oftmals so. Das ist immer so ein bisschen Tradeoff zwischen Gr\u00f6\u00dfe und Aufwand, dass man es dann schneller wieder rauskriegt. Select Word. Ok, das probieren wir jetzt mal aus, ob das funktioniert. Also ich soll da einen Query daraus machen. Ok. Raw SQL. Database. Raw SQL. Execute Raw SQL. Ok, also. Mal schauen. Hab ich noch nie gemacht. Mal gucken, ob wir das Postgres irgendwie entlockt kriegen. Was ist denn das? Show. Hier. Ok. Select. Alles klar. So. Wir wollen nicht Word-Similarity, sondern Show dr\u00fccken. F\u00fcr Hallo. F\u00fcr Hallo. So. Gucken, ob das funktioniert. Das knallt jetzt wahrscheinlich gleich wieder. Und was kommt da als Ergebnis raus? Ein String oder was? Oder wie Execute Raw SQL. Ne. Ey, keine Ahnung, wie das funktioniert. Ja, Update, Update. Wei\u00df nicht, wie ich das dem beibringen kann. Ja, super, aber da kriege ich doch jetzt keine Ausgabe von. Ja, nice, nice. Das Query funktioniert, aber ohne dass die Ausgabe. Ok. Execute Raw SQL. Output. EF Core Output. Also mal gucken, wie das haut. Oh, jetzt wird es High IQ. Moment. Was? Da kommt ein Int zur\u00fcck. Warum kommt da eigentlich ein Int zur\u00fcck? Warum kommt da ein Int zur\u00fcck? Warum kommt da nicht irgendein Text Output zur\u00fcck? Aber wir k\u00f6nnen das ja einfach mal mit pet-docker machen und uns connecten in die Datenbank. Hier, Docker, PS, noch mal Bash. Bin, Bash. So, Docker, Exec, Postgres. Ne, Container-ID Bin-Bash. Ne, das war. Ach, wie ging das noch mal? Minus. Number of Affected Roles kommt zur\u00fcck. Ja, super. Ich will aber den Text, den Text. Wie ging das? IT, IT war das. Genau. Ja. So, PSQL. Failed. Wie jetzt? Ich darf mich nicht auf meine eigene Datenbank verbinden oder was? Minus U. Postgres. Ne, was ist, was ist User? Wir machen wieder Zeug, was ich \u00fcberhaupt nicht machen wollte, aber ok. User. U. Da sind wir. Postgres. So. Kommandosignal. Select. Sternchen. From. Was? Ah, wir m\u00fcssen uns erst mal zur Datenbank verbinden. Sekunde, erst mal wieder \u00f6ffnen. Was ist das Minus? Wie gibt man die Datenbank an, wohin man sich verbinden will? DB Name, Minus D. So, und unsere Datenbank hei\u00dft wie? Unsere Datenbank hei\u00dft QChat Database. So, ok. Jetzt aber. Select. Jetzt funktioniert's. Nice. Also, das sind diese, das sind diese Triple Buchstabenpaare, die Postgres f\u00fcr das Wort Hallo speichert in der Datenbank. Also HA, HA, AL und dann HAL und dann LO und so. So, und wenn er das jetzt abspeichert, dann kannst du relativ easy feststellen, ob ein Wort eben beispielsweise einen Buchstaben enth\u00e4lt. Der kann dann einfach in seinem, wenn du wissen willst, enth\u00e4lt ein Wort A, dann guckt er in seinem Index nach und stellt fest, ah ja klar, A f\u00e4ngt mit A an. Das hei\u00dft, er kann dann wahrscheinlich per Binary Search oder wie auch immer, die die das genau machen, ziemlich schnell finden, auch wenn du das, was du suchst, mitten im Wort ist. Und du kannst trotzdem auch Wort teilen, also wenn du wissen willst, enth\u00e4lt das, enth\u00e4lt das irgendwie LO oder LL oder so. Dann kann er hier auch nachgucken. Dementsprechend sind die Queries auch so schnell, weil er f\u00fcr jeden Texteintrag so ein Ding hier erstellt. Also, du hast zwar nur einen Text, aber in der Datenbank speichert er ganz viele verschiedene Abwandlungen bzw. Teile davon. Und deswegen dauert ein Insert l\u00e4nger und deswegen ist die Datenbank auch gr\u00f6\u00dfer, weil er nicht einfach nur Text in irgendeinem Datenbankfeld drin speichert, sondern da noch ein paar Sachen f\u00fcr machen muss und auch mehr Sachen speichern muss. Aber deswegen sind die Queries, wenn du wissen willst, enth\u00e4lt das ein A, enth\u00e4lt das ein H, enth\u00e4lt das HL oder so, viel schneller. So, so weit zur Theorie. Ich habe mir jetzt folgendes \u00fcberlegt, was man machen k\u00f6nnte ist. Also aktuell sehen wir ja, die Queries dauern irgendwie, ich h\u00f6re das mal wieder aus, das ist Donkey Kong Musik, oder? So, die Queries dauern hier so ungef\u00e4hr, wenn man hier mal nach Name sucht. Hier 100, 100, Name gibt es halt oft, 191 Millisekunden. Wenn man sich mal \u00fcberlegt, das ist relativ gut eigentlich schon f\u00fcr eine Datenbank mit 4,5 Millionen Texteintr\u00e4gen und die 1,6 Gigabyte gro\u00df ist. Aber ich glaube, wir k\u00f6nnen das noch viel, viel, viel schneller machen, wenn ich die Datenbankabfrage sinnvoll mache, weil meine Datenbankabfrage ist ziemlich dumm. Ich bin nach dem letzten Stream aufgefallen, weil ich zeige jetzt, ich zeige mal hier, wie das hier im Frontend funktioniert. Wenn man hier in diesem Suchfeld was eingibt, dann ruft er, es ist nat\u00fcrlich gro\u00df hier, guck, das ist mit HTML und CSS und JavaScript zusammen mit 127 Zeilen, der ruft diese Funktion auf bei jedem Tastendruck quasi in diesem Inputfeld hier, Query Server, und, muss ich mal kurz \u00fcberlegen, hier ist das Value vom Inputfeld, genau. So, und er ruft diesen Endpunkt auf in unserem Backend, ja, slash api slash search und dann \u00fcbergibt er das Value, was hier oben im Inputfeld drinne steht. Und das hier ist die Funktion, die auf dem Server aufgerufen wird, api slash search query. Das ist \u00fcbrigens auch richtig dumm gemacht. Ich m\u00fcsste jetzt eigentlich irgendwie so, ich wei\u00df gerade gar nicht, wie da die richtige Syntax f\u00fcr ist. So, und was w\u00fcrde es l\u00e4nger dauern, wenn die DB-Eintr\u00e4ge vom Wort an sich l\u00e4nger w\u00e4ren und spielte das? Naja, das ist ja das Sch\u00f6ne daran. Es dauert l\u00e4nger beim Einf\u00fcgen und es wird gr\u00f6\u00dfer, umso l\u00e4nger das Ganze ist. Aber die Suche, die wird wahrscheinlich auch minimal langsamer, aber im Prinzip bleibt die Suchzeit relativ konstant. Das ist ja gerade das Gute daran. Weil normalerweise, wenn du linear die Datenbank durchsuchen w\u00fcrdest, dann wird es halt mit der L\u00e4nge immer l\u00e4nger. Majorink, danke f\u00fcr den Sub. So, und jetzt gucken wir uns bei meinen Datenbankquery an. Das ist n\u00e4mlich ziemlich dumm, ist mir im Nachhinein eingefallen. Also, was wir abfragen ist folgendes Text-Values ist die Tabelle. Nee, nicht die, doch. Nee, nicht Tabelle. Wie nennt man das? Doch Tabelle, ne? Text-Values. Text-Values ist die Tabelle. In dem Fall bei ASP.io hei\u00dft es DB-Set. So, Text-Values sieht in.NET sieht dann so aus. Das ist eigentlich nur eine Klasse mit einer ID und dem Text zum Durchsuchen. H\u00e4lt sich wirklich in Grenzen. Da ist wenig, wenig, was wir extra gemacht haben, um uns aufs Eigentliche zu konzentrieren. So, und die Datenbankabfrage ist ziemlich doof. Also, in dieser Tabelle mit Text-Values, also das, quasi das einzige, was in der Datenbank steht, machen wir ein Wear. Sagen, okay, wir suchen alle Eintr\u00e4ge, die, und das ist Postgres, das ist Postgres-Magic. Was macht das DB-Set? Du musst in Entity Framework Core, wenn du das verwenden willst, und damit du Queries gegen eine Datenbank machen kannst, muss das in einem DB-Set sein. Das ist halt so von den Framework-Erstellern gedacht. DB-Set stellt dir dann Methoden zur Verf\u00fcgung, worauf du Datenbank-Queries machen kannst. Also, Wear, Order, Buy und so was in der Richtung. Das geht nur, weil es ein DB-Set ist. Also, wir gucken Eintr\u00e4ge, die, und das hier, wie gesagt, ist Postgres-Magic, die unser Query enthalten. Also, in dem Fall w\u00e4re das jetzt Name. Und davor und danach ist ein Prozent. Prozent ist in Postgres Wildcard. Also, sprich, das Query kann irgendwo stehen. Also, Name kann irgendwo hier drinstehen, ist vollkommen egal. Also, wenn ich nach Geo suche, zum Beispiel, funktioniert das halt richtig, weil ich sortiere, aber der w\u00fcrde auch Sachen hier drinnen finden. Aber ich ordne das hier eben, wenn es ihn anf\u00e4ngt. Wir k\u00f6nnen auch HTTP suchen, zum Beispiel. Also, seht ihr, also er findet die Sachen, egal wo sie stehen. Was ist dieses Get und Set? Da? Das? Das ist ein, wie hei\u00dft das in C-Sharp? Automatic Property oder sowas? Wei\u00df gar nicht, wie man das offiziell nennt. Also, das ist Getter und Setter, wie es das in Java auch gibt. Auto-Property, Auto-Property, genau. Das ist Get Set, wie es das in so fast jeder objektorientierten Sprache gibt. Nur mit dem Unterschied, dass der im Hintergrund das eigentliche, die eigentliche Variable anlegt. Die musst du nicht mal selbst machen. Also, das hier ist die Kurzvariante von, wei\u00df gar nicht, ob man das hier, genau. Das ist die Kurzvariante von dem hier. Du hast ein privates, eine private Variable Text und dann hast du Getter und Setter f\u00fcr diesen Text. Fr\u00fcher hat man das \u00fcbrigens nicht so geschrieben. Es geht noch l\u00e4nger. Fr\u00fcher hat man das \u00fcbrigens so geschrieben. Ups. Fr\u00fcher hat man das so geschrieben. Da musst du halt so viel Ged\u00f6ns schreiben, obwohl du eigentlich auch einfach nur das schreiben k\u00f6nntest. Was ist da von der Unterschied zu einfach String Text? Von der Funktion her ist das das gleiche. Du k\u00f6nntest auch sowas hier machen. Unterschied zeige ich dir gleich. Du k\u00f6nntest auch sowas hier machen. Keine Ahnung, sowas. Public Variable k\u00f6nntest du auch machen. Der Unterschied ist, in dem Beispiel eigentlich keiner, der Unterschied ist, dass du in dem Fall noch zus\u00e4tzlich was machen k\u00f6nntest, wenn du willst. Also, du k\u00f6nntest zum Beispiel anstatt, du k\u00f6nntest das Set zum Beispiel weglassen, dann w\u00e4re das Read Only und du k\u00f6nntest hier drinnen zum Beispiel gar keine Variable machen, sondern einfach Return, was Statisches oder so zur\u00fcckgeben. Also, du kannst hier drinnen dann quasi zur Get und Set Zeit noch beliebigen, beliebigen Code laufen lassen. Du k\u00f6nntest hier an der Stelle auch machen, hier get google.de HTTP Request und dann die Antwort Return oder sowas. In der Regel sagt man halt, dass Public Variablen nicht best practice sind und dass man die Variablen privat machen sollte in die Klasse und wenn man darauf zugreift, das Ganze entweder \u00fcber irgendeine Funktion macht, die dann oftmals Get und Set hei\u00dft und deswegen haben die sich bei Microsoft \u00fcberlegt, dass es ein sinnvolles Feature ist, das direkt in die Sprache einzubauen. In Java w\u00fcrdest du, ich wei\u00df \u00fcbrigens nicht, ob sowas, ich sagte das nur vor ein paar Jahren, ich mache wenig, so gut wie gar kein Java. Also, in Java w\u00fcrdest du dann sowas hier machen, zum Beispiel String Get Text und da w\u00fcrdest du dann sagen Return Private Text oder so. Ja, du k\u00f6nntest in einem Set auch checken, ob es Null ist und sowas. Ja, kannst du alles machen. Ja, dann ist es sehr \u00e4hnlich in Java. Zumindest sind Public Variablen in der Regel nicht gerne gesehen. Der einzige Unterschied ist, also wo ich das tats\u00e4chlich okay und sinnig finde, wenn man lokale Variablen Public macht, ist das in irgendwelchen Interop Szenarien. Also, wenn du jetzt irgendeinen Struct hast oder irgendeine Klasse, die du an irgendwelche unsafe FFmpeg Bindings \u00fcbergibst, um dann da irgendwie Video Frames reinzuschreiben oder sowas in der Richtung, da kannst du dem Zeug nicht mit C-Sharp, Getter und Setter kommen. Da musst du Oldschool, Public, Int, Bloop machen. Aber solange man sich im ganz normalen Managed-Land bewegt, w\u00fcrde ich das immer so machen. Hat bestimmt noch mehr Vorteile, die ich gerade nicht draufkomme. Ja, okay, aber wenn wir uns das Datenbank-Query angucken, ich muss was drehen. Chat sagt mir, dass ich trinken muss. Bisschen kompliziert. Die.net-Schreibweise finde ich nicht so ganz gut. Kannste ja eigentlich merken, sobald es Public ist, schreibst du es so. Fertig. Also, das Query, und ich zeige, ich verrate euch jetzt auch klein, warum ich denke, dass das langsam ist. Ob das so ist, m\u00fcssen wir ausprobieren. Also, Datenbank-Query. Text-Values-Saw. Wo das Postgres Magic Wildcard, also das habe ich ja gerade schon erkl\u00e4rt. Er nimmt das Query, in dem Fall hier Name oder HTTP ist es jetzt, sagt, ich suche W\u00f6rter, die davor egal, danach egal, aber irgendwo dazwischen, zwischen egal, HTTP enthalten. Also, das ist quasi Wildcard-Character in Postgres. HTTP, was davor kommt, ist egal, was danach kommt, ist egal. So, das an sich ist relativ schnell. Dadurch, dass wir das eben hier mit dieser, ich habe es jetzt nicht mehr angezeigt, mit dieser Treecrime-Funktion von Postgres machen. Was ich allerdings ziemlich bescheuer das mache, ist das hier. Danach sage ich, order by descending, und zwar in der Richtung, wenn der Text mit dem Query anf\u00e4ngt. Also, ihr seht es ja zum Beispiel, wenn ich jetzt nach hier Hazen, nach Huts suche zum Beispiel, dann sind die Eintr\u00e4ge, die damit anfangen, oben. Und damit das der Fall ist, das ist was, was ich haben will, damit das der Fall ist, sage ich, order by. Und in dem Fall sage ich mir, okay, sortiere mir das, danach die Eintr\u00e4ge nach oben, wo der Text eben dieses Query am Anfang stehen hat. Das ist schon ziemlich doof, weil auf der einen Seite suche ich Wildcard und danach sortiere ich die, da habe ich das letzte Mal auch nicht dr\u00fcber nachgedacht, und danach sortiere ich die nach Dingern, die quasi damit anfangen, da k\u00f6nnte ich das Wear schon komplett anders schreiben. Und, wenn ich zum Beispiel hier jetzt mal nur nach H suche, und ich keine Ahnung, jetzt 2 Millionen, 2 Millionen Eintr\u00e4ge in der Datenbank finde, dann sortiert der mir hier 2 Millionen Eintr\u00e4ge absteigend und von diesen Dingern, die er sortiert hat, nimmt er dann am Ende nur 10. Also das ist jetzt nicht unbedingt gerade das alleroptimalste, was man so machen kann. Und danach gibt er nur den Text zur\u00fcck, anstatt, aber unten ist erstmal wurscht. Also das hier ist das, was es langsam macht. Und wir k\u00f6nnen jetzt mal \u00fcberpr\u00fcfen, ob das wirklich das ist, was es langsam macht, weil ich nehme das einfach mal raus. Und dann gucken wir mal, ob das schneller ist. Also aktuell sind Queries mit einzelnen Buchstaben so 315, 400, irgendwas Millisekunden lang. Und jetzt machen wir mal die Queries ohne dieses Sortieren. Das ist nicht das, was ich haben will als Ergebnis, aber nur mal, dass man die Hausnummer sieht. So, guck mal, und jetzt sind einzelne Queries f\u00fcr ein Buchstabe sind schon nur noch 3 Millisekunden lang. Also das Order By macht es einfach um den Faktor, keine Ahnung, 100, 200, langsamer. Das ist jetzt allerdings nicht das, was ich haben will. Weil, wenn ich hier nach Huts suche, es ist nicht die Eintr\u00e4ge, die mit Huts anfangen oben. Und das ist ja das, was ich eigentlich will. Deswegen habe ich mir \u00fcberlegt, wir k\u00f6nnten das folgenderma\u00dfen machen. Und da bin ich mir nicht sicher, ob das gescheit funktioniert. Also das Order By ist ja auf jeden Fall eine ziemlich dumme Idee gewesen, wie ihr jetzt seht. Aber es ist vielleicht noch mal, damit man da mitkommt. Ich wei\u00df nicht, Chat, hat man das verstanden, warum das langsam ist? Ja, mit Index ist auch so ein Ding. Das k\u00f6nnte man bestimmt sogar, das Order k\u00f6nnte man wahrscheinlich auch noch beschleunigen. Ja, aber es ist langsam, weil er hier 2 Millionen Eintr\u00e4ge findet, die erst einmal alle sortiert und danach nur 10 St\u00fcck davon nimmt. Ja. Ich k\u00f6nnte mir vorstellen, dass der Index hier drauf vielleicht sogar das schneller macht. Aber wir k\u00f6nnen das, glaube ich, deutlich besser machen. Zwar, warum hast du auch mal vor, ein kleines Spiel zu programmieren? Nee, Spieleprogrammierung, obwohl ich quasi t\u00e4glich MMO, Kreiselgrinden, alles m\u00f6gliche mache, ich spiele ja viel. Aber Spieleprogrammierung ist tats\u00e4chlich etwas, was mich gar nicht so sehr interessiert. Ist nicht meins. Top hat jeder so seins, aber Spieleprogrammierung ist auf jeden Fall nicht meins. So, aber jetzt mal zu dieser Datenbankgeschichte. Guck mal. Eigentlich, das ist mir nach dem letzten Stream eingefallen, als ich mir das noch mal angeguckt habe. Das ist richtig bescheuert. Guck mal. Wir suchen uns alle Eintr\u00e4ge raus wo irgendwo drinnen, in dem Fall jetzt HTTP vorkommt, nur um sie danach alle zu sortieren, danach ob der Antrag, ob das damit anf\u00e4ngt. Also eigentlich k\u00f6nnten wir uns das doch komplett sparen und zwei Queries machen. N\u00e4mlich ein Query, was einfach nur checkt, f\u00e4ngt das damit an und findet da 10 Elemente. Und wenn er weniger als 10 Elemente findet, dann macht er noch ein zweites Query, nur, dass er dann ein Wildcard Query macht. Kannst du nicht auch einfach, nachdem du 10 genommen hast, sortieren? Nee, weil dann sortiert er ja nur die 10 und da sind nicht zwangsl\u00e4ufig die, die damit anfangen oben. Das funktioniert nicht. So, wenn ich das hier jetzt ausf\u00fchre, dann sollte zumindest ein Teil davon schonmal stimmen. Hoffe ich mal. Wenn ich jetzt n\u00e4mlich nach Hats suche, dann ist Hats am Anfang und es ist immerhin noch relativ geschwind. Warum brauchen das nur sieben und Hats und Hats brauchen 29? Zumindest man sieht, die eigentlichen Queries jetzt f\u00fcr ein Buchstaben und so sind saum\u00e4\u00dfig schnell und es sind die, die damit anfangen oben. Nat\u00fcrlich kann es jetzt sein, dass wenn man zum Beispiel nach so was wie HTTP sucht, er findet nix. Warum findet er mit HTTP nix? Weil HTTP in der Mitte ist und HTTP eben nicht vorne steht. Deswegen klappt das nicht. So, und ich hab mir gedacht, man k\u00f6nnte doch, man k\u00f6nnte doch, da m\u00fcssen wir ein bisschen basteln. Das ist alles, was ich mir im Vorfeld \u00fcberlegt hab. Man k\u00f6nnte doch jetzt einfach gucken, findet er 10 Eintr\u00e4ge hiermit? Wenn es weniger als 10 sind, dann macht er nochmal das gleiche, nur mit einem Wildcardquery. So, und das mit sortieren schenken wir uns einfach. Das brauch ich ja dann nicht. Ich muss ja nicht sortieren, weil ich ja schon automatisch hiermit alle, die damit anfangen, oben hab. Ich suche ja nur die Dinge, die damit anfangen. Ich muss ja nicht Wildcard suchen, um dann danach zu sortieren, sondern ich kann einfach direkt suchen, nach f\u00e4ngt an. Hast du da nicht in der zweiten Query die Ergebnisse der ersten nochmal drinne? Es kann sein. Das kann zumindest passieren, dann m\u00fcssen wir das irgendwie uniken oder so. Mal gucken. Also, das sieht ja in soweit schon mal ganz sinnvoll aus. Wir machen nochmal, wir f\u00fchren nochmal was zum Testen ein. Nennen wir mal hier Max Results und das sind aktuell 10. Aber, dass ich da mal ein bisschen hoch und runter schalten kann an Ausgaben und gucken, ob das passt. Doppelte muss ich wahrscheinlich filtern. Genau. So, das hier lassen wir erstmal weg. Das muss ich mir unten merken. So, also das ist das erste Query. Okay, und jetzt gucken wir, ob Result Count, oder macht das so Sinn? Wenn das kleiner Max Results ist, und wenn das kleiner ist, dann wei\u00df ich, das hier hat keine 10 Ergebnisse, oder in dem Fall 10 Ergebnisse gebracht. Wenn das keine 10 Ergebnisse gebracht hat, dann muss ich nochmal, dann muss ich nochmal einen Query machen. So. Was sagst du eigentlich zu, zu was? Zu CutefishOS. Was f\u00fcr ein Ding. Hab ich doch nie geh\u00f6rt. Oh, China-Chinesen-Kram. Cutefish. Warum nicht CutechatOS? CutefishOS. Oh, das l\u00e4dt ja schon mal sehr geschwind. Highspeed aus China. Wird bestimmt \u00fcber irgendeine ESP32 Steckdose ausgeliefert oder so. Ach, so sieht China-Milch aus. Make a better DesktopOS. Simplicity, Beauty and Practicality. User Experience. CutefishOS. Noch mehr Standard-Applikationen nachgebaut. Eine G\u00fcte, ey. Muss das denn sein? Cutefish Desktop. Global Menu. Habe ich noch nie ausprobiert, aber ich bin auch immer skeptisch \u00fcber China-Destributionen. Ernsthaft. Den Download gibt es \u00fcber Mega oder Google Drive. Das ist ja sehr sicher und sehr vertrauensw\u00fcrdig. Auch GitHub haben sie auch am Start. Mega Upload. Ja, den brauchen wir auch mal wieder. Den brauchen wir auch mal. Sekunde, Leute. Das muss jetzt mal kurz sein. Mega Upload Song. Kim wird uns schon nicht Copyright striken. Ich glaube, das ist der letzte, der das macht. Yeah. Mega Upload. Der Kerl hat garantiert keine Ahnung, woran er da drinnen gelandet ist, warum er das \u00fcberhaupt sagen sollte. Die haben so keinen Plan gehabt, von was die eigentlich reden. So, genug jetzt. Genug Mega Upload Song. Das muss jetzt einmal wieder sein. Wie viel Geld hat er ihnen in die Hand gedr\u00fcckt? Ich glaube eher, wahrscheinlich war es nicht umsonst, aber ich glaube eher, dass das so diese typische Geschichte war, wie hier auf Twitch auch manchmal Leute in Chat kommen und so nach dem Motto, kannst du mal kurz Max gr\u00fc\u00dfen oder sowas. Die waren, die sind dann dann irgendwelche Agents von denen ran und haben gesagt, ja hier, wir sind ein Radiosender oder was auch immer, k\u00f6nnt ihr mal kurz irgendwie das und das sagen? Und dann haben wir das, da werden die wahrscheinlich nicht nein sagen, ich habe keine Ahnung gehabt, worum es ging. Der hat ihnen bestimmt nicht gesagt, ja ich habe hier einen Hostingservice, wo die Leute quasi eure Musik hochladen k\u00f6nnen und ihr verdient da nichts dran und das ist nice. Bewerbt das mal. Das hat er ihnen bestimmt nicht gesagt. War ganz davon abgesehen. Ich habe damit keine Schmerzen. Man sieht es aktuell an der ganzen Thematik aus Abos, die man holen soll, von Amazon bis Netflix bis Disney plus bis sonst was in der Richtung und jetzt wundern sie sich alle, oh nein, Sicherheitskopieren verbreiten sich wieder mehr als vorher. Nein, wirklich, da h\u00e4tte ja keiner drauf kommen k\u00f6nnen, dass die Leute lieber wieder den Schei\u00df illegal runterladen, als sich 3000 Abos zu kaufen. Das haben wir ja noch nie gehabt und da w\u00e4ren wir nie im Vorfeld drauf gekommen, dass das so wird. Ja und da wundern sie sich jetzt. Das ist so, wie die Musikindustrie sich gewundert hat zu Zeiten von Napster, dass die Leute keinen Bock mehr haben, Audio-CDs zu kaufen und dann auch noch in Werbespots als Mama-wo-ist-Papa im Knastweiler Raub kopiert hat dargestellt zu werden. Und siehe da, es funktioniert. Kaum gibt es da gescheite Abos in der Richtung, schon ist das deutlich weniger geworden und was Filme und sowas angeht, da bewegen sie sich aktuell davon weg. Das hei\u00dft, mich wundert das nicht, dass das zunimmt. Ob das jetzt, ja mal sagen, ob das jetzt ethisch verdrehtbar ist oder wie auch immer, sich die Sachen da illegal runterzuladen, das kann jeder f\u00fcr sich selbst \u00fcberlegen, das ist mir vollkommen egal, das k\u00f6nnt ihr machen oder sein lassen, wie ihr lustig seid. Aber die Tatsache, dass es so sein wird, h\u00e4tte auch die Filmindustrie meilenweit im Voraus sehen k\u00f6nnen. Das ist wirklich jetzt nichts \u00dcberraschendes gewesen. So ist es ja im Endeffekt und seit man zu Zeiten, wo man keine Ahnung mit einem Netflix-Abo oder mit einem Amazon-Abo sich das meiste, was man gucken wollte, angucken konnte, am besten auch noch in Originalsprache und sowas, was ja eben viele wollen. Alles okay? Aber jetzt muss sie wieder anfangen mit, nein, wir nehmen unsere Filme raus und du brauchst lieber 500 Abos. Das wundert mich nicht, dass die Leute wieder mehr anfangen, auf Sicherheitskopien zu setzen. Das ist gut oder schlecht, das hat damit \u00fcberhaupt nichts zu tun. Es ist offensichtlich, dass es so passieren wird und es ist auch so passiert. Bist du nicht Max FPS? Doch, nein, das stimmt, das gibt's gar nicht, ich bin Wubblers. Was Linus meinte, das war bestimmt G-Baded, bei ihm kann ich mir das nicht vorstellen, dass er wirklich mit, wobei, keine Ahnung. Mich juckt das nicht, wenn einer meinen Twitch-Stream mit Ad-Blog guckt oder meine YouTube-Videos mit Ad-Blog guckt es mir vollkommen egal. K\u00f6nnen ruhig alle machen. Ja, meine ich ja, das war klar, dass das so sein wird. Naja, egal, aber das war finde ich offensichtlich, dass das so kommen wird. Ja und Cutefish OS werde ich mir nicht geben, weil ganz ehrlich, ein China-Chinesen-OS, das nur \u00fcber Mega und Google Drive vertrieben wird, ist mir irgendwie ein wenig Suspekt oder Sus, wie man heutzutage sagt. Okay, machen wir mal weiter. Also Datenbank-Krempel. Also die Queries sind jetzt auf jeden Fall schon mal deutlich schneller. Guckt hier, B\u00e4m, sieben Millisekunden. Suchen wir mal nach, was? Ah, Delia, 29 Millisekunden. Also die Queries sind fast as fuck, k\u00f6nnte man sagen. Ja, wir finden nur Sachen, die am Anfang stehen, nicht Sachen, die in der Mitte stehen. Geben wir mal die Request-Time auf der Web aus. Ja, das k\u00f6nnte ich machen, da m\u00fcsste ich mir aber irgendwie einen besseren Return-Wert \u00fcberlegen, anstatt einfach nur den Text. Ach so, jetzt wei\u00df ich auch, warum das so langsam ist. Nee, Stack. Wait a minute. Warum funktioniert denn das \u00fcberhaupt? Warum funktioniert das? Das sollte eigentlich gar nicht funktionieren. \u00c4h. H\u00e4? Moment. Mal kurz, mal kurz die Response angucken hier. So. Response? Hab ich nicht neu gestartet? Ich glaube, ich hab's nicht neu gestartet, ne? Ah, ja, ja, okay. Ja, ich hab's nicht neu gestartet, weil ich filter gar nicht den Text raus, ich geb aktuell die kompletten Objekte zur\u00fcck. Deswegen hab ich mich gewundert, wie er so schlau ist und checkt, dass es den Text davon nehmen soll. Ist er aber nicht. Okay, okay, gut, gut, gut. Jetzt ergibt das Sinn. Ich will aber gar nicht die kompletten Objekte zur\u00fcckgeben. Ich hab mich nur gefragt, warum ist das aktuell so? Das waren wir hier unten rein. Select, Text. So, wunderbar. So, wenn ich jetzt neu starte, dann funktioniert's n\u00e4mlich auch wieder. So. A. Das erste Query ist immer ein bisschen langsam. H. Sechzehn Millisekunden. A. Achtf\u00fcnfzig Millisekunden. L. Vierundvierzig Millisekunden. Das ist relativ schnell. Okay. \u00c4hm. Wichtig ist, dass so diese einzelnen Buchstaben, die haben ja vorteilweise vierundf\u00fcnfzig Millisekunden gedauert. So, und jetzt hab ich mir \u00fcberlegt, wir gucken jetzt einfach, ob es weniger als zehn Sachen gefunden werden. Und wenn weniger als zehn Sachen gefunden werden, dann machen wir das Query einfach nochmal neu. Allerdings jetzt mit dem Wildcard Operator drin. Also kopieren wir das jetzt nochmal. Kann man das, kann man das \u00fcberhaupt, kann ich das jetzt nochmal so machen? Und sollte ich hier count machen oder sollte ich das hier schon? Mal gucken, mal gucken. Mir m\u00fcssen wir ein bisschen ausprobieren. So. Das hei\u00dft, wenn ich jetzt weniger als zehn hab, dann will ich Wildcard suchen. So. Setz doch die Abfrage komplett in die If-Abfrage rein, lass die obere weg, oder dann funktioniert's doch nicht. Was soll denn das bringen? Wenn ich die obere weglasse. Wenn ich nur die mach, dann hab ich die Dinger nicht sortiert in der Reihenfolge, wie ich sie haben will. Wenn ich es so mach, dann hab ich sie in der Reihenfolge sortiert, wie ich es haben will. Du solltest Result auf jeden Fall den oberen Toolist machen. Schreib ich mir mal auf. Kann aber sein, dass es nicht funktioniert. Muss man mal gucken. Also. Moment, Moment. Ich muss mal kurz \u00fcberlegen. Also. Wenn das weniger als zehn hat, wenn das hier weniger als zehn hat, dann machen wir nochmal eine Abfrage mit dem da, jetzt allerdings Wildcard-Abfrage. Take zehn. Ha. Jetzt muss ich die, irgendjemand im Chat hat vorhin geschrieben, jetzt hab ich Ergebnisse doppelt. Das kann passieren. Ich m\u00fcsste die jetzt irgendwie UNIQ machen, so. Irgendwie, wie mach ich denn UNIQ gescheit? Wie stelle ich jetzt sicher, dass Ergebnisse nur einmal drin sind? Set? Wie Set? Du meinst so eine Art Dictionary? Nee, das muss schon, nein, das muss schon in SQL sein. Distinkt. Nee, ich will ja nicht Distinkt, ich will ja, ich will ja, ok, wenn wir das jetzt Mengenlehre technisch machen, will ich ja eine, wie hei\u00dfen das beide Mengen zusammen? \u00c4hm. Nee, warte mal, wie hei\u00dft das? Schnittmenge? Nee, Schnittmenge will ich nicht, das sind beide, die sich \u00fcberschneiden. Ich will beide Mengen zusammen, aber die Elemente, die doppelt sind, will ich nur einmal haben. Ja, so combine sowas in der Richtung, jaja, genau. \u00c4hm. Wie nennt man das denn? Ok, wir m\u00fcssen jetzt, ok, Wikipedia, Mengenlehre. Was denn? Mengenlehre. Union, ja, Kompliment Mengenlehre. Ah, yes, excellent. Ja, das ist genau das, genau das will ich haben, ja, ja, ja. Obvious, obvious. Gachibas Mengenlehre. Union, ok, Union Mengenlehre. Kompliment. Gibt es da nicht ein paar gescheite, aha, ok, eine echte Teilmenge, Schnittmenge, Vereinigung, ich will eine Vereinigungsmenge haben. So sieht es aus, das will ich haben. Eine Vereinigungsmenge haben. Excellent, alles klar, Union sagt der Chat. Das hei\u00dft, in dem Fall, ist das sowas? Oh, guck mal da, Union von Result, von dem urspr\u00fcnglichen. Und das k\u00f6nnten jetzt ja mehr sein als 10, also ich nehme hier von maximal 10, davon maximal 10, das k\u00f6nnten also im schlimmsten Fall 20 sein, also muss ich am Ende nochmal ein Take-Things machen, oder? Ob das so funktioniert? Keine Ahnung. Der Chat sagt schon, das geht nicht. Ja, warum eigentlich? Wir probieren das jetzt mal aus. Erst Union, dann Take. Ne, ne, wenn ich erst Union mache, dann ist es ja wieder lahm as fuck, weil dann mache ich ja die Union im Zweifelsfall wieder auf 2,5 Millionen gefundenen Elemente. Ok, so guck mal, wie schnell wir jetzt sind. Also, HTTP. Aushalt funktioniert. HTTP. Ihh, das ist ja slow. Slow AF. 935. Ihh. Warum ist das so langsam? W\u00e4h? Warum ist das jetzt so langsam? Aber der macht ja Union mit nichts. Ok, Moment, ich lasse das mit Union mal kurz raus. Testen. Ok. Das ist ja immer... Warum ist das so mega langsam? H\u00e4? 946? Alter, das ist ja... Hab ich jetzt irgendwas da nicht richtig durchdacht? Moment, das muss ich noch mal wegmachen. Das ist ja im Prinzip das gleiche, wie wenn ich das hier dahin mache. Warum? Warum ist das jetzt so langsam? Schneller als mit Union. Ja, aber eine Sekunde Query Time. Ich glaube, es geht los. Jetzt ist es fast as fuck. \u00c4hh. Moment, das verstehe ich jetzt nicht. Warum macht das \u00fcberhaupt einen Unterschied? Also, das m\u00fcsste jetzt, das d\u00fcrfte h\u00f6chstens, das d\u00fcrfte h\u00f6chstens 10 Millisekunden sein oder so. Warum ist das in dem If drin so viel langsamer? Das check ich nicht. Das ist doch genau das. Ob der das jetzt vorher macht und nichts... Ah, nee. Das liegt da dran, weil der nichts findet. Moment, Moment, Moment. Ich wei\u00df, woran das liegt. Wartet mal. Wenn der nichts findet, ist es langsam. Kann das sein? Wartet ihr PS? Alter. Fulltext Search bringt hier an der Stelle nichts. Weil das Full in Fulltext Search bezieht sich auf ganze W\u00f6rter. Nee, da dran liegt... Warum ist das denn so langsam jetzt? Warum wird das langsam dadurch? Das verstehe ich nicht. Hab ich hier irgendwas Bl\u00f6dsinniges drinne? Ja, das Count, das Count wird es ja auch nicht sein. Das Count ist Null dann, das kannst du jetzt... Warum ist das so langsam? Ist das wirklich das Count? Ist das das Count, was so langsam ist? Okay, Null wie Count. Das ist das Count, was so... Warum ist denn das Z\u00e4hlen von nichts? Na gut, da muss die komplette Datenbank durchgehen, um festzustellen, dass es wirklich nichts gibt. Aber das es nichts gibt, m\u00fcsste er doch eigentlich relativ schnell rausbekommen. Weil er in seinem Index nachguckt und feststellt, es gibt keine W\u00f6rter oder es gibt nichts, was mit... Vielleicht, weil es mehr als drei Buchstaben sind? Moment, Moment, das muss ich jetzt mal ausprobieren. Beim Count wird es das erste Mal ausgef\u00fchrt, ja. Warte, warte. Das ist auch nicht viel langsamer. Warum ist das so langsam? Macht das erste Result zu einer Liste? Ja, das habe ich mir auch schon \u00fcberlegt, aber die Sache ist halt die, aus irgendwelchen Gr\u00fcnden dauert das komplette Ding auszuf\u00fchren so langsam. Das w\u00fcrde ich jetzt auch als n\u00e4chstes... Aber h\u00e4? Warum ist das Count Query so krass langsam? Wird es \u00fcberhaupt indiziert, wenn man mit einem Triggum im String sucht? Ja, wird es. Aber anders als ein normaler Index. Das muss ich jetzt mal zeigen f\u00fcr alle, die neu dabei sind. Der benutzt, wo habe ich es denn hier? Da. Der benutzt, um das zu indizieren, eine Postgres-Extension, n\u00e4mlich PG Triggum, woran f\u00fcr jedes Wort immer Dreierpaare speichert in einem Index und deswegen relativ schnell W\u00f6rter durchsuchen kann, auch bei Wildcard in der Mitte. Dadurch sind Inserts langsamer und die Datenbank wird insgesamt gr\u00f6\u00dfer, und die Suche ist viel, viel, viel, viel, viel schneller. Ich habe irgendwas bestimmt nicht richtig beachtet. Ich habe irgendwo da was Bl\u00f6des drin. Ein Count davon kann auch nicht so langsam sein. Gut, das ist jetzt die \u00fcbliche Geschichte. So, da findet er was. So, jetzt HTT. Das ist langsam? Okay, das verstehe ich jetzt nicht so genau. Das ist langsam. Alles klar. Ich wei\u00df nicht warum, aber aus irgendwelchen Gr\u00fcnden ist das hier langsam. Warum? Warum ist das langsam? Das liegt nicht wirklich am Count. Das liegt an dem eigentlichen Query. Warum ist das so langsam? HTT. Watt? Watt? H\u00e4? Achso, ja, das ist ja... Moment, Moment, Moment. Das muss ich hier unten reinmachen. Am Ende, hier wird ja das Query erst ausgef\u00fchrt. Aber, okay. Der m\u00fcsste doch relativ schnell feststellen, dass er nichts findet. Ah, das ist. Das ist einfach lahm, wenn er nichts findet. Gut, das verstehe ich jetzt nicht. Sehr spannend. Habe ich jetzt nicht gedacht. Ich h\u00e4tte jetzt eigentlich vermutet, dass er dadurch, dass er das quasi so special indiziert, sehr schnell feststellen kann, wenn es eben keine Worte gibt, die das enthalten. Wir machen gar kein Count. Am Count liegt es nicht. Das Query, wenn er nichts findet, ist lahm as fuck. Und ich wei\u00df nicht so genau warum, wenn ich ehrlich bin. Man w\u00fcrde denken, es ist langsam, weil er alles durchgehen muss, um zu gucken, ob er wirklich nichts findet. Aber dadurch, dass er die W\u00f6rter in so Dreierbuchstabenpaare zerlegt, m\u00fcsste der Instant eigentlich nachgucken k\u00f6nnen, dass es eben nichts gibt, was damit anf\u00e4ngt. Aber das ist Instant halt ziemlich schnell. Ja, das wei\u00df ich jetzt auch nicht. Keine Ahnung. Wie sieht es aus, wenn du das Query meinst, und da bin ich zu bl\u00f6d f\u00fcr. Nat\u00fcrlich ist es daf\u00fcr gemacht, es gibt extra eine Extension daf\u00fcr. So. Hey, welchen Editor IDE nutzt ihr? Komme von Java, NetBeans und bin auf der Suche nach m\u00f6glichen... Ne, guck dir das... Also gerade, wenn du aus dem Java-Umfeld kommst, kennst du wahrscheinlich IntelliJ. Und die Hersteller von IntelliJ, die haben ganz viele IDE's. Zum Beispiel haben die auch eine.NET IDE und eine Go-IDE und auch eine C-IDE und auch eine Python-IDE. Und wenn du dir... Also hier siehst du ja, was die alles am Start haben. Das ist C, das ist ihr komischer Visual Studio Code Konkurrenz. Dann haben die Goland am Start, IntelliJ f\u00fcr Java, PHPStorm, PyCharm, Rider, RubyMine, falls jemand Ruby machen will, WebStorm. So, und wenn du das alles haben willst, weil du sagst ja, du willst Java, du willst Java, Python und C machen, dann kannst du dir zum Beispiel hier... Das f\u00fcr dich interessant w\u00e4re dann hier sowas wie SeaLion und IntelliJ, wobei das ist eh kostenlos. IntelliJ kostet ja nix. Was war das andere, PyCharm? PyCharm kostet auch nix. IntelliJ ist kostenlos und PyCharm ist kostenlos. Das Einzige, was du dir holen m\u00fcsstest ist SeaLion. Zumindest, was ich dir zeigen wollte ist, die haben ein Package f\u00fcr... Die haben ein All Products Pack. Das kostet dich 250 Euro im Jahr und ich denke, wenn man das professionell oder semi-professionell verwendet, kann man das ausgeben, zumal es ab dem zweiten und dritten Jahr nochmal g\u00fcnstiger wird. Hab ich mir auch gekauft. Also das ist auch das, was ich am Start habe bei mir. Also ich verwende von denen auch drei Sachen. Ich verwende Rider, ich, wobei es stimmt gar nicht, ich verwende sogar mehr, aber nicht oft. Also haupts\u00e4chlich verwende ich von den Rider, weil ich.NET mittlerweile quasi fast exklusiv unter Linux programmiere. GoLand verwende ich f\u00fcr Go. SeaLion ab und zu mal f\u00fcr Arduino Platform my own Zeugs, wobei ich da mittlerweile zum gr\u00f6\u00dften an Whistle Studio Code verwende, weil das Setup einfacher ist. Ich habe PyCharm und RubyMine auch installiert, aber verwende ich beides relativ selten. Ja, also diese Dinger sind wirklich gut und gerade wenn du aus dem Java Umfeld kommst, solltest du die glaube ich vom Namen her zumindest schon kennen. NetBeans wusste ich gar nicht, dass es das noch gibt. Mit explaining Query, da m\u00fcsste ich ja wissen, was der ausf\u00fchrt. Da muss ich ja von Hand irgendwelche SQL Queries ausf\u00fchren. Ich bin dazu zu low IQ was Datenbank angeht. Keine Ahnung. Wir k\u00f6nnen uns das Query mal ausgeben lassen und ich mach das von Hand. K\u00f6nnen wir probieren. Das machen wir jetzt, das machen wir jetzt, das Query von Hand. Ruby ist doch super. Ruby ist neben SeaSharp meine absolute Lieblingsprogrammiersprache schlechthin. Leider ist Ruby so ein bisschen in der Bedeutungslosigkeit verschwunden die letzten Jahre \u00fcber. Vor allem weil Rails nicht mehr angesagt ist. Aber Ruby selbst ist das beste was es gibt. Wenn du brauchst das, dann w\u00fcrde ich halt sagen kannst du PyCharm verwenden, IntelliJ verwenden, da hast du Python und Java schon mal abgedeckt und f\u00fcr C gibt es ja jede Menge andere M\u00f6glichkeiten. Du installierst ja Vmware Workstation oder VirtualBox und installierst da drin \u00fcber einen ISO das Lieblungs deiner Wahl. Also das kriegt eigentlich fast jeder der ein bisschen IT technisch interessiert ist hin. Ja das ist richtig gut. Also ich muss sagen die Preispolitik finde ich in Ordnung. Wenn man das und sp\u00e4testens wenn man damit Geld verdient mit dem was man eben da drin macht. Also sag mal wenn du professionelles oder semi professionelles Zeug verwendest, sind 250 Euro im Jahr bzw. im dritten Jahr dann irgendwie keine Ahnung 200, ne 100, 170 Euro oder so. Da kannst du dich eigentlich nicht beschweren. Rails finde ich cool. Also ich mag das Ruby \u00d6kosystem und Rails eigentlich auch, aber das ist mittlerweile ziemlich in der Versenkung verschwunden. Stimmt das habe ich ganz vergessen. Wenn du einen E-Mail Account hast von deiner Uni, dann kannst du glaube ich dort dir eine Studentenlizenz ausstellen lassen. Ja ich habe es aber selbst noch nicht ausprobiert. Bin mal gespannt. Also ich denke nicht das sie schaffen werden w.h. Studio Code Konkurrenz zu machen was Frontend JavaScript Sachen angeht. Aber f\u00fcr andere Dinge wo es zum Beispiel keine offizielle JetBrains IDE gibt, sowas wie Rust oder sowas, da k\u00f6nnte ich mir das schon vorstellen, dass das sich durchsetzen k\u00f6nnte. Naja es kommt drauf an was man machen will. Also wenn du JavaScript Frontend Zeug machen willst, w\u00fcrde ich eindeutig Visual Studio Code nehmen. Die Ausmal an Plugins und dass der Krempel eben selbst in JavaScript programmiert ist, ist schon ganz gut. F\u00fcr Frontend Sachen w\u00fcrde ich immer Visual Studio Code nehmen. Manche schw\u00f6ren auf WebStorm, ok, aber ich mag Visual Studio Code. Aber ganz ehrlich,.NET Entwicklung ist ein ziemlicher Painschamp in Visual Studio Code. Du kannst das machen, du kriegst auch die ganzen Plugins dabei, dass du Autovervollst\u00e4ndigung hast und sonst was, aber sch\u00f6n ist es nicht. Es ist irgendwie haklich. Ich mag das nicht. Deswegen habe ich hier auch zwei Sachen auf. Ich habe hier eine IDE f\u00fcr.NET auf und ich habe hier Visual Studio Code f\u00fcr den Frontend Chat auf. Und die richtig hardcore Leute, die machen es \u00fcber NeoWim, genau. Den macht dann hier, wie ist denn der Manke als Einsteiger hier, den macht dann Akira zum ersten Mal auf und wei\u00df nicht mal, wie er rauskommt. Wenn ihr Leute NeoWim empfiehlt. Jaja, Fleet ist quasi der JetBrains IDE Core extrahiert und dann so gemacht, dass du es mit Plugins erweitern kannst. Was ja jetzt schon geht, ich habe ja jetzt schon einige Plugins, aber m\u00fcssen wir mal gucken, was da rauskommt. So, aber gehen wir mal zur\u00fcck zu unserem Datenbank Query. Ich habe keine Ahnung, warum das Lamas Fuck ist. Wir m\u00fcssen uns jetzt mal irgendwie auch. Also, okay, wir gucken wir gucken uns jetzt mal an, was der f\u00fcr einen Query macht und dann machen wir das Query von Hand in der Datenbank. Jetzt wird es jetzt wird es waren, so HTTP. Ja, das Query macht er da. Select Text from Limit. Okay, auf auf. Bash. P SQL. B\u00e4m. Gibt es da nicht, Leute, gibt es nicht, von wo wir gerade bei dieser JetBrains Geschichte sind, hatten die nicht auch ein Tool, wo man Datenbank Queries irgendwie sch\u00f6ner drin machen kann? Hatten die nicht sowas? Habe ich letztens bei denen auf der Webseite gesehen, habe ich noch nie verwendet. Datacrit. Wollen wir das mal ausprobieren? Ach nee, ich habe ja mein Account hier gar nicht eingeloggt. Ich mache das jetzt mal kurz mal gucken. Ist das kostenlos? Braucht man dann? Braucht man dann ein Account f\u00fcr? Ja, ich wei\u00df nur mal so f\u00fcr die Leute, die immer sagen, ich h\u00e4tte, ich h\u00e4tte, ich w\u00fcrde das ja nur erz\u00e4hlen und in Wirklichkeit irgendwelche gecrackten Version zu verwenden. Ich habe das hier ganz offiziell aktiviert f\u00fcr mich. Und ich kann euch das zeigen. Das kommt ja jedes Mal. So nach dem Wort Jaja aktiviert. Lulul. About. Hier. License to MaxK. Ihr k\u00f6nnt jetzt nat\u00fcrlich nicht verifizieren, dass ich das bin, aber die. Das ist relativ unwahrscheinlich, dass ich den gecrackten Licens Key irgendwo habe, der dann auch auf MaxK und so Nachnamen, Nachnamen liegt. Warum habe ich IntelliJ Community Edition installiert? Warum? Das muss ich mal kurz aufmachen und gucken. Warum? Ich mache kein Java Kram? Oh, du nie warst drin gemacht. Okay. Alles klar. Bam. Data. Datalore, Dataspell, Datacrip. Jetzt wollen sie es einmal wissen hier. Warum ist die outdated? Was ist outdated? Das da. Burscht. Wir haben noch nie gro\u00dfartig Go gemacht im Stream. So, wenn ich mich, wenn ich mich registrieren muss, habe ich, habe ich gelitten. Ich habe das alles nicht hier. Activate. Okay. Easy. Da hat es mein Account gemerkt. Alles klar. Das immer. Also mein Fake Account f\u00fcr letzten Stream, den ich gemacht habe. Wie funktioniert der Kram jetzt? Habe ich noch nie verwendet. New Projekt. Lul. Was macht das jetzt? Database Explorer. Okay, das ist glaube ich abfuck f\u00fcr jemand, der von der man keine Ahnung hat. Datasource. Postgres. Postgres. Wow. Localhost. 5 4 3 2. Das ist richtig. User Postgres. Passwort gibt es nicht. Apply. Not found. Download. Ich habe keinen Plassen Schimmer, was ich hier \u00fcberhaupt mache. Native Keychain is not available. Ja, soll mir recht sein. Das ist eh leeres Passwort. Und hat das jetzt funktioniert? Die Musik passt sehr gut. Und jetzt hat es jetzt funktioniert. Select. Sternchen. Ich muss doch erst noch, ich muss doch erst noch die Datenbank ausw\u00e4hlen, oder? Wo mache ich das? Ah hier. Cute. Cute Chat Database. Ok. Select. Sternchen. From. Cute Chat Database. Ne. Ne. Ne. Ne. Ne. Ne. Ah, ich bin nicht connected. Ja, wie connecte ich mich denn? Ne, doch ich bin connected. Ah, hier Konsole. Jetzt. Select. Sternchen. From. Ah. Wow. Wie hei\u00dft denn der Krempel? Ich habe doch das Query hier. Select. Text values. Text values. Text. Ne. Kein Schimmer? Die Musik ist richtig spooky, passt gerade gut dazu, ja. \u00c4hm, das erscheint mir unn\u00f6tig komplex anstatt einfach. Ich meine meine Datenbank hei\u00dft offensichtlich Text values. Oder sehe ich das falsch? Text values. Hei\u00dft nicht so. Ja, woher wei\u00df ich denn, wie der Krempel da drinne hei\u00dft \u00fcberhaupt? Du musst das Schema selecten. Ich habe davon \u00fcberhaupt keinen Platz zum Schema. Wo sehe ich denn, was es da \u00fcberhaupt gibt drinne? Nach From kommt die Tabelle. Ja, ich wei\u00df ja, die Tabelle m\u00fcsste ja eigentlich, sag ich doch, Text values hei\u00dfen. Macht es aber nicht. Ok, das ist mir eindeutig zu, das ist mir eindeutig zu high IQ dieses Ding hier. Schemas, no Schemas selected. Ok. All Schemas. Und nu? Ne. Ich hab keine Ahnung, was ich hier mache. Ich hab wirklich keinen, absolut keinen, blassen Schimmer. Tables. Also jetzt mal ernsthaft. Laut. EF Core hei\u00dft meine Table Text values. Warum gibt es das hier nicht? Das ist irgendwas internes, oder? Text values, da ist es doch. Da ist es doch. Ok, ok. Verstehe. Public. New Query Konsole. Jetzt aber. Ok. Next Sternchen, From Text. Ah, ja, ja, ja. Ok, jetzt kommen wir der Sache n\u00e4her. So, wir f\u00fchren das jetzt aus. So, Control, Enter. Exzellent, da haben wir es. Da ist unser, ist unser Kram. Ok, nice. Ok, jetzt kann man das machen, was ich vorher, was ich, was ich eigentlich vorher machen wollte. Also select. Das ist das, das ist das, was dort net ausf\u00fchrt hier. Select, das ist ST. So, like, so like muss ich ja das eintragen, was ich, was ich Query habe, HTTP. Limit sind 10. Stimmt doch, oder? Warum, warum macht der eigentlich ST? Ach so, dass er das where danach machen kann. So, und jetzt f\u00fchren wir das mal aus. Ah, nein, es ist like, HTTP. Sternchen, genau. Ja, das ist einfach, das ist einfach lahm. Wo sieht man denn die Zeit, was es jetzt gebraucht hat? Ach hier, 931 Millisekunden. Limit 1. Warum \u00e4ndert das Limit was an der Zeit? Das Limit soll doch \u00fcberhaupt keinen Einfluss auf die Zeit haben in dem Fall, er findet ja nix. Explain, ja, explain, lass uns jetzt explainen. I've had time. Und jetzt? Was, was, was willst du mir sagen? Ah, jetzt. Ah, I've had informations. Excellent, excellent. Bitmap heap scan on text values. Check condition. Bitmap index scan. Mhm, mhm, alles klar. Ja. Und was sagt mir das jetzt? Was sagt mir das jetzt genau? Jetzt wei\u00dft du Bescheid, ja, aber richtig. Jetzt habe ich voll den Plan, warum es so lange dauert. Analyse, Analyse. Also jetzt ist es obvious, jetzt ist ein klarer Fall. Wie ging das? Postgres Analyse. Nimm mal das Pattern nach dem Raus nach Like. Nein, das ist ja genau das, was ich machen will. Ohne das findet er nix. Da findet er genauso wenig. Also wir k\u00f6nnen das, wir k\u00f6nnen das tats\u00e4chlich mal raus machen. Er findet genauso wenig. Aber wir k\u00f6nnen uns die Geschwindigkeit mal angucken. Die Geschwindigkeit macht keinen gro\u00dfen. Sag mal. Die Datenbank ist aber schon richtig erstellt, oder? Kann man sich irgendwie die Infos davon anzeigen lassen, wie die erstellt wurde? Nee, ich habe keinen Index im klassischen Sinne. Ich habe einen Tree Cram Index, der f\u00fcr Textsuche da ist. Und die Textsuche ist ja auch saum\u00e4\u00dfig schnell, wenn er was findet. Aber warum ist das so langsam, wenn er nix findet? So, wie ging das jetzt? Explain Analyse. Nee, Collect Statistics. Explain Statement. Was sagt mir denn diese Cost, Cost dahinter denn jetzt? Explain. Wir lernen Datenbankzeug, das ist wirklich nix, wovon ich keine Ahnung habe. Cost, Cost. Also was mich enorm stutzig macht ist, warum \u00e4ndert das Limit \u00fcberhaupt was an der Zeit? Weil, wenn er nix findet, muss er sowohl bei Limit 1 als auch bei Limit 10 die ganze Datenbank durchsuchen. Fehlt ja nicht ein Character. Doch. F\u00fcr die abschlie\u00dfende Sache schon. Aber ich will ja explizit die Limit-HTTP anfangen und danach irgendwas enthalten. Die gibt es nicht, aber das ist ja ein Fall, der passieren kann, dass es das nicht gibt. So wird das denn noch gr\u00f6\u00dfer, wenn ich sage Limit 100? Nee. Warum ist das so extrem? Weil dadurch, dass wir diesen Tree Cram Index haben, sollte er das ziemlich schnell erkennen k\u00f6nnen, dass man eben, also was mich \u00e4u\u00dferst verwirrt ist, warum Limit 1 einfach doppelt so schnell ist. Obwohl es beides in die komplette Datenbank durchk\u00e4mmt werden muss. Ja, gut Leute, ich hab keine Ahnung. Leute, ich lasse die Datenbank nochmal neu erstellen. Irgendwie so. Wei\u00df nicht. Vielleicht. Keine Ahnung. So und woran erkenne ich jetzt, was da lang dauert? Cost 0. Cost 195. Was VirtualBox denkt an Bildschirme 600 mal 400? Kann schon sein. Der Installer wird das wahrscheinlich denken. Kannst du es nochmal mit Prozent-HTTP ausf\u00fchren? Ja, das ist viel schneller, aber das ist auch klar, warum das viel schneller ist. Weil, oh nee, ich hab mich detached. Wie attache ich mich denn jetzt wieder? Macht das automatisch? Ah, das macht der automatisch. Das ist viel schneller. Guck, das dauert 26 Millisekunden. Aber ist auch klar, weil der findet halt 10 St\u00fcck und h\u00f6rt dann auf. Achso, ja, sowohl bei VirtualBox als auch bei, genau, als auch bei Vmware brauchst du Guest-Vmware-Tools, also Guest-Edition-Tools, dass er das erkennt, dass dein Desktop-Bildschirm und sowas. So, aber ich suche hier explizit. So, wir suchen jetzt mal nach was anderem, was es nicht gibt. Ok, Leute, jetzt blick ich nicht durch. Wenn ich was suche... Achso, das ist, weil ich keinen Prozent dahinter hab. Das ist, weil ich keinen Prozent dahinter hab. H\u00e4? Warum ist... Warum ist HTTP... Ist das irgendwas mit HTTP... Ist das jetzt einfach nur Pech, dass ich HTTP suche? Escapt der da irgendwas, weil er denkt, ich mach irgendwelche... Ist das irgendein Security-Feature, dass wenn ich HTTP, dass einer besonders escapen muss oder so? Dr\u00fcck mal rechtsklick auf das Select-Statement. Und jetzt? Explain Plan. Explain Analyze. Ok. Ah ja, jetzt ist alles klar. Nat\u00fcrlich, das wei\u00df ich Bescheid. Ja, 4,5 Billionen Dinger, das passt schon. So, \u00e4hm, wie sieht's mit HTTPS aus? Auch langsam. Haben wir sonst noch irgendwas in der Mitte? In.NET haben wir manchmal am Ende stehen, ne? Aber auch viel zu langsam, f\u00fcr dass er es nicht findet. Nein, eine Sekunde ist kacke. Wir hatten es ja vorher schon. Vorher war das im Durchschnitt 15, war das irgendwie 300 Millisekunden oder so das Langsamste? Moment. Vorher war das 300 Millisekunden. Was hatten wir noch mal vorher? Moment, Moment, Moment, Moment. Aber ich muss noch kurz einen Comment machen, sonst check ich, blick ich nicht mehr durch. \u00c4hm, sind wir hier richtig? Get in it. Get add. Oh ne, jetzt hab ich binaries gealtert. A minus M hack W. Wunderbares Comment. Exzellent. So, \u00e4hm, und jetzt machen wir das mal r\u00fcckg\u00e4ngig. Moment. Kann ich mal weiter r\u00fcckg\u00e4ngig machen? \u00c4h, local history. History. What? History? Ist doch local history. So, wo, also wir machen das einfach mal r\u00fcckg\u00e4ngig, was wir heute gemacht haben. So, hier haben wir angefangen. 13 Uhr, gib ihm. Revert. Bam. Yep. So. Ach so, da hab ich Wildcard-Dings komplett gemacht. Dann findet er, dann findet er ja was. Okay, dann mach ich das, dann mach ich das hier mal raus. So. Run. Und jetzt Http. Das ist immer noch langsam. Ich fass das nicht. Okay, keine Ahnung. Aber, okay, wir suchen mal was anderes. Hier, keine Ahnung, blub. So, blub. Tia.net. Tia wollte schon immer mal suchen. Ja, der findet welche. Punkt.net. Punkt.net. Wunderbar. Nee. Punkt. Name. Ach, jetzt funktioniert sie ja mit meiner Suche nicht mehr. Ja, so. Danach will ich suchen unbedingt. Das ist das, was ich schon immer mal suchen wollte. Das sind 1,5 Millisekunden. Ist das wirklich, ist das vielleicht echt ein Problem, weil es Http ist? War dumme Frage. K\u00f6nnte das wirklich daran liegen, dass es Http ist? Dass die Zeichenfolge Http ist? Ich mein, nee, das wird's nicht sein. Hat keine Resultate. Ja, wie Http nicht. Aber genau, das Problem ist Http gibt es, na doch, Tia.net gibt es auch ein paar Mal, aber Http gibt es halt eben 4,5 Millionen Mal. Okay. Keine Ahnung. Bei Http findet er eine Menge Treffer und muss viele Wildcards verarbeiten. Naja. Das stimmt, das wird's. Ja, das ist es. Das ist wahrscheinlich echt so. Http ist in 4,5 Millionen Rows drinne. Und er muss gucken, ob es dort am Anfang ist. Aber gerade das sollte eigentlich durch den Index schnell sein. Daf\u00fcr gibt's den ja. Dass der eben erkennt, dass es Http nicht am Anfang gibt. Ich lass die Datenbank jetzt noch mal neu erstellen. Wobei das dauert wieder ewig. Dauert wieder 5 Minuten oder 10 Minuten. Ohne Limit. Ich kann das Limit mal komplett weglassen, ja. Sollte ja genauso schnell sein von der Idee her. Ja. Http hat nix. Also von der Idee her sollte es insofern schnell sein. Weil, Docker stellt es hier. Machen wir noch mal hier das, was wir das letzte Mal gemacht haben. Also, der speichert ja f\u00fcr jedes, f\u00fcr jeden Text, also f\u00fcr das, was man hier sieht. Also f\u00fcr jedes dieser Dinger. Nehmen wir mal zum Buster. Nehmen wir hier das da. Aus den humberto.net. Das \u00fcbrigens Fake-Daten, das Zeug gibt's alles nicht. Wobei, soll ich mich trauen mal, who is humberto.net? Das sind zwar Fake-Daten, aber Moment, ist das wirklich registriert? Das ist anscheinend wirklich registriert. Huberto.net, alles klar. Meine Fake-Daten sind anscheinend echte Daten, sehr gut. Also, das macht die Datenbank beim Speichern dieses Textes da raus. Eben damit die Suche schneller geht. Der zerlegt Austin, Http, humberto.net in solche Dreierpaare. Und das speichert er sich dann wahrscheinlich in einem sortierten Index, dass er Binary Research machen kann oder was auch immer er dann macht. Keine Ahnung. Und deswegen sollte er ziemlich schnell feststellen, aha, der Typ sucht nach Http. Ah, ja, nat\u00fcrlich, das ist ja eigentlich ganz logisch, dass das langsam ist. Ja, ja, das funktioniert. Funktioniert, tut das. Die anderen Queries sind sonst richtig langsam. Aber guck mal, von der Idee her, der guckt da rein in seinen Index. Wahrscheinlich wei\u00df der nicht so ohne weiteres, ob das am Anfang oder in der Mitte ist. Der wei\u00df nur, dass irgendwie in dem Index Htt drin steht. Und dann muss der wahrscheinlich gucken, genau, und das findet er 4,5 Millionen Mal. Und dann muss der wahrscheinlich gucken, ist es am Anfang. Der muss wahrscheinlich wirklich jeden Eintrag durchgehen und gucken, ist es denn am Anfang. Da ist wahrscheinlich nicht direkt die, selbst wenn die Position direkt gespeichert ist, so quasi, mal angenommen, da w\u00fcrde Index off dahinter gespeichert sein, was ja nicht geht, weil das k\u00f6nnte ja mehrfach drinne, was auch immer. Aber selbst wenn da direkt die Position dahinter steht, der muss ja jeden Eintrag durchgehen und gucken, ob der nicht am Anfang steht. Das ist jetzt absolut der Worst Case eigentlich. Ich denke in dem Fall, also wie soll ich sagen, in den normalen Daten, die ich da habe, w\u00e4re das ja wahrscheinlich \u00fcberhaupt nicht der Fall. Kann man den Index manuell zu Http oder Https \u00e4ndern? H\u00e4, wie? Aber das ist jetzt einfach bei Design verkackt. Meine Testdaten sind halt so ein bisschen doof, weil da Http \u00fcberall drinne ist und ich suche halt zuf\u00e4lligerweise direkt nach Http. Dann ist es ein ziemlich doofes Beispiel, dass ich bereits Http rausgepickt habe. Das wird wahrscheinlich in der Art und Weise in echt nie der Fall sein. Mal davon abgesehen, das wird auf jeden Fall definitiv nicht der Fall sein, weil ich dort irgendwelche Prometheus Exporte reinpumpen w\u00fcrde und die haben zwar sicherlich ab und zu mal Http in der Domain, aber die meisten Label Value Pairs sind sonst was, blo\u00df nicht Domains, die mit Http anfangen. Nice. Okay, ja, das ergibt aber Sinn, dass es so langsam ist. Das ergibt tats\u00e4chlich Sinn. Ja. Das ergibt tats\u00e4chlich Sinn. Dann f\u00e4llt mir nichts ein, um es schneller zu machen zu dem, was ich das letzte Mal gebaut habe. MySQL? H\u00e4? Ich bezweifle, dass das MySQL schneller kann. Ja. Und weiter? Also ich kenne die Hilfeseite dazu. Mit Fulltext Search sollte es schneller sein. Da habe ich so meine Zweifel, weil das sind ja keine W\u00f6rter. Fulltext Search ist bei W\u00f6rtern schnell, aber bei Substrings von W\u00f6rtern Elastic Search, ja, gut, so was k\u00f6nntest du da mit Sicherheit drauf schie\u00dfen, ja. Also die Postgres, die Postgres Fulltext Search kann zum Beispiel keine Substrings von W\u00f6rtern, eben weil es keine W\u00f6rter sind. Und wenn MySQL das kann, dann ist es wahrscheinlich, weil MySQL Fulltext Search plus das, was Postgres hier in dem Fall mit diesen Drupeldingern W\u00f6rtern macht, auch macht, blo\u00df automatisch. Die k\u00f6nnen ja alle nicht zaubern. Das Full in Fulltext Search bezieht sich auf ganze W\u00f6rter. Das ist kein ganzes Wort. Weil nat\u00fcrlich k\u00f6nnte man als Trainer irgendwie jetzt sagen, nicht Leerzeichen, sondern gleich, aber das wei\u00dft du ja vorher nicht. Fulltext Search ist in der Regel nichts f\u00fcr Substring, vor allem nicht f\u00fcr Substring mit Wildcard davor. Daf\u00fcr ist Fulltext Search kacke. Weil Fulltext Search in der Regel so funktioniert, dass du deinen Text, ganz simpel gesagt, du nimmst deinen Text, splittest den in W\u00f6rter und dann machst du einen Index draus. Also du machst eine Liste draus, sagen wir mal alphabetisch sortiert, dass du in deine Liste dann per Binary Search relativ schnell finden kannst. Wo ist das? Dann hast du das Wort gefunden und zu dem Wort hast du dann dir noch zus\u00e4tzlich gespeichert, in welchem Dokument das vorkommt, an welcher Position. Das ist so ganz grob kurz gesagt wie Fulltext Search funktioniert. Und das Full in Fulltext bezieht sich auf komplette W\u00f6rter. Und was Fulltext normalerweise \u00fcberhaupt nicht gut kann, sind Wildcards am Anfang, weil er dann die Liste auch komplett durchscannen muss. Ja, da muss ich mir mal was \u00fcberlegen. Ich hab gedacht, das k\u00f6nnte man jetzt besonders schlau machen, das so zu beschleunigen, aber der absolute Worst Case, wenn HTTP wirklich in jedem einen Tag vorkommt und es nicht matcht. Wobei k\u00f6nnte man das nicht einfach umdrehen? Nee, ich brauch ja beides, ich will es ja nicht. Ja, da f\u00e4llt mir nichts ein zu. Dann f\u00e4llt mir nichts ein zu, wie man das schneller machen kann, wobei es ja so schon saum\u00e4\u00dfig schnell ist. Der braucht ja nur bei der Diomalessuche nur 30-40 Millisekunden. Ich will es ja nicht, ich will es ja finden, ich will es ja finden. Wann kommt Battlefield Bad Company 3? Das musst du mal EA fragen, was soll ich das wissen? Wahrscheinlich gar nicht, weil DICE vor einer Weile gesagt hat, sie haben verlernt, sie haben das ein bisschen anders ausgedr\u00fcckt, aber sinngem\u00e4\u00df haben sie gesagt, sie haben verlernt oder sie wissen nicht mehr, was an Battlefield Bad Company den Leuten gefallen hat. Mach doch einen Pr\u00e4fix vor dem Wort. Ja und dann? Also das wei\u00df ja derjenige, der danach sucht, nicht. Der hat ja keine Ahnung. Irgendeiner tippt im Webinterface HTTP ein, erwartet, dass er Antworten bekommt f\u00fcr HTTP. Das wei\u00df man nicht, ob alle HTTP haben. Es ist in diesem Fall mit diesen Daten so, aber das wei\u00dft du ja nicht. Es wird in der Praxis auch nie relevant sein, gehe ich mal von aus, weil das, was ich davor hatte, reinzupumpen, hat das definitiv nicht. Aber ich \u00fcberlege gerade, ob es irgendwie eine schlaure Variante als das gibt. Weil in dem Fall, hier macht es halt das Order bei langsam. F\u00e4llt mir jetzt gerade nichts ein. Bin ich gerade zu low IQ f\u00fcr? Reicht man eigentlich an Datenbank-Grempel jetzt schon mal? Sollen im Webinterface alle 4,5 Millionen Treffer rauskommen? Nein, nein. Im Webinterface sollen 10 Ergebnisse rauskommen, aber der Trick ist ja, jedes Zeitproblem ist gel\u00f6st, insofern, dass ich jetzt nachvollziehen kann, warum es langsam ist. Also ich will blo\u00df 10 Ergebnisse haben. Aber ich m\u00f6chte, die die mit dem Query anfangen, die will ich oben haben. Wenn ich das hier rausnehme und die random sortiert lasse, dann ist es mega schnell, aber ich habe nicht die, die mit dem Query anfangen oben. Weil ich h\u00e4tte gerne, wenn einer zum Beispiel einen gibt, dann h\u00e4tte ich gerne, dass er zuerst 10 St\u00fcck nimmt, falls es die gibt, die Plup am Anfang haben und wenn es die halt nicht gibt, sondern sagen wir nur 3 St\u00fcck mit Plup am Anfang, dann eben noch 7 St\u00fcck mit Wildcard auff\u00fcllt. Das funktioniert auch, aber dabei sind wir drauf gesto\u00dfen, wenn man nicht nach Plup sucht, sondern nach HTTP, dann funktioniert es insofern nicht richtig, es funktioniert schon, aber es funktioniert langsam. Weil er eben HTTP potenziell findet in jedem Wort und dann 4,5 Millionenfach checken muss, ist HTTP denn am Anfang. Das ist eigentlich relativ logisch, dass das langsam ist. Ja, da muss ich mir irgendwas \u00fcberlegen. Vielleicht f\u00e4llt mir noch was ein oder ich lasse es einfach so. Nein, Timeout ist doch doof, ich will auch ein Ergebnis haben. Zur Not gegebenenfalls zwei Queries machen mit Wearfilter f\u00fcr das Startwith, dann kann der Pr\u00e4fix, \u00e4h, was? Nein, nein, nein, das ist ja das, was nicht funktioniert, guck mal. Das ist ja das, was nicht funktioniert. Das ist ja das, was ich schon gemacht habe. Guck mal, wenn du das hier machst, wenn du hier checken willst, ist es am Anfang. Das ist ja das, was du meinst, ne? Zwei Queries. Du machst dieses Query mit, \u00e4h, ist am Anfang und dann machst du dieses Query mit, ist irgendwo in der Mitte. So, aber das hier ist langsam. Das ist langsam erst fuck, wenn du das ausf\u00fchrst. Das braucht knapp ne Sekunde. Und warum? Weil er nachguckt, aha, das Wort startet mit HTT. In dem Fall zerlegt er auch HTTP, weder in HTT unter anderem und dann muss er bei jedem dieser 4,5 Millionen gefundenen Eintr\u00e4ge gucken, ist das HTT am Anfang. Ich kanns, im Prinzip kann ichs auch so lassen. Im Prinzip kann ichs so lassen, wie ich die ganze Zeit schon gemacht hab, weil es ist immer noch schneller als im Worst Case mein anderes Ding. Da f\u00e4llt man manchmal in Fallen rein, wo man gar nicht gedacht hat, dass es die gibt. Ja, das hat nen Index. Es hat zwar keinen klassischen Index, aber es hat so ne Art Index. Interessant. Tja, ne, da f\u00e4llt mir jetzt wirklich nichts Gescheites zu ein, au\u00dfer das einfach so zu lassen, wie wir es das letzte Mal schon gemacht haben. Ein klassischer Index sollte den Pr\u00e4fix-Check beschleunigen k\u00f6nnen. Geht in Postgres ein Substring-Index? Ja, das haben wir doch. Da gehts doch darum. Genau das haben wir. Wir haben f\u00fcr jeden Texteintrag, so speichert Postgres so ne Kombination aus allem m\u00f6glichen, dass du Substring Search mark hast. Aber vielleicht muss man noch nen klassischen Index drauf machen, um zu gucken, ob das Starts, das k\u00f6nnten wir tats\u00e4chlich mal machen, ja. Das machen wir jetzt. Das machen wir jetzt. Wie bring ich dem dann bei, nen normalen Index zu machen noch zus\u00e4tzlich? Dann m\u00fcssen wir die Datenbank nochmal neu erstellen lassen wahrscheinlich. Also das ist der Index f\u00fcr Substring-Suche. Wie sag ich dem, dass er noch nen normalen Index drauf machen soll? Nochmal Has-Index? Ne, oder? Wei\u00df ich gar nicht, wie mach ich das? Kein Schimmer. So hab ich das f\u00fcr diese Substring-Suche auf jeden Fall rausbekommen das letzte Mal. Muss man, muss man das nicht doppelt machen? Einfach nochmal so Sachen, Has-Index oder so? Okay. EF Core Postgres-Index. Wie geht das? Zeig her. Has-Index. Ja gut, auf der ID ist schon mal klar. Im normalen Fall, also was mich eigentlich interessiert ist Wildcard-Wort-Wildcard. Das ist Darkreader-Neighbor-Youblog. Aber halt eben dann die, die mit was anfangen als erstes. Naja meine Idee war jetzt ja urspr\u00fcnglich, anstatt diese Abfrage hier mit dem Order-Buy zu machen, wir machen einfach zwei Queries. Einmal eins ohne Wildcard und wenn das schon zehn St\u00fcck zur\u00fcckgibt, dann ist alles gut. Ansonsten f\u00fchren wir einfach das Query nochmal so aus und nehmen halt noch sieben zus\u00e4tzliche zum Beispiel dazu davon dann. Das Problem ist nur, dass dieses Query, wenn man HTTP eingibt, halt \u00fcbelst langsam ist. Und dieses ist \u00fcbrigens nicht langsam bei HTTP, weil er eben was findet. Und ich gehe mal davon aus, wenn ich was suche, was er gar nicht findet, was gar nicht in diesem Index drinne ist, dann ist es auch schnell, weil dann kann er direkt sagen, hier so nach dem Motto was wie blub, hier gibt es kein blub, kann nicht sein. S-Index. Wie kann ich dem denn jetzt sagen, dass ich anstatt hier in diesem Index noch einen normalen Index machen will? So jetzt? Funktioniert das so? Keine Ahnung. Ich bin Stocher da voll im Dunkeln. S-Index. Ah nee, der hat das schon. Nee, das passt schon. Der hat schon den Index erstellt daf\u00fcr. Guckt mal, das ist schon richtig. Der macht hier einen wie auch immer gerne GIN-Index und dann macht er noch diese andere Geschichte obendrauf. Nee, dann habe ich wirklich keine Ahnung mehr. Wisst ihr was? Dann lassen wir das einfach so. Das denke ich auch, ja. Ja, ich glaube, das hat er. Ich glaube, das hat er hiermit schon. Zumindest wenn man den, wenn man das hier dieser, dieser Doku-Seite von denen glaubt. Oder muss ich nochmal, oder muss ich das einfach zweimal machen? Einmal so und einmal so? Kannst du irgendwie aussuchen, welchen Index da beim aktuellen Query benutzen willst? Bestimmt irgendwie? So, wir machen das, ich gucke mal, ob man so die Datenbank erstellen kann, ob das in irgendeiner Art und Weise schneller ist. Wisst ihr was? Wir lassen dieses ganze Krempel, wir lassen den mal weg. Wir lassen den mal weg und erstellen den neu und gucken, ob mit einem einfachen Index, der startet mit schneller ist. Probieren wir das mal aus. Ja, 900 Millisekunden ist, mir geht es nicht wirklich darum, dass das jetzt besser benutzbar wird oder so. Generell, wenn es darum geht, m\u00fcsste ich das ja gar nicht machen. Hab ich das so gemacht, dass es funktioniert? Hoffe mal. Run. Mir geht es einfach, dass ich was lerne drum. Nicht, dass da irgendwie was so Sinnvolles bei rauskommt. So, jetzt wird eine Runde geinsertet in den Index bzw. nicht in die Datenbank. Das dauert jetzt 1-2 Minuten. Oder habe ich den Output abgeschaltet? \u00dcbrigens, random Seed 1337, ganz wichtig, immer bei eurem Randomizer Seed 1337 verwenden. Ihr solltet prinzipiell nicht den Seed irgendwo reinschreiben, dann ist es n\u00e4mlich ziemlich easy, eure Secrets zu erraten, das will man nicht. Du brauchst ziemlich sicher, wie gesagt, Guest Tools, dass es funktioniert. Du brauchst, wie hei\u00dft das mal, Virtual Box? Virtual Box Guest Tools, wie nennt man sich der Kram? Du hast zuerst ins CD, dann musst du starten oder zumindest die Kiste neu starten und dann musst du in der VM keine Aufl\u00f6sung einstellen. Sobald die Guest Tools, Guest Editions, genau, sobald die Guest Tools funktionieren, macht er automatisch das Ding auf die richtige Aufl\u00f6sung. Guck, jetzt ist es auf der richtigen Aufl\u00f6sung, er macht es automatisch, siehste? Ok, Datenbank Insert dauert ein bisschen. So, jetzt haben wir eine Datenbank gleich mit keinem Substring-Dingsged\u00f6ns-Durchsuch-Index, aber eine mit einem stinknormalen Index auf das Textfeld. Und dann gucken wir mal, ob das schneller ist. Open VM Tools? Nee, das bringt ja nichts, er hat Virtual Box. Und wenn er Virtual Box hat, bringen ihm Open VM Tools nichts. Ich w\u00fcrde eh, ganz ehrlich, ich w\u00fcrde nicht Virtual Box, ich w\u00fcrde Forever Workstation nehmen oder? Ach nee, Forever Player gibt's ja nicht mehr, oder? Forever Player war fr\u00fcher die kostenlose Variante, ich glaube, Forever Player kostet doch jetzt auch was. Was Open VM Tools geht auch mit Virtual Box? Echt? Das ist nice. Das ist mir neu, weil ich immer VM mehr verwende. Gehen die auch, das ist ja der Chat, die ganzen Prime-Subs haben sich gelohnt, der Chat ist mittlerweile absolut hier Next-Level-IQ-Werte. Der wei\u00df Bescheid. Das hei\u00dft, Chat, wenn ihr auch Next-Level-IQ-Werte habt, m\u00fcsst ihr mir auch einen Prime-Sub dalassen, weil das gilt f\u00fcr den kompletten Chat. Ist quasi geshared jetzt zwischen 230 Leuten, aber nur, wenn ihr gerade zuguckt. Sonst geht das nicht. So, Datenbank, inserte mal, please. Etwas schneller. Ich glaube, ich sollte mal mein Logging ausschalten, weil mein Arbeitsspeicher ist zu 94% voll und wahrscheinlich liegt es daran, weil mein Terminal den ganzen Text drinstehen hat. Weil ich bin ziemlich bl\u00f6de gewesen. Mein Terminal hat unlimited scrollback-Buffer. Er ist fertig, Poggers. So, diesen Kr\u00e4mpel hier gleich mal wieder auskommentieren, dass er nicht jedes Mal neu die Datenbank erstellt. Passt mal auf, ich schlie\u00dfe jetzt mein Terminal, mal gucken wir, wie viel Arbeitsspeicher er gleich freigibt. Oh, Kinga, Kinga, Kinga. Wie habe ich es genannt? Search-Champ. Okay, dann gehen wir mal hier in dieses Data-Ding wieder und machen noch mal das Gleiche. Aha, aha, guck mal, es ist schneller, es ist schneller. Jetzt ist es blo\u00df 317 Millisekunden, es ist schneller. Der best case, ja den best case, ich wei\u00df nicht, ob ich den gescheit testen kann \u00fcberhaupt. Hiermit. Ich meine, das m\u00fcsste langsam, langsam sein jetzt mit dem nicht vorhandenen Textsearch-Index. Achso, der macht automatisch einen Limit. Dann ist es auch schneller. Aber ja, ich limite 10. Ja, das ist nat\u00fcrlich hier auch schnell, weil \u00fcberall HTTP drin ist. Also, suchen wir mal irgendwie emerald.org oder so. Ja, das d\u00fcrfte jetzt, das d\u00fcrfte jetzt nicht so schnell sein. Ja, Mist, ja, der hat ja halt nur, das ist ja doof, der hat halt nur 5 Domains oder so, die den Test-Ding an eintr\u00e4gt. 5000 Limit, bam. Ja, jetzt braucht er schon ein bisschen l\u00e4nger. Ja. Also, normale Suche mit Wildcard dauert jetzt halt deutlich l\u00e4nger. Es dauert jetzt 500 Millisekunden, um alles zu finden. Und, \u00e4h, was machen wir denn mal? Was hab ich? Eleanor. Und das ist halt 300 noch was. Warum limitiert der immer auf 500? So, macht er gar nicht. All, bam. 1500, gib ihm. Er ist tats\u00e4chlich, wenn er am Anfang ist, ist er doch relativ, relativ geschwind. Kann er nicht Jeanette-m\u00e4\u00dfig mal bitte hier auf All bleiben? Okay, also ich denke schon, dass der normale Index tats\u00e4chlich was bringt. Und jetzt das andere mit einkommentieren, ja. Ja, ja, probieren wir das mal aus. Jetzt m\u00fcsste man nur noch fragen k\u00f6nnen, ob man in dem Query irgendwie sagen kann, was er f\u00fcr einen Index verwenden soll. Wahrscheinlich meckert er jetzt rum, dass das nicht funktioniert, dass das schon ein Index existiert oder sowas. Wahrscheinlich meckert er, dass es schon ein Index gibt. Probieren wir mal aus. \u00c4hm, ich werde mal kurz die Output umleiten, dass mein Terminal nicht wieder abkackt. Ach so, jetzt sehe ich die Fehlermeldung ja gar nicht. Okay, das ist ziemlich bl\u00f6d. Zack. Ne, das funktioniert. Der meckert nicht rum dabei. Und wann hei\u00dft, und wann wei\u00df, dass er fertig ist? Gute Frage. Gar nicht. Doch. Wartet mal. Ich stelle das Locklevel hoch. Ich stelle das Locklevel. Wo ist das denn hier nochmal? Locklevel? Das ist immer so versteckt bei dem Campbell. Wo waren das nochmal? App-Settings? Hier, die vollen Locklevel. Warning. Moment, Development ist es doch. Stimmt doch gar nicht. Info-Development-Warning. Ich mache einfach das Locklevel hoch, dann sehen wir es nicht mehr. Er erstellt nur einen GIN-Index, ist das so? Das m\u00fcssen wir uns nochmal angucken. Run. Also, was macht er hier? Zeigt mal her. Die Datenbank Pfeiferts hier unter uns. Also, Create-Index. Tats\u00e4chlich, er macht nur einen GIN-Index. Dann wei\u00df ich auch nicht. Muss ich die Sachen dann doppelt in die Datenbank schreiben oder was? Boah, keine Ahnung. Was passiert denn? Was passiert denn? Wie sieht das aus, wenn man das wegl\u00e4sst? Was macht er dann? Ja, dann sagt er Create-Index. So, das kommt jetzt auf die Reihenfolge an? Dann kann es ja nicht funktionieren, wenn es doppelt drin ist. Okay. Das juckt ihn \u00fcberhaupt nicht. Es z\u00e4hlt immerhin nur, das muss man bestimmt, man muss irgendwie doppelt HESS-Index machen oder irgendwie sowas. Okay, das befragen wir den jetzt mal. Multiple-Index-On-Same-Column, richtig? Ja, ne? Ah, Stack Overflow, alles gut. Multi-Column, ne? Combine Multiple-Indexes. Ich will einfach nur zwei verschiedene Indextypen haben. Stimmt, das ist... Ich wollte auch gar nicht nach Postgres suchen. Ich wollte eigentlich auch nach Ding suchen, nach NPGSQL wollte ich eigentlich suchen, nach dem EF-Core-Ding, nach dem Postgres-Adapter. Oh, das sind jetzt schon die absolut High-IQ-Datenbank-Dingern. Das ist mir jetzt zu hoch, da mach ich nicht weiter. Ne, keine Ahnung, hab ich kein Bock mehr. Ich lass es jetzt einfach so. Ich lass es jetzt einfach so. Es funktioniert ja und es ist auch relativ schnell. Das ist halt ein dummer Worst-Case mit Hard-TDP, aber schei\u00df drauf. Oh, ne, reicht sp\u00e4tst. Keine High-IQ-L\u00f6sung heute, aber gut, wir haben was gelernt. Und ich hab jetzt auch mal Datacrypt verwendet. Kann ich gleich wieder zumachen, werd ich nie mehr verwenden. Reicht genug. Genug. So Leute, ich muss jetzt was trinken, sonst treuere Hals. Und jetzt geh ich off. Jetzt geh ich off und kreiselgrinde noch ein bisschen. Und jetzt noch eine andere Frage an die ganzen Frontend-Experten unter euch. Was ist denn euer Lieblings-Date-Time-Picker-Library? Auf mobile ist das einfach. Auf mobile nimmt man den Native vom Browser. Auf dem Desktop ist es ein bisschen doof, weil der Native vom Browser halt null in das Design der Seite passt. Light-Pi-Date-Time-Picker. Kengi, danke f\u00fcr den Sub. Ach Leute, ich muss mal kurz nachgucken nach den Subscriptions hier. Die H\u00e4lfte wieder \u00fcbersehen. Ferdy Fuchs hat subscribt. Hab ich auch nicht gesehen. Dankesch\u00f6n f\u00fcr den Sub. Hi IQ-Subscription hier Leute. Ich war zu besch\u00e4ftigt mit meinem Datenbank-Krempel. Majorink auch. Vollkorn-Milchbrot hatte ich schon. Okay, Light-Picker. Warum ist das so schr\u00e4g? Da tut dir der Nacken weh. Ah hier. Okay, der sieht sehr viewig aus mit dem Gr\u00fcn, wobei man das wahrscheinlich semen kann, wie man lustig ist. Und Date? Kann er auch time picken? Kann er auch time picken? Ja. Oh, transparent. Wie kann man den time picken lassen? Wo ist hier time? Ich sehe hier nichts f\u00fcr time. Oder ist das nur date? Der Darkreader macht es kaputt. Ja, das wird es wahrscheinlich sein. Single date, placeholder, separator, time. Ein Beispiel mit time? Hier ist time drin, aber ich kann keine time eintragen. Hier ist doch time. Hier kann ich keine time ausw\u00e4hlen. Egal, ich geh jetzt auf Leute, wir sehen uns. Bis zum n\u00e4chsten Mal. See you.", "segments": [{"id": 1, "start": 30.0, "end": 41.76, "text": "So, kurz was trinken, m\u00fcsst ihr mich dran erinnern, ich muss regelm\u00e4\u00dfig ertrinken"}, {"id": 2, "start": 41.76, "end": 47.16, "text": "im Livestream, sonst kriege ich so einen trockenen Hals und das merkt man sp\u00e4testens so nach"}, {"id": 3, "start": 47.16, "end": 50.84, "text": "1-1,5 Stunden merke ich das und dann ist aber eigentlich zu sp\u00e4t."}, {"id": 4, "start": 50.84, "end": 59.72, "text": "Deswegen jetzt ordentlich hydraten."}, {"id": 5, "start": 59.72, "end": 71.48, "text": "Ich glaube Twitch hat noch gar nicht gecheckt, dass der Stream \u00fcberhaupt online ist."}, {"id": 6, "start": 71.48, "end": 78.0, "text": "Oh doch, jetzt ist es in 7 Leuten da, ganz davon abgesehen, so viele werden wir wahrscheinlich"}, {"id": 7, "start": 78.0, "end": 85.2, "text": "heute auch nicht werden, weil es ist 12.30 montags, oh das ist ein nice Seamote, wo kommt"}, {"id": 8, "start": 85.2, "end": 86.2, "text": "das her?"}, {"id": 9, "start": 86.2, "end": 88.84, "text": "Okay, sagt mir gar nichts, aber das finde ich gut."}, {"id": 10, "start": 88.84, "end": 106.24, "text": "Also das war ein bisschen rare people, extra rare, also nicht gegrillt, sondern selbe,"}, {"id": 11, "start": 106.24, "end": 110.16, "text": "okay, ich glaube Twitch hat doch noch nicht gecheckt, dass der Stream online ist."}, {"id": 12, "start": 110.16, "end": 113.08, "text": "Snacks, wie hast du es gefunden, zuf\u00e4llig oder \u00fcber Notification?"}, {"id": 13, "start": 113.08, "end": 122.28, "text": "Weil das dauert immer unterschiedlich lang, mal dauert das 15 Sekunden, dann hat Twitch"}, {"id": 14, "start": 122.28, "end": 126.44, "text": "kapiert, mal dauert es aber auch 5 Minuten und es hat auch teilweise schon mal an die"}, {"id": 15, "start": 126.44, "end": 127.44, "text": "10 Minuten gedauert."}, {"id": 16, "start": 127.44, "end": 134.36, "text": "Ich sehe das immer daran, wenn erstens wenn Notifications rausgehen und wenn auf einen"}, {"id": 17, "start": 134.36, "end": 139.48, "text": "Schwung irgendwie 40-50 Leute kommen, dann wei\u00df ich immer, ah, jetzt hat es Discord,"}, {"id": 18, "start": 139.48, "end": 142.44, "text": "Discord hat es jetzt auch mitgekriegt, Stripes kriegt das immer \u00fcber Discord mit."}, {"id": 19, "start": 142.44, "end": 160.12, "text": "Hast du Urlaub oder ist das ein Pausestream, weder, noch, jetzt \u00fcberleg mal scharf was"}, {"id": 20, "start": 160.12, "end": 165.4, "text": "sonst noch sein k\u00f6nnte, der Chat spoilert schon wieder, ich gehe montags nicht arbeiten."}, {"id": 21, "start": 165.4, "end": 177.96, "text": "Ich kriege aber auch kein Geld f\u00fcr montags dann logischerweise."}, {"id": 22, "start": 177.96, "end": 187.2, "text": "Hey Max fand es echt cool, das ist ein ITler YouTuber, ja ich bin ja so halbe halbe, gibt"}, {"id": 23, "start": 187.2, "end": 194.8, "text": "er in der N\u00e4he wohnt, ja siehste, Pog wo wohnst du?"}, {"id": 24, "start": 194.8, "end": 200.48, "text": "Redux ist auch am Start, jetzt hat Twitch auf jeden Fall mitgekriegt, Moin aus der Pause,"}, {"id": 25, "start": 200.48, "end": 225.64, "text": "nice, Pausechamp, also quasi richtig echter Pausechamp, aus dem Gym, 12.35 montags, wer"}, {"id": 26, "start": 225.64, "end": 235.44, "text": "ist denn da im Findestudio, Hanau, ja da Hanau kenne ich auch, es ist lustig, dass ich als"}, {"id": 27, "start": 235.44, "end": 240.04, "text": "Benchmark f\u00fcr die Discord Notifications genutzt werde, ich wei\u00df, dass du das immer \u00fcber"}, {"id": 28, "start": 240.04, "end": 245.6, "text": "Discord kriegst, du bist Schausw\u00e4ngler, ja das kannst du bestimmt unter Weiterbildung"}, {"id": 29, "start": 245.6, "end": 270.48, "text": "buchen oder so, heute steppen wir mal wieder etwas unser Frontend Game ab und machen bisschen"}, {"id": 30, "start": 270.48, "end": 274.88, "text": "Datenbank Kram, ich zeige euch gleich wo wir stehen geblieben sind, ist nichts gro\u00dfartiges,"}, {"id": 31, "start": 274.88, "end": 280.68, "text": "also versteht man wahrscheinlich in zwei Minuten, haben nicht viel gemacht, wir haben bis jetzt"}, {"id": 32, "start": 280.68, "end": 285.92, "text": "mal ein bisschen Postgres rumgebastelt und ein Autocomplete Feld im Browser gebaut,"}, {"id": 33, "start": 285.92, "end": 290.6, "text": "ich zeig das gleich nochmal, aber ich hab eine, finde ich, m\u00fcssen wir mal gucken ob"}, {"id": 34, "start": 290.6, "end": 297.0, "text": "das klappt, aber ich habe da eine Idee gehabt, wie wir das noch viel viel schneller machen"}, {"id": 35, "start": 297.0, "end": 306.08, "text": "k\u00f6nnen, aktuell haben wir Autocomplete Zeiten so von 70 Millisekunden oder sowas und ich"}, {"id": 36, "start": 306.08, "end": 308.96, "text": "hoffe wir kriegen es damit deutlich schneller, nicht dass man das br\u00e4uchte, es ist einfach"}, {"id": 37, "start": 308.96, "end": 324.64, "text": "nur dass es funktioniert, dass das geht, agiler Twitch Coder, ja genau, der Taunuskreis war"}, {"id": 38, "start": 324.64, "end": 328.88, "text": "dann alter Ausbildungsbetrieb, ok ich wusste gar nicht, dass die Physis oder sowas ausbinden,"}, {"id": 39, "start": 328.88, "end": 337.64, "text": "ja ich hab gern Mario Kart Playlist an, das ist nicht zu aufdringlich und nicht zu einschl\u00e4fernd,"}, {"id": 40, "start": 337.64, "end": 343.8, "text": "also das ist optimale Mischung, finde ich f\u00fcr sowas, \u00fcbrigens wusstet ihr, das muss ich"}, {"id": 41, "start": 343.8, "end": 350.68, "text": "jetzt mal revealen an der Stelle, ich hab vor zwei drei Tagen erfahren, dass mein Ur-Opa,"}, {"id": 42, "start": 350.68, "end": 358.28, "text": "nicht mein Opa, mein Ur-Opa, kurz gucken ob die Lautst\u00e4rke von der Musik passt, ja ist"}, {"id": 43, "start": 358.28, "end": 369.76, "text": "ok, ich hab erfahren, dass mein Ur-Opa aus S\u00fcdafrika gekommen ist und ich bin mir jetzt"}, {"id": 44, "start": 369.76, "end": 379.72, "text": "nicht sicher, ich bin ja eigentlich quasi ein Achtel S\u00fcdafrikaner jetzt, Zulul, genau"}, {"id": 45, "start": 379.72, "end": 396.88, "text": "Zulul, verbotene Emotes hier, das muss vor dem zweiten Weltkrieg gewesen sein, das muss"}, {"id": 46, "start": 396.88, "end": 401.12, "text": "vor dem zweiten Weltkrieg gewesen sein, weil mein Opa war im zweiten Weltkrieg irgendwie"}, {"id": 47, "start": 401.12, "end": 414.44, "text": "so, keine Ahnung, 20 oder so, das muss also vor dem zweiten Weltkrieg gewesen sein, wo"}, {"id": 48, "start": 414.44, "end": 425.72, "text": "er in S\u00fcdafrika war, mein Ur-Opa, Max hast du schon von dem Politiker in Afrika geh\u00f6rt,"}, {"id": 49, "start": 425.72, "end": 436.52, "text": "da gibt es n\u00f6, aber da gibt es einige, keine Ahnung, war relativ beliebt dahin auszuwandern"}, {"id": 50, "start": 436.52, "end": 447.88, "text": "und ein paar Jahre sp\u00e4ter wieder zur\u00fcck, ernsthaft, vielleicht etwas ungl\u00fccklicher"}, {"id": 51, "start": 447.88, "end": 458.84, "text": "Name auch f\u00fcr einen s\u00fcdafrikanischen Politiker, auf der anderen Seite wahrscheinlich hat"}, {"id": 52, "start": 458.84, "end": 463.56, "text": "er sich nicht ausgesucht, das ist aber doch schon ganz sch\u00f6n Payne's Champ, wenn man"}, {"id": 53, "start": 463.56, "end": 471.6, "text": "so hei\u00dft, was der ist Pr\u00e4sident von irgendeinem Land, sehr ernsthaft, ja, wo es nicht alles"}, {"id": 54, "start": 471.6, "end": 491.6, "text": "gibt, wie gesagt, ich bin ja auch zu einem Achtel Afrikaner, der war wegen Corona in den"}, {"id": 55, "start": 491.6, "end": 499.48, "text": "Medien, aha, wahrscheinlich w\u00fcsste sonst gar keiner, dass es den gibt, so, aber widmen"}, {"id": 56, "start": 499.48, "end": 508.08, "text": "wir uns mal wieder unserem Upsteppen des Frontend Games, Max wie powerst du deine ESP so, wenn"}, {"id": 57, "start": 508.08, "end": 511.84, "text": "ich jetzt sage mit Strom, wird dir das wahrscheinlich nichts helfen, du willst wahrscheinlich wissen,"}, {"id": 58, "start": 511.84, "end": 529.68, "text": "ob USB oder Batterie oder sowas in der Richtung, die meisten per USB, nahezu alle per USB, ich"}, {"id": 59, "start": 529.68, "end": 537.36, "text": "habe mir irgendwo mal so ein PoE Kit gekauft, da kann man das dann quasi, also da steckst"}, {"id": 60, "start": 537.36, "end": 541.92, "text": "du Kabel rein, Netzwerkkabel rein, machst PoE am Router oder am Switch an und der zwackt"}, {"id": 61, "start": 541.92, "end": 546.52, "text": "das ab und konvertiert dir das dann quasi in so einem Stecker in drinnen schon irgendwie"}, {"id": 62, "start": 546.52, "end": 556.36, "text": "in 5 Volt oder so, habe ich nie verwendet, \u00e4hm, ansonsten USB, ich habe eigentlich nur"}, {"id": 63, "start": 556.36, "end": 564.44, "text": "USB, USB f\u00fcr den ESP, Vollkornmilch pro Dange f\u00fcr den Zap, hat es wieder nicht gebimmelt"}, {"id": 64, "start": 564.44, "end": 571.68, "text": "heute, das ist sehr unzuverl\u00e4ssig gerade Steamlabs, oder ich habe es nicht geh\u00f6rt, ich habe n\u00e4mlich"}, {"id": 65, "start": 571.68, "end": 576.08, "text": "gerade MassivePepoFat gemacht, Leute, es kann sein, dass ich ein bisschen hart gebimmelt,"}, {"id": 66, "start": 576.08, "end": 600.88, "text": "aber es kann sein, dass ich ein bisschen m\u00fcde bin, weil Verdauung gerade einsetzt."}, {"id": 67, "start": 600.88, "end": 613.76, "text": "Mein Stromverbrauch m\u00fcsste relativ hoch sein, geht eigentlich, nee, warum, ich mein, weder"}, {"id": 68, "start": 613.76, "end": 622.2, "text": "Raspberry Piles noch ESPs brauchen nur sonderlich viel, dass es gro\u00dfartig auff\u00e4llt, ich wei\u00df"}, {"id": 69, "start": 622.2, "end": 630.92, "text": "aus dem Kopf nicht, keine Ahnung, also Gaspreise sind krass teuer geworden, wie sieht es mit"}, {"id": 70, "start": 630.92, "end": 637.72, "text": "PoE am Freitag aus, nee habe ich gerade Zeit f\u00fcr, kein PoE, mit dem ganzen Server, ja,"}, {"id": 71, "start": 637.72, "end": 645.88, "text": "das ist ein Inter-Low-Power-Server, der Eidl 8 Watt braucht, also das wird sich jetzt nicht"}, {"id": 72, "start": 645.88, "end": 650.72, "text": "nennenswert auf den Stromverbrauch auswirken, klar, sag mal so, \u00e4hm, die Festplatten, wenn"}, {"id": 73, "start": 650.72, "end": 655.8, "text": "die laufen, brauchen sie ein bisschen mehr, der braucht 8 Watt Eidl, Stripestesser, der"}, {"id": 74, "start": 655.8, "end": 661.48, "text": "braucht nix, inklusive SSD, allerdings ohne Platten, mit den Platten braucht er dann nat\u00fcrlich"}, {"id": 75, "start": 661.48, "end": 667.04, "text": "mehr, aber die Platten sind ja zum gr\u00f6\u00dften Teil im Sleep, da braucht mein 10G-Switch"}, {"id": 76, "start": 667.04, "end": 672.2, "text": "mehr, also ich glaube, das Netzwerkequipment braucht eine ganze Ecke mehr, ich mein, das"}, {"id": 77, "start": 672.2, "end": 680.92, "text": "ist der MikroTik-Router, der 10G-Switch, dann die 3 Access Points, die am Router \u00fcber PoE"}, {"id": 78, "start": 680.92, "end": 688.92, "text": "dranh\u00e4ngen, und dann halt, dann noch die Fritzbox und dieses Ding von Unity Media, also da kommen"}, {"id": 79, "start": 688.92, "end": 693.4, "text": "wahrscheinlich, da kommen wahrscheinlich 50, 50 Watt Netzwerkger\u00e4te zusammen, und"}, {"id": 80, "start": 693.4, "end": 701.56, "text": "der Server f\u00e4llt da kaum ins Gewicht, ja, in dem Geh\u00e4use ist tats\u00e4chlich 80% Luft"}, {"id": 81, "start": 701.56, "end": 708.32, "text": "drin, in dem Geh\u00e4use ist ja noch, das Netzteil liegt ja auch mit drin noch und alles, so,"}, {"id": 82, "start": 708.32, "end": 716.04, "text": "ich mach mal kurz meine VM an, und dann erz\u00e4hl ich euch, genug hier Lederhosen, Winkpippe"}, {"id": 83, "start": 716.04, "end": 721.36, "text": "gehabt, dann zeig ich euch mal, wo wir stehen geblieben sind, kann sein, ich glaube, ich"}, {"id": 84, "start": 721.36, "end": 726.84, "text": "muss erstmal VM kurz update und neu starten, habe ich so im, irgendwie das Gef\u00fchl, dass"}, {"id": 85, "start": 726.84, "end": 739.56, "text": "ich das machen muss, heute steppen wir mal wieder unser Frontend Game ab, genau, der"}, {"id": 86, "start": 739.56, "end": 745.32, "text": "Desktop, ja, der ist, finde ich schon, der ist sehr strukturiert, der mag jetzt vielleicht"}, {"id": 87, "start": 745.32, "end": 755.0, "text": "dem ein oder anderen nicht ordentlich erscheinen, aber der hat schon sein System, dein ganzes"}, {"id": 88, "start": 755.0, "end": 764.72, "text": "System, das ist aber ordentlich, ah, hier ist ja noch unser Datenbankged\u00f6ns, vorletztes"}, {"id": 89, "start": 764.72, "end": 775.16, "text": "Mal, alles klar, so, ich mach mal kurz, alles klar, eh, mal kurz, mal kurz, Update, ja,"}, {"id": 90, "start": 775.16, "end": 784.92, "text": "dachte ich mir, oh, Polkit, ja, das sollte man updaten, wieder mal Zeit, so, Polkit,"}, {"id": 91, "start": 784.92, "end": 790.12, "text": "Ghostman, wird auch wieder geupdatet, du hast alle Weihnachtseamots rausgeworfen, ich hab's"}, {"id": 92, "start": 790.12, "end": 796.68, "text": "gesehen, richtig Massive, Pog, weil ich h\u00e4tte das nie gemacht, ihr kennt mich, wenn ich"}, {"id": 93, "start": 796.68, "end": 800.04, "text": "sowas mache, dann dauert das da ein halbes Jahr und dann ist eigentlich schon wieder"}, {"id": 94, "start": 800.04, "end": 813.88, "text": "Weihnachten, du hast auch schon einmal, ja, das macht keiner gerne, wof\u00fcr n\u00fctzt du deinen"}, {"id": 95, "start": 813.88, "end": 819.4, "text": "Surfer aktiv oder mehr oder weniger just for fun, Ackerman Blog, also, wenn du es genau"}, {"id": 96, "start": 819.4, "end": 825.68, "text": "wissen willst, was ich laufen hab daheim, dann gehst du auf meinen YouTube Channel und"}, {"id": 97, "start": 825.68, "end": 835.92, "text": "guckst dir das vor, vor vorletzte Video an, das, das Home-Surfer-Enjoyer-Video und da"}, {"id": 98, "start": 835.92, "end": 856.6, "text": "zeige ich dir 26, 25 Minuten lang, was ich wie wo hab. So, ich starte mal, ich starte"}, {"id": 99, "start": 856.6, "end": 866.64, "text": "mal kurz das Ding hier neu, jaja, hat er jetzt geupdatet? Okay, hoffe ich mal, ich starte"}, {"id": 100, "start": 866.64, "end": 880.92, "text": "mal kurz neu. N\u00e4chstes Jahr Weihnachten, dieses Jahr Weihnachten, ja, dann wird's da wieder"}, {"id": 101, "start": 880.92, "end": 885.0, "text": "eklig, weil das kann das Zebaro machen, das Zebaro ist die ganze Zeit schon immer afk"}, {"id": 102, "start": 885.0, "end": 890.08, "text": "und macht komische Dinger, was, was seh ich da im Hintergrund, was ist das? Das ist das"}, {"id": 103, "start": 890.08, "end": 893.68, "text": "Bing Image of the Day, also nicht, dass ihr denkt, ich w\u00fcsste, was auf meinem Desktop"}, {"id": 104, "start": 893.68, "end": 903.68, "text": "Hintergrund ist, was seh ich da? Leute mit Hut, die, ich hab keine Ahnung, irgendwelche"}, {"id": 105, "start": 903.68, "end": 915.48, "text": "Stimmen, Segel, nee, was ist das? Saffran, ja wirklich, ernsthaft, Lumen-Air, ist das"}, {"id": 106, "start": 915.48, "end": 925.64, "text": "so? Ich h\u00e4tte jetzt eher gedacht, die stecken, die stecken das da rein. Alter Chat, Chat"}, {"id": 107, "start": 925.64, "end": 929.52, "text": "ist wieder richtig high IQ, Chat wei\u00df sofort, was es ist, die ganzen Prime-Subs haben sich"}, {"id": 108, "start": 929.52, "end": 940.58, "text": "gelohnt, zahlt sich aus. Lohnt sich Ryder? Ja finde ich schon. Du kannst dir, wenn du"}, {"id": 109, "start": 940.58, "end": 946.08, "text": "viel von JetBrains verwendest, du kannst ein bisschen Kohle sparen, wenn du das Desktop"}, {"id": 110, "start": 946.08, "end": 957.98, "text": "Package kaufst. Also wenn du mehr als eins verwendest. Und kauf dir die Privatversion,"}, {"id": 111, "start": 957.98, "end": 963.76, "text": "wenn du es privat verwendest. Also hier f\u00fcr pers\u00f6nliche Nutzung, nicht hier Organisation."}, {"id": 112, "start": 963.76, "end": 969.24, "text": "F\u00fcr pers\u00f6nliche Nutzung kriegst du das All Products Pack f\u00fcr 250 Euro im Jahr und ab"}, {"id": 113, "start": 969.24, "end": 976.72, "text": "dem zweiten Jahr, also bis auf 60% geht das runter im dritten Jahr. Ich finde das lohnt"}, {"id": 114, "start": 976.72, "end": 983.0, "text": "sich, wenn man mehr als eins von denen verwendet. Weil allein schon, ich glaube JetBrains Ryder"}, {"id": 115, "start": 983.0, "end": 988.8, "text": "alleine kostet auch irgendwie 150 Euro oder sowas. Zeig mal, wo ist es denn? Entwicklertools."}, {"id": 116, "start": 988.8, "end": 997.28, "text": "Muss mal kurz gucken, ich wei\u00df es selbst gar nicht, was es kostet. Kaufen. Ja, nee, hier,"}, {"id": 117, "start": 997.28, "end": 1005.16, "text": "fast. Guckt, also wenn man mehr als eins verwendet, lohnt sich eigentlich das All Products Pack"}, {"id": 118, "start": 1005.16, "end": 1016.6, "text": "schon wieder. Ich finde es nicht schlecht und ganz ehrlich, wenn man damit professionell"}, {"id": 119, "start": 1016.6, "end": 1024.24, "text": "oder semi professionell arbeitet, so viel sind 250 Euro bzw. wird dann immer weniger, geht"}, {"id": 120, "start": 1024.24, "end": 1029.32, "text": "dann irgendwie runter bis auf 190 oder irgendwie was. Ist das im Jahr jetzt auch nicht, wenn"}, {"id": 121, "start": 1029.32, "end": 1039.12, "text": "man das t\u00e4glich oder \u00f6fters verwendet? Ist Ryder nicht dasselbe wie das Code? Nee. Ryder"}, {"id": 122, "start": 1039.12, "end": 1043.92, "text": "ist eher das wie Wishl Studio. Ryder ist quasi die Konkurrenz zu Wishl Studio, nicht"}, {"id": 123, "start": 1043.92, "end": 1051.0, "text": "zu Wishl Studio Code. Nur mit dem Unterschied, dass mir Ryder von den Funktionen und der"}, {"id": 124, "start": 1051.0, "end": 1057.2, "text": "Handhabung mittlerweile besser gef\u00e4llt als Wishl Studio. Ich habe jahrelang auch f\u00fcr"}, {"id": 125, "start": 1057.2, "end": 1062.4, "text": ".NET und sowas Wishl Studio verwendet, aber seitdem ich jetzt haupts\u00e4chlich.NET, und"}, {"id": 126, "start": 1062.4, "end": 1065.96, "text": "das ist auch schon wieder jetzt die letzten paar Jahre,.NET haupts\u00e4chlich unter Linux,"}, {"id": 127, "start": 1065.96, "end": 1073.92, "text": "fast exklusiv unter Linux entwickle, ist halt Wishl Studio selbst keine Option mehr. Wishl"}, {"id": 128, "start": 1073.92, "end": 1080.16, "text": "Studio Code ist f\u00fcr.NET nicht so fein und Ryder ist super. Das verwenden wir mittlerweile"}, {"id": 129, "start": 1080.16, "end": 1089.36, "text": "unter Windows auch. Ja, aber noch nicht selbst aus, ich habe mir ein paar Videos zu angeguckt."}, {"id": 130, "start": 1089.36, "end": 1094.28, "text": "Da bin ich mal gespannt, ob sie es da schaffen, Wishl Studio Code ein bisschen Konkurrenz"}, {"id": 131, "start": 1094.28, "end": 1101.52, "text": "zu machen. F\u00fcr Java Script und Frontend zeug ich wahrscheinlich weniger, aber es gibt ja"}, {"id": 132, "start": 1101.52, "end": 1106.8, "text": "auch viele Plugins f\u00fcr Wishl Studio Code, die beliebt sind. Ja, von Go bis Rust und"}, {"id": 133, "start": 1106.8, "end": 1114.48, "text": "sonst was, vielleicht da. F\u00fcr Go haben sie ja eine eigene IDE. So, ich zeige euch mal"}, {"id": 134, "start": 1114.48, "end": 1117.64, "text": "kurz wo wir stehen geblieben sind. Ich muss mal kurz die Musik da noch einen Ticken leiser"}, {"id": 135, "start": 1117.64, "end": 1131.56, "text": "machen. Das ist mir das zu anstrengend. So, oh, Leute. Ich muss, gestern hat schon einer"}, {"id": 136, "start": 1131.56, "end": 1137.68, "text": "gemeint, ich h\u00f6re mich anders an. Das liegt daran, weil Teams mit der an meinem Mikrofon"}, {"id": 137, "start": 1137.68, "end": 1157.96, "text": "rumgestellt hat. Teams macht das gerne, weil Teams einfach nur zackt in der Richtung."}, {"id": 138, "start": 1157.96, "end": 1163.4, "text": "Ich lege komplett von Windows zu Linux. Ja, dann \u00fcberleg mal. Also, kann man jetzt ja"}, {"id": 139, "start": 1163.4, "end": 1171.0, "text": "auch hier gar nichts dazu sagen, wenn du nicht, zumindest ein bisschen erz\u00e4hlst, um was du"}, {"id": 140, "start": 1171.0, "end": 1178.12, "text": "machen willst. Also, einfach so ins kalte Wasser springen w\u00fcrde ich auf jeden Fall nicht."}, {"id": 141, "start": 1178.12, "end": 1182.48, "text": "Ich w\u00fcrde mir erstmal, ich w\u00fcrde noch nicht mal das machen, ich w\u00fcrde es erstmal so machen"}, {"id": 142, "start": 1182.48, "end": 1186.8, "text": "wie ich Linux in eine VM packen unter Windows und mir das ein bisschen angucken, weil du"}, {"id": 143, "start": 1186.8, "end": 1192.96, "text": "kannst nahezu alles relativ gut in einer VM machen. Au\u00dfer Videos gucken und sowas, dann"}, {"id": 144, "start": 1192.96, "end": 1199.16, "text": "ist ganz sch\u00f6n hohe CPU-Last. Aber zum Ausprobieren ist eine VM das beste, was du machen kannst."}, {"id": 145, "start": 1199.16, "end": 1207.72, "text": "Das hast du schon gemacht, ja. Wenn es da nichts mehr gibt, was du exklusiv unter Windows"}, {"id": 146, "start": 1207.72, "end": 1213.4, "text": "machst, ja, warum nicht? Kann man ja machen. Aber dann gleich Art-Schlie\u00dfungs, Art-Schlie\u00dfungs"}, {"id": 147, "start": 1213.4, "end": 1219.36, "text": "by the way. Und dann die Menschheit bekehren, dass alle Art-Schlie\u00dfungs verwenden. So,"}, {"id": 148, "start": 1219.36, "end": 1222.84, "text": "ich zeige euch mal kurz wo wir stehen geblieben sind. Wie habe ich denn das Projekt genannt?"}, {"id": 149, "start": 1222.84, "end": 1237.4, "text": "SearchChamp. Also.net run. Und jetzt, wie ist das Frontend-Ding? Ah, Frontend, da h\u00e4tte"}, {"id": 150, "start": 1237.4, "end": 1242.48, "text": "ich auch selbst drauf kommen k\u00f6nnen. So, also ich zeige euch mal kurz was wir das letzte"}, {"id": 151, "start": 1242.48, "end": 1249.6, "text": "Mal gebaut haben. Wir haben ein Autocomplete-Feld, ob ich das Studio Code vielleicht aufmache"}, {"id": 152, "start": 1249.6, "end": 1258.2, "text": "neben dran. Ja, also wir haben ein Autocomplete-Feld gebaut, was Sachen vom Server autocompleted,"}, {"id": 153, "start": 1258.2, "end": 1275.64, "text": "ja. Wenn ich jetzt hier z.B. eintippe A oder S, dann sollte das normalerweise autocompleten."}, {"id": 154, "start": 1275.64, "end": 1286.04, "text": "Was ist, oh, oh, was ist hier los? Ah, ich wei\u00df woran es liegt. Chat, warum sagt mir"}, {"id": 155, "start": 1286.04, "end": 1303.36, "text": "das denn keiner? Die Datenbank l\u00e4uft nicht. Wie? H\u00e4? Warum ist mein Datenbank-Image weg?"}, {"id": 156, "start": 1303.36, "end": 1318.52, "text": "Jetzt bin ich verwirrt. Wo ist mein Datenbank-Image hin? Wo waren wir denn hier? Temp, pg, data."}, {"id": 157, "start": 1318.52, "end": 1333.8, "text": "\u00c4h ja, sudo, denkst dir. Ok, die Datenbank-Daten sind noch da. Die Datenbank-Daten sind noch"}, {"id": 158, "start": 1333.8, "end": 1339.44, "text": "da, hier, 1,6 Gigabyte, ok. Docker-Run? Ah, weil ich ja M gemacht habe. Keg-Wait. Warum"}, {"id": 159, "start": 1339.44, "end": 1347.44, "text": "mache ich auch so ein Mist? Ja gut, aber das sch\u00f6ne an Containerkram ist, die Daten sind"}, {"id": 160, "start": 1347.44, "end": 1352.92, "text": "ja noch da. Rest kann ich einfach so lassen. Bam, wieder starten. Und dann sollte das eigentlich"}, {"id": 161, "start": 1352.92, "end": 1363.04, "text": "wieder funktionieren. Schauen wir mal, ob es jetzt autocompleted, neu laden, ha, ha,"}, {"id": 162, "start": 1363.04, "end": 1368.0, "text": "der Harold, da ist er. Also wir haben so ein autocomplete-Ding gebaut, da kann man z.B."}, {"id": 163, "start": 1368.0, "end": 1375.0, "text": "dann sowas hier eingeben. So hier, Ashley, autocompleted ist oder Dom oder so oder Punkt"}, {"id": 164, "start": 1375.0, "end": 1382.96, "text": "Name. Das sind \u00fcbrigens random Daten, die er da generiert. Host, ne Host haben wir da"}, {"id": 165, "start": 1382.96, "end": 1388.28, "text": "nicht drinne. Das sind random, hier Punkt Net oder so. So, wir haben so ein autocomplete-Ding"}, {"id": 166, "start": 1388.28, "end": 1400.12, "text": "gebaut und das autocomplete-Ding ist halt relativ schnell, weil wir haben 1,6 Gigabyte,"}, {"id": 167, "start": 1400.12, "end": 1410.88, "text": "Penny Punkt Name, Klassik. Penny. Oh ja, beste, beste. Ganz sch\u00f6n viele Leute die gleiche"}, {"id": 168, "start": 1410.88, "end": 1423.64, "text": "Domain, oder? Penny Punkt Name. Ja, und das autocomplete ist relativ schnell, obwohl wir"}, {"id": 169, "start": 1423.64, "end": 1432.4, "text": "haben eine Postgres-Datenbank mit 1,6 Gigabyte und ich glaube irgendwie 4,5 Millionen Eintr\u00e4gen"}, {"id": 170, "start": 1432.4, "end": 1442.72, "text": "oder so. Was ist denn 3000 mal 1500? Ja, also wir haben, habe ich doch richtig im Kopf, wir"}, {"id": 171, "start": 1442.72, "end": 1447.92, "text": "haben 4,5 Millionen Eintr\u00e4ge in der Datenbank, die alle gleich aussehen, die alle aus einem"}, {"id": 172, "start": 1447.92, "end": 1451.6, "text": "Vorname bestehen und einer Domain. Die Daten sind eigentlich relativ egal, das geht ja"}, {"id": 173, "start": 1451.6, "end": 1456.76, "text": "nur, dass man da schnell autocompleten kann. So, also wir haben eine Datenbank mit 4,5 Millionen"}, {"id": 174, "start": 1456.76, "end": 1464.84, "text": "Elementen drin und die ist insgesamt 1,6 Gigabyte gro\u00df und ihr seht, so das autocomplete ist"}, {"id": 175, "start": 1464.84, "end": 1471.56, "text": "schon sehr schnell. Wir brauchen f\u00fcr einen Datenbank-Query ungef\u00e4hr 7 und 3, also 28"}, {"id": 176, "start": 1471.56, "end": 1477.56, "text": "bis 37 Millisekunden. Am langsamsten sind die Queries, wo man nur ein Buchstabe eingibt,"}, {"id": 177, "start": 1477.56, "end": 1485.24, "text": "der dauert 284 Millisekunden, weil der dann halt relativ viel zu suchen hat. Und da habe"}, {"id": 178, "start": 1485.24, "end": 1495.28, "text": "ich mir gedacht, das k\u00f6nnen wir jetzt noch ein bisschen optimieren. Das ist eine gute"}, {"id": 179, "start": 1495.28, "end": 1503.2, "text": "Frage. Ok, das ist die high IQ Chatfrage. W\u00e4re das auch noch schnell, wenn deine Anwendung"}, {"id": 180, "start": 1503.2, "end": 1512.24, "text": "bei 100.000 User h\u00e4tte oder skaliert deine L\u00f6sung Schei\u00dfe? Naja, das ist Read-Only,"}, {"id": 181, "start": 1512.24, "end": 1516.56, "text": "das spricht schon mal daf\u00fcr, dass das relativ schnell sein m\u00fcsste, auch bei mehreren Usern"}, {"id": 182, "start": 1516.56, "end": 1522.48, "text": "gleichzeitig. Postgres Read-Only ist ja kein Ding. Also ich w\u00fcrde sagen, das m\u00fcsste auch"}, {"id": 183, "start": 1522.48, "end": 1531.96, "text": "bei 100.000 Usern relativ schnell gehen. Ob das jetzt mega krass diagonal, horizontal"}, {"id": 184, "start": 1531.96, "end": 1535.68, "text": "und vertikal skaliert, m\u00fcsste man ausprobieren. Aber im Prinzip w\u00fcrde ich sagen, ja, das"}, {"id": 185, "start": 1535.68, "end": 1541.88, "text": "wird wahrscheinlich auch mit 100.000 Usern relativ schnell gehen. W\u00e4re f\u00fcr so eine Anwendung"}, {"id": 186, "start": 1541.88, "end": 1549.16, "text": "nicht Redis perfekt? Naja, Redis w\u00e4re insofern von der Idee her nicht schlecht, weil es rein"}, {"id": 187, "start": 1549.16, "end": 1561.88, "text": "in Memory ist. Aber das Problem an Redis ist, mach mal 4,5 Millionen Eintr\u00e4ge rein in Memory"}, {"id": 188, "start": 1561.88, "end": 1569.64, "text": "sind. Das braucht schon ein bisschen RAM, das ist das erste. Und das zweite ist, wahrscheinlich"}, {"id": 189, "start": 1569.64, "end": 1576.64, "text": "ist es sogar langsamer als Postgres in dem Fall, weil Postgres explizit einen Modus hat"}, {"id": 190, "start": 1576.64, "end": 1585.32, "text": "f\u00fcr Textsuche, der das ganze beschleunigt. Soll ich euch mal versuchen, so weit wie ich"}, {"id": 191, "start": 1585.32, "end": 1588.6, "text": "es verstanden habe, zu grob zu erkl\u00e4ren, wie das Postgres macht. Das ist eigentlich"}, {"id": 192, "start": 1588.6, "end": 1597.72, "text": "relativ sechsk\u00f6pfig. Und zwar, wenn man Postgres sagt, dass man jetzt Text in die Datenbank"}, {"id": 193, "start": 1597.72, "end": 1604.12, "text": "speichert, zum Beispiel das Wort Hallo m\u00f6chte man in die Datenbank speichern. Allerdings"}, {"id": 194, "start": 1604.12, "end": 1610.64, "text": "so, dass man es schnell wieder finden kann, schnell wieder durchsuchen kann. Dann speichert"}, {"id": 195, "start": 1610.64, "end": 1616.0, "text": "Redis, dann speichert Postgres das normalerweise halt einfach als Feldtext. Einfach Hallo"}, {"id": 196, "start": 1616.0, "end": 1620.0, "text": "drin und gut ist. Dann kannst du aber nicht schnell suchen, weil dann musst du ja vom"}, {"id": 197, "start": 1620.0, "end": 1629.44, "text": "ersten Eintrag der Datenbank bis zum letzten Eintrag der Datenbank suchen. Und was Postgres"}, {"id": 198, "start": 1629.44, "end": 1637.84, "text": "macht, ist jetzt folgendes, damit Postgres das macht, muss man folgendes setzen, man"}, {"id": 199, "start": 1637.84, "end": 1644.08, "text": "muss diese zwei Sachen in Postgres einschalten. Also man muss diese Postgres Erweiterung laden,"}, {"id": 200, "start": 1644.08, "end": 1652.48, "text": "und man muss sagen, dass er ein Textsuche, wie auch immer, Index anlegen soll da drauf."}, {"id": 201, "start": 1652.48, "end": 1657.32, "text": "So, und was Postgres jetzt macht, ist, um das schnell durchsuchbar zu machen, der macht"}, {"id": 202, "start": 1657.32, "end": 1666.52, "text": "aus diesem Wort 3er Buchstabenpaare. Das hei\u00dft, Postgres macht daraus dann irgendwie"}, {"id": 203, "start": 1666.52, "end": 1682.6, "text": "sowas, macht irgendwie h, und dann h a, a h, glaube ich, und dann h l, a, und so, so."}, {"id": 204, "start": 1682.6, "end": 1687.16, "text": "Diese Varianten werden da irgendwie rausgebastelt. Das kann man sich, Moment, das kann man sich"}, {"id": 205, "start": 1687.16, "end": 1692.4, "text": "sogar anzeigen lassen. Ich warte mal, ich lasse mir das mal anzeigen. Da gibt es n\u00e4mlich"}, {"id": 206, "start": 1692.4, "end": 1698.92, "text": "eine fertige Funktion, die das macht. Wartet mal, das machen wir jetzt. EF, Functions, Show,"}, {"id": 207, "start": 1698.92, "end": 1706.8, "text": "hier, so. Also das, was Postgres speichert, h\u00f6r hallo. Nat\u00fcrlich speichern wir den Text"}, {"id": 208, "start": 1706.8, "end": 1711.72, "text": "nur in klein, weil wir ja case insensitiv suchen wollen. Was kommt da \u00fcbrigens zur\u00fcck"}, {"id": 209, "start": 1711.72, "end": 1718.2, "text": "jetzt? Ein String Array, ok. Schleife, gucken wir uns das mal an, was Postgres daraus macht."}, {"id": 210, "start": 1718.2, "end": 1728.2, "text": "Ja, lul, cw, lul, return, zack. So, gehen wir uns das mal aus. Also aus hallo, macht"}, {"id": 211, "start": 1728.2, "end": 1742.24, "text": "Postgres. Was? Ach, das muss man in einem Query machen, das kann man nicht einfach so"}, {"id": 212, "start": 1742.24, "end": 1768.16, "text": "machen, oder wie? Wie soll ich denn daraus einen Query bauen? H\u00e4? Ok, wir gucken uns"}, {"id": 213, "start": 1768.16, "end": 1775.52, "text": "jetzt einfach ein Beispiel an. Example. Gibt es ja schon genug Leute, die das machen. Kennst"}, {"id": 214, "start": 1775.52, "end": 1786.08, "text": "du mich mit QuestDB aus? Nein. Hier, also. Das macht immer so dreier Buchstabenpaare"}, {"id": 215, "start": 1786.08, "end": 1795.12, "text": "daraus. Und dann speichert es das in irgendeinem sortierten Index oder so ab. Zumindest hat"}, {"id": 216, "start": 1795.12, "end": 1799.32, "text": "das den Vorteil, dass man dementsprechend relativ schnell Wildcards suchen machen kann."}, {"id": 217, "start": 1799.32, "end": 1805.88, "text": "So nach dem Motto enth\u00e4lt ein Wort den Buchstabe a oder enth\u00e4lt ein Wort die Zeichenfolge"}, {"id": 218, "start": 1805.88, "end": 1811.16, "text": "ca oder sowas. Das geht dann relativ schnell, weil er die W\u00f6rter ja schon so aufgesplittet"}, {"id": 219, "start": 1811.16, "end": 1816.4, "text": "speichert und sich in seinem Index per Binary Search relativ schnell da lang hangeln kann."}, {"id": 220, "start": 1816.4, "end": 1822.52, "text": "So reime ich mir das zumindest zusammen. Nachteil ist, Rides dauern l\u00e4nger und die Datenbank"}, {"id": 221, "start": 1822.52, "end": 1827.36, "text": "wird viel gr\u00f6\u00dfer. Das ist ja oftmals so. Das ist immer so ein bisschen Tradeoff zwischen"}, {"id": 222, "start": 1827.36, "end": 1837.56, "text": "Gr\u00f6\u00dfe und Aufwand, dass man es dann schneller wieder rauskriegt. Select Word. Ok, das probieren"}, {"id": 223, "start": 1837.56, "end": 1844.76, "text": "wir jetzt mal aus, ob das funktioniert. Also ich soll da einen Query daraus machen. Ok."}, {"id": 224, "start": 1844.76, "end": 1857.28, "text": "Raw SQL. Database. Raw SQL. Execute Raw SQL. Ok, also. Mal schauen. Hab ich noch nie gemacht."}, {"id": 225, "start": 1857.28, "end": 1865.16, "text": "Mal gucken, ob wir das Postgres irgendwie entlockt kriegen. Was ist denn das? Show."}, {"id": 226, "start": 1865.16, "end": 1878.64, "text": "Hier. Ok. Select. Alles klar. So. Wir wollen nicht Word-Similarity, sondern Show dr\u00fccken."}, {"id": 227, "start": 1878.64, "end": 1885.36, "text": "F\u00fcr Hallo. F\u00fcr Hallo. So. Gucken, ob das funktioniert. Das knallt jetzt wahrscheinlich"}, {"id": 228, "start": 1885.36, "end": 1889.48, "text": "gleich wieder. Und was kommt da als Ergebnis raus? Ein String oder was? Oder wie Execute"}, {"id": 229, "start": 1889.48, "end": 1914.36, "text": "Raw SQL. Ne. Ey, keine Ahnung, wie das funktioniert. Ja, Update, Update. Wei\u00df nicht, wie ich das"}, {"id": 230, "start": 1914.36, "end": 1921.56, "text": "dem beibringen kann. Ja, super, aber da kriege ich doch jetzt keine Ausgabe von. Ja, nice,"}, {"id": 231, "start": 1921.56, "end": 1928.32, "text": "nice. Das Query funktioniert, aber ohne dass die Ausgabe. Ok. Execute Raw SQL. Output."}, {"id": 232, "start": 1928.32, "end": 1956.24, "text": "EF Core Output. Also mal gucken, wie das haut. Oh, jetzt wird es High IQ. Moment. Was?"}, {"id": 233, "start": 1956.24, "end": 1971.8, "text": "Da kommt ein Int zur\u00fcck. Warum kommt da eigentlich ein Int zur\u00fcck? Warum kommt da ein Int zur\u00fcck?"}, {"id": 234, "start": 1971.8, "end": 1979.2, "text": "Warum kommt da nicht irgendein Text Output zur\u00fcck? Aber wir k\u00f6nnen das ja einfach mal"}, {"id": 235, "start": 1979.2, "end": 1986.8, "text": "mit pet-docker machen und uns connecten in die Datenbank. Hier, Docker, PS, noch mal"}, {"id": 236, "start": 1986.8, "end": 2001.04, "text": "Bash. Bin, Bash. So, Docker, Exec, Postgres. Ne, Container-ID Bin-Bash. Ne, das war. Ach,"}, {"id": 237, "start": 2001.04, "end": 2013.64, "text": "wie ging das noch mal? Minus. Number of Affected Roles kommt zur\u00fcck. Ja, super. Ich will aber"}, {"id": 238, "start": 2013.64, "end": 2023.4, "text": "den Text, den Text. Wie ging das? IT, IT war das. Genau. Ja. So, PSQL. Failed. Wie"}, {"id": 239, "start": 2023.4, "end": 2031.52, "text": "jetzt? Ich darf mich nicht auf meine eigene Datenbank verbinden oder was? Minus U. Postgres."}, {"id": 240, "start": 2031.52, "end": 2037.48, "text": "Ne, was ist, was ist User? Wir machen wieder Zeug, was ich \u00fcberhaupt nicht machen wollte,"}, {"id": 241, "start": 2037.48, "end": 2047.24, "text": "aber ok. User. U. Da sind wir. Postgres. So. Kommandosignal. Select. Sternchen. From."}, {"id": 242, "start": 2047.24, "end": 2055.32, "text": "Was? Ah, wir m\u00fcssen uns erst mal zur Datenbank verbinden. Sekunde, erst mal wieder \u00f6ffnen."}, {"id": 243, "start": 2055.32, "end": 2064.52, "text": "Was ist das Minus? Wie gibt man die Datenbank an, wohin man sich verbinden will? DB Name,"}, {"id": 244, "start": 2064.52, "end": 2077.4, "text": "Minus D. So, und unsere Datenbank hei\u00dft wie? Unsere Datenbank hei\u00dft QChat Database. So,"}, {"id": 245, "start": 2077.4, "end": 2087.72, "text": "ok. Jetzt aber. Select. Jetzt funktioniert's. Nice. Also, das sind diese, das sind diese"}, {"id": 246, "start": 2087.72, "end": 2094.92, "text": "Triple Buchstabenpaare, die Postgres f\u00fcr das Wort Hallo speichert in der Datenbank."}, {"id": 247, "start": 2094.92, "end": 2100.56, "text": "Also HA, HA, AL und dann HAL und dann LO und so. So, und wenn er das jetzt abspeichert,"}, {"id": 248, "start": 2100.56, "end": 2105.28, "text": "dann kannst du relativ easy feststellen, ob ein Wort eben beispielsweise einen Buchstaben"}, {"id": 249, "start": 2105.28, "end": 2113.8, "text": "enth\u00e4lt. Der kann dann einfach in seinem, wenn du wissen willst, enth\u00e4lt ein Wort A,"}, {"id": 250, "start": 2113.8, "end": 2122.52, "text": "dann guckt er in seinem Index nach und stellt fest, ah ja klar, A f\u00e4ngt mit A an. Das hei\u00dft,"}, {"id": 251, "start": 2122.52, "end": 2125.92, "text": "er kann dann wahrscheinlich per Binary Search oder wie auch immer, die die das genau machen,"}, {"id": 252, "start": 2125.92, "end": 2133.24, "text": "ziemlich schnell finden, auch wenn du das, was du suchst, mitten im Wort ist. Und du"}, {"id": 253, "start": 2133.24, "end": 2138.52, "text": "kannst trotzdem auch Wort teilen, also wenn du wissen willst, enth\u00e4lt das, enth\u00e4lt das"}, {"id": 254, "start": 2138.52, "end": 2146.24, "text": "irgendwie LO oder LL oder so. Dann kann er hier auch nachgucken. Dementsprechend sind"}, {"id": 255, "start": 2146.24, "end": 2152.16, "text": "die Queries auch so schnell, weil er f\u00fcr jeden Texteintrag so ein Ding hier erstellt. Also,"}, {"id": 256, "start": 2152.16, "end": 2156.12, "text": "du hast zwar nur einen Text, aber in der Datenbank speichert er ganz viele verschiedene Abwandlungen"}, {"id": 257, "start": 2156.12, "end": 2162.12, "text": "bzw. Teile davon. Und deswegen dauert ein Insert l\u00e4nger und deswegen ist die Datenbank"}, {"id": 258, "start": 2162.12, "end": 2169.04, "text": "auch gr\u00f6\u00dfer, weil er nicht einfach nur Text in irgendeinem Datenbankfeld drin speichert, sondern da"}, {"id": 259, "start": 2169.04, "end": 2173.0, "text": "noch ein paar Sachen f\u00fcr machen muss und auch mehr Sachen speichern muss. Aber deswegen sind"}, {"id": 260, "start": 2173.0, "end": 2178.52, "text": "die Queries, wenn du wissen willst, enth\u00e4lt das ein A, enth\u00e4lt das ein H, enth\u00e4lt das HL oder so,"}, {"id": 261, "start": 2178.52, "end": 2185.28, "text": "viel schneller. So, so weit zur Theorie. Ich habe mir jetzt folgendes \u00fcberlegt, was man machen"}, {"id": 262, "start": 2185.28, "end": 2192.36, "text": "k\u00f6nnte ist. Also aktuell sehen wir ja, die Queries dauern irgendwie, ich h\u00f6re das mal wieder aus,"}, {"id": 263, "start": 2192.36, "end": 2202.48, "text": "das ist Donkey Kong Musik, oder? So, die Queries dauern hier so ungef\u00e4hr, wenn man hier mal nach"}, {"id": 264, "start": 2202.48, "end": 2210.0, "text": "Name sucht. Hier 100, 100, Name gibt es halt oft, 191 Millisekunden. Wenn man sich mal \u00fcberlegt,"}, {"id": 265, "start": 2210.0, "end": 2215.64, "text": "das ist relativ gut eigentlich schon f\u00fcr eine Datenbank mit 4,5 Millionen Texteintr\u00e4gen und die"}, {"id": 266, "start": 2215.64, "end": 2221.24, "text": "1,6 Gigabyte gro\u00df ist. Aber ich glaube, wir k\u00f6nnen das noch viel, viel, viel schneller machen,"}, {"id": 267, "start": 2221.24, "end": 2226.92, "text": "wenn ich die Datenbankabfrage sinnvoll mache, weil meine Datenbankabfrage ist ziemlich dumm. Ich bin"}, {"id": 268, "start": 2226.92, "end": 2232.16, "text": "nach dem letzten Stream aufgefallen, weil ich zeige jetzt, ich zeige mal hier, wie das hier"}, {"id": 269, "start": 2232.16, "end": 2238.4, "text": "im Frontend funktioniert. Wenn man hier in diesem Suchfeld was eingibt, dann ruft er,"}, {"id": 270, "start": 2238.4, "end": 2244.44, "text": "es ist nat\u00fcrlich gro\u00df hier, guck, das ist mit HTML und CSS und JavaScript zusammen mit 127 Zeilen,"}, {"id": 271, "start": 2244.44, "end": 2250.56, "text": "der ruft diese Funktion auf bei jedem Tastendruck quasi in diesem Inputfeld hier, Query Server,"}, {"id": 272, "start": 2250.56, "end": 2260.52, "text": "und, muss ich mal kurz \u00fcberlegen, hier ist das Value vom Inputfeld, genau. So, und er ruft diesen"}, {"id": 273, "start": 2260.52, "end": 2265.12, "text": "Endpunkt auf in unserem Backend, ja, slash api slash search und dann \u00fcbergibt er das Value,"}, {"id": 274, "start": 2265.12, "end": 2272.48, "text": "was hier oben im Inputfeld drinne steht. Und das hier ist die Funktion, die auf dem Server"}, {"id": 275, "start": 2272.48, "end": 2277.96, "text": "aufgerufen wird, api slash search query. Das ist \u00fcbrigens auch richtig dumm gemacht. Ich"}, {"id": 276, "start": 2277.96, "end": 2284.2, "text": "m\u00fcsste jetzt eigentlich irgendwie so, ich wei\u00df gerade gar nicht, wie da die richtige Syntax f\u00fcr"}, {"id": 277, "start": 2284.2, "end": 2291.28, "text": "ist. So, und was w\u00fcrde es l\u00e4nger dauern, wenn die DB-Eintr\u00e4ge vom Wort an sich l\u00e4nger w\u00e4ren und"}, {"id": 278, "start": 2291.28, "end": 2299.32, "text": "spielte das? Naja, das ist ja das Sch\u00f6ne daran. Es dauert l\u00e4nger beim Einf\u00fcgen und es wird gr\u00f6\u00dfer,"}, {"id": 279, "start": 2299.32, "end": 2305.2, "text": "umso l\u00e4nger das Ganze ist. Aber die Suche, die wird wahrscheinlich auch minimal langsamer,"}, {"id": 280, "start": 2305.2, "end": 2311.88, "text": "aber im Prinzip bleibt die Suchzeit relativ konstant. Das ist ja gerade das Gute daran."}, {"id": 281, "start": 2311.88, "end": 2319.96, "text": "Weil normalerweise, wenn du linear die Datenbank durchsuchen w\u00fcrdest, dann wird es halt mit der"}, {"id": 282, "start": 2319.96, "end": 2328.64, "text": "L\u00e4nge immer l\u00e4nger. Majorink, danke f\u00fcr den Sub. So, und jetzt gucken wir uns bei meinen"}, {"id": 283, "start": 2328.64, "end": 2332.96, "text": "Datenbankquery an. Das ist n\u00e4mlich ziemlich dumm, ist mir im Nachhinein eingefallen. Also,"}, {"id": 284, "start": 2332.96, "end": 2339.8, "text": "was wir abfragen ist folgendes Text-Values ist die Tabelle. Nee, nicht die, doch. Nee,"}, {"id": 285, "start": 2339.8, "end": 2347.36, "text": "nicht Tabelle. Wie nennt man das? Doch Tabelle, ne? Text-Values. Text-Values ist die Tabelle. In"}, {"id": 286, "start": 2347.36, "end": 2356.36, "text": "dem Fall bei ASP.io hei\u00dft es DB-Set. So, Text-Values sieht in.NET sieht dann so aus. Das ist eigentlich"}, {"id": 287, "start": 2356.36, "end": 2363.88, "text": "nur eine Klasse mit einer ID und dem Text zum Durchsuchen. H\u00e4lt sich wirklich in Grenzen. Da"}, {"id": 288, "start": 2363.88, "end": 2370.64, "text": "ist wenig, wenig, was wir extra gemacht haben, um uns aufs Eigentliche zu konzentrieren. So,"}, {"id": 289, "start": 2370.64, "end": 2376.08, "text": "und die Datenbankabfrage ist ziemlich doof. Also, in dieser Tabelle mit Text-Values, also das,"}, {"id": 290, "start": 2376.08, "end": 2380.68, "text": "quasi das einzige, was in der Datenbank steht, machen wir ein Wear. Sagen, okay, wir suchen alle"}, {"id": 291, "start": 2380.68, "end": 2387.8, "text": "Eintr\u00e4ge, die, und das ist Postgres, das ist Postgres-Magic. Was macht das DB-Set? Du musst"}, {"id": 292, "start": 2387.8, "end": 2395.16, "text": "in Entity Framework Core, wenn du das verwenden willst, und damit du Queries gegen eine Datenbank"}, {"id": 293, "start": 2395.16, "end": 2401.24, "text": "machen kannst, muss das in einem DB-Set sein. Das ist halt so von den Framework-Erstellern gedacht."}, {"id": 294, "start": 2401.24, "end": 2408.16, "text": "DB-Set stellt dir dann Methoden zur Verf\u00fcgung, worauf du Datenbank-Queries machen kannst. Also,"}, {"id": 295, "start": 2408.16, "end": 2414.04, "text": "Wear, Order, Buy und so was in der Richtung. Das geht nur, weil es ein DB-Set ist. Also,"}, {"id": 296, "start": 2414.04, "end": 2420.56, "text": "wir gucken Eintr\u00e4ge, die, und das hier, wie gesagt, ist Postgres-Magic, die unser Query enthalten. Also,"}, {"id": 297, "start": 2420.56, "end": 2426.72, "text": "in dem Fall w\u00e4re das jetzt Name. Und davor und danach ist ein Prozent. Prozent ist in Postgres"}, {"id": 298, "start": 2426.72, "end": 2434.0, "text": "Wildcard. Also, sprich, das Query kann irgendwo stehen. Also, Name kann irgendwo hier drinstehen,"}, {"id": 299, "start": 2434.0, "end": 2438.68, "text": "ist vollkommen egal. Also, wenn ich nach Geo suche, zum Beispiel, funktioniert das halt richtig,"}, {"id": 300, "start": 2438.68, "end": 2443.48, "text": "weil ich sortiere, aber der w\u00fcrde auch Sachen hier drinnen finden. Aber ich ordne das hier"}, {"id": 301, "start": 2443.48, "end": 2447.8, "text": "eben, wenn es ihn anf\u00e4ngt. Wir k\u00f6nnen auch HTTP suchen, zum Beispiel. Also, seht ihr,"}, {"id": 302, "start": 2447.8, "end": 2462.6, "text": "also er findet die Sachen, egal wo sie stehen. Was ist dieses Get und Set? Da? Das? Das ist ein,"}, {"id": 303, "start": 2462.6, "end": 2469.04, "text": "wie hei\u00dft das in C-Sharp? Automatic Property oder sowas? Wei\u00df gar nicht, wie man das offiziell"}, {"id": 304, "start": 2469.04, "end": 2475.2, "text": "nennt. Also, das ist Getter und Setter, wie es das in Java auch gibt. Auto-Property, Auto-Property,"}, {"id": 305, "start": 2475.2, "end": 2479.52, "text": "genau. Das ist Get Set, wie es das in so fast jeder objektorientierten Sprache gibt. Nur"}, {"id": 306, "start": 2479.52, "end": 2487.88, "text": "mit dem Unterschied, dass der im Hintergrund das eigentliche, die eigentliche Variable anlegt. Die"}, {"id": 307, "start": 2487.88, "end": 2495.04, "text": "musst du nicht mal selbst machen. Also, das hier ist die Kurzvariante von, wei\u00df gar nicht, ob man"}, {"id": 308, "start": 2495.04, "end": 2505.36, "text": "das hier, genau. Das ist die Kurzvariante von dem hier. Du hast ein privates, eine private Variable"}, {"id": 309, "start": 2505.36, "end": 2511.92, "text": "Text und dann hast du Getter und Setter f\u00fcr diesen Text. Fr\u00fcher hat man das \u00fcbrigens nicht so"}, {"id": 310, "start": 2511.92, "end": 2528.32, "text": "geschrieben. Es geht noch l\u00e4nger. Fr\u00fcher hat man das \u00fcbrigens so geschrieben. Ups. Fr\u00fcher"}, {"id": 311, "start": 2528.32, "end": 2538.08, "text": "hat man das so geschrieben. Da musst du halt so viel Ged\u00f6ns schreiben, obwohl du eigentlich"}, {"id": 312, "start": 2538.08, "end": 2549.6, "text": "auch einfach nur das schreiben k\u00f6nntest. Was ist da von der Unterschied zu einfach String Text?"}, {"id": 313, "start": 2549.6, "end": 2556.56, "text": "Von der Funktion her ist das das gleiche. Du k\u00f6nntest auch sowas hier machen. Unterschied"}, {"id": 314, "start": 2556.56, "end": 2560.68, "text": "zeige ich dir gleich. Du k\u00f6nntest auch sowas hier machen. Keine Ahnung, sowas. Public Variable"}, {"id": 315, "start": 2560.68, "end": 2568.84, "text": "k\u00f6nntest du auch machen. Der Unterschied ist, in dem Beispiel eigentlich keiner, der Unterschied"}, {"id": 316, "start": 2568.84, "end": 2577.32, "text": "ist, dass du in dem Fall noch zus\u00e4tzlich was machen k\u00f6nntest, wenn du willst. Also,"}, {"id": 317, "start": 2577.32, "end": 2584.0, "text": "du k\u00f6nntest zum Beispiel anstatt, du k\u00f6nntest das Set zum Beispiel weglassen, dann w\u00e4re das"}, {"id": 318, "start": 2584.0, "end": 2591.24, "text": "Read Only und du k\u00f6nntest hier drinnen zum Beispiel gar keine Variable machen, sondern einfach Return,"}, {"id": 319, "start": 2591.24, "end": 2597.92, "text": "was Statisches oder so zur\u00fcckgeben. Also, du kannst hier drinnen dann quasi zur Get und Set"}, {"id": 320, "start": 2597.92, "end": 2604.64, "text": "Zeit noch beliebigen, beliebigen Code laufen lassen. Du k\u00f6nntest hier an der Stelle auch machen,"}, {"id": 321, "start": 2604.64, "end": 2624.96, "text": "hier get google.de HTTP Request und dann die Antwort Return oder sowas. In der Regel sagt"}, {"id": 322, "start": 2624.96, "end": 2636.72, "text": "man halt, dass Public Variablen nicht best practice sind und dass man die Variablen privat"}, {"id": 323, "start": 2636.72, "end": 2641.32, "text": "machen sollte in die Klasse und wenn man darauf zugreift, das Ganze entweder \u00fcber irgendeine"}, {"id": 324, "start": 2641.32, "end": 2647.08, "text": "Funktion macht, die dann oftmals Get und Set hei\u00dft und deswegen haben die sich bei Microsoft"}, {"id": 325, "start": 2647.08, "end": 2653.4, "text": "\u00fcberlegt, dass es ein sinnvolles Feature ist, das direkt in die Sprache einzubauen. In Java"}, {"id": 326, "start": 2653.4, "end": 2656.88, "text": "w\u00fcrdest du, ich wei\u00df \u00fcbrigens nicht, ob sowas, ich sagte das nur vor ein paar Jahren, ich mache"}, {"id": 327, "start": 2656.88, "end": 2661.68, "text": "wenig, so gut wie gar kein Java. Also, in Java w\u00fcrdest du dann sowas hier machen, zum Beispiel"}, {"id": 328, "start": 2661.68, "end": 2681.32, "text": "String Get Text und da w\u00fcrdest du dann sagen Return Private Text oder so. Ja, du k\u00f6nntest in einem"}, {"id": 329, "start": 2681.32, "end": 2691.04, "text": "Set auch checken, ob es Null ist und sowas. Ja, kannst du alles machen. Ja, dann ist es sehr"}, {"id": 330, "start": 2691.04, "end": 2701.48, "text": "\u00e4hnlich in Java. Zumindest sind Public Variablen in der Regel nicht gerne gesehen. Der einzige"}, {"id": 331, "start": 2701.48, "end": 2708.44, "text": "Unterschied ist, also wo ich das tats\u00e4chlich okay und sinnig finde, wenn man lokale Variablen"}, {"id": 332, "start": 2708.44, "end": 2719.28, "text": "Public macht, ist das in irgendwelchen Interop Szenarien. Also, wenn du jetzt irgendeinen Struct"}, {"id": 333, "start": 2719.28, "end": 2729.2, "text": "hast oder irgendeine Klasse, die du an irgendwelche unsafe FFmpeg Bindings \u00fcbergibst, um dann da"}, {"id": 334, "start": 2729.2, "end": 2734.16, "text": "irgendwie Video Frames reinzuschreiben oder sowas in der Richtung, da kannst du dem Zeug"}, {"id": 335, "start": 2734.16, "end": 2744.4, "text": "nicht mit C-Sharp, Getter und Setter kommen. Da musst du Oldschool, Public, Int, Bloop machen."}, {"id": 336, "start": 2744.4, "end": 2755.84, "text": "Aber solange man sich im ganz normalen Managed-Land bewegt, w\u00fcrde ich das immer so machen. Hat"}, {"id": 337, "start": 2755.84, "end": 2763.64, "text": "bestimmt noch mehr Vorteile, die ich gerade nicht draufkomme. Ja, okay, aber wenn wir uns"}, {"id": 338, "start": 2763.64, "end": 2775.08, "text": "das Datenbank-Query angucken, ich muss was drehen. Chat sagt mir, dass ich trinken muss."}, {"id": 339, "start": 2775.08, "end": 2786.88, "text": "Bisschen kompliziert. Die.net-Schreibweise finde ich nicht so ganz gut. Kannste ja eigentlich"}, {"id": 340, "start": 2786.88, "end": 2798.48, "text": "merken, sobald es Public ist, schreibst du es so. Fertig. Also, das Query, und ich zeige,"}, {"id": 341, "start": 2798.48, "end": 2802.28, "text": "ich verrate euch jetzt auch klein, warum ich denke, dass das langsam ist. Ob das so ist,"}, {"id": 342, "start": 2802.28, "end": 2810.68, "text": "m\u00fcssen wir ausprobieren. Also, Datenbank-Query. Text-Values-Saw. Wo das Postgres Magic Wildcard,"}, {"id": 343, "start": 2810.68, "end": 2814.0, "text": "also das habe ich ja gerade schon erkl\u00e4rt. Er nimmt das Query, in dem Fall hier Name"}, {"id": 344, "start": 2814.0, "end": 2824.04, "text": "oder HTTP ist es jetzt, sagt, ich suche W\u00f6rter, die davor egal, danach egal, aber irgendwo"}, {"id": 345, "start": 2824.04, "end": 2830.68, "text": "dazwischen, zwischen egal, HTTP enthalten. Also, das ist quasi Wildcard-Character in"}, {"id": 346, "start": 2830.68, "end": 2838.84, "text": "Postgres. HTTP, was davor kommt, ist egal, was danach kommt, ist egal. So, das an sich"}, {"id": 347, "start": 2838.84, "end": 2844.52, "text": "ist relativ schnell. Dadurch, dass wir das eben hier mit dieser, ich habe es jetzt nicht"}, {"id": 348, "start": 2844.52, "end": 2850.72, "text": "mehr angezeigt, mit dieser Treecrime-Funktion von Postgres machen. Was ich allerdings ziemlich"}, {"id": 349, "start": 2850.72, "end": 2859.72, "text": "bescheuer das mache, ist das hier. Danach sage ich, order by descending, und zwar in"}, {"id": 350, "start": 2859.72, "end": 2864.64, "text": "der Richtung, wenn der Text mit dem Query anf\u00e4ngt. Also, ihr seht es ja zum Beispiel,"}, {"id": 351, "start": 2864.64, "end": 2869.52, "text": "wenn ich jetzt nach hier Hazen, nach Huts suche zum Beispiel, dann sind die Eintr\u00e4ge,"}, {"id": 352, "start": 2869.52, "end": 2874.88, "text": "die damit anfangen, oben. Und damit das der Fall ist, das ist was, was ich haben will,"}, {"id": 353, "start": 2874.88, "end": 2881.16, "text": "damit das der Fall ist, sage ich, order by. Und in dem Fall sage ich mir, okay, sortiere"}, {"id": 354, "start": 2881.16, "end": 2889.32, "text": "mir das, danach die Eintr\u00e4ge nach oben, wo der Text eben dieses Query am Anfang stehen"}, {"id": 355, "start": 2889.32, "end": 2894.76, "text": "hat. Das ist schon ziemlich doof, weil auf der einen Seite suche ich Wildcard und danach"}, {"id": 356, "start": 2894.76, "end": 2898.24, "text": "sortiere ich die, da habe ich das letzte Mal auch nicht dr\u00fcber nachgedacht, und danach"}, {"id": 357, "start": 2898.24, "end": 2902.96, "text": "sortiere ich die nach Dingern, die quasi damit anfangen, da k\u00f6nnte ich das Wear schon komplett"}, {"id": 358, "start": 2902.96, "end": 2910.76, "text": "anders schreiben. Und, wenn ich zum Beispiel hier jetzt mal nur nach H suche, und ich keine"}, {"id": 359, "start": 2910.76, "end": 2918.2, "text": "Ahnung, jetzt 2 Millionen, 2 Millionen Eintr\u00e4ge in der Datenbank finde, dann sortiert der"}, {"id": 360, "start": 2918.2, "end": 2925.88, "text": "mir hier 2 Millionen Eintr\u00e4ge absteigend und von diesen Dingern, die er sortiert hat,"}, {"id": 361, "start": 2925.88, "end": 2932.2, "text": "nimmt er dann am Ende nur 10. Also das ist jetzt nicht unbedingt gerade das alleroptimalste,"}, {"id": 362, "start": 2932.2, "end": 2940.32, "text": "was man so machen kann. Und danach gibt er nur den Text zur\u00fcck, anstatt, aber unten"}, {"id": 363, "start": 2940.32, "end": 2945.0, "text": "ist erstmal wurscht. Also das hier ist das, was es langsam macht. Und wir k\u00f6nnen jetzt"}, {"id": 364, "start": 2945.0, "end": 2949.16, "text": "mal \u00fcberpr\u00fcfen, ob das wirklich das ist, was es langsam macht, weil ich nehme das einfach"}, {"id": 365, "start": 2949.16, "end": 2953.8, "text": "mal raus. Und dann gucken wir mal, ob das schneller ist. Also aktuell sind Queries mit einzelnen"}, {"id": 366, "start": 2953.8, "end": 2960.92, "text": "Buchstaben so 315, 400, irgendwas Millisekunden lang. Und jetzt machen wir mal die Queries"}, {"id": 367, "start": 2960.92, "end": 2965.68, "text": "ohne dieses Sortieren. Das ist nicht das, was ich haben will als Ergebnis, aber nur mal,"}, {"id": 368, "start": 2965.68, "end": 2973.72, "text": "dass man die Hausnummer sieht. So, guck mal, und jetzt sind einzelne Queries f\u00fcr ein Buchstabe"}, {"id": 369, "start": 2973.72, "end": 2980.12, "text": "sind schon nur noch 3 Millisekunden lang. Also das Order By macht es einfach um den Faktor,"}, {"id": 370, "start": 2980.12, "end": 2987.28, "text": "keine Ahnung, 100, 200, langsamer. Das ist jetzt allerdings nicht das, was ich haben will."}, {"id": 371, "start": 2987.28, "end": 2998.24, "text": "Weil, wenn ich hier nach Huts suche, es ist nicht die Eintr\u00e4ge, die mit Huts anfangen"}, {"id": 372, "start": 2998.24, "end": 3003.72, "text": "oben. Und das ist ja das, was ich eigentlich will. Deswegen habe ich mir \u00fcberlegt, wir"}, {"id": 373, "start": 3003.72, "end": 3007.36, "text": "k\u00f6nnten das folgenderma\u00dfen machen. Und da bin ich mir nicht sicher, ob das gescheit"}, {"id": 374, "start": 3007.36, "end": 3012.44, "text": "funktioniert. Also das Order By ist ja auf jeden Fall eine ziemlich dumme Idee gewesen,"}, {"id": 375, "start": 3012.44, "end": 3016.6, "text": "wie ihr jetzt seht. Aber es ist vielleicht noch mal, damit man da mitkommt. Ich wei\u00df"}, {"id": 376, "start": 3016.6, "end": 3023.64, "text": "nicht, Chat, hat man das verstanden, warum das langsam ist? Ja, mit Index ist auch so"}, {"id": 377, "start": 3023.64, "end": 3026.32, "text": "ein Ding. Das k\u00f6nnte man bestimmt sogar, das Order k\u00f6nnte man wahrscheinlich auch"}, {"id": 378, "start": 3026.32, "end": 3031.0, "text": "noch beschleunigen. Ja, aber es ist langsam, weil er hier 2 Millionen Eintr\u00e4ge findet,"}, {"id": 379, "start": 3031.0, "end": 3041.96, "text": "die erst einmal alle sortiert und danach nur 10 St\u00fcck davon nimmt. Ja. Ich k\u00f6nnte mir"}, {"id": 380, "start": 3041.96, "end": 3045.76, "text": "vorstellen, dass der Index hier drauf vielleicht sogar das schneller macht. Aber wir k\u00f6nnen"}, {"id": 381, "start": 3045.76, "end": 3056.6, "text": "das, glaube ich, deutlich besser machen. Zwar, warum hast du auch mal vor, ein kleines Spiel"}, {"id": 382, "start": 3056.6, "end": 3063.56, "text": "zu programmieren? Nee, Spieleprogrammierung, obwohl ich quasi t\u00e4glich MMO, Kreiselgrinden,"}, {"id": 383, "start": 3063.56, "end": 3066.8, "text": "alles m\u00f6gliche mache, ich spiele ja viel. Aber Spieleprogrammierung ist tats\u00e4chlich"}, {"id": 384, "start": 3066.8, "end": 3082.36, "text": "etwas, was mich gar nicht so sehr interessiert. Ist nicht meins. Top hat jeder so seins, aber"}, {"id": 385, "start": 3082.36, "end": 3087.44, "text": "Spieleprogrammierung ist auf jeden Fall nicht meins. So, aber jetzt mal zu dieser Datenbankgeschichte."}, {"id": 386, "start": 3087.44, "end": 3090.92, "text": "Guck mal. Eigentlich, das ist mir nach dem letzten Stream eingefallen, als ich mir das"}, {"id": 387, "start": 3090.92, "end": 3095.88, "text": "noch mal angeguckt habe. Das ist richtig bescheuert. Guck mal. Wir suchen uns alle Eintr\u00e4ge raus"}, {"id": 388, "start": 3095.88, "end": 3108.68, "text": "wo irgendwo drinnen, in dem Fall jetzt HTTP vorkommt, nur um sie danach alle zu sortieren,"}, {"id": 389, "start": 3108.68, "end": 3117.32, "text": "danach ob der Antrag, ob das damit anf\u00e4ngt. Also eigentlich k\u00f6nnten wir uns das doch komplett"}, {"id": 390, "start": 3117.32, "end": 3125.2, "text": "sparen und zwei Queries machen. N\u00e4mlich ein Query, was einfach nur checkt, f\u00e4ngt das"}, {"id": 391, "start": 3125.2, "end": 3137.8, "text": "damit an und findet da 10 Elemente. Und wenn er weniger als 10 Elemente findet, dann macht"}, {"id": 392, "start": 3137.8, "end": 3146.12, "text": "er noch ein zweites Query, nur, dass er dann ein Wildcard Query macht. Kannst du nicht"}, {"id": 393, "start": 3146.12, "end": 3151.68, "text": "auch einfach, nachdem du 10 genommen hast, sortieren? Nee, weil dann sortiert er ja nur"}, {"id": 394, "start": 3151.68, "end": 3157.48, "text": "die 10 und da sind nicht zwangsl\u00e4ufig die, die damit anfangen oben. Das funktioniert"}, {"id": 395, "start": 3157.48, "end": 3165.48, "text": "nicht. So, wenn ich das hier jetzt ausf\u00fchre, dann sollte zumindest ein Teil davon schonmal"}, {"id": 396, "start": 3165.48, "end": 3172.12, "text": "stimmen. Hoffe ich mal. Wenn ich jetzt n\u00e4mlich nach Hats suche, dann ist Hats am Anfang und"}, {"id": 397, "start": 3172.12, "end": 3186.36, "text": "es ist immerhin noch relativ geschwind. Warum brauchen das nur sieben und Hats und Hats"}, {"id": 398, "start": 3186.36, "end": 3195.76, "text": "brauchen 29? Zumindest man sieht, die eigentlichen Queries jetzt f\u00fcr ein Buchstaben und so sind"}, {"id": 399, "start": 3195.76, "end": 3204.64, "text": "saum\u00e4\u00dfig schnell und es sind die, die damit anfangen oben. Nat\u00fcrlich kann es jetzt sein,"}, {"id": 400, "start": 3204.64, "end": 3211.48, "text": "dass wenn man zum Beispiel nach so was wie HTTP sucht, er findet nix. Warum findet er"}, {"id": 401, "start": 3211.48, "end": 3218.76, "text": "mit HTTP nix? Weil HTTP in der Mitte ist und HTTP eben nicht vorne steht. Deswegen klappt"}, {"id": 402, "start": 3218.76, "end": 3222.76, "text": "das nicht. So, und ich hab mir gedacht, man k\u00f6nnte doch, man k\u00f6nnte doch, da m\u00fcssen wir"}, {"id": 403, "start": 3222.76, "end": 3227.0, "text": "ein bisschen basteln. Das ist alles, was ich mir im Vorfeld \u00fcberlegt hab. Man k\u00f6nnte"}, {"id": 404, "start": 3227.0, "end": 3236.28, "text": "doch jetzt einfach gucken, findet er 10 Eintr\u00e4ge hiermit? Wenn es weniger als 10 sind, dann"}, {"id": 405, "start": 3236.28, "end": 3243.72, "text": "macht er nochmal das gleiche, nur mit einem Wildcardquery. So, und das mit sortieren schenken"}, {"id": 406, "start": 3243.72, "end": 3248.08, "text": "wir uns einfach. Das brauch ich ja dann nicht. Ich muss ja nicht sortieren, weil ich ja schon"}, {"id": 407, "start": 3248.08, "end": 3253.2, "text": "automatisch hiermit alle, die damit anfangen, oben hab. Ich suche ja nur die Dinge, die damit"}, {"id": 408, "start": 3253.2, "end": 3258.04, "text": "anfangen. Ich muss ja nicht Wildcard suchen, um dann danach zu sortieren, sondern ich kann"}, {"id": 409, "start": 3258.04, "end": 3264.08, "text": "einfach direkt suchen, nach f\u00e4ngt an. Hast du da nicht in der zweiten Query die Ergebnisse"}, {"id": 410, "start": 3264.08, "end": 3270.08, "text": "der ersten nochmal drinne? Es kann sein. Das kann zumindest passieren, dann m\u00fcssen wir"}, {"id": 411, "start": 3270.08, "end": 3278.6, "text": "das irgendwie uniken oder so. Mal gucken. Also, das sieht ja in soweit schon mal ganz"}, {"id": 412, "start": 3278.6, "end": 3283.88, "text": "sinnvoll aus. Wir machen nochmal, wir f\u00fchren nochmal was zum Testen ein. Nennen wir mal"}, {"id": 413, "start": 3283.88, "end": 3291.44, "text": "hier Max Results und das sind aktuell 10. Aber, dass ich da mal ein bisschen hoch und"}, {"id": 414, "start": 3291.44, "end": 3295.64, "text": "runter schalten kann an Ausgaben und gucken, ob das passt. Doppelte muss ich wahrscheinlich"}, {"id": 415, "start": 3295.64, "end": 3304.52, "text": "filtern. Genau. So, das hier lassen wir erstmal weg. Das muss ich mir unten merken. So, also"}, {"id": 416, "start": 3304.52, "end": 3322.76, "text": "das ist das erste Query. Okay, und jetzt gucken wir, ob Result Count, oder macht das so Sinn?"}, {"id": 417, "start": 3322.76, "end": 3327.44, "text": "Wenn das kleiner Max Results ist, und wenn das kleiner ist, dann wei\u00df ich, das hier hat"}, {"id": 418, "start": 3327.44, "end": 3331.96, "text": "keine 10 Ergebnisse, oder in dem Fall 10 Ergebnisse gebracht. Wenn das keine 10 Ergebnisse"}, {"id": 419, "start": 3331.96, "end": 3342.56, "text": "gebracht hat, dann muss ich nochmal, dann muss ich nochmal einen Query machen. So. Was sagst"}, {"id": 420, "start": 3342.56, "end": 3353.16, "text": "du eigentlich zu, zu was? Zu CutefishOS. Was f\u00fcr ein Ding. Hab ich doch nie geh\u00f6rt. Oh,"}, {"id": 421, "start": 3353.16, "end": 3373.48, "text": "China-Chinesen-Kram. Cutefish. Warum nicht CutechatOS? CutefishOS. Oh, das l\u00e4dt ja schon"}, {"id": 422, "start": 3373.48, "end": 3382.16, "text": "mal sehr geschwind. Highspeed aus China. Wird bestimmt \u00fcber irgendeine ESP32 Steckdose"}, {"id": 423, "start": 3382.16, "end": 3396.12, "text": "ausgeliefert oder so. Ach, so sieht China-Milch aus. Make a better DesktopOS. Simplicity, Beauty"}, {"id": 424, "start": 3396.12, "end": 3404.6, "text": "and Practicality. User Experience. CutefishOS. Noch mehr Standard-Applikationen nachgebaut."}, {"id": 425, "start": 3404.6, "end": 3417.28, "text": "Eine G\u00fcte, ey. Muss das denn sein? Cutefish Desktop. Global Menu. Habe ich noch nie ausprobiert,"}, {"id": 426, "start": 3417.28, "end": 3425.2, "text": "aber ich bin auch immer skeptisch \u00fcber China-Destributionen. Ernsthaft. Den Download gibt es \u00fcber Mega oder"}, {"id": 427, "start": 3425.2, "end": 3445.32, "text": "Google Drive. Das ist ja sehr sicher und sehr vertrauensw\u00fcrdig. Auch GitHub haben sie auch"}, {"id": 428, "start": 3445.32, "end": 3455.84, "text": "am Start. Mega Upload. Ja, den brauchen wir auch mal wieder. Den brauchen wir auch mal."}, {"id": 429, "start": 3455.84, "end": 3463.64, "text": "Sekunde, Leute. Das muss jetzt mal kurz sein. Mega Upload Song. Kim wird uns schon nicht"}, {"id": 430, "start": 3463.64, "end": 3478.04, "text": "Copyright striken. Ich glaube, das ist der letzte, der das macht. Yeah."}, {"id": 431, "start": 3493.64, "end": 3506.88, "text": "Mega Upload. Der Kerl hat garantiert keine Ahnung, woran er da drinnen gelandet ist,"}, {"id": 432, "start": 3506.88, "end": 3513.72, "text": "warum er das \u00fcberhaupt sagen sollte. Die haben so keinen Plan gehabt, von was die eigentlich"}, {"id": 433, "start": 3513.72, "end": 3541.84, "text": "reden. So, genug jetzt. Genug Mega Upload Song. Das muss jetzt einmal wieder sein. Wie"}, {"id": 434, "start": 3541.84, "end": 3546.0, "text": "viel Geld hat er ihnen in die Hand gedr\u00fcckt? Ich glaube eher, wahrscheinlich war es nicht"}, {"id": 435, "start": 3546.0, "end": 3550.36, "text": "umsonst, aber ich glaube eher, dass das so diese typische Geschichte war, wie hier auf"}, {"id": 436, "start": 3550.36, "end": 3555.04, "text": "Twitch auch manchmal Leute in Chat kommen und so nach dem Motto, kannst du mal kurz"}, {"id": 437, "start": 3555.04, "end": 3562.32, "text": "Max gr\u00fc\u00dfen oder sowas. Die waren, die sind dann dann irgendwelche Agents von denen ran"}, {"id": 438, "start": 3562.32, "end": 3566.24, "text": "und haben gesagt, ja hier, wir sind ein Radiosender oder was auch immer, k\u00f6nnt ihr mal kurz irgendwie"}, {"id": 439, "start": 3566.24, "end": 3569.64, "text": "das und das sagen? Und dann haben wir das, da werden die wahrscheinlich nicht nein sagen,"}, {"id": 440, "start": 3569.64, "end": 3577.24, "text": "ich habe keine Ahnung gehabt, worum es ging. Der hat ihnen bestimmt nicht gesagt, ja ich"}, {"id": 441, "start": 3577.24, "end": 3581.92, "text": "habe hier einen Hostingservice, wo die Leute quasi eure Musik hochladen k\u00f6nnen und ihr"}, {"id": 442, "start": 3581.92, "end": 3587.72, "text": "verdient da nichts dran und das ist nice. Bewerbt das mal. Das hat er ihnen bestimmt"}, {"id": 443, "start": 3587.72, "end": 3600.84, "text": "nicht gesagt. War ganz davon abgesehen. Ich habe damit keine Schmerzen. Man sieht es aktuell"}, {"id": 444, "start": 3600.84, "end": 3609.72, "text": "an der ganzen Thematik aus Abos, die man holen soll, von Amazon bis Netflix bis Disney plus"}, {"id": 445, "start": 3609.72, "end": 3617.48, "text": "bis sonst was in der Richtung und jetzt wundern sie sich alle, oh nein, Sicherheitskopieren"}, {"id": 446, "start": 3617.48, "end": 3625.48, "text": "verbreiten sich wieder mehr als vorher. Nein, wirklich, da h\u00e4tte ja keiner drauf kommen"}, {"id": 447, "start": 3625.48, "end": 3629.6, "text": "k\u00f6nnen, dass die Leute lieber wieder den Schei\u00df illegal runterladen, als sich 3000"}, {"id": 448, "start": 3629.6, "end": 3634.92, "text": "Abos zu kaufen. Das haben wir ja noch nie gehabt und da w\u00e4ren wir nie im Vorfeld drauf"}, {"id": 449, "start": 3634.92, "end": 3643.6, "text": "gekommen, dass das so wird. Ja und da wundern sie sich jetzt. Das ist so, wie die Musikindustrie"}, {"id": 450, "start": 3643.6, "end": 3649.4, "text": "sich gewundert hat zu Zeiten von Napster, dass die Leute keinen Bock mehr haben, Audio-CDs"}, {"id": 451, "start": 3649.4, "end": 3654.84, "text": "zu kaufen und dann auch noch in Werbespots als Mama-wo-ist-Papa im Knastweiler Raub kopiert"}, {"id": 452, "start": 3654.84, "end": 3664.64, "text": "hat dargestellt zu werden. Und siehe da, es funktioniert. Kaum gibt es da gescheite Abos"}, {"id": 453, "start": 3664.64, "end": 3671.72, "text": "in der Richtung, schon ist das deutlich weniger geworden und was Filme und sowas angeht,"}, {"id": 454, "start": 3671.72, "end": 3678.52, "text": "da bewegen sie sich aktuell davon weg. Das hei\u00dft, mich wundert das nicht, dass das zunimmt."}, {"id": 455, "start": 3678.52, "end": 3687.92, "text": "Ob das jetzt, ja mal sagen, ob das jetzt ethisch verdrehtbar ist oder wie auch immer, sich"}, {"id": 456, "start": 3687.92, "end": 3691.92, "text": "die Sachen da illegal runterzuladen, das kann jeder f\u00fcr sich selbst \u00fcberlegen, das ist"}, {"id": 457, "start": 3691.92, "end": 3696.04, "text": "mir vollkommen egal, das k\u00f6nnt ihr machen oder sein lassen, wie ihr lustig seid. Aber"}, {"id": 458, "start": 3696.04, "end": 3703.16, "text": "die Tatsache, dass es so sein wird, h\u00e4tte auch die Filmindustrie meilenweit im Voraus"}, {"id": 459, "start": 3703.16, "end": 3714.16, "text": "sehen k\u00f6nnen. Das ist wirklich jetzt nichts \u00dcberraschendes gewesen. So ist es ja im Endeffekt"}, {"id": 460, "start": 3714.16, "end": 3719.64, "text": "und seit man zu Zeiten, wo man keine Ahnung mit einem Netflix-Abo oder mit einem Amazon-Abo"}, {"id": 461, "start": 3719.64, "end": 3723.68, "text": "sich das meiste, was man gucken wollte, angucken konnte, am besten auch noch in Originalsprache"}, {"id": 462, "start": 3723.68, "end": 3731.28, "text": "und sowas, was ja eben viele wollen. Alles okay? Aber jetzt muss sie wieder anfangen"}, {"id": 463, "start": 3731.28, "end": 3735.32, "text": "mit, nein, wir nehmen unsere Filme raus und du brauchst lieber 500 Abos. Das wundert"}, {"id": 464, "start": 3735.32, "end": 3741.6, "text": "mich nicht, dass die Leute wieder mehr anfangen, auf Sicherheitskopien zu setzen. Das ist gut"}, {"id": 465, "start": 3741.6, "end": 3746.2, "text": "oder schlecht, das hat damit \u00fcberhaupt nichts zu tun. Es ist offensichtlich, dass es so"}, {"id": 466, "start": 3746.2, "end": 3753.88, "text": "passieren wird und es ist auch so passiert. Bist du nicht Max FPS? Doch, nein, das stimmt,"}, {"id": 467, "start": 3753.88, "end": 3760.24, "text": "das gibt's gar nicht, ich bin Wubblers. Was Linus meinte, das war bestimmt G-Baded, bei"}, {"id": 468, "start": 3760.24, "end": 3766.96, "text": "ihm kann ich mir das nicht vorstellen, dass er wirklich mit, wobei, keine Ahnung. Mich"}, {"id": 469, "start": 3766.96, "end": 3770.56, "text": "juckt das nicht, wenn einer meinen Twitch-Stream mit Ad-Blog guckt oder meine YouTube-Videos"}, {"id": 470, "start": 3770.56, "end": 3779.08, "text": "mit Ad-Blog guckt es mir vollkommen egal. K\u00f6nnen ruhig alle machen."}, {"id": 471, "start": 3779.08, "end": 3806.12, "text": "Ja, meine ich ja, das war klar, dass das so sein wird. Naja, egal, aber das war finde"}, {"id": 472, "start": 3806.12, "end": 3812.16, "text": "ich offensichtlich, dass das so kommen wird. Ja und Cutefish OS werde ich mir nicht geben,"}, {"id": 473, "start": 3812.16, "end": 3818.84, "text": "weil ganz ehrlich, ein China-Chinesen-OS, das nur \u00fcber Mega und Google Drive vertrieben"}, {"id": 474, "start": 3818.84, "end": 3838.08, "text": "wird, ist mir irgendwie ein wenig Suspekt oder Sus, wie man heutzutage sagt. Okay,"}, {"id": 475, "start": 3838.08, "end": 3847.92, "text": "machen wir mal weiter. Also Datenbank-Krempel. Also die Queries sind jetzt auf jeden Fall"}, {"id": 476, "start": 3847.92, "end": 3854.2, "text": "schon mal deutlich schneller. Guckt hier, B\u00e4m, sieben Millisekunden. Suchen wir mal nach,"}, {"id": 477, "start": 3854.2, "end": 3861.72, "text": "was? Ah, Delia, 29 Millisekunden. Also die Queries sind fast as fuck, k\u00f6nnte man sagen."}, {"id": 478, "start": 3861.72, "end": 3880.0, "text": "Ja, wir finden nur Sachen, die am Anfang stehen, nicht Sachen, die in der Mitte stehen."}, {"id": 479, "start": 3880.0, "end": 3884.12, "text": "Geben wir mal die Request-Time auf der Web aus. Ja, das k\u00f6nnte ich machen, da m\u00fcsste"}, {"id": 480, "start": 3884.12, "end": 3888.6, "text": "ich mir aber irgendwie einen besseren Return-Wert \u00fcberlegen, anstatt einfach nur den Text."}, {"id": 481, "start": 3888.6, "end": 3902.48, "text": "Ach so, jetzt wei\u00df ich auch, warum das so langsam ist. Nee, Stack. Wait a minute. Warum"}, {"id": 482, "start": 3902.48, "end": 3918.44, "text": "funktioniert denn das \u00fcberhaupt? Warum funktioniert das? Das sollte eigentlich gar nicht funktionieren."}, {"id": 483, "start": 3918.44, "end": 3948.24, "text": "\u00c4h. H\u00e4? Moment. Mal kurz, mal kurz die Response angucken hier. So. Response? Hab ich nicht"}, {"id": 484, "start": 3948.24, "end": 3964.2, "text": "neu gestartet? Ich glaube, ich hab's nicht neu gestartet, ne? Ah, ja, ja, okay. Ja,"}, {"id": 485, "start": 3964.2, "end": 3967.92, "text": "ich hab's nicht neu gestartet, weil ich filter gar nicht den Text raus, ich geb aktuell"}, {"id": 486, "start": 3967.92, "end": 3971.8, "text": "die kompletten Objekte zur\u00fcck. Deswegen hab ich mich gewundert, wie er so schlau ist und"}, {"id": 487, "start": 3971.8, "end": 3978.56, "text": "checkt, dass es den Text davon nehmen soll. Ist er aber nicht. Okay, okay, gut, gut, gut."}, {"id": 488, "start": 3978.56, "end": 3981.72, "text": "Jetzt ergibt das Sinn. Ich will aber gar nicht die kompletten Objekte zur\u00fcckgeben."}, {"id": 489, "start": 3981.72, "end": 3988.8, "text": "Ich hab mich nur gefragt, warum ist das aktuell so? Das waren wir hier unten rein. Select,"}, {"id": 490, "start": 3988.8, "end": 3994.8, "text": "Text. So, wunderbar. So, wenn ich jetzt neu starte, dann funktioniert's n\u00e4mlich auch wieder."}, {"id": 491, "start": 3994.8, "end": 4006.56, "text": "So. A. Das erste Query ist immer ein bisschen langsam. H. Sechzehn Millisekunden. A. Achtf\u00fcnfzig"}, {"id": 492, "start": 4006.56, "end": 4013.08, "text": "Millisekunden. L. Vierundvierzig Millisekunden. Das ist relativ schnell. Okay. \u00c4hm. Wichtig"}, {"id": 493, "start": 4013.08, "end": 4016.96, "text": "ist, dass so diese einzelnen Buchstaben, die haben ja vorteilweise vierundf\u00fcnfzig Millisekunden"}, {"id": 494, "start": 4016.96, "end": 4021.84, "text": "gedauert. So, und jetzt hab ich mir \u00fcberlegt, wir gucken jetzt einfach, ob es weniger als"}, {"id": 495, "start": 4021.84, "end": 4025.52, "text": "zehn Sachen gefunden werden. Und wenn weniger als zehn Sachen gefunden werden, dann machen"}, {"id": 496, "start": 4025.52, "end": 4036.8, "text": "wir das Query einfach nochmal neu. Allerdings jetzt mit dem Wildcard Operator drin. Also"}, {"id": 497, "start": 4036.8, "end": 4043.0, "text": "kopieren wir das jetzt nochmal. Kann man das, kann man das \u00fcberhaupt, kann ich das jetzt"}, {"id": 498, "start": 4043.0, "end": 4051.28, "text": "nochmal so machen? Und sollte ich hier count machen oder sollte ich das hier schon? Mal"}, {"id": 499, "start": 4051.28, "end": 4056.72, "text": "gucken, mal gucken. Mir m\u00fcssen wir ein bisschen ausprobieren. So. Das hei\u00dft, wenn ich jetzt"}, {"id": 500, "start": 4056.72, "end": 4067.84, "text": "weniger als zehn hab, dann will ich Wildcard suchen. So. Setz doch die Abfrage komplett"}, {"id": 501, "start": 4067.84, "end": 4072.32, "text": "in die If-Abfrage rein, lass die obere weg, oder dann funktioniert's doch nicht. Was soll"}, {"id": 502, "start": 4072.32, "end": 4080.56, "text": "denn das bringen? Wenn ich die obere weglasse. Wenn ich nur die mach, dann hab ich die Dinger"}, {"id": 503, "start": 4080.56, "end": 4084.96, "text": "nicht sortiert in der Reihenfolge, wie ich sie haben will. Wenn ich es so mach, dann"}, {"id": 504, "start": 4084.96, "end": 4095.4, "text": "hab ich sie in der Reihenfolge sortiert, wie ich es haben will. Du solltest Result auf"}, {"id": 505, "start": 4095.4, "end": 4107.6, "text": "jeden Fall den oberen Toolist machen. Schreib ich mir mal auf. Kann aber sein, dass es nicht"}, {"id": 506, "start": 4107.6, "end": 4118.08, "text": "funktioniert. Muss man mal gucken. Also. Moment, Moment. Ich muss mal kurz \u00fcberlegen. Also."}, {"id": 507, "start": 4118.08, "end": 4123.6, "text": "Wenn das weniger als zehn hat, wenn das hier weniger als zehn hat, dann machen wir nochmal"}, {"id": 508, "start": 4123.6, "end": 4146.72, "text": "eine Abfrage mit dem da, jetzt allerdings Wildcard-Abfrage. Take zehn. Ha. Jetzt muss"}, {"id": 509, "start": 4146.72, "end": 4152.12, "text": "ich die, irgendjemand im Chat hat vorhin geschrieben, jetzt hab ich Ergebnisse doppelt. Das kann"}, {"id": 510, "start": 4152.12, "end": 4157.92, "text": "passieren. Ich m\u00fcsste die jetzt irgendwie UNIQ machen, so. Irgendwie, wie mach ich denn"}, {"id": 511, "start": 4157.92, "end": 4172.6, "text": "UNIQ gescheit? Wie stelle ich jetzt sicher, dass Ergebnisse nur einmal drin sind? Set?"}, {"id": 512, "start": 4172.6, "end": 4180.28, "text": "Wie Set? Du meinst so eine Art Dictionary? Nee, das muss schon, nein, das muss schon"}, {"id": 513, "start": 4180.28, "end": 4195.2, "text": "in SQL sein. Distinkt. Nee, ich will ja nicht Distinkt, ich will ja, ich will ja, ok, wenn"}, {"id": 514, "start": 4195.2, "end": 4204.04, "text": "wir das jetzt Mengenlehre technisch machen, will ich ja eine, wie hei\u00dfen das beide Mengen"}, {"id": 515, "start": 4204.04, "end": 4224.6, "text": "zusammen? \u00c4hm. Nee, warte mal, wie hei\u00dft das? Schnittmenge? Nee, Schnittmenge will"}, {"id": 516, "start": 4224.6, "end": 4231.64, "text": "ich nicht, das sind beide, die sich \u00fcberschneiden. Ich will beide Mengen zusammen, aber die Elemente,"}, {"id": 517, "start": 4231.64, "end": 4241.16, "text": "die doppelt sind, will ich nur einmal haben. Ja, so combine sowas in der Richtung, jaja,"}, {"id": 518, "start": 4241.16, "end": 4259.92, "text": "genau. \u00c4hm. Wie nennt man das denn? Ok, wir m\u00fcssen jetzt, ok, Wikipedia, Mengenlehre."}, {"id": 519, "start": 4259.92, "end": 4277.92, "text": "Was denn? Mengenlehre. Union, ja, Kompliment Mengenlehre. Ah, yes, excellent. Ja, das ist"}, {"id": 520, "start": 4277.92, "end": 4302.36, "text": "genau das, genau das will ich haben, ja, ja, ja. Obvious, obvious. Gachibas Mengenlehre."}, {"id": 521, "start": 4302.36, "end": 4316.88, "text": "Union, ok, Union Mengenlehre. Kompliment. Gibt es da nicht ein paar gescheite, aha, ok,"}, {"id": 522, "start": 4316.88, "end": 4327.28, "text": "eine echte Teilmenge, Schnittmenge, Vereinigung, ich will eine Vereinigungsmenge haben. So sieht"}, {"id": 523, "start": 4327.28, "end": 4340.36, "text": "es aus, das will ich haben. Eine Vereinigungsmenge haben. Excellent, alles klar, Union sagt der"}, {"id": 524, "start": 4340.36, "end": 4354.64, "text": "Chat. Das hei\u00dft, in dem Fall, ist das sowas? Oh, guck mal da, Union von Result, von dem"}, {"id": 525, "start": 4354.64, "end": 4366.68, "text": "urspr\u00fcnglichen. Und das k\u00f6nnten jetzt ja mehr sein als 10, also ich nehme hier von maximal"}, {"id": 526, "start": 4366.68, "end": 4373.36, "text": "10, davon maximal 10, das k\u00f6nnten also im schlimmsten Fall 20 sein, also muss ich am"}, {"id": 527, "start": 4373.36, "end": 4391.16, "text": "Ende nochmal ein Take-Things machen, oder? Ob das so funktioniert? Keine Ahnung. Der Chat"}, {"id": 528, "start": 4391.16, "end": 4401.16, "text": "sagt schon, das geht nicht. Ja, warum eigentlich? Wir probieren das jetzt mal aus. Erst Union,"}, {"id": 529, "start": 4401.16, "end": 4413.84, "text": "dann Take. Ne, ne, wenn ich erst Union mache, dann ist es ja wieder lahm as fuck, weil dann"}, {"id": 530, "start": 4413.84, "end": 4419.12, "text": "mache ich ja die Union im Zweifelsfall wieder auf 2,5 Millionen gefundenen Elemente. Ok,"}, {"id": 531, "start": 4419.12, "end": 4433.84, "text": "so guck mal, wie schnell wir jetzt sind. Also, HTTP. Aushalt funktioniert. HTTP. Ihh, das"}, {"id": 532, "start": 4433.84, "end": 4458.24, "text": "ist ja slow. Slow AF. 935. Ihh. Warum ist das so langsam? W\u00e4h? Warum ist das jetzt so"}, {"id": 533, "start": 4458.24, "end": 4476.8, "text": "langsam? Aber der macht ja Union mit nichts. Ok, Moment, ich lasse das mit Union mal kurz"}, {"id": 534, "start": 4476.8, "end": 4500.64, "text": "raus. Testen. Ok. Das ist ja immer... Warum ist das so mega langsam?"}, {"id": 535, "start": 4500.64, "end": 4526.76, "text": "H\u00e4? 946? Alter, das ist ja... Hab ich jetzt irgendwas da nicht richtig durchdacht? Moment,"}, {"id": 536, "start": 4526.76, "end": 4538.28, "text": "das muss ich noch mal wegmachen. Das ist ja im Prinzip das gleiche, wie wenn ich das hier"}, {"id": 537, "start": 4538.28, "end": 4547.2, "text": "dahin mache. Warum? Warum ist das jetzt so langsam? Schneller als mit Union. Ja, aber"}, {"id": 538, "start": 4547.2, "end": 4560.96, "text": "eine Sekunde Query Time. Ich glaube, es geht los. Jetzt ist es fast as fuck. \u00c4hh. Moment,"}, {"id": 539, "start": 4560.96, "end": 4569.88, "text": "das verstehe ich jetzt nicht. Warum macht das \u00fcberhaupt einen Unterschied? Also, das"}, {"id": 540, "start": 4569.88, "end": 4577.56, "text": "m\u00fcsste jetzt, das d\u00fcrfte h\u00f6chstens, das d\u00fcrfte h\u00f6chstens 10 Millisekunden sein oder"}, {"id": 541, "start": 4577.56, "end": 4587.6, "text": "so. Warum ist das in dem If drin so viel langsamer? Das check ich nicht. Das ist doch genau das."}, {"id": 542, "start": 4587.6, "end": 4593.76, "text": "Ob der das jetzt vorher macht und nichts... Ah, nee. Das liegt da dran, weil der nichts"}, {"id": 543, "start": 4593.76, "end": 4601.0, "text": "findet. Moment, Moment, Moment. Ich wei\u00df, woran das liegt. Wartet mal. Wenn der nichts"}, {"id": 544, "start": 4601.0, "end": 4628.48, "text": "findet, ist es langsam. Kann das sein? Wartet ihr PS? Alter. Fulltext Search bringt hier"}, {"id": 545, "start": 4628.48, "end": 4638.4, "text": "an der Stelle nichts. Weil das Full in Fulltext Search bezieht sich auf ganze W\u00f6rter. Nee,"}, {"id": 546, "start": 4638.4, "end": 4643.6, "text": "da dran liegt... Warum ist das denn so langsam jetzt? Warum wird das langsam dadurch? Das"}, {"id": 547, "start": 4643.6, "end": 4656.72, "text": "verstehe ich nicht. Hab ich hier irgendwas Bl\u00f6dsinniges drinne? Ja, das Count, das"}, {"id": 548, "start": 4656.72, "end": 4671.6, "text": "Count wird es ja auch nicht sein. Das Count ist Null dann, das kannst du jetzt... Warum"}, {"id": 549, "start": 4671.6, "end": 4682.12, "text": "ist das so langsam? Ist das wirklich das Count? Ist das das Count, was so langsam ist? Okay,"}, {"id": 550, "start": 4682.12, "end": 4702.48, "text": "Null wie Count. Das ist das Count, was so... Warum ist denn das Z\u00e4hlen von nichts? Na gut,"}, {"id": 551, "start": 4702.48, "end": 4705.68, "text": "da muss die komplette Datenbank durchgehen, um festzustellen, dass es wirklich nichts"}, {"id": 552, "start": 4705.68, "end": 4719.88, "text": "gibt. Aber das es nichts gibt, m\u00fcsste er doch eigentlich relativ schnell rausbekommen."}, {"id": 553, "start": 4719.88, "end": 4734.0, "text": "Weil er in seinem Index nachguckt und feststellt, es gibt keine W\u00f6rter oder es gibt nichts,"}, {"id": 554, "start": 4734.0, "end": 4740.44, "text": "was mit... Vielleicht, weil es mehr als drei Buchstaben sind? Moment, Moment, das muss"}, {"id": 555, "start": 4740.44, "end": 4750.72, "text": "ich jetzt mal ausprobieren. Beim Count wird es das erste Mal ausgef\u00fchrt, ja. Warte,"}, {"id": 556, "start": 4750.72, "end": 4766.72, "text": "warte. Das ist auch nicht viel langsamer. Warum ist das so langsam? Macht das erste Result"}, {"id": 557, "start": 4766.72, "end": 4772.68, "text": "zu einer Liste? Ja, das habe ich mir auch schon \u00fcberlegt, aber die Sache ist halt die, aus"}, {"id": 558, "start": 4772.68, "end": 4778.0, "text": "irgendwelchen Gr\u00fcnden dauert das komplette Ding auszuf\u00fchren so langsam. Das w\u00fcrde ich"}, {"id": 559, "start": 4778.0, "end": 4784.92, "text": "jetzt auch als n\u00e4chstes... Aber h\u00e4? Warum ist das Count Query so krass langsam? Wird"}, {"id": 560, "start": 4784.92, "end": 4789.28, "text": "es \u00fcberhaupt indiziert, wenn man mit einem Triggum im String sucht? Ja, wird es. Aber"}, {"id": 561, "start": 4789.28, "end": 4795.04, "text": "anders als ein normaler Index. Das muss ich jetzt mal zeigen f\u00fcr alle, die neu dabei"}, {"id": 562, "start": 4795.04, "end": 4803.48, "text": "sind. Der benutzt, wo habe ich es denn hier? Da. Der benutzt, um das zu indizieren, eine"}, {"id": 563, "start": 4803.48, "end": 4809.44, "text": "Postgres-Extension, n\u00e4mlich PG Triggum, woran f\u00fcr jedes Wort immer Dreierpaare speichert"}, {"id": 564, "start": 4809.44, "end": 4816.24, "text": "in einem Index und deswegen relativ schnell W\u00f6rter durchsuchen kann, auch bei Wildcard"}, {"id": 565, "start": 4816.24, "end": 4822.8, "text": "in der Mitte. Dadurch sind Inserts langsamer und die Datenbank wird insgesamt gr\u00f6\u00dfer,"}, {"id": 566, "start": 4822.8, "end": 4843.16, "text": "und die Suche ist viel, viel, viel, viel, viel schneller. Ich habe irgendwas bestimmt"}, {"id": 567, "start": 4843.16, "end": 4848.64, "text": "nicht richtig beachtet. Ich habe irgendwo da was Bl\u00f6des drin. Ein Count davon kann"}, {"id": 568, "start": 4848.64, "end": 4858.24, "text": "auch nicht so langsam sein. Gut, das ist jetzt die \u00fcbliche Geschichte. So, da findet er"}, {"id": 569, "start": 4858.24, "end": 4868.44, "text": "was. So, jetzt HTT. Das ist langsam? Okay, das verstehe ich jetzt nicht so genau. Das"}, {"id": 570, "start": 4868.44, "end": 4879.68, "text": "ist langsam. Alles klar. Ich wei\u00df nicht warum, aber aus irgendwelchen Gr\u00fcnden ist das hier"}, {"id": 571, "start": 4879.68, "end": 4906.12, "text": "langsam. Warum? Warum ist das langsam? Das liegt nicht wirklich am Count. Das liegt an"}, {"id": 572, "start": 4906.12, "end": 4932.0, "text": "dem eigentlichen Query. Warum ist das so langsam? HTT. Watt? Watt? H\u00e4? Achso, ja,"}, {"id": 573, "start": 4932.0, "end": 4943.44, "text": "das ist ja... Moment, Moment, Moment. Das muss ich hier unten reinmachen. Am Ende, hier"}, {"id": 574, "start": 4943.44, "end": 4951.16, "text": "wird ja das Query erst ausgef\u00fchrt. Aber, okay. Der m\u00fcsste doch relativ schnell feststellen,"}, {"id": 575, "start": 4951.16, "end": 4965.96, "text": "dass er nichts findet. Ah, das ist. Das ist einfach lahm, wenn er nichts findet. Gut,"}, {"id": 576, "start": 4965.96, "end": 4975.6, "text": "das verstehe ich jetzt nicht. Sehr spannend. Habe ich jetzt nicht gedacht. Ich h\u00e4tte jetzt"}, {"id": 577, "start": 4975.6, "end": 4982.04, "text": "eigentlich vermutet, dass er dadurch, dass er das quasi so special indiziert, sehr schnell"}, {"id": 578, "start": 4982.04, "end": 4996.0, "text": "feststellen kann, wenn es eben keine Worte gibt, die das enthalten. Wir machen gar kein"}, {"id": 579, "start": 4996.0, "end": 5002.92, "text": "Count. Am Count liegt es nicht. Das Query, wenn er nichts findet, ist lahm as fuck. Und"}, {"id": 580, "start": 5002.92, "end": 5016.48, "text": "ich wei\u00df nicht so genau warum, wenn ich ehrlich bin. Man w\u00fcrde denken, es ist langsam, weil"}, {"id": 581, "start": 5016.48, "end": 5021.12, "text": "er alles durchgehen muss, um zu gucken, ob er wirklich nichts findet. Aber dadurch, dass"}, {"id": 582, "start": 5021.12, "end": 5027.36, "text": "er die W\u00f6rter in so Dreierbuchstabenpaare zerlegt, m\u00fcsste der Instant eigentlich nachgucken"}, {"id": 583, "start": 5027.36, "end": 5033.04, "text": "k\u00f6nnen, dass es eben nichts gibt, was damit anf\u00e4ngt. Aber das ist Instant halt ziemlich"}, {"id": 584, "start": 5033.04, "end": 5047.44, "text": "schnell. Ja, das wei\u00df ich jetzt auch nicht. Keine Ahnung. Wie sieht es aus, wenn du das"}, {"id": 585, "start": 5047.44, "end": 5052.84, "text": "Query meinst, und da bin ich zu bl\u00f6d f\u00fcr. Nat\u00fcrlich ist es daf\u00fcr gemacht, es gibt"}, {"id": 586, "start": 5052.84, "end": 5065.56, "text": "extra eine Extension daf\u00fcr. So. Hey, welchen Editor IDE nutzt ihr? Komme von Java, NetBeans"}, {"id": 587, "start": 5065.56, "end": 5069.8, "text": "und bin auf der Suche nach m\u00f6glichen... Ne, guck dir das... Also gerade, wenn du aus dem"}, {"id": 588, "start": 5069.8, "end": 5078.56, "text": "Java-Umfeld kommst, kennst du wahrscheinlich IntelliJ. Und die Hersteller von IntelliJ,"}, {"id": 589, "start": 5078.56, "end": 5090.16, "text": "die haben ganz viele IDE's. Zum Beispiel haben die auch eine.NET IDE und eine Go-IDE und"}, {"id": 590, "start": 5090.16, "end": 5096.56, "text": "auch eine C-IDE und auch eine Python-IDE. Und wenn du dir... Also hier siehst du ja,"}, {"id": 591, "start": 5096.56, "end": 5103.4, "text": "was die alles am Start haben. Das ist C, das ist ihr komischer Visual Studio Code Konkurrenz."}, {"id": 592, "start": 5103.4, "end": 5109.16, "text": "Dann haben die Goland am Start, IntelliJ f\u00fcr Java, PHPStorm, PyCharm, Rider, RubyMine,"}, {"id": 593, "start": 5109.16, "end": 5115.6, "text": "falls jemand Ruby machen will, WebStorm. So, und wenn du das alles haben willst, weil du"}, {"id": 594, "start": 5115.6, "end": 5120.96, "text": "sagst ja, du willst Java, du willst Java, Python und C machen, dann kannst du dir zum Beispiel"}, {"id": 595, "start": 5120.96, "end": 5128.0, "text": "hier... Das f\u00fcr dich interessant w\u00e4re dann hier sowas wie SeaLion und IntelliJ, wobei"}, {"id": 596, "start": 5128.0, "end": 5134.64, "text": "das ist eh kostenlos. IntelliJ kostet ja nix. Was war das andere, PyCharm? PyCharm kostet"}, {"id": 597, "start": 5134.64, "end": 5141.12, "text": "auch nix. IntelliJ ist kostenlos und PyCharm ist kostenlos. Das Einzige, was du dir holen"}, {"id": 598, "start": 5141.12, "end": 5146.68, "text": "m\u00fcsstest ist SeaLion. Zumindest, was ich dir zeigen wollte ist, die haben ein Package f\u00fcr..."}, {"id": 599, "start": 5146.68, "end": 5160.32, "text": "Die haben ein All Products Pack. Das kostet dich 250 Euro im Jahr und ich denke, wenn man"}, {"id": 600, "start": 5160.32, "end": 5167.76, "text": "das professionell oder semi-professionell verwendet, kann man das ausgeben, zumal es ab dem zweiten"}, {"id": 601, "start": 5167.76, "end": 5171.64, "text": "und dritten Jahr nochmal g\u00fcnstiger wird. Hab ich mir auch gekauft. Also das ist auch das,"}, {"id": 602, "start": 5171.64, "end": 5178.32, "text": "was ich am Start habe bei mir. Also ich verwende von denen auch drei Sachen. Ich verwende Rider,"}, {"id": 603, "start": 5178.32, "end": 5183.2, "text": "ich, wobei es stimmt gar nicht, ich verwende sogar mehr, aber nicht oft. Also haupts\u00e4chlich"}, {"id": 604, "start": 5183.2, "end": 5188.8, "text": "verwende ich von den Rider, weil ich.NET mittlerweile quasi fast exklusiv unter Linux"}, {"id": 605, "start": 5188.8, "end": 5198.84, "text": "programmiere. GoLand verwende ich f\u00fcr Go. SeaLion ab und zu mal f\u00fcr Arduino Platform"}, {"id": 606, "start": 5198.84, "end": 5204.12, "text": "my own Zeugs, wobei ich da mittlerweile zum gr\u00f6\u00dften an Whistle Studio Code verwende,"}, {"id": 607, "start": 5204.12, "end": 5212.6, "text": "weil das Setup einfacher ist. Ich habe PyCharm und RubyMine auch installiert, aber verwende"}, {"id": 608, "start": 5212.6, "end": 5222.56, "text": "ich beides relativ selten. Ja, also diese Dinger sind wirklich gut und gerade wenn du"}, {"id": 609, "start": 5222.56, "end": 5225.88, "text": "aus dem Java Umfeld kommst, solltest du die glaube ich vom Namen her zumindest schon kennen."}, {"id": 610, "start": 5225.88, "end": 5237.72, "text": "NetBeans wusste ich gar nicht, dass es das noch gibt. Mit explaining Query, da m\u00fcsste"}, {"id": 611, "start": 5237.72, "end": 5241.84, "text": "ich ja wissen, was der ausf\u00fchrt. Da muss ich ja von Hand irgendwelche SQL Queries ausf\u00fchren."}, {"id": 612, "start": 5241.84, "end": 5256.72, "text": "Ich bin dazu zu low IQ was Datenbank angeht. Keine Ahnung. Wir k\u00f6nnen uns das Query mal"}, {"id": 613, "start": 5256.72, "end": 5261.64, "text": "ausgeben lassen und ich mach das von Hand. K\u00f6nnen wir probieren. Das machen wir jetzt,"}, {"id": 614, "start": 5261.64, "end": 5267.36, "text": "das machen wir jetzt, das Query von Hand. Ruby ist doch super. Ruby ist neben SeaSharp"}, {"id": 615, "start": 5267.36, "end": 5271.92, "text": "meine absolute Lieblingsprogrammiersprache schlechthin. Leider ist Ruby so ein bisschen"}, {"id": 616, "start": 5271.92, "end": 5279.0, "text": "in der Bedeutungslosigkeit verschwunden die letzten Jahre \u00fcber. Vor allem weil Rails"}, {"id": 617, "start": 5279.0, "end": 5288.52, "text": "nicht mehr angesagt ist. Aber Ruby selbst ist das beste was es gibt. Wenn du brauchst"}, {"id": 618, "start": 5288.52, "end": 5293.28, "text": "das, dann w\u00fcrde ich halt sagen kannst du PyCharm verwenden, IntelliJ verwenden, da hast du"}, {"id": 619, "start": 5293.28, "end": 5297.44, "text": "Python und Java schon mal abgedeckt und f\u00fcr C gibt es ja jede Menge andere M\u00f6glichkeiten."}, {"id": 620, "start": 5297.44, "end": 5309.88, "text": "Du installierst ja Vmware Workstation oder VirtualBox und installierst da drin \u00fcber"}, {"id": 621, "start": 5309.88, "end": 5314.72, "text": "einen ISO das Lieblungs deiner Wahl. Also das kriegt eigentlich fast jeder der ein bisschen"}, {"id": 622, "start": 5314.72, "end": 5327.6, "text": "IT technisch interessiert ist hin. Ja das ist richtig gut. Also ich muss sagen die Preispolitik"}, {"id": 623, "start": 5327.6, "end": 5334.4, "text": "finde ich in Ordnung. Wenn man das und sp\u00e4testens wenn man damit Geld verdient mit dem was man"}, {"id": 624, "start": 5334.4, "end": 5338.96, "text": "eben da drin macht. Also sag mal wenn du professionelles oder semi professionelles Zeug verwendest,"}, {"id": 625, "start": 5338.96, "end": 5346.68, "text": "sind 250 Euro im Jahr bzw. im dritten Jahr dann irgendwie keine Ahnung 200, ne 100, 170"}, {"id": 626, "start": 5346.68, "end": 5354.96, "text": "Euro oder so. Da kannst du dich eigentlich nicht beschweren. Rails finde ich cool. Also"}, {"id": 627, "start": 5354.96, "end": 5360.04, "text": "ich mag das Ruby \u00d6kosystem und Rails eigentlich auch, aber das ist mittlerweile ziemlich in"}, {"id": 628, "start": 5360.04, "end": 5365.64, "text": "der Versenkung verschwunden. Stimmt das habe ich ganz vergessen. Wenn du einen E-Mail Account"}, {"id": 629, "start": 5365.64, "end": 5370.88, "text": "hast von deiner Uni, dann kannst du glaube ich dort dir eine Studentenlizenz ausstellen"}, {"id": 630, "start": 5370.88, "end": 5391.92, "text": "lassen. Ja ich habe es aber selbst noch nicht ausprobiert. Bin mal gespannt. Also ich denke"}, {"id": 631, "start": 5391.92, "end": 5396.52, "text": "nicht das sie schaffen werden w.h. Studio Code Konkurrenz zu machen was Frontend JavaScript"}, {"id": 632, "start": 5396.52, "end": 5405.16, "text": "Sachen angeht. Aber f\u00fcr andere Dinge wo es zum Beispiel keine offizielle JetBrains IDE"}, {"id": 633, "start": 5405.16, "end": 5411.32, "text": "gibt, sowas wie Rust oder sowas, da k\u00f6nnte ich mir das schon vorstellen, dass das sich"}, {"id": 634, "start": 5411.32, "end": 5427.16, "text": "durchsetzen k\u00f6nnte. Naja es kommt drauf an was man machen will. Also wenn du JavaScript"}, {"id": 635, "start": 5427.16, "end": 5433.64, "text": "Frontend Zeug machen willst, w\u00fcrde ich eindeutig Visual Studio Code nehmen. Die Ausmal an Plugins"}, {"id": 636, "start": 5433.64, "end": 5440.36, "text": "und dass der Krempel eben selbst in JavaScript programmiert ist, ist schon ganz gut. F\u00fcr"}, {"id": 637, "start": 5440.36, "end": 5445.44, "text": "Frontend Sachen w\u00fcrde ich immer Visual Studio Code nehmen. Manche schw\u00f6ren auf WebStorm,"}, {"id": 638, "start": 5445.44, "end": 5451.48, "text": "ok, aber ich mag Visual Studio Code. Aber ganz ehrlich,.NET Entwicklung ist ein ziemlicher"}, {"id": 639, "start": 5451.48, "end": 5455.92, "text": "Painschamp in Visual Studio Code. Du kannst das machen, du kriegst auch die ganzen Plugins"}, {"id": 640, "start": 5455.92, "end": 5460.2, "text": "dabei, dass du Autovervollst\u00e4ndigung hast und sonst was, aber sch\u00f6n ist es nicht. Es"}, {"id": 641, "start": 5460.2, "end": 5465.56, "text": "ist irgendwie haklich. Ich mag das nicht. Deswegen habe ich hier auch zwei Sachen auf."}, {"id": 642, "start": 5465.56, "end": 5471.08, "text": "Ich habe hier eine IDE f\u00fcr.NET auf und ich habe hier Visual Studio Code f\u00fcr den Frontend"}, {"id": 643, "start": 5471.08, "end": 5479.64, "text": "Chat auf. Und die richtig hardcore Leute, die machen es \u00fcber NeoWim, genau. Den macht"}, {"id": 644, "start": 5479.64, "end": 5484.8, "text": "dann hier, wie ist denn der Manke als Einsteiger hier, den macht dann Akira zum ersten Mal"}, {"id": 645, "start": 5484.8, "end": 5499.92, "text": "auf und wei\u00df nicht mal, wie er rauskommt. Wenn ihr Leute NeoWim empfiehlt. Jaja, Fleet"}, {"id": 646, "start": 5499.92, "end": 5507.44, "text": "ist quasi der JetBrains IDE Core extrahiert und dann so gemacht, dass du es mit Plugins"}, {"id": 647, "start": 5507.44, "end": 5512.56, "text": "erweitern kannst. Was ja jetzt schon geht, ich habe ja jetzt schon einige Plugins, aber"}, {"id": 648, "start": 5512.56, "end": 5526.08, "text": "m\u00fcssen wir mal gucken, was da rauskommt. So, aber gehen wir mal zur\u00fcck zu unserem Datenbank"}, {"id": 649, "start": 5526.08, "end": 5530.36, "text": "Query. Ich habe keine Ahnung, warum das Lamas Fuck ist. Wir m\u00fcssen uns jetzt mal irgendwie"}, {"id": 650, "start": 5530.36, "end": 5533.48, "text": "auch. Also, okay, wir gucken wir gucken uns jetzt mal an, was der f\u00fcr einen Query macht"}, {"id": 651, "start": 5533.48, "end": 5537.76, "text": "und dann machen wir das Query von Hand in der Datenbank. Jetzt wird es jetzt wird es"}, {"id": 652, "start": 5537.76, "end": 5552.0, "text": "waren, so HTTP. Ja, das Query macht er da. Select Text from Limit. Okay, auf auf. Bash."}, {"id": 653, "start": 5552.0, "end": 5561.2, "text": "P SQL. B\u00e4m. Gibt es da nicht, Leute, gibt es nicht, von wo wir gerade bei dieser JetBrains"}, {"id": 654, "start": 5561.2, "end": 5565.92, "text": "Geschichte sind, hatten die nicht auch ein Tool, wo man Datenbank Queries irgendwie sch\u00f6ner"}, {"id": 655, "start": 5565.92, "end": 5569.76, "text": "drin machen kann? Hatten die nicht sowas? Habe ich letztens bei denen auf der Webseite"}, {"id": 656, "start": 5569.76, "end": 5579.04, "text": "gesehen, habe ich noch nie verwendet. Datacrit. Wollen wir das mal ausprobieren? Ach nee,"}, {"id": 657, "start": 5579.04, "end": 5586.96, "text": "ich habe ja mein Account hier gar nicht eingeloggt. Ich mache das jetzt mal kurz mal gucken. Ist"}, {"id": 658, "start": 5586.96, "end": 5596.84, "text": "das kostenlos? Braucht man dann? Braucht man dann ein Account f\u00fcr? Ja, ich wei\u00df nur mal"}, {"id": 659, "start": 5596.84, "end": 5601.52, "text": "so f\u00fcr die Leute, die immer sagen, ich h\u00e4tte, ich h\u00e4tte, ich w\u00fcrde das ja nur erz\u00e4hlen"}, {"id": 660, "start": 5601.52, "end": 5608.08, "text": "und in Wirklichkeit irgendwelche gecrackten Version zu verwenden. Ich habe das hier ganz"}, {"id": 661, "start": 5608.08, "end": 5618.04, "text": "offiziell aktiviert f\u00fcr mich. Und ich kann euch das zeigen. Das kommt ja jedes Mal. So"}, {"id": 662, "start": 5618.04, "end": 5627.36, "text": "nach dem Wort Jaja aktiviert. Lulul. About. Hier. License to MaxK. Ihr k\u00f6nnt jetzt nat\u00fcrlich"}, {"id": 663, "start": 5627.36, "end": 5634.16, "text": "nicht verifizieren, dass ich das bin, aber die. Das ist relativ unwahrscheinlich, dass"}, {"id": 664, "start": 5634.16, "end": 5641.0, "text": "ich den gecrackten Licens Key irgendwo habe, der dann auch auf MaxK und so Nachnamen, Nachnamen"}, {"id": 665, "start": 5641.0, "end": 5648.68, "text": "liegt. Warum habe ich IntelliJ Community Edition installiert? Warum? Das muss ich mal kurz"}, {"id": 666, "start": 5648.68, "end": 5658.32, "text": "aufmachen und gucken. Warum? Ich mache kein Java Kram? Oh, du nie warst drin gemacht."}, {"id": 667, "start": 5658.32, "end": 5676.28, "text": "Okay. Alles klar. Bam. Data. Datalore, Dataspell, Datacrip. Jetzt wollen sie es einmal wissen"}, {"id": 668, "start": 5676.28, "end": 5689.64, "text": "hier. Warum ist die outdated? Was ist outdated? Das da. Burscht. Wir haben noch nie gro\u00dfartig"}, {"id": 669, "start": 5689.64, "end": 5695.64, "text": "Go gemacht im Stream. So, wenn ich mich, wenn ich mich registrieren muss, habe ich, habe"}, {"id": 670, "start": 5695.64, "end": 5712.52, "text": "ich gelitten. Ich habe das alles nicht hier. Activate. Okay. Easy. Da hat es mein Account"}, {"id": 671, "start": 5712.52, "end": 5716.04, "text": "gemerkt. Alles klar. Das immer. Also mein Fake Account f\u00fcr letzten Stream, den ich gemacht"}, {"id": 672, "start": 5716.04, "end": 5721.6, "text": "habe. Wie funktioniert der Kram jetzt? Habe ich noch nie verwendet. New Projekt. Lul. Was"}, {"id": 673, "start": 5721.6, "end": 5730.0, "text": "macht das jetzt? Database Explorer. Okay, das ist glaube ich abfuck f\u00fcr jemand, der von"}, {"id": 674, "start": 5730.0, "end": 5747.08, "text": "der man keine Ahnung hat. Datasource. Postgres. Postgres. Wow. Localhost. 5 4 3 2. Das ist"}, {"id": 675, "start": 5747.08, "end": 5759.24, "text": "richtig. User Postgres. Passwort gibt es nicht. Apply. Not found. Download. Ich habe keinen"}, {"id": 676, "start": 5759.24, "end": 5765.76, "text": "Plassen Schimmer, was ich hier \u00fcberhaupt mache. Native Keychain is not available. Ja, soll"}, {"id": 677, "start": 5765.76, "end": 5772.68, "text": "mir recht sein. Das ist eh leeres Passwort. Und hat das jetzt funktioniert? Die Musik"}, {"id": 678, "start": 5772.68, "end": 5784.28, "text": "passt sehr gut. Und jetzt hat es jetzt funktioniert. Select. Sternchen. Ich muss doch erst noch,"}, {"id": 679, "start": 5784.28, "end": 5795.68, "text": "ich muss doch erst noch die Datenbank ausw\u00e4hlen, oder? Wo mache ich das? Ah hier. Cute. Cute"}, {"id": 680, "start": 5795.68, "end": 5824.92, "text": "Chat Database. Ok. Select. Sternchen. From. Cute Chat Database. Ne. Ne. Ne. Ne. Ne. Ne."}, {"id": 681, "start": 5824.92, "end": 5836.56, "text": "Ah, ich bin nicht connected. Ja, wie connecte ich mich denn? Ne, doch ich bin connected."}, {"id": 682, "start": 5836.56, "end": 5855.36, "text": "Ah, hier Konsole. Jetzt. Select. Sternchen. From. Ah. Wow. Wie hei\u00dft denn der Krempel?"}, {"id": 683, "start": 5855.36, "end": 5879.44, "text": "Ich habe doch das Query hier. Select. Text values. Text values. Text. Ne. Kein Schimmer?"}, {"id": 684, "start": 5879.44, "end": 5887.88, "text": "Die Musik ist richtig spooky, passt gerade gut dazu, ja. \u00c4hm, das erscheint mir unn\u00f6tig"}, {"id": 685, "start": 5887.88, "end": 5899.2, "text": "komplex anstatt einfach. Ich meine meine Datenbank hei\u00dft offensichtlich Text values. Oder sehe"}, {"id": 686, "start": 5899.2, "end": 5915.4, "text": "ich das falsch? Text values. Hei\u00dft nicht so. Ja, woher wei\u00df ich denn, wie der Krempel"}, {"id": 687, "start": 5915.4, "end": 5923.56, "text": "da drinne hei\u00dft \u00fcberhaupt? Du musst das Schema selecten. Ich habe davon \u00fcberhaupt"}, {"id": 688, "start": 5923.56, "end": 5935.8, "text": "keinen Platz zum Schema. Wo sehe ich denn, was es da \u00fcberhaupt gibt drinne? Nach From"}, {"id": 689, "start": 5935.8, "end": 5939.84, "text": "kommt die Tabelle. Ja, ich wei\u00df ja, die Tabelle m\u00fcsste ja eigentlich, sag ich doch, Text"}, {"id": 690, "start": 5939.84, "end": 5950.56, "text": "values hei\u00dfen. Macht es aber nicht. Ok, das ist mir eindeutig zu, das ist mir eindeutig"}, {"id": 691, "start": 5950.56, "end": 5976.04, "text": "zu high IQ dieses Ding hier. Schemas, no Schemas selected. Ok. All Schemas. Und nu? Ne. Ich"}, {"id": 692, "start": 5976.04, "end": 5982.72, "text": "hab keine Ahnung, was ich hier mache. Ich hab wirklich keinen, absolut keinen, blassen"}, {"id": 693, "start": 5982.72, "end": 6001.88, "text": "Schimmer. Tables. Also jetzt mal ernsthaft. Laut. EF Core hei\u00dft meine Table Text values."}, {"id": 694, "start": 6001.88, "end": 6015.52, "text": "Warum gibt es das hier nicht? Das ist irgendwas internes, oder? Text values, da ist es doch."}, {"id": 695, "start": 6015.52, "end": 6026.8, "text": "Da ist es doch. Ok, ok. Verstehe. Public. New Query Konsole. Jetzt aber. Ok. Next"}, {"id": 696, "start": 6026.8, "end": 6033.44, "text": "Sternchen, From Text. Ah, ja, ja, ja. Ok, jetzt kommen wir der Sache n\u00e4her. So, wir"}, {"id": 697, "start": 6033.44, "end": 6041.48, "text": "f\u00fchren das jetzt aus. So, Control, Enter. Exzellent, da haben wir es. Da ist unser,"}, {"id": 698, "start": 6041.48, "end": 6047.48, "text": "ist unser Kram. Ok, nice. Ok, jetzt kann man das machen, was ich vorher, was ich, was"}, {"id": 699, "start": 6047.48, "end": 6053.04, "text": "ich eigentlich vorher machen wollte. Also select. Das ist das, das ist das, was dort net ausf\u00fchrt"}, {"id": 700, "start": 6053.04, "end": 6060.4, "text": "hier. Select, das ist ST. So, like, so like muss ich ja das eintragen, was ich, was ich"}, {"id": 701, "start": 6060.4, "end": 6069.08, "text": "Query habe, HTTP. Limit sind 10. Stimmt doch, oder? Warum, warum macht der eigentlich ST?"}, {"id": 702, "start": 6069.08, "end": 6075.64, "text": "Ach so, dass er das where danach machen kann. So, und jetzt f\u00fchren wir das mal aus. Ah,"}, {"id": 703, "start": 6075.64, "end": 6090.56, "text": "nein, es ist like, HTTP. Sternchen, genau. Ja, das ist einfach, das ist einfach lahm."}, {"id": 704, "start": 6090.56, "end": 6102.36, "text": "Wo sieht man denn die Zeit, was es jetzt gebraucht hat? Ach hier, 931 Millisekunden. Limit 1."}, {"id": 705, "start": 6102.36, "end": 6113.64, "text": "Warum \u00e4ndert das Limit was an der Zeit? Das Limit soll doch \u00fcberhaupt keinen Einfluss"}, {"id": 706, "start": 6113.64, "end": 6123.08, "text": "auf die Zeit haben in dem Fall, er findet ja nix. Explain, ja, explain, lass uns jetzt"}, {"id": 707, "start": 6123.08, "end": 6152.92, "text": "explainen. I've had time. Und jetzt? Was, was, was willst du mir sagen? Ah, jetzt. Ah,"}, {"id": 708, "start": 6152.92, "end": 6166.2, "text": "I've had informations. Excellent, excellent. Bitmap heap scan on text values. Check condition."}, {"id": 709, "start": 6166.2, "end": 6183.28, "text": "Bitmap index scan. Mhm, mhm, alles klar. Ja. Und was sagt mir das jetzt? Was sagt mir"}, {"id": 710, "start": 6183.28, "end": 6189.72, "text": "das jetzt genau? Jetzt wei\u00dft du Bescheid, ja, aber richtig. Jetzt habe ich voll den"}, {"id": 711, "start": 6189.72, "end": 6207.96, "text": "Plan, warum es so lange dauert. Analyse, Analyse. Also jetzt ist es obvious, jetzt ist ein klarer"}, {"id": 712, "start": 6207.96, "end": 6220.84, "text": "Fall. Wie ging das? Postgres Analyse. Nimm mal das Pattern nach dem Raus nach Like. Nein,"}, {"id": 713, "start": 6220.84, "end": 6226.28, "text": "das ist ja genau das, was ich machen will. Ohne das findet er nix. Da findet er genauso"}, {"id": 714, "start": 6226.28, "end": 6229.52, "text": "wenig. Also wir k\u00f6nnen das, wir k\u00f6nnen das tats\u00e4chlich mal raus machen. Er findet genauso"}, {"id": 715, "start": 6229.52, "end": 6237.04, "text": "wenig. Aber wir k\u00f6nnen uns die Geschwindigkeit mal angucken. Die Geschwindigkeit macht keinen"}, {"id": 716, "start": 6237.04, "end": 6247.2, "text": "gro\u00dfen. Sag mal. Die Datenbank ist aber schon richtig erstellt, oder? Kann man sich irgendwie"}, {"id": 717, "start": 6247.2, "end": 6256.24, "text": "die Infos davon anzeigen lassen, wie die erstellt wurde? Nee, ich habe keinen Index im klassischen"}, {"id": 718, "start": 6256.24, "end": 6263.24, "text": "Sinne. Ich habe einen Tree Cram Index, der f\u00fcr Textsuche da ist. Und die Textsuche ist"}, {"id": 719, "start": 6263.24, "end": 6271.36, "text": "ja auch saum\u00e4\u00dfig schnell, wenn er was findet. Aber warum ist das so langsam, wenn er nix"}, {"id": 720, "start": 6271.36, "end": 6298.76, "text": "findet? So, wie ging das jetzt? Explain Analyse. Nee, Collect Statistics. Explain Statement."}, {"id": 721, "start": 6298.76, "end": 6312.92, "text": "Was sagt mir denn diese Cost, Cost dahinter denn jetzt? Explain. Wir lernen Datenbankzeug,"}, {"id": 722, "start": 6312.92, "end": 6320.48, "text": "das ist wirklich nix, wovon ich keine Ahnung habe. Cost, Cost. Also was mich enorm stutzig"}, {"id": 723, "start": 6320.48, "end": 6329.84, "text": "macht ist, warum \u00e4ndert das Limit \u00fcberhaupt was an der Zeit? Weil, wenn er nix findet,"}, {"id": 724, "start": 6329.84, "end": 6340.2, "text": "muss er sowohl bei Limit 1 als auch bei Limit 10 die ganze Datenbank durchsuchen. Fehlt"}, {"id": 725, "start": 6340.2, "end": 6347.72, "text": "ja nicht ein Character. Doch. F\u00fcr die abschlie\u00dfende Sache schon. Aber ich will ja explizit die"}, {"id": 726, "start": 6347.72, "end": 6355.68, "text": "Limit-HTTP anfangen und danach irgendwas enthalten. Die gibt es nicht, aber das ist ja ein Fall,"}, {"id": 727, "start": 6355.68, "end": 6361.04, "text": "der passieren kann, dass es das nicht gibt. So wird das denn noch gr\u00f6\u00dfer, wenn ich sage"}, {"id": 728, "start": 6361.04, "end": 6377.48, "text": "Limit 100? Nee. Warum ist das so extrem? Weil dadurch, dass wir diesen Tree Cram Index"}, {"id": 729, "start": 6377.48, "end": 6382.0, "text": "haben, sollte er das ziemlich schnell erkennen k\u00f6nnen, dass man eben, also was mich \u00e4u\u00dferst"}, {"id": 730, "start": 6382.0, "end": 6391.84, "text": "verwirrt ist, warum Limit 1 einfach doppelt so schnell ist. Obwohl es beides in die komplette"}, {"id": 731, "start": 6391.84, "end": 6413.0, "text": "Datenbank durchk\u00e4mmt werden muss. Ja, gut Leute, ich hab keine Ahnung. Leute, ich lasse"}, {"id": 732, "start": 6413.0, "end": 6425.88, "text": "die Datenbank nochmal neu erstellen. Irgendwie so. Wei\u00df nicht. Vielleicht. Keine Ahnung."}, {"id": 733, "start": 6425.88, "end": 6451.64, "text": "So und woran erkenne ich jetzt, was da lang dauert? Cost 0. Cost 195. Was VirtualBox"}, {"id": 734, "start": 6451.64, "end": 6459.0, "text": "denkt an Bildschirme 600 mal 400? Kann schon sein. Der Installer wird das wahrscheinlich"}, {"id": 735, "start": 6459.0, "end": 6464.68, "text": "denken. Kannst du es nochmal mit Prozent-HTTP ausf\u00fchren? Ja, das ist viel schneller, aber"}, {"id": 736, "start": 6464.68, "end": 6468.76, "text": "das ist auch klar, warum das viel schneller ist. Weil, oh nee, ich hab mich detached."}, {"id": 737, "start": 6468.76, "end": 6475.36, "text": "Wie attache ich mich denn jetzt wieder? Macht das automatisch? Ah, das macht der automatisch."}, {"id": 738, "start": 6475.36, "end": 6480.52, "text": "Das ist viel schneller. Guck, das dauert 26 Millisekunden. Aber ist auch klar, weil der"}, {"id": 739, "start": 6480.52, "end": 6491.72, "text": "findet halt 10 St\u00fcck und h\u00f6rt dann auf. Achso, ja, sowohl bei VirtualBox als auch bei, genau,"}, {"id": 740, "start": 6491.72, "end": 6501.68, "text": "als auch bei Vmware brauchst du Guest-Vmware-Tools, also Guest-Edition-Tools, dass er das erkennt,"}, {"id": 741, "start": 6501.68, "end": 6507.24, "text": "dass dein Desktop-Bildschirm und sowas. So, aber ich suche hier explizit. So, wir suchen"}, {"id": 742, "start": 6507.24, "end": 6525.32, "text": "jetzt mal nach was anderem, was es nicht gibt. Ok, Leute, jetzt blick ich nicht durch. Wenn"}, {"id": 743, "start": 6525.32, "end": 6533.84, "text": "ich was suche... Achso, das ist, weil ich keinen Prozent dahinter hab. Das ist, weil"}, {"id": 744, "start": 6533.84, "end": 6543.64, "text": "ich keinen Prozent dahinter hab. H\u00e4? Warum ist... Warum ist HTTP... Ist das irgendwas"}, {"id": 745, "start": 6543.64, "end": 6552.04, "text": "mit HTTP... Ist das jetzt einfach nur Pech, dass ich HTTP suche? Escapt der da irgendwas,"}, {"id": 746, "start": 6552.04, "end": 6555.84, "text": "weil er denkt, ich mach irgendwelche... Ist das irgendein Security-Feature, dass wenn"}, {"id": 747, "start": 6555.84, "end": 6567.64, "text": "ich HTTP, dass einer besonders escapen muss oder so? Dr\u00fcck mal rechtsklick auf das Select-Statement."}, {"id": 748, "start": 6567.64, "end": 6586.24, "text": "Und jetzt? Explain Plan. Explain Analyze. Ok. Ah ja, jetzt ist alles klar. Nat\u00fcrlich,"}, {"id": 749, "start": 6586.24, "end": 6611.64, "text": "das wei\u00df ich Bescheid. Ja, 4,5 Billionen Dinger, das passt schon. So, \u00e4hm, wie sieht's mit"}, {"id": 750, "start": 6611.64, "end": 6620.36, "text": "HTTPS aus? Auch langsam. Haben wir sonst noch irgendwas in der Mitte? In.NET haben"}, {"id": 751, "start": 6620.36, "end": 6628.16, "text": "wir manchmal am Ende stehen, ne? Aber auch viel zu langsam, f\u00fcr dass er es nicht findet."}, {"id": 752, "start": 6628.16, "end": 6638.2, "text": "Nein, eine Sekunde ist kacke. Wir hatten es ja vorher schon. Vorher war das im Durchschnitt"}, {"id": 753, "start": 6638.2, "end": 6646.08, "text": "15, war das irgendwie 300 Millisekunden oder so das Langsamste? Moment. Vorher war das"}, {"id": 754, "start": 6646.08, "end": 6653.64, "text": "300 Millisekunden. Was hatten wir noch mal vorher? Moment, Moment, Moment, Moment. Aber"}, {"id": 755, "start": 6653.64, "end": 6661.16, "text": "ich muss noch kurz einen Comment machen, sonst check ich, blick ich nicht mehr durch. \u00c4hm,"}, {"id": 756, "start": 6661.16, "end": 6675.04, "text": "sind wir hier richtig? Get in it. Get add. Oh ne, jetzt hab ich binaries gealtert. A minus"}, {"id": 757, "start": 6675.04, "end": 6683.0, "text": "M hack W. Wunderbares Comment. Exzellent. So, \u00e4hm, und jetzt machen wir das mal r\u00fcckg\u00e4ngig."}, {"id": 758, "start": 6683.0, "end": 6710.8, "text": "Moment. Kann ich mal weiter r\u00fcckg\u00e4ngig machen? \u00c4h, local history. History. What? History?"}, {"id": 759, "start": 6710.8, "end": 6720.68, "text": "Ist doch local history. So, wo, also wir machen das einfach mal r\u00fcckg\u00e4ngig, was wir heute"}, {"id": 760, "start": 6720.68, "end": 6729.68, "text": "gemacht haben. So, hier haben wir angefangen. 13 Uhr, gib ihm. Revert. Bam. Yep. So. Ach"}, {"id": 761, "start": 6729.68, "end": 6741.68, "text": "so, da hab ich Wildcard-Dings komplett gemacht. Dann findet er, dann findet er ja was. Okay,"}, {"id": 762, "start": 6741.68, "end": 6756.48, "text": "dann mach ich das, dann mach ich das hier mal raus. So. Run. Und jetzt Http. Das ist"}, {"id": 763, "start": 6756.48, "end": 6775.72, "text": "immer noch langsam. Ich fass das nicht. Okay, keine Ahnung. Aber, okay, wir suchen mal"}, {"id": 764, "start": 6775.72, "end": 6781.04, "text": "was anderes. Hier, keine Ahnung, blub. So, blub. Tia.net. Tia wollte schon immer mal"}, {"id": 765, "start": 6781.04, "end": 6791.8, "text": "suchen. Ja, der findet welche. Punkt.net. Punkt.net. Wunderbar. Nee. Punkt. Name. Ach, jetzt funktioniert"}, {"id": 766, "start": 6791.8, "end": 6796.0, "text": "sie ja mit meiner Suche nicht mehr. Ja, so. Danach will ich suchen unbedingt. Das ist"}, {"id": 767, "start": 6796.0, "end": 6802.96, "text": "das, was ich schon immer mal suchen wollte. Das sind 1,5 Millisekunden. Ist das wirklich,"}, {"id": 768, "start": 6802.96, "end": 6807.76, "text": "ist das vielleicht echt ein Problem, weil es Http ist? War dumme Frage. K\u00f6nnte das"}, {"id": 769, "start": 6807.76, "end": 6823.24, "text": "wirklich daran liegen, dass es Http ist? Dass die Zeichenfolge Http ist? Ich mein, nee,"}, {"id": 770, "start": 6823.24, "end": 6829.32, "text": "das wird's nicht sein. Hat keine Resultate. Ja, wie Http nicht. Aber genau, das Problem"}, {"id": 771, "start": 6829.32, "end": 6833.8, "text": "ist Http gibt es, na doch, Tia.net gibt es auch ein paar Mal, aber Http gibt es halt"}, {"id": 772, "start": 6833.8, "end": 6847.2, "text": "eben 4,5 Millionen Mal. Okay. Keine Ahnung. Bei Http findet er eine Menge Treffer und"}, {"id": 773, "start": 6847.2, "end": 6854.68, "text": "muss viele Wildcards verarbeiten. Naja. Das stimmt, das wird's. Ja, das ist es. Das ist"}, {"id": 774, "start": 6854.68, "end": 6864.28, "text": "wahrscheinlich echt so. Http ist in 4,5 Millionen Rows drinne. Und er muss gucken, ob es dort"}, {"id": 775, "start": 6864.28, "end": 6873.52, "text": "am Anfang ist. Aber gerade das sollte eigentlich durch den Index schnell sein. Daf\u00fcr gibt's"}, {"id": 776, "start": 6873.52, "end": 6883.0, "text": "den ja. Dass der eben erkennt, dass es Http nicht am Anfang gibt. Ich lass die Datenbank"}, {"id": 777, "start": 6883.0, "end": 6888.68, "text": "jetzt noch mal neu erstellen. Wobei das dauert wieder ewig. Dauert wieder 5 Minuten oder"}, {"id": 778, "start": 6888.68, "end": 6896.64, "text": "10 Minuten. Ohne Limit. Ich kann das Limit mal komplett weglassen, ja. Sollte ja genauso"}, {"id": 779, "start": 6896.64, "end": 6907.28, "text": "schnell sein von der Idee her. Ja. Http hat nix. Also von der Idee her sollte es insofern"}, {"id": 780, "start": 6907.28, "end": 6913.08, "text": "schnell sein. Weil, Docker stellt es hier. Machen wir noch mal hier das, was wir das"}, {"id": 781, "start": 6913.08, "end": 6919.84, "text": "letzte Mal gemacht haben. Also, der speichert ja f\u00fcr jedes, f\u00fcr jeden Text, also f\u00fcr"}, {"id": 782, "start": 6919.84, "end": 6926.6, "text": "das, was man hier sieht. Also f\u00fcr jedes dieser Dinger. Nehmen wir mal zum Buster. Nehmen"}, {"id": 783, "start": 6926.6, "end": 6934.12, "text": "wir hier das da. Aus den humberto.net. Das \u00fcbrigens Fake-Daten, das Zeug gibt's alles"}, {"id": 784, "start": 6934.12, "end": 6942.92, "text": "nicht. Wobei, soll ich mich trauen mal, who is humberto.net? Das sind zwar Fake-Daten,"}, {"id": 785, "start": 6942.92, "end": 6957.24, "text": "aber Moment, ist das wirklich registriert? Das ist anscheinend wirklich registriert."}, {"id": 786, "start": 6957.24, "end": 6964.6, "text": "Huberto.net, alles klar. Meine Fake-Daten sind anscheinend echte Daten, sehr gut. Also,"}, {"id": 787, "start": 6964.6, "end": 6969.88, "text": "das macht die Datenbank beim Speichern dieses Textes da raus. Eben damit die Suche schneller"}, {"id": 788, "start": 6969.88, "end": 6980.12, "text": "geht. Der zerlegt Austin, Http, humberto.net in solche Dreierpaare. Und das speichert er"}, {"id": 789, "start": 6980.12, "end": 6983.16, "text": "sich dann wahrscheinlich in einem sortierten Index, dass er Binary Research machen kann"}, {"id": 790, "start": 6983.16, "end": 6988.48, "text": "oder was auch immer er dann macht. Keine Ahnung. Und deswegen sollte er ziemlich schnell"}, {"id": 791, "start": 6988.48, "end": 7000.48, "text": "feststellen, aha, der Typ sucht nach Http. Ah, ja, nat\u00fcrlich, das ist ja eigentlich ganz"}, {"id": 792, "start": 7000.48, "end": 7009.48, "text": "logisch, dass das langsam ist. Ja, ja, das funktioniert. Funktioniert, tut das. Die"}, {"id": 793, "start": 7009.48, "end": 7015.24, "text": "anderen Queries sind sonst richtig langsam. Aber guck mal, von der Idee her, der guckt"}, {"id": 794, "start": 7015.24, "end": 7021.48, "text": "da rein in seinen Index. Wahrscheinlich wei\u00df der nicht so ohne weiteres, ob das am Anfang"}, {"id": 795, "start": 7021.48, "end": 7028.56, "text": "oder in der Mitte ist. Der wei\u00df nur, dass irgendwie in dem Index Htt drin steht. Und"}, {"id": 796, "start": 7028.56, "end": 7035.44, "text": "dann muss der wahrscheinlich gucken, genau, und das findet er 4,5 Millionen Mal. Und dann"}, {"id": 797, "start": 7035.44, "end": 7041.4, "text": "muss der wahrscheinlich gucken, ist es am Anfang. Der muss wahrscheinlich wirklich jeden Eintrag"}, {"id": 798, "start": 7041.4, "end": 7053.76, "text": "durchgehen und gucken, ist es denn am Anfang. Da ist wahrscheinlich nicht direkt die, selbst"}, {"id": 799, "start": 7053.76, "end": 7058.12, "text": "wenn die Position direkt gespeichert ist, so quasi, mal angenommen, da w\u00fcrde Index"}, {"id": 800, "start": 7058.12, "end": 7065.6, "text": "off dahinter gespeichert sein, was ja nicht geht, weil das k\u00f6nnte ja mehrfach drinne,"}, {"id": 801, "start": 7065.6, "end": 7069.04, "text": "was auch immer. Aber selbst wenn da direkt die Position dahinter steht, der muss ja jeden"}, {"id": 802, "start": 7069.04, "end": 7078.04, "text": "Eintrag durchgehen und gucken, ob der nicht am Anfang steht. Das ist jetzt absolut der"}, {"id": 803, "start": 7078.04, "end": 7092.6, "text": "Worst Case eigentlich. Ich denke in dem Fall, also wie soll ich sagen, in den normalen Daten,"}, {"id": 804, "start": 7092.6, "end": 7098.6, "text": "die ich da habe, w\u00e4re das ja wahrscheinlich \u00fcberhaupt nicht der Fall. Kann man den Index"}, {"id": 805, "start": 7098.6, "end": 7110.12, "text": "manuell zu Http oder Https \u00e4ndern? H\u00e4, wie? Aber das ist jetzt einfach bei Design verkackt."}, {"id": 806, "start": 7110.12, "end": 7115.8, "text": "Meine Testdaten sind halt so ein bisschen doof, weil da Http \u00fcberall drinne ist und ich suche"}, {"id": 807, "start": 7115.8, "end": 7124.72, "text": "halt zuf\u00e4lligerweise direkt nach Http. Dann ist es ein ziemlich doofes Beispiel, dass"}, {"id": 808, "start": 7124.72, "end": 7130.0, "text": "ich bereits Http rausgepickt habe. Das wird wahrscheinlich in der Art und Weise in echt"}, {"id": 809, "start": 7130.0, "end": 7134.44, "text": "nie der Fall sein. Mal davon abgesehen, das wird auf jeden Fall definitiv nicht der Fall"}, {"id": 810, "start": 7134.44, "end": 7139.48, "text": "sein, weil ich dort irgendwelche Prometheus Exporte reinpumpen w\u00fcrde und die haben zwar"}, {"id": 811, "start": 7139.48, "end": 7145.04, "text": "sicherlich ab und zu mal Http in der Domain, aber die meisten Label Value Pairs sind sonst"}, {"id": 812, "start": 7145.04, "end": 7154.08, "text": "was, blo\u00df nicht Domains, die mit Http anfangen. Nice. Okay, ja, das ergibt aber Sinn, dass"}, {"id": 813, "start": 7154.08, "end": 7182.96, "text": "es so langsam ist. Das ergibt tats\u00e4chlich Sinn. Ja. Das ergibt tats\u00e4chlich Sinn. Dann"}, {"id": 814, "start": 7182.96, "end": 7193.64, "text": "f\u00e4llt mir nichts ein, um es schneller zu machen zu dem, was ich das letzte Mal gebaut"}, {"id": 815, "start": 7193.64, "end": 7218.2, "text": "habe. MySQL? H\u00e4? Ich bezweifle, dass das MySQL schneller kann. Ja. Und weiter? Also"}, {"id": 816, "start": 7218.2, "end": 7232.04, "text": "ich kenne die Hilfeseite dazu. Mit Fulltext Search sollte es schneller sein. Da habe ich"}, {"id": 817, "start": 7232.04, "end": 7240.0, "text": "so meine Zweifel, weil das sind ja keine W\u00f6rter. Fulltext Search ist bei W\u00f6rtern schnell, aber"}, {"id": 818, "start": 7240.0, "end": 7248.6, "text": "bei Substrings von W\u00f6rtern Elastic Search, ja, gut, so was k\u00f6nntest du da mit Sicherheit"}, {"id": 819, "start": 7248.6, "end": 7259.4, "text": "drauf schie\u00dfen, ja. Also die Postgres, die Postgres Fulltext Search kann zum Beispiel"}, {"id": 820, "start": 7259.4, "end": 7270.2, "text": "keine Substrings von W\u00f6rtern, eben weil es keine W\u00f6rter sind. Und wenn MySQL das kann,"}, {"id": 821, "start": 7270.2, "end": 7274.64, "text": "dann ist es wahrscheinlich, weil MySQL Fulltext Search plus das, was Postgres hier in dem"}, {"id": 822, "start": 7274.64, "end": 7283.12, "text": "Fall mit diesen Drupeldingern W\u00f6rtern macht, auch macht, blo\u00df automatisch. Die k\u00f6nnen"}, {"id": 823, "start": 7283.12, "end": 7290.84, "text": "ja alle nicht zaubern. Das Full in Fulltext Search bezieht sich auf ganze W\u00f6rter. Das"}, {"id": 824, "start": 7290.84, "end": 7295.2, "text": "ist kein ganzes Wort. Weil nat\u00fcrlich k\u00f6nnte man als Trainer irgendwie jetzt sagen, nicht"}, {"id": 825, "start": 7295.2, "end": 7300.08, "text": "Leerzeichen, sondern gleich, aber das wei\u00dft du ja vorher nicht. Fulltext Search ist in"}, {"id": 826, "start": 7300.08, "end": 7307.72, "text": "der Regel nichts f\u00fcr Substring, vor allem nicht f\u00fcr Substring mit Wildcard davor. Daf\u00fcr"}, {"id": 827, "start": 7307.72, "end": 7313.52, "text": "ist Fulltext Search kacke. Weil Fulltext Search in der Regel so funktioniert, dass du deinen"}, {"id": 828, "start": 7313.52, "end": 7319.48, "text": "Text, ganz simpel gesagt, du nimmst deinen Text, splittest den in W\u00f6rter und dann machst"}, {"id": 829, "start": 7319.48, "end": 7329.04, "text": "du einen Index draus. Also du machst eine Liste draus, sagen wir mal alphabetisch sortiert,"}, {"id": 830, "start": 7329.04, "end": 7334.36, "text": "dass du in deine Liste dann per Binary Search relativ schnell finden kannst. Wo ist das?"}, {"id": 831, "start": 7334.36, "end": 7340.32, "text": "Dann hast du das Wort gefunden und zu dem Wort hast du dann dir noch zus\u00e4tzlich gespeichert,"}, {"id": 832, "start": 7340.32, "end": 7344.64, "text": "in welchem Dokument das vorkommt, an welcher Position. Das ist so ganz grob kurz gesagt"}, {"id": 833, "start": 7344.64, "end": 7350.6, "text": "wie Fulltext Search funktioniert. Und das Full in Fulltext bezieht sich auf komplette"}, {"id": 834, "start": 7350.6, "end": 7356.28, "text": "W\u00f6rter. Und was Fulltext normalerweise \u00fcberhaupt nicht gut kann, sind Wildcards am Anfang,"}, {"id": 835, "start": 7356.28, "end": 7362.84, "text": "weil er dann die Liste auch komplett durchscannen muss. Ja, da muss ich mir mal was \u00fcberlegen."}, {"id": 836, "start": 7362.84, "end": 7369.28, "text": "Ich hab gedacht, das k\u00f6nnte man jetzt besonders schlau machen, das so zu beschleunigen, aber"}, {"id": 837, "start": 7369.28, "end": 7374.52, "text": "der absolute Worst Case, wenn HTTP wirklich in jedem einen Tag vorkommt und es nicht"}, {"id": 838, "start": 7374.52, "end": 7399.08, "text": "matcht. Wobei k\u00f6nnte man das nicht einfach umdrehen? Nee, ich brauch ja beides, ich will"}, {"id": 839, "start": 7399.08, "end": 7405.08, "text": "es ja nicht. Ja, da f\u00e4llt mir nichts ein zu. Dann f\u00e4llt mir nichts ein zu, wie man das"}, {"id": 840, "start": 7405.08, "end": 7411.56, "text": "schneller machen kann, wobei es ja so schon saum\u00e4\u00dfig schnell ist. Der braucht ja nur"}, {"id": 841, "start": 7411.56, "end": 7422.24, "text": "bei der Diomalessuche nur 30-40 Millisekunden. Ich will es ja nicht, ich will es ja finden,"}, {"id": 842, "start": 7422.24, "end": 7428.08, "text": "ich will es ja finden. Wann kommt Battlefield Bad Company 3? Das musst du mal EA fragen,"}, {"id": 843, "start": 7428.08, "end": 7434.24, "text": "was soll ich das wissen? Wahrscheinlich gar nicht, weil DICE vor einer Weile gesagt hat,"}, {"id": 844, "start": 7434.24, "end": 7437.56, "text": "sie haben verlernt, sie haben das ein bisschen anders ausgedr\u00fcckt, aber sinngem\u00e4\u00df haben"}, {"id": 845, "start": 7437.56, "end": 7446.56, "text": "sie gesagt, sie haben verlernt oder sie wissen nicht mehr, was an Battlefield Bad Company"}, {"id": 846, "start": 7446.56, "end": 7452.76, "text": "den Leuten gefallen hat. Mach doch einen Pr\u00e4fix vor dem Wort. Ja und dann? Also das"}, {"id": 847, "start": 7452.76, "end": 7461.16, "text": "wei\u00df ja derjenige, der danach sucht, nicht. Der hat ja keine Ahnung. Irgendeiner tippt"}, {"id": 848, "start": 7461.16, "end": 7468.12, "text": "im Webinterface HTTP ein, erwartet, dass er Antworten bekommt f\u00fcr HTTP. Das wei\u00df man"}, {"id": 849, "start": 7468.12, "end": 7472.48, "text": "nicht, ob alle HTTP haben. Es ist in diesem Fall mit diesen Daten so, aber das wei\u00dft du"}, {"id": 850, "start": 7472.48, "end": 7481.04, "text": "ja nicht. Es wird in der Praxis auch nie relevant sein, gehe ich mal von aus, weil das, was"}, {"id": 851, "start": 7481.04, "end": 7487.96, "text": "ich davor hatte, reinzupumpen, hat das definitiv nicht. Aber ich \u00fcberlege gerade, ob es irgendwie"}, {"id": 852, "start": 7487.96, "end": 7498.8, "text": "eine schlaure Variante als das gibt. Weil in dem Fall, hier macht es halt das Order"}, {"id": 853, "start": 7498.8, "end": 7513.28, "text": "bei langsam. F\u00e4llt mir jetzt gerade nichts ein. Bin ich gerade zu low IQ f\u00fcr? Reicht"}, {"id": 854, "start": 7513.28, "end": 7518.08, "text": "man eigentlich an Datenbank-Grempel jetzt schon mal? Sollen im Webinterface alle 4,5"}, {"id": 855, "start": 7518.08, "end": 7522.76, "text": "Millionen Treffer rauskommen? Nein, nein. Im Webinterface sollen 10 Ergebnisse rauskommen,"}, {"id": 856, "start": 7522.76, "end": 7532.36, "text": "aber der Trick ist ja, jedes Zeitproblem ist gel\u00f6st, insofern, dass ich jetzt nachvollziehen"}, {"id": 857, "start": 7532.36, "end": 7548.24, "text": "kann, warum es langsam ist. Also ich will blo\u00df 10 Ergebnisse haben. Aber ich m\u00f6chte,"}, {"id": 858, "start": 7548.24, "end": 7558.32, "text": "die die mit dem Query anfangen, die will ich oben haben. Wenn ich das hier rausnehme und"}, {"id": 859, "start": 7558.32, "end": 7568.24, "text": "die random sortiert lasse, dann ist es mega schnell, aber ich habe nicht die, die mit"}, {"id": 860, "start": 7568.24, "end": 7573.08, "text": "dem Query anfangen oben. Weil ich h\u00e4tte gerne, wenn einer zum Beispiel einen gibt, dann"}, {"id": 861, "start": 7573.08, "end": 7578.8, "text": "h\u00e4tte ich gerne, dass er zuerst 10 St\u00fcck nimmt, falls es die gibt, die Plup am Anfang"}, {"id": 862, "start": 7578.8, "end": 7583.68, "text": "haben und wenn es die halt nicht gibt, sondern sagen wir nur 3 St\u00fcck mit Plup am Anfang,"}, {"id": 863, "start": 7583.68, "end": 7590.28, "text": "dann eben noch 7 St\u00fcck mit Wildcard auff\u00fcllt. Das funktioniert auch, aber dabei sind wir"}, {"id": 864, "start": 7590.28, "end": 7597.8, "text": "drauf gesto\u00dfen, wenn man nicht nach Plup sucht, sondern nach HTTP, dann funktioniert es insofern"}, {"id": 865, "start": 7597.8, "end": 7603.16, "text": "nicht richtig, es funktioniert schon, aber es funktioniert langsam. Weil er eben HTTP"}, {"id": 866, "start": 7603.16, "end": 7610.56, "text": "potenziell findet in jedem Wort und dann 4,5 Millionenfach checken muss, ist HTTP denn"}, {"id": 867, "start": 7610.56, "end": 7619.12, "text": "am Anfang. Das ist eigentlich relativ logisch, dass das langsam ist. Ja, da muss ich mir"}, {"id": 868, "start": 7619.12, "end": 7621.88, "text": "irgendwas \u00fcberlegen. Vielleicht f\u00e4llt mir noch was ein oder ich lasse es einfach so."}, {"id": 869, "start": 7621.88, "end": 7633.32, "text": "Nein, Timeout ist doch doof, ich will auch ein Ergebnis haben. Zur Not gegebenenfalls"}, {"id": 870, "start": 7633.32, "end": 7640.72, "text": "zwei Queries machen mit Wearfilter f\u00fcr das Startwith, dann kann der Pr\u00e4fix, \u00e4h, was?"}, {"id": 871, "start": 7640.72, "end": 7648.72, "text": "Nein, nein, nein, das ist ja das, was nicht funktioniert, guck mal. Das ist ja das, was"}, {"id": 872, "start": 7648.72, "end": 7652.68, "text": "nicht funktioniert. Das ist ja das, was ich schon gemacht habe. Guck mal, wenn du das"}, {"id": 873, "start": 7652.68, "end": 7658.04, "text": "hier machst, wenn du hier checken willst, ist es am Anfang. Das ist ja das, was du meinst,"}, {"id": 874, "start": 7658.04, "end": 7663.2, "text": "ne? Zwei Queries. Du machst dieses Query mit, \u00e4h, ist am Anfang und dann machst du dieses"}, {"id": 875, "start": 7663.2, "end": 7668.84, "text": "Query mit, ist irgendwo in der Mitte. So, aber das hier ist langsam. Das ist langsam"}, {"id": 876, "start": 7668.84, "end": 7678.92, "text": "erst fuck, wenn du das ausf\u00fchrst. Das braucht knapp ne Sekunde. Und warum? Weil er nachguckt,"}, {"id": 877, "start": 7678.92, "end": 7686.72, "text": "aha, das Wort startet mit HTT. In dem Fall zerlegt er auch HTTP, weder in HTT unter anderem"}, {"id": 878, "start": 7686.72, "end": 7691.52, "text": "und dann muss er bei jedem dieser 4,5 Millionen gefundenen Eintr\u00e4ge gucken, ist das HTT am"}, {"id": 879, "start": 7691.52, "end": 7705.72, "text": "Anfang. Ich kanns, im Prinzip kann ichs auch so lassen. Im Prinzip kann ichs so lassen,"}, {"id": 880, "start": 7705.72, "end": 7709.32, "text": "wie ich die ganze Zeit schon gemacht hab, weil es ist immer noch schneller als im Worst"}, {"id": 881, "start": 7709.32, "end": 7723.12, "text": "Case mein anderes Ding. Da f\u00e4llt man manchmal in Fallen rein, wo man gar nicht gedacht hat,"}, {"id": 882, "start": 7723.12, "end": 7727.76, "text": "dass es die gibt. Ja, das hat nen Index. Es hat zwar keinen klassischen Index, aber es"}, {"id": 883, "start": 7727.76, "end": 7751.2, "text": "hat so ne Art Index. Interessant. Tja, ne, da f\u00e4llt mir jetzt wirklich nichts Gescheites"}, {"id": 884, "start": 7751.2, "end": 7758.92, "text": "zu ein, au\u00dfer das einfach so zu lassen, wie wir es das letzte Mal schon gemacht haben."}, {"id": 885, "start": 7758.92, "end": 7781.6, "text": "Ein klassischer Index sollte den Pr\u00e4fix-Check beschleunigen k\u00f6nnen. Geht in Postgres ein"}, {"id": 886, "start": 7781.6, "end": 7786.24, "text": "Substring-Index? Ja, das haben wir doch. Da gehts doch darum. Genau das haben wir. Wir"}, {"id": 887, "start": 7786.24, "end": 7791.12, "text": "haben f\u00fcr jeden Texteintrag, so speichert Postgres so ne Kombination aus allem m\u00f6glichen,"}, {"id": 888, "start": 7791.12, "end": 7795.28, "text": "dass du Substring Search mark hast. Aber vielleicht muss man noch nen klassischen Index drauf"}, {"id": 889, "start": 7795.28, "end": 7804.36, "text": "machen, um zu gucken, ob das Starts, das k\u00f6nnten wir tats\u00e4chlich mal machen, ja. Das machen"}, {"id": 890, "start": 7804.36, "end": 7808.92, "text": "wir jetzt. Das machen wir jetzt. Wie bring ich dem dann bei, nen normalen Index zu machen"}, {"id": 891, "start": 7808.92, "end": 7813.12, "text": "noch zus\u00e4tzlich? Dann m\u00fcssen wir die Datenbank nochmal neu erstellen lassen wahrscheinlich."}, {"id": 892, "start": 7813.12, "end": 7824.32, "text": "Also das ist der Index f\u00fcr Substring-Suche. Wie sag ich dem, dass er noch nen normalen"}, {"id": 893, "start": 7824.32, "end": 7847.68, "text": "Index drauf machen soll? Nochmal Has-Index? Ne, oder? Wei\u00df ich gar nicht, wie mach ich"}, {"id": 894, "start": 7847.68, "end": 7854.52, "text": "das? Kein Schimmer. So hab ich das f\u00fcr diese Substring-Suche auf jeden Fall rausbekommen"}, {"id": 895, "start": 7854.52, "end": 7860.56, "text": "das letzte Mal. Muss man, muss man das nicht doppelt machen? Einfach nochmal so Sachen,"}, {"id": 896, "start": 7860.56, "end": 7872.88, "text": "Has-Index oder so? Okay. EF Core Postgres-Index. Wie geht das? Zeig her. Has-Index. Ja gut,"}, {"id": 897, "start": 7872.88, "end": 7900.04, "text": "auf der ID ist schon mal klar. Im normalen Fall, also was mich eigentlich interessiert"}, {"id": 898, "start": 7900.04, "end": 7923.72, "text": "ist Wildcard-Wort-Wildcard. Das ist Darkreader-Neighbor-Youblog. Aber halt eben dann die, die mit was anfangen"}, {"id": 899, "start": 7923.72, "end": 7935.24, "text": "als erstes. Naja meine Idee war jetzt ja urspr\u00fcnglich, anstatt diese Abfrage hier mit dem Order-Buy"}, {"id": 900, "start": 7935.24, "end": 7943.0, "text": "zu machen, wir machen einfach zwei Queries. Einmal eins ohne Wildcard und wenn das schon"}, {"id": 901, "start": 7943.0, "end": 7947.84, "text": "zehn St\u00fcck zur\u00fcckgibt, dann ist alles gut. Ansonsten f\u00fchren wir einfach das Query nochmal"}, {"id": 902, "start": 7947.84, "end": 7954.12, "text": "so aus und nehmen halt noch sieben zus\u00e4tzliche zum Beispiel dazu davon dann. Das Problem"}, {"id": 903, "start": 7954.12, "end": 7960.8, "text": "ist nur, dass dieses Query, wenn man HTTP eingibt, halt \u00fcbelst langsam ist. Und dieses"}, {"id": 904, "start": 7960.8, "end": 7965.64, "text": "ist \u00fcbrigens nicht langsam bei HTTP, weil er eben was findet. Und ich gehe mal davon"}, {"id": 905, "start": 7965.64, "end": 7969.28, "text": "aus, wenn ich was suche, was er gar nicht findet, was gar nicht in diesem Index drinne"}, {"id": 906, "start": 7969.28, "end": 7973.64, "text": "ist, dann ist es auch schnell, weil dann kann er direkt sagen, hier so nach dem Motto was"}, {"id": 907, "start": 7973.64, "end": 7991.16, "text": "wie blub, hier gibt es kein blub, kann nicht sein. S-Index. Wie kann ich dem denn jetzt"}, {"id": 908, "start": 7991.16, "end": 7995.68, "text": "sagen, dass ich anstatt hier in diesem Index noch einen normalen Index machen will? So"}, {"id": 909, "start": 7995.68, "end": 8004.12, "text": "jetzt? Funktioniert das so? Keine Ahnung. Ich bin Stocher da voll im Dunkeln. S-Index."}, {"id": 910, "start": 8004.12, "end": 8017.72, "text": "Ah nee, der hat das schon. Nee, das passt schon. Der hat schon den Index erstellt daf\u00fcr."}, {"id": 911, "start": 8017.72, "end": 8023.2, "text": "Guckt mal, das ist schon richtig. Der macht hier einen wie auch immer gerne GIN-Index"}, {"id": 912, "start": 8023.2, "end": 8034.52, "text": "und dann macht er noch diese andere Geschichte obendrauf. Nee, dann habe ich wirklich keine"}, {"id": 913, "start": 8034.52, "end": 8061.72, "text": "Ahnung mehr. Wisst ihr was? Dann lassen wir das einfach so. Das denke ich auch, ja. Ja,"}, {"id": 914, "start": 8061.72, "end": 8067.68, "text": "ich glaube, das hat er. Ich glaube, das hat er hiermit schon. Zumindest wenn man den,"}, {"id": 915, "start": 8067.68, "end": 8082.16, "text": "wenn man das hier dieser, dieser Doku-Seite von denen glaubt. Oder muss ich nochmal, oder"}, {"id": 916, "start": 8082.16, "end": 8094.2, "text": "muss ich das einfach zweimal machen? Einmal so und einmal so? Kannst du irgendwie aussuchen,"}, {"id": 917, "start": 8094.2, "end": 8104.88, "text": "welchen Index da beim aktuellen Query benutzen willst? Bestimmt irgendwie? So, wir machen"}, {"id": 918, "start": 8104.88, "end": 8108.28, "text": "das, ich gucke mal, ob man so die Datenbank erstellen kann, ob das in irgendeiner Art"}, {"id": 919, "start": 8108.28, "end": 8112.12, "text": "und Weise schneller ist. Wisst ihr was? Wir lassen dieses ganze Krempel, wir lassen den"}, {"id": 920, "start": 8112.12, "end": 8118.24, "text": "mal weg. Wir lassen den mal weg und erstellen den neu und gucken, ob mit einem einfachen"}, {"id": 921, "start": 8118.24, "end": 8130.68, "text": "Index, der startet mit schneller ist. Probieren wir das mal aus. Ja, 900 Millisekunden ist,"}, {"id": 922, "start": 8130.68, "end": 8136.72, "text": "mir geht es nicht wirklich darum, dass das jetzt besser benutzbar wird oder so. Generell,"}, {"id": 923, "start": 8136.72, "end": 8141.84, "text": "wenn es darum geht, m\u00fcsste ich das ja gar nicht machen. Hab ich das so gemacht, dass"}, {"id": 924, "start": 8141.84, "end": 8150.16, "text": "es funktioniert? Hoffe mal. Run. Mir geht es einfach, dass ich was lerne drum. Nicht,"}, {"id": 925, "start": 8150.16, "end": 8162.16, "text": "dass da irgendwie was so Sinnvolles bei rauskommt. So, jetzt wird eine Runde geinsertet in den"}, {"id": 926, "start": 8162.16, "end": 8175.2, "text": "Index bzw. nicht in die Datenbank. Das dauert jetzt 1-2 Minuten. Oder habe ich den Output"}, {"id": 927, "start": 8175.2, "end": 8184.28, "text": "abgeschaltet? \u00dcbrigens, random Seed 1337, ganz wichtig, immer bei eurem Randomizer Seed"}, {"id": 928, "start": 8184.28, "end": 8195.0, "text": "1337 verwenden. Ihr solltet prinzipiell nicht den Seed irgendwo reinschreiben, dann ist"}, {"id": 929, "start": 8195.0, "end": 8211.0, "text": "es n\u00e4mlich ziemlich easy, eure Secrets zu erraten, das will man nicht. Du brauchst ziemlich"}, {"id": 930, "start": 8211.0, "end": 8221.72, "text": "sicher, wie gesagt, Guest Tools, dass es funktioniert. Du brauchst, wie hei\u00dft das mal, Virtual Box?"}, {"id": 931, "start": 8221.72, "end": 8230.34, "text": "Virtual Box Guest Tools, wie nennt man sich der Kram? Du hast zuerst ins CD, dann musst"}, {"id": 932, "start": 8230.34, "end": 8236.04, "text": "du starten oder zumindest die Kiste neu starten und dann musst du in der VM keine Aufl\u00f6sung"}, {"id": 933, "start": 8236.04, "end": 8241.88, "text": "einstellen. Sobald die Guest Tools, Guest Editions, genau, sobald die Guest Tools funktionieren,"}, {"id": 934, "start": 8241.88, "end": 8251.6, "text": "macht er automatisch das Ding auf die richtige Aufl\u00f6sung. Guck, jetzt ist es auf der richtigen"}, {"id": 935, "start": 8251.6, "end": 8261.16, "text": "Aufl\u00f6sung, er macht es automatisch, siehste? Ok, Datenbank Insert dauert ein bisschen."}, {"id": 936, "start": 8261.16, "end": 8269.48, "text": "So, jetzt haben wir eine Datenbank gleich mit keinem Substring-Dingsged\u00f6ns-Durchsuch-Index,"}, {"id": 937, "start": 8269.48, "end": 8281.52, "text": "aber eine mit einem stinknormalen Index auf das Textfeld. Und dann gucken wir mal, ob"}, {"id": 938, "start": 8281.52, "end": 8294.84, "text": "das schneller ist. Open VM Tools? Nee, das bringt ja nichts, er hat Virtual Box. Und wenn"}, {"id": 939, "start": 8294.84, "end": 8300.96, "text": "er Virtual Box hat, bringen ihm Open VM Tools nichts. Ich w\u00fcrde eh, ganz ehrlich, ich w\u00fcrde"}, {"id": 940, "start": 8300.96, "end": 8305.64, "text": "nicht Virtual Box, ich w\u00fcrde Forever Workstation nehmen oder? Ach nee, Forever Player gibt's"}, {"id": 941, "start": 8305.64, "end": 8309.92, "text": "ja nicht mehr, oder? Forever Player war fr\u00fcher die kostenlose Variante, ich glaube, Forever"}, {"id": 942, "start": 8309.92, "end": 8317.52, "text": "Player kostet doch jetzt auch was. Was Open VM Tools geht auch mit Virtual Box? Echt?"}, {"id": 943, "start": 8317.52, "end": 8329.8, "text": "Das ist nice. Das ist mir neu, weil ich immer VM mehr verwende. Gehen die auch, das ist"}, {"id": 944, "start": 8329.8, "end": 8333.92, "text": "ja der Chat, die ganzen Prime-Subs haben sich gelohnt, der Chat ist mittlerweile absolut"}, {"id": 945, "start": 8333.92, "end": 8345.92, "text": "hier Next-Level-IQ-Werte. Der wei\u00df Bescheid. Das hei\u00dft, Chat, wenn ihr auch Next-Level-IQ-Werte"}, {"id": 946, "start": 8345.92, "end": 8350.6, "text": "habt, m\u00fcsst ihr mir auch einen Prime-Sub dalassen, weil das gilt f\u00fcr den kompletten Chat. Ist"}, {"id": 947, "start": 8350.6, "end": 8355.08, "text": "quasi geshared jetzt zwischen 230 Leuten, aber nur, wenn ihr gerade zuguckt. Sonst geht"}, {"id": 948, "start": 8355.08, "end": 8362.24, "text": "das nicht. So, Datenbank, inserte mal, please. Etwas schneller. Ich glaube, ich sollte mal"}, {"id": 949, "start": 8362.24, "end": 8368.76, "text": "mein Logging ausschalten, weil mein Arbeitsspeicher ist zu 94% voll und wahrscheinlich liegt es"}, {"id": 950, "start": 8368.76, "end": 8382.08, "text": "daran, weil mein Terminal den ganzen Text drinstehen hat. Weil ich bin ziemlich bl\u00f6de"}, {"id": 951, "start": 8382.08, "end": 8396.92, "text": "gewesen. Mein Terminal hat unlimited scrollback-Buffer. Er ist fertig, Poggers. So, diesen Kr\u00e4mpel"}, {"id": 952, "start": 8396.92, "end": 8401.04, "text": "hier gleich mal wieder auskommentieren, dass er nicht jedes Mal neu die Datenbank erstellt."}, {"id": 953, "start": 8401.04, "end": 8406.88, "text": "Passt mal auf, ich schlie\u00dfe jetzt mein Terminal, mal gucken wir, wie viel Arbeitsspeicher er"}, {"id": 954, "start": 8406.88, "end": 8423.72, "text": "gleich freigibt. Oh, Kinga, Kinga, Kinga. Wie habe ich es genannt? Search-Champ. Okay,"}, {"id": 955, "start": 8423.72, "end": 8430.88, "text": "dann gehen wir mal hier in dieses Data-Ding wieder und machen noch mal das Gleiche. Aha,"}, {"id": 956, "start": 8430.88, "end": 8445.92, "text": "aha, guck mal, es ist schneller, es ist schneller. Jetzt ist es blo\u00df 317 Millisekunden, es ist"}, {"id": 957, "start": 8445.92, "end": 8456.32, "text": "schneller. Der best case, ja den best case, ich wei\u00df nicht, ob ich den gescheit testen"}, {"id": 958, "start": 8456.32, "end": 8464.04, "text": "kann \u00fcberhaupt. Hiermit. Ich meine, das m\u00fcsste langsam, langsam sein jetzt mit dem nicht"}, {"id": 959, "start": 8464.04, "end": 8469.76, "text": "vorhandenen Textsearch-Index. Achso, der macht automatisch einen Limit. Dann ist es"}, {"id": 960, "start": 8469.76, "end": 8488.24, "text": "auch schneller. Aber ja, ich limite 10. Ja, das ist nat\u00fcrlich hier auch schnell, weil"}, {"id": 961, "start": 8488.24, "end": 8497.64, "text": "\u00fcberall HTTP drin ist. Also, suchen wir mal irgendwie emerald.org oder so. Ja, das d\u00fcrfte"}, {"id": 962, "start": 8497.64, "end": 8505.4, "text": "jetzt, das d\u00fcrfte jetzt nicht so schnell sein. Ja, Mist, ja, der hat ja halt nur, das ist"}, {"id": 963, "start": 8505.4, "end": 8511.88, "text": "ja doof, der hat halt nur 5 Domains oder so, die den Test-Ding an eintr\u00e4gt. 5000 Limit,"}, {"id": 964, "start": 8511.88, "end": 8523.04, "text": "bam. Ja, jetzt braucht er schon ein bisschen l\u00e4nger. Ja. Also, normale Suche mit Wildcard"}, {"id": 965, "start": 8523.04, "end": 8530.48, "text": "dauert jetzt halt deutlich l\u00e4nger. Es dauert jetzt 500 Millisekunden, um alles zu finden."}, {"id": 966, "start": 8530.48, "end": 8544.08, "text": "Und, \u00e4h, was machen wir denn mal? Was hab ich? Eleanor. Und das ist halt 300 noch was. Warum"}, {"id": 967, "start": 8544.08, "end": 8560.24, "text": "limitiert der immer auf 500? So, macht er gar nicht. All, bam. 1500, gib ihm. Er ist"}, {"id": 968, "start": 8560.24, "end": 8567.36, "text": "tats\u00e4chlich, wenn er am Anfang ist, ist er doch relativ, relativ geschwind. Kann er"}, {"id": 969, "start": 8567.36, "end": 8573.44, "text": "nicht Jeanette-m\u00e4\u00dfig mal bitte hier auf All bleiben? Okay, also ich denke schon, dass"}, {"id": 970, "start": 8573.44, "end": 8580.52, "text": "der normale Index tats\u00e4chlich was bringt. Und jetzt das andere mit einkommentieren, ja."}, {"id": 971, "start": 8580.52, "end": 8585.76, "text": "Ja, ja, probieren wir das mal aus. Jetzt m\u00fcsste man nur noch fragen k\u00f6nnen, ob man in dem"}, {"id": 972, "start": 8585.76, "end": 8597.32, "text": "Query irgendwie sagen kann, was er f\u00fcr einen Index verwenden soll. Wahrscheinlich meckert"}, {"id": 973, "start": 8597.32, "end": 8601.44, "text": "er jetzt rum, dass das nicht funktioniert, dass das schon ein Index existiert oder sowas."}, {"id": 974, "start": 8601.44, "end": 8616.28, "text": "Wahrscheinlich meckert er, dass es schon ein Index gibt. Probieren wir mal aus. \u00c4hm, ich"}, {"id": 975, "start": 8616.28, "end": 8628.08, "text": "werde mal kurz die Output umleiten, dass mein Terminal nicht wieder abkackt. Ach so,"}, {"id": 976, "start": 8628.08, "end": 8636.64, "text": "jetzt sehe ich die Fehlermeldung ja gar nicht. Okay, das ist ziemlich bl\u00f6d. Zack. Ne, das"}, {"id": 977, "start": 8636.64, "end": 8645.16, "text": "funktioniert. Der meckert nicht rum dabei. Und wann hei\u00dft, und wann wei\u00df, dass er fertig"}, {"id": 978, "start": 8645.16, "end": 8666.28, "text": "ist? Gute Frage. Gar nicht. Doch. Wartet mal. Ich stelle das Locklevel hoch. Ich stelle"}, {"id": 979, "start": 8666.28, "end": 8671.04, "text": "das Locklevel. Wo ist das denn hier nochmal? Locklevel? Das ist immer so versteckt bei"}, {"id": 980, "start": 8671.04, "end": 8689.56, "text": "dem Campbell. Wo waren das nochmal? App-Settings? Hier, die vollen Locklevel. Warning. Moment,"}, {"id": 981, "start": 8689.56, "end": 8697.92, "text": "Development ist es doch. Stimmt doch gar nicht. Info-Development-Warning. Ich mache einfach"}, {"id": 982, "start": 8697.92, "end": 8704.0, "text": "das Locklevel hoch, dann sehen wir es nicht mehr. Er erstellt nur einen GIN-Index, ist"}, {"id": 983, "start": 8704.0, "end": 8715.88, "text": "das so? Das m\u00fcssen wir uns nochmal angucken. Run. Also, was macht er hier? Zeigt mal her."}, {"id": 984, "start": 8715.88, "end": 8721.2, "text": "Die Datenbank Pfeiferts hier unter uns. Also, Create-Index. Tats\u00e4chlich, er macht nur einen"}, {"id": 985, "start": 8721.2, "end": 8734.2, "text": "GIN-Index. Dann wei\u00df ich auch nicht. Muss ich die Sachen dann doppelt in die Datenbank"}, {"id": 986, "start": 8734.2, "end": 8757.84, "text": "schreiben oder was? Boah, keine Ahnung. Was passiert denn? Was passiert denn? Wie sieht"}, {"id": 987, "start": 8757.84, "end": 8769.04, "text": "das aus, wenn man das wegl\u00e4sst? Was macht er dann? Ja, dann sagt er Create-Index. So,"}, {"id": 988, "start": 8769.04, "end": 8773.56, "text": "das kommt jetzt auf die Reihenfolge an? Dann kann es ja nicht funktionieren, wenn es doppelt"}, {"id": 989, "start": 8773.56, "end": 8796.6, "text": "drin ist. Okay. Das juckt ihn \u00fcberhaupt nicht. Es z\u00e4hlt immerhin nur, das muss man bestimmt,"}, {"id": 990, "start": 8796.6, "end": 8805.92, "text": "man muss irgendwie doppelt HESS-Index machen oder irgendwie sowas. Okay, das befragen"}, {"id": 991, "start": 8805.92, "end": 8829.56, "text": "wir den jetzt mal. Multiple-Index-On-Same-Column, richtig? Ja, ne? Ah, Stack Overflow, alles"}, {"id": 992, "start": 8829.56, "end": 8840.36, "text": "gut. Multi-Column, ne? Combine Multiple-Indexes. Ich will einfach nur zwei verschiedene Indextypen"}, {"id": 993, "start": 8840.36, "end": 8848.36, "text": "haben. Stimmt, das ist... Ich wollte auch gar nicht nach Postgres suchen. Ich wollte"}, {"id": 994, "start": 8848.36, "end": 8863.0, "text": "eigentlich auch nach Ding suchen, nach NPGSQL wollte ich eigentlich suchen, nach dem EF-Core-Ding,"}, {"id": 995, "start": 8863.0, "end": 8889.96, "text": "nach dem Postgres-Adapter. Oh, das sind jetzt schon die absolut High-IQ-Datenbank-Dingern."}, {"id": 996, "start": 8889.96, "end": 8904.4, "text": "Das ist mir jetzt zu hoch, da mach ich nicht weiter. Ne, keine Ahnung, hab ich kein Bock"}, {"id": 997, "start": 8904.4, "end": 8910.4, "text": "mehr. Ich lass es jetzt einfach so. Ich lass es jetzt einfach so. Es funktioniert ja und"}, {"id": 998, "start": 8910.4, "end": 8914.92, "text": "es ist auch relativ schnell. Das ist halt ein dummer Worst-Case mit Hard-TDP, aber schei\u00df"}, {"id": 999, "start": 8914.92, "end": 8929.52, "text": "drauf. Oh, ne, reicht sp\u00e4tst. Keine High-IQ-L\u00f6sung heute, aber gut, wir haben was gelernt. Und"}, {"id": 1000, "start": 8929.52, "end": 8933.8, "text": "ich hab jetzt auch mal Datacrypt verwendet. Kann ich gleich wieder zumachen, werd ich"}, {"id": 1001, "start": 8933.8, "end": 8945.6, "text": "nie mehr verwenden. Reicht genug. Genug. So Leute, ich muss jetzt was trinken, sonst"}, {"id": 1002, "start": 8945.6, "end": 8957.12, "text": "treuere Hals. Und jetzt geh ich off. Jetzt geh ich off und kreiselgrinde noch ein bisschen."}, {"id": 1003, "start": 8957.12, "end": 8964.0, "text": "Und jetzt noch eine andere Frage an die ganzen Frontend-Experten unter euch. Was ist denn"}, {"id": 1004, "start": 8964.0, "end": 8980.4, "text": "euer Lieblings-Date-Time-Picker-Library? Auf mobile ist das einfach. Auf mobile nimmt"}, {"id": 1005, "start": 8980.4, "end": 8987.28, "text": "man den Native vom Browser. Auf dem Desktop ist es ein bisschen doof, weil der Native vom"}, {"id": 1006, "start": 8987.28, "end": 8999.08, "text": "Browser halt null in das Design der Seite passt. Light-Pi-Date-Time-Picker. Kengi, danke"}, {"id": 1007, "start": 8999.08, "end": 9004.16, "text": "f\u00fcr den Sub. Ach Leute, ich muss mal kurz nachgucken nach den Subscriptions hier. Die"}, {"id": 1008, "start": 9004.16, "end": 9020.0, "text": "H\u00e4lfte wieder \u00fcbersehen. Ferdy Fuchs hat subscribt. Hab ich auch nicht gesehen. Dankesch\u00f6n"}, {"id": 1009, "start": 9020.0, "end": 9028.6, "text": "f\u00fcr den Sub. Hi IQ-Subscription hier Leute. Ich war zu besch\u00e4ftigt mit meinem Datenbank-Krempel."}, {"id": 1010, "start": 9028.6, "end": 9045.08, "text": "Majorink auch. Vollkorn-Milchbrot hatte ich schon. Okay, Light-Picker. Warum ist das so"}, {"id": 1011, "start": 9045.08, "end": 9056.24, "text": "schr\u00e4g? Da tut dir der Nacken weh. Ah hier. Okay, der sieht sehr viewig aus mit dem Gr\u00fcn,"}, {"id": 1012, "start": 9056.24, "end": 9063.32, "text": "wobei man das wahrscheinlich semen kann, wie man lustig ist. Und Date? Kann er auch time"}, {"id": 1013, "start": 9063.32, "end": 9077.08, "text": "picken? Kann er auch time picken? Ja. Oh, transparent. Wie kann man den time picken"}, {"id": 1014, "start": 9077.08, "end": 9090.76, "text": "lassen? Wo ist hier time? Ich sehe hier nichts f\u00fcr time. Oder ist das nur date? Der Darkreader"}, {"id": 1015, "start": 9090.76, "end": 9097.8, "text": "macht es kaputt. Ja, das wird es wahrscheinlich sein. Single date, placeholder, separator,"}, {"id": 1016, "start": 9097.8, "end": 9111.76, "text": "time. Ein Beispiel mit time? Hier ist time drin, aber ich kann keine time eintragen."}, {"id": 1017, "start": 9111.76, "end": 9133.04, "text": "Hier ist doch time. Hier kann ich keine time ausw\u00e4hlen. Egal, ich geh jetzt auf Leute,"}, {"id": 1018, "start": 9133.04, "end": 9149.72, "text": "wir sehen uns. Bis zum n\u00e4chsten Mal. See you."}]}
So, moin!
Ich war heute nicht rennen. Mir tun auch die Beine weh von gestern.
Ich hab's mal sein gelassen heute. Eigentlich wäre es heute dran.
Zweiter Tag, aber ich bin zweimal in Folge. Jetzt zusätzlich noch Fahrrad gefahren, das reicht.
Eins habe ich gemerkt, Leute. Seit ich angefangen habe, mich ein bisschen mehr wieder zu bewegen, ich habe übelst Hunger.
Aber das ist auch nice. Kann man mehr fressen, ohne großartig zuzunehmen.
Ich habe sogar schon wieder ein bisschen abgenommen. Sagen gibt's.
Ich hatte vor zwei Tagen neuen Tiefstand auf der Waage.
Aber ich muss mein Mikrofon wieder umstöpseln.
Ich habe keinen Bock, mein Mikrofon... Ja, doch, ich stöpsel das Mikrofon gleich wieder um.
Ja, mein Setup ist so krass pepege, Alter.
Wo ich jetzt bin? Ach so, du meinst...
91...
Warte mal, ich habe ein Foto gemacht.
Ich mache immer von Tiefstständen Bilder.
91,2.
Ja, normal habe ich immer zwischen 92 und 94 gehabt, je nachdem, wann man sich's wiegt. Jetzt 91,2 und das war noch
vor dem Rennen vor zwei Tagen.
Also danach wäre er definitiv unter 91 gewesen, aber das ist auch kein Wunder, weil man einfach schwitzt.
Also 200 Gramm sind dann auf jeden Fall weg, aber das ist ja bescheuert.
Man muss sich ja immer so halbwegs
konsistent zu ähnlichen Zeiten wiegen, sonst macht es ja wenig Sinn.
Es wiegt sich ja auch niemand, nachdem er gerade drei Schnitzel gefressen hat mittags oder so.
Ja, ist doch gut.
Übertreibt halt.
Übertreibt halt mit der Musik.
Das kann ich...
Wie gesagt, 91,2.
Also ich denke mal, wenn ich das wirklich weitermache,
so mit Rennen jeden zweiten Tag und ab und zu mal Fahrrad fahren,
dann sind die sind unter 90 auf jeden Fall drin
bis Ende des Jahres. Ist dann zwar ein Jahr verspätet, dieses Jahr habe ich ja kaum
Progress gemacht, ein paar hundert Gramm vielleicht weniger,
aber jetzt... Ich werde jetzt zumindest erst mal
mit Fahrrad fahren
warten, bis ich ein bisschen besser eingestellt habe, weil ich merke es heute immer noch in den Händen und ich merke es sogar immer noch in
meinen beiden Zeigefinger, dass sie sich komisch anfühlen, also
Sattelposition und Lenker und wie ich da drauf sitze, ist einfach nur nicht so optimal.
Und mein Arsch tut weh, immer noch. Wobei es jetzt deutlich besser geworden ist. Also ich denke,
wenn ich jetzt noch mal ein, zwei Tage warte, ist das... Popp ist weg und das sollte dann auch zunehmend besser werden.
Und dann sind auch die Hände wieder okay. Ich habe mir jetzt ein paar Handschuhe bestellt,
mit so Gelpads innen,
bis ich mich daran gewöhnt habe und dann muss ich wahrscheinlich meinen Lenker noch mal ein bisschen in einen anderen Winkel stellen.
Aber ist nice. Ist wirklich... Also hätte ich nicht gedacht, Fahrrad fahren macht übelst Bock. Ich bin seit 20 Jahren oder so nicht mehr... Naja.
Doch, doch, doch. Ich bin seit 20 Jahren oder so kein Fahrrad mehr gefahren.
25 Kilometer gestern und dann... Nee, vorgestern und gestern. Gestern 32.
Nee, das stimmt so nicht. Regeneration ist auch nicht unwichtig und ich bin gestern schon gefahren, obwohl ich noch Muskelkater vom Tag vorher hatte.
Also ein bisschen sich ab und zu mal ausruhen am Tag ist auch nicht verkehrt.
Ja, das stimmt. Stimmt auch.
Ja, also eins muss ich ja echt sagen. Ich habe mir das Selbstsetz letztens erstmal angeguckt.
Hoffentlich geht das noch.
Nein, nein.
Nitter.
Ich glaube, da kann man sich die Sachen auch gescheit anzeigen lassen.
Ja, weil Twitter selbst tut ja nicht mehr, ne?
Ist halt bescheuert. Jetzt braucht man irgendwelche Third-Party-Seiten, um sich Twitter noch mal anzeigen zu lassen. Okay, sorry. X.
X.
Ich vergaß.
X.
So.
Genau. Ich habe mir das selbst mal durch Twitter nur noch mit Account... Nee, Twitter ist mit... Also es ist total hängen geblieben. Guck mal.
Du kannst zwar
noch auf ein Twitter-Profil gehen, ohne dich einzuloggen.
Das funktioniert. Das Problem ist, die Tweets sind einfach
ansortet. Ich weiß nicht, was sich Elon Fivehead dabei gedacht hat in dem Fall.
Aber das ergibt für mich überhaupt keinen Sinn. Warum stehen oben... Ich meine, ja, das sind Tweets, die vielleicht
viele Leute sich angeguckt haben.
Ja.
Aber...
Aber es ist trotzdem bescheuert, dass man nicht die Möglichkeit hat, die Neuesten nach oben... Deswegen nehme ich jetzt mal einfach
einfach Nitter. Und ich habe letztens hier so durchgeguckt, ja? Ich habe ja angefangen, meine Rennergebnisse zu posten
vor
nicht
nicht so langer Zeit.
Ja, guck. Das war das Erste, was ich gepostet habe hier. Guck mal, da habe ich 8 Minuten 52 gebraucht für den Kilometer.
Richtig lahm.
Und mein letzter Post, wo ich mir Mühe gegeben habe, war 5 Minuten 45 pro Kilometer.
Das sind halt einfach mal ziemlich genau drei Minuten schneller.
Innerhalb von 20... Nee, Moment. Innerhalb von
14. August zu
24, also sagen wir mal eineinhalb Monate. Das geht doch echt klar.
Eignest du dir ein Birdchamp? Das muss irgendwie anders heißen.
Empörungschamp könnte man das nennen.
Ja, warum habe ich plus 10 Puls? Weil ich übelst gerannt bin, bis ich nicht mehr konnte, damit ich das geschafft habe.
Irgendwann musst du auch mal Vollgas geben. Ich habe letztens in einem Video gehört,
der nur
long and slow läuft. Oder wie haben die das gesagt?
Long and slow running produces long and slow runners. Irgendwie sowas.
Ab und zu musst du mal Gas geben. Ich renne ja nicht jedes Mal so.
Ab und zu musst du auch mal Gas geben. Und meine Uhr ist schon der Meinung, ich müsste ein bisschen mehr
kurzfristig sprinten und Pause machen,
weil ich zu viel
ausdauermäßig trainiere und nie und nie es übertreibe und dann Pause mache und wieder volle Pulle und so.
Darf man nicht so sehr danach gehen. Man muss das machen, was sich irgendwie auch
angenehm so anfühlt, sonst hat man keinen Bock mehr.
Die letzten 100 Meter wird gespritt. Das, das auch. Aber das reicht ja nicht.
Naja, aber eine Technikfrage. Wieso sollte man Docker nutzen?
Das kommt immer auf den, kommt drauf an, was man machen will, so pauschal. Aber gut, das geht ja noch weiter.
Wieso sollte man Docker nutzen, wenn man auch extra User unter Linux erstellen kann? Halt die Rechte für den User so beschränken, dass man von
dem User aus nur auf das eigene Homeverzeichnis zugreifen kann.
Das ist tatsächlich eine gute Frage. Das kommt ein bisschen drauf an, was es ist. Das kann durchaus sinnvoll sein.
Also Docker hat erstmal einen ganz anderen Hintergrund als das, wofür es ja viele Leute heute eigentlich
kennen. So nach dem Motto, wir lassen isolierte Anwendungen laufen. Das ist eigentlich überhaupt nicht so wirklich der Hintergrund von Docker gewesen.
Der Hintergrund von Docker ist, und das ist auch das, wo ich der Meinung bin, dass es immer noch am besten ist, dafür zu verwenden,
nachvollziehbare Entwicklungs-Setups.
Also eines der Punkte, ich will nicht sagen der Grund, ja.
Nachvollziehbare Entwicklungs-Setups, um dieses Problem zu lösen, dass ein Entwickler sagt,
ey, bei mir funktioniert es, warum funktioniert es bei dir nicht? Dann baut man einen Container mit allen Abhängigkeiten und jeder kann
das Bild, den Container, die Anwendung bei sich starten und es läuft einfach.
So, das ist der eigentliche, mit eines der Hauptgedanken gewesen bei Docker.
Und das hast du natürlich bei einer einzelnen Linux-Kiste nicht. Wenn du eine einzelne Linux-Kiste aufbaust, oder
du baust jetzt drei Linux-Kisten auf, bei dem ersten läuft die Anwendung, bei den anderen zwei nicht. Musst gucken, was installierst du für Packages nach
sonst wie. Also das Problem wollten die lösen. Wenn du eh auf der Kiste drauf bist,
wo es läuft, dann kannst du auch die Anwendung dreimal nebeneinander starten, wenn die in unterschiedlichen Verzeichnissen sind.
Ist es jetzt nicht so wild? Natürlich ist ein Docker-Container noch mal ein bisschen besser sandboxed im Vergleich zu
normal gestarteten Anwendungen. Und was der große Vorteil ist, die Anwendungen selbst, die müssen halt nicht,
die müssen halt nicht großartig weiter
customised werden. Du musst keine Config großartig anpassen, dass es sich nicht in die Quere kommt, oder was auch immer.
Du kannst einfach die Anwendung starten, starten, starten, 20 mal parallel auf einer Kiste und es stört keinen. Für die Anwendung sieht das immer gleich aus.
Also ich würde tatsächlich sagen, dass das reine Sandboxing,
wenn man Anwendungen jetzt mit Docker laufen lässt, gar nicht mal so sehr der Hauptsache, also diese Sicherheitssache,
der hauptsächlich
ausschlaggebende Punkt ist, warum man es macht. Sondern man macht es hauptsächlich, weil es simpler ist, mehrere Anwendungen nebeneinander laufen zu lassen, unabhängig voneinander.
Und dass die Anwendungen sich nicht in die Quere kommen. Zum Beispiel, stelle dir mal vor,
normalerweise schreiben Anwendungen unter warlog. Das heißt, du musst dich auf jeden Fall unter Linux in irgendeiner Art und Weise
müssen die Anwendungen benannt sein, entweder nach
Systemd, Services, wie auch immer. Musst du dir irgendwie unterscheiden, dass nicht alle Anwendungen nach warlog meine Anwendung.log schreiben.
Das wäre nämlich ein bisschen doof.
Das Problem hast du in einem Docker-Container nicht. Die schreiben alle in ihr Systemlog. Das kannst du dir mit Docker angucken,
oder noch besser, du sammelst die Logs natürlich irgendwie zentral ein. Also dieser Sandboxing-Aspekt ist gar, würde ich jetzt, zumindest aus meiner Sicht so sagen,
gar nicht mal so der hauptsächliche
Security-Grund, warum alle Docker verwenden sollten. Zumindest nicht in dem Fall. Wenn man jetzt ein bisschen weitergeht in
Richtung Container-Orchestrierung mit Kubernetes und sowas, das hat ja mit Docker jetzt nur noch am Rande zu tun.
Ich glaube, mittlerweile ist Kubernetes selbst komplett Docker-free. Es ist nichts mehr von Docker drin.
Da sieht das Ganze natürlich ein bisschen anders aus, wie das mit Container-Isolierung aussieht. Nichtsdestotrotz, wenn man Wert legt auf
Isolierung von Anwendungen, also wenn man wirklich sicher sein möchte, dass Anwendung A
nichts, aber auch wirklich gar nicht irgendwie zur Anwendung B da reingucken kann.
Ja, sagen wir mal so, du bietest eine Dienstleistung an, irgendeine, keine Ahnung,
Zeiterfassungsabrechnungssoftware in der Cloud,
also für den Kunde in der Cloud, und du willst halt nicht, dass zufälligerweise, auch bei irgendeinem Angriff oder was auch immer,
jemand von der Anwendung A die Daten von der Anwendung B auslesen kann, weil es zwei komplett unterschiedlichen Leuten gehört.
Also, wenn du wirklich ganz, ganz viel Wert auf Isolierung legst, es gibt natürlich verschiedene Zwischenstufen. Du kannst anfangen mit verschiedenen Heimatverzeichnissen,
du kannst mit SE-Linux, das ist eh für mich so.
Wie hat letztens auf der Arbeit einer gesagt, SE-Linux ist der Endgegner für mich.
Das trifft's eigentlich ganz gut.
Also, du kannst natürlich einmal unterschiedliche User, unterschiedliche Heimatverzeichnisse, irgendwann fängst du noch an mit ACLs,
dann kannst du auch anfangen mit SE-Linux, mit Docker-Containern,
mit vielleicht gehärtetem Kubernetes-Zeug, oder,
und wenn du wirklich richtig viel Wert auf Isolierung der Anwendung legst, dann kriegt jede Anwendung eine VM.
Und das ist somit das Beste, was du machen kannst. Also, wenn das dein Hauptaspekt ist, die Isolierung von unterschiedlichen Anwendungen,
dann gibt es immer noch nichts Besseres und nichts Sichereres als VM. Na gut, unterschiedliche Hardware, aber,
also, VM ist mittlerweile so erprobt und Battletestet, so, da würde ich sagen, das ist okay.
Also, wenn du da ganz, ganz sicher sein willst, ist das Beste tatsächlich, du startest mehrere VMs,
und VMs müssen in der heutigen Zeit ja nicht mehr super schwergewichtig sein.
Es gibt ja jede Menge Lightweight-Sachen.
Nichtsdestotrotz braucht eine VM natürlich immer mehr Leistung als ein Container.
Ja, äh, das habe ich lange erzählt.
Reicht das als Antwort? Ich weiß gar nicht, ob ich so auf den Kern so...
Ja, doch, eigentlich schon. Moin.
Also, wie gesagt, es macht in manchen Fällen auch einfach keinen Sinn.
Also, wenn es dir reicht, dass du verschiedene User anlegst,
und dann die Anwendung mehrfach startest, dann macht das sprich nichts.
Also, du musst die Anwendung nicht zwangsläufig verkontainerisieren.
Aber woran man jetzt beispielsweise sieht, ist, wenn das auf mehr als einem Server sein soll,
dann ist es natürlich toll, wenn du so ein Self-Container-Image hast,
wo du weißt, wenn du das startest, ist alles dabei, was die Anwendung braucht.
Aber Docker ist halt hauptsächlich auch mal gedacht gewesen dafür,
um das Problem zwischen Entwicklerkisten zu lösen, das bei dem einen geht und bei dem anderen nicht.
Und wenn man das im Hinterkopf hat, ergibt auch vieles mehr Sinn,
wie das in Docker gemacht ist.
Ich renne nächstes Jahr dann bei diesem Challenge-Lauf mit, easy.
Sind nur fünf Kilometer oder so. Nee, mache ich nicht.
Werde ich nicht mitrennen, weil das ist immer erst abends um 18 Uhr oder sowas,
dann will ich nicht in Frankfurt bleiben.
Moin.
Habe letztens einen kleinen Home-Server gebaut und dort mit Ansible und Docker-Containern gehabt.
Funktioniert ganz gut, aber gibt mir noch Zeug zu... Ja.
Ja, man muss halt auch gucken, dass man es nicht übertreibt.
Also, es ist cool, wenn man das macht, damit man das lernt.
Man lernt sowas teilweise mehr, als wenn man es auf der Arbeit verwenden muss,
weil man einfach Zeit hat, sich in Ruhe damit auseinanderzusetzen
und nicht irgendwas am Ende bei rauskommen muss.
Aber...
Ich habe beispielsweise keinerlei Ansible und keinerlei IAC bei mir daheim
für irgendwelche Kisten.
Weder für die Raspberry Pis, noch für meinen HP-Server, der hier hinten steht.
Wozu?
Da gibt es... Ich mache ab und zu mal ein Backup von der System-Config.
Oder von der Startup-Config.
Ansonsten...
Abends in Frankfurt...
Nein, da ist kein Problem, da sind ja tausende Leute da.
So, Leute, ich stöpsel mal kurz mein Mikrofon um,
dass das wieder ein bisschen besser klingt.
Zack.
Eine Runde muten.
Was machst du? Backup, Air-Sync, ja.
Ich habe das wirklich so billig wie...
Wobei, das stimmt nicht ganz.
Aber ja, im Prinzip schon. So billig wie geht.
Also, das ist ein Job in Unraid, der das macht.
Ich glaube, der macht das mit Air-Sync.
Das Air-Sync einfach auf eine externe USB-Platte.
Und ich bin, wie gesagt, ich bin da mit Unraid nicht wirklich glücklich.
Ich wollte es nie haben.
Ich bin damit auch nicht wirklich glücklich.
Aber es ist so für im Heimbereich immer noch eines der kleinsten, kleineren Übel.
So wirklich was Gescheites, was mich da von im Heimbereich groß überzeugt,
gibt es irgendwie einfach nicht.
So als...
Also wahrscheinlich können sich alle Leute freuen,
die irgendwanns seine neue USB-Platte bekommen.
Also wahrscheinlich können sich alle Leute freuen,
die irgendwann Synology NAS gekauft haben,
weil es echt eine simple, ganz gute Oberfläche hat,
wo man einfach klicken kann und gut ist,
wenn man sich möglichst wenig damit beschäftigen will.
Aber ich will halt beides machen.
Ich will viele Einstellungsmöglichkeiten haben,
aber es auch, wenn ich keinen Bock habe, schnell und easy.
Wieso nicht ESX?
Weil du mit ESX keine Container mit irgendeinem Frontend easy starten kannst.
Ja, mit Proxmox kannst du zwar Container starten,
aber keine fertigen Images.
Sondern... Doch!
Fertige Images, aber keine Docker-Images,
sondern irgendwie so Docker in LXC und sowas.
Da musst du dich wieder selbst ums Container-Handling kümmern.
Und das ist einfach painstjam.
Ich bin auch mittlerweile kein großer Fan mehr von Docker-Compose.
Oder auch für Kubernetes-Cluster habe ich daheim keinen Bock.
Deswegen finde ich so ein Management-Frontend,
wie das Android hat für Docker-Container oder Synology hat,
eigentlich ganz gut.
Trunas hätte das theoretisch auch,
aber Trunas ist unter der Haube ein K3S-Cluster.
Kluster kann man nicht sagen.
K3S, also Single Node Kubernetes.
Mit...
Das ist im Prinzip nur ein Helm install GUI.
Und das habe ich mal ausprobiert, Trunas,
was Container-Handling angeht.
Das war grausam.
So, ich mute mich mal kurz und stecke das Mikrofon um.
So, ich bin wieder da, aber ich höre mich selbst noch nicht.
Das heißt, jetzt muss ich mich erstmal hier einstöpseln.
Ja, jetzt höre ich mich wieder.
Exzellent.
Nee, Docker-Compose ist vollkommen in Ordnung,
aber irgendwie habe ich keinen Bock mehr
auf YAML-File, Docker-Compose von Hand.
Seit ich hauptsächlich Kubernetes verwende,
weiß ich nicht, habe ich keinen Bock mehr auf Compose.
Und ich habe aber auch keinen Bock auf Kubernetes bei mir daheim.
Naja, wenn es dafür gedacht ist,
ist halt die Frage, warum sie so viel Wert darauf legen,
ein UI anzubieten für Container und für Virtualisierung.
Also, da fließt ja einiges an Hirnschmalz bei denen rein.
Oh, nee, bloß nicht.
Portainer ist der Sack, Alter.
Das kann ich überhaupt nicht ab.
Also, dann mache ich ja mittlerweile lieber
Docker auf Command-Line,
wenn es einfach nur darum geht,
zwei, drei Container zu starten.
Deswegen finde ich so ein Management-UI
wie in Android gar nicht mal übel.
So sieht es aus.
So, dann lasst uns mal die wöchentlichen
ShitHub-Trends angucken.
Also, es spricht überhaupt nichts dagegen,
das zu benutzen.
Was würdest du im kommerziellen Bereich
für deinen Anwendungsfall verwenden?
Wenn ich viele Container habe,
dann würde ich irgendeinen Managed-Kubernetes-Cluster nehmen.
Keinen selbst installierten.
Einen Managed-Kubernetes-Cluster.
Und wie man das managt,
da gibt es dann wieder die unterschiedlichsten
Ansätze.
Zur Zeit das angesagteste
ist Flux oder Argo CD.
Dass sich das automatisch
aus YAML-Anwendungsdefinitionen
von einem Git-Repo syngt.
Das ist so zur Zeit das,
worauf viele schwören
in dem Bereich.
Es gibt noch mehr,
aber Argo CD und Flux sind so die
zwei, die mir jetzt so spontan einfallen.
Es gibt noch
es gibt noch Cloud Bees
oder irgendwie so heißt das.
Verwendet keiner.
Aber das haben wir sogar im Stream
schon mal gemacht.
Ist es ja auch.
Pass mal auf.
Moment mal, ich zeig dir.
Das ist.
Das ist Weltraumtechnik.
Das sind alles unterschiedliche Projekte
im Kubernetes-Umfeld.
Das ist der Cloud Native Computing
Foundation.
Heißen die glaube ich.
Also der Cloud Native Computing
Foundation
Cloud Native Interactive
Landscape.
Alles klar?
Das ist tatsächlich was.
Das könnte man wahrscheinlich auch
auf irgendeinem Business-Ding einbauen.
So und hier sehen wir jetzt
das Cloud Native Computing Foundation
Cloud Native Interactive Landscape.
So und das sind alles.
Nicht als PDF.
Das sind alles Projekte.
Das sind Projekte,
die hier drinnen stehen.
Es gibt natürlich noch viel mehr.
Die sagen wir mal so im Cloud Native
Kubernetes-Umfeld angesiedelt sind.
Man kann das noch umstellen,
dass es nur offizielle
oder Projekte,
die damit was zu tun haben,
einblendet.
Da sind es ein bisschen weniger.
Aber ihr seht,
es sind immer noch übelst viele.
Und natürlich muss man nicht
alles können,
aber das ist eines der Hauptgründe,
warum das ganze Cloud
und vor allem Kubernetes-Thema so komplex ist.
Weil Kubernetes alleine
wie sagt man so, cuttet es halt nicht.
Guck!
Kubernetes hat hier ein Ding.
Ein Ding ist da drinnen.
Aber der Rest hängt irgendwie
na gut, die gRPC jetzt vielleicht wirklich
nur so am Rande, aber irgendwie
damit zusammen.
Und du brauchst so grob einen Überblick
über das Zeug,
dass du weißt, wie du das am besten
alles zusammenarbeiten lässt.
Also du musst nicht
alles können.
Gehen wir mal ganz schnell durch.
Von was habe ich schon mal was gehört?
Davon habe ich schon mal was gehört.
Ich könnte es aber gar nicht einschätzen, was es ist.
Ähm.
Achso genau, das ist die MySQL-Geschichte.
Also das kenne ich.
Das habe ich auch schon mal gehört.
Äh, Oracle.
Uääh.
Nee, Oracle, ja bloß.
SAP, EGIT, es wird ja immer ekliger.
Wir müssen das mal kurz ein bisschen
Ah nee, da sind jetzt alle drauf.
Ein bisschen reinzoomen.
Okay, und jetzt Fullscreen vielleicht?
Okay, jetzt sieht man ein bisschen was.
Ah, oder auch nicht.
Moment, jetzt ist Fullscreen, aber man kann nicht mehr scrollen.
Alter, was ne Kackseite, man.
Okay, doch.
Gamepad, danke für den Sub.
Also.
Kennen wir MySQL, kennen wir
sagt mir nix, kann ich noch nicht mal
lesen, kann ich auch nicht lesen.
Das kenne ich.
Das habe ich auch schon mal
irgendwo gesehen, SQL Server.
Okay, davon kenne ich ganze drei Sachen.
Cloud Events
sagt mir was, NUTS sagt mir auch was.
Das habe ich, ja,
genau, das habe ich auch schon mal gesehen.
Ansonsten
von dem restlichen Kram,
das kenne ich auch.
Ansonsten von dem restlichen Kram,
keine Ahnung. Helm
kennt jeder, der ein bisschen was mit Kubernetes schon gemacht hat.
Das dürfte somit eines der bekanntesten
Sachen sein. Das ist zum
installieren
von Anwendungen, also sprich
es sind Kubernetes Manifests halt
vorbereitet.
Fix und fertig, dass man eine Anwendung zum Laufen
kriegt. Backstage habe ich
auch schon mal gehört, Buildpacks kenne ich.
Kubela sagt mir auch was, Kubwirt kenne ich auch.
Das ist um KVM Sachen
in Kubernetes laufen zu lassen, falls man wirklich
VMs haben möchte.
Operator Framework habe ich auch schon
mal gehört.
Das kommt mir auch bekannt vor.
Canico kenne ich auch. Das ist irgendwas
zum Container
bilden.
Ohne Root-Berechtigung.
Irgendwas komisches,
Container-Build in
Kubernetes oder sowas.
Packer kenne ich noch.
Tanker habe ich
auch schon mal gehört. Das ist irgendein
Jaml-Dialekt
glaube ich.
Conveyor habe ich schon mal gehört.
Raft auch.
Was ist das? Docker-Compose.
Ja, Docker-Compose kennen wir auch.
Also sprich,
man kennt ja nicht mal alles
davon, aber
es ist auf jeden Fall wichtig, dass man bei vielen
dieser Kästchen zumindest
ein bisschen
schon mal was von gehört hat.
Ich gehe jetzt nicht alles durch, das dauert
drei Stunden.
Die Logos sind teilweise richtig pepega.
Hier Rook, das ist irgendein
File-System-Zeug. Hier steht ja auch
hier unter Storage. Also es ist nie verkehrt,
sich aus diesen ganzen Kästchen so ein bisschen,
gerade hier was Proxy und
sowas angeht.
Nginx ist mit wahrscheinlich der bekannteste.
Envoy ist halt oben, weil es ein Cloud-Native-Projekt
ist und
die coolen Leute
das wahrscheinlich
benutzen. Aber die meisten benutzen
tatsächlich eher Nginx.
Nginx ist halt so mit
das Default,
der Default-Proxy
für
Kubernetes. Das liegt auch daran,
weil das offizielle
Ingress-Modul
von Kubernetes selbst eben
auf Nginx basiert. Und ich kann es ja
nicht oft genug sagen, man darf
Ingress
Nginx
nicht mit Nginx Ingress verwechseln,
weil das eine ist der offizielle Kubernetes
Ingress vom Kubernetes-Projekt,
der auf Nginx basiert und das andere
ist der offizielle Nginx vom
Nginx-Projekt für Kubernetes.
Alles klar?
Und das hier ist tatsächlich was, was die
in letzter Zeit stark im
Kommen ist.
Service Mesh.
Hauptsächlich für MTLS,
dass Container auch untereinander
verschlüsselt reden können. Aber es gibt noch
viele weitere nice Sachen.
Und Linkerd ist
mit Abstand zumindest das, was ich beigeguckt habe bisher.
Mit Abstand das Einfachste und
Istio ist das Komplizierteste, wo keiner
durchblickt. Istio gibt es
beispielsweise bei Google in der Cloud
Managed. Da heißt es dann
glaube ich, wie heißt das?
Antos
oder
Anteos oder sowas.
Das ist quasi ein Istio gemanagt von
Google.
Nicht TOS.
Also ihr seht,
es ist,
wir wollen auch gar nicht in das Thema
Loganalyse,
Performancemetrics und irgendwelche
Statistiken gehen. Da gibt es noch mal tausend
verschiedene andere Sachen.
Ihr seht, das ist das, wo auch ein
Großteil der Komplexität im Cloud
und vor allem im Kubernetes-Umfeld herkommt.
Weil Kubernetes selbst nur die halbe Miete ist.
Die 30 Milliarden
Sachen drumherum, über die man so grob
zumindest mal was gehört haben sollte
aus verschiedenen Bereichen, die machen es halt
richtig kompliziert.
Aber ich wollte mir die GitHub-Trends
diese Woche angucken.
In meiner Ausbildung starte ich gerade
in die Virtualisierung rein.
Wir
Azubis haben jetzt einen eigenen
Host. Du meinst
einen eigenen ESX.
So eine eigene, alle ausgemusterte
Kiste, wo ihr euch wahrscheinlich
ESX oder was benutzt ihr?
Also wir
hatten damals den Azubi-Cluster beim
Provider, wo wir uns austoben konnten.
Wo wir mit alter
Hardware auch üben konnten. So nach dem Motto
Okay, Cluster-Node fällt aus, wir tauschen mal
aus und sowas.
Da hatten wir einen alten
also aus alter Hardware einen ESX-Cluster.
Und ich gehe mal davon aus
also das war noch vor Zeiten, bevor es glaube ich
ESX-E gab.
Ich gehe mal davon aus, wir haben eine offizielle
VMware-Installation gemacht, ohne VMware-Lizenzgebühren
damals dafür zu bezahlen.
Da haben die es aber eh nicht so ernst genommen.
Weiß gar nicht,
wie das Lizenzmodell von VMware damals
gewesen ist.
Kannst du mal erklären, wie PAM unter Linux funktioniert?
Ne, es gibt niemand, der das richtig
versteht.
Also
eine Datei, die du dir merken musst,
wenn es um Berechtigung, ne nicht
Berechtigung, um Login und
Authentifizierung unter Linux geht, ist NSSwitchConf
Weil da
steht drinnen, in welcher
Reihenfolge verschiedene
ja, Authentifizierungs
Provider
gefragt werden. Und das ist da, wo
du meistens auch Sachen umstellen musst, wenn
du anderes Verhalten als Default haben
willst. Ja, da kannst du zum Beispiel
in die Reihenfolge reinschreiben und
irgendwo, wenn du LDAP
LDAP-Anwendung, äh
LDAP-Anmeldung machen willst
Ach, im Moment
nicht NSSwitch, was erzähl ich denn?
NSSwitch ist für
Plötzlich, NSSwitch ist nicht für
Ah!
NSSwitch ist für Namensauflösung
Nee, nee, das ist für beides
Jetzt bin ich, guck mal
Niemand, wo wir mal wieder
unterstreichen können, das weiß ich gerade, das versteht
niemand, niemand versteht das
Das ist für Namensauflösung und für Passwort
Authentifizierung, alles klar
Da kann man nämlich reinschreiben, in welche Reihenfolge
was passieren soll, wenn man zum Beispiel
LDAP-Anmeldung
machen will
Dann
muss man
so gedönstert eintragen in seine
in seine NSSwitch-Conf
Aber wie gesagt, verstehen tut's keiner so wirklich
Man copy-pastet Stackoverflow-Sachen
bis es funktioniert
Okay
Also, was trendet denn diese Woche
auf Shithub?
Coding Interview University
Aha, Cuban
Ah, AI
China-Chinesen-AI
Gitness
Ist das irgendwie ein weiterer
ein weiterer GitHub-Klon?
Gucken wir uns mal an
Okay, fancy Webseite
schon mal, fancy Webseite
mit Animations
und allen
Fast schon ein bisschen viel
Aber hier, also auf der Webseite
hat sich der Webdesigner auf jeden Fall
ausgetobt, oder was denkt ihr?
Das ist ja fast schon
Apple-Style, die Webseite
Also, da
hat er sich echt ausgelassen
Da steht irgendwas drauf
Es wäre natürlich cool
mal so ein Screenshot vom
Interface zu sehen, so was es eigentlich ist
ja
Ich hab immer noch keine Ahnung was es ist
Ist es irgendwie eine CI-Plattform oder so
Was ist das überhaupt?
Open-Source Code-Hosting und Pipeline-Engine
Aber warum?
Manchmal fänd' ich's nice bei Projekten
wenn einfach am Anfang dastehen würde
Das ist es und deswegen sollte man
es verwenden, weil das verstehe ich jetzt an der Stelle nicht
Ich weiß echt nicht, was es mir bringen soll, aber es trendet, es muss gut sein mit 30.000 Sternen.
AI? JavaScript ist am trenden. Warum trendet JavaScript? Ja, Use-Case-Erklärung, genau so
was wäre nice. Warum trendet JavaScript? Gab es da irgendwas Neues? Irgendwie, ja doch,
erst 2023 gab es doch jetzt, oder? Oder ist das schon eine Weile raus? In GitHub ist eine
kompakte Beschreibung. Ja, aber deswegen verstehe ich immer noch nicht, warum ich es verwenden soll.
Ich kann einfach GitHub mit GitHub Actions verwenden. Dann habe ich eine Open-Source-Developer-Plattform
mit Continuous Integration. Naja, nicht wirklich. Also je nachdem, wie ich von GitHub Actions
darauf zugreifen will, ist es mit Continuous Delivery von GitHub Actions, je nachdem, wie man
das gemacht hat, wann das geht. Letztendlich kannst du dich ja auch per SSH und Repo-Secrets
und so einloggen und anstoßen. Aber Continuous Integration ist auf jeden Fall eher die Stärke
von GitHub Actions als Continuous Delivery. Aber es ist natürlich sinnvoll, zum Beispiel sein
Container-Image zu bauen in GitHub Actions und das in die Registry zu pushen und das dann
anderweitig auszurollen. Man könnte ja sagen, okay, das Container-Image veröffentlichen ist
schon Delivery. Ja, bestimmt Geschmackssache, wie man das wie wo klassifizieren wird. Aber warum
soll ich einfach GitHub Actions verwenden? Also aktuell verstehe ich es noch nicht. Und ich finde es auch ein
bisschen doof, dass es... Also wisst ihr, das Beste ist immer, bei Projekten, deswegen habe ich das bei
meinen auch so gemacht, ein Screenshot. Immer ein Screenshot rein. Ja, also... Nee, nee, nee, Mama. GitHub
Wobblers. Deswegen habe ich bei allen Sachen, wo ich mir denke, ey, das könnte vielleicht irgendjemand
interessieren, habe ich ein Screenshot drin. Ja, hier ist ein Screenshot drin, wie das wie das dann
im Endeffekt das Dashboard aussieht, das Ganze, wie die Settings aussehen. Hier ist ein... Ist,
glaube ich, sogar ein... Nee, kein GIF. Ist ein Screenshot drin vom CLI-Workflow, wie man das,
wie man das aufbaut. Was hier ist mit dem... Nice Emoji Fighter, read me. Ja, hier ist ein Bild
drin. Hier ist ein Bild drin von der... Wo ich mal versucht habe, Versandtracker zu bauen. Und
sogar hier vom EPG-Champ ist ein Bild drin. Also insofern, ich finde, Screenshots ist immer das
Beste, was man machen kann. So, was haben wir denn sonst noch? JavaScript-Trends. Was ist ja los
heute? Wieder Corona am Start. Warte mal. Fuck. Ich kann mich jetzt ja auch nicht muten. Normalerweise
kann ich mich muten, aber ich habe ja mein Mikrofon direkt hier dran gestöpselt. Kann
ich mich nicht mal mehr muten, wenn ich husten muss. Was soll ich denn gut... Fitness. Nicht
Fitness. Nein, ich will nach Fitness suchen. Ja, da sieht man nicht wirklich was, oder? Ist das,
ist das quasi ein CI-CD-Ding? Im Prinzip ein modernerer Jenkins oder sowas zum Selbsthosten.
So. Real-Time-Voice-Cloning-Pro-Painter-AI. Interessiert mich jetzt nicht. Xenminer. Klingt
jetzt nicht nach AI, klingt aber ehrlich gesagt ein bisschen nach Kryptogramm. Das
ignorieren wir auch mal. AI. AI. Kein AI. Es ist einfach irgendwas... Warum trendet irgendein
Repo mit... Ah, okay. Das sind Beispiele für, wie man mit HTML coole Sachen machen kann. Ja,
das ist doch gerade mal so verkehrt. Oh ne. Ist das ein eigenes, ist das wieder ein neues UI-Framework?
Ne. What the fuck? Was bin ich sehend? Ne, das ist eine Plattform, wo man Kurse machen kann für
Webdesign oder so. Okay. AI ignorieren wir mal. Alter. Pre-Programming-Books. Okay, nice. Also,
wisst ihr, wisst ihr Leute, wenn ich das sehe... Ihr kennt ja das beste GitHub-Repo ever, oder? Ja.
Anime-Girls-Holding-Programming. Nicht Pregnancy-Test. Programming-Books. So. C++. Ich
hab keine Ahnung, warum das überhaupt ein Repo ist, ja? Aber das hat einfach 17.000 Sterne.
Arzi, danke schön für den Sub. Warum auch immer das ein Ding auf GitHub ist, aber 17.000 Leuten
scheint es zu gefallen. So, was haben wir sonst noch hier? Local-Stack. ABS-Zeug. Das neue Windows-Terminal.
Alter! 90.000 Sterne. 90.000 Sterne für das neue Windows-Terminal. Da seht ihr mal, wie verzweifelt
Windows-User sind, dass die einem seit Jahrzehnten endlich mal halbwegs brauchbaren Terminal einfach
90.000 Sterne geben. Da seht ihr immer, wie beschissen das alte Windows-Terminal gewesen ist.
Und das war auch beschissen. Also, das ist, glaube ich, so ziemlich der unusable-ste Terminal-Shit,
den es so gibt. Also, ich meine das hier. Moment. Das ist schon das Neue. Wie macht man denn das
Alte? Ist das Alte überhaupt noch unter Windows? Das ist gar nicht mehr da. Wie startet man das
Alte Terminal? Alter, ist das ja schlimm, ey. Wahrscheinlich kann man das Alte gar nicht. Gibt's
das? Das Alte gibt's nicht mehr. Da seht ihr mal, wie verzweifelt die Leute gewesen sind. Also, das
neue Windows-Terminal, das hier, das kann man ja tatsächlich halbwegs benutzen. Es ist natürlich
weit davon entfernt, ein ordentliches Terminal zu sein. Ein ordentliches Terminal ist zum Beispiel
sowas hier. Warum benutzen wir nicht gleich die Power-Shell? Das eine hat doch mit dem anderen
nichts zu tun. Das eine ist das Terminal, das andere ist die Shell. Das eine hat mit dem anderen
gar nichts zu tun. So, das hier ist zum Beispiel ein ordentliches Terminal. Das hier ist das
Terminal und da drinnen läuft eine Shell. Da drinnen kann aber auch eine andere Shell laufen.
Eigentlich egal. So, das ist ein ordentliches Terminal. Das hier ist auch ein brauchbares
Terminal, aber das alte CMD-Terminal hier, Windows-Terminal, CMD, das Alte, falls sich da
jemand nicht mehr dran erinnern kann, ich meine jetzt das hier, meine ich, ja? Schrecklich. Schrecklich.
Und die Leute sind so verzweifelt, dass die 90.000 Sterne für das neue Terminal raushauen,
wenn das erste halbwegs brauchbare ist seit Jahrzehnten. So, was haben wir als nächstes?
Okay, AI? Nee. OpenCore Legacy Patcher. Was machen die? Experience macOS just like before.
Ach, das ist für alte Macs. Powertoys, okay, dem kann man mal einen Stern geben. Da sind ein
paar ganz praktische Sachen drin. Zum Beispiel das Shortcut-Tool. Wagtail. Agents, AI-Zeug.
Ich brauch unbedingt meinen Mute-Knopf, dass ich euch nicht immer ins Ohr husten muss. Ja,
übelst trocken im Hals gerade. Web-Framework für Go und irgendwelche PDF-Geschichten. Ja,
gut. Ja, gut. Nicht so spannend. Lass doch mal, Moment, das war trending this week. Lass mal
grad gucken, was in der .NET-Welt so trendet. Maxxans Trink, ich trink schon die ganze Zeit,
aber ich hab super trocken im Hals. Schade. Ich hab mir ja für die Zeit, müsste ich mal wieder
verwenden. Für Zeiten, in denen ich viel streame. Letzten paar Wochen hab ich weniger gestreamt,
wäre aber nicht so wild. Aber es gab ja mal Zeiten, da war ich jeden Tag abends on. Ich
hab mir damals so ein Kopium-Ding gekauft. Inhaliergerät. So ein Teil hab ich mir damals
gekauft. Dass mein Hals nicht so trocken ist, wenn ich zu viel laber und zu viel streame.
Sehste mal hier, was für Kosten ich mich wieder gestürzt hab für euch. Kopium-Time.
Irgendwie sowas. Hat's was gebracht? Ja. Kommst dir zwar vor, als hättest du sonst was für eine
Krankheit, weil du das regelmäßig brauchst. Aber es ist, wenn du viel laberst und was man halt macht.
Ich laber ja quasi dann zwei, drei Stunden durchgängig und wenn du das jeden Tag machst. Ich
mein, gibt's Streamer, die machen acht Stunden am Tag, aber die spielen dann halt auch und labern
vielleicht nicht komplett durchgängig. Zumindest, wenn du jeden Tag drei Stunden schwätzt,
so sagen wir mal, ohne Pause jetzt auch ein bisschen nicht super. Ich hänge in der Ecke
und krieg kaum ein Wort raus. Entspannt. Es hat wirklich was gebracht. Also in Zeiten,
wo ich jeden Tag oder jeden zweiten Tag ein paar Stunden online war, hat es richtig was
gebracht für den Hals. Ich hab bei weitem nicht mehr so einen trockenen und gereizten Hals.
Letztendlich macht man da einfach nur ein bisschen Salz, Salzlösung rein,
so Salzwasser und setzt sich dann da sechs, sieben Minuten hin. Aber das ist, das bringt
wirklich was. Also kann ich auch jedem empfehlen, der einen trockenen Hals hat. Also nicht das,
irgend so ein Ding in der Richtung. Ich hab das gekauft, weil es irgendwo, weil ich glaube ich,
bei Amazon damals irgendwo empfohlen bekommen habe oder vielleicht sogar bei irgendeinem
Prime Day oder so. Ich weiß nicht. Und dann habe ich gesagt, hier, komm mal ausprobieren.
Es hat wirklich was gebracht. Muss natürlich auch die passende Salzlösung. Mark Jojo,
danke schön für den Sub. So, was trendet denn in der .NET Welt? Power Toys. Ja,
okay, hatten wir schon. Maui. Ja, warum Maui trendet, verstehe ich nicht. Maui ist Shit und
ich warte eigentlich nur darauf, dass Microsoft eine Meldung veröffentlicht, dass das Projekt
eingestellt wird. Vielleicht nicht dieses Jahr, vielleicht nicht nächstes Jahr, aber dann. Ich
glaube nicht, dass Maui lange da bleiben wird. Was hältst du von einem KI-Stream,
um alle Sterne auf GitHub einzusammeln? Wie, wie, wie, hä? Wie jetzt? Du meinst,
ich soll, ich soll ein KI-Projekt veröffentlichen, damit ich mehr Likes kriege auf GitHub oder?
PowerShell trendet, okay. ASP.NET Core trendet. Ich finde echt, ich finde das echt underrated.
Ich meine, man kann sagen, 32.000 GitHub-Sterne ist, also in der .NET Welt ist es definitiv nicht
underrated, aber so in der, so in der Public, so in der öffentlichen Meinung bei IT-Leuten,
finde ich, ist ASP.NET Core etwas underrated. Aus, für meinen Geschmack, wenn man jetzt nicht
einen speziellen Grund hat, ein anderes Backend-Framework zu nehmen, so nach dem Motto,
ah, ich möchte hier Svelte-Kit Full-Stack oder was auch immer machen, ist ASP.NET Core aus meiner
Meinung nach das angenehmste Framework für Backend, Web-Backend, was es gibt. Das hat,
das hat eine super Kombination aus Features, eine super angenehme Sprache, mit der man es
programmieren kann, Performance. Das ist rundum einfach, finde ich, so default-mäßig eine richtig
gute Wahl, wenn man, wenn man sonst keine triftigen Gründe für andere Web-Backend-Technologien hat.
Deswegen mache ich auch die meisten Backend-Sachen mit ASP.NET. Ja, leider ist das Ansehen natürlich
ein bisschen nicht so hoch, weil es von, weil Microsoft in, ja, vor längerer Zeit viel Scheiße
gebaut hat und immer noch teilweise Scheiße baut, darf man ja nicht vergessen. Und,
und eines der Hauptprobleme, wieso ist da Osu? Weil es ein C-Sharp-Programm ist. Osu ist für
unsere Musik-Fans. Das größte Problem bei Microsoft und ihren Open-Source-Projekten
ist die Benamung. ASP.NET Core. Der Name ist auf so vielen Ebenen dumm. Erstens hat ASP.NET Core
mit ASP.NET nichts zu tun, was viele Leute noch kennen und was für viele ein super,
ja, altertümliches Web-Framework ist. Hat nichts miteinander zu tun, außer dem Namen. Es heißt
Core, weil es eine Neuentwicklung war für .NET Core. Das Problem ist, dass Microsoft .NET Core
mittlerweile umbenannt hat in .NET. Also, es ist, die Microsoft-Benamung ist einfach so extrem
pp-ger, was bei ihren, was ihre Produkte angeht, dass, das verstehe ich. Die hätten das komplett
anders nennen sollen. Ja, ich gette, dass sie das erst mal ASP.NET nennen wollten. Core, also
als neues ASP.NET. Die hätten das, die hätten das irgendwie, irgendwie anders. Sowas wie Blazer.
Blazer finde ich okay. Das ist, ja, das ist ein Witz aus Razer Pages und Blazer und WebAssembly.
Aber ich finde, ich finde Blazer ist ein guter Name. Das ist nichts, was es schon gab. Das ist
was Neues. Das ist ein Name, der ist einprägsam und ASP.NET Core, das ist einfach wir. Ja, das,
das brauchen, das brauchen griffigen, entgriffigen Namen. Payday 3 Server Emulation. Das ist ja lustig.
Das gibt es, weil die Payday 3 Server so viel abkacken oder wie. Gibt es eine moderne Form von
Active Server Pages? Ich hoffe ja nicht. Du meinst, du meinst Webforms und sowas, gell? Nee, du kannst
das immer noch verwenden. Also was du, was du mit ASP.NET Core machen kannst, ist klassisches MVC
mit Server-Side-Rendering und Razer Pages. Das funktioniert. Ich persönlich muss halt sagen,
ich benutze den, den Razer Pages Teil von ASP.NET Core nie. Ich mache eigentlich nur WebRP-Projekte
und mein Frontend dann mit, mit Zwelt und ZweltKit. Schlimm mein Hals gerade. Aber ich
bin ja auch kein hauptsächlicher Frontend-Entwickler. So, hier wird Windows optimist mit 8000 Stern.
Avalonia. Siehste? Sehen wir mal, Avalonia ist ein toller Produktname oder ein toller Projektname
im Vergleich zu ASP.NET Core. Kann man sich gut merken und ja, ist, ist griffig und verbindet
man auch irgendwas Gutes. Übrigens wisst ihr, warum das ganze Avalonia heißt? Es ist übrigens
meine Interpretation des Ganzen. Ich weiß nicht, ob die das offiziell gesagt haben. Avalonia ist ja
ein UI-Framework. Im Gegensatz zu Maui, wo haben wir es? Hier. Im Gegensatz zu Maui, was seine UIs
noch selber zeichnet, was, finde ich, der deutlich bessere Ansatz ist. Und dementsprechend auch
komplett Cross-Plattform. Zum Beispiel läuft es auch unter Linux und solchen Geschichten. So,
und es basiert ja auf ähnlicher Technologie, also es ist im Prinzip so ein XML-UI-Beschreibungsdialekt.
Es heißt Avalonia, weil ich glaube, dass WPF quasi das Vorbild, was das UI-Design anging. Dies
glaube ich mal, Project Avalon war Microsoft ursprünglich. Und deswegen haben die das,
glaube ich, Avalonia genannt. Übrigens, es wäre für Microsoft viel cooler gewesen,
sie hätten das Avalon genannt, anstatt Windows Presentation Foundation. Ich meine,
was findet ihr schöner und griffiger als Produktname? Avalonia oder Windows Presentation
Foundation? Microsoft hat aber einen Hang dazu, Zungenbrecher zu machen. Ich erinnere euch nur
mal an Kinect. Kinect hieß Project Natal. Richtig schöner, griffiger, kurzer, prägnanter Name,
den man sich bis heute merken kann. Und als es rausgekommen ist, hieß es dann Kinect. Keiner
konnte es richtig aussprechen. Ja, und es kommt noch dazu, dass Avalonia sich auch noch... Wir
haben es ja sogar hier im Stream benutzt. Ich fand das ganze YAML-Zeug immer noch nicht geil,
aber wenigstens ist das, was rauskommt, ganz brauchbar. Ist Project Dolphin nicht der Gamecube
Emulator? Ist also nicht der Gamecube Emulator? Okay, nice, alles klar. So, also,
lasst mal auf YouTube gucken. Wir wollten uns das Neue, wir wollten uns das hier zum Raspberry Pi
angucken. Raspberry Pi 5. Was kostet der denn aktuell? Kann man den überhaupt schon kaufen?
Hat der jetzt einen Lüfter? Introducing Raspberry Pi 5. Berry Base. Vorverkauf ab dem 23.10.
Okay, Leute. Der wird direkt preordert. Also, lasst mal kurz checken, was da so alles... Leute,
meine Tabs. Ich habe zu viele Tabs offen. Das weiß ich noch nicht. Ich sehe es jetzt zum ersten Mal.
Also, 60 Dollar für die vier... Er ist ein bisschen teurer geworden, aber es wurden anscheinend die
2-Gig-Variante abgeschafft. Ist okay. Ich fände es nicht schlecht, wenn es noch eine 2-Gig-Variante
gäbe, weil 2 Gig reichen für sehr viele Anwendungen auch komplett aus. Okay, was ist denn jetzt da
drin? 2,4 Gigahertz Quad-Core. Ah, es ist kein... Was war das vorher? Ein A51 oder sowas, gell? Es
ist ein deutlich neuerer CPU. Ne, das ist nicht so gedacht. Es gibt... Ah, 4K, 60 FPS, H.265-Decoder.
Dual Output. Ja, den brauche ich so gut wie nie. Den Part davon brauche ich auch nicht so gut wie
nie. Mich würde der Hardware-Encoder tatsächlich interessieren, was es da Neues gibt. Dual Band
Wi-Fi. Okay, es ist AC, aber heißt auch 5 Gigahertz, ne? Sehe ich doch richtig, oder? Chat-Gear. 5 Gigahertz, ne?
War das auch schon. Ja, also 2,4 und 5. Dual Band. So, Bluetooth 5, Bluetooth Low Energy. Ja, welcher
Standard wäre noch ganz interessant? High-Speed Micro-SD-Kart-Interface. Was ist SDR-104-Mode?
Was für... Wahrscheinlich was für Micro-SD-Karten, Flash-Speicher, was auch immer. Zweimal USB-3-Ports.
Supporting SIM. Okay, das ist eine ganze Ecke. Moment, Moment, Moment, Moment. Noch nicht mal,
Leute, ihr wisst, wenn ein Standard scheiße ist, noch nicht mal der Hersteller nennt das richtig.
Das sind keine USB-3.0-Ports. Ich kann es nicht oft genug sagen. Ich kann es nicht oft genug sagen.
Die korrekte Bezeichnung ist USB-3.2-Gen-1x1. Man kann nicht einfach USB-3.0 sagen. Das USB-Forum
hat retroaktiv ihren Scheiß umbenannt. Man muss korrekt sein. Und um die Sache noch besser zu
machen, demnächst haben wir USB-4-V2. Oh, es ist so dumm, Alter. Ich konnte jedes Mal ausrasten,
wenn ich das sehe. Was? Jetzt war ernst gemeinte Frage. Was hat die davon abgehalten, es einfach
USB-4.0 und USB-4.1 zu nennen und die Namen einfach gleich zu lassen? Oder sie hätten es USB-5 nennen
sollen? Hätten sie es eben USB-5 nennen sollen? Letztendlich juckt es doch keinen. Es braucht
irgendeinen Griff in den Namen, aber das ist halt mal richtig, richtig, richtig hängen geblieben,
dämlich, Alter. USB-3.2-Gen-1x1. Übrigens, Chat, wenn ihr es nicht wisst, nur mal so für Leute,
die sich das nicht durchgelesen haben. Was meint ihr, wofür dieses 2x2 und 2x1 und 1x1 steht? Was
denkt ihr? Ihr müsst euch da reinversetzen, das ist was, was auf einer Packung draufsteht. Was
denkt ihr, was das bedeutet? So als jemand, der keine Al-Gigabit, nee, ist falsch. Sind das die
Adern? Ja, korrekt. Das sind die Kupferdrähte zur Datenübertragung. Warum man das reinschreibt,
verstehe ich nicht. Niemand, der sich ein USB-Kabel kauft, also niemand der normalen Leute,
die technisch da nicht so interessiert sind, die juckt es einen kompletten Scheiß. Gar nicht,
juckt das die. Wie viele Kupferleitungen in ihrem USB-Kabel drin sind für die Datenübertragung.
Die Leute juckt, wie schnell das Daten übertragen kann, dass das schön kompatibel funktioniert.
Aber wie viel Daten, das geht denen so am Arsch vorbei, das juckt überhaupt nicht. Ah ja, also
das bedeutet in dem Fall wirklich Generation One, ja, also eine Generation One 3.2 Datenleitung,
einfach. Und hier ist es eine Generation Two mal zwei. Leute, wir. Komplett PPGA wir. So,
dann haben wir USB 2.0 Ports. Nice. Formfaktor ist immer noch der gleiche. Wir haben Gigabit
Ethernet. Oh, schade. Schade, dass es keinen 2.5G Ethernet gibt. PoE Support, das gab es doch die
ganze Zeit schon, oder? Mit einem Head. Neues. Nö, die Kameramodule sind auch noch. Nee. Chatge.
Was ist das da? Dachte, das hier sind die Kameras. Was ist das? PCI zweimal. Okay. Oh, cool. Man kann
jetzt PCI Express anschließen. Wahrscheinlich ist das da unten PCI Express. Da braucht man
irgendwie so ein Flachbandkabel auf einen PCI Express Slot. Okay, das finde ich cool. Das finde
ich cool. Aber es ist nur PCI Express einfach. Also PCI Express 2.0 einfach. Gucken wir mal.
Das ist nicht sonderlich schnell. Hier. Ja, das ist ein halbes Gigabit. Es ist wirklich nicht die
Welt, was da drüber geht. Also man sollte, man sollte vielleicht eher keine. Okay, man könnte,
man könnte eine Grafikkarte anschließen zum Main, falls irgendjemand sowas dafür machen möchte,
was wahrscheinlich preisleistungsmäßig sich null lohnt. Ich meine, es ist trotzdem gut,
dass es das gibt. Denn zum Beispiel möchte man vielleicht tatsächlich eine 10 Gigabit
Netzwerkkarte dran machen, die dann zwar nicht 10 Gigabit kann, aber den SFP Plus Anschluss hat,
falls man Raspberry Pi braucht mit einem SFP Plus Anschluss. Also es kann durchaus Sinn machen,
oder wenn man, oder wenn man ja mal ein bisschen bei schnelleren Storage kriegt,
man damit auch hin. Besser über USB. Also ich bin auch ein bisschen eine Capture Card vielleicht,
oder so. Ich bin auch ein bisschen unschlüssig, wofür man das genau braucht, aber es ist auf
jeden Fall sehr nice, dass es ein PCI Express Interface jetzt gibt. Standard GPIO Header,
so. Also es hat sich ja in der Summe jetzt nicht allzu viel getan. Das Ding sieht auch
nahezu eins zu eins noch aus, wie der Vierer. Bisschen, bisschen anders hier mit dem Ding
unten. Und das ist die Grafikkarte hier, ne? Das ist die CPU, das ist die Grafikkarte. Oder
umgedreht? Ich glaube, so ist das. Nun gut. Ja, New Chipset ist wahrscheinlich wirklich wichtig,
weil die waren ja schon komplett am Limit beim Alten. Okay, dann schauen wir uns mal das Video
dazu an. Schauen wir uns mal das Video dazu an. Das ist der Raspberry Pi 5. Wir haben vorab ein
Testexemplar bekommen und die neuen Raspberry schon mal durch ein paar Benchmarks gejagt.
Guck mal hier, das ist der Raspberry Pi 5. Wir haben vorab ein Testexemplar bekommen und die
neuen Raspberry schon mal durch ein paar Benchmarks gejagt. Der Raspberry 5 ist wie der
Raspberry 4. Also ich habe keine Ahnung von den Benchmark-Ergebnissen. Ich würde aber davon
ausgehen, dass sie eine ganze Ecke besser sind. Neuer Chipsatz und vor allem deutlich modernere
CPU. Der Chipsatz ist nicht so relevant. Das ist eher, dass es halt überhaupt funktioniert.
Ein deutlich modernere CPU. Ich persönlich kenne mich mit Arm so Leistungswerten nicht
sonderlich gut aus, aber ich würde mal sagen, so 40, 30, 40 Prozent schneller vielleicht.
Vielleicht liege ich auch komplett falsch und es ist viel mehr. Ich bin mal gespannt.
Ein vollwertiger Rechner kostet um die 70 Euro und ist genauso klein, aber viel,
viel besser. Klar, schneller sowieso, könnt ihr euch denken, aber er hat auch jetzt erstmals
einen PCI-Express-Anschluss. Ja, das finde ich cool.
Wo man unter anderem SSDs hängen kann. Ja gut, mit SSDs bist du natürlich,
mit 500 MBit macht keinen Sinn, wenn du allein schon USB hast, wo 5 Gigabit drüber gehen.
Dieses Video wird gesponsert von MG1.
NordVPN, nein. Okay, na komm. Wir sind mal, wir sind mal so nett.
Man hat Stress und ernährt sich primär von Fast Food.
Das ist schon mal schlecht. Ich hab übrigens, Leute, ich hab eine Sponsoring-Anfrage
bekommen von HelloFresh. Und wisst ihr, was Teil, was Teil dieses Sponsorings wäre?
Ein monatliche Essensgutscheine, wo ich dann selbst HelloFresh ausprobieren kann.
Und wenn ihr euch HelloFresh bestellt, kriege ich Fettstonks.
Sogar verhältnismäßig, sagen wir mal, annehmbare Konditionen, ja.
Das Problem ist, Leute, nein, ich muss kein FaceReview machen.
Das Problem ist, ich mach so wenig Videos in letzter Zeit.
Ich komm ja aktuell vielleicht mal auf ein Video im Monat.
Da lohnen sich irgendwelche Sponsoring-Sachen gar nicht richtig.
Ich mein, kommt immer ein bisschen drauf an, was, aber also, ja.
YouTuberin hat letztens erst ein Video über den Saftladen gemacht.
Würde ich nicht supporten. Wieso, warum ist das ein Saftladen?
Also ich hab von dem, was ich bisher gesehen hab, eigentlich einen ganz guten Eindruck gehabt von HelloFresh.
Ich kenn auch einen bei mir auf der Arbeit, also auf der alten Arbeit.
Der hatte schon monatelang ein HelloFresh-Abo und war damit echt zufrieden.
Die verschicken auch Saft. Omega Juice. Keine Ahnung, ob die Saft verschicken.
Nein, nein, das haben wir noch nicht geguckt. Ist eine gute Idee.
Ja, aber warum ist es denn jetzt ein Saftladen? Erzählt mal.
Ich will mir das jetzt nicht komplett angucken.
Warum alle Influencer... 15 Minuten.
Warum alle Influencer Werbung machen für HelloFresh?
Naja, weil es Geld gibt. Weil es Kohle gibt. Warum denn sonst?
102.000 Abonnenten später sind sich immer noch...
Ja, keine Ahnung. Vielleicht später.
Kann mir irgendjemand TooLongDidntWatch erklären, warum es ein Kackladen ist?
Na gut, gucken wir uns das Raspberry Pi Video weiter.
Viel zu teuer und zu viel Verpackungsmüll.
Zu teuer ist es ja nicht, wenn es die Leute machen.
Also ja, man kann natürlich sagen, wenn man das selbst kauft, dann ist das alles viel billiger.
Ja, das ist ungefähr genauso, wie wenn ich mir beim Essen gehen eine Flasche Wasser bestelle für 5 Euro.
Die kriege ich im Getränkemarkt für 30 Cent oder so.
Zu viel Verpackungsmüll, okay. Das lasse ich mir noch irgendwie gefallen.
Ist halt die Frage, worauf die achten.
Achten die drauf, dass es...
Ich meine, wahrscheinlich ist weniger Verpackungsmüll sogar noch teurer.
Ist immer schwer zu sagen, also...
Ja, so aus dem Kontext.
Zu wenig Inhalt, okay, das ist natürlich...
Ja, okay, Verhältnis zu was? Zu wenig Inhalt?
Wäre mit regional wahrscheinlich auch nicht wirklich...
Okay, das finde ich natürlich kacke.
Wenn irgendwas erzählt wird, was nicht stimmt.
Das ist natürlich dann auch immer so an der Grenze, wo man sich fragt, so...
Ist das erlaubt?
Du darfst den Leuten ja Scheiße verkaufen.
Du darfst auch wahrscheinlich weglassen, dass es Scheiße ist.
Und es anpreisen als irgendwas ganz Tolles.
Aber du darfst nicht sagen, du bekommst Gold, obwohl es keins ist.
Max...
Also vielleicht mache ich das, muss ich mal gucken.
Wenn das taugt, ich probiere das mal aus.
Die sollen mir so einen Gutschein schicken, dann probiere ich das mal eine Woche aus.
Meine Katze würde jetzt sagen, dann probiere ich das mal aus.
Und wenn das schmeckt, vielleicht mache ich das.
Meine Katze schmatzt übelst beim Fressen, ist mir aufgefallen letztens.
Ich habe in der Küche gestanden und hab da was hingestellt und war dann ein paar Meter weg von.
Und am Anfang, ihr kennt das vielleicht, am Anfang sind Katzen ja immer super vorsichtig.
Aber ich hab die jetzt ja schon eine Weile.
Und die schmatzt rum, Alter.
Du denkst, die frisst gerade ein komplettes Hähnchen oder so.
Dabei sind es irgendwie nur zwei, drei kleine Löffel irgendeinen Mousse.
Und die schmatzt da rum.
Man denkt, Chico, Alter.
Man denkt, du frisst die Glasschüssel mit unten drunter.
So, aber Raspberry Pi angucken.
Viel zu viel Kohlenhydrate und schlechte Fette.
Aber vor allem fehlen Pflanzenstoffe, Bakterienkulturen, Ballaststoffe.
Ungewogene Ernährung und Sport sind wichtig.
Und dabei kann AG1 unterstützen.
Da sind etliche Makro- und Mikronährstoffe drin.
Alle sinnvoll aufeinander abgestimmt.
Ich glaube nicht, dass ich das haben will.
Mit optimierter Bio-Verfügbarkeit.
Mit was?
Was zum Teufel ist Bio-Verfügbarkeit?
Ach so, ob man es aus Bio-Anbau bekommt.
Ist wirklich einfach zuzubereiten.
Einfach einen Löffel Pulver in die mitgelieferte Trinkflasche.
Er sagt absichtlich nicht, ob es schmeckt.
Wasser schüllen, fertig.
Boah.
Es sieht aus wie ein Smoothie, bloß in schlecht.
Die Apfel mit Salat.
Erstaunlich unkünstlich und auch nicht unangenehm süß.
Wenn ihr das auch mal ausprobieren wollt, auf drinkag1.com.
Nee, lass mal.
Bekommt ihr bei Abschluss einer monatlichen Mitgliedschaft.
Einen kostenlosen Jahresvorrat, Vitamin D3 und K2.
Und 5 kostenlose AG1-Travelpacks für unterwegs.
Soll ich euch auch mal was sagen?
Nicht irgendwie super krass wissenschaftlich fundiert.
Aber ich gehe nicht davon aus,
dass irgendjemand Mangelernährung hat.
Der ganz normal isst.
Es ist jetzt nicht so, dass wir hier irgendwie in Armut leben.
Und Tage nichts zu essen bekommen.
Und dann irgendwie nur irgendwas Schlechtes.
Wenn man ganz normal isst, hat man wahrscheinlich keine Mangelernährung.
Wenn man ganz normal isst, hat man wahrscheinlich keine Mangelernährung.
Es mag einem vielleicht mal ein bisschen Vitamin D fehlen.
Mal ein bisschen Vitamin Dings.
Aber im Großen und Ganzen sind wir wahrscheinlich alle ganz gut versorgt.
Oder meint ihr nicht?
In D3 und K2 und 5 kostenlose AG1-Travelpacks.
Wahrscheinlich könnte man sogar.
Jeden Tag McDonalds und Pizza Hut fressen.
Und das wäre halbwegs okay.
Außer, dass man massive Pipo-Fett wird.
Aber ab und zu ein Salat ist vielleicht nicht verkehrt.
Ich denke mal, wenn man wirklich das isst, worauf man Bock hat.
Ich denke mal, wenn man wirklich das isst, worauf man Bock hat.
Und bei mir ist es zumindest so.
Ich esse halt auch durchaus gerne mal Bratkartoffeln-Fetisch oder sowas.
Aber auch ab und zu mal ein Salat. Und das ist gut.
Ich habe mega Hunger in letzter Zeit, Leute.
Seitdem ich hier angefangen habe, mehr Sport zu machen.
Aber jetzt, seitdem ich hier noch Fahrrad gefahren bin.
Ich habe so übertrieben Hunger den ganzen Tag.
AG1-Travelpacks für unterwegs.
Wenn ihr zum 1. Mal bestellt, gibt es außerdem eine Aufbewahrungsdose.
Und einen Shaker obendrauf.
Erbung Ende.
Der Raspi 5, das war jetzt für uns auch eine echte Überraschung,
dass der jetzt schon veröffentlicht wurde.
Denn der Raspi-Hauptentwickler Ibn Abtin hatte in Interviews
bislang immer gesagt, dass erst ab 2024
mit größeren Neuigkeiten zu rechnen ist.
Gut, weil irgendjemand mal irgendwas sagt, kann man ja wirklich nicht mal drauf geben.
Aber nun also doch jetzt schon.
Also schon. Der Raspi 4 ist nun auch über 4 Jahre alt.
Und ja, das Ding ist mir wirklich ans Herz gewachsen.
Und dass der Raspi ein Herzensgerät von mir ist,
das sieht man ja deutlich an diesem Channel.
Über kein anderes Gadget haben wir mehr Videos gemacht.
Ja, außer 30 Milliarden AI-Videos.
Ich habe aktuell
nur noch
2 Stück laufen.
D.h. die anderen liegen unused hier rum.
Ich habe einmal was für meinen 3D-Drucker
und einmal im Keller
wo unter anderem
ein
Automation-Fat dran ist.
Das heißt P-Hat, aber ich finde Fat
die deutlich bessere Aussprache davon.
Ein Automation-Fat dran ist,
aber nicht so einer, sondern Automation-Fat Mini.
So ein Teil ist da dran.
Wobei ich habe einen ohne Display.
Und da hat man zusätzlich noch
die Möglichkeit beispielsweise
ein Relay zu schalten über den Raspberry Pi.
Ich weiß nicht, wie das Chat geht.
Wo sind die Elektronik-Cores unter euch?
Wie nennt sich das, wenn das eine Input mit dem Output nicht
potenzialfrei, das ist das Wort, was ich gesucht habe.
Habe ich recht? Potenzialfrei nennt sich das.
Kannst du ein potenzialfreies Relay schalten.
Dann kannst du verschiedene Geräte
mit ansteuern.
Du hast Analog-Digital-Converter
und du kannst Binary-In-Outputs verwenden.
Ich habe beispielsweise hier
an diesem Analog-Digital-Converter
meine Tür-Gegensprechanlage dran, um zu checken,
ob es geklingelt hat.
Dann macht der Raspberry Pi auch noch die Steuerung
für meine Heizung im Keller.
Das sind, glaube ich, alle. Ich hatte mal deutlich mehr.
Ich hatte noch mal zwei Stück im Wohnzimmer unten.
Als ich noch UniFi-Access-Points hatte,
war das für den UniFi-Controller.
Der andere war für die ganzen Kameras im Haus.
Aber das habe ich mittlerweile auch auf meiner HP-Home-Assistant-Kiste mit drauf.
Dann hatte ich noch Zeros am Start.
Habe ich noch irgendwo einen Zero gerade?
Glaube auch nicht mehr.
Die sind alle weg.
Es sind aktuell nur noch zwei Raspberry Pis übrig geblieben.
Dafür die ESP32s.
Es hängen noch ein paar rum.
Ich habe nur noch zwei im Einsatz.
Wenn ich nicht gerade irgendwas vergessen habe.
Zusätzlich hatte ich noch im Wohnzimmer
kein Raspberry Pi.
Das war ein Rock.
Nee, HC2.
Rockchip oder so. Wie ist das Ding?
Odroid. Odroid HC2.
Das ist zwar kein Raspberry Pi.
Aber das ist auch so ein Single-Board-Computer.
Ein Single-Board-Computer, wo man
Das Gehäuse sieht so krass hässlich aus.
Wo man eine 2,5 Zoll Disk oder SSD anschließen konnte.
Nee, 3,5 Zoll oder eine SSD anschließen konnte.
Hatte ich auch im Einsatz.
Zum Aufnehmen von Fernsehsachen.
Meine Mutter guckt halt gerne
immer noch Rosamunde Pilcher.
Aufnehmen kann aus dem Fernsehen.
Das ist jetzt allerdings auch abgeschafft.
Aktuell, ich glaube, wenn ich jetzt nicht ganz was vergessen habe,
bin ich down to zwei Raspberry Pis.
Spielkonsole bauen.
Home-Server mit z.B. Pi-Hole und Plex.
Eine Mars-Rover-Steuerung.
Das ist die Open-Source-Variante des Mars-Rovers.
Von Plex zu Mars-Rover.
Offiziell von der NASA. Die benutzt auch einen Raspi.
Vieles am Raspi ist besonders.
Unter anderem, dass viele der Platinen in Europa,
genauer in Wales, hergestellt werden.
Unter dem Raspi kein kommerzielles Unternehmen,
sondern die Raspberry Pi Foundation.
Eine gemeinnützige Stiftung,
die Computerbildung für Kinder und Jugendliche fördern will.
Ich finde es wirklich sympathisch alles.
Auch wenn der Ruf der Raspis in den letzten Jahren etwas gelitten hat,
weil die Dinger so schlecht lieferbar waren,
dass man zum Teil Mondpreise dafür bezahlen musste.
Die Preise haben sich aber inzwischen wieder einigermaßen normalisiert.
Den Raspi 4 haben wir leider noch nicht.
Aber wir gehen davon aus, dass er in der Version mit 4 GB
um die oder knapp über 70 Euro kosten wird.
Während es den Raspi 4 auch mit 1 und 2 GB gibt,
gibt es den 5er vorerst nur mit 4 und 8 GB.
Laut Raspberry Pi Foundation sollte der ...
Für viele Anwendungen braucht man eigentlich gar keine 4 und 8.
2 wäre nicht schlecht.
Vor allem, wenn es den noch mal 15 Dollar billiger gäbe.
Wäre doch nice.
Ich gehe auch davon aus, dass die instant ausverkauft sind.
Ich werde mir auch direkt einen kaufen, einen 5er.
... Raspi 5 ab sofort bestellbar sein. Mal sehen, ob das wirklich so ist.
Statt dem System-on-a-Chip-Broadcom-BCM2711
gibt es nun den BCM2712.
Warum? Weil es geht.
Vorgänger 4 ARM-Kerne, die aber höher getaktet sind
und vor allem eine leistungsfähigere Architektur haben.
Ich habe mir auch die WiFi-Zero-Variante 2 Stück Instant gekauft.
Die liegen jetzt hier rum und brauche ich für nichts.
... 70 statt Cortex A72.
Wir haben den Raspi 5 hier mal neben einem Raspi 4 aufgebaut
und ein paar Vergleichstests gemacht.
Der Raspi 5 ist auf jeden Fall deutlich schneller.
Wir haben hier zum Beispiel der Jetstream 2.1 Browser Benchmark.
Da spielt aber auch die Grafikkarte mit rein.
Da ist der Raspi 5 um den Faktor 2,4 mal so schnell wie der Raspi 4.
Wir haben mit 7-Zip Kompression getestet.
Wow! Das ist aber ...
Ich meine, ich habe gesagt, 30-40% schneller.
Das ist einfach mal dreimal so schnell.
Okay, doppelt bis dreifach so schnell.
Das ist viel mehr, als ich gedacht hätte.
... Entpacken und packen.
Da war der Raspi 5 2,3 mal so schnell.
Und bei OpenSSL, also Verschlüsselung,
sogar fast fast schneller.
Oh, das ist nice.
Das heißt, die haben eine CPU mit Krypto-Extensions.
Das ist sehr gut.
Damit könnte sich zum ersten Mal ein Raspberry Pi 5 als Nass eignen.
Viele Leute waren ja der Meinung,
sie wollen sich einen Nass bauen mit dem Raspberry Pi.
Das habe ich nie verstanden.
Jetzt könnte man ihn dafür wahrscheinlich sogar verwenden.
Schade, dass es keine 2,5-Gegner-Zweig-Schnittstelle hat.
Das heißt, es ist immer noch ein bisschen schwierig,
wenn man ein ordentliches, modernes,
ein bisschen besseres Performance-Nass haben möchte.
Kann der AV1 encoden?
Er kann es decoden.
Zum encoden habe ich noch nichts gesehen.
Hardware-Decoden.
Das ist schon ein großer Unterschied.
Geht auch VPN-Server-Client besser mit Sicherheit?
Geht das besser, wenn die CPU Krypto-Extensions hat?
Auch Full-Disk-Encryption wird deutlich besser funktionieren.
Lasst uns doch mal kurz gucken.
OpenSSL hat Krypto-Extensions in der CPU.
Das ist tatsächlich der größte Pluspunkt
neben dem PCI-Express, den ich bis jetzt gesehen habe.
Die Details stehen übrigens hier in der Tabelle.
Das heißt, wenn man die CPU-Extensions
Die Details stehen übrigens hier in der Tabelle.
Drückt gerne die Pause-Taste.
Oben rein stecken auch Erdgeschleuniger
für Verschlüsselungsfunktionen wie AES im Raspi-SoC.
Dadurch laufen Sachen wie OpenSSL und VPN besser.
Der Grafikchip VideoCore 7 taktet 60% schneller als der Vorgänger.
Wie zuvor werden H.265-codierte Videos in Hardware dekodiert.
Die Codecs VP9 und AV1 müssen aber leider immer noch
in Software dekodiert werden.
Das sind die Codecs, die z.B. YouTube
für Auflösungen ab 1080p und für HDR-Videos verwendet.
für Auflösungen ab 1080p und für HDR-Videos verwendet.
4K-Videos auf YouTube konnten wir zwar im Test
trotzdem ruckelfrei abspielen, man sieht aber deutlich
im Auslastungsdiagramm, wie der Prozessor dann aufdrehen muss.
Zum Vergleich, so sieht die Auslastung
bei einem H.265-codierten 4K-Video aus.
Das ist deutlich weniger, weil es eben in Hardware dekodiert wird.
Im VideoCore gibt es wieder 2 Mikro-HDMI-Buchsen,
die jeweils einen 4K-Detektor mit 60Hz anstellen.
Eine große Neuerung ist der neue
RP1-IO-Chip.
RP1-IO-Chip.
Der kümmert sich u.a. um USB, PCI-Express, Ethernet
und die 40-polige GPIO-Leiste.
Beide USB 3.0-Ports können jetzt gleichzeitig
mit 5 Gigabit pro Sekunde arbeiten.
Gut.
Das bedeutet,
wenn beide Ports jeweils 5 Gigabit,
wenn die sich das nicht mehr scheren,
heißt das, man kann
theoretisch eine
2,5 oder 5 Gig USB-Netzwerkkarte
anbinden.
Was man ja braucht für einen ordentlichen
PCI-Express-Chip.
Was man ja braucht, wenn man ordentlich
Datenübertragung auf sein NAS haben möchte.
Wie gesagt, ich denke immer noch nicht,
dass der Raspberry Pi die beste Grundlage für ein NAS ist,
aber viele wollen das ja machen.
Man könnte z.B. überlegen,
wie schnell war PCI-Express 2?
500 MB die Sekunde.
Wir haben eine PCI-Express 2
eine Lane.
Das heißt,
ein halbes Gig
durch das Encoding
geht ja da wahrscheinlich noch ein bisschen
was verloren.
Heißt aber im Endeffekt,
eine 2,5 Gigabit-Netzwerkkarte
könnte man relativ gut anschließen
an das PCI-Express-Interface.
Und dann hätte man noch
zwei USB 5 Gig Ports
frei für
SSDs und Platten.
Damit könnte man prinzipiell denke ich
ein ganz gutes Netzwerkstorage bauen mit dem Raspberry Pi.
Hardware Encryption
sorgt dafür, dass es auch
CPU-Lasttechnisch nicht komplett durch die Decke geht
bei vollverschlüsselter Platte.
Also ich denke mal,
man könnte natürlich auch ein USB-Port
opfern dafür.
Dann müsste man halt die
Discs an irgendeinem USB-Hub oder so hängen.
5 Gig reicht immer noch ganz gut aus
für ein paar SATA bzw. USB-SSDs.
Wenn du hast
so eine 0815
USB-SSD, eine von den ein bisschen besseren
was machen die denn so?
400, 450 MB die Sekunde oder sowas?
Sind wir mal großzügig und sagen 500 MB
dann kriegst du trotzdem
über so einen 5 Gig-Port
großzügig.
Du schließt 4 daran an.
Es gibt ja immer noch ein bisschen Overhead durch alle möglichen Encoding-Sachen.
Du könntest quasi 4 Stück pro USB-Port...
Ja, ich glaube, damit ist der Raspberry Pi 5 zum ersten Mal
wirklich brauchbar als Netzwerkstorage.
Gerade durch Hardware Encryption.
Wir können jetzt gleichzeitig mit 5 Gigabit pro Sekunde arbeiten.
Ganz neu ist der zusätzliche PCI-Express-Anschluss.
PCIe 2.0 X1 mit bis zu 500 MB pro Sekunde.
Über den optionalen Adapter...
Also ich würde es wahrscheinlich so machen.
Ich würde mir je nach Case die Netzwerkkarte
an das PCI-Express anschließen und den Storage an USB.
Mit dem M.2-Head kann man SSDs dran anschließen.
Was natürlich praktisch ist,
wenn man sich mit dem Raspberry Pi 5 nass baut.
Beim 4er Raspberry Pi musste man Platten oder SSDs über USB anschließen.
Was aber auch immer okay funktioniert.
Ja gut, du hast ja keinen Platz dafür.
Man könnte sagen, man macht das System auf die SSD.
Aber die kann man auch auf die Micro-SD-Karte machen.
Weil bei einem Nass ist ja nicht so,
dass das System jetzt super krassen Storage selbst braucht.
...funktioniert hat.
Ich habe seit 2 Jahren hier einen Raspberry Pi 4 nass mit 3 5TB USB-Festplatten.
Völlig stabil laufen.
Wenn die Platten nicht hoch gedreht sind,
kommt das gesamte System auf eine Leistungsaufnahme von deutlich unter 10 Watt.
Da das System 24-7 läuft, ist das natürlich super.
Weil das so nur ein paar Euro Stromkosten pro Jahr bedeutet.
Ohne angeschlossene Platten,
also nur der Raspberry Pi mit dem Betriebssystem auf Micro-SD,
kommt der Raspberry Pi 4 im Leerlauf auf lediglich 3 Watt.
Und hier dann jetzt auch der 1. Negativpunkt beim Raspberry Pi 5.
Die höhere Rechenpower braucht natürlich auch mehr Strom.
Das Minimum, was wir beim 5er gemessen haben, waren 3,3 Watt.
Beim Raspberry Pi 4 sind es 2,7 Watt.
Das geht aber immer noch klar.
Bei Vollauslastung zieht der Raspberry Pi 5 ohne.
Ich rate mal kurz.
Ich denke mal, 20 Watt dürfte der Raspberry Pi 5 schon ziehen in Vollauslastung.
Weil ich glaube,
beim 4er waren es irgendwie 13 oder sowas.
Ich sage mal um die 20.
Angeschlossene Platte 8,6 Watt.
Der Raspberry Pi 4 nur 6,4 Watt.
Das geht ja noch höher.
Im Leerlauf sind es 22% mehr und bei Last 34%.
Also ich finde die Werte ganz schön okay.
Dafür, dass man sich anguckt, wie viel mehr Leistung der Raspberry Pi 5 bringt,
sind diese maximal 34% mehr Leistungsaufnahme völlig okay, würde ich sagen.
Was ich nur noch sagen muss,
ist, wie das Ganze mit der Temperatur sich verhält.
Wenn man immer einen Lüfter braucht, das wäre natürlich ein ziemliches No-Go.
Das war ja beim Raspberry Pi 4 schon so,
dass der ziemlich warm geworden ist.
Das Schöne ist, dass die meisten Leute
auf den Raspberry Pis eben keinen Workload haben,
der dort dauerhaft hohe CPU-Last verursacht.
Die brauchen mal ein bisschen Rechenpower
für 2-3 Minuten vielleicht, wenn es hochkommt.
Aber danach ist das Ding wieder aus.
Ich bin eigentlich ein großer Fan von diesem Case.
Das ist komplett passiv gekühlt.
Das Case ist halt ein großer Passivkühler.
Das funktioniert allerdings wiederum nicht richtig gut,
wenn man konstant immer Volllast hat.
Weil irgendwann ist das Case heiß
und wenn du dann keinerlei Luftzug drum herum hast
und die Luft da steht,
naja, irgendwann wird das trotzdem heiß.
Aber für mal ein paar Minuten
richtig volle Pulle, hoher Load,
ist das richtig gut.
Raspberry Pis sind glücklicherweise so gebaut,
die takten sich dann eher runter
und die kacken nicht einfach ab,
wenn die zu heiß werden.
Das ist nicht so wild.
Man hat da ein bisschen Performance-Einbußen.
Wenn man das Ding auf Anschlag laufen lassen will,
dann ist das Case vielleicht nix,
aber so gut wie niemand hat das.
Weil egal, was du damit machst,
es sind meistens ein paar Bursts,
wo du mal ordentliche CPU Last hast
oder vielleicht auch ein konstant, aber konstant
an eher 20-30% und nicht konstant 100%.
Also dieses Case finde ich mega nice.
Nicht auf allen, aber auf vielen Raspberry Pis.
Bestimmt auf 4 Stück.
Es gibt es auch noch für die Raspberry 3 Version.
Also auf allen Raspberry Pi 4 habe ich das Case
und ich habe auch noch eine Raspberry 3 Version.
Gibt es auch für Raspberry Pi 3.
Gibt es sogar für Raspberry Pi Zeros.
Also mega, mega nice, das Case.
Ich würde sagen, die Raspberry Pi braucht noch kein Power-Delivery-Netzteil.
Normales mit 3 A reichen hier.
Und er braucht im Normalfall auch keinen aktiven Lüfter.
Beim Raspberry Pi 5 ist das ein bisschen anders.
Man kann den zwar ohne Lüfter nutzen,
die Raspberry Pi Foundation rät aber vom lüfterlosen Betrieb
in engen Gehäusen ab.
Da ist auch erstmals ein Lüfteranschluss auf der Platine.
Finde ich gut, dass ein Lüfteranschluss auf der Platine ist.
Ich würde mal darauf tippen,
mit dem normalen Workload, den die Leute da drauf laufen haben,
ist so ein Fleer Case immer noch eine gute Wahl.
Leider passen dann, dank dem neuen Chipsatz,
der neuen Grafikkarte und so,
wird das alte Fleer Case wahrscheinlich nicht mehr drauf passen.
Der Raspberry 5 ist zwar genauso groß wie der Raspberry 4,
aber Ethernet und USB-Buchse sind vertauscht beim neuen.
Man kann also die alten Gehäuse nicht mehr verwenden.
Ja, definitiv nicht die Cases.
Und so ein Power Delivery Netzteil ist halt auch eine ganze Ecke teurer
als ein normales USB-C Netzteil mit 3 A.
Fazit. Bevor ich meine eigene Meinung sage,
habe ich noch Christoph Windeck nach seiner Einschätzung zum Raspberry 5 gefragt.
Na, wenn der Christoph das sagt, dann muss es so sein.
Das ist nicht die absolute CT-Hardware-Kurrifier.
Ich kann hier an dieser Stelle Christophs Podcast Bitrauschen echt empfehlen.
Der Link ist in der Beschreibung.
So lang ist das schon wieder her?
Das kommt einem gar nicht so lang vor.
Das liegt wahrscheinlich daran, weil der 2 Jahre nicht lieferbar war.
Ja, das ist für mich eines der größten Pluspunkte für den neuen Raspberry Pi.
Das ist für mich eines der größten Pluspunkte für den neuen Raspberry Pi.
Das ist für mich eines der größten Pluspunkte für den neuen Raspberry Pi.
Das ist für mich eines der größten Pluspunkte für den neuen Raspberry Pi.
Das ist für mich eines der größten Pluspunkte für den neuen Raspberry Pi.
Das ist für mich eines der größten Pluspunkte für den neuen Raspberry Pi.
Das sind die Krypto-Extensions in der CPU.
Faktor 18 schneller als der Vorgänger.
Damit dringt der Raspberry Pi 5 in neue Leistungsbereiche vor.
Er ist ja auch ein bisschen teurer.
Das heißt, im Umkehrschluss, der Raspberry Pi 4 oder sogar der 3,
Die bleiben interessant für Projekte, die nicht so viel Rechenleistung brauchen.
Die bleiben interessant für Projekte, die nicht so viel Rechenleistung brauchen.
Der Raspberry Pi 5 ist dann wirklich das Rechentier relativ gesehen zu anderen ARM-Chips.
Der Raspberry Pi 5 ist dann wirklich das Rechentier relativ gesehen zu anderen ARM-Chips.
Er kann natürlich nicht mit einem Desktop-PC mit 18 Kernen mithalten.
Aber er bringt ganz neue Möglichkeiten, wenn es um Rechenleistung geht.
Aber er bringt ganz neue Möglichkeiten, wenn es um Rechenleistung geht.
Besonders gespannt bin ich auf den Adapter für PCI-Express.
Besonders gespannt bin ich auf den Adapter für PCI-Express.
Sodass man an den Raspberry Pi endlich eine NVMe-SSD anschließen kann.
Warum? Ich verstehe es gar nicht, warum da alle so scharf drauf sind.
Das ist PCI-Express 2.0 einfach.
Das ist PCI-Express 2.0 einfach.
Das hast du mit SATA-SSDs geschafft, die Geschwindigkeit.
Da ist eine NVMe-SSD voll verschenkt.
Da schließe ich lieber eine SSD an.
Da schließe ich lieber eine SSD an.
Die ist genauso schnell.
Und potenziell sogar schneller.
Und potenziell sogar schneller.
Nicht nur damit er schneller startet, sondern weil das auch neue Möglichkeiten eröffnet als kleiner Mini-Home-Server.
Nicht nur damit er schneller startet, sondern weil das auch neue Möglichkeiten eröffnet als kleiner Mini-Home-Server.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Er ist sehr schnell angebunden, aber besser als alles was wir bisher kannten.
Oh Leute, ich muss mal ein paar Tabs zumachen.
Zu viel.
Okay, dann let's go.
Naja gut.
Dumme VPN-Werbung macht ja mittlerweile fast jeder.
Sogar ich hätte mal fast dumme VPN-Werbung gemacht.
Aber die haben dann von mir verlangt, dass ich mein Video über VPNs löschen soll.
Da hab ich gesagt, da mach ich keine Werbung für VPN-Anbieter.
Ich hab ja mal ein Video gemacht, Lügen VPN-Anbieter.
Das da.
Was sogar relativ erfolgreich gewesen ist.
Und das gefällt denen nicht, dass ich das Video habe.
Und das wollten die, dass ich das Video lösche, dass sie bei mir dann Werbung machen.
Da hab ich gesagt, ja dann macht ihr halt bei mir keine Werbung.
Natürlich nicht für Cyber-Angriffen oder Viren.
Da gab es auch diesen netten Kommentar unter seinem Video.
Sondern wegen seinem Interview-Gast.
Ich muss aber auch sagen und Leeroy hier ein bisschen in Schutz nehmen.
Er hätte das nicht besser wissen können.
Über Jean Pereira existieren viele News-Artikel.
Und er ist auch sehr aktiv auf LinkedIn mit sehr vielen positiven Kommentaren.
Weil er natürlich die negativen löscht, aber dazu gleich mehr.
Das heißt von außen sieht alles tippitopp aus.
Aber deswegen bin ich hier und ich versuche das für euch.
Kennt ihr den Kerl?
Also nicht ihn, sondern den um den es hier geht.
Um den es hier geht, von dem habe ich noch nie was gehört.
Er ist auch sehr aktiv auf Jean Pereira oder wie auch immer.
Hab ich noch nie gehört.
LinkedIn mit sehr vielen positiven Kommentaren.
Weil er natürlich die negativen löscht, aber dazu gleich mehr.
Das heißt von außen sieht alles tippitopp aus.
Aber deswegen bin ich hier und ich versuche das für euch mal ein bisschen einzuordnen.
Wir gehen gleich in einen Deep Dive in die Hacker-Szene.
In die richtige Hacker-Szene.
Hacker-Band.
Auf geht's.
Ich meine ich habe auch meine Arbeitskleidung, meine Kutte.
Aber die holt man nur raus zu irgendwelchen Anlässen.
In dem Video werden einige großartige Claims gemacht.
Aber die Welt ist nicht so schlimm, wie die da dargestellt wird.
Und ich hoffe am Ende könnt ihr das auch ein bisschen besser einordnen.
Bevor wir jetzt in das Video rein starten, fragt ihr euch vielleicht,
wieso sollt ihr mir glauben oder mir zuhören?
Ganz einfach, weil ich weiß, dass er Ahnung hat.
Also erstmal mache ich mir jetzt erstmal eine Mate auf.
Und das ist der erste Beweis, dass ich wirklich ein Hacker bin.
Ihr denkt vielleicht, das ist nur ein Berliner Hipster-Getränk.
Aber tatsächlich hat es so ein bisschen seinen Ursprung,
wieso es populär wurde in der deutschen Hacker-Szene.
Kann alles nachgelesen werden auf Wikipedia.
Das heißt, das war euer erster Fun-Fact übers Hacking.
Aber die viel wichtigeren Credentials sind eigentlich mein Hauptkanal.
Ihr seid gerade auf meinem Zweitkanal.
Und das ist mein erstes deutsches Video, das ich ever mache, glaube ich.
Weil auf dem ersten Kanal LiveOverflow mache ich Videos in Englisch.
Damit erreiche ich einfach mehr Leute.
Und LiveOverflow gehört zu den größten IT-Security-YouTube-Kanälen, die existieren.
Und ihr fragt euch sicherlich, wie kann das denn sein?
Das Hacking auf YouTube, wird das nicht gebannt und keine Ahnung was und so?
Ja, wenn ihr dumme, langweilige Credit-Card-Fraud oder Phishing oder sowas macht,
so lame Sachen, dann ja, dann werdet ihr vielleicht gesperrt.
Aber wenn man so das Hacking richtig professionell angeht und so weiter,
dann muss man da nichts befürchten.
Ich hatte nie Probleme mit meinen Videos.
Und andere Kanäle, die Probleme mit Videos hatten, das wurde auch immer resolved.
Und Fun-Fact, ich habe mehrere Videos, die von Google gesponsert wurden.
Google hat Videos gesponsert,
wo ich dann über Sicherheitslücken in Google berichtet habe.
Von außen sieht diese Hacker-Welt immer so crazy böse und keine Ahnung was aus,
aber am Ende ist das auch einfach nur Leute, die halt abhängen und coole Sachen machen wollen.
Deshalb, wenn ihr so ein bisschen meine Credentials verstehen wollt,
schaut einfach ein bisschen auf meinem Hauptkanal rum.
Ich habe sogar eine Minecraft-Hacking-Serie.
Meine populärste Serie ist wahrscheinlich die Binary-Exploitation-Serie.
Auf meiner Webseite liveoverflow.com starthacking,
habe ich auch so ein paar Gedanken, so wenn ihr damit anfangen wollt und so, was ihr machen könnt.
Und wichtig zu erwähnen ist, dass ich YouTube nur nebenher mache.
Ich habe ganz wenig Kooperation, weil ich überhaupt keinen Bock habe auf das Zeug.
Mein Geld verdiene ich eigentlich mit Security Audits und so.
Also mein tägliches Brot ist, ich suche nach Sicherheitslücken und reporte die zu Firmen und so.
Und da gibt es auch einige Public Reports, die man auch finden kann, wenn man möchte.
Anyway, ich hoffe, ihr könnt jetzt mich so ein bisschen mehr einschätzen.
Deshalb lasst uns jetzt mal in Leeroys Interview gehen.
Und lasst uns einfach mal mit einem Kommentar starten.
Kann man das nachweisen, dass das alles stimmt?
Das ist eine sehr gute Frage.
In dem Video werden konstant irgendwelche Claims gemacht
und es ist fast ein bisschen unmöglich, auf alles einzugehen.
Aber es gibt so zwei Sachen im Speziellen, wo ich ein bisschen tiefer reingehen möchte.
Und das erste bezieht sich auf eine Software, die nennt sich Hospital Run.
Hören wir mal kurz in das Interview rein, was er da sagt.
Ich habe was in einer Software veröffentlicht, die nennt sich Hospital Run.
Und da gibt es die Möglichkeit, die Blutgruppen auszutauschen in der Software.
Und ich kann auch alle Blutgruppen auf einmal austauschen.
Also er sagt, er hat eine Sicherheitslücke gefunden in der Software, die Hospital Run heißt.
Tatsächlich wurde mir, als er das gefunden hatte und veröffentlicht hat auf LinkedIn,
wurde mir das damals geschickt.
Und ich habe das erst mal so angeguckt und dachte so, ja, sieht ein bisschen aus.
Das ist so ein Ding, also ich kenne jetzt diesen konkreten Fall nicht.
Das ist viel zu abstrakt, was der gerade gesagt hat, um irgendwas nachvollziehen zu können.
Ja, ich habe da eine Software. Ja, da ist dann Hospital im Namen drin.
Und das heißt, das muss auch was mit Krankenhäusern zu tun haben.
Und ja, Leute, ich kann auch eine Software veröffentlichen, die Hospital Run heißt.
Und dann auf meinem Terminal auf einmal eine andere Blutgruppe steht.
Ist halt die Frage, ob das wirklich was mit Krankenhäusern zu tun hat.
Aber gucken wir mal, was er sagt.
Mit der sich ein Angreifer voll Zugriff auf medizinische Geräte verschaffen kann,
sprich vollständiger Routezugriff.
Welche medizinischen Geräte über welche Wege überhaupt?
Musst du dich dran stöpseln?
Musst du das aufschrauben?
Wi-Fi, Bluetooth, irgendwelche Spezialprodukte, man weiß es nicht.
Weil ich meine einfach nur die Software bei sich irgendwie aufs Notebook hauen und ausführen.
Das alleine wird ja wahrscheinlich nichts machen.
Ich habe das ehrlich gesagt so ein bisschen ignoriert, weil ich auch irgendwie keinen Bock hatte, mir das jetzt genau anzugucken.
In dem LinkedIn-Text hat er so ein bisschen übertrieben, so wie krass das alles ist mit Krankenhäuser hacken und so weiter.
Aber ganz ehrlich, Leute machen ständig irgendwie so komische Claims und ich belächle das einfach immer so ein bisschen.
Aber dann haben befreundete Hacker mir gesagt, schau dir das mal ein bisschen genauer an.
Und das habe ich dann gemacht.
Und dann habe ich realisiert, dieser Exploit ist Bullshit.
Das war auch das erste Mal, dass ich von John Pereira was gehört habe.
Okay, okay, jetzt bin ich mal gespannt.
Also Buffer, irgendwelches Binary-Zeug, Payload, irgendwelches Binary-Zeug, was auch immer.
File Open, Applications, Hospital Run App, Elektron.
Seit wann laufen irgendwelche medizinischen Geräte auf Mac-Basis?
Ich dachte, die laufen noch auf Windows 98.
Oder Windows XP.
Windows XP habe ich ja live gesehen, als ich in der Notaufnahme im Krankenhaus war.
Windows XP-Bildschirm schon erstmal angegangen.
Ja, das ergibt, also wahrscheinlich kann er da noch deutlich mehr reininterpretieren.
Aber allein schon, dass du das lokal auf einem Gerät ausführen musst, was anscheinend auf Mac-OS-Basis läuft.
Du musst es erstmal auf das Gerät draufbekommen.
Du musst es erstmal ausgeführt bekommen.
Und was bitteschön mit Elektron.
Oh, ich habe den Chat gerade reloaded.
Das ist so ein Tar im Endeffekt.
Also okay, mal gucken, was er sagt.
Ich bin so aufgeregt, dass ich auf dem Hauptkanal darüber ein Video gemacht habe.
Also wenn ihr da technisch ein bisschen tiefer einsteigen wollt und meine Einschätzung zu diesem Exploit sehen wollt, ein bisschen in einem längeren Format, dann checkt auf jeden Fall das Video aus.
Aber ich versuche es mal ganz kurz zu...
Ey, das ist eigentlich eine richtig geile Serie für ihn, oder?
Sowas wie Hacker debunked Hacker.
Da kannst du richtig rein auf YouTube.
Hacking debunked.
Hacking Mythbusters.
Zusammenzufassen hier.
Erstens seht ihr, dass da steht Beta.
Es geht also um eine Beta-Version von der Software.
Diese Software war nie in Krankenhäusern irgendwie eingesetzt.
Und vor allem, warum auf Mac-Basis?
Das war irgendwie ein einzelner Entwickler oder sowas, der auf GitHub da irgendwie so eine Software entwickelt hat.
Und wie gesagt, das war eine Testversion, eine Beta-Version.
Die hat überhaupt keine Relevanz in der Wirklichkeit.
Und dazu kommt noch, dass er claimt, er hat hier eine Privilege-Escalation gefunden.
Eine Privilege-Escalation-Sicherheitslücke bedeutet, dass du zum Beispiel von einem normalen Nutzer
Administrationsrechte bekommen kannst.
Ja, das hat ja mit der Software wenigstens zu tun.
Der bräuchte tatsächlich eine Sicherheitslücke in macOS für, ja, so Root-Exploit-mäßig.
Und da hätte er wahrscheinlich bei Apple ganz gut Kohle für sogar abgreifen können.
Die haben doch sicherlich irgendein Programm.
Indem du den Exploit, also die Sicherheitslücke dann ausnutzt.
Und das ist einfach unmöglich mit dieser Software.
Wenn diese Software einfach nur als der normale Nutzer läuft, da gibt es einfach technisch gesehen,
das ist einfach, das geht nicht.
Du kannst einfach nicht von User zu Admin, wenn da nichts als Admin läuft, so.
Und der Grund ist, wieso ich das richtig einschätzen kann, ist,
weil ich habe solche Privilege-Escalation-Issues oft gefunden.
Ich habe das auch in einem anderen Video gezeigt.
Vieles meiner Arbeit ist natürlich für Kunden und so weiter, ist nicht öffentlich.
Aber wir haben ein paar VPN-Kunden, wo diese Security-Reports öffentlich sind.
Zum Beispiel TunnelBear.
Und in dem TunnelBear-Report, wo mein Name draufsteht, das könnt ihr da sehen,
da habe ich Privilege-Escalation-Exploits reported.
Aber das macht da auch Sinn, weil dieser VPN, der hat einen Privilege-Telper,
der als Administrator läuft und eine normale User-Komponente.
Und wenn du dann irgendwie das abusen kannst, dann kannst du eigentlich...
Privilege-Telper, klingt ein bisschen nach Windows, wenn ich ehrlich bin.
...Telper übernehmen und bist dann Administrator.
Das macht Sinn, weil es da zwei Komponenten gibt.
Aber in Hospital Run gibt es das nicht.
In Hospital Run, das läuft einfach als User.
Das ist einfach unmöglich.
Deshalb, es macht einfach gar keinen Sinn.
Auch technisch, dieser Code, der ihr hier seht, der benutzt Wörter,
die wirklich eine Bedeutung haben.
Also Buffer, Payload.
Wisst ihr, was ich sehr merkwürdig finde?
Oder macht man das in Python so in einem String?
Irgendeinen Bytes-Escape als String?
Normalerweise hätte ich halt irgendein ganz normales Array genommen
und Byte-Values reingeschrieben, aber doch nicht als String zusammen.
Ja, macht man so? Okay.
Nobsled, das sind wirklich technische Begriffe aus der Hacking-Szene.
Und für jemand, der da nur so ein bisschen casual drauf guckt
und sich nicht so richtig auskennt,
das sieht auf den ersten Blick erstmal legit aus.
Aber wenn man das dann so ein bisschen decodet und so ein bisschen aufräumt,
weil das ist alles so ein bisschen verspaghettiet hier.
Das hier ist irgendein Reverse-Shell-Versuch.
Das ist diese Bash-Syntax, wo du ohne Netcat und sowas auf Netzwerk-Sachen zugreifen kannst.
Und ja, okay.
Dann ist da nichts dahinter. Das ist alles Schein.
Und deshalb bei dieser angeblichen Hospital-Run-Sicherheitsstücke.
Hacking-Exploit von Chat-GPT generiert.
Würde ich wirklich mit voller Überzeugung sagen, das ist falsch.
Das ist nicht richtig.
Und jetzt die große Frage.
Und die kann man sich am Ende vom Video dann auch stellen.
Macht das Jean Pereira absichtlich?
Versucht er absichtlich hier irgendwie zu täuschen und zu verschleiern
und sich einen Wettbewerbsvorteil zu verschaffen gegenüber Firmen,
weil das einen guten Werbeeffekt hat?
Also ist da Absicht dahinter?
Oder fehlt ihm so ein bisschen die gewisse realistische Einschätzung?
Wahrscheinlich beides.
Wahrscheinlich hält er sich für einen überkrassen Hacker-Man.
Aber in der heutigen Zeit siehst du das ja auch an.
Komm in die Gruppe, wir zeigen dir krasses Business.
Es mehr scheint als sein, scheint sich heute finanziell ja zu lohnen.
Das ist auch typisch.
Man freut sich so sehr über Sicherheitslücken.
Und das ist ein geiles Gefühl.
Das kann ich verstehen, dass man dann so ein bisschen die Severity,
also den Infekt und die Schlimmheit...
Also Leute, die krasseste Sicherheitslücke, die ich rausgefunden habe jemals,
und ich bin ja nicht im Security-Bereich irgendwie tätig,
war, dass man relativ easy aus einer Kamera, also aus einer WiFi-Kamera,
das Root-Passwort auslesen kann.
Mit ein paar Curl-Aufrufen.
Eigentlich super easy.
Muss einfach nur die passenden Endpunkte gehen für on fifth device discovery.
Und dann kriegt man das Root-Passwort raus.
Das habe ich an den Hersteller geschrieben.
Und das Erste, was dem Hersteller eingefallen ist,
also ich habe ihm ein Beispiel geschickt, wie das geht.
Und das Erste, was er gemeint hat, ist, ja, mach doch mal einen Firmware-Update.
Oder irgendwie sowas.
Hä?
Leute, also erstens habe ich die aktuelle Firmware und was wollt ihr damit?
Dann habe ich nochmal gesagt, Leute, bekommt das Root-Passwort von dem Gerät raus.
Und ich hatte die aktuellste Firmware ja schon.
Bekommt das Root-Passwort vom Gerät raus.
Ich habe nicht richtig verstanden, was ich euch geschrieben habe.
Und danach hat es irgendjemand mal gelesen, der es verstanden hat,
und hat gemeint, oh, ja, das ist tatsächlich ein Problem.
Und ob ich doch bitte mein Beispiel GitHub-Dokument löschen könnte.
Das war das Erste Problem, was er hatte.
Ich habe ihm ein unlisted GitHub-Gist gepostet,
wo ich halt geschrieben habe, wie das funktioniert.
Und ob ich nicht den GitHub-Link löschen könnte.
GitHub löschen könnte.
Das war das größte Problem, was sie hatten.
Aber tatsächlich ein halbes Jahr später oder so,
habe ich eine Benachrichtigung bekommen,
dass jetzt eine neue Firmware-Version raus ist,
die angeblich alles behebt.
Nun gut. Immerhin.
Eine Sicherheitslücke ist so ein bisschen Overhype.
Und man sagt so, das ist voll krass, aber in der Realität ist es nicht ganz so krass.
Und es kann natürlich auch sein, dass er einfach so ein bisschen Overhype
das ein bisschen falsch interpretiert.
Aber es fehlt halt auch so ein bisschen die gewisse Reflektion.
Hast du das nochmal getestet? Nein.
Ich habe danach die Kamera nie wieder angeschlossen.
Er hat ganz viele negative Kommentare bekommen.
Die wurden alle gelöscht und auch geblockt.
Und ich wurde auch geblockt, weil ich drunter kommentiert habe.
Dann ist das wohl nicht nur, er findet sich als richtig krasser, geiler Hacker-Man,
sondern es ist auch ein bisschen System dahinter.
Wie gesagt, man kann heutzutage mit mehr Schein als Sein durchaus Geld verdienen.
Guckt euch die ganzen, ich zeige euch, wie man krasses Business macht,
kommen in die Gruppe Leute an.
Da geht es auch nur darum, möglichst überzeugend zu wirken für Leute,
die halt keinen Plan haben und sich von sowas einfach einwickeln lassen.
Wäre doch ein gutes YouTube-Video- und Live-Projekt für dich.
Was denn? Die Kamera nochmal anschließen?
Naja, so spannend ist das jetzt nicht.
Schließt die Kamera an, macht zwei Curl-Aufrufe,
updatet eine Firmware, macht die Curl-Aufrufe nochmal.
Er hält sich doch stark in Grenzen, oder?
Nido, Dankeschön für den Sub.
Er lässt also überhaupt keine Reflektion zu
und er lässt überhaupt keine anderen Professionellen wie uns zu,
irgendwie da unsere Meinung zu sagen und ihm zu sagen,
hey, das stimmt aber da nicht, was ist da los?
Weil an sich ist es auch kein Problem, das quasi zurückzuziehen und zu sagen,
ey, sorry, ich habe da einen Fehler gemacht oder sowas.
Müsst ihr nicht mehr öffentlich machen, löscht es einfach.
Ich verstehe es ein bisschen peinlich und so, aber löscht einfach,
wir vergessen das auch alle.
Jetzt aber genug von Hospital Run, lass uns mal noch ein zweites Statement,
was er im Interview gesagt hat, ein bisschen genauer draufschauen.
Also ich habe Sicherheitslücken bei Google aufgedeckt, bei Microsoft,
bei Nokia, bei Siemens, beim Fraunhofer-Institut.
Okay, das, was ich jetzt sage, klingt vielleicht irgendwie gemein
und man kann sich in Leuten natürlich auch irren.
Und ich kann euch auch nicht sagen, woran ich es genau festmache,
aber die ganze Art, über den Sachverhalt zu sprechen,
klingt für mich nicht nach Kompetenz.
Ich kann es schlecht beschreiben.
Die Art, wie er das sagt, die Sache, wie das vorgetragen wird,
auch wenig detailt, ich weiß nicht, das wirkt auf mich eher,
komm in die Gruppe, Pseudo-Expert, das trifft es ganz gut.
Genauso wirkt das, ja.
Mir fällt es immer schwer, wenn man das so empfindet,
das festzumachen an konkreten Sachen, aber so wirkt das auf mich.
Und bei vielen weiteren Unternehmen.
Ich habe zum Beispiel damals eine Sicherheitslücke
in der Software Apple Motion aufgedeckt.
Das ist eine Software, die 2004 von Apple entwickelt wurde.
Das heißt, sie ist schon sehr lange auf dem Markt.
Da haben sehr viele Hacker auch von Apple sich daran ausgetestet
und versucht, das Ding möglichst sicher zu machen.
Und da habe ich eine Sicherheitslücke gefunden,
die ich dann auch in gemeinsamer Zusammenarbeit mit Apple behoben habe,
die es mir ermöglicht hat, auf Millionen von Geräten zuzugreifen,
auf denen diese Software installiert wird.
Und was bekommst du davon?
Irgendwie was mitgeklickt, oder?
Es hätte irgendwann mal gepatcht werden müssen dann auch.
Also, Jean-Pierre sagt, er hat eine Sicherheitslücke
in einer Software gefunden, die heißt Motion von Apple.
Und da sind zwei Claims drin.
Und der erste Claim ist, dass viele Apple-Entwickler versucht haben,
da schon Sicherheitslücken zu finden.
Und die haben das nicht geschafft, aber er hat das geschafft.
Da würde ich sagen, das entspricht nicht ganz so der Realität.
Es stimmt schon, dass solche großen Firmen haben schon Security-Teams
und die schauen schon immer nach Security-Issues.
Aber es ist nicht so, dass die sich da irgendwie
Monate oder Jahre lang hinsetzen und nach Sicherheitslücken suchen.
Und jetzt kommt Jean-Pierre und findet da was.
Es ist auch wirklich realistisch anzunehmen,
dass da nie ein Apple-Security-Engineer drauf geguckt hat.
Es ist halt auch die Frage, wie relevant die Software ist,
um die es hier geht.
Also, ich gehe ganz stark davon aus, dass sich diese Apple-Teams,
je nachdem wie wichtig diese Software ist,
um wichtigere Sachen kümmern müssen,
als irgend so ein Ding, was eh recht unbedeutend, unkritisch ist.
Ja, wenn da irgendwie eine Körneländerung eincheckt,
im Apple-Shit, dann...
Also, wenn da irgendein Commit macht mit Körneländerungen,
dass da mal ein Security-Team drauf guckt,
ist wahrscheinlicher, ja.
Weil das an sich nicht ganz so spannend ist.
Diese Security-Engineers von Apple,
die beschäftigen sich eher so mit iOS im Gesamten und so.
Und da haben sie genug zu tun.
Und da machen sie auch richtig gute Arbeit.
Gut, ich kann das jetzt nicht beweisen.
Und ich kenne auch, glaube ich, niemanden bei Apple,
der da zu der Zeit gearbeitet hat, der mir das beantworten könnte,
ob da Security-Leute drauf geguckt haben.
Und der würde das wahrscheinlich eh mir nicht öffentlich sagen und so.
Aber der Claim ist so, muss man das sagen.
Ich meine, er kann es auch nicht beweisen.
Und jetzt der zweite Claim, da hat er ja quasi gesagt,
er hat eine Sicherheitslücke in Motion gefunden.
Und da könnte er Millionen von Leuten damit hacken und so.
Die es mir ermöglicht hat, auf Millionen von Geräten zuzugreifen,
auf denen diese Software installiert ist.
Da fehlen einfach irgendwie die Details.
Wenn das jemand wirklich...
Also mal angenommen,
natürlich sind Leute immer ein bisschen anders.
Aber mal angenommen,
man hätte da wirklich was gefunden,
was das ermöglicht.
Irgendwie hätte ich das ein bisschen
fundierter erzählt einfach,
wenn da wirklich was dran gewesen wäre.
Ja, da würde es dir erzählen.
Und wir haben
wochenlang hier was analysiert.
Und irgendwann ist uns dann
wirklich im Netzwerk Traffic was aufgefallen,
was verschlüsselt war,
was irgendwie nicht richtig implementiert gewesen ist.
Irgendwie ein bisschen mehr Kontext.
Klar kannst du jetzt sagen,
okay, dieses Interview richtet sich vielleicht nicht an die
super krassen Fachmänner, was auch immer.
Aber so ein bisschen Substanz.
Und das ist ein Ding, was mir bei vielen Leuten,
die einfach nur schwätzen und keine Ahnung haben,
auffällt. Die erzählen immer viel,
aber es hat immer relativ wenig Substanz drin.
Wo du immer sagen würdest,
das bewegt sich alles immer so im Allgemeinen
ein bisschen abstrakten und wenig Substanz drin.
Wo du sagen könntest, okay,
was war denn jetzt eigentlich?
So die erste Frage, hat der wirklich ein Security?
Es hat wirklich ein bisschen was von Comedy Gruppe.
Genau.
Und da der Plottwist, ja, ich glaube schon.
Also das liest sich erstmal hier total
legit und das ist auch auf der Apple Report Seite
und so weiter. Und da steht auch dran,
die CVE 2013 6114
von Jean Pascal Pereira.
A maliciously crafted MOTN-File could lead to arbitrary
code execution. Das sieht schon
total legit aus. Und er hat auch Details
über diese Vulnerability hier veröffentlicht.
Das hat er auch gepublished 2013.
Und da sieht man die kleine Testdatei, mit dem er das triggern kann.
Und da drüber sieht man die Debug Message.
Wo ich dann auch sehen kann,
okay, das sieht legit aus.
Also da hat das Register RAX
einen bestimmten Wert. Dieser Wert ist genau der Wert
in dem Subview. Das ist irgendwie so ein bisschen weird,
aber kann schon sein. Dieses RAX-Register
wurde als ein Offset benutzt,
in ein Array oder sowas. Und es hat dann
out of bounds, einfach in Memory irgendwo gezeigt,
weil die Zahl so riesig war, dass es dann
eine invalide Adresse war und das dann gecrashed.
Man muss aber dazu auch sagen, dass das nur
ein Proof of Concept ist. Das ist also nur
eine kleine Datei, die total minimalistisch ist,
die nur diesen Bug triggert.
Den jetzt ausnutzen und daraus jetzt einen vollwertigen
Exploit bauen. Also mit allem drum und dran,
dass wenn man die Datei öffnet, dass dann
irgendwas installiert wird und so.
Das erfordert dann nochmal richtig viel Arbeit.
Und es kann auch sein, dass dieser Bug gar nicht
exploitbar ist. Also wenn man sich dann richtig
ransetzt und versucht, das zu entwickeln
und so, dann kann sein, dass man in so
Edge-Cases reinrennt und merkt, ja, der Bug
ist zwar irgendwie ein kleines Problem
im Code und so und sollte auf jeden Fall
gefixt werden, aber jetzt
so ein vollwertiges Exploit lässt sich daraus nicht bauen.
Das liegt vor allem daran, weil die
Zeile, die crashed, ist ein Read. Also es
versucht von einem invaliden Memory, was
zu lesen. Das lässt sich aber so
nicht unbedingt beurteilen. Und grundsätzlich
ist es auch immer nervig zu sagen so, hey,
das ist ja nur ein Proof of Concept, mach mal ein vollwertiges
Exploit, sonst glaube ich dir nicht. Es ist
einfach gut anzunehmen, so ein Crash
ist exploitbar, muss gefixt werden
und dafür gibt es auch Credits. Also das
ist wirklich ein legit Exploit.
Und lass mich das mal einordnen. Das war
2013. Da war ich
so ein Jahr lang oder so in IT Security.
Hätte ich so ein Bug gefunden,
ich wäre aus dem Häuschen.
Das ist wirklich ein cooler Bug. Das ist ein Bug, wo
ich sagen würde, ja, die Person versteht
Hacking, die hat ein gewisses
technisches Grundverständnis und hat eine CVE
dafür bekommen und so weiter und ich wäre wirklich, wirklich stolz.
Und da kann auch Jean Pereira stolz drauf
sein. Ich hätte das, und das kann ich mit voller
Sorge sagen, nicht finden können damals.
Also dafür kann er wirklich Respekt
bekommen. Aber
er sagt, damit hätte er
Millionen von Leuten hacken können.
Aber wenn wir nochmal uns die Beschreibung hier
durchlesen, es geht darum, dass
diese Sicherheitslücke ausgenutzt wird,
wenn man mit Motion
diese böse MOTN-Datei öffnet.
Und damit sollte eigentlich schon...
Genau. Die Leute müssen das Zeug erstmal,
was auch immer eine Motten-Datei ist,
die müssen die Datei erstmal
irgendwie bekommen und irgendwie ausführen.
Das ist ja das, was ich auch schon oft gesagt habe.
Und da sage ich jetzt halt jemand, der nicht
irgendwie großartig im Security-Sektor
unterwegs ist, aber ich würde mal behaupten, das ist so
Allgemeinkenntnis von Leuten, die ein bisschen
IT-Ahnung haben. Das Schwierige ist
gar nicht so sehr oder nicht primär,
dass du irgendwie
irgendeinen Virus oder irgendeine
Malware-verseuchte Datei auf den Rechner
von einem drauf bekommst. Das ist das
eine. Dass die ausgeführt
wird, dass das aktiv wird,
was da drin ist, das ist ja das eigentlich
Schwierige.
Eine E-Mail schicken mit einem Virus
als Anhang, das kann jeder,
aber dass das ausgeführt wird,
ich meine, das ist das, wo
die ganzen Scammer
und die ganzen
Leute, die irgendwie
versuchen, irgendwas unterzuschieben,
wo die sehr viel
Energie und Hirnschmalz reinstecken,
dass die Leute nicht nur die Datei dann in ihrem
E-Mail-Postfach liegen haben oder auf ihren
Rechner haben, sondern nein, dass die die
ausführen, indem sie
ihnen sonst was erzählen.
Deswegen sind Dateien getarnt
als Word-Dokumente, aber sie sind in Wirklichkeit
Screensaver für Windows, die komische
Dinger nachladen. Alles Mögliche,
einfach nur, damit es vertrauenswürdiger
aussieht, damit das ausgeführt wird.
Natürlich gibt es dann auch noch so die super
Hardcore-Sachen, wo beispielsweise diese
erinnert sich noch einer an
diese Thumbnail-Lücke
im Windows Explorer,
wo manipulierte Dateien,
manipulierte Bilddateien
durch das pure
Öffnen des Verzeichnisses
Teile
in der Datei ausgeführt wurden,
weil der Windows Explorer Thumbnails
generieren wollte
für die Datei und das
dann irgendwie ausnutzbar war,
dieses Verhalten.
Ich weiß nicht mehr,
wie das genau gewesen ist.
Das ist natürlich dann richtig für den Arsch,
dann musst du eine Datei runterladen und nur
in das Verzeichnis gehen und schon hast du dir was
eingefangen. Aber das ist ja glücklicherweise
normalerweise, ist das ja nicht der Fall.
Du bekommst was,
du musst es aktiv ausführen
in irgendeiner Art und Weise.
Oder du gehst mit einem Browser auf
die Datei, mit einem alten Browser mit Sicherheitslücken
da drüber, aber irgendwie musst du es nicht nur bekommen,
irgendwie muss es ausgeführt werden.
Oftmals mit Zutun der Leute
selbst. Das ist tatsächlich
das Schwierige.
Es muss klar sein, dass du nicht einfach Millionen von
Apple-Usern hacken kannst, sondern du musst
irgendwie die Leute dazu bringen, dass sie diese Datei
erstmal öffnen.
Das ist relativ selten.
Der meiste
Scam passiert dadurch,
dass irgendwie einer auch
heutzutage noch eine E-Mail-Anhang
bekommt. Die Sekretärin bekommt
eine E-Mail, vermeintlich Absender vom
Chef von der Geschäftsreise.
E-Mail mit dem Anhang,
bitte schnellstens drum kümmern
und keinem was erzählen,
streng geheim, bitte schnellstens
drum kümmern und diese
Sachen hier in diesem Word-Dokument erledigen.
Ja, so und dann
denkt die sich, oh ne, der Chef im Geschäft ist ganz
ganz wichtig und auch keinem erzählen geht hier um
Leben und Tod, so nach dem Motto, öffne die
Word-Datei und
die haben vielleicht noch irgendwie ein olles Word,
was anfällig ist für irgendwas und zack, bumm,
haben die sich irgendwas
eingefangen,
File-Server der ganzen Firma
encrypted und Lösegeldforderung.
Ja, zack, das geht dann zackig.
So,
es braucht in,
sag mal, im riesengroßen,
überwiegenden Teil der Fälle
braucht es halt noch
das Zutun von
irgendjemand, so dieses reine
den Rechner mal anhusten
mit irgendeinem Virus und schon hattern
ist halt nicht.
So das mit Sammlergenerierung war wirklich
Ausnahme.
Die Ausnahme, ja.
Und glücklicherweise
haben wir so Sachen wie
Heartbleed und sowas auch nicht
ganz so oft.
Du könntest irgendwie deinen Freund hacken oder so, wenn du dem eine Mail schreibst,
hey, schau dir mal diese File an oder du könntest
jetzt so ein Download anbieten in einem Forum oder sowas
und dann lädt dir jemand runter und dann könnt ihr gehackt werden
und so, ja, also genau dafür ist es
machbar. Aber da kommen wir jetzt halt wieder zu diesen
bisschen übertriebenen Claims. Zu sagen
einfach, damit kann man Millionen von
Apple-Usern hacken oder sowas, das ist
meiner Meinung nach falsch. Und das
ist halt das, was ein bisschen weird ist mit Jean Pereira.
Auf der einen Seite, das ist meiner Meinung nach
wirklich ein legit Exploit, das ist nicht
Fake und das ist wirklich cool, da kann man
stolz drauf sein und ich finde auch, da kann
er wirklich mit prahlen, dass er das gefunden
hat. Aber ich finde es dann so extrem unnötig
irgendwie das zu overhypen
und zu claimen, damit könnte man Millionen
von Leuten hacken. Ja, könnte man.
Das ist dieser
Comedy-Gruppe-Faktor,
den ich da am Anfang schon verspürt hab.
Ja, na mal gucken.
Von Millionen von Leuten schlagen, aber da müsste ich zu
Millionen von Leuten hinlaufen und denen ins Gesicht schlagen.
Ich weiß nicht, ob der Vergleich
jetzt so gut war, aber erstmal Schluck Mate.
Also, wir haben uns jetzt zwei Claims
angeschaut in diesem 30 Minuten Interview
und diese Claims waren wirklich nur kurze Sätze,
so ein, zwei Sätze, die er gesagt hat. Und die erfordern
richtig viel Wissen und Erfahrung, um das
richtig einordnen zu können. So ein Standard
Informatik-Student an der Uni, der
eigentlich schon gut ausgebildet ist, der wird das nicht mal
richtig einschätzen können. Und deshalb würde ich auch
sagen, Leeroy trifft in dem Fall jetzt keine Schuld.
Weil von außen sieht das alles erstmal
alles irgendwie okay aus. Und man muss
da schon tief drin sein. Nein, wir haben noch nicht den Wahl-O-Mat
gemacht. Stimmt, das müssten wir eigentlich auch mal machen.
Wann ist denn in Hessen? Ist das nächste
Woche? Am
8. Ja, nächsten.
Das machen wir dann nächste
Woche. Also nicht Sonntagmorgen,
nächste Woche.
Vor allem haben wir ja andere
coole deutsche Hacker, die man da einladen könnte.
Und das hat mich dann irgendwie so ein bisschen so getriggert,
weil ich dann so ein bisschen mehr recherchiert habe, was hat
Jean-Pierre eigentlich noch so gemacht. Und da bin ich dann
über diesen Talk hier gestoßen, wo er
über Browser-Exploitation redet.
Und da introduced er sein
Bamboo.js-Fuzzer.
Aber schau mal das passende
Hoodie an.
...redet.
Und da introduced er sein Bamboo.js
Fuzzer.
Ich bin ja nicht so drin in der ganzen
Hacker-Man-Geschichte. Ist ein Fuzzer
nicht diese Geschichte, die
einfach ganz viele random generated
Inputs an
Programme schickt, in der Hoffnung, das
verhält sich irgendwie merkwürdig.
Also wo du ganz, ganz viel random
Krams einfach durchtesten kannst.
Ich glaube schon.
Wörter, die so ein normaler
Zuschauer wahrscheinlich nicht versteht. Also ein Fuzzer
ist ein Programm, mit dem man einfach
zufällig was generiert und hofft,
dass durch diese zufällig generierte
Zeug irgendwie das Programm crasht oder kaputt geht
oder sowas. Und wenn man dann sowas gefunden hat, so ein
Crash ist oft ein Indikator, dass da vielleicht
eine Sicherheitslücke sein könnte. Gerade im Browser.
Das heißt im Fall von Browsern zum Beispiel
generiert man einfach irgendwie zufälligen
Javascript oder zufälligen HTML-Code und
hofft, dass der Browser dann crasht und dann
kann man das vielleicht exploiten. Und man kann da so ein
Drive-by-Exploit quasi daraus bauen.
Dass wenn man dann auf eine Webseite geht, dass man dann
Das ist natürlich das Heftigste, was dir
als Browser-Hersteller generell
als User auch passieren kann.
Durch das pure Besuchen einer
Internetseite dazu führt, dass du
HTML mehr einfängst. Das ist
doch in den letzten Jahren
finde ich, relativ selten geworden.
Gerade wenn man sowas wie NoScript
beziehungsweise uBlock oder sowas
noch zusätzlich verwendet, dass einige Sachen gar nicht
erst nachgeladen werden. Das ist relativ selten
geworden. Meinem Eindruck
nachher. Und das ist
besonders beeindruckend,
wenn man sich überlegt,
dass Browser heutzutage
mehr verwendet werden als jemals zuvor.
Also die Browser-Verwendung hat ja
extrem zugenommen.
Viele Leute benutzen heute eigentlich nur
nur noch Browser. Die verwenden
im Prinzip, guck mal, ich meine, ich habe nur
Browser auf. Kaum noch andere
Anwendungen. Browser, alles in Browsern.
Und
allein schon, dass das heute
eines der meistverwendeten Programme
überhaupt ist, Browser,
sowohl Mobile als auch auf dem Desktop, egal wo
Fernseher vielleicht nicht, aber
überall, und dass ein Browser
per Design
eigentlich ein Stück Software ist,
was im Vergleich zu vielen anderen
eigentlich nur
sagen wir mal, fremde
Sachen ausführt.
Ein Browser führt nur
Code aus von fremden
HTML, CSS ist jetzt nicht so
das Ding, nur fremden JavaScript.
Also du musst quasi in einem Browser
potenziell bei jeder
Seite damit rechnen,
dass dir irgendeiner ans Leder will.
Dass dir irgendeiner ankragen will.
Aus Browser-Gesichtspunkten.
Und es ist echt beeindruckend, wie gut die Browserhersteller
das mittlerweile hinkriegen.
Es ist enorm selten.
Deswegen Browser aktuell halten, richtig.
Natürlich noch besser, du hast einen aktuellen
Browser unter einer Linux-VM oder unter
einem Linux, selbst wenn du dir dann
drive-by was einfängst, geht es dann spätestens an
der Stelle wahrscheinlich nicht weiter.
Ja, muss ja.
Wie funktioniert das genau?
Das hängt von der jeweiligen
Sicherheitslücke ab.
Was man da genau
machen muss. Vielleicht kannst du aus der
JavaScript-Sandbox ausbrechen.
Und wenn du aus der JavaScript-Sandbox ausbrechen
kannst, dann kannst du natürlich auch aufs lokale
Dateisystem zugreifen.
Und ich meine, es braucht ja
immer mehrere Stufen.
Als erstes musst du denjenigen
erstmal auf deine Seite bekommen.
Dann musst du eine Sicherheitslücke,
die sonst noch keiner gefunden hat,
haben, oder die zumindest
die Browserhersteller noch nicht kennen,
eine Sicherheitslücke haben, um beispielsweise
JavaScript auszuführen,
der aus der Sandbox ausbrechen kann.
Dann
muss dieser Sandbox
Escape, wie auch immer man das genau
richtig nennt, sich dafür
eignen, dass du
lokal nicht nur
aufs Filesystem zugreifen kannst,
das allein wird ja eventuell noch
gar nicht so viel bringen, dass du lokal
vielleicht Sachen starten kannst.
Ja, dass du aufs Filesystem zugreifen kannst
und Sachen starten. So, dann kannst du
zumindest schon mal im User-Kontext alles machen.
Und dann brauchst du noch
irgendeinen
Betriebssystem-Exploit,
der noch nicht gefixt ist, um
Root- oder Admin zu werden.
Wobei du auch schon im User-Kontext genug machen kannst.
Ja, also diese ganzen
hier, ich habe
dein YouTube-Account gehackt,
Geschichten, die in letzter Zeit passiert sind,
das braucht ja keine Root-Rechte in dem Sinn.
Das hat Session-Daten
kopiert aus dem Browser.
Und das reicht,
wenn das im User-Kontext läuft.
Das ist glücklicherweise ziemlich
schwierig. Und dadurch,
dass es, in dem Fall ist es sogar ganz
gut, dass es nicht so viele Browser-Engines gibt
und auch nicht so viel JavaScript. Also nicht so
viel JavaScript-Engines.
Weil gerade V8
ist doch
ziemlich gut
testet mittlerweile.
Und nicht nur in Browsern, auch mit Node.
Ich habe vergessen,
wie heißt
die Mozilla-JavaScript-Engine?
Monkey
irgendwas, oder?
Weiß das einer von euch aus dem Kopf?
Monkeys? Nee, wie
heißt denn das?
Firefox
SpiderMonkey.
SpiderMonkey, ja.
Genau.
Ja, das meine ich.
Und...
Ja, aber es ist beides V8.
Oder?
Chetke?
Nee, Deno ist auch V8.
Bunn ist irgendwas anderes.
Bunn ist...
Auf was basiert...
Ah, nein.
Die benutzen JavaScript-Core.
Ist das vom Webkit?
Ja, genau.
Okay, gucken wir mal weiter.
Direkt ein Virus bekommt oder sowas.
Erstmal kurz vorne daraus bauen,
die Einschätzung 2022, 2023,
die Browser sind grundsätzlich so sicher,
dass ihr da keine Sorgen mehr haben müsst.
Früher war das so, dass wirklich
Exploits so verbreitet waren,
dass du wirklich auf eine Webseite gegangen bist.
Haben wir auch gerade drüber geredet.
...aus dem Virus eingefangen.
Das ist heutzutage eigentlich nicht mehr so.
Das liegt daran, weil die Browser schon so sicher sind.
Ich bin kein hauptberuflicher
Softwareentwickler.
Ich kümmere mich hauptsächlich aktuell
um Cloud-Infrastruktur.
...dass diese Exploits extrem teuer sind.
Also da gibt es richtig, richtig viel Geld dafür.
Und es ist schon kompliziert,
so ein Exploit zu bauen.
Deswegen die Kunden von sowas sind eher
so Government-Agencies oder sowas,
die irgendjemanden halt hacken wollen
für Intelligence-Agencies-Sachen und so halt.
Ich habe dazu übrigens auch ein Video
auf dem Hype-Kanal, wo ich so ein bisschen
auf das Thema eingehe, ob jedes Device
gehackt werden kann oder sowas.
Naja, prinzipiell, also meiner Meinung dazu ist,
das Video von ihm jetzt dazu nicht,
meine Meinung nach, dass du in der Theorie
wahrscheinlich jedes
Gerät hacken kannst, in der Praxis nicht.
Weil in der Theorie geht es
allein schon, guck mal, theoretisch könntest
du sagen, ja, du kannst theoretisch auch jedes Passwort
brutforcen.
Wenn du paar
Billionen Jahre Zeit hast
und wir meinen jetzt nicht die
Ami-Billion, sondern
die
unsere Billion,
dann ja, oder wenn du nahezu
wirklich viel Geld hast, in der Regel
ist es ja meistens eine Kombination aus
Lohnt es sich?
Das ist ja generell
eine Frage, die man sich bei vielem stellen muss.
Lohnt es sich?
Und wenn im Endeffekt der
Kostenaufwand
das, was man abstauben kann,
übersteigt, dann wird das in der Praxis
wahrscheinlich nicht passieren.
Und da rede ich mit Security-Researchern,
mit Leuten, die wirklich solche
Exploits gefunden haben, nachweislich.
Die einfach mal so gefragt und einschätzen lassen,
wie das Risiko ist mit Browsern und so weiter.
Also wenn euch das interessiert, dann guckt euch das auf jeden Fall an.
Und deswegen wurde ich hier halt so ein bisschen hellhörig,
weil das ist schon Top-Tier-Level-Hacking,
so Browser-Exploitation und Browser-Fuzzing und so weiter.
Und John Pereira sagt, er hat einen
Fuzzer geschrieben, BambooJS,
den gibt es auch auf GitHub, und so ein Basic-Fuzzer
schreiben ist an sich erstmal nicht schwierig, du musst halt
einfach nur so random Code generieren lassen.
Die Frage ist halt, ob so ein Fuzzer dann
auch was findet. Und mein erster Eindruck von
diesem Code ist einfach, der ist wirklich
wenig, da ist einfach wenig Code da. Und das heißt
nicht, dass dieser Fuzzer nichts finden kann.
Das kann ich jetzt nicht beweisen, dass dieser Fuzzer
nichts finden kann. Man kann so
dieses Negativ halt nicht beweisen. Ich kann nicht beweisen,
dass dieser Fuzzer jetzt nichts gefunden hat. Also wenn das
ein wirklich beliebter, guter Fuzzer
wäre, dann wäre das nicht letztes Commit
vor zehn Jahren und
kaum Source-Code, keine
Issues und nix und keine Sterne.
Kann schon sein. Aber wenn man das eben
vergleicht mit richtigen Fuzzern,
was so moderne Fuzzer wirklich machen,
das ist ein hochkomplexes Software, wo wirklich
da steckt monatelange Arbeit drin.
Das ist richtig krasses Engineering,
kombiniert mit Hacking-Wissen. Das ist wirklich
unique. Da bist du wirklich Top-Tier.
Und dieser Code, der
zieht halt einfach nicht danach aus. Aber wie gesagt,
man kann das Negativ halt nicht so beweisen, dass ob
dieser Fuzzer wirklich was gefunden hat. Lass uns mal kurz gucken.
Ist Bamboo nicht
der JetBrains
Jenkins Abklatsch?
Ist das
nicht auch so?
Lass uns mal kurz gucken. Wie heißt das?
GitHub?
Bamboo.
Ja.
Okay, 56 Sterne.
Da hat ja sogar WhitePapoHappyBackground
mehr Sterne. Gut, Sterne sind nicht unbedingt
da. Aber sondernichbeliebt kann das
jetzt ja nicht sein.
2013.
ExampleCode.
Und es ist allgemein...
Ich mein, da ist ja nix drin.
Das sind insgesamt...
Was weiß ich?
600 Zeilen Javascript?
Und irgendein
Ruby-Backend oder
was auch immer?
Ich würde jetzt nicht sagen, dass das
irgendwie super krasser
Ackerman-Shit ist.
Aber jetzt hört mal zu, was er hier in diesem Talk
sagt.
Man muss hier wirklich ein bisschen
aufpassen auf seine Wortwahl. Er sagt hier
all these issues have been found
oder could be found. Das ist ein bisschen
schwierig zu interpretieren.
Mein Eindruck war jedenfalls, dass
er klämt, dass sein Fuzzer BambooJS
drei Sicherheitslücken
gefunden hat in Safari,
Chrome und Firefox. Jedenfalls auf der
Slide steht auch it revealed.
Also dieser Fuzzer hat das
gefunden. Und dann bin ich jetzt einfach mal hingegangen
und hab einfach mal diese CVEs nachgeguckt.
Die erste CVE hier
in Internet Explorer, eine Memory Corruption
Vulnerability, sieht legit aus,
aber die ist gecredited zu
Zeng Guang of Baidu S-Cloud
X Team, working with HP's
Zero Day Initiative. Das wurde also reported
von einem chinesischen Hacker, Teil des
Baidus Security Teams,
beziehungsweise reported über
HP's Zero Day Initiative. Also HP hat
eine Zero Day Initiative, wo sie glaube ich quasi
diesen Researchern Geld bezahlt.
Und dann HP hat das reported zu Micro...
Das ist alles so ein bisschen weird, wie
das in der Hacking-Welt manchmal so funktioniert und so.
Aber hier steht nicht, dass Jean Pereira
das gefunden hat. Die nächste CVE betrifft
Safari. Und auch hier wieder
ist jemand anders gecredited. Hier
steht, dass... Woah, Tencent.
Es tut mir so leid, ich kann das nicht aussprechen.
Zhonggong Xin
Ling Chen Zeng Feng
Wuxi. Tut mir leid, dass ich nicht
weiß, wie man das ausspricht. Aber Tencent
kennt ihr wahrscheinlich. Ist eine massiv große Firma.
Und KeenLab ist bekannt in der Hacking-Szene.
Das KeenLab-Security-Team ist wirklich
top-Tier in der Welt.
Wirklich top-top-Level-Security-
Researchers. Und die sind hier
gecredited, dass die das gefunden haben.
Und hier ist die Firefox-Sicherheitslücke.
Use after free. Und
der Credit ist hier gegeben zu Echo.
Das ist also jetzt ein Pseudonym. Da könnte
natürlich Jean Pereira dahinter stecken. Ich sag
jetzt einfach mal, ich hab den Namen in Verbindung
mit Jean Pereira noch nicht gesehen. Ich würde jetzt
einfach mal behaupten, das ist auch nicht Jean Pereira,
aber könnte natürlich sein. Das heißt, all diese
drei CVEs wurden nicht von ihm
reported. Aber das Ding ist, er hat
ja auch nicht geklämt, dass er die reported hat.
Sondern er hat geklämt, sein Fuzzer hat die gefunden.
Und das kann ich jetzt nicht beweisen,
ob quasi diese chinesischen
Researchers... Es wirkt aber trotzdem etwas shady, oder?
Man könnte es
ja auch ganz klar sagen,
was Sache ist, oder?
Man könnte auch einfach sagen, ja,
die chinesische
Research-Team hat
mein Fuzzer verwendet dafür, um
das aufzudecken.
...und Echo, ob die diesen
BambooJS-Fuzzer benutzt haben
und die gefunden haben.
Meine Einschätzung, einfach mein Bauchgefühl
bei meiner Erfahrung... Dass sie den nicht verwendet haben.
Ich glaube nicht, dass BambooJS das gefunden hat.
Dieses Browser-Hacking ist einfach
eine andere Liga. Diese chinesischen
Security-Researcher, die sind total
krank. Das ist unglaublich. Und wenn
Jean Pereira und sein Fuzzer wirklich so Zeug gefunden hätte,
dann wäre das ein Name, den ich auch wüsste.
Oder ein Name, der bekannt wäre. Und ein Name,
wo die Leute wirklich Respekt
davor haben. Und wahrscheinlich
kann es auch durchaus sein, dass
das dann in irgendeiner
Beschreibung dazu gestanden hätte.
Zumal
das GitHub-Projekt juckt ja auch niemand.
Das klingt
auch sehr shady, alles.
Aber das ist so nicht. Diese Meinung
habe ich noch nie irgendwo gehört.
Und das gibt mir dann einfach so ein ungutes Bauchgefühl,
wo ich das Gefühl habe,
hat der jetzt nur behauptet, der Bamboo-Fuzzer ist gefunden
oder ist es wirklich gelogen?
Oder haben die Leute den Bamboo-JS-Fuzzer
vielleicht benutzt? Das kann ich jetzt nicht beweisen.
Es fühlt sich für mich komisch an.
Ich lasse mich da auch gerne eines Besseren belehren.
Also falls es da eine Correction gibt, dann schaut mal runter
in die Kommentare oder in die Beschreibung.
Aber mein erster Eindruck ist so,
das wirkt ein bisschen sus.
Okay, so. Dann habe ich noch mal
ein bisschen weiter rumgeschaut. Und dann bin ich
über einen Chrome-Exploit von ihm gestoßen,
der tatsächlich dieses Jahr veröffentlicht wurde.
Und wie ich schon erwähnt habe,
Chrome-Exploits in 2023 sind schon richtig krass.
Das ist richtig, wie gesagt, top tier.
Ich kann es nicht oft genug sagen.
Das ist richtig crazy. Das heißt, da werde ich auf jeden Fall
erst mal stutzig, wenn ich das sehe.
Da fangen so direkt meine Fühlerchen an.
Da werde ich erst mal skeptisch und so.
Aber hey, hier ist ein Proof of Concept. Ich kann es testen.
Also habe ich hier sein Skript, das scheinbar die Vulnerability testet.
Okay, okay. Lass mal checken.
Was passiert da?
Web-GPU?
Bin ich mir gar nicht sicher,
ob das überhaupt
ähm
Ist das nicht noch
Experimental überhaupt? Na gut, ist ja auch egal.
Ähm, lass mal, das muss ich mal
kurz gucken. Can I use?
Ist aber auch egal.
Das sollte trotzdem ordentlich funktionieren.
Web-GPU
Ne, guck mal.
Die meisten Browser.
Okay, Chrome hat's
not enabled unter Linux by default.
Also hält sich noch sehr in Grenzen.
Also ich glaube, dass das Web-GPU
Ja, das steht doch auch oben.
Chrome Web-GPU Memory Corruption.
Steht doch sogar oben Web-GPU.
Okay, irgendwelche
Grafik-Zeug
Gut, da habe ich noch nie was mit gemacht.
Keine Ahnung. Was macht denn das?
Ist das
Irgendwie
Ist das Web-Assembly oder
Was passiert da? Oder
Irgendwie explizit was um diese Web-GPU
Keine Ahnung, ich habe mit Web-GPU
noch nie was gemacht.
Memory Corruption
Okay, mal gucken, was
da jetzt rauskommt.
Triggern soll genommen, mal runtergeladen und im Browser
geöffnet. Und siehe da,
mein Tab crashed.
Ja, na gut.
Erstmal so ein Indikator
Also, man kann
übrigens relativ einfach eine Webseite
crashen lassen, wenn das Ding zu viel
RAM anfordert oder sowas. Das habe ich
auch schon ein paar Mal. Wenn ich nicht aufgepasst
habe und
dann hing es und irgendwann ist es abgekackt.
Also gerade
als ich
versucht habe
mit Web-RTC
für ein paar Kameras mal was zu bauen
da habe ich
auch manchmal geschafft, dass
der Browser-Tab, sogar im Stream hat man das gehabt, dass
der Browser-Tab den Geist aufgegeben
hat. Und beim einen Mal
hatte ich einfach nahezu unendlich
Zeug in irgendeinem
Array geschrieben und dann ist es irgendwann
auch abgekackt.
Und
wo wir es auch geschafft haben
war bei der
C++ Web Assembly
Geschichte. Da haben wir es glaube ich
auch mal geschafft, wo wir diesen
FFmpeg, diesen C++ FFmpeg
Videoplayer gebaut haben im
Browser. Da hatten wir
es glaube ich auch geschafft, den Browser
zu crashen.
Sicherheitslücke sein könnte.
Es muss nicht. Es kann auch zum Beispiel sein, dass
ihr nicht genug RAM habt und der Browser sagt
oh mein Gott, die Seite benutzt
zu viel RAM. Jetzt lasst uns mal die Seite crashen
oder da ist ein Endless-Schleif
oder sowas und die Seite hängt
und dann crasht. Das habe ich auch schon.
Hat jeder wahrscheinlich schon. Es gibt also viele
Cases, wo es nicht ausnutzbar sind.
Aber sagen wir mal so, wenn da eine Sicherheitslücke
ist, dann würde die auch so crashen. Dann würde
das erstmal so aussehen. Und deshalb macht es schon
Sinn, da mal ein bisschen tiefer zu investigieren.
Also ich bin jetzt auch nicht Top-Tier
Browser Exploitation. Ich kenne mich da auch nicht aus. Deshalb habe ich
gefragt, Sirius. Der hat zwar selber auch noch
mit Fuzzing keine Vulnerables gefunden.
Reminder, Browser-Sicherheitslücken finden, ist richtig crazy.
Das ist wirklich Top-Tier-Hacking und so. Aber
was er schon gemacht hat, ist, er hat End-Days, also
Sachen, die schon reported wurden, benutzt
und hat daraus dann einen vollen Exploit gebaut.
Also er hat so ein Proof-of-Concept, so ein minimalistisches Ding,
was irgendwie Crash genommen. Und er kann das dann so
daraus einen vollen Exploit bauen. Das ist auch schon
technisch richtig krass. Da muss man sich auch richtig auskennen,
wie der Browser intern funktioniert und so.
Und ich kann das auch nicht. Aber deshalb habe ich ihn halt
gefragt und er hat sich das mal angeguckt. Und wenn man
die Seite halt öffnet und guckt mal in die Logs, was passiert,
dann sieht man, dass der Tab crashed
mit diesem Check Failed.
Is Detached. Und da steht auch dran, dass das
in der Datei gpu-buffer.cc
ist. Und Chromium ist Open Source.
Also wir können jetzt in den Quellcode vom Browser
gucken und mal schauen, wieso dieser
Fehler passiert. Also was ist da passiert?
Dann findet man hier diese Codezeile mit Check Is Detached.
Und dieser Check ist ein sogenannter Assert.
Wenn diese Condition da in diesen
Klammern halt... Okay, das ist ein absichtlicher
Crash. So nach dem Motto,
ey, dann stimmt irgendwas nicht.
Lass mal lieber crashen, bevor noch was
Schlimmeres passiert. Wenn das dann richtig
ist, dann sagt der Browser, oh, da stimmt irgendwas
nicht. Ich cancel jetzt. Ich crashe jetzt.
Und da ist ein Kommentar auch da drüber und da steht dran
Temporary Check to Prevent
Aliased Array Buffers.
Und da ist auch ein Chrome Bug verlinkt.
Das heißt, dieser Chrome Bug ist der Grund,
wieso dieser Check da drin ist. Und den können wir uns
jetzt mal angucken, weil das ist auch öffentlich.
Und hier sehen wir jetzt, dass dieses Issue,
dieser Use After Free in WebGPU,
wurde reported in Mai 2022
von David Manujehere.
Und der hat auch hier ein
Proof of Concept Exploit attached. Also wieder ein bisschen
Code, der das halt exploitet.
Und da sehen wir auch, das ist komplett legit.
Da kann man die Kommentare lesen von den Entwicklern
von Google oder Chromium halt, die halt
dann sich den Exploit angucken und überlegen,
wie der gefixt werden kann. Und am Ende kommt halt dann
der Fix raus. Und man sieht dann auch hier, da ist ein
Reward von 10.000 Dollar. Also die Person für den
Report hat halt 10.000 Dollar bekommen.
Und jetzt kann man sich auch diesen Exploit-Code angucken.
Und der sieht so, der ist auch schon ein bisschen länger.
Also der ist ein bisschen länger als das, was Jean-Pierre
gezeigt hat. Aber das kann
auch Sinn machen, weil ein Use After Free,
das ist so eine gewisse Sicherheits...
Ich weiß auch nicht so richtig, wie ich das beschreiben soll. Aber
ein Use After Free ist ein bisschen eine weirde Sicherheitslücke.
Die ist auch ein bisschen schwierig immer herauszufinden, was
so die Quelle der Sicherheitslücke
ist und so. Weil oft quasi
der Crash, also das Symptom
der Sicherheitslücke später zu sehen ist,
aber früher in der Ausführung
ist irgendwas passiert, was später dazu geführt hat.
Und dann zu verstehen, dass das hier am Anfang
dazu führt, dass später das passiert,
das ist immer so ein bisschen weird und so.
Use After Free ist ja,
also wenn man das jetzt mal
bei C++
oder in C ist ja relativ einfach.
Du legst,
du erstellst irgendeinen Pointer,
dann machst du einen Free drauf,
aber du hast ja immer noch die Variable,
wo die Adresse
quasi von dem Pointer drin steht. Und du greifst
dann später drauf zu, obwohl du vorher schon
Freed hast. Dann greifst du, das ist halt undefiniert,
was dann da rauskommt.
Generell ist in C
und leider auch in C++ sehr viel
undefiniert.
Vielleicht ein bisschen mehr Code notwendig, um reliable
quasi so einen Ablauf zu haben.
Das kann dir höchstwahrscheinlich in Rust nicht passieren.
Für die ganzen Krustentiere
unter uns.
In Rust kann es dir mit
Unsafe definitiv passieren und wahrscheinlich,
wenn du ganz abgedrehte Sachen
machst, wo der Borrowchecker nicht mehr hinterher
kommt, vielleicht auch, aber zumindest
die Großteil der Fälle sollte Rust
abfangen für sowas.
Führ das aus und dann wird das getriggert
und dann siehst du, dass das wirklich passiert
und so. Weil manchmal, ich weiß nicht, wie ich es beschreiben
soll, aber es erfordert halt so ein bisschen
mehr Arbeit. So, das Ding ist jetzt,
wenn man diesen Proof-of-Concept-Code nimmt
und auch im aktuellen Chrome-Browser
startet, dann sieht man den gleichen
Error. GPU-Buffer.cc
Check failed is detached.
Sieht erstmal nach genau dem gleichen
Crash aus. Das ist erstmal schon mal ein bisschen sass,
aber muss jetzt auch an sich nichts bedeuten, weil
es ging ja auch um eine Sicherheitslücke, nicht im
latest Chrome, sondern halt in einer älteren
Version. Aber wenn wir uns dann mal die Diskussion
angucken von den Chromium-Engineers, von den
Entwicklern, wie die diese Sicherheitslücke
eben gefixt haben, die da reported wurde,
dann steht da, wir adden
ein Check, um die Seite zu crashen,
um diese use-after-free-
Das ist ein absichtlicher
Crash, wenn das irgendwie sass aussieht.
Sicherheitslücke zu verhindern,
bevor wir eine bessere Mitigation einbauen.
Man muss jetzt schon hier sagen, hier waren die
Entwickler ein bisschen faul oder es ist halt ein bisschen unter den Tisch gefallen
und so, die haben das jetzt nicht, keinen sauberen
Fix gebaut, aber dieser Check-Fix, diesen
Assert, die gucken halt nach einer
Condition, die halt weird ist, die halt zu einer
Sicherheitslücke führen würde und
bailen einfach aus und sagen einfach so,
das ist halt so ein bisschen die lazy-Lösung. Sie merken so,
oh, da passiert was komisches, lass mal kurz crashen,
aber damit ist die Sicherheitslücke halt auch behoben.
Das ist zwar unschön, dass die Seite irgendwie crashed
und so, das ist halt nicht ganz elegant und deswegen
ist es auch ein To-Do und deswegen wollten sie
es irgendwann mal nochmal besser machen
und so, aber erstmal ist die Sicherheitslücke gefixt.
Und jetzt vergleicht mal
diesen originalen Exploit von
2022 von David mit dem
Exploit von Jean Pereira jetzt
in 2023 und das ist jetzt so ein
bisschen wie so ein Kindergartenspiel, wo du so ein bisschen so
zwei Bilder hast und musst so die Unterschiede feststellen und so weiter
und dann so ein bisschen einrahmen, wo jetzt die Unterschiede
sind und so. Da muss man jetzt nicht hier programmieren können
oder JavaScript verstehen können. Wenn man so ein bisschen den Text
liest, sieht man, dass der schon sehr
ähnlich ist. Da wurden einfach ein paar Variablen
umbenannt und es wurde minimiert.
Es wurde kleiner gemacht. Das macht eben auch
Sinn, weil eben jetzt der Code eben diesen
Check drin hat, diesen Assert,
der getriggert wird. Du brauchst eben jetzt
nicht mehr diesen ganzen Code, um diese
Use-After-Free, also um wirklich die richtige
Sicherheitslücke auszusetzen. Es reicht,
wenn du quasi, dass es für den Check so
aussieht, dass es crashed. Da bräuchte man ein bisschen
mehr Code, aber um diesen
frühen Check, der quasi die Sicherheitslücke
verhindert, um den zu triggern, da reicht ein bisschen
weniger Code. Und John Pereira hat das einfach jetzt
minimiert. Aber wenn ihr das vergleicht,
es ist quasi genau dasselbe. Aber daran sieht man,
okay, ganz planlos ist er ja nicht.
Also du musst zumindest
insofern Wissen darüber,
Bescheid, das angucken
und, naja gut, im Endeffekt
nimmst du das Originalbeispiel und löscht ein paar
Sachen raus. Aber also
kompletter Ultra-Kack-Noob
wird's wahrscheinlich nicht blicken.
Und deswegen, wenn man
jetzt ein Debug-Build von Chrome hat,
also ein Bild, wo man richtig den
Quell-Code sehen kann, wo man richtig so
sich angucken kann, wo der Fehler und so passiert.
Ich hab einmal versucht,
eine Chrome selbst zu
kompilieren. Das braucht ja so
unglaublich viel RAM.
Da hatte ich irgendwann keinen Bock mehr.
Wenn man jetzt also John Pereiras Code
nimmt und diesen alten Exploit-Code
nimmt und den in der aktuellen Version
sich an den Stack-Trace anguckt, was genau
passiert, dann sieht man hier,
der ist genau identisch.
Jetzt könnte es natürlich noch sein,
vielleicht hat er ja collaborated, vielleicht ist er
ja in Verbindung mit diesem Researcher, vielleicht
hat er das zusammen mit diesem Typ
gefunden, vielleicht hat auch sein Fuzzer das
gefunden. Also hab ich die...
Nein, nein, ich glaube, 16 Gig haben noch nicht mal gereicht.
Also das war wirklich krass.
Also erstmal ist Chrome-Kompilieren
eine Wissenschaft für sich. Du brauchst irgendwie drei verschiedene
Bildsysteme, musst dir zig Sachen runterladen,
in der richtigen Reihenfolge machen
und das braucht RAM und auch
Spacespace und so. Das ist wirklich...
Nichts, was ich in meiner Linux-VM mal nebenbei
machen konnte.
Dieser David Manoucheri, einfach mal eine Nachricht
auf Twitter geschrieben. Weil wir Hacker, wir sind halt
sehr connected auf Twitter und so weiter
und er folgt mir auch, hab ich gesehen und ich hab
ihm auch schon gefolgt, also schreib ich ihm einfach mal eine DM
und frag ihn mal. Ich übersetz mal auf
Deutsch. Ich hab ihn gefragt, hey, ist das
hier dein Report? Kennst du übrigens
John Pereira? Und schau dir mal diesen
Proof of Concept von John Pereira an. Sieht das
so aus wie dein Exploit? Und da schreibt er, ja,
das ist quasi identisch. Und das, wenn man es mit seinem
Proof of Concept vergleicht, ist wirklich nur
ein paar Buchstaben anders. Und dass die
Variabelnamen sogar basierend sind auf seinem
Code. Also Adapter wurde abgekürzt
zu A, Device wurde abgekürzt
zu D, GPU-Buffer wurde abgekürzt
zu B. Also auch hier, das ist
alles irgendwie ein bisschen sus.
Und David Manoucheri hat gesagt... Okay, das hätte ich
wahrscheinlich auch noch hinbekommen.
Ich hab noch nie was von dem gehört.
Und ich kann's nicht oft genug sagen, aber
Browser Exploitation ist wirklich Top-Tier-Hacking
und wenn du da dazugehörst, dann bist du auch
bekannt. Und wenn du nicht bekannt
bist, dann weil du nicht bekannt sein willst,
dann bist du aber auch nicht so ein Öffentlichkeits-Typ. Also es gibt
auf jeden Fall Hacker, die vor allem in
irgendwelchen Firmen arbeiten, wo das dann verkauft wird,
zu irgendwelchen Government-Agencies und so weiter.
Die sind dann vielleicht nicht öffentlich. Die stehen dann auch nicht auf der Bühne
und geben irgendwelche Talks und so weiter.
Die sind dann sehr privat für sich, reporten einfach ihr Zeug,
kassieren ihr Bug-Bounty, verkaufen die
Vulnerabilities und so weiter und kassieren Geld und so weiter.
Die stehen da nicht da. Aber jemand, der so öffentlich
ist und sich so öffentlich präsentiert,
kann man meinen, dass er bekannt ist in der
Browser Exploitation-Szene und dass andere Researcher ihn auch kennen.
Und jetzt wird es halt wieder schwierig.
Unterstellt man ihm jetzt, dass er diesen
Exploit-Code einfach copy und pastet hat,
ein bisschen was umbenannt hat, ein bisschen minimiert hat,
ein bisschen kleiner gemacht hat und so weiter und claimt jetzt,
er hat das gebaut? Naja, er hat jetzt nicht gesagt,
er hat das gefunden. Er ist nur dieser
Autor dieses Minimizing.
Also das kann man vielleicht einfach mal so sagen.
Er hat jetzt nicht gelogen, vielleicht.
Aber ich finde das schon so ein bisschen misleading
und ein bisschen toll. Ja, auf jeden Fall. Dazu muss man auch sagen,
ich kenne das sicherlich von YouTube. Zwei unterschiedliche YouTuber
beschäftigen sich mit demselben Thema und machen
das selbe Video und man denkt so, der eine hat vom anderen
geklaut, aber eigentlich hatten sie zufällig dieselbe Idee.
Das passiert in IT-Security auch ständig.
Wir nennen das dann Bug-Collision, wenn zwei
Security-Researcher denselben Security-Bug
quasi gleichzeitig finden. Das passiert einfach.
Also es könnte auch sein, dass Jean-Pierre
einfach zufällig über genau denselben
Issue gelaufen ist. Und das kann ich jetzt
halt nicht beweisen. Also ich kann jetzt nicht beweisen, dass er
wirklich diesen Code genommen hat und copy und pastet
hat und geändert hat. Mein Eindruck
ist, das könnte man unterstellen, aber wie gesagt,
ich kann es nicht beweisen und es könnte auch einfach sein,
dass es zufällig gleich war. Dazu kommt aber jetzt
auch noch die Einschätzung aus seinem Talk,
wo er das nämlich so richtig einordnet.
So if you have like a web server running
and you can crash it, of course you can do damage
with this. But this is not
the kind of attack
we are looking for. Because we are looking
to turn this crash into a real
code execution.
Wobei das ja auch immer komplett unterschiedliche
Angriffsvektoren sind. Bei dem einen
greifst du von außen auf irgendeinen Web-Server zu.
Ja, wenn du es damit schaffst, den zu crashen, ist
kacke.
Aber ob ich jetzt direkt an den
was schon habe auf dem
Server, was da läuft und direkt
da dran komme und mit dem Prozess
was machen kann oder übers Netzwerk da dran
muss, sind ja schon mal zwei unterschiedliche
Paar Schuhe.
Er weiß
also selber, dass nicht jeder Bug irgendwie
kritisch ist und dass das eben kein
Use-after-free-Bug ist. Er
rennt da in ein Assort rein, bevor überhaupt
ein Use-after-free irgendwie passiert oder so was.
Also zu claimen, dass es ein Use-after-free
ist, ist einfach falsch. Und irgendwie das so
hinzustellen, dass das ein Chrome
vulnerabilities oder sowas ist, ist auch so ein bisschen
ich weiß nicht. Das ist irgendwie
warum. Ich bin gerade mitten am Editing
dran und David hat mir nochmal geschrieben, weil ich
seine Einschätzung gefragt habe zu dem Bamboo
Fuzzer, ob seiner Meinung nach, weil er hat ja
wirklich erfahren. Da kommt jetzt irgendein
vernichtendes Urteil zu Bamboo.
Browser Exploitation, ob er denkt, dass dieser
Fuzzer hat was finden können und so.
Und ja, er sagt auch, das sieht nicht nach einem
Capable Fuzzer aus. Und er ist zwar auch vorsichtig
und sagt so, man kann halt immer Glück haben beim
Fuzzing und so, der könnte schon was gefunden haben, aber
es sieht nicht legit aus. Und er hat auch noch nie
was von ihm gehört, er hat noch nie mit ihm zusammengearbeitet
und sonst was. Ich hab mal die Nachrichten
eingeblendet, da macht euch ein eigenes Bild drüber.
Das ist jetzt wirklich die Einschätzung von einem,
der legit wirklich Browser Exploits gefunden hat.
Also wenn ihr quasi nicht mir glaubt, weil ich
hab sowas ja noch nie gefunden, dann vielleicht
glaubt ihr ja ihm. Aber wir sind noch nicht
ganz fertig. Aber jetzt wird's wieder, jetzt haben wir ein bisschen
das Technische überstanden, jetzt wird's wieder ein bisschen
untechnischer. Und zwar war dieser
Kommentar auch unter Leeroys Video
und der fand das auch so ein bisschen komisch,
dass da irgendwie eine Webseite referenziert
wird auf LinkedIn und dann
die Domain ist dann irgendwie Counterswarm
und er hat auch keine Connections zu aktuellen
IT-Security-Namen, ja, weil er irgendwie
halt irgendwie in seiner eigenen Bubble irgendwie
existiert. Und dann war er auch irgendwie
Inhaber von Secbiz und so und
dann schreibt die Person halt, entweder hat
der Typ schon mehrere No-Name-IT-Security-
Firmen gegründet oder der ist ein bisschen
shady. So, ich kann jetzt auf LinkedIn nicht
nachgucken. Mein Eindruck wäre auch
gewesen, das ist etwas shady.
Nachgucken, weil, wie gesagt, der hat mich ja blockiert,
aber jemand anderes hat mir diesen Screenshot
geschickt und da klämt er halt bei der
Citrus GmbH, dass er da irgendwie seit 13 Jahren
arbeitet. Ja, die Citrus GmbH, die existiert
jetzt halt erst seit gerade eben so, da kann
er jetzt nicht 30 Jahre gearbeitet haben.
Geil! Ich meine, er hat halt irgendwie
selbstständig schon irgendwie seit 13
Jahren gearbeitet. Halt in anderen Firmen hat irgendwie
20 Jahre Kubernetes-Erfahrung, Leute,
ja. Eine Firma gegründet und so, das ist
halt wieder so ein bisschen so, ich will jetzt nicht
sagen, das ist jetzt nicht vielleicht unbedingt eine Lüge,
also er hat als Head of Research oder so quasi
schon immer gearbeitet, hat einfach seinen eigenen
Titel erfunden oder sowas, ist ja auch okay, aber das
sieht halt natürlich erstmal komisch aus und ich finde...
Also es ist für mich immer ein
Anzeichen von, dass da
irgendwas nicht stimmt,
wenn Sachen weggelassen werden
und aufgepläht werden, so
nach dem Motto, durch das
Weglassen falsche Eindrücke
entstehen. Das ist immer so, dass ich mir denke, okay,
wenn man das nötig hat, dann muss doch
irgendwas ist da doch.
Das ist auch wieder so ein bisschen misleading und
irgendwie so eine, ich weiß nicht,
gilt das als Täuschung oder so, ich weiß es nicht,
weil das quasi das Unternehmen hinstellt, als wäre das
ein langjähriges, seriöses, laufendes
Unternehmen seit 13 Jahren, aber
stattdessen ist das eine Neugründung und
das ist auch alles so verwirrend, der hat da irgendwie diese
Counterswarm-Webseite und ich erinnere
mich, dass er da eben als Geschäftsführer
drin stand, aber da steht er jetzt nicht mehr drin, ich habe dann
im Webarchiv nachgeguckt. Im Webarchiv sieht man
halt, als die Citrus GmbH in Gründung war, stand
er da als Geschäftsführer drin, jetzt ist es nur jemand
als Geschäftsführer, ein Kai Probeil,
aber ich glaube halt eben, er ist da
nicht nur Angestellter, sondern er hat diese Firma mitgegründet,
ich habe jetzt nicht im Handelsregister
oder so nachgeguckt, ob er jetzt
Gesellschafter ist, aber ich würde jetzt einfach mal
vermuten und ich finde, das ist jetzt auch nicht abwegig,
diese Vermutung anzustellen, dass er
Geschäftsanteile von dieser Firma hat, dass er die
mitgegründet hat, also da bin ich mir ziemlich
sicher halt. Und dann hat er halt eben diese
Secbiz IT Security, die ist auch
inzwischen geschlossen, die gibt es jetzt auch nicht mehr
und dann irgendwie unter diesem Talk,
den er gemacht hat, noch einen Kommentar gefunden, wieso
Secbiz irgendwie Vorworte zu High Kiki, wo dann
wiederum jemand anders geschrieben hat, das wäre
JPs neue Firma. Alter, wer blickt da noch durch?
Und da gibt es eben diese High Kiki GmbH
mit einem Nikolas Flatt und so,
also mit dem er scheinbar dann wahrscheinlich
auch das gegründet hatte und da involviert
war oder sowas, das ist halt alles so ein bisschen
weird und das jetzt hören und sagen,
das weiß ich jetzt selber nicht, das habe ich jetzt
nicht so nachempfunden, das hat mir nur jemand
erzählt und vielleicht habe ich es auch falsch verstanden und
vielleicht ist es auch dieses Game of Telephone, wo sich die Story
ein bisschen verändert und so weiter, deshalb hier ein riesiger
Disclaimer, dass das vielleicht
nicht stimmt und so weiter, das sagen Leute
quasi hinter seinem Rücken so über ihn
oder sowas, das ist nicht meine Meinung,
es wird quasi so gesagt, dass er
ständig Firmen gründen
würde, um dann eben irgendwelche
Services zu verkaufen und dann ist die Firma
halt plötzlich weg, er schließt die wieder und arbeitet wieder an was
Neuem und ich habe mit einer Person tatsächlich Kontakt
gehabt, wo seine Firma mal wohl
Kunde von Jean-Pierre war oder sowas und die
waren wohl unzufrieden und haben dann
auch die Arbeit mit ihm beendet, aber ich kann
das nicht verifizieren, ich habe dafür keine Beweise
und so weiter, das war nur eine Instagram-Nachricht, die ich
bekommen habe. Wie gesagt, hören und sagen, nicht meine Meinung,
aber das hinterlässt... Direkt in Insi-Modus nach der
Gründung. Das ist halt immer so ein, wie man
schwäbisch sagen würde, hinterlässt ein bisschen
Geschmäckle. So, okay. Vielen Dank
für alle, die jetzt so weit geguckt haben, so lass
mich das mal noch so ein bisschen einordnen. Ich
liebe Hacking. Hacking, IT-Security
ist eine Kunst, ist wirklich
wahnsinnig. Ich habe so Respekt vor Leuten, die Sicherheit
finden. Ja, richtig gutes Video, da gebe ich euch recht.
Und ich liebe den Bereich. Ich liebe einfach
am Computer zu sitzen und mich mit den Themen zu beschäftigen.
Und deswegen habe ich auch diesen YouTube-Kanal, weil
ich eben das mit... Ich hoffe, ich konnte ein bisschen was Sinnvolles
zu erzählen, auch als nicht hauptberuflicher
Hacker-Man. ...der Welt teilen möchte und ich möchte
Leuten diese richtig geilen Sicherheitslücken
und so erklären. Ich liebe das halt. Aber es
gibt halt auch so ein bisschen so einen Community-Aspekt, weißt du,
so man muss sich den Respekt so ein bisschen verdienen
und so. Ja. Und João Pereira
erscheint mir jemand zu sein, der schon ein gutes
Grundwissen hat. Ich meine, er macht das jetzt auch schon eine ganze
Weile, auch wenn das vieles overhyped
ist und vielleicht ein bisschen misleading und
in meiner Meinung nach zum Beispiel bei dem Hospitalrun
eindeutig fake war, würde ich
grundsätzlich schon sagen, der Typ hat schon
IT-Ahnung. Das ist jetzt nicht einer, der
komplett Bullshit redet. Der sagt schon
auch richtige Sachen. Und deshalb finde ich das
so erstaunlich, wieso er
irgendwie dieses overhyping
und das negative Kommentare löschen
und so weiter macht. Zum Beispiel diese Mod...
Ja, weil komm in die Gruppe. ...Security
Issue, die er gefunden hat. Da kann er stolz drauf sein.
Das ist eine coole Sicherheitslücke. Das macht sich
richtig gut im Lebenslauf. Ich kann das einfach nicht
nachvollziehen, wieso man auf der einen Seite
offensichtlich das Wissen hat und
versteht, was XSS-Sicherheitslücken hat, die man
in irgendeiner Stadtverwaltung oder sowas findet. Keine Ahnung.
Aber dann das irgendwie so aufbauschen
muss und so. Andererseits kann ich halt auch verstehen,
dass so unsere Industrie leider funktioniert.
Also man sieht das halt sehr viel von Firmen,
von so Security-Service-Firmen und ihr
seht das auch in der VPN-Werbung, die
halt Leeroy gemacht hat, dass halt so mit Angstmacherei
geworben wird und so.
Und da wird immer dieser dunkle Hacker, böse Hacker,
der dann alle Devices irgendwie reinhacken kann, immer so hingestellt
und so weiter, weil das ermöglicht dann halt Firmen
irgendwie so Services zu verkaufen und
irgendwelche Security-Solutions.
Kriegen halt VPNs gar nichts dagegen.
Da habe ich ja sogar auch schon mal ein Video zu
gemacht, was NordVPN nicht gefallen hat.
In der generellen IT-Security-Industrie halt
ständig. Das fuckt richtig ab, das nervt
mich richtig und so und das nervt auch viele
Hacker und so. Andererseits halt ja, Businesses
machen halt Geld und die werben halt damit
und solange da irgendwie niemand was sagt, dann
weiß nicht, kommt man halt damit halt auch durch.
Jean-Pierre hat so ein bisschen das Problem, dass er halt nicht als
anonyme Firma auftritt, sondern halt als Person,
die halt bekannt ist, die man halt kennt
und dann kratzt der halt so ein bisschen an dem Ego
von uns anderen Hackern
und so. Und ich kann das...
Ja, verständlich. Ich finde es auch
immer nervig, wenn einer so...
Guck mal, ich finde es auch immer nervig,
wenn in irgendeiner Fernsehsendung
irgendwelche
IT-Szenen gezeigt werden oder
in irgendwelchen Serien oder so, die komplett weg von
der Realität sind. Da denke ich mir auch immer, Alter,
was zeigt dir da für ein Blödsinn?
Und so fühlt sich das halt auch an.
Du denkst dir,
okay, das ist alles so
vage und so, ah und da
fehlt so die Substanz
und dann denkst du dir so, aber eigentlich
wirft das jetzt ja dann auch ein schlechtes
Licht irgendwie auf Leute, die das
legit machen. Kann ich verstehen.
Ist es... McFly, ne du, dankeschön für die
Subs, ich habe ja irgendwie übersehen.
Einerseits könnt ihr auch eine erfolgreiche
IT-Security-Karriere haben, ohne dieses
Overhyping und so weiter.
Es ist dann halt schwieriger, irgendwie bei Heise
in irgendwelchen Artikeln und so zu landen und auch
schwieriger vielleicht bei Leroy als Interviewpartner
eingeladen zu werden.
Aber meiner Meinung nach ist
das nicht nötig. In IT-Security kann man
so einfach viel Geld verdienen. Die Firmen
suchen weltweit nach Security-Leuten und so.
Man muss natürlich einiges mitbringen.
IT-Security ist nicht etwas, wo man einfach so reinkommt.
Also für mich ist das schon so ein Tiefgang
in die Informatik und so weiter und ich finde,
für richtiges Hacking muss man schon echt
relatives Computerwissen haben und so. Das ist schon
eine krasse Spezialisierung und da muss man schon
einige Jahre dran sitzen und so. Es ist jetzt nicht,
dass man da so super einfach reinkommt, aber man
kommt einfach rein. Man muss halt ein bisschen Zeit investieren
und John Pereira, meiner Meinung nach, hat
auch das Wissen und das Level,
dass er da drin ist.
Ich kann es einfach nicht verstehen, wieso man
mit solchen Mitteln irgendwie spielen muss.
Und falls ihr wirklich das bis zum Ende geschaut habt,
wollte ich noch mal ein paar Recommendations geben
und vielleicht für Leroy einen anderen deutschen Hacker,
den er einladen könnte. Es gibt zum Beispiel
den Algorithmen Verstehen oder Morpheus Tutorials.
Beide habe ich schon mal getroffen und so weiter
und die sind solide Hacker, die
IT-Security verstehen und meiner Meinung nach
viel besser einordnen und realistisch...
Ja, ganz ehrlich, den Florian hätte er einladen sollen.
Das wäre sicherlich besser gewesen.
...schon professioneller einordnen können,
ohne dieses ganze Kinderkrams,
Anonymous-Bullshit. Und man könnte auch
zum Beispiel den Chaos Computer Club
kontaktieren. Linus Neumann, der ist immer wahrscheinlich
zu haben für so Pressemitteilungen und so, den könnte
Leroy auf jeden Fall interviewen. Der kann das auch
viel besser einordnen und so. Und für die ganzen
Schüler und Studenten unter euch, es gibt auch
den Deutschen Verein Nachwuchsförderung für
IT-Sicherheit und da bin ich auch quasi Gründungsmitglied
davon. Es gibt einen Discord,
wo ihr andere IT-Security
interessierte junge Leute kennenlernen könnt
und einmal im Jahr veranstaltet auch die Enfits
die Cyber Security Challenge Germany.
Das ist so ein Wettbewerb, wo man als Schüler und Student
mitmachen kann und so Sicherheitslücken
und so lösen kann. Und dann gibt es ein
Finale und dann gibt es auch die European Cyber
Security Challenge und so, da kann man dann rein und so.
Das ist richtig cool, das macht richtig Bock.
Ich habe damals auch mitgemacht. Ich bin der Two-Time,
ich habe zweimal die Cyber Security Challenge Germany
gewonnen, einer flex am Ende. Das lief jetzt
gerade erst, das wird also erst wieder nächstes Jahr stattfinden
und so weiter, aber checkt einfach mal den Discord aus
oder folgt halt dem CSCG-Twitter
oder so, dann bekommt ihr auch mit, wenn das wieder
startet und so und ich kann das euch wirklich nur ins
Herz legen, wenn ihr da Bock drauf habt und so. Das ist
euer Weg in die Legit-IT-Security-Welt
und das ist wirklich eine tolle Karriere.
Man muss da wirklich viel reinchecken und so, aber man kann
da auch viel reißen und das macht auch richtig Bock
und ich liebe diesen Job einfach und
und damit wäre es das
gewesen. Wir arbeiten übrigens auch an unserer eigenen
Trainingsplattform hackstreet.io, aber
wir sind noch nicht so weit, ist noch nicht öffentlich
und natürlich checkt auch meinen Hauptkanal LiveOverflow.
Am besten guckt in die Playlist, da gibt es ein paar
Playlists, vielleicht findet ihr ein Thema, was euch interessiert und dann guckt
euch mal die Playlists an und wenn ich jetzt noch so
einen Make-A-Wish-Wunsch hätte
oder sowas, so richtig dreist, so
richtig unangenehm am Ende, so
eine kleine Bitte, was mir richtig Freude machen würde.
Einfach so als kleiner Fan. Like, subscribe.
Also ganz direkt und ich weiß, als Influencer
ist das auch scheiße, wenn jemand sowas sagt,
aber ich bin jetzt einfach mal so assi,
weil ich auch eh nicht auf dem deutschen Markt unterwegs bin.
Das wäre so ein kleiner Dream-Come-True, wenn
Stay auf ein Video von mir reagieren würde.
Das war meine unangenehme Bitte.
Am Ende, ich verziehe mich schon hinterher. Ciao.
Das wäre was.
Das boostet vor allem nochmal ein bisschen hier.
Nice.
Wenn ich eingeloggt wäre, würde ich ihn auch direkt
subscribieren, wie das
eigentlich Lehrer mal gesagt hat.
Letztens ist eine Werbung gehört im Radio.
Da habe ich auch gedacht, irgendjemand hat das
super schlecht übersetzt.
Das war für irgendeinen, frag mich nicht, für irgendeinen
Reiseveranstalter oder so
oder für
eine Fluggesellschaft, ich weiß nicht.
Zumindest haben die gesagt in diesem Werbespot,
wir
fliegen Sie zu verschiedenen
Destinationen.
Da dachte ich mir auch so, was?
Wer hat
sich das denn überlegt?
Könnten wir das nicht einfach Urlaubsorte, Ziele
oder sonst was nennen?
Zu vielen Destinationen?
Klingt einfach dumm auf Deutsch, oder?
Genauso wie subscribieren.
Okay.
Leute, wisst ihr, was jetzt ist?
Ihr kommt nie drauf.
Und ratet mal,
was es heute gibt.
Und ich glaube, heute liegt ihr richtig.
Bettge, nein!
Bettge um 12 vor 4 noch nicht.
Nudel mit Lachs, richtig.
Nudel mit Lachs.
Gibt tatsächlich
seit etwas längerer Zeit mal wieder.
Nudel mit Lachs.
Also, ich bin mal auf.
Wir sehen uns die Tage.
Bis denn.
CU.
Ach ja, wer noch nicht gefollowt hat und öfters dabei
sein will, würde mich natürlich auch über ein Follow freuen.
Bisschen Sellout. Und es ist der erste,
sehe ich gerade. Bald ist, bald ist wieder
Abo-Sellout-Time angesagt.
Bis denn.
CU. Macht's gut.

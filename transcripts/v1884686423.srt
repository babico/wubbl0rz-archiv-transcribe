1
00:01:42,900 --> 00:01:44,900
So leute da bin ich

2
00:01:45,060 --> 00:01:52,620
Heute werden wir uns mal kotlin angucken oder kotlin oder ich weiß noch nicht mal wie man das überhaupt richtig ausspricht ich glaube es ist kotlin

3
00:01:55,380 --> 00:01:57,380
Not not sicher ja

4
00:01:57,700 --> 00:02:07,160
Aber das heißt auch wir müssen uns wahrscheinlich mit ein bisschen sachen aus java beschäftigen

5
00:02:08,500 --> 00:02:10,500
Da bin ich aber unschlüssig

6
00:02:10,740 --> 00:02:12,900
Ob das nicht ziemlich paints champ wird

7
00:02:19,230 --> 00:02:22,590
Ist von jetbrains ist ja aber es ist ja wohl irgendwie auf

8
00:02:23,270 --> 00:02:30,270
Jvm basis und dementsprechend sind wir auch ziemlich so was die java standard library angeht dran geboten glaube ich

9
00:02:30,470 --> 00:02:33,550
Keine ahnung ich habe ich habe es noch nie großartig verwendet

10
00:02:34,190 --> 00:02:37,700
das ist so

11
00:02:37,820 --> 00:02:48,980
Monka java

12
00:02:48,980 --> 00:02:52,060
was

13
00:02:52,060 --> 00:02:54,060
Microsoft hat auch in java

14
00:02:54,540 --> 00:02:58,140
Das war mir noch gar nicht klar ich kenne nur das oracle java

15
00:02:58,780 --> 00:03:05,300
Beziehungsweise eigentlich ist es ja mittlerweile glaub sogar open jdk ja was ist eigentlich das habe ich nie verstanden leute

16
00:03:06,940 --> 00:03:09,700
Was ist denn der unterschied zwischen open jdk

17
00:03:10,500 --> 00:03:17,060
Und dem oracle java zeug ich dachte ich dachte eigentlich immer das ist das gleiche aber anscheinend ist es doch nicht das gleiche

18
00:03:17,060 --> 00:03:19,060
Und

19
00:03:19,340 --> 00:03:24,580
Was ich auch nicht checke ist was der unterschied zwischen java und java enterprise edition oder sowas ist

20
00:03:25,460 --> 00:03:27,460
Das sind so dinger die habe ich noch nie kapiert also

21
00:03:28,820 --> 00:03:31,580
Fiveheader java kenner können wir das bestimmt erklären

22
00:03:33,260 --> 00:03:38,580
Ach du meinst das ist nur für minecraft na klar das neue minecraft ist doch sogar glaube ich c++

23
00:03:39,740 --> 00:03:45,660
Also dass das neu implementierte minecraft was jetzt nicht 16g ram braucht

24
00:03:49,640 --> 00:03:52,200
Ich habe gehört da bricht doch öfters mal der vulkan aus

25
00:03:54,240 --> 00:03:59,960
Kommerzieller support ja aber ist das feature mäßig irgendwie irgendwie was anderes weil ganz ehrlich wozu brauche ich

26
00:04:00,080 --> 00:04:03,840
kommerziellen support für für die run time im endeffekt ich meine das

27
00:04:04,240 --> 00:04:09,120
Niemand holt sich für dort nett bei microsoft zu wobei ich will das will ich jetzt mal gar nicht so in frage stellen

28
00:04:09,200 --> 00:04:12,840
Vielleicht vielleicht gibt es das ja wirklich vielleicht kann man sich ja für dort netz sogar

29
00:04:13,400 --> 00:04:17,720
Support holen bei microsoft aber ich kenne ich kenne niemand der das bisher gemacht hat

30
00:04:20,350 --> 00:04:23,390
Okay das das ist der erklärung damit kann ich was anfangen

31
00:04:23,910 --> 00:04:29,790
Open jdk war open source nachbauen bis alle oracle gehasst haben dann ist es jetzt offizielle standard okay

32
00:04:30,430 --> 00:04:36,350
Und der standard den macht auch nicht mehr oracle sondern haben die auch so eine art c++

33
00:04:36,750 --> 00:04:41,230
gremium nur für java oder ein jvm gremium oder sowas

34
00:04:45,420 --> 00:04:50,060
Java enterprise hat auch noch mehr features aber wahrscheinlich nichts weltbewegendes oder

35
00:04:54,850 --> 00:04:56,970
Dürfte wahrscheinlich ein bisschen so sein wie

36
00:04:57,850 --> 00:05:00,850
Ich weiß es ist ein dummer vergleich aber ich bringe es trotzdem

37
00:05:01,210 --> 00:05:07,090
Dürfte wahrscheinlich ein bisschen so sein wie ja wie visual studio community versus visual studio professional

38
00:05:07,090 --> 00:05:09,090
Es hat auch ein bisschen mehr features aber die braucht keiner

39
00:05:09,490 --> 00:05:14,130
Soll ich mal kurz package updates haben wir zwar gestern schon aber arch by the way

40
00:05:18,260 --> 00:05:20,260
wer zum teufel

41
00:05:20,780 --> 00:05:23,660
Warum warum nennt man seine library abseil

42
00:05:24,660 --> 00:05:28,060
Abseilen ist für mich ein synonym für ich geh mal kacken

43
00:05:29,540 --> 00:05:35,380
Abseil was ist das github abseil c++

44
00:05:41,860 --> 00:05:45,820
Abseil ich glaube ich glaube das hat nichts mit abseilen zu tun

45
00:05:50,820 --> 00:05:52,820
Augmente standard library

46
00:05:56,090 --> 00:06:00,890
Er hat auch keine erklärung zu dem namen na gut was auch was auch installieren es einfach updaten gut ist

47
00:06:01,730 --> 00:06:04,210
Brauche hier noch mal andere packages updaten

48
00:06:08,540 --> 00:06:10,660
Es gab keine updaten das heißt wir müssen rebooten

49
00:06:12,100 --> 00:06:13,420
Reboot

50
00:06:13,420 --> 00:06:25,450
hat man wieder zeit für mod gehockt der max ist aber immer am start

51
00:06:26,450 --> 00:06:37,210
Der maxi quasi fast jeden stream ist aber ach max ist eigentlich hat es jetzt ich habe es gar nicht mehr im discord geguckt hat

52
00:06:37,210 --> 00:06:39,210
das jetzt alles funktioniert

53
00:06:39,650 --> 00:06:41,650
Mit neuen domains

54
00:06:42,610 --> 00:06:44,610
Wenn wir gerade dabei sind

55
00:06:46,130 --> 00:06:48,130
Das kommt darauf an was man machen will

56
00:06:49,410 --> 00:06:54,930
Läuft okay ich mache mal kurz discord auf ich habe das schon tagelang nicht mehr reingeguckt kurz schauen

57
00:06:58,000 --> 00:07:00,000
Jemand hier rum gespampt hat oder so

58
00:07:02,200 --> 00:07:10,940
Was ist da

59
00:07:10,940 --> 00:07:13,100
Oh nice da bin ich mal gespannt bis ich nachher lese

60
00:07:17,500 --> 00:07:18,700
okay

61
00:07:18,700 --> 00:07:31,300
Ja also wie lange das dauert bis man bis man sich eingearbeitet hat das hängt ganz entscheidend davon ab was du machen willst also

62
00:07:34,000 --> 00:07:39,120
Als erstes musst du dir mal überlegen in welche richtung das gehen soll der einfachste einstieg ist tatsächlich

63
00:07:39,640 --> 00:07:44,640
Du schnappst dir einen browser und einen texteditor und machst ein bisschen javascript um dir das anzugucken

64
00:07:45,480 --> 00:07:52,080
Kannst du dich auch gleich ein bisschen mit html und css auseinandersetzen kannst du webseiten bauen beziehungsweise interaktive webseiten oder halt

65
00:07:53,360 --> 00:07:58,800
Applications wie man das heute nennt weil webseiten alleine klingt ja zu langweilig webapplications kannst du dann bauen

66
00:07:59,600 --> 00:08:03,080
Das schöne ist das hat die mit abstand kleinste einstiegs würde allerdings

67
00:08:03,560 --> 00:08:10,200
Hat es auch eine relativ steile lernkurve sobald man anfängt ein bisschen mehr als vanilla javascript und im text mit dem texteditor machen zu

68
00:08:10,200 --> 00:08:16,440
Wollen dann guckt man sich irgendwelche frameworks an die man lernen muss dann muss man neue javascript features lernen dann muss man

69
00:08:16,800 --> 00:08:21,800
sich eventuell wenn man pech hat je nachdem was man nimmt mit nimmt noch mit webpack auseinandersetzen

70
00:08:23,160 --> 00:08:25,800
Glücklicherweise ist webpack nicht mehr so verbreitet

71
00:08:34,620 --> 00:08:40,660
Irgendwas ist auch bei twitch kaputt vielleicht vielleicht liegt es auch an mir vielleicht streame ich einfach zu oft

72
00:08:41,620 --> 00:08:43,380
in letzter zeit

73
00:08:43,380 --> 00:08:48,740
Man weiß es ja nicht ich meine ich habe aktuell so viele subscriber tatsächlich wie noch nie wir müssen nachher wieder

74
00:08:50,020 --> 00:08:52,100
Subscriber schätzen machen

75
00:08:54,760 --> 00:08:59,160
Gucken ob jemand das gut erraten kann

76
00:09:01,240 --> 00:09:05,050
Zumindest

77
00:09:05,050 --> 00:09:08,050
Was mir aufgefallen ist ich habe sonst immer

78
00:09:09,650 --> 00:09:11,650
War mal im monat so

79
00:09:11,770 --> 00:09:17,650
12 sein so 60 70 damals schwankte so zwischen 50 und 150 oder sowas vielleicht

80
00:09:18,610 --> 00:09:23,250
den follower auf twitch bekommen aber die letzten glaube ich

81
00:09:23,770 --> 00:09:26,010
hier fünf so die letzte woche oder so

82
00:09:27,490 --> 00:09:29,490
Kein mehr doch ich glaube drei oder so

83
00:09:29,490 --> 00:09:31,490
Und

84
00:09:32,130 --> 00:09:39,330
Dabei waren zwei richtige hiq streams dabei die auch die auch zumindest wenn ich mir das hier im chat angeguckt habe richtig gut angekommen sind

85
00:09:40,490 --> 00:09:45,050
Nämlich einmal unser steckdosen flash stream und einmal den

86
00:09:46,970 --> 00:09:51,610
Cloud den den google kubernetes stream sind beide richtig gut angekommen aber twitch

87
00:09:52,450 --> 00:09:58,410
Die milfra steckdose genau aber twitch hat gedacht was natürlich auch sein kann ist

88
00:09:58,530 --> 00:10:03,690
Dass irgendwelche leute follow bottet haben und das jetzt erst mal wieder aufgeräumt wird man weiß ja lieber twitch so genau

89
00:10:04,170 --> 00:10:06,170
dass sich das ungefähr ausgleicht

90
00:10:06,290 --> 00:10:08,290
Dankeschön für den sub

91
00:10:10,770 --> 00:10:12,770
IQ wieder gestiegen

92
00:10:13,810 --> 00:10:17,530
Kannst du erzählt in frankfurt co-location empfehlen nee

93
00:10:18,770 --> 00:10:20,770
also ich kenne

94
00:10:21,170 --> 00:10:27,210
In frankfurt nur standorte wo man sich rex und so zeug mieten kann aber jetzt nicht so nach dem motto

95
00:10:27,970 --> 00:10:35,290
Managt sondern du bekommst halt einen raum und da musst du dann selbst deine sachen einbauen du kriegst quasi netzwerkkabel aus der wand

96
00:10:35,290 --> 00:10:36,770
sozusagen

97
00:10:36,770 --> 00:10:38,010
jetzt

98
00:10:38,010 --> 00:10:40,010
leicht vereinfacht ausgedrückt

99
00:10:40,770 --> 00:10:43,410
Aber so so geschichten mit

100
00:10:44,290 --> 00:10:49,140
Du kannst da deine eigene hardware hosten

101
00:10:50,220 --> 00:10:52,220
Eventuell eventuell darfst du auch selbst rein aber

102
00:10:52,900 --> 00:10:58,420
Du hast auch irgendwelche support sachen kommt kommt wahrscheinlich ein bisschen darauf an was du haben willst ja willst du das komplett

103
00:10:59,260 --> 00:11:04,460
Gemanagt haben dass du auch leute da hinschicken kannst die die festplatte tauschen oder willst du da selbst rein also

104
00:11:05,460 --> 00:11:12,820
Die die einzige sache wo ich das wo ich tatsächlich mal in der location war in frankfurt wo wir uns kein eigenes

105
00:11:14,300 --> 00:11:21,100
Rechenzentrums abteil gemietet haben war im d6 das dürfte aber wahrscheinlich für die meisten leute viel zu teuer nicht erschwinglich und auch nicht

106
00:11:21,460 --> 00:11:26,780
Sinnvoll sein also den zeiten wo ich noch beim provider gearbeitet habe da hatten wir ein ganzes

107
00:11:27,100 --> 00:11:34,060
Im d6 stehen jetzt ich weiß gar nicht gibt es gibt es davon überhaupt ordentliche bilder im internet

108
00:11:35,780 --> 00:11:48,150
Ja ja gut so sehen schränke da drinnen aus d6 von innen ja super sieht man bloß netzwerkschränke

109
00:11:49,950 --> 00:11:55,710
Es sieht auch nicht viel anders aus als in anderen rechenzentren halt gefühlt deutlich mehr netzwerkinfrastruktur

110
00:11:56,710 --> 00:12:01,190
Zumindest dort haben wir den recht gemietet und ich bin mir noch nicht mal sicher ob wir das weg alleine hatten

111
00:12:01,750 --> 00:12:03,990
oder ob wir in diesem recht sogar nur

112
00:12:05,550 --> 00:12:09,350
Paar höhen einheiten gemietet haben das kann nämlich auch sein ich bin mir da nicht mal ganz sicher

113
00:12:09,750 --> 00:12:13,550
Ja und da muss man rein und damals muss man storage neu starten

114
00:12:14,790 --> 00:12:17,510
und ich habe damals auch gesehen wie ein

115
00:12:18,510 --> 00:12:20,190
wie ein

116
00:12:20,670 --> 00:12:26,270
Peering anschluss zwischen providern aussieht das hört man ja öfter so nach dem motto oder das peering

117
00:12:26,430 --> 00:12:32,270
Bei youtube zu youtube von der telekom ist so kacke und hier und da haben sie probleme das ist äußerst unspektakulär

118
00:12:32,590 --> 00:12:37,470
Wie so ein peering aussieht als das peering oder heißt es peering peering glaube ich

119
00:12:38,870 --> 00:12:45,710
Das ist letztendlich ein stecker also das ist ein kabel was du in deinen switch schräg schräg router stöpselst

120
00:12:45,710 --> 00:12:52,190
Und auf der anderen seite stöpselst du das in einen switch schräg schräg router

121
00:12:52,790 --> 00:12:57,990
Von einem anderen provider fertig mehr ist das nicht natürlich kann man das beliebig aufblähen

122
00:12:58,590 --> 00:13:04,470
Aber ich habe damals unser peering mit free net gesehen das war stinknormales kabel

123
00:13:04,870 --> 00:13:07,270
Könnte könnte glasfaserkabel gewesen sein aber

124
00:13:08,190 --> 00:13:12,390
Von unserem switch an den switch fertig der router switch schräg schräg router

125
00:13:13,510 --> 00:13:15,510
Das war das gesamte peering

126
00:13:26,530 --> 00:13:29,730
Was jetzt das blicke ich jetzt nicht was willst du wie jetzt

127
00:13:30,370 --> 00:13:37,260
Ach so was du programmieren willst habe nämlich ein problem mit meiner tastatur ich will halt mit einer software oder im code

128
00:13:37,260 --> 00:13:41,700
Der tastatur gucken warum einige tasten plötzlich doppelt gehen oder teilweise gar nicht das nervig

129
00:13:42,180 --> 00:13:47,540
Das wirst du dir aber wohl kaum in der mit der software angucken können das wird mechanisch bedingt oder im

130
00:13:48,380 --> 00:13:50,100
ungünstigsten fall

131
00:13:50,100 --> 00:13:54,500
Direkt in dem controller von der tastatur passieren das wirst du nicht einfach auslesen können

132
00:13:54,820 --> 00:13:59,540
Haupt also das eigentliche problem wird höchstwahrscheinlich mechanisch bedingt sein also gerade

133
00:14:00,780 --> 00:14:02,460
mechanische also

134
00:14:02,460 --> 00:14:03,860
clicky clicky

135
00:14:03,860 --> 00:14:08,220
tastaturen mechanische tastaturen die neigen dazu zu wie nennt man das

136
00:14:10,020 --> 00:14:15,380
Doppelte tastenanschläge zu haben wir haben die heißen das so prellen oder so was also ich hatte ich hatte auch schon

137
00:14:15,780 --> 00:14:19,980
mechanische tastaturen wenn du da auf den knopf also wenn du dir wirklich zu fest

138
00:14:21,100 --> 00:14:23,500
auf den auf die taste

139
00:14:25,500 --> 00:14:30,180
Gedrückt hast dann kamen doppelte tastenanschläge und es war mega nervig

140
00:14:30,820 --> 00:14:38,740
Und die ganz ehrlich die schlechteste tastatur die aber bei weitem nicht die billigste war die schlechteste tastatur die ich je hatte

141
00:14:40,580 --> 00:14:42,580
War die hier korsar

142
00:14:43,140 --> 00:14:45,060
k95 rgb

143
00:14:45,060 --> 00:14:50,740
Die ist abfakt teuer gewesen weil wahrscheinlich weil rgb

144
00:14:51,540 --> 00:14:54,940
Und ganz ganz ganz im ernst ich mach das ding mal groß

145
00:14:55,420 --> 00:15:00,260
Vielleicht hatte ich auch ein sonntagsmodell also wenn ihr die tastatur habt und damit zufrieden seid ist das schön für euch

146
00:15:00,580 --> 00:15:05,180
Aber ich habe mir in der tastatur so viele probleme gehabt also erstens hatte ich doppelte tastenanschläge

147
00:15:06,900 --> 00:15:11,660
Ich weiß nicht mal was es war ich glaube dass es

148
00:15:13,060 --> 00:15:16,780
Ich habe mich doch im stream immer drüber aufgeregt was war denn das backspace

149
00:15:17,060 --> 00:15:19,060
Nee

150
00:15:19,100 --> 00:15:20,780
V

151
00:15:20,780 --> 00:15:27,420
Kontroll v war es es war v genau ich habe ich habe ich habe manchmal doppelt doppelt copy pasted und so was

152
00:15:27,660 --> 00:15:29,660
das war extrem nervig

153
00:15:29,860 --> 00:15:31,820
du

154
00:15:31,820 --> 00:15:34,420
Ich habe kontroll v gedrückt hat auf einmal so gemacht

155
00:15:35,060 --> 00:15:41,340
Also hier ich habe das copy pasted habe eingefügt auf einmal hatte ich das irgendwie so hatte ich das irgendwie zwei dreimal drinstehen ganz ganz schrecklich

156
00:15:42,340 --> 00:15:44,740
Also das das war wirklich das war wirklich mist

157
00:15:45,180 --> 00:15:50,180
der grund warum ich mir das ding für daheim geholt habe ist war tatsächlich die die makrotasten und die

158
00:15:50,780 --> 00:15:56,780
programmierfähigkeiten aus und vielleicht ein bisschen rgb von den features her also auch auch hier vorne mit dem mit dem

159
00:15:57,540 --> 00:16:04,180
Mit der handballenauflage wobei die auch nicht nicht richtig richtig gut war die war sehr gummimäßig weniger weich aber das war okay

160
00:16:05,060 --> 00:16:08,580
So also dass das war eines der großen probleme in der statur hatte

161
00:16:09,140 --> 00:16:14,640
dass ich doppelte tastenanschläge hatten mit v jetzt habe ich da habe ich mehrfach mehrfach

162
00:16:17,070 --> 00:16:18,750
da

163
00:16:18,750 --> 00:16:26,740
so

164
00:16:26,780 --> 00:16:29,960
Dann

165
00:16:29,960 --> 00:16:34,560
Hatte ich das problem dass manche tasten nicht mehr richtig funktioniert haben

166
00:16:34,640 --> 00:16:40,800
Wann es war glaube ich umschalten war glaube ich irgendwelche numm tasten hier oben das weiß ich noch als ich mit i3 hier

167
00:16:41,040 --> 00:16:44,760
Desktop umschalten wollte ging es manchmal nicht da muss ich mehrfach die gleiche taste drücken

168
00:16:45,120 --> 00:16:49,480
Danach hatte ich übrigens eine logitech mit der war es auch nicht viel besser da ist mir eine taste abgebrochen abgebrochen

169
00:16:49,560 --> 00:16:55,080
Ich weiß auch nicht was mit modernen tastaturen hochpreisigen modernen tastaturen los ist dass sie so probleme haben

170
00:16:55,360 --> 00:16:58,880
So also die zwei sachen hatte ich und ganz ehrlich ich hatte das ding nicht lange

171
00:16:59,880 --> 00:17:03,320
ich hatte das

172
00:17:03,440 --> 00:17:05,440
eineinhalb jahre oder sowas

173
00:17:05,960 --> 00:17:07,960
Und da hat es schon angefangen kaputt zu gehen

174
00:17:08,480 --> 00:17:13,720
Richtig richtig räudig so und das nächste ding dass es jetzt allerdings also das waren zwei wirklich

175
00:17:14,920 --> 00:17:17,040
Kann man sagen da geht es jetzt nicht um

176
00:17:17,880 --> 00:17:24,680
Subjektive ein oder zwei objektive fehler an der tastatur so dann hatte ich aber auch noch ein paar subjektive sachen die mir persönlich überhaupt nicht

177
00:17:24,680 --> 00:17:31,560
gefallen haben erstens hatte ich den eindruck ich kann es nicht genau beschreiben warum und zwar waren die tastatur waren die

178
00:17:31,880 --> 00:17:35,560
die oberfläche von den tasten war zu

179
00:17:36,040 --> 00:17:38,040
Glatt

180
00:17:38,040 --> 00:17:40,040
Komisch zu beschreiben

181
00:17:40,120 --> 00:17:42,880
Aber ich hatte nicht richtig halt auf den tasten

182
00:17:43,600 --> 00:17:50,640
Ich meine ja alle tastaturen sind oben glatt aber ihr hattet sicher ihr hattet doch auch schon mal unterschiedlich tastaturen in den händen du hast du hast

183
00:17:50,920 --> 00:17:52,920
tasten die sind und

184
00:17:53,080 --> 00:17:59,960
Die sind die alles ein bisschen gebogen oben aber du hast teilweise tasten wenn du damit den finger so ein bisschen drüber

185
00:18:00,800 --> 00:18:06,920
Drüber streichste du merkst da schon dass du minimalen widerstand hattest hast so dass wenn du die

186
00:18:07,080 --> 00:18:13,520
Beim angenommen du legst die finger ordentlich auf wasd dann bleiben die finger da halt drauf wenn du die nicht wenn du nicht absichtlich

187
00:18:13,520 --> 00:18:14,840
Hin und her wackelst

188
00:18:14,840 --> 00:18:18,360
Hatte ich hier überhaupt nicht war ganz nervig war ganz ganz schwammiges gefühl ich hatte nie den eindruck

189
00:18:19,200 --> 00:18:23,560
Und ich habe auch das hatte ich auch noch bei keiner anderen tastatur ich hatte auch das

190
00:18:24,160 --> 00:18:27,680
Nicht das gefühl dass ich mit den fingern auf den richtigen tasten bin

191
00:18:27,880 --> 00:18:34,360
Also ganz im ernst wenn ich auf der tastatur nicht drauf gucke und nicht sicher feststellen kann

192
00:18:34,800 --> 00:18:37,360
Ob ich auf wasd gelandet bin

193
00:18:38,520 --> 00:18:40,520
Ohne auf die tastatur gucken zu müssen

194
00:18:41,160 --> 00:18:43,120
Dann stimmt irgendwas nicht

195
00:18:43,120 --> 00:18:47,880
Mein wasd an sich ist ja recht einfach festzustellen du musst gucken ob das f daneben hast aber trotzdem

196
00:18:47,960 --> 00:18:50,760
Du willst es du willst es eigentlich wissen und ich glaube das lag daran

197
00:18:51,680 --> 00:18:53,680
dass du zwischen caps lock

198
00:18:54,200 --> 00:19:00,880
Nicht nicht so richtig in abstand hattest und zwischen tap also mit der mit der aktuellen tastatur die ich hier habe habe ich halt

199
00:19:00,920 --> 00:19:06,640
So die tasten habe ich merkt es sofort ich merke instant wenn ich hier meine finger richtig auf wasd liegen

200
00:19:06,640 --> 00:19:11,040
Habten so und die rutschen dann auch nicht rum also damit hatte ich damit habe ich ein problem es hat mir überhaupt nicht gefallen

201
00:19:12,800 --> 00:19:18,160
Und ne ne macht ja macht ja nichts raus ich das muss man muss man mal erzählen falls die leute sich das kaufen wollen

202
00:19:18,400 --> 00:19:22,080
Und ein ding womit ich überhaupt gar nicht klar gekommen bin

203
00:19:22,680 --> 00:19:27,680
Was hast du aktuell für das ich habe ich habe mehrere ich kann ich sag dir gleich was ich für was verwenden verwende

204
00:19:28,240 --> 00:19:35,530
Also ein problem wo ich gar nicht drauf klar gekommen bin bis zum schluss nicht auf gar nicht drauf klar gekommen bin ist

205
00:19:35,850 --> 00:19:41,050
Übrigens diese geriffelte lehrt hast da habe ich bis heute nicht verstanden warum die geriffelt ist jetzt lieber war wir es die riffeln sollen

206
00:19:41,690 --> 00:19:43,930
Zumindest eine sache auf die ich überhaupt nicht

207
00:19:44,690 --> 00:19:51,520
Echt war nie da dabei geriffelte wasd ist okay möglich möglich

208
00:19:51,600 --> 00:19:53,080
Möglich möglich

209
00:19:53,080 --> 00:19:58,120
Da hätte ich vielleicht mal in die packung gucken müssen also dann kann man den kritikpunkt schon mal streichen aber der rest bleibt bestehen und

210
00:19:58,120 --> 00:20:00,120
Bei den anderen tasten war es ja im prinzip genau das gleiche

211
00:20:01,680 --> 00:20:08,320
So aber eine sache wo ich bis bis zum schluss nicht auf klar gekommen bin ich war chat ihr könnt mir mal sagen wie ihr das

212
00:20:08,320 --> 00:20:10,320
macht aber ich

213
00:20:10,360 --> 00:20:16,440
Stelle öfters mal ganz gerne fest dass meine tastatur richtig liegt und alles auch ohne dass ich

214
00:20:17,000 --> 00:20:21,520
Also ich überhaupt nicht ich sage ich überprüfe ganz gerne mal meine tastatur und so und alles richtig liegt

215
00:20:21,760 --> 00:20:28,600
Ohne dass ich drauf gucken will und wie ich das mache ist folgendes ich gehe mit dem kleinen finger an den linken unteren

216
00:20:28,600 --> 00:20:33,160
Rand der tastatur und ich weiß der linke untere rand der tastatur ist kontroll

217
00:20:34,320 --> 00:20:35,960
und das ist hier nicht so

218
00:20:35,960 --> 00:20:37,960
Ich bin regelmäßig mit meinem finger

219
00:20:38,360 --> 00:20:44,640
Zwischen den makro tasten und kontroll stecken geblieben mit dem kleinen finger beim beim fühlen ob ich die tastatur an der seite habe

220
00:20:45,440 --> 00:20:47,440
Und ich habe oftmals

221
00:20:48,120 --> 00:20:53,000
G6 anstatt kontroll gedrückt weil ich gesagt habe ok tastatur und links das muss kontroll sein

222
00:20:53,720 --> 00:20:57,480
Mag irgendwie ein bisschen übungssache sein war aber war aber total

223
00:20:58,520 --> 00:21:01,660
unintuitiv

224
00:21:01,660 --> 00:21:07,460
Hat mich hat mich gestört ja und dementsprechend kann ich sagen die tastatur kann ich zumindest nicht empfehlen

225
00:21:08,460 --> 00:21:14,330
Ja die die untere makro taste hatte ich auch gar nicht gar nicht belegt

226
00:21:15,050 --> 00:21:19,410
Aus aus dem grund die makro fähigkeiten sonst was war

227
00:21:20,290 --> 00:21:24,090
Okay, würde ich mal sagen nicht super nice aber okay

228
00:21:24,730 --> 00:21:29,210
So aktuell habe ich folgendes ich habe zwei ich habe zwei tastaturen ich habe einmal eine

229
00:21:29,530 --> 00:21:33,410
Ducky one was ich witzig finde weil es auch schon ein paar leute im chat vorgeschlagen haben hier

230
00:21:34,610 --> 00:21:37,330
Einfach max ans trinken hat man gleich

231
00:21:39,370 --> 00:21:41,370
Exzellent mach ich jetzt mal

232
00:21:43,420 --> 00:21:47,500
Also irgendwelche leute haben geschrieben ich soll mir eine ducky tastatur kaufen genau

233
00:21:48,780 --> 00:21:50,300
so

234
00:21:50,300 --> 00:21:55,860
Ich habe auch eine ducky one skyline aber die alte und full size

235
00:21:56,380 --> 00:21:58,380
Also sowas hier mit num block

236
00:21:59,260 --> 00:22:03,180
Allerdings mit dem nicht mit diesem hässlichen enter key sondern mit dem normalen

237
00:22:03,900 --> 00:22:09,860
die so so sieht die aus

238
00:22:10,220 --> 00:22:15,740
Wobei ich mir auch ein bild ich habe die auch mit einem blauen enter key komisch vielleicht kommt man in tauschen oder so wirklich

239
00:22:16,300 --> 00:22:21,020
Also sowas hier in der kombination die habe ich am start die habe ich allerdings auf der arbeit mittlerweile

240
00:22:21,580 --> 00:22:27,900
Was heißt mittlerweile mittlerweile ist gut gesagt ich habe mir die explizit für die arbeit gekauft damals und ich habe die dann auch mit

241
00:22:27,900 --> 00:22:29,900
Die alte firma genommen habt jetzt in der neuen firma auch

242
00:22:29,980 --> 00:22:34,780
Ich habe quasi das einzige was ich mitgenommen habe von der alten in der neuen für die neue firma ist meine tastatur und meine maus

243
00:22:34,780 --> 00:22:36,780
Maus habe ich noch eine

244
00:22:37,100 --> 00:22:38,860
Logitech

245
00:22:39,340 --> 00:22:42,380
Logitech g502 pro toyscore

246
00:22:45,460 --> 00:22:50,860
Also das ding habe ich am start auf der arbeit als tastatur und das mega nice tippt sich wirklich sehr angenehm

247
00:22:51,420 --> 00:22:56,620
Das einzige problem ist das ist eine rein mechanische tastatur das heißt du nervst ein bisschen die leute auf der arbeit

248
00:22:57,340 --> 00:23:02,660
Wenn man nicht jetzt total heftig drauf schlägt dann geht das aber

249
00:23:03,420 --> 00:23:06,900
Es gibt allerdings auch silikon ringe für die tastaturen

250
00:23:07,620 --> 00:23:09,620
Das

251
00:23:09,860 --> 00:23:17,140
Macht es bei manchen tasten ein bisschen erträglicher so und für daheim habe ich eine logitech g512

252
00:23:18,180 --> 00:23:20,180
so eine

253
00:23:23,390 --> 00:23:28,230
Sowas hier das ist nicht die geilste tastatur die ich jemals hatte aber

254
00:23:29,150 --> 00:23:31,750
Ich habe schon die zweite weil die erste kaputt gegangen ist

255
00:23:32,550 --> 00:23:39,390
Ich habe ich habe auch übelst glück mit meiner tastatur hardware gehabt die letzten jahre aber man muss sagen logitech hat das ding einfach ausgetauscht

256
00:23:40,070 --> 00:23:44,830
beziehungsweise amazon hat das ding einfach ausgetauscht also die ist die war kaputt

257
00:23:45,670 --> 00:23:47,670
und dort ist mir tatsächlich

258
00:23:48,830 --> 00:23:50,830
control abgebrochen

259
00:23:51,790 --> 00:23:53,790
Die kontrolltaste ist abgebrochen

260
00:23:56,570 --> 00:24:01,130
Ich hätte nicht gedacht dass das überhaupt passieren kann aber kontrolle ist abgebrochen

261
00:24:04,020 --> 00:24:12,180
Und ich also ich kann mir vorstellen warum die abgebrochen ist aber die darf nicht abbrechen und zwar die ist abgebrochen weil wenn meine tastatur

262
00:24:12,740 --> 00:24:18,060
Schief liegt dann greife ich hier unten links an die tastatur also da habe ich dann

263
00:24:18,180 --> 00:24:24,860
Da habe ich mein mittelfinger an an dem gehäuse und meinen zeigefinger habe ich an der kontrolltaste und dann schiebe ich halt die tastatur

264
00:24:25,060 --> 00:24:27,900
Ein bisschen wieder in die richtung wie sie hingehört

265
00:24:29,020 --> 00:24:32,780
Und das hat die kontrolltaste einfach nicht verkraftet die ist kaputt gegangen

266
00:24:41,150 --> 00:24:43,150
Die ist verreckt komplett

267
00:24:43,670 --> 00:24:50,720
Und wenn das abbricht kannst du die halt auch nicht fixen

268
00:24:51,720 --> 00:24:58,760
Das ist ja keine rubberdome tastatur oder sowas wo du auseinanderschraubst was im dreck raus pustest und gut ist wenn der schalter im arsch ist

269
00:25:00,760 --> 00:25:02,760
Ist es ist das ding halt kaputt

270
00:25:04,680 --> 00:25:09,120
Also da war der war sowohl der schalter im arsch als auch die kontrolltaste selbst gehen also

271
00:25:09,440 --> 00:25:14,640
Ich weiß ich hatte übelst pech mit mit meinen mein tastaturen das letzte mal aber muss man echt sagen logisch hat das ding

272
00:25:14,920 --> 00:25:20,520
Ausgetauscht ohne probleme zack habe ich eine neue tastatur gekriegt hat wunderbar funktioniert und die neue hält

273
00:25:20,720 --> 00:25:25,040
Also anscheinend hat sie hat sie ein bisschen morsche kontrolltaste gehabt

274
00:25:33,180 --> 00:25:38,700
Logitech g hub das ding habe ich auch am start auch wenn es doch hier ist es ja finde ich auch nicht so geil

275
00:25:39,900 --> 00:25:41,900
Aber gibt gibt schlimmere software

276
00:25:43,660 --> 00:25:45,660
Ich muss noch was zur ducky

277
00:25:45,860 --> 00:25:47,460
tastatur sagen

278
00:25:47,460 --> 00:25:53,500
Weil eines der gründe schlechthin warum ich mir die gekauft habe für die arbeit war

279
00:25:54,020 --> 00:26:01,100
Dass die keine zumindest dachte ich das zum damaligen zeitpunkt so dass die keine irgendwie großartige software sonst irgendwas braucht

280
00:26:01,100 --> 00:26:08,620
Und ich wollte nichts mehr für makros und sonst was also der unterschied also muss ja also der grund warum ich daheim die hab

281
00:26:09,100 --> 00:26:09,860
und

282
00:26:09,860 --> 00:26:11,460
eine ducky one

283
00:26:11,460 --> 00:26:15,980
Auf der arbeit beziehungsweise die zwei unterschied tastaturen warum ich nicht zweimal eine ducky one habe ist

284
00:26:16,180 --> 00:26:20,140
dass ich daheim gerne was hat mit makros und auf der arbeit will ich nichts mit makros haben

285
00:26:20,220 --> 00:26:23,580
Weil das ist unterliegungs mit custom software für tastaturen und so eh so ein ding

286
00:26:24,460 --> 00:26:30,500
Bis ich irgendwann festgestellt habe das wollte ich jetzt mal hier lobend lobend erwähnen dass die ducky one

287
00:26:31,100 --> 00:26:37,180
Tatsächlich makro funktionalität hat ohne software die tastatur hat anscheinend ein microcontroller drin

288
00:26:37,620 --> 00:26:40,100
Mit der man makros mit dem man makros programmieren kann

289
00:26:40,980 --> 00:26:48,220
Ja custom treiber sind immer so ein bisschen problematisch weil

290
00:26:49,220 --> 00:26:56,620
Je nachdem wie die software funktioniert wenn die auf betriebssystemebene erst funktioniert dann funktionieren einige sachen nicht zum beispiel

291
00:26:57,540 --> 00:27:04,780
Wenn ich in vm war bin und du willst jetzt mit nehmen wir mal auto hotkey nehmen wir auto hotkey auto hotkey ist so mit das

292
00:27:04,780 --> 00:27:06,780
bekannteste was es so gibt für für

293
00:27:08,780 --> 00:27:14,380
Tastatur input faken wenn ich hier in vm war drinne bin und vm hat meine maus geklebt

294
00:27:14,780 --> 00:27:20,220
Und ich hätte habe jetzt ein auto hotkey laufen im hintergrund unter windows was sagen wir mal

295
00:27:21,020 --> 00:27:26,940
Rausgehen möchte aus der vm dann geht das nicht weil vm war workstation so low level meine tastatur

296
00:27:27,140 --> 00:27:33,420
Da funktioniert auto hotkey nicht du kannst keine richtigen usb kommandos senden mit auto hotkey sondern du kannst halt nur

297
00:27:33,820 --> 00:27:40,580
Windows quasi sagen hier ist wohl eine tastatur gedrückt deswegen wenn man wenn man wirklich low level makros braucht für automatisierung zum beispiel

298
00:27:40,820 --> 00:27:47,980
switch aus einer vm raus und sowas dann geht das mit manchen sachen nicht das hier keine ahnung ob wie gut das

299
00:27:48,540 --> 00:27:54,740
Das ist aber wenn es eine firmware ist dann ist es höchstwahrscheinlich so dass es tatsächlich direkt von der tastatur ausgeht und dann ist gut

300
00:27:54,860 --> 00:28:00,220
So das war zumindest der grund warum ich daheim logische tastatur habe und auf der arbeit hatte ducky one skyline

301
00:28:01,220 --> 00:28:02,580
aber

302
00:28:02,580 --> 00:28:04,700
Was mir erst im nachhinein aufgefallen ist

303
00:28:05,620 --> 00:28:16,450
Die ducky one skyline hat ein microcontroller drin mit der man doch makros programmieren kann ich zeige euch mal

304
00:28:19,470 --> 00:28:21,470
Back gibt sie irgendwie von hinten

305
00:28:22,510 --> 00:28:28,790
Bild von hinten guck mal die hat hier unten nämlich so eine so einen switch man sieht das gar nicht

306
00:28:30,990 --> 00:28:39,380
Ducky one skyline manual ich zeige euch das mal haben die hier

307
00:28:40,700 --> 00:28:42,700
ein offizielles pdf

308
00:28:43,700 --> 00:28:45,700
Download

309
00:28:46,460 --> 00:28:50,470
User manual

310
00:28:50,590 --> 00:28:55,700
Jawohl

311
00:28:56,500 --> 00:28:58,500
China chinesen ding

312
00:28:59,580 --> 00:29:04,900
Ach guck mal es gibt ja sogar ducky macro das kann ich noch gar nicht das gab es damals noch nicht und weiß ich ob das meine

313
00:29:04,900 --> 00:29:06,940
Tastatur unterstützt nice sehr schön

314
00:29:07,860 --> 00:29:11,740
zumindest meine die erste ducky one skyline die hatte da unten so eine geschichte zum

315
00:29:12,420 --> 00:29:17,180
Mit so dip switchen zum makro programmieren da musstest du die tastatur umdrehen den

316
00:29:17,180 --> 00:29:22,780
Makro das micro button anmachen da konntest du was drücken und da konntest du den makro button wieder ausmachen so das war sehr sehr

317
00:29:24,380 --> 00:29:31,180
Umständlich ist es damit makros aufzuzeichnen aber das coole ist die befehle kommen dann halt auch direkt von der tastatur und sind da halt mit

318
00:29:31,180 --> 00:29:33,180
drinnen on board also

319
00:29:33,380 --> 00:29:35,380
Eigentlich gar nicht übel

320
00:29:38,020 --> 00:29:40,020
So viel zum thema tastatur

321
00:29:40,740 --> 00:29:42,740
Nämlich lange zu ausgelassen

322
00:29:44,820 --> 00:29:54,320
Nee quatsch die habe ich komplett selbst bezahlt die tastatur die kenne ich nicht

323
00:30:00,210 --> 00:30:02,490
Das ist nicht die ergonomische tastatur oder

324
00:30:03,290 --> 00:30:08,330
Also leute die ich glaube die tastatur die ich am längsten in benutzung hatte

325
00:30:09,650 --> 00:30:15,690
Damals wo es obwohl ich noch kein geld verdient habe und ich wirklich gucken musste wie ich wie ich über die runden komme so

326
00:30:16,410 --> 00:30:22,450
Taschengeld mäßig habe ich auch nicht viel gekriegt als die tastatur die ich am längsten verwendet haben war ein microsoft office

327
00:30:25,650 --> 00:30:29,730
Keyboard

328
00:30:29,770 --> 00:30:31,770
Das da

329
00:30:32,010 --> 00:30:37,050
Kennt das noch jemand hatte das zufällig auch jemand rar ist die rare

330
00:30:38,490 --> 00:30:40,490
Das ding hatte ich ewig

331
00:30:44,140 --> 00:30:49,180
Was das das ist also aus zeiten wo tastaturen versucht wurden super ergonomisch zu machen

332
00:30:49,940 --> 00:30:52,500
Das ding hatte ich ewig das hatte ich das war

333
00:30:53,220 --> 00:30:55,220
release date

334
00:30:55,980 --> 00:31:00,380
Release date das war was für sich 1998 oder so war das wann das rausgekommen ist

335
00:31:01,180 --> 00:31:04,620
Wir suchen wir suchen nicht nach release date sondern review

336
00:31:10,690 --> 00:31:17,930
Das war wie so ein altes nokia handy man findet das noch mal hier pc welt oder irgendwelche schrottzeiten haben doch bestimmt sowas

337
00:31:21,370 --> 00:31:25,190
2001

338
00:31:26,630 --> 00:31:30,550
Und man findet das geil wobei da stand doch da stand doch wie heißt das ding

339
00:31:31,910 --> 00:31:34,150
rt 9 4 5 0

340
00:31:35,910 --> 00:31:37,910
Release date

341
00:31:38,870 --> 00:31:40,870
Das findet man auch nicht mal

342
00:31:41,590 --> 00:31:44,920
fest

343
00:31:44,920 --> 00:31:46,000
chip

344
00:31:46,000 --> 00:31:48,800
Welche seiten von damals müssen den kram noch getestet haben

345
00:31:49,040 --> 00:31:54,640
War so immer das hatte ich das habe ich ewig gehabt dass das das hatte ich wirklich eben ihr müsst davon ausgehen ich hatte

346
00:31:54,640 --> 00:31:56,640
das so lang ich habe damit noch

347
00:31:57,120 --> 00:32:04,560
Cs gespielt bevor es 16 wurde ich habe damit noch cs 05 und sowas gespielt mit dem mit der taste so alt ist die ist

348
00:32:04,560 --> 00:32:09,640
die ist die tastatur also vielleicht nicht so release aber aber kurz danach und

349
00:32:10,800 --> 00:32:12,800
zeitgleich hatte ich noch eine microsoft

350
00:32:14,160 --> 00:32:16,160
Intelli mouse

351
00:32:16,960 --> 00:32:18,960
Explorer

352
00:32:19,480 --> 00:32:23,000
Nicht die nicht die die erste die allererste ja

353
00:32:24,000 --> 00:32:30,830
Die da nee ja aber in anderer farbe hatte ich die

354
00:32:31,390 --> 00:32:36,270
aber nee nee nee nee nee nee nee das war das war nicht die die sie die sah der aber

355
00:32:38,310 --> 00:32:41,310
So sah meine aus genauso exakt so

356
00:32:42,950 --> 00:32:44,870
Und

357
00:32:44,870 --> 00:32:47,670
Das war eine der ersten optischen

358
00:32:51,900 --> 00:32:54,500
ob optikel explorer ist das ding

359
00:32:58,750 --> 00:33:00,750
Ja ja

360
00:33:04,110 --> 00:33:06,470
Und damals waren optische mäuse noch richtig schrott

361
00:33:12,330 --> 00:33:19,890
Aber aber wie gesagt dass microsoft also die microsoft das microsoft office keyboard das hatte ich so lang das hatte ich bestimmt über zehn

362
00:33:19,890 --> 00:33:21,890
jahre dieses teil

363
00:33:25,470 --> 00:33:27,470
Das habe ich glaube ich erst weggeschmissen

364
00:33:29,190 --> 00:33:33,070
Nachdem ich also ich kann es ich kann es mir ungefähr zusammenreihe zusammen reimen

365
00:33:33,350 --> 00:33:38,310
Weil es gab ja mal eine zeit da habe ich viel pc gespielt und dann gab es eine zeit dann habe ich

366
00:33:38,590 --> 00:33:42,870
Total viel xbox 360 gespielt es war dann wahrscheinlich so 2005 rum

367
00:33:44,310 --> 00:33:49,310
Oder so xbox 36 ja genau irgendwie 2006 rum bis bis

368
00:33:50,630 --> 00:33:52,790
2011 12 wo ich dann auch die

369
00:33:53,310 --> 00:33:59,830
Call-of-Duty zeug im fabian und so gespielt habe so viel xbox gespielt und als ich danach wieder angefangen habe wieder viel mehr pc

370
00:33:59,830 --> 00:34:04,710
Zu spielen da habe ich die rausgeschmissen so als eine der ersten abends handlung also ich hatte das ding quasi

371
00:34:05,190 --> 00:34:07,510
10 bis 15 jahre diese tastatur

372
00:34:09,620 --> 00:34:14,820
Ich glaube das wäre mit der aktuellen tastatur gar nicht machbar wenn da schon nach einem jahr die kontrolltaste abbricht

373
00:34:16,180 --> 00:34:21,100
Na gut lange nur über tastaturen jetzt gelabert gucken wir uns mal jetzt was das eigentliche an was im titel steht

374
00:34:27,470 --> 00:34:29,830
Aliexpress tastatur das auch mutig

375
00:34:35,020 --> 00:34:41,460
Ja so ist das halt chat gab es schon mal einen stream wo wir die ersten 45 minuten irgendwas sinnvolles gemacht haben

376
00:34:42,580 --> 00:34:48,410
So habe ich die taste habe ich habe ich die poemme neu gestartet

377
00:34:51,280 --> 00:34:53,280
Ich glaube ich glaube schon

378
00:34:54,080 --> 00:34:57,160
Chat ja doch doch doch ich glaube

379
00:34:58,320 --> 00:35:01,640
Egal ich dachte doch ich glaube ich habe neu gestartet ich starte die noch mal neu

380
00:35:03,600 --> 00:35:05,600
Wieder mal c++ nicht immer bloß auf

381
00:35:06,600 --> 00:35:08,960
Fernseht vermeiden lässt gibt es hier nichts c++

382
00:35:14,140 --> 00:35:17,820
übrigens seitdem ich das so eingestellt habe dass ich

383
00:35:18,220 --> 00:35:24,020
Einfach nur noch start x eintippen muss ich frage mich warum gibt es leute die noch display manager und sowas verwenden

384
00:35:24,300 --> 00:35:27,700
Einfach auf der kommandozeile einloggen ein kommando ausführen und das

385
00:35:28,140 --> 00:35:32,540
Der desktop startet wozu braucht man display manager mit irgendwelchen fancy login

386
00:35:33,140 --> 00:35:35,140
alles blutet leute

387
00:35:35,940 --> 00:35:37,220
blutet

388
00:35:37,220 --> 00:35:43,140
arts by the way nicht blutet

389
00:35:44,820 --> 00:35:47,260
By the way i use arts by the way

390
00:35:53,400 --> 00:35:54,680
gut

391
00:35:54,680 --> 00:35:59,960
Vermutlich aber wir updaten den ganzen klempel mal gibt neue rider version pie charm professional

392
00:36:00,960 --> 00:36:08,080
Aus welchem grund habe ich pie charm professional installiert es ist jetzt nicht so als würde ich so viel python zeug machen

393
00:36:09,760 --> 00:36:15,000
Ach doch ich weiß wofür wir das installiert haben hier für das für das plugin hier oben

394
00:36:16,320 --> 00:36:23,090
Für den für das timer plugin was wir gebaut haben das haben wir ja in python gemacht

395
00:36:24,890 --> 00:36:31,290
Und natürlich haben wir dann auch gleich pie charm professional installiert so als professional hecker man

396
00:36:32,730 --> 00:36:34,730
Professional kann ich installieren weil

397
00:36:34,770 --> 00:36:38,290
Ich habe irgendwann mal so ein old desktop pack von jetbrains geholt

398
00:36:38,730 --> 00:36:44,650
Dementsprechend kann ich jetzt auch pass mal auf ich kann nicht einfach nur intelligent community edition installieren ich kann sogar

399
00:36:45,450 --> 00:36:46,370
intelligent

400
00:36:46,370 --> 00:36:48,370
ultimate installieren

401
00:36:49,890 --> 00:36:51,890
Was ist eigentlich der unterschied dazwischen

402
00:36:56,400 --> 00:36:59,600
Ultimate versus community gucken wir als haben wir uns schon mal angeguckt

403
00:37:01,560 --> 00:37:03,560
Aber ich habe schon wieder vergessen

404
00:37:04,560 --> 00:37:13,790
Okay package updates im hintergrund sind ein wenig laggy kotlin geht in beiden

405
00:37:15,150 --> 00:37:16,630
ultimate

406
00:37:16,630 --> 00:37:17,950
kann auch

407
00:37:17,950 --> 00:37:19,430
ruby

408
00:37:19,430 --> 00:37:20,430
ultimate

409
00:37:20,430 --> 00:37:22,430
rust

410
00:37:22,470 --> 00:37:24,470
Eigentlich brauche ich das nicht

411
00:37:26,730 --> 00:37:33,650
Übrigens chat wir müssen demnächst wieder ein bisschen frontendentwicklung machen und zwar ich habe mich jetzt ich habe mich jetzt endgültig dazu entschieden

412
00:37:33,970 --> 00:37:36,490
Ich werde den fiat champ etwas überarbeiten

413
00:37:37,490 --> 00:37:40,890
Alter wie viele wie viele comments hat das bitteschön

414
00:37:41,890 --> 00:37:51,330
Was irgendjemand offert mir 50 dollar wait a minute was ist da los das habe ich gar nicht gelesen

415
00:37:52,410 --> 00:38:04,220
get rude

416
00:38:04,220 --> 00:38:11,820
Oh shit was hier los

417
00:38:12,260 --> 00:38:32,410
Das ist richtig ich habe es nie mit dem alfa romeo getestet

418
00:38:33,450 --> 00:38:38,230
Oh okay

419
00:38:38,550 --> 00:38:40,870
Ja also was ich jetzt weil ich jetzt sagen wollte

420
00:38:40,990 --> 00:38:46,870
Ich habe mich jetzt dazu entschieden ich werde das ding mal überarbeiten weil ich höchstwahrscheinlich selbst demnächst probleme mit der app

421
00:38:46,870 --> 00:38:53,590
Also ist eines der gründe und es so viele coole sachen gibt immer noch einbauen können könnte und einbauen kann die auch wirklich was bringen

422
00:38:53,590 --> 00:38:58,310
Und man das grundsätzlich auch mal ein bisschen überarbeiten muss aus den aus den sachen die ich jetzt gelernt habe

423
00:38:58,870 --> 00:39:02,950
Und eines der eines der wünsche die user immer geäußert haben ist

424
00:39:03,870 --> 00:39:07,390
Sie wollen das auch stand alone benutzen können eigentlich rewrite in russland

425
00:39:07,390 --> 00:39:10,830
Die wollen das auch stand alone benutzen können und da habe ich mir überlegt ich mache folgendes

426
00:39:11,390 --> 00:39:15,950
Nachdem ich probleme habe wenn ich das einbauen möchte dass es mehrere autos

427
00:39:16,430 --> 00:39:20,550
Gleichzeitig von mehreren herstellern unterstützt weil aktuell unterstützt die app zwar

428
00:39:21,270 --> 00:39:23,270
Fiat jeep dodge

429
00:39:24,150 --> 00:39:29,150
Ram truck dinger und und alfa romeo und so theoretisch zumindest

430
00:39:30,230 --> 00:39:34,270
Ist das problem ist das problem dass man die app nicht einbauen kann

431
00:39:34,390 --> 00:39:36,390
Theoretisch zumindest

432
00:39:36,390 --> 00:39:43,110
Ist das problem wenn du zwei accounts hinzufügen willst weil du autos von zwei unterschiedlichen hersteller zum beispiel irgend so ein ami

433
00:39:43,590 --> 00:39:49,670
Herkommt und sagt hey er hat so einen fetten ram truck und noch einen kleinen fiat dann geht das nicht zusammen und du kannst du

434
00:39:49,670 --> 00:39:56,470
Kannst du das addon nicht doppelt installieren du kannst zwar mehrere autos bei fiat haben aber du kannst nicht zwei autos hier gleichzeitig haben das

435
00:39:56,470 --> 00:40:00,430
Ist eigentlich bescheuerte limitierung die daran liegt dass ich ursprünglich daran gedacht habe dass es ja

436
00:40:01,030 --> 00:40:05,550
Möglich sein kann dass jemanden fiat und jeep hat zum beispiel und das mit der gleichen app machen wird

437
00:40:05,870 --> 00:40:13,270
Es gibt ein paar sachen die man da grundlegend umbauen muss und die konfiguration über home assistant funktioniert auch nicht richtig

438
00:40:13,950 --> 00:40:15,870
in dem fall

439
00:40:15,870 --> 00:40:20,390
Deswegen habe ich mir überlegt wir bauen einfach ein kleines webinterface zum konfigurieren ein

440
00:40:21,110 --> 00:40:25,310
Nein, wir rewriten das nicht in rast leute wie kommen wir darauf warum

441
00:40:25,910 --> 00:40:29,830
Wenn ich nie fertig werden will dann würde ich das in rast rewriten

442
00:40:32,440 --> 00:40:34,440
blazer

443
00:40:35,320 --> 00:40:37,320
Welt

444
00:40:37,360 --> 00:40:39,600
Einfach mal ein spontaner rast rewrite

445
00:40:45,340 --> 00:40:48,180
Chat wir rewriten das nicht in rast

446
00:40:49,820 --> 00:40:52,860
Da können die krustentiere hier noch so viel schreiben

447
00:40:55,400 --> 00:41:00,120
Oder das frontend in rast webassembly ja klar weil ich das auch komplett

448
00:41:01,520 --> 00:41:03,520
Unmaintainable für mich machen will das webfrontend

449
00:41:04,520 --> 00:41:12,480
Warum warum nicht gleich warum nicht gleich das frontend in .NET MAUI in webassembly übersetzt und über

450
00:41:14,400 --> 00:41:23,370
Websockets angebunden oder war irgendwie ganz abgedreht das zeug. Die rewriten das gar nicht

451
00:41:36,050 --> 00:41:39,050
Ich werde von mod gesabotiert guckt euch das an

452
00:41:47,530 --> 00:41:49,530
Wuppdi dankeschön für den sub

453
00:41:54,420 --> 00:41:57,940
Chat es ist vollkommen egal wie oft ihr abstimmt rewrite in rast

454
00:41:59,980 --> 00:42:02,900
Ich werde es im leben nicht in rast rewriten

455
00:42:04,500 --> 00:42:08,460
Ich finde das auch gut wenn ihr das rewritet ich rewrite es nämlich nicht

456
00:42:09,260 --> 00:42:14,930
Ihr könnt rewriten was ihr lustig seid

457
00:42:17,250 --> 00:42:19,890
Rewrite in Haskell natürlich das kommt als nächstes

458
00:42:21,130 --> 00:42:23,130
Mod mod mod giz

459
00:42:24,130 --> 00:42:28,370
Können ja auch wir können eine umfrage umfrage machen rewrite in kobol

460
00:42:29,810 --> 00:42:36,730
Wobei ich gehe mal davon aus selbst wenn ich das wirklich machen möchte ich glaube mit kobol wäre es gar nicht wirklich

461
00:42:39,500 --> 00:42:40,980
krass champ

462
00:42:40,980 --> 00:42:42,980
hört mal bloß auf

463
00:42:47,950 --> 00:42:49,950
Meinung zu nehmen habe ich noch nie benutzt

464
00:42:49,950 --> 00:42:56,430
Ja und da bauen wir dann webfrontend zum konfigurieren dann kann man das nämlich stand alone verwenden und auch so besser konfigurieren gut

465
00:42:56,710 --> 00:43:00,470
Aber erste 45 minuten um jetzt können wir mal zur eigentlichen sache des streams kommen

466
00:43:01,830 --> 00:43:06,910
Wisst ihr was ich installiere einfach nur die community was zu was hier los mit der oberfläche

467
00:43:08,710 --> 00:43:10,710
Habt ihr es gerade gesehen

468
00:43:11,070 --> 00:43:14,110
Auch kommt mal das ding kackt voll ab wenn man über den install button geht

469
00:43:21,420 --> 00:43:34,750
Aber auch nur wenn man eine weile drauf bleibt wenn man schnell drüber geht nicht

470
00:43:43,550 --> 00:43:45,550
so let's go

471
00:43:46,070 --> 00:43:53,510
Ich muss euch ehrlich sagen ich habe absolut gar keine ahnung von kotlin nein habe ich nicht war die jetzt

472
00:43:54,510 --> 00:43:58,510
Das das muss ich mir das muss ich mir aufhören ich muss mir später angucken oder vielleicht können wir es auch noch

473
00:43:59,430 --> 00:44:01,430
Vielleicht können wir es auch noch im stream gucken

474
00:44:02,590 --> 00:44:04,590
Mal schauen mal google

475
00:44:05,230 --> 00:44:19,040
Die community edition ist für geringverdiener

476
00:44:20,000 --> 00:44:23,640
Du meinst du meinst ich muss jetzt ich muss jetzt den den

477
00:44:24,520 --> 00:44:29,880
Aus dem weg geringverdiener move machen und und die wieder an installen

478
00:44:33,040 --> 00:44:35,040
Ultimate okay

479
00:44:36,200 --> 00:44:40,760
Ihr müsst einfach in meine gruppe kommen leute dann könnt ihr euch auch professionelle ideas leisten

480
00:44:42,400 --> 00:44:45,360
So lasst mal was wenn man anfangen will

481
00:44:46,360 --> 00:44:53,840
Sachen zu automatisieren von zum beispiel in sachen in vm plus eine anderen software software verteilung software

482
00:44:54,480 --> 00:44:56,480
Was benutzt man dann am besten

483
00:44:57,480 --> 00:45:00,840
Schwarz 33 ich habe keine ahnung was du meinst

484
00:45:02,880 --> 00:45:04,880
Was genau willst du automatisieren

485
00:45:06,760 --> 00:45:12,640
Ich werde echt nicht schlau draus wahrscheinlich kann ich dir sogar was zu raten aber erst mal muss ich verstehen was du machen willst

486
00:45:13,640 --> 00:45:15,640
Aktuell bin ich eher so im

487
00:45:17,000 --> 00:45:19,000
Dem modus ich verstehe es nicht

488
00:45:21,100 --> 00:45:28,380
Es gibt sehr viele sachen um andere sachen zu automatisieren aber es die fragen welche sachen gemeint sind

489
00:45:29,060 --> 00:45:31,980
So ultimate edition installiert jetzt ist alles gut

490
00:45:33,060 --> 00:45:34,700
intelligent

491
00:45:34,700 --> 00:45:38,140
ultimate

492
00:45:38,220 --> 00:45:44,460
Potential zeug das wäre eine möglichkeit aber es kommt darauf an was für sachen es sind wenn du das unter windows automatisieren willst

493
00:45:44,660 --> 00:45:51,380
Ich meine ich sage nicht dass es nicht geht mit ansonnenpuppet schön ist es auf jeden fall nicht aber willst du irgendwelche ui sachen oder browser

494
00:45:52,380 --> 00:45:55,980
Webseiten oder so automatisieren dann ist das schon mal komplett falschen tools dafür

495
00:45:59,520 --> 00:46:01,520
Das erinnert mich an einen punkt früher

496
00:46:03,360 --> 00:46:05,360
Noch während meiner ausbildung

497
00:46:05,920 --> 00:46:13,640
Oder was heißt noch eigentlich hauptsächlich während meiner ausbildung da wurden die azubis immer verdonnert bei dailies protokollen zu schreiben

498
00:46:13,640 --> 00:46:19,740
Ja das war die zeit wo man auch schon angefangen hat versucht versucht agil zu sein aber dann so

499
00:46:20,480 --> 00:46:27,960
Agilitätskiller gemacht wie protokolle fürs daily schreiben richtig hängen geblieben und die azubis mussten immer protokolle fürs daily schreiben damals und ich war

500
00:46:27,960 --> 00:46:30,640
Damals auch azubi also musste ich öfters protokoll fürs daily schreiben

501
00:46:31,480 --> 00:46:37,600
Und wir hatten einen im team damals der hatte nie bock darauf im daily ordentlich was zu erzählen

502
00:46:38,640 --> 00:46:42,640
Aus meiner sicht heute vollkommen verständlich heute wäre ich wahrscheinlich derjenige gewesen

503
00:46:43,000 --> 00:46:49,400
Der auf diesen kram keinen bock hätte und immer wenn der gefragt wurde was hast du gemacht dann hat er gesagt dinge

504
00:46:50,240 --> 00:46:54,600
Und wenn man ihn dann weiter gefragt hat ja erzähle mal ein bisschen konkret hat gesagt sachen

505
00:46:55,160 --> 00:46:57,160
Und danach hat er gesagt zeug

506
00:46:57,560 --> 00:47:02,420
Du hast aus dem nicht rausgeklickt was er gemacht hat und was er machen will

507
00:47:03,300 --> 00:47:05,300
und irgendwann und jetzt

508
00:47:06,940 --> 00:47:11,100
Story aus meiner azubi zeit ja und irgendwann habe ich mir gedacht weißt du was

509
00:47:11,380 --> 00:47:16,980
Wenn der kerl einfach zu 90 prozent nur das so erzählt schreibst du es einfach ins protokoll rein

510
00:47:17,140 --> 00:47:20,420
Und dann habe ich bei dem ein paar tage lang ins protokoll reingeschrieben

511
00:47:21,460 --> 00:47:23,740
hat gemacht sachen

512
00:47:25,140 --> 00:47:28,700
Und irgendwann hatte ich doch tatsächlich hat irgendjemand dieses protokoll gelesen

513
00:47:29,700 --> 00:47:33,620
Es anscheinend haben da wirklich unsere damaligen chefs sogar die protokolle

514
00:47:34,220 --> 00:47:38,380
überwacht und reingeguckt und irgendwann habe ich dann eine doofe nachricht bekommen über

515
00:47:39,380 --> 00:47:49,860
Kennt das noch jemand hatte hatte jemand mal die ehre damit

516
00:47:54,020 --> 00:48:05,020
Ich frage nur ob jemand die pains champigkeit dieser software kennt habe ich die nachricht bekommen über den lotus notes chat

517
00:48:06,860 --> 00:48:11,700
Übrigens wer ist eigentlich auf die dumme idee gekommen die personalabteilung human resources umzubenennen

518
00:48:12,300 --> 00:48:18,420
Es ist ja schön und gut dass arbeitgeber das so sehen und wenn ich arbeitgeber wäre würde ich es wahrscheinlich auch so sehen aber ich

519
00:48:18,420 --> 00:48:20,660
Finde diesen namen einfach nur maximal unglücklich

520
00:48:21,820 --> 00:48:23,820
so zumindest

521
00:48:23,860 --> 00:48:28,220
habe ich eine nachricht bekommen über über lotus notes same time

522
00:48:28,700 --> 00:48:32,660
warum in dem protokoll nichts ordentliches drin steht für den da habe ich ihm halt gesagt

523
00:48:33,740 --> 00:48:35,580
damals habe ich gesagt ja gut

524
00:48:35,580 --> 00:48:39,020
Ich frage den jedes mal was er macht und der antwortet immer nur mit sachen

525
00:48:39,140 --> 00:48:44,060
Habe gemeint ja aber das können wir da nicht reinschreiben weil das würden ja alle sehen

526
00:48:45,060 --> 00:48:50,540
Aber der kann ich doch nichts machen er sagt halt nix ich kann ihm ja schlecht jetzt

527
00:48:51,700 --> 00:48:54,180
Irgendwie sagen ich werfe dich aus dem fenster

528
00:48:56,180 --> 00:48:59,380
Was soll ich machen wenn er einfach nicht sagen will auf dreimal nachfragen

529
00:49:01,100 --> 00:49:07,380
Da hatte die andere seite auch keine so wirkliche antwort drauf hat er nur zu mir gesagt so nach dem motto ja guckt doch beim nächsten

530
00:49:07,380 --> 00:49:09,380
protokoll dass wenn er was anderes reinschreibt

531
00:49:10,060 --> 00:49:16,540
Und das habe ich dem dann erzählt demjenigen der das der hier immer sachen und dinge gesagt hat und daraufhin hat er gesorgt auch

532
00:49:17,220 --> 00:49:23,660
Ich hatte keinen bock mehr auf den laden ich soll weiterhin sachen rein schreiben habe ich weiter sachen reingeschrieben und danach hat sich nie wieder

533
00:49:23,660 --> 00:49:28,660
Einer beschwert man würde eigentlich davon ausgehen dass sie sich die protokolle besonders konkret angucken

534
00:49:29,100 --> 00:49:31,420
Wenn du schon angerufen würdest dazu

535
00:49:34,660 --> 00:49:37,140
Wir haben dann einfach weiterhin sachen reingeschrieben

536
00:49:38,380 --> 00:49:45,420
Es kann natürlich auch sein dass sie sich wirklich dann bei ihm gemeldet haben und nicht mehr bei mir weil ich meine ich war

537
00:49:45,420 --> 00:49:47,340
Azubi und protokollschreiber

538
00:49:47,340 --> 00:49:50,060
Was soll ich da dran ändern wenn der typ ja nix sagt ja

539
00:50:01,070 --> 00:50:03,070
Sachen machen sind immer effizient

540
00:50:03,710 --> 00:50:13,200
Ach hier okay sorry für die undeutlichkeit dem macht nichts muss das ist nicht schlimm sage ich meinen azubis auch immer das ist nicht wild

541
00:50:13,720 --> 00:50:19,800
Wenn er wenn wenn wenn man es nicht versteht wichtig ist nur das was auf nachfrage hinwegs mal gescheit erklären kann dann das ganze

542
00:50:19,800 --> 00:50:27,120
Klar stellt er kann erwartet keiner dass man von anfang an alle perfekte sachen für alles die die passenden wörter und buzzwords kennt

543
00:50:27,360 --> 00:50:33,480
Bei the way ihr wisst ja cloud anbieter sind keine cloud anbieter mehr sondern hyperscaler also wenn ihr cool sein wollt sagt ihr demnächst

544
00:50:33,480 --> 00:50:39,920
So noch hyperscaler sorry für die undeutlichkeit also zum beispiel neue vm snapshots erstellen und gleichzeitig updates von software draufladen

545
00:50:40,120 --> 00:50:42,440
bisher muss man das ganze von hat man ach so ja

546
00:50:43,560 --> 00:50:49,840
Das würde ich ehrlich gesagt gar nicht so sehr auf vm ebene sehen sondern eine vm ist ja ein virtuell

547
00:50:50,280 --> 00:50:56,960
Virtualisiertes system ob das system da drin jetzt virtualisiert ist oder auf echte hardware läuft ist es ist dem system ja innen drin

548
00:50:56,960 --> 00:51:01,120
Relativ egal also das heißt wenn du dich um paket updates und so kümmern willst

549
00:51:01,240 --> 00:51:05,480
Dann muss das in dem system in drinnen passieren das hat ja nichts mit einer vm lösung zu tun

550
00:51:06,000 --> 00:51:08,000
snapshots erstellen das sieht schon wieder anders aus

551
00:51:08,400 --> 00:51:13,640
snapshots erstellen wenn du vm verwendest und in kombination also esx und

552
00:51:13,720 --> 00:51:19,520
Wie heißt das ganze zeug wie es vier und was es nicht alles gibt da gibt es garantiert lösungen damit kenne ich mich aber nicht

553
00:51:19,520 --> 00:51:27,160
Aus weil ich das nie administrieren musste und auch nie bock drauf hatte wie man automatisch snapshots und backups von vm erstellt gibt es garantiert

554
00:51:27,160 --> 00:51:30,920
Ich kenne ich kenne vm zum beispiel aber ich gehe davon aus dass so sachen wie

555
00:51:31,760 --> 00:51:37,440
Automatisierte snapshots per skript und sowas easy möglich sind mit wie es vier out of the box

556
00:51:37,440 --> 00:51:42,920
Chat gibt ihr wisst vielleicht besser vielleicht jemand von euch vm wer atmen am start oder jemand der das schon gemacht hat

557
00:51:44,160 --> 00:51:45,520
software

558
00:51:45,520 --> 00:51:50,400
Updates da musst du dich vom betriebssystem seite aus drum kümmern da hat die vm ja nichts mitzutun

559
00:51:50,680 --> 00:51:54,800
Ich meine vm wer kann ja schlecht wissen wie du betriebssystem updates machst für alle

560
00:51:55,400 --> 00:52:00,880
150 verschiedene betriebssysteme die du theoretisch in der vm laufen lassen könntest du könntest am mac drinnen laufen haben

561
00:52:01,560 --> 00:52:03,560
Ja, könntest macht kaum einer

562
00:52:04,000 --> 00:52:10,000
linux windows oder meinetwegen dos ja woher soll deine vm wissen deine virtualisierung software

563
00:52:10,000 --> 00:52:16,560
Wie du in den jeweiligen betriebssystemen gescheit updates machst das heißt du brauchst zwei sachen du brauchst einmal eine backup backup

564
00:52:17,080 --> 00:52:23,440
Snapshot lösung oder halt einfach nur ein paar kronen skripts für vm wer sowas geht garantiert vm wer

565
00:52:24,080 --> 00:52:30,240
Out of the box für automatische snapshots erstellen gucke aber dass deine snapshots ordentlich rotiert sonst wird

566
00:52:30,360 --> 00:52:36,520
Ratzfatz ziemlich viel gigabyte verbraten und hier brauchst du irgendwas für das jeweilige betriebssystem was du abdecken willst zum beispiel

567
00:52:37,000 --> 00:52:41,240
Wenn du viele linux betriebssysteme hast dann bietet sich sowas wie ansible an

568
00:52:42,520 --> 00:52:48,080
Oder auch puppet oder chef oder salt stack aber ich persönlich würde sagen ansible

569
00:52:49,000 --> 00:52:54,280
Du kannst aber auch wenn es nur betriebssystem updates sind andere lösungen verwenden kannst zum beispiel

570
00:52:55,160 --> 00:53:02,040
Wenn du nicht viele kisten hast kannst du den skript bauen was sich ein lock psh und update macht wobei ich das tatsächlich dann

571
00:53:03,040 --> 00:53:09,920
Ansible vorziehen würde du kannst auch gucken dass du deine systeme wenn sie alle rettet sind in sowas wie satellite reinsteckt oder

572
00:53:10,520 --> 00:53:12,520
spacewalk hieß das früher

573
00:53:12,560 --> 00:53:14,240
rettet

574
00:53:14,240 --> 00:53:16,240
spacewalk

575
00:53:16,360 --> 00:53:25,820
Ist das noch spacewalk has been discontinued

576
00:53:26,900 --> 00:53:28,900
Heute nennt sich noch satellite

577
00:53:29,260 --> 00:53:31,260
Wir hatten mal bei uns

578
00:53:31,500 --> 00:53:38,340
Jemand der der dokumentation geschrieben hat und der konnte das wort spacewalk das wort spacewalk nicht aussprechen

579
00:53:40,380 --> 00:53:42,380
Der hat immer gesagt spacewalk

580
00:53:43,860 --> 00:53:49,580
Da kann ich mich heute noch dran erinnern wir haben immer richtig gequatscht es ist jetzt ja nicht so als hätte ich die geilste

581
00:53:49,580 --> 00:53:53,740
Englisch aussprache überhaupt aber ich war es ernsthaft spacewalk

582
00:53:54,540 --> 00:53:56,540
anstatt spacewalk

583
00:53:57,060 --> 00:54:02,900
Der Typ war geil, der hat es auch immer so geil ausgesprochen der spacewalk

584
00:54:05,740 --> 00:54:11,740
Mittlerweile nach einer weile hieß das bei uns umgangssprachlich auch bei allen leuten spacewalk

585
00:54:15,580 --> 00:54:17,580
Ein bisschen so wie manche leute

586
00:54:17,980 --> 00:54:23,020
Gyra besonders geil aussprechen müssen wir haben dazu immer noch am ende immer noch spacewalk gesagt

587
00:54:24,020 --> 00:54:26,020
Spacewalk

588
00:54:26,260 --> 00:54:32,740
Gut also du brauchst irgendeine software halt für deinem betriebssystem zu managen und bei der gelegenheit wenn du sowas wie ansible verwendest

589
00:54:32,940 --> 00:54:34,940
bietet sich vielleicht auch an

590
00:54:35,140 --> 00:54:41,660
Die sachen die du customized hast an einem linux also sprich welche packages du installiert hast verzeichnisse eingelegt

591
00:54:43,500 --> 00:54:47,660
Dienste gestartet und gestoppt und sowas das vielleicht auch noch gleich in ansible reinzubringen

592
00:54:48,660 --> 00:54:54,380
Dann hast du nämlich beim nächsten aufbau keine probleme das system wieder herzustellen

593
00:54:56,500 --> 00:55:01,140
Also die zwei sachen du brauchst einmal eine backup snapshot lösung oder einfach nur ein paar

594
00:55:01,460 --> 00:55:04,140
scripts für vmware, vsphere, was auch immer ihr da verwendet

595
00:55:04,980 --> 00:55:08,580
und die möglichkeit software updates zu machen über ansible zum beispiel

596
00:55:09,420 --> 00:55:11,340
und wenn es windows ist

597
00:55:11,340 --> 00:55:15,940
Auf dem ihr unterwegs seid habe ich keine ahnung von weiß ich nicht was es da gutes gibt um windows zu updaten

598
00:55:18,750 --> 00:55:23,150
Komme jetzt ins letzte lehrjahr hast ja bald geschafft viel spaß bei der prüfung

599
00:55:24,110 --> 00:55:38,100
Ja, ja mir ist schon klar warum das so heißt ich finde das aber nur maximal unglücklich dass du das so zu nennen

600
00:55:43,080 --> 00:55:45,080
Uyuni das kenne ich nicht was ist Uyuni?

601
00:55:46,000 --> 00:55:51,740
github

602
00:55:51,860 --> 00:55:53,860
Ah! Fork vom spacewalk

603
00:55:54,780 --> 00:56:01,300
Spacewalk fork habe ich noch nie gehört obs

604
00:56:02,380 --> 00:56:04,380
Ach ne open sooze build

605
00:56:05,980 --> 00:56:10,700
Warum nennen die den kram obs? OBS ist für mich das hier und nicht open sooze build

606
00:56:13,650 --> 00:56:16,290
vor allem open sooze bi- ob- ob- hä?

607
00:56:18,250 --> 00:56:19,770
Oben?

608
00:56:19,770 --> 00:56:21,770
Oben sooze

609
00:56:24,470 --> 00:56:30,590
Oben sooze build und dddd ist dann auch desk driven design oder was?

610
00:56:32,110 --> 00:56:40,320
Von windows software verteilung habe ich so keinen plan da wisst ihr wahrscheinlich im chat mehr

611
00:56:41,320 --> 00:56:52,840
Und umso mehr prime subs umso mehr IQ umso mehr wissen noch was wie schreibt man ansible so

612
00:56:55,340 --> 00:56:57,140
Ansible

613
00:56:57,140 --> 00:57:05,020
Also kann ich dir aber hauptsächlich empfehlen wenn du linux basierte systeme hast wie gut ansible und windows in zusammenhang keine ahnung ansible

614
00:57:06,220 --> 00:57:08,500
Wie gut funktioniert ansible mit windows?

615
00:57:12,200 --> 00:57:14,200
Nichts was man machen will wahrscheinlich

616
00:57:17,980 --> 00:57:32,220
Ach open sooze build system okay ne

617
00:57:33,980 --> 00:57:38,100
Ne also ich wollte ich war gerade kurz dafür zu sagen

618
00:57:38,780 --> 00:57:44,500
Für 50 prime subs überlege ich mir mal die sachen in rust zu rewriten aber das mache ich nicht also kommt nicht auf die idee

619
00:57:44,500 --> 00:57:52,900
Jetzt das vielleicht wirklich zu machen erstens könnt ihr wahrscheinlich eure kohle besser gebrauchen und zweitens ich habe absolut keinen bock den kram in rust zu rewriten

620
00:57:52,900 --> 00:57:58,020
Weil es auch so sinnlos ist weil ich in zukunft auch nicht maintain möchte in rust

621
00:58:05,130 --> 00:58:12,090
Also ich habe mal puppet und windows versucht das war auch komplett für den arsch und ich glaube puppet supportet offiziell sogar windows

622
00:58:13,090 --> 00:58:17,740
ja aber

623
00:58:17,940 --> 00:58:19,940
Das ist nichts was ich empfehlen kann

624
00:58:20,500 --> 00:58:22,780
In rust maintains ich das von alleine

625
00:58:23,860 --> 00:58:27,660
Ja vielleicht vielleicht wenn die mods das dann maintain

626
00:58:28,380 --> 00:58:30,180
aber leute

627
00:58:30,180 --> 00:58:32,460
leute wenn wenn rewrite in rust ja

628
00:58:44,190 --> 00:58:45,830
kenne ich nicht

629
00:58:45,830 --> 00:58:51,430
Ist das ist das für windows oder was was soll das sein?

630
00:58:56,440 --> 00:59:00,580
Aha okay

631
00:59:00,580 --> 00:59:02,580
Was bin ich hier sehend

632
00:59:04,820 --> 00:59:08,710
Avs laptop

633
00:59:11,110 --> 00:59:14,030
Okay das ist das ist eher was für remote support

634
00:59:14,910 --> 00:59:21,850
Na gut aber leute wenn wenn rust rewrite dann dann nicht rust sondern

635
00:59:22,490 --> 00:59:24,130
kreplang oder

636
00:59:24,130 --> 00:59:26,810
chat rust rewrite oder kreplang rewrite

637
00:59:28,010 --> 00:59:31,890
Was was würden die die coolen krustentiere unter euch machen?

638
00:59:32,730 --> 00:59:49,800
Weil das ist ja ein rust pork

639
00:59:53,450 --> 00:59:56,010
Ich sehe schon das wird nichts mit dem rust rewrite

640
01:00:05,960 --> 01:00:07,880
gut

641
01:00:07,880 --> 01:00:10,480
So jetzt habe ich eine stunde im kreis gelabert

642
01:00:11,480 --> 01:00:13,480
Jetzt müssen wir uns das langsam

643
01:00:15,040 --> 01:00:22,720
Ich ich mag das font rendering in diesen java hilfe dialogen das sieht immer so schön nach 1985 aus

644
01:00:24,080 --> 01:00:27,880
Falls man damals schon java ui machen konnte ich glaube das war altes java nicht

645
01:00:46,340 --> 01:00:48,340
Ich muss noch eine sache sagen

646
01:00:48,620 --> 01:00:55,900
Weil ich doch eben erzählt habe aus zeiten wo ich noch asubi war protokoll geschrieben habe und bei dir jemand gefragt danach windows

647
01:00:56,260 --> 01:01:02,980
Automatisierung und ich habe ich habe gesagt ich kenne mich mit windows automatisierung nicht aus doch ich kenne eine sache noch aus meiner ausbildung

648
01:01:03,660 --> 01:01:05,260
zum thema windows

649
01:01:05,260 --> 01:01:11,580
Automatisierung und das hat mich wieder darin bestärkt dass ich nichts administratives mit windows zu tun haben will hatte jemand von euch schon mal

650
01:01:11,580 --> 01:01:17,700
Ich weiß gar nicht ob sie software noch gibt ich suche jetzt mal einfach danach hat jemand von euch schon mal mit einer software namens

651
01:01:19,140 --> 01:01:20,740
Altyris

652
01:01:20,740 --> 01:01:22,740
Was zu tun gibt es das überhaupt noch

653
01:01:25,990 --> 01:01:27,590
Altyris

654
01:01:28,310 --> 01:01:29,990
Softwaremanagement oder sowas

655
01:01:29,990 --> 01:01:37,080
Ja, so ungefähr sah das aus genau

656
01:01:39,570 --> 01:01:47,050
Da konnte man dann so start scripts boot scripts für windows hinterlegen und sowas das war ganz ganz abartig

657
01:01:47,250 --> 01:01:49,250
Ich kann mich nur noch dunkel dran erinnern

658
01:01:50,690 --> 01:01:58,810
Was wir in der software gemacht machen mussten aber es war eines der ekligsten experiences die ich die ich je mit so einer management software hatte

659
01:01:59,810 --> 01:02:05,210
Und und seitdem bin ich froh nie wieder was mit windows administrativ zu tun gehabt haben

660
01:02:05,490 --> 01:02:08,530
Sie nach einer software aus die ein rast rewrite benötigt

661
01:02:10,250 --> 01:02:15,850
Bestimmt das rettet das rettet es komplett gibt es gibt es das altyris management suite

662
01:02:21,040 --> 01:02:26,760
Jeden tag werden altyris administratoren angefragt computer aufzuladen neue software zu verteilen probleme zu lösen vieles mehr

663
01:02:27,600 --> 01:02:34,970
Ja, wenn ich eine robuste management infrastruktur haben will dann nämlich so ein windows client only ding was hier auch noch

664
01:02:35,650 --> 01:02:39,930
Moment moment leute leute ist das ist das etwa der internet explorer

665
01:02:40,650 --> 01:02:44,210
Das fällt mir jetzt erst auf ist es ein tab im internet explorer

666
01:02:48,660 --> 01:02:50,820
Ist das eine silverlight anwendung

667
01:02:56,420 --> 01:02:59,060
Könnte das eine silverlight anwendung sogar noch sein

668
01:03:14,930 --> 01:03:16,930
Ja ne ne

669
01:03:17,970 --> 01:03:19,730
So nicht

670
01:03:19,730 --> 01:03:25,610
So jetzt widmen wir uns aber wirklich in der kundling geschichte also do not import no pass

671
01:03:29,670 --> 01:03:31,390
So

672
01:03:31,390 --> 01:03:37,430
Disclaimer ich habe keine ahnung von java und ich habe keine ahnung von kotlin das heißt als allererstes werden sie

673
01:03:37,430 --> 01:03:41,510
Mal ein hello world kopie also ich kann euch erzählen was wir versuchen werden zu machen und zwar

674
01:03:42,110 --> 01:03:49,550
Wir bauen eine cli app und zumindest ist es der der plan dahinter wir bauen eine cli app der über

675
01:03:50,190 --> 01:03:56,910
Http von irgendeiner wetter api das aktuelle wetter für den standort abfragt oder so was ich brauche ich brauche eine sinnlose

676
01:03:57,350 --> 01:03:59,750
Sinnlose command line anwendung um ein bisschen auszuprobieren

677
01:04:01,750 --> 01:04:06,950
Und wir gucken uns an wie man http request macht wie man kommandozeilen argumente passt wie man

678
01:04:07,390 --> 01:04:10,830
Listen macht schleifen macht vielleicht generics verwendet

679
01:04:11,910 --> 01:04:13,110
mal gucken

680
01:04:13,110 --> 01:04:16,550
new project

681
01:04:17,110 --> 01:04:20,710
Wahrscheinlich habe ich kotlin erstmal garten doch hier kommt mal kotlin no jdk

682
01:04:21,510 --> 01:04:27,630
MonkaS download jdk moment man kann das direkt in der ide downloaden das finde ich extremly pog

683
01:04:28,710 --> 01:04:34,590
das finde ich gut leute moment moment für den fall der fälle nur für den fall der fälle dass ich dass ich

684
01:04:37,950 --> 01:04:39,950
Wenn man ein snapshot

685
01:04:41,380 --> 01:04:45,860
Und bei der gelegenheit muss ich danach mal alle snapshots löschen sonst wird es ein bisschen viel

686
01:04:50,560 --> 01:04:52,560
doch was er jetzt gemacht

687
01:04:55,640 --> 01:05:02,440
Er ist halt doof wenn man kein window manager hatte kein fenster drum was ist das aktuelle jdk 20 wahrscheinlich

688
01:05:03,440 --> 01:05:05,440
Okay download

689
01:05:11,270 --> 01:05:18,830
Das ist extrem sick bei datacryp ist das auch kannst treiber für postgres man braucht treiber für postgres das ist mir neu

690
01:05:23,820 --> 01:05:26,180
Ihr habt es heute mit eurem rust rewrite oder

691
01:05:28,140 --> 01:05:30,140
Open jdk 20

692
01:05:31,780 --> 01:05:34,460
21 haben die aber nicht zum download ich glaube es für uns erstmal egal

693
01:05:35,220 --> 01:05:39,060
example code das ist gut bildsystem intelli j auch gut

694
01:05:40,060 --> 01:05:43,500
Create git brauche ich jetzt nicht untitled

695
01:05:45,780 --> 01:05:47,780
Java champ

696
01:05:48,260 --> 01:05:50,260
Create

697
01:05:50,420 --> 01:05:53,940
Das muss man den leuten bei kotlin ja bei jetbrains wirklich lassen

698
01:05:55,700 --> 01:06:01,820
So wie nennt man es schon user experience oder programmer experience

699
01:06:02,980 --> 01:06:04,980
Das kriegen die gut hin

700
01:06:05,820 --> 01:06:08,540
Suggested plugins kubernetes terraform und hcl

701
01:06:10,940 --> 01:06:14,460
Wir müssen erst mal wir müssen erst mal die schrift ein bisschen größer machen

702
01:06:16,140 --> 01:06:20,160
Und

703
01:06:21,360 --> 01:06:25,760
Ich will eigentlich die komplette schrift an umstellen wenn ich ehrlich bin vielleicht da

704
01:06:28,800 --> 01:06:37,620
Appearance general und jetbrains mono 18

705
01:06:37,740 --> 01:06:41,060
Ja das ist gut oder erkennt man eigentlich jetzt erkennt man gut was

706
01:06:42,180 --> 01:06:45,220
Programm arguments hello world okay

707
01:06:47,580 --> 01:06:49,580
Wie starte ich das jetzt

708
01:06:50,420 --> 01:06:54,020
Also ich meine so ja aber

709
01:06:59,120 --> 01:07:02,240
Programm aber wie starte ich das jetzt über cli

710
01:07:03,560 --> 01:07:05,560
Also gehen wir mal gehen wir mal hier

711
01:07:05,680 --> 01:07:08,160
Hier steht ja der aufruf wie das funktioniert guckt mal

712
01:07:08,920 --> 01:07:10,920
Alter was was zum

713
01:07:15,500 --> 01:07:17,980
Was ist das für ein ewig aufruf

714
01:07:19,020 --> 01:07:27,900
Ich brauche mal kurz den kotlin quick quick start tutorial

715
01:07:29,020 --> 01:07:31,460
Jet hat sich auf rust geeinigt ja

716
01:07:34,320 --> 01:07:36,320
schön für den chat

717
01:07:36,320 --> 01:07:38,320
Create and run an application perfekt

718
01:07:42,670 --> 01:07:49,870
Kotlin c brauchen wir kotlin c hello kati und jetbrains

719
01:07:49,910 --> 01:07:53,910
Kotlin c hello kati ok ok aber kotlin c habe ich gar nicht

720
01:07:56,890 --> 01:08:01,690
Bild wo ist der bildknopf hier ich mache das normalerweise nicht über die idee

721
01:08:03,010 --> 01:08:10,930
Ihr bild das hat mir jetzt aufgerufen zum bilden

722
01:08:12,650 --> 01:08:14,650
Und wo hat der kotlin installiert

723
01:08:17,710 --> 01:08:22,790
Mach einfach alles über die idee ok der beizeugnis java kenner dem glaube ich dass

724
01:08:23,790 --> 01:08:25,950
shift f10 ist starten

725
01:08:27,710 --> 01:08:32,430
Nee ich kann das ich will das nicht alles über die idee machen ich will ich will eine command line anwendung bauen das ist

726
01:08:33,070 --> 01:08:34,550
vergessen

727
01:08:34,550 --> 01:08:36,830
Aber man konnte doch wenn ich das richtig

728
01:08:38,150 --> 01:08:40,310
Run with parameters ok

729
01:08:42,630 --> 01:08:50,310
Moment also man hatte doch früher hier in der idee so eine sache settings edit configurations

730
01:09:10,410 --> 01:09:12,570
Ok wie heißt das ding kotlin c

731
01:09:13,570 --> 01:09:39,720
Wo hat dann das installiert das muss er doch irgendwo installiert haben ist das ist das irgendwie bild in in intelli j oder

732
01:09:40,600 --> 01:09:48,140
Ja das bild tab aber ich weiß nicht ich weiß nicht wo

733
01:09:53,860 --> 01:09:55,860
Mit rust wäre das nicht passiert

734
01:09:57,580 --> 01:10:03,140
Eben hatte ich doch hier noch einen anderen output drinne wo ist der ursprüngliche rerun bild

735
01:10:04,140 --> 01:10:06,300
Ach so das ist weil es im cache ist jetzt

736
01:10:07,300 --> 01:10:11,460
Ok da kommt jetzt einfach noch ein lehrzeichen rein und dann das bild noch mal laufen lassen

737
01:10:12,660 --> 01:10:13,940
Ja

738
01:10:13,940 --> 01:10:20,100
Also der hat kotlin kotlin jvm ausgeführt ich meine das muss ja irgendwie unter jdk liegen

739
01:10:21,300 --> 01:10:23,900
jdks open jdk bin

740
01:10:24,900 --> 01:10:27,910
ne

741
01:10:27,910 --> 01:10:32,310
geht geht schon mal gut los

742
01:10:32,710 --> 01:10:43,000
Weil irgendwo hier muss es ja liegen

743
01:10:46,150 --> 01:10:48,030
aha

744
01:10:48,030 --> 01:10:49,510
What

745
01:10:50,930 --> 01:10:52,930
Jetzt seriously ja

746
01:10:56,290 --> 01:10:59,290
Gibt es da gibt es wenigstens eingebautes cli hier

747
01:11:00,130 --> 01:11:14,810
Wieso ich das über das terminal machen will naja dass ich ich baue ja eine terminal ich baue eine terminalanwendung

748
01:11:14,810 --> 01:11:21,530
Dass ich dann sowas machen kann am ende ja keine ahnung java gem minus minus blob minus minus

749
01:11:22,010 --> 01:11:26,250
So was man kann zwar hier auch einstellen parameters aber das doch

750
01:11:28,010 --> 01:11:29,770
Ist doch nix

751
01:11:29,770 --> 01:11:35,490
na gut

752
01:11:35,490 --> 01:11:37,490
Anscheinend anscheinend müssen wir es wirklich

753
01:11:38,450 --> 01:11:42,590
der java champ

754
01:11:42,750 --> 01:11:44,750
Anscheinend müssen wir es wirklich so machen

755
01:11:45,310 --> 01:11:51,890
ja

756
01:11:57,550 --> 01:11:59,550
Local share

757
01:11:59,950 --> 01:12:10,340
Ja und jetzt hello gibt es da nicht sowas wie run

758
01:12:12,420 --> 01:12:14,580
Gibt es gibt es nicht run

759
01:12:18,170 --> 01:12:20,170
Ich glaube ich mache es doch über die ide das

760
01:12:20,370 --> 01:12:26,130
Das regt mich schon auf dass das so jetzt hatte ich meinen helft nicht meine hilfe alle ach in der java macht java welt macht man

761
01:12:26,130 --> 01:12:28,130
nicht minus minus

762
01:12:34,420 --> 01:12:37,380
Okay leute ich ich sehe schon ich macht es doch über die ide

763
01:12:39,020 --> 01:12:51,390
Ich werde ich werde es doch über die ide machen so und wo finde ich jetzt den output davon out hier

764
01:12:55,510 --> 01:12:57,270
Moment

765
01:12:57,270 --> 01:13:07,000
Okay es geht schon es geht schon gut los und dann muss ich das hier starten monka giga alda

766
01:13:12,310 --> 01:13:18,110
Wie kompiliere ich das denn jetzt zu irgendwas was ich ausführen kann zu irgendeiner selbst self-contained sache wie mit dort net

767
01:13:18,870 --> 01:13:20,870
Wahrscheinlich wahrscheinlich gar nicht so ohne weiteres

768
01:13:23,030 --> 01:13:29,150
Du musst das zu einer java datei machen kann man kann man ok kotlin self-contained

769
01:13:31,380 --> 01:13:33,220
machen kein rast

770
01:13:33,220 --> 01:13:34,900
kotlin native

771
01:13:34,900 --> 01:13:37,260
Ja jetzt kommen gleich die advancen themen

772
01:13:38,860 --> 01:13:42,780
How to get started get started with kotlin multiplattform

773
01:13:48,050 --> 01:13:54,930
Include run time ja aber da kommt eine java datei raus eine java datei kann man doch nicht einfach ausführen eine java datei kann man ausführen mit

774
01:13:55,250 --> 01:13:57,250
wenn wenn java installiert ist

775
01:13:57,770 --> 01:13:59,770
Nein wir machen kein rast chat

776
01:14:00,210 --> 01:14:02,210
Ist ja schlimm heute

777
01:14:11,140 --> 01:14:13,380
Intelli j benutzen wir ok ok

778
01:14:14,980 --> 01:14:28,670
Aber wir müssen kotlin multiplattform auswählen warum ist das schon wieder so eine wissenschaft für sich

779
01:14:31,140 --> 01:14:32,460
Irgendwas

780
01:14:32,460 --> 01:14:33,660
dort

781
01:14:33,660 --> 01:14:35,580
überhaupt zu kompilieren

782
01:14:35,580 --> 01:14:50,460
Für kotlin brauchst du immer noch ja aber kann man die run time irgendwie embedden dass man java nicht mehr braucht

783
01:14:51,180 --> 01:15:02,260
Die haben hier irgendwas irgendwas stand damit include run time aber aber include run time

784
01:15:03,260 --> 01:15:16,530
Ja das ist die kotlin run time die die included ist das ist nicht die java run also nicht da ist nicht die

785
01:15:16,850 --> 01:15:18,850
Jvm geschichten da braucht man immer noch java

786
01:15:19,010 --> 01:15:23,570
Na gut ich meine wie dem auch sei da machen wir das ganze halt rein über die ide

787
01:15:24,370 --> 01:15:28,450
Aber das schon mal nicht so nicht so klar wie ich das gerne hätte

788
01:15:29,290 --> 01:15:36,700
Ja genau und die jar kannst du ja nur mit java ausführen ich hätte gerne so komplett komplett self-contained anwendung

789
01:15:37,700 --> 01:15:46,420
Okay also wo woher dann meine erste frage die ich habe woher kommt überhaupt print line ist das so eine globale

790
01:15:50,080 --> 01:15:52,080
kotlin internal inline only

791
01:15:52,960 --> 01:15:56,840
Alles okay print line alias zu system out print line

792
01:15:57,600 --> 01:16:01,840
Okay, das ist gar nicht. So übel ich finde es gar nicht. So blöd dass das included ist

793
01:16:03,760 --> 01:16:05,400
Weil

794
01:16:05,400 --> 01:16:07,400
ansonsten hast du

795
01:16:07,720 --> 01:16:12,040
Die scharfeste console right line und du hast es auch immer included also insofern

796
01:16:13,360 --> 01:16:37,600
So also probieren wir es mal aus hier

797
01:16:38,200 --> 01:16:39,400
print

798
01:16:39,400 --> 01:16:46,610
brindeln

799
01:16:46,610 --> 01:16:48,610
wisst ihr eine sache

800
01:16:49,930 --> 01:16:52,570
Die ich extrem nice finden würde wenn

801
01:16:53,930 --> 01:16:56,930
Programmiersprachen und standard und libraries die

802
01:16:58,170 --> 01:17:03,170
Mit dieser print print line und sowas geschichte anfangen dass so ein bisschen eher so z

803
01:17:03,810 --> 01:17:08,730
Go zum beispiel ist glaube ich so was oder heißt es heißt es in go auch

804
01:17:09,450 --> 01:17:10,930
print f

805
01:17:10,930 --> 01:17:14,050
Die format ist aber format print f genau also

806
01:17:14,410 --> 01:17:22,010
Was ich was ich cool finden würde ist wenn libraries die print f mitbringen auch print f mitbringen würden klingt jetzt bescheuert

807
01:17:22,090 --> 01:17:24,090
Ich glaube es gibt kaum was

808
01:17:25,250 --> 01:17:30,650
Was das hat aber mich nervt es immer ungemein von hand new lines schreiben zu müssen

809
01:17:31,650 --> 01:17:37,490
Und warum warum warum kein print f effeln wenn man schon printen hat

810
01:17:41,030 --> 01:17:48,870
Okay, auto complete und das ganze zeug fühlt sich natürlich mal wieder richtig richtig nice an ich meine es ist von von jet brains für

811
01:17:48,870 --> 01:17:50,230
jet brains

812
01:17:50,230 --> 01:17:56,300
So wie kann man sich jetzt anzeigen lassen

813
01:17:59,620 --> 01:18:01,620
Message ahja

814
01:18:02,620 --> 01:18:04,620
Kecke

815
01:18:04,700 --> 01:18:06,700
Komma

816
01:18:06,780 --> 01:18:11,380
Okay und weitere sachen hat moment kann jetzt haben wir schon mal das erste kann

817
01:18:11,900 --> 01:18:19,300
Kann kotlin string interpolation also war blubb gleich 1 ich gehe nicht davon aus dass wie das funktioniert

818
01:18:19,940 --> 01:18:23,500
Legt man wirklich so variablen an den kotlin das war jetzt einfach mal

819
01:18:24,300 --> 01:18:26,300
first try okay

820
01:18:26,340 --> 01:18:28,340
So geht jetzt sowas wie kecke

821
01:18:29,660 --> 01:18:31,660
Blubb nee

822
01:18:32,540 --> 01:18:34,620
Kecke blubb nee

823
01:18:36,700 --> 01:18:38,700
Was könnte es denn sonst noch sein

824
01:18:39,580 --> 01:18:41,580
Kotlin string interpolation

825
01:18:52,010 --> 01:18:53,810
Machst wie in zeile 8

826
01:18:53,810 --> 01:18:55,890
Ach hier ich bin ja

827
01:18:56,450 --> 01:19:00,290
Bin blind oder sogar unten drunter ein beispiel am start

828
01:19:03,240 --> 01:19:07,530
weg damit

829
01:19:07,530 --> 01:19:09,530
Okay, nicht schlecht finde ich ganz nice

830
01:19:12,090 --> 01:19:14,090
Redundant curly braces

831
01:19:15,690 --> 01:19:17,690
Auch so einfach

832
01:19:18,690 --> 01:19:24,850
Okay und wenn ich und wenn ich dann wirklich den dollar haben will dann es käbe ich das wahrscheinlich

833
01:19:27,050 --> 01:19:29,330
Warum nicht finde ich eigentlich ganz schick

834
01:19:31,010 --> 01:19:33,010
Chat ist heute wieder richtig high IQ ja

835
01:19:33,610 --> 01:19:35,770
Finde ich eigentlich ganz gut okay

836
01:19:36,450 --> 01:19:39,650
So als nächstes wie machen wir eine liste

837
01:19:40,170 --> 01:19:44,730
War list gleich und es ist es ist bestimmt nicht new list gehe ich mal von aus

838
01:19:45,330 --> 01:19:47,210
list

839
01:19:47,210 --> 01:19:49,210
kotlin collections

840
01:19:49,570 --> 01:19:51,570
list of

841
01:19:52,970 --> 01:19:54,970
Nee so funktioniert es schon mal nicht

842
01:19:56,530 --> 01:19:58,530
List of

843
01:20:03,530 --> 01:20:05,530
Kotlin list example

844
01:20:08,780 --> 01:20:10,780
Kottel ist exampel

845
01:20:16,270 --> 01:20:23,280
Wort

846
01:20:23,280 --> 01:20:31,060
list of

847
01:20:31,060 --> 01:20:34,020
Warum nicht ist gewöhnungssache ja okay

848
01:20:35,020 --> 01:20:40,930
Ich finde es immer ein bisschen komisch wenn es so eigene

849
01:20:41,610 --> 01:20:47,090
sagen so eigene bild in sachen gibt zum erstellen von typen anstatt

850
01:20:47,690 --> 01:20:49,850
irgendwas mit den typen selbst

851
01:20:50,770 --> 01:20:53,130
Aber es ist wahrscheinlich gewöhnungssache

852
01:20:54,890 --> 01:21:00,250
Komma der erkennt sogar gleich dass es eine liste auf in sein soll das finde ich gut das gefällt mir das finde ich schick

853
01:21:01,650 --> 01:21:05,890
Und jetzt bin ich mal gespannt wenn ich eine liste ausgebe was macht er dann

854
01:21:06,290 --> 01:21:13,250
In c sharp würde der jetzt ausgeben dass es hier instance of list quasi macht er in kotlin wahrscheinlich das gleiche

855
01:21:14,050 --> 01:21:16,050
hallo shift f10

856
01:21:17,890 --> 01:21:24,330
Nee oh guck mal der ist richtig schlau der macht aus der liste gleich einen debug baren string

857
01:21:26,330 --> 01:21:28,330
Das ist nice das finde ich gut

858
01:21:29,330 --> 01:21:34,650
Also in internet ich muss euch das jetzt mal zum vergleich das finde ich wirklich cool dass er stand hat mich sowas eingebaut hat

859
01:21:34,650 --> 01:21:36,650
Ich muss es jetzt mal zum vergleich zeigen

860
01:21:38,570 --> 01:21:40,570
Konsole app 2 bester name überhaupt

861
01:21:42,330 --> 01:21:49,590
Ist cute cute chatter app ja also in

862
01:21:55,310 --> 01:21:57,310
Alter

863
01:21:57,750 --> 01:21:59,750
Rider kriegt ich mal ein

864
01:22:01,070 --> 01:22:03,270
Wo ist das problem unload

865
01:22:04,150 --> 01:22:10,680
load

866
01:22:10,680 --> 01:22:15,730
aus

867
01:22:16,370 --> 01:22:20,930
Irgendwelchen gründen ist das total kaputt aber das ist eh nix was wir brauchen deswegen schmeiß ich mal wieder weg

868
01:22:22,690 --> 01:22:24,690
Konsole right line

869
01:22:25,610 --> 01:22:30,330
So und das ding ist halt in c sharp müsste ich sowas machen

870
01:22:31,010 --> 01:22:35,970
Also mal angenommen ich habe ich mache ich mache hier genau ich mache quasi mal genau das gleiche in c sharp

871
01:22:39,560 --> 01:22:43,440
Also mal sowas hier war list da müsste ich gleich eine new list

872
01:22:43,840 --> 01:22:48,760
Hier muss ich auf jeden fall schon mal angeben list von ind 1 2 3 5 6 7 oder 1 2 3 4

873
01:22:50,640 --> 01:22:55,920
Siehste siehste schon wieder gebetet worden so 1 2 3 4

874
01:22:57,360 --> 01:22:59,360
Und ich glaube den kann man weglassen mittlerweile

875
01:23:01,040 --> 01:23:08,240
Und wenn ich das jetzt wenn ich hier das gleiche sagen will dann müsste ich sowas hier machen hecke doppelpunkt und jetzt könnte ich sagen

876
01:23:09,240 --> 01:23:16,160
List in dort net passiert jetzt aber folgendes muss man kurz hier rein rider projects console app 2

877
01:23:17,960 --> 01:23:21,780
. net

878
01:23:21,780 --> 01:23:23,220
. net run

879
01:23:23,220 --> 01:23:25,220
Ja, ich bin im falschen ordner ok

880
01:23:25,700 --> 01:23:27,180
. net run

881
01:23:27,180 --> 01:23:31,740
Guck der würde jetzt sagen kecke und das ist der typ und nicht die liste an sich

882
01:23:34,100 --> 01:23:38,380
Und nein und selbst to string hilft nicht das ist ja nämlich das was hier was hier nicht

883
01:23:38,980 --> 01:23:45,860
To string hilft nicht das ist genau das gleiche da kommt nichts aus wenn ich wirklich wenn ich wirklich die zahlen hier

884
01:23:46,220 --> 01:23:49,620
Ausgeben will dann müsste ich jetzt sowas machen wie

885
01:23:52,540 --> 01:23:54,540
String join

886
01:23:55,820 --> 01:23:57,380
Liste

887
01:23:57,380 --> 01:23:59,380
nie zuerst separator

888
01:24:01,800 --> 01:24:03,800
separator liste

889
01:24:04,160 --> 01:24:06,160
So wenn ich glück habe funktioniert es jetzt

890
01:24:06,560 --> 01:24:08,320
ja hier guck

891
01:24:08,360 --> 01:24:13,640
Das ist da muss ich ehrlich sagen da ist es deutlich cooler gelöst in kotlin an der stelle

892
01:24:14,600 --> 01:24:19,680
dass er so basic basic sachen direkt in debug bares strings zurück übersetzt

893
01:24:22,120 --> 01:24:27,240
Go hat aber das problem dass go keine string interpolation gescheit unterstützt oder kann es

894
01:24:27,480 --> 01:24:32,440
Mittlerweile ich glaube nicht go hat immer noch dieses eklige print f zeug überall

895
01:24:36,940 --> 01:24:38,940
Okay, das gefällt mir schon mal ganz gut

896
01:24:39,940 --> 01:24:41,940
Das ist

897
01:24:42,060 --> 01:24:47,900
Es ist jetzt nicht so als wäre das hier wahnsinnig unlesbar und unverwendbar aber ganz gut hier, okay

898
01:24:49,100 --> 01:24:51,100
nächster punkt

899
01:24:51,180 --> 01:24:53,260
Wie macht man eine schleife in go

900
01:24:54,340 --> 01:24:56,900
Ähnlich in go wie komme ich auf go in kotlin vor

901
01:24:59,550 --> 01:25:02,670
Hat man da auch irgendwelche hilfen vielleicht vor

902
01:25:04,190 --> 01:25:07,070
Ich probiere jetzt mal was vor i in list

903
01:25:07,310 --> 01:25:11,390
Okay die sprache ist intuitiv

904
01:25:13,390 --> 01:25:15,070
Sind

905
01:25:15,070 --> 01:25:22,210
Die sprache ist intuitiv ich wusste nicht wie das aussehen muss und ich bin gleich drauf gekommen

906
01:25:23,330 --> 01:25:25,330
nice

907
01:25:25,330 --> 01:25:27,330
Und jetzt ist die frage

908
01:25:27,890 --> 01:25:29,890
Wie würde man eine ganz normale

909
01:25:35,190 --> 01:25:38,310
Kann man in kotlin die schleife die klammern weglassen

910
01:25:38,430 --> 01:25:40,430
Wahrscheinlich auch nur wenn es einzeilig ist

911
01:25:41,230 --> 01:25:52,420
Wie machst du eine normale schleife die zählt ja das das das frage ich mich auch gerade ich meine vielleicht

912
01:25:52,860 --> 01:25:59,740
Vielleicht kann kotlin auch die standard syntakt sowas wie war ich probiert es jetzt einfach mal ich habe keine ahnung wie das aussieht

913
01:26:00,260 --> 01:26:02,260
war i gleich 0

914
01:26:03,980 --> 01:26:07,820
Komma i kleiner 10 plus plus

915
01:26:08,500 --> 01:26:11,500
I kleiner 10 i plus plus

916
01:26:13,700 --> 01:26:22,580
Okay kotlin kauen mit ranges

917
01:26:24,380 --> 01:26:26,380
Guckte mal

918
01:26:27,300 --> 01:26:31,580
Vor i in 0 until ok

919
01:26:33,900 --> 01:26:41,390
Vor also i in 0 until und jetzt 10 oder wie

920
01:26:43,830 --> 01:26:45,830
Was sagt okay

921
01:26:50,950 --> 01:26:55,590
Was sagt rider dazu until can be replaced

922
01:26:59,500 --> 01:27:01,900
Okay das ist cool

923
01:27:07,210 --> 01:27:10,970
Okay, da sagt man okay vor i in 0

924
01:27:12,050 --> 01:27:14,050
bis kleiner 10

925
01:27:14,410 --> 01:27:16,930
Das ist eigentlich ziemlich coole syntakt dafür

926
01:27:17,930 --> 01:27:24,730
Und wenn ich das weglassen ist es wahrscheinlich inklusive 10 ja sie sieht man ja auch hier inklusive 10

927
01:27:26,370 --> 01:27:28,890
Und was ist wenn ich hier sowas dran machen da geht es natürlich

928
01:27:31,410 --> 01:27:33,410
Oder gleich da man gleich machen

929
01:27:37,980 --> 01:27:42,540
Das ist das ist cool warum du noch java schreibst das weiß ich auch nicht

930
01:27:45,480 --> 01:27:48,360
Vielleicht weil du alte projekte hast die halt komplett in java sind

931
01:27:48,720 --> 01:27:53,200
Ich weiß nicht wie es mit der kompatibilität zwischen kotlin und java aussieht also ich vermute mal dass

932
01:27:53,680 --> 01:28:01,160
Alles gültige in java also nicht synthax aber libraries und so auch gültiges kotlin sind

933
01:28:01,920 --> 01:28:06,880
Und ich vermute umgedreht gilt das auch weil das letztendlich ja alles auf der jvm läuft also

934
01:28:09,160 --> 01:28:13,600
Wahrscheinlich sind die dinge eins zu eins austauschbar jetzt halt nicht source code mäßig sondern nur

935
01:28:14,680 --> 01:28:16,680
auf der ebene untendrunter

936
01:28:17,080 --> 01:28:21,660
Ja wenn es kobold für jvm gebe dann auch

937
01:28:24,240 --> 01:28:28,960
Mal eine frage hast du schon design patterns wie mvvm oder mvc und das ja habe ich

938
01:28:29,520 --> 01:28:36,920
Allerdings ich habe noch nie eine mvvm app gebaut die ein bisschen größer war und ich fand es auch immer extrem

939
01:28:38,000 --> 01:28:39,160
anstrengend

940
01:28:39,160 --> 01:28:40,840
in wpf

941
01:28:40,840 --> 01:28:48,960
Wpf ist schon ziemlich blutet und mit der ganzen viewmodel geschichte ist das wahrscheinlich eher was für business enterprise enterprise apps

942
01:28:49,720 --> 01:28:59,450
Wenn ich was in wpf gemacht habe muss ich ganz ehrlich sagen code behind datei und gut ist also zur erklärung

943
01:29:00,290 --> 01:29:02,290
mvvm ist model

944
01:29:02,650 --> 01:29:04,650
view viewmodel

945
01:29:05,330 --> 01:29:12,250
Und mvc ist model viewcontroller also mvc selber habe ich schon total oft verwendet auch mit asp.net core

946
01:29:13,930 --> 01:29:20,290
Oder mit ruby on rails damals schon so ziemlich jedes halbwegs modernere back-end web framework unterstützt mvc

947
01:29:21,850 --> 01:29:29,210
Die sind bei asp.net core ein bisschen davon weggekommen vom klassischen mvc aber ist immer noch sehr verbreitet und mvvm ist eher was für

948
01:29:29,650 --> 01:29:34,100
ui

949
01:29:34,100 --> 01:29:35,820
ui frameworks

950
01:29:35,820 --> 01:29:37,820
Da kenne ich mich aber nicht so wirklich aus

951
01:29:40,390 --> 01:29:48,270
Also ich weiß nur dass man sagt gerade was wpf angeht dass man sagt mvvm ist dort relativ beliebt

952
01:29:48,910 --> 01:29:53,110
wegen data bindings und dynamischen ui

953
01:29:54,470 --> 01:29:56,470
also dass du quasi

954
01:29:56,670 --> 01:30:02,030
in deinem model quasi so die unterliegende nennen wir es mal logik hast

955
01:30:02,510 --> 01:30:07,470
So die business logik wie man das glaube ich so schön nennt von deiner anwendung dann hast du einen view

956
01:30:08,110 --> 01:30:11,110
Das ist die reine ui und mit dem viewmodel

957
01:30:11,750 --> 01:30:19,510
Bereitest du quasi das was du hier in deiner business logik drin hast so auf dass es dein view ordentlich verwalten und ordentlich

958
01:30:19,870 --> 01:30:21,430
verwenden kann

959
01:30:21,430 --> 01:30:26,430
Also mal angenommen mal ein simples beispiel ja du hast irgendeine logik für geld

960
01:30:28,870 --> 01:30:32,270
Rein mit irgendwie einem float, anzeige

961
01:30:32,630 --> 01:30:38,550
Geld kann das ui nichts anfangen dann würdest du den viewmodel dazwischen packen was aus

962
01:30:41,940 --> 01:30:44,380
Diesem betrag hier ja keine ahnung

963
01:30:45,260 --> 01:30:51,580
ein betrag gerundet in euro macht mit einem euro zeichen schön das display bar dahinter

964
01:30:52,060 --> 01:30:56,860
Und ein dein view würde das einfach nur binden das viewmodel und eins zu eins

965
01:30:57,740 --> 01:31:02,020
Durchreichen mit kleinen ui anpassungen so soweit ist glaube ich der gedanke hinter mvvm

966
01:31:05,160 --> 01:31:07,680
Ohne es jetzt bei größeren apps selbst verwendet zu haben

967
01:31:19,120 --> 01:31:21,200
Oder snibbi was sagst du dazu?

968
01:31:22,880 --> 01:31:36,190
Gut widmen wir uns zwar weiter kotlin es gibt es gibt ein paar ganz gute bücher dazu

969
01:31:38,390 --> 01:31:40,390
Ich habe

970
01:31:41,390 --> 01:31:45,710
Irgendwo auch eins für wpf wartet mal lasst mich mal um die ecke

971
01:31:57,250 --> 01:32:04,970
Ich habe ich habe es gefunden das ist ein buch mit irgendwie 3000 seiten oder so ohne übertreibung das heißt wpf das ultimative

972
01:32:07,090 --> 01:32:09,090
Ich habe ich habe schon wieder vergessen

973
01:32:18,330 --> 01:32:20,170
Das

974
01:32:20,170 --> 01:32:22,170
umfassende handbuch

975
01:32:22,250 --> 01:32:23,410
so

976
01:32:23,410 --> 01:32:25,330
mega fettes ding

977
01:32:25,370 --> 01:32:27,410
Keine ahnung ob das noch aktualisiert wird

978
01:32:29,450 --> 01:32:34,210
Das umfassende handbuch auch hier da gibt es ein bisschen was neues das hat einfach mal

979
01:32:37,050 --> 01:32:39,050
1218 seiten

980
01:32:39,610 --> 01:32:45,210
Wpf und irgendwo da wird auch auf mvvm eingegangen weil ich das richtig in erinnerung habe

981
01:32:45,850 --> 01:32:52,210
Ich habe mir das buch damals gekauft weil ich damals noch scharf drauf war wpf zu laufen die die erste ausgabe ist von keiner

982
01:32:52,770 --> 01:32:57,250
2006 oder so weil ich da noch irgendwie scharf drauf war wpf zu lernen ich habe es nie gelesen

983
01:33:01,520 --> 01:33:12,870
Ich habe es nie gelesen habe ich auch keinen bock drauf bin ich gar nicht dass

984
01:33:14,030 --> 01:33:17,790
das buchform zum lernen von solchen basics

985
01:33:18,590 --> 01:33:24,750
Unsinnig ist dass den riesen vorteil in buchform hast ist dass es oftmals ordentlich durchdacht und gescheit aufbereitet ist

986
01:33:27,070 --> 01:33:30,390
Nee das erklärt dir wirklich dass das ist kein nachschlag

987
01:33:30,950 --> 01:33:35,030
Referenz nachschlag ist sinnlos in buchform da gebe ich dir recht das ist was zum lernen

988
01:33:35,990 --> 01:33:38,510
Da kriegst du die unterschiedlichen wpf konzepte erklärt

989
01:33:39,270 --> 01:33:42,310
Aber wie gesagt ich habe das buch nie gelesen ich weiß nicht ob es was taugt

990
01:33:43,870 --> 01:33:45,870
Und für mvvm im

991
01:33:46,390 --> 01:33:52,750
mit wpf ich gehe mal davon aus sie sollte das in wpf machen weil das wpf ist so ziemlich das einzige desktop

992
01:33:52,790 --> 01:33:59,030
Was mir einfällt vielleicht aber lohnt ja noch weil es wpf bisschen nachempfunden ist wo mvvm so ein ding ist

993
01:33:59,910 --> 01:34:07,470
Okay weiter wir eigentlich sind wir nicht hier um auf wpf zu lässt ansonsten uns kotlin anzugucken so also pokers schleife gemacht nächster punkt

994
01:34:08,310 --> 01:34:14,990
Wenn wir okay lass noch mal eine andere sache ausprobieren ich gehe mal davon aus wenn wir eine schleife machen können

995
01:34:15,750 --> 01:34:17,750
aus

996
01:34:17,750 --> 01:34:22,960
Jetzt bin ich ja mal gespannt das gibt kein fehler

997
01:34:24,320 --> 01:34:26,320
Was ist denn das jetzt

998
01:34:26,800 --> 01:34:28,800
Das kann ja kein list of int mehr sein

999
01:34:30,920 --> 01:34:37,760
Das ist ein list of ein moment ein ein was ein list of comparable sternchen

1000
01:34:39,440 --> 01:34:43,400
What jetzt jetzt wird es interessant was ist das jetzt

1001
01:34:45,400 --> 01:34:47,400
Und was ist mein i

1002
01:34:48,280 --> 01:34:50,280
Mein is ein

1003
01:34:50,560 --> 01:34:52,560
comparable sternchen auf

1004
01:34:53,080 --> 01:34:55,080
javas serial labels

1005
01:34:55,880 --> 01:34:57,880
What the fuck

1006
01:34:58,720 --> 01:35:04,360
Ist das ist das quasi jetzt list of object im endeffekt ist das im endeffekt sowas hier

1007
01:35:09,060 --> 01:35:11,060
Moment wie kann das jetzt eine list of int sein

1008
01:35:16,060 --> 01:35:18,060
Weil das kompiliert das

1009
01:35:22,710 --> 01:35:24,710
Object

1010
01:35:30,160 --> 01:35:32,160
Interessant dass es funktioniert

1011
01:35:35,610 --> 01:35:40,170
Das das macht unter der haube ja aber aber was aber was ist das denn jetzt

1012
01:35:41,330 --> 01:35:43,810
Das ist sowas wie ein objekt im endeffekt oder

1013
01:35:44,690 --> 01:35:46,770
Kann ich kann ich das kasten zu einem objekt

1014
01:35:47,610 --> 01:35:49,770
gibt gibt es überhaupt ein objekt in

1015
01:35:50,890 --> 01:35:52,890
Und wie kastet man

1016
01:35:54,970 --> 01:35:56,970
Fragen überfragen

1017
01:36:00,180 --> 01:36:04,900
Kann man denn okay jetzt jetzt probieren wir mal was jetzt okay das ist vielleicht ein bisschen

1018
01:36:05,020 --> 01:36:11,380
Advanceres topic aber das müssen wir jetzt mal ausprobieren also wir haben jetzt hier quasi so eine liste auf objekt sowas in der richtung

1019
01:36:13,780 --> 01:36:16,380
Und wir haben jetzt nur von diesem interface

1020
01:36:18,420 --> 01:36:21,140
Das war item sonst haben wir jetzt zwar nicht wirklich

1021
01:36:21,740 --> 01:36:23,740
Die item ist vom typ comparable

1022
01:36:25,020 --> 01:36:28,020
Gibt es jetzt sowas wie dass ich checken kann

1023
01:36:30,550 --> 01:36:32,910
Ich vermute mal dass hier sind list

1024
01:36:33,550 --> 01:36:39,470
To let run das sind wahrscheinlich sachen was alle listen haben nehmen wenn das ja gar keine liste

1025
01:36:42,260 --> 01:36:44,260
Okay, wie kastet man sachen in

1026
01:36:45,540 --> 01:36:47,540
kotlin cast

1027
01:36:47,580 --> 01:36:49,580
any to object

1028
01:36:50,380 --> 01:36:52,380
Jetzt okay

1029
01:36:56,040 --> 01:37:03,180
Aha

1030
01:37:03,180 --> 01:37:05,180
Aha man macht das

1031
01:37:07,920 --> 01:37:14,160
Das ist so ein bisschen wie ein bisschen wie die pattern matching if geschichte in c sharp würde ich mal sagen

1032
01:37:19,700 --> 01:37:23,500
Okay, das ist gar nicht. Das ist eigentlich relativ cool gemacht

1033
01:37:24,780 --> 01:37:26,780
Also ich würde jetzt ich würde jetzt quasi sagen

1034
01:37:27,740 --> 01:37:30,980
Wir nennen das mal item und nicht ich würde jetzt quasi sagen

1035
01:37:33,580 --> 01:37:36,620
Item ist string string groß oder klein

1036
01:37:40,620 --> 01:37:42,620
string groß

1037
01:37:43,220 --> 01:37:44,580
Brindeln

1038
01:37:44,580 --> 01:37:47,940
Was mich ein bisschen verwirrt ist warum setzt er mich hier eigentlich nicht in die mitte rein

1039
01:37:48,460 --> 01:37:51,420
Und jetzt ist item an der stelle ist item ein string

1040
01:37:54,380 --> 01:37:57,140
Doch jetzt ist item den string an der stelle guckt mal

1041
01:37:59,850 --> 01:38:04,250
Jetzt habe ich nämlich auch längst und und jazz und alles mögliche am start

1042
01:38:06,210 --> 01:38:13,050
Das ist wirklich cool was ist wenn ich jetzt in der b gleich item ist dann benen string auch comparable deshalb komisch

1043
01:38:14,610 --> 01:38:19,890
Aber wie kastet man dann ist nämlich danke für den start wie kastet man denn von hand

1044
01:38:21,690 --> 01:38:23,690
Außer mit

1045
01:38:24,610 --> 01:38:29,890
Wenn expressions okay, das ist jetzt die pattern matching geschichte das muss uns auch gleich angucken es

1046
01:38:32,640 --> 01:38:34,280
also quasi

1047
01:38:34,280 --> 01:38:37,640
Okay, war blubb gleich item s

1048
01:38:38,480 --> 01:38:40,320
string

1049
01:38:40,320 --> 01:38:42,320
Und blubb ist jetzt ein swing, okay

1050
01:38:43,320 --> 01:38:45,960
Das müsste jetzt eigentlich crashen weil du

1051
01:38:46,720 --> 01:38:55,140
Ind nicht so quasi implizit casten kannst zu einem string oder kann kotlin das ruft es dann zu string auf

1052
01:38:57,600 --> 01:38:59,000
Ja

1053
01:38:59,000 --> 01:39:01,920
Integer cannot be cast to string das fällt mich jetzt auch gewundert wenn das geht

1054
01:39:05,110 --> 01:39:11,910
Irgendwie triggert sich der gnu in den style ich weiß nicht ob es der gnu in den style ist ich finde den aber viel nicer

1055
01:39:12,350 --> 01:39:15,550
Als die go geschichte in go würde das ganze ja also in go

1056
01:39:15,910 --> 01:39:22,150
Also nur mal so zum vergleich check wenn wir jetzt in go also so würde das ganze auch in c sharp by the way aussehen ja

1057
01:39:22,270 --> 01:39:24,270
in go in go

1058
01:39:24,390 --> 01:39:30,430
Würde ihr könnt mir mal sagen gleich was ihr schöner findet so das ist ja so der normale style in anscheinend kotlin auch

1059
01:39:30,750 --> 01:39:32,990
preferred und und c sharp standartmäßig auch

1060
01:39:33,710 --> 01:39:35,710
In go würde das ganze so aussehen

1061
01:39:40,820 --> 01:39:44,380
Das ist zwar kürzer, aber ich muss ehrlich sagen ich finde es eklig

1062
01:39:58,580 --> 01:40:02,240
Viel besser

1063
01:40:02,240 --> 01:40:14,610
Ich bin klammer in eigener zeile auch besser so wir müssen übrigens noch eine sache einstellen die mich nervt und zwar

1064
01:40:15,690 --> 01:40:20,290
Wir wollen nicht wir wollen nicht vor spaces haben wir wollen to spaces haben

1065
01:40:21,850 --> 01:40:24,410
Und jetzt wollen wir reformat machen

1066
01:41:24,530 --> 01:41:27,170
Also zwei sachen irritieren mich hier schon mal

1067
01:41:28,130 --> 01:41:31,770
Erstens warum hat kotlin diesen hässlichen klammer style standardmäßig

1068
01:41:32,770 --> 01:41:34,610
und zweitens

1069
01:41:34,610 --> 01:41:36,610
warum entdeckte das nicht mit

1070
01:41:37,010 --> 01:41:39,010
nicht mit vier spaces

1071
01:41:41,180 --> 01:41:56,590
mit zwei spaces

1072
01:41:56,590 --> 01:41:58,390
Aber hier geht es doch auch

1073
01:41:58,390 --> 01:42:04,200
Hä was ist das für ein scheiß?

1074
01:42:05,240 --> 01:42:08,320
Ich es gibt ein menü und es passiert nichts wenn ich umstelle

1075
01:42:11,180 --> 01:42:14,580
Ich an in dente das einfach mal alles und jetzt bin ich mal gespannt was es da

1076
01:42:15,580 --> 01:42:17,580
Eins passt mal auf eins

1077
01:42:21,300 --> 01:42:23,300
Das juckt es juckt es einfach nicht

1078
01:42:23,940 --> 01:42:28,720
Juckt es juckt es einfach nicht

1079
01:42:28,800 --> 01:42:35,760
Muss neu formatieren habe ich doch schon 500 mal gemacht

1080
01:42:47,010 --> 01:42:49,410
Also ich meine ich kann es jetzt so lassen aber

1081
01:42:50,610 --> 01:42:56,190
Vielleicht steht das im projekt so konfiguriert drinne

1082
01:42:57,070 --> 01:43:08,290
aber

1083
01:43:08,290 --> 01:43:13,390
Okay kotlin change indentation

1084
01:43:19,140 --> 01:43:21,140
Intelligent

1085
01:43:21,660 --> 01:43:25,020
Also in rider ist das gar kein ding guck hier leute

1086
01:43:28,630 --> 01:43:30,630
Ich habe das

1087
01:43:31,790 --> 01:43:33,550
Club

1088
01:43:33,550 --> 01:43:35,870
Guckt ich habe das gleich so umgestellt dass das hier

1089
01:43:37,150 --> 01:43:39,150
to spaces

1090
01:43:39,590 --> 01:43:41,590
Gar kein gar kein problem gewesen

1091
01:43:44,650 --> 01:44:05,580
Moment sieht ja anders aus bomben also anscheinend anscheinend geht das geht das nicht

1092
01:44:13,620 --> 01:44:20,840
anscheinend

1093
01:44:21,720 --> 01:44:53,640
Also ich meine das muss aber das muss doch möglich sein schau mal ganz unten rechts meinst das hier

1094
01:44:55,120 --> 01:44:57,120
Da habe ich doch von 500 marken geklickt

1095
01:45:02,310 --> 01:45:04,310
Coding style

1096
01:45:15,900 --> 01:45:23,300
Wo ist kotlin hier zur auswahl gar nicht ja meine güte

1097
01:45:23,980 --> 01:45:25,100
general

1098
01:45:25,100 --> 01:45:38,380
Deswegen gibt es hier kotlin gar nicht zur auswahl

1099
01:45:39,940 --> 01:45:49,010
Bei coding style doch da kotlin so jetzt bin ich mal gespannt

1100
01:45:50,210 --> 01:45:52,210
Da habe ich den coding style umgestellt

1101
01:45:55,170 --> 01:45:56,290
Reformat

1102
01:45:56,290 --> 01:46:00,940
Nein das juckt es einfach nicht

1103
01:46:06,010 --> 01:46:11,650
Okay, bevor wir uns jetzt mit dem kram aufhalten dann bleibt es halt eben bei vier spaces

1104
01:46:14,420 --> 01:46:29,310
Vielleicht ist es auch verbuggt

1105
01:46:29,350 --> 01:46:31,350
Vielleicht kotlin vorgabe das würde mich wundern

1106
01:46:33,430 --> 01:46:35,870
Mich nervt übrigens auch dass es das ist das

1107
01:46:37,390 --> 01:46:41,670
Kompiliert kotlin wenigstens ja man nicht schlecht wenn man die klammern so macht im vergleich zu go

1108
01:46:43,990 --> 01:46:45,990
Ja gut das kann nicht funktionieren

1109
01:46:50,550 --> 01:46:56,310
Okay, wenigstens wenigstens kompiliert kotlin go sagt ja bei sowas wenn die klammern falsch gesagt falsch gesetzt sind

1110
01:46:56,310 --> 01:46:58,790
Oh, nee das geht überhaupt nicht dass da kann ich nicht kompilieren

1111
01:47:01,280 --> 01:47:07,000
Was ist das eigentliche ding was ich was ich was ich ausprobieren wollte genau also guck mal also wir können implizit

1112
01:47:07,560 --> 01:47:13,640
Quasi item zu string casten das finde ich schon mal eine coole sache wir probieren das jetzt noch mal noch mal anders aus wir

1113
01:47:13,640 --> 01:47:17,400
Machen jetzt ein int rein wir machen jetzt ein float rein und wir machen jetzt

1114
01:47:18,200 --> 01:47:23,600
Hat das sowas wie null oh nee damit will ich nicht anfangen

1115
01:47:24,920 --> 01:47:28,600
Buhl genau true true lul weh machen wir da jetzt rein

1116
01:47:30,200 --> 01:47:33,080
Das ist die einzige ausgabe die jetzt kommt ist bei

1117
01:47:34,080 --> 01:47:41,680
1 weil das das einzige ist was mit string hat jetzt ist die frage hat link sowas hat hat kotlin sowas wie link

1118
01:47:41,800 --> 01:47:45,080
dass ich sage wer oder oder filter oder

1119
01:47:47,800 --> 01:47:49,800
Interessant filter

1120
01:47:51,950 --> 01:47:56,630
Jetzt kommt das ding wie sieht die lambda sündags für kotlin aus

1121
01:47:57,870 --> 01:47:59,870
kotlin list filter

1122
01:48:04,750 --> 01:48:07,150
Kotlin gibt das vor ernsthaft

1123
01:48:10,340 --> 01:48:17,100
Mann also ich mag zwei space ist einfach deutlich mehr als vier mit filtering collections

1124
01:48:18,420 --> 01:48:20,420
Sieht wie aus

1125
01:48:21,180 --> 01:48:25,660
Achso guck mal man muss gar nicht selbst parameter das finde ich schick

1126
01:48:29,200 --> 01:48:31,960
Also wenn man einfach nur ein parametern kann man nicht nehmen

1127
01:48:33,160 --> 01:48:36,360
Ansonsten kann man relativ ähnlich zur c sharp syntax

1128
01:48:37,720 --> 01:48:39,720
Das nehmen okay

1129
01:48:41,260 --> 01:48:43,260
Also ich kann es in dem fall sagen

1130
01:48:44,820 --> 01:48:49,300
Type die it is string geht sowas

1131
01:48:52,260 --> 01:48:55,260
Jetzt sagt er filter call could be simplified

1132
01:48:58,340 --> 01:49:00,340
So

1133
01:49:00,340 --> 01:49:04,500
Okay, also das muss man da sagen da merkt man dass jetbrains die sprache

1134
01:49:05,380 --> 01:49:11,140
Und die idee macht dass das so gut funktioniert dass sie die alternative vorschlagen können

1135
01:49:11,660 --> 01:49:16,300
Okay, das bedeutet nämlich auch wenn ich das so machen das war mal eine probabler schleife war mal print

1136
01:49:16,980 --> 01:49:18,060
brindeln

1137
01:49:18,060 --> 01:49:21,380
Und dann sage ich wie count oder sowas count

1138
01:49:21,900 --> 01:49:23,900
Wenn das hier auch geht count

1139
01:49:24,540 --> 01:49:29,420
Da sollte jetzt rauskommen eins obwohl ja eigentlich vier elemente drin sind

1140
01:49:30,460 --> 01:49:38,060
Nice okay gut das heißt die haben so ein bisschen link light nennen wir es mal mit in kotlin drinne

1141
01:49:39,060 --> 01:49:41,980
Das finde ich ganz geil mach mal eine nested list

1142
01:49:43,500 --> 01:49:46,220
Jetzt sowas hier list of

1143
01:49:47,380 --> 01:49:51,650
So geht doch

1144
01:49:51,650 --> 01:49:53,650
Das ist jetzt das ist jetzt eine nested list

1145
01:49:54,490 --> 01:50:00,380
Ich meine den string wird er natürlich aus der nested list nicht erkennen

1146
01:50:01,260 --> 01:50:21,050
Ich meine was was wir jetzt in c sharp machen könnte ist select many neben bei mir das wieder

1147
01:50:21,050 --> 01:50:26,970
Und das würde an der stelle gar nicht funktionieren weil das weiß er nicht welches objekt das ist okay da müssen wir jetzt

1148
01:50:26,970 --> 01:50:31,770
Okay da müssen wir noch mal eine schleife ich finde es aber ganz also ich muss ehrlich sagen das wirkt auf mich

1149
01:50:32,210 --> 01:50:34,610
bis jetzt relativ durchdacht alles

1150
01:50:35,210 --> 01:50:41,400
Ja, habe ich auch schon gerade dran gedacht

1151
01:50:41,800 --> 01:50:43,800
flat 8 tatsächlich

1152
01:50:45,000 --> 01:50:46,880
Flat map

1153
01:50:46,880 --> 01:50:51,400
Eine sache die mir noch ein bisschen fehlt ist ein hilfetext was das eigentlich macht

1154
01:50:54,690 --> 01:50:57,090
Oder kann man sich mit dem hilfetext anzeigen lassen

1155
01:50:59,360 --> 01:51:01,360
quick doch a control q

1156
01:51:01,360 --> 01:51:05,840
Control q da kriegt man sogar eine hilfe

1157
01:51:11,360 --> 01:51:19,600
Returns a single list of all elements yield from result of transform function ja okay das könnte man an der stelle natürlich

1158
01:51:19,920 --> 01:51:25,490
machen

1159
01:51:25,490 --> 01:51:26,850
das tatsächlich

1160
01:51:26,850 --> 01:51:28,850
Das ist gar nicht gar nicht so

1161
01:51:30,770 --> 01:51:33,250
Blöde an der stelle okay machen wir noch mal print

1162
01:51:34,130 --> 01:51:36,130
Print l item

1163
01:51:37,770 --> 01:51:39,770
Ja so und jetzt geht

1164
01:51:42,500 --> 01:51:44,500
zu string das

1165
01:51:45,740 --> 01:51:47,740
Im moment was mache ich hier überhaupt

1166
01:51:50,010 --> 01:51:53,450
Aber ich will ich will ja eigentlich gar nicht flat map oder platt

1167
01:51:54,890 --> 01:51:56,890
Returns a single list of all elements

1168
01:51:57,810 --> 01:52:07,140
Ne das müsste doch müsste schon funktionieren

1169
01:52:10,770 --> 01:52:12,770
da muss nun

1170
01:52:13,770 --> 01:52:21,880
Iterable rauskommen also quasi wie list of it

1171
01:52:23,880 --> 01:52:27,080
Okay das funktioniert es kann aber nicht den uns weg der sache sein oder

1172
01:52:35,500 --> 01:52:40,660
Ich bin mir nicht sicher wie ich den krempel verhalten muss aber ich finde die funktion schon mal so und jetzt hier müsste ich jetzt

1173
01:52:40,660 --> 01:52:42,660
quasi checken

1174
01:52:42,780 --> 01:52:45,780
Kann man hier kann man hier multiline drinnen machen

1175
01:52:46,620 --> 01:52:51,620
Ja, okay, also hier müsste ich jetzt quasi drin

1176
01:52:52,820 --> 01:52:55,860
Drinnen checken wenn das eine liste ist

1177
01:52:57,940 --> 01:53:00,740
Also quasi if kann man den if drinnen machen

1178
01:53:04,260 --> 01:53:06,260
if

1179
01:53:07,060 --> 01:53:13,100
Ne da muss man muss man vielleicht noch mal klammern

1180
01:53:16,940 --> 01:53:22,380
Wie macht man mehrere zeilen damit

1181
01:53:24,780 --> 01:53:26,780
Kotlin multiline

1182
01:53:27,540 --> 01:53:30,340
Wir sind wir haben jetzt leider die isi themen übersprungen

1183
01:53:34,560 --> 01:53:37,320
Ach da muss man das mit function direkt machen

1184
01:53:38,840 --> 01:53:40,920
Also anstatt so quasi

1185
01:53:56,100 --> 01:54:10,290
What ne man muss das mit so einem komischen pfeil machen hat okay

1186
01:54:14,870 --> 01:54:18,630
Moment dass das das überfordert mich jetzt

1187
01:54:20,430 --> 01:54:23,030
List zwei besser besser name überhaupt

1188
01:54:27,700 --> 01:54:31,940
Dass das überfordert mich jetzt irgendwie dies was sie mir hier mitteilen wollen

1189
01:54:38,800 --> 01:54:40,960
Das muss jetzt in mehrere zeilen sein oder

1190
01:54:49,310 --> 01:54:51,310
Return oder

1191
01:54:54,550 --> 01:55:04,590
Okay das checken wir das funktionieren soll list of

1192
01:55:05,590 --> 01:55:07,590
Und

1193
01:55:08,510 --> 01:55:10,510
Ohne return

1194
01:55:10,510 --> 01:55:16,190
Also geht das okay, okay, das erinnert mich ein bisschen an die gruvi sündags die finde ich aber nicht so schön jetzt

1195
01:55:20,390 --> 01:55:26,190
Also gar nicht so schlecht so und dann haben wir noch eine alternative multiline da macht man das mit function okay

1196
01:55:26,470 --> 01:55:28,470
Also da würde ich jetzt quasi sagen

1197
01:55:34,300 --> 01:55:37,060
Dann würde ich so sagen und dann fangt schon

1198
01:55:37,860 --> 01:55:39,860
E

1199
01:55:42,900 --> 01:55:44,900
List of

1200
01:55:46,100 --> 01:55:48,100
Return

1201
01:55:53,540 --> 01:55:56,500
List for each function wieso ist doch richtig so

1202
01:56:12,610 --> 01:56:16,050
Dann check ich die sündags nicht das habe ich doch richtig gemacht

1203
01:56:19,540 --> 01:56:23,460
Wir machen es mal so wie es funktioniert hat weil eigentlich wollte ich was anderes ausprobieren und zwar

1204
01:56:24,180 --> 01:56:28,540
Und eigentlich wollte der chat da ich was anderes ausprobieren so also wir müssen jetzt gucken

1205
01:56:32,980 --> 01:56:40,280
Ist eine liste oder

1206
01:56:41,920 --> 01:56:43,920
Ihn innamorabel

1207
01:56:45,400 --> 01:56:47,400
Collection muss ich wahrscheinlich gucken oder

1208
01:56:50,740 --> 01:56:52,740
Wenn es eine collection ist

1209
01:56:53,500 --> 01:57:00,460
Ne das funktioniert so nicht und das haben wir so else

1210
01:57:01,460 --> 01:57:03,460
Return

1211
01:57:03,740 --> 01:57:07,180
List of

1212
01:57:07,220 --> 01:57:08,940
List of e

1213
01:57:08,940 --> 01:57:16,530
Warum ist es jetzt warum ist es jetzt problem?

1214
01:57:19,720 --> 01:57:21,720
So funktioniert es doch

1215
01:57:22,040 --> 01:57:23,960
Das ist nicht

1216
01:57:23,960 --> 01:57:26,520
Ich ich returne doch in beiden fällen was

1217
01:57:27,200 --> 01:57:32,400
Ach, nee, ich habe nicht in beiden fällen was okay, also das wird das wird so funktionieren

1218
01:57:32,400 --> 01:57:36,800
Nur das wird nicht hier checken sondern hier müssen wir auf collection checken das funktioniert so nicht

1219
01:57:37,800 --> 01:57:39,800
Use collections

1220
01:57:41,480 --> 01:57:45,050
Sternchen aha

1221
01:57:47,650 --> 01:57:53,810
Interessant so da sollte jetzt noch nichts machen aber sollte immer noch funktionieren so und das heißt wenn das jetzt eine collection ist

1222
01:57:53,890 --> 01:57:57,730
Dann gebe ich nicht list auf zurück sondern direkt die collection

1223
01:58:00,020 --> 01:58:01,260
cool

1224
01:58:01,260 --> 01:58:06,260
Okay, nice. Also ich muss sagen die haben das recht intuitiv gestaltet

1225
01:58:06,300 --> 01:58:12,260
Ich habe noch nie was mit kotlin vorher gemacht und komme eigentlich relativ intuitiv mit mit den sachen klar

1226
01:58:13,340 --> 01:58:15,940
Das spricht für die sprache muss man sagen

1227
01:58:16,980 --> 01:58:27,710
So und wie sie wie würde das korrekt formatiert aussehen so na ja

1228
01:58:28,430 --> 01:58:31,430
Man kann an der stelle wahrscheinlich übrigens auch die klammern ups

1229
01:58:32,830 --> 01:58:36,270
Man kann an der stelle wahrscheinlich sogar die ganzen klammern auch

1230
01:58:37,670 --> 01:58:39,670
Vermutlich weglassen

1231
01:58:40,670 --> 01:58:42,670
Weil es ist ja nur

1232
01:58:44,710 --> 01:58:46,710
Online

1233
01:58:47,430 --> 01:58:49,430
Kann man nicht

1234
01:58:50,430 --> 01:58:57,350
Dann weiß er nicht wo doch doch das kapiert aber das sieht jetzt schon ziemlich hässlich aus oder

1235
01:59:01,110 --> 01:59:03,670
Das das sieht jetzt da sieht er schon ziemlich hässlich aus

1236
01:59:05,470 --> 01:59:10,950
Ich meine wir könnten auch so was machen hier mal gucken ob das mal gucken ob das funktioniert

1237
01:59:11,470 --> 01:59:17,710
Das da also wenn das eine collection ist dann eh ansonsten list auf

1238
01:59:24,610 --> 01:59:29,410
Nee kotlin ternary operator hat kotlin sowas

1239
01:59:39,860 --> 01:59:42,140
Nee nee

1240
01:59:43,860 --> 01:59:51,590
Okay macht aber nix in der elvis operator

1241
01:59:57,380 --> 02:00:00,340
Nee nee das ist was anderes das ist was anderes

1242
02:00:01,220 --> 02:00:15,830
Der checkt ob der er checkt ob das null ist wenn das nicht null ist gibt es dann dafür den das quasi ein null check im

1243
02:00:15,830 --> 02:00:19,980
Endeffekt

1244
02:00:19,980 --> 02:00:25,820
Also sprich aber wir können if kann man aber auch online mäßig benutzen anscheinend

1245
02:00:27,780 --> 02:00:30,020
Warum braucht man eigentlich keinen return hier davor

1246
02:00:30,980 --> 02:00:35,450
der benutzt weil der weil der immer

1247
02:00:35,810 --> 02:00:38,530
ist

1248
02:00:38,530 --> 02:00:43,170
Das das letztmögliche aus dem execution so fahrt quasi

1249
02:00:45,210 --> 02:00:47,450
Hä na gut

1250
02:00:49,450 --> 02:00:54,330
Was soll es ja auch sonst sein wenn es einzeln dasteht als den return du machst ja sonst nix damit

1251
02:00:56,010 --> 02:00:58,890
So aber ich könnte es ich könnte es wahrscheinlich so schreiben

1252
02:01:04,220 --> 02:01:05,820
Ja

1253
02:01:05,820 --> 02:01:07,820
Das das geht doch eigentlich voll klar

1254
02:01:08,820 --> 02:01:12,740
Und jetzt bräuchte ich wahrscheinlich noch nicht mal die multiline geschichte

1255
02:01:14,300 --> 02:01:17,420
Wenn ich anstatt e it verwende

1256
02:01:24,380 --> 02:01:26,380
Geht doch eigentlich echt klar

1257
02:01:30,010 --> 02:01:40,340
Und jetzt könnte man das sogar an der stelle hier reinschreiben oder auch nicht warum nicht doch geht doch

1258
02:01:41,340 --> 02:01:44,980
Ah ja ich habe schon hässlicheres gesehen

1259
02:01:46,260 --> 02:01:54,140
Das mit dem sternchen finde ich vielleicht ein bisschen gewöhnungsbedürftig aber so siehst du wenigstens gleich dass das irgendein generic type ist

1260
02:01:55,340 --> 02:01:58,580
Was wird hier erstellt gar nix wir gucken uns kotlin an

1261
02:02:01,920 --> 02:02:09,260
sonst nix weiter

1262
02:02:09,260 --> 02:02:11,780
Ja, also ich muss sagen finde ich finde das

1263
02:02:14,120 --> 02:02:17,280
Ich finde das bis jetzt eigentlich ganz ganz nice

1264
02:02:34,270 --> 02:02:36,570
Ich finde ich finde das mit dem sternchen auch nicht so schlecht

1265
02:02:37,350 --> 02:02:42,870
Okay, da haben wir uns jetzt schon mal so ein bisschen die basics angeguckt finde ich bis ich finde es wirklich nicht übel bis

1266
02:02:42,870 --> 02:02:44,870
Jetzt muss ich sagen es hat was hat was

1267
02:02:46,110 --> 02:02:51,510
Okay, wir können schleifen wir können listen wie ändert man dann was in der liste das soll man vielleicht auch noch list

1268
02:02:53,750 --> 02:02:55,750
Push auch Gott sei dank nicht

1269
02:02:56,590 --> 02:03:01,350
Zum glück zum glück ist nicht push das hat mich ja viel zu fair als sie bloß bloß erzielt das bloß erinnert

1270
02:03:08,790 --> 02:03:17,320
Ändert man überhaupt was oder ist es im mutable und ich muss eine neue liste machen

1271
02:03:23,030 --> 02:03:26,270
ich brauche eine mutable list of list of

1272
02:03:28,750 --> 02:03:33,920
Mutable list

1273
02:03:34,040 --> 02:03:36,040
Warum nicht okay

1274
02:03:36,920 --> 02:03:38,920
Jetzt gibt es auch

1275
02:03:39,600 --> 02:03:42,840
Ich vermute mal man kann den index weglassen

1276
02:03:43,520 --> 02:03:46,800
Ja, das haben die wirklich leute wisst ihr was

1277
02:03:47,600 --> 02:03:52,520
Bei c++ wäre es jetzt so gewesen du kannst den index nicht nicht wenn ich kann ich den index weglassen

1278
02:03:52,640 --> 02:03:56,800
Ja kann ich bei c++ wäre es jetzt so gewesen ich kann den index nicht weglassen

1279
02:03:59,380 --> 02:04:04,860
Und c++ hätte dann so sachen wie pushback push push front und sowas

1280
02:04:05,660 --> 02:04:08,820
Weil hat was heißt hätte c++ hat sowas

1281
02:04:10,060 --> 02:04:17,420
Das gefällt mir das hat was das ist gut durchdacht also dann da merkst du dass das jemand designt hat der ein bisschen ein bisschen

1282
02:04:17,940 --> 02:04:19,300
entwickler

1283
02:04:19,300 --> 02:04:21,300
freundlichkeit im hinterkopf hatte

1284
02:04:22,020 --> 02:04:24,660
Also nicht wie c++ sondern das c++ gremium

1285
02:04:26,180 --> 02:04:29,940
So gucken wir uns jetzt mal was anderes an wie macht man http requests

1286
02:04:30,460 --> 02:04:35,780
Mal gleich mal mal mal gleich mal in einen sprung http client nein doch

1287
02:04:39,280 --> 02:04:45,600
Jetzt kommen java shit aber das kann kotlin http request die haben doch bestimmt aber was besseres eingebaut

1288
02:04:46,600 --> 02:04:49,960
Kotlin http requests jawohl http get

1289
02:04:50,760 --> 02:04:53,960
Ne das ist irgendeine custom library die ich nicht haben will oder

1290
02:04:54,920 --> 02:05:00,020
ne

1291
02:05:00,580 --> 02:05:06,780
Http client ist doch richtig ne ne ne man muss das java zeug verwenden anscheinend

1292
02:05:16,510 --> 02:05:30,660
Http client es gibt noch ein paar extra libraries aber das muss ja muss ja nicht sein es gibt tausend

1293
02:05:35,080 --> 02:05:40,440
Extra libraries ok probieren wir mal ok wir probieren mal den http client zu verwenden

1294
02:05:42,120 --> 02:05:44,480
Http client new http client ok

1295
02:05:49,950 --> 02:05:53,750
Was will der hier von mir das remove http client nee warum?

1296
02:05:55,070 --> 02:05:59,550
Http client get nee so einfach ist es schon mal nicht

1297
02:06:03,420 --> 02:06:09,260
send

1298
02:06:09,260 --> 02:06:11,700
Moment send vielleicht

1299
02:06:11,700 --> 02:06:13,700
Jetzt

1300
02:06:13,820 --> 02:06:21,490
Jetzt hört schon auf http get request kotlin

1301
02:06:23,450 --> 02:06:25,450
Okay guckt man sich das beispiel noch mal an

1302
02:06:27,980 --> 02:06:29,420
ja

1303
02:06:29,420 --> 02:06:36,500
Request ok man braucht ein extra request man kann nicht einfach http client get machen kann man vielleicht http client get so

1304
02:06:37,820 --> 02:06:39,820
Da braucht man ein request

1305
02:06:40,700 --> 02:06:43,700
New nee request oder was

1306
02:06:45,300 --> 02:06:50,180
Ups ich fand es das

1307
02:06:51,900 --> 02:06:54,780
Http request http request

1308
02:07:11,980 --> 02:07:13,980
Nehmen wir mal wetter.in

1309
02:07:16,960 --> 02:07:23,240
Da will ich jetzt http requesten oder hatten die nicht wetter.in hatten die nicht auch irgendeine jason api

1310
02:07:26,400 --> 02:07:28,400
jason

1311
02:07:31,680 --> 02:07:33,680
Detroit das wollen wir haben

1312
02:07:34,680 --> 02:07:36,680
Oder nicht detroit komm

1313
02:07:37,920 --> 02:07:41,490
Frankfurt frankfurt

1314
02:07:43,370 --> 02:07:46,250
Checkt er dass ich das in deutschland mein frankfurter meine alles checkt da

1315
02:07:48,130 --> 02:07:50,530
So funktioniert es schon mal nicht alles klar

1316
02:07:53,230 --> 02:07:55,230
Uri create

1317
02:08:05,700 --> 02:08:09,070
Uri

1318
02:08:09,230 --> 02:08:12,940
Uri

1319
02:08:12,940 --> 02:08:14,940
create

1320
02:08:15,420 --> 02:08:17,420
String

1321
02:08:17,420 --> 02:08:20,540
Okay das funktioniert was ich hier versuche war

1322
02:08:21,420 --> 02:08:23,220
was zu

1323
02:08:23,220 --> 02:08:25,220
war request gleich

1324
02:08:26,820 --> 02:08:29,260
War das jetzt auto rename to

1325
02:08:30,300 --> 02:08:35,160
request

1326
02:08:35,160 --> 02:08:37,600
Warum mache ich da eigentlich ist die kolons hinten dran

1327
02:08:38,440 --> 02:08:49,820
so request

1328
02:08:50,540 --> 02:08:52,540
Kunstnet warum nicht

1329
02:08:52,820 --> 02:08:54,260
weil

1330
02:08:54,260 --> 02:08:58,500
Type mismatch ach so muss ich da irgendwie noch die bild sagen hinten dran

1331
02:09:09,600 --> 02:09:15,320
Also die marken http request http response body handlers of

1332
02:09:17,680 --> 02:09:45,780
What was soll das sein was ist das sind http

1333
02:09:47,300 --> 02:09:49,660
Responses nicht einfach immer bytes

1334
02:09:51,580 --> 02:09:59,580
Ach so das ist okay jetzt verstehe ich könnte das ich könnte quasi das automatisch pausen lassen schon in irgendwas

1335
02:10:00,660 --> 02:10:07,620
Also standardmäßig kriegst du ja bytes zurück so und das kann ich das quasi als utf-8 string interpretieren lassen

1336
02:10:07,700 --> 02:10:12,860
Ich könnte es aber wahrscheinlich auch als irgendein strukt oder oder vielleicht so vielleicht sogar irgendwelche

1337
02:10:13,020 --> 02:10:18,860
Irgendwelches jason pausen lassen an der stelle keine ahnung aber zumindest ich finde ich finde es ein bisschen

1338
02:10:20,340 --> 02:10:22,340
Ja bis ich undurchsichtig

1339
02:10:23,380 --> 02:10:25,380
So jetzt haben wir das gesendet

1340
02:10:25,700 --> 02:10:32,540
Und jetzt okay ganz ehrlich da finde ich den den dort net hat http klein sogar ein bisschen angenehmer in der handhabung

1341
02:10:33,100 --> 02:10:38,380
Weil da kriege ich hier kann ich kann ich euch gleich zeigen da kriege ich hier ein ordentliches response objekt

1342
02:10:38,540 --> 02:10:41,380
Wenn wenn der auch nicht dabei ist als letzter schluss ist ja

1343
02:10:43,460 --> 02:10:45,460
okay brindeln

1344
02:10:45,860 --> 02:10:52,690
brindeln

1345
02:10:52,770 --> 02:10:54,330
Request

1346
02:10:54,330 --> 02:10:56,330
und jetzt kann ich sowas sagen wie

1347
02:10:56,930 --> 02:11:07,280
Anni nicht wie response ja doch doch dann ist es ja ähnlich zu dem dort net klein response

1348
02:11:08,640 --> 02:11:11,880
Body und er ist jetzt ist schon ein string oder wie

1349
02:11:13,840 --> 02:11:22,200
Hä aber wenn man body doch keins dann verstehe ich den sinn davon nicht oder ist checkt er jetzt dass das ein string ist

1350
02:11:23,760 --> 02:11:27,920
Weil ich weiß nicht ob wo er soll ich woher soll ich wissen was body für einen typ ist

1351
02:11:28,920 --> 02:11:33,080
Das sagt mir es ist ein generic type aber nicht was es in diesem fall ist

1352
02:11:34,360 --> 02:11:37,240
Okay, was ist blob für das ist ein string

1353
02:11:37,880 --> 02:11:39,240
okay

1354
02:11:39,240 --> 02:11:43,160
Also er checkt schon dass es ein string ist aber er zeigt es mir hier an der stelle

1355
02:11:44,880 --> 02:11:46,880
Nicht an dass es ein string ist

1356
02:11:47,880 --> 02:11:53,600
Ich weiß woher das kommt also gehe ich mal statt dass es von der aber warum zeigt mir das meine idee nicht an

1357
02:11:53,720 --> 02:11:58,680
Wenn man hier jetzt eigentlich erwartet returns the body beste hilfe fehlermeldung überhaupt

1358
02:11:59,680 --> 02:12:01,680
returns the body

1359
02:12:01,960 --> 02:12:07,190
Also leute es gibt den körper zurück auf gut deutsch

1360
02:12:09,670 --> 02:12:13,630
Ja ich finde körper zurück zurückgebende funktionen sind die besten

1361
02:12:14,630 --> 02:12:16,630
hat nicht funktionierend

1362
02:12:16,630 --> 02:12:22,070
Uri will undy feinski ach so ich muss

1363
02:12:22,150 --> 02:12:26,750
Undy feinski ach so ich muss http ist https

1364
02:12:32,070 --> 02:12:35,430
https

1365
02:12:35,430 --> 02:12:37,430
https

1366
02:12:37,430 --> 02:12:43,070
Chat meinte es funktioniert jetzt muss man kurz ich muss mal kurz was in die e-mails gucken bei mir am zweiten monitor

1367
02:12:47,860 --> 02:12:52,580
Abchecken

1368
02:13:16,470 --> 02:13:22,060
Okay fertig okay check mal was funktioniert

1369
02:13:24,660 --> 02:13:26,660
Funktioniert okay nice

1370
02:13:28,220 --> 02:13:33,260
Jetzt haben wir jetzt haben wir die http response also ich muss sagen ich finde ich finde es aber trotzdem noch ein bisschen ekelig in

1371
02:13:33,260 --> 02:13:38,520
Der bedienung ich zeige euch das jetzt mal parallel wie man das in c-sharp machen würde da würde ich sagen war

1372
02:13:38,860 --> 02:13:43,540
Http wir machen das mal so ähnlich wie hier jetzt http klang new http client

1373
02:13:44,340 --> 02:13:51,180
So hier könnte ich jetzt irgendwelche basics sachen noch setzen am http kleinen standard header oder sowas aber lassen wir das mal lassen wir das mal

1374
02:13:51,180 --> 02:13:53,180
außen vor

1375
02:13:53,180 --> 02:13:58,140
So und jetzt sage ich in dort net einfach http klein get async

1376
02:14:00,020 --> 02:14:02,020
Und dann

1377
02:14:04,140 --> 02:14:06,140
Und dann meine url

1378
02:14:07,140 --> 02:14:09,140
Response so

1379
02:14:09,740 --> 02:14:15,660
Das finde ich doch irgendwie etwas angenehmer und wenn ich das ausgeben will sage ich war

1380
02:14:16,060 --> 02:14:18,060
Ups

1381
02:14:20,540 --> 02:14:26,500
Response ich glaube hier geht es da auch mit content und dann string read as string

1382
02:14:27,540 --> 02:14:31,660
Meine es könnte bestimmt auch noch ein bisschen schöner sein aber insgesamt muss ich sagen

1383
02:14:33,860 --> 02:14:40,700
Oder ja was denkt ihr leute was ist einfach oder was ist angenehmer zu entwickeln so hier oder

1384
02:14:41,700 --> 02:14:44,780
So hier ich meine es ist im prinzip nur eine zeile mehr

1385
02:14:45,940 --> 02:14:49,180
Nimmt sich jetzt nicht viel aber ich finde es von der klarheit her

1386
02:14:49,860 --> 02:14:53,940
In c-sharp tatsächlich ein bisschen angenehmer als hier java standard zeug

1387
02:14:54,820 --> 02:15:00,530
Du kannst noch eine extension function für den http klein schreiben

1388
02:15:01,370 --> 02:15:07,820
die essig

1389
02:15:08,180 --> 02:15:11,300
Du musst nicht essen gewählt machen du könntest theoretisch auch

1390
02:15:12,420 --> 02:15:14,420
so machen

1391
02:15:14,780 --> 02:15:17,620
Wenn du es ohne essen gewählt machen willst kannst du so machen

1392
02:15:19,580 --> 02:15:21,860
Aber es ist halt dafür ausgelegt das stimmt schon

1393
02:15:28,220 --> 02:15:30,940
Macht das ganze mal synchron. Ja hier jetzt ist synchron

1394
02:15:31,820 --> 02:15:42,870
Die zwar ein bisschen ekliger aus gut. Ich meine die ap ist halt rein für s und ausgelegt was wir da machen

1395
02:15:49,020 --> 02:15:52,300
Ich verstehe dieses ganze single welt konzept irgendwie nicht okay

1396
02:15:52,820 --> 02:15:58,180
Also, dann versuche ich das mal ganz kurz zu erklären in java script ist es tatsächlich einfach

1397
02:15:59,140 --> 02:16:03,260
einfacher mit essen gewählt weil in java script

1398
02:16:05,260 --> 02:16:07,260
Hast du nur einen thread

1399
02:16:09,200 --> 02:16:14,920
Jetzt mal du musst dir du musst dir keine gedanken drüber machen ob das irgendwie sich in die quere kommt

1400
02:16:15,160 --> 02:16:21,840
In c-sharp hast du einen thread pool und essen gewählt was du hast quasi beides so ein bisschen kombiniert

1401
02:16:22,320 --> 02:16:24,320
also was das hier macht

1402
02:16:24,360 --> 02:16:28,960
Wir müssten das vielleicht ein bisschen umschreiben nur so zur erklärung was was das hier macht ist folgendes

1403
02:16:29,880 --> 02:16:31,880
Man könnte es vielleicht auch eher

1404
02:16:32,240 --> 02:16:34,240
return await oder so nennen

1405
02:16:38,900 --> 02:16:41,900
also gedacht ist es in der welt dafür dass du

1406
02:16:42,900 --> 02:16:46,900
Asynchronen code schreiben kannst wie synchron

1407
02:16:48,380 --> 02:16:54,020
Und ich nicht selbst um callbacks kümmern musst also ich ich zeig dir das mal ich zeig dir mal was

1408
02:16:55,980 --> 02:16:57,980
Anstatt das mit essen zu machen

1409
02:16:58,260 --> 02:17:03,460
Machen wir mal ein beispiel ich weiß ich hatte ja war auch so was in der richtung wenn ich wenn ich kann man sich das

1410
02:17:03,460 --> 02:17:05,580
Gleiche für java script denken also

1411
02:17:06,180 --> 02:17:09,780
Wir machen das ganze mal ohne essen gewählt okay und auch ohne

1412
02:17:10,700 --> 02:17:17,500
Forciertes synchron sein du könntest ohne await auch sagen continue with

1413
02:17:20,420 --> 02:17:22,420
Response da müssen wir das hier aber wegmachen

1414
02:17:25,540 --> 02:17:28,730
Response

1415
02:17:28,730 --> 02:17:35,610
So das wird ein bisschen ekliger zu lesen aber dann siehst du wahrscheinlich was passiert ja und dann wird zu sagen response

1416
02:17:38,180 --> 02:17:52,220
Hab ich mich irgendwo vertan? ach result muss ich machen ja okay weil es ein task ist

1417
02:17:55,170 --> 02:17:58,170
Response nennen wir es mal so hier irgendwie keine ahnung

1418
02:18:01,530 --> 02:18:04,010
Task wenn es einfach task mal so ist so

1419
02:18:05,010 --> 02:18:08,450
Result response dann würde ich sagen response

1420
02:18:09,930 --> 02:18:11,930
Content

1421
02:18:12,050 --> 02:18:14,050
Response

1422
02:18:14,530 --> 02:18:16,530
Content

1423
02:18:17,610 --> 02:18:21,490
Read a string äh sing und dann würde ich wieder sagen continue with

1424
02:18:23,490 --> 02:18:25,490
Es ist halt ein bisschen eklig

1425
02:18:31,460 --> 02:18:33,460
Cw task 2

1426
02:18:34,540 --> 02:18:35,740
Result

1427
02:18:35,740 --> 02:18:41,620
Oder war output dass man noch besser lesen kann ich kann auch nicht schreiben output gleich

1428
02:18:41,980 --> 02:18:43,980
Task 2 result

1429
02:18:44,220 --> 02:18:48,900
So das ist die synchrone variante ich glaube die versteht man prinzipiell ganz gut

1430
02:18:49,340 --> 02:18:52,380
Was an der stelle die nicht die synchrone die callback variante

1431
02:18:53,100 --> 02:19:00,580
Ich glaube da versteht man relativ gut was von was da ach so ja das könnte tatsächlich auch sein das kann man das machen

1432
02:19:01,180 --> 02:19:07,890
Und was ist task 2 dann ist das gleiche macht keinen unterschied oder

1433
02:19:07,890 --> 02:19:13,130
Also ich glaube dass das ist die die callback variante die versteht man glaube ich ganz gut oder

1434
02:19:14,530 --> 02:19:16,530
Also der macht einen get request

1435
02:19:17,450 --> 02:19:21,370
Wenn der get request fertig ist wird das continue mit aufgerufen

1436
02:19:21,890 --> 02:19:26,770
Dann holen wir uns das result aus dem get request was unsere response ist

1437
02:19:27,730 --> 02:19:29,250
und

1438
02:19:29,250 --> 02:19:31,770
response holen wir uns den content raus

1439
02:19:31,810 --> 02:19:33,810
Holen wir uns den content raus

1440
02:19:34,210 --> 02:19:38,850
Und wollen den als string auslesen allerdings machen wir das auch asynchron mit callback

1441
02:19:38,970 --> 02:19:40,730
Weil es kann ja durchaus sein

1442
02:19:40,730 --> 02:19:43,930
Dass es ein bisschen länger ist und ein bisschen länger dauert oder vielleicht noch zusätzlich

1443
02:19:44,170 --> 02:19:48,650
Sachen geladen werden gerade nachgeladen werden was auch immer das heißt wenn das fertig ist

1444
02:19:50,330 --> 02:19:57,650
Dann sagen wir okay continue with holen wir uns das result und geben es aus ich glaube dark wäre das geschrieben

1445
02:19:58,650 --> 02:20:04,930
Dark side dark side hd also ich glaube in der callback schreibweise versteht man das eigentlich ganz gut was passiert

1446
02:20:05,570 --> 02:20:10,690
Das ist immer wenn fertig dann macht weiter und wenn fertig dann macht weiter ja so

1447
02:20:11,330 --> 02:20:16,650
Und im prinzip ist die ganze s und wait geschehen in dem fall nicht die in dem fall ist es ja

1448
02:20:17,050 --> 02:20:21,530
Brauchst du das s und keyboard nicht sondern nur wait weil das selbst mit s und implementiert ist

1449
02:20:22,090 --> 02:20:24,090
wait macht im prinzip das

1450
02:20:24,450 --> 02:20:29,090
Hier hast du ganz viele callbacks und stelle dir mal vor du machst jetzt hier noch drei weitere asynchrone sachen drinne

1451
02:20:30,850 --> 02:20:34,910
Dann hast du hier ein rückungstiefe bis zum mond

1452
02:20:36,450 --> 02:20:42,770
Eine sache ist in beiden beiden gleich egal ob du das mit wait machst oder mit continue with also in dem fall

1453
02:20:43,210 --> 02:20:49,770
Irgendwann irgendwann hängt das ja also wir sind uns jetzt ja einig wenn ich das hier ausführe ja wenn ich hier unten 123 schreibe

1454
02:20:50,170 --> 02:20:53,450
Dann wird das hier schon ausgeführt wofür das hier fertig ist

1455
02:20:54,210 --> 02:20:58,620
Weil hier das blockt ja nicht

1456
02:21:00,540 --> 02:21:02,540
Und damit das nicht blockt

1457
02:21:03,140 --> 02:21:10,860
Muss im hintergrund ja irgendwas passieren also das kann es also ich muss das anders erklären wenn das hier synchron wäre

1458
02:21:12,100 --> 02:21:15,860
Dann würde jetzt wir machen das mal so hier console readline

1459
02:21:17,740 --> 02:21:19,460
Du wirst jetzt feststellen

1460
02:21:19,460 --> 02:21:26,260
Der wird als erstes ausgeben 1 2 3 hast du es gesehen da gibt als erstes 1 2 3 aus und erst danach

1461
02:21:27,300 --> 02:21:33,440
Gibt er die response aus ist ja logisch weil was passiert an der stelle an der stelle

1462
02:21:33,980 --> 02:21:41,540
Gibt es einen background job der losläuft und den get macht dass das jetzt den get request macht und erst wenn der fertig ist wird

1463
02:21:41,540 --> 02:21:47,220
Dann asynchron kontinuier ist kontinuier ist gemacht das heißt hier wird es quasi geqt die arbeit

1464
02:21:48,140 --> 02:21:52,900
Und dann geht das program ganz normal linear weiter und dann kommt das printline und dann

1465
02:21:53,220 --> 02:21:58,620
Irgendwann ist das fertig und dann geht es weiter mit dem kontinuier das heißt es wird im hintergrund geqt

1466
02:21:58,980 --> 02:22:04,580
Das jetzt hier in der http get request läuft also für quasi also eine asynchrone io operation gemacht

1467
02:22:05,460 --> 02:22:10,700
In javascript ist es relativ einfach weil da gibt es nur einen thread da musst du dir keine gedanken machen ob das jetzt

1468
02:22:11,300 --> 02:22:13,980
Asynchron ist ob das background queues sind ob das

1469
02:22:14,580 --> 02:22:20,500
Tasks und threads und was auch immer sind in c-sharp ist das meistens so dass das ein

1470
02:22:21,020 --> 02:22:23,460
background in backgrounds threadpool gibt

1471
02:22:24,020 --> 02:22:31,340
Und das quasi so eine warteschlange mit ganz vielen threads drinnen die nur warten dass sie was erledigen können für dich im hintergrund

1472
02:22:31,340 --> 02:22:33,340
Und da wird das reingeschmissen

1473
02:22:34,300 --> 02:22:38,300
Und wenn das fertig ist das program läuft da ganz normal weiter und wenn das fertig ist

1474
02:22:38,700 --> 02:22:44,740
Wird dann an der stelle hat continuous und noch mal continuous aufgerufen also ich glaube das versteht man an der stelle ganz gut jetzt ist

1475
02:22:44,740 --> 02:22:45,980
halt das ding

1476
02:22:45,980 --> 02:22:50,300
Dass das ziemlich eklig aussieht und dass das komplett aus dem ruder läuft mit

1477
02:22:50,540 --> 02:22:56,260
Einrückungstiefe wenn ich hier noch mehr solche dinger hättest in javascript sieht das übrigens genau so aus ich bin mir gerade nicht sicher wie das

1478
02:22:56,260 --> 02:22:58,540
in javascript ausschaut wenn man es von hand aufruft

1479
02:23:00,260 --> 02:23:06,850
Denn ist das glaube ich ja hier so mit javascript wäre das so so

1480
02:23:07,730 --> 02:23:15,610
Und erwähnt macht jetzt im prinzip was ähnliches wir kürzen wir kürzen das ganze mal wir geben uns mal wir geben uns mal hiermit

1481
02:23:15,610 --> 02:23:17,610
zufrieden okay

1482
02:23:18,050 --> 02:23:21,050
Wobei ich mache es einfach rückgängig haben wir es ja wieder

1483
02:23:22,770 --> 02:23:25,930
Oh, nee ich kann nicht weiter rückgängig machen das ist hässlich

1484
02:23:27,130 --> 02:23:29,130
monkaS

1485
02:23:33,700 --> 02:23:38,740
Also haben wir das hier await war response gleich

1486
02:23:39,060 --> 02:23:41,060
zack so

1487
02:23:41,060 --> 02:23:45,380
Hier wirst du jetzt auch sehen das erste was passiert, äh quatsch nicht das erste was passiert plötzlich

1488
02:23:48,580 --> 02:23:51,980
Achso ich geb's ja, ich kack noob alter, ich geb's ja gar nicht aus

1489
02:23:53,540 --> 02:23:55,540
Okay da muss man doch mal anwarten, war also hier

1490
02:23:57,660 --> 02:24:02,460
response content read as string

1491
02:24:04,100 --> 02:24:06,820
Await so und jetzt wird dir vielleicht was auffallen

1492
02:24:08,970 --> 02:24:16,170
Tja guck mal da jetzt ist die reihenfolge ja auf einmal so wie wir es dahin geschrieben haben

1493
02:24:17,970 --> 02:24:24,330
Ich glaube du erkennst den unterschied also jetzt passiert wirklich zuerst das und dann das

1494
02:24:25,810 --> 02:24:28,010
Obwohl das eigentlich asynchron sein soll

1495
02:24:29,250 --> 02:24:35,130
Und das ist das was await im endeffekt macht das hier wird ganz normal im background gequeued aber

1496
02:24:35,690 --> 02:24:40,490
Weil der await davor steht passiert an der stelle eigentlich so eine art return

1497
02:24:42,690 --> 02:24:45,890
Ich würde es dir gerne zeigen, aber ich habe keinen decompiler hier

1498
02:24:48,130 --> 02:24:50,330
Ich nenne es mal der whoops

1499
02:24:52,050 --> 02:24:57,970
Der pausiert quasi an der stelle bis der asynchrone call fertig ist deswegen heißt das auch await

1500
02:24:58,410 --> 02:25:01,330
Ich meine return await wäre vielleicht ein bisschen klarer

1501
02:25:02,330 --> 02:25:07,550
Der hört einfach hier nach auf oder der hört quasi an der stelle auf

1502
02:25:08,150 --> 02:25:10,070
führt das im hintergrund aus

1503
02:25:10,070 --> 02:25:16,070
Und wenn das hier fertig ist dann springt er an der stelle wieder rein und macht das weiter das heißt du kannst du kannst

1504
02:25:16,270 --> 02:25:18,270
asynchronen code basteln

1505
02:25:19,230 --> 02:25:24,070
Der sich ein bisschen verhält wie synchroner code in dem beispiel ist es jetzt nicht so

1506
02:25:26,800 --> 02:25:30,360
Nicht so offensichtlich warum das warum das sinnvoll ist

1507
02:25:30,360 --> 02:25:33,440
Wenn du dir jetzt aber vorstellst du hast eine ui anwendung

1508
02:25:34,440 --> 02:25:43,280
Und ui anwendung frieren mal ganz gerne ein wenn die für 20 30 sekunden hängen

1509
02:25:44,600 --> 02:25:50,920
Dann ist das hier natürlich wieder sinnvoll weil dann hängt eine ui anwendung nicht sondern an der stelle hört er einfach mit dem ausführen

1510
02:25:50,920 --> 02:25:52,920
dieser funktion auf

1511
02:25:53,240 --> 02:26:01,370
Aber die ui anwendung kann weiterhin nachrichten empfangen von windows und verarbeiten und hängt dadurch nicht das müssen wir jetzt eigentlich mal demonstrieren

1512
02:26:01,690 --> 02:26:06,170
Man müsste sich es wahrscheinlich wirklich mal in sharp lab angucken da sieht man es vielleicht ganz gut

1513
02:26:07,170 --> 02:26:13,980
Ich glaube da können wir das ganze hier copy paste in dem moment das ist kotten das können wir nicht rein copy pasten

1514
02:26:16,140 --> 02:26:18,140
Das da

1515
02:26:19,340 --> 02:26:22,700
Gucken wir mal ich hoffe man man sieht das man erkennt das gescheit

1516
02:26:25,820 --> 02:26:39,740
Chat ich habe mal eine dumme frage warum muss ich http-client nicht inkluden

1517
02:26:39,740 --> 02:26:50,090
Wo kommt der her ist es ein global using das könnte sein

1518
02:26:51,850 --> 02:27:04,070
Ist das vielleicht auch gott.net macht mir viel zu viel magic in letzter zeit wartet mal

1519
02:27:06,230 --> 02:27:09,110
Nee ist es nicht wo kommt das her

1520
02:27:10,230 --> 02:27:13,270
Ist global import nicht nicht hier drinne mittlerweile

1521
02:27:14,230 --> 02:27:18,550
Na gut was muss ich was muss ich importieren dafür

1522
02:27:19,110 --> 02:27:28,020
Was ist denn system.net

1523
02:27:34,900 --> 02:27:37,860
Okay das ist using system

1524
02:27:44,730 --> 02:27:47,850
Wo ist wo ist wo ist console drinne

1525
02:27:48,970 --> 02:27:55,580
In system console okay okay jetzt haben wir es also das ist jetzt natürlich

1526
02:27:56,620 --> 02:28:01,080
das ist jetzt natürlich

1527
02:28:01,080 --> 02:28:03,080
Kann man das vielleicht groß machen

1528
02:28:04,600 --> 02:28:08,680
Zumindest wird das ganze essen gewählt zeug kann ich oh nee nee oh falscher

1529
02:28:10,520 --> 02:28:12,520
Kann man hier nicht

1530
02:28:12,760 --> 02:28:20,760
Das essen gewählt zeug macht keine großartige also das ist nichts was direkt in der runtime drinne ist unter der haube wird das umgebaut

1531
02:28:21,320 --> 02:28:23,320
Zu das ist jetzt nicht so gut

1532
02:28:23,320 --> 02:28:26,360
Hier wird das hier wird dass geköz

1533
02:28:28,280 --> 02:28:32,360
But the pick lined get get a cent und hier ist die frage

1534
02:28:34,680 --> 02:28:51,210
Weil finde ich falsch

1535
02:28:51,210 --> 02:28:53,210
und hier ist die frage

1536
02:28:53,210 --> 02:28:55,210
if

1537
02:28:55,210 --> 02:28:57,210
der hört hier wirklich auf

1538
02:28:57,210 --> 02:28:59,210
an der stelle

1539
02:28:59,210 --> 02:29:01,210
if not completed

1540
02:29:01,210 --> 02:29:03,210
dann geht der einfach

1541
02:29:03,210 --> 02:29:05,210
raus aus der funktion

1542
02:29:05,210 --> 02:29:11,460
also der hat

1543
02:29:11,460 --> 02:29:13,460
meine main funktion umgebaut

1544
02:29:13,460 --> 02:29:15,460
in was immer wieder aufgerufen

1545
02:29:15,460 --> 02:29:17,460
werden kann

1546
02:29:17,460 --> 02:29:19,460
da musst du dir mal ein video angucken wie das genau

1547
02:29:19,460 --> 02:29:21,460
funktioniert aber ich finde hier sieht man es

1548
02:29:21,460 --> 02:29:23,460
eigentlich schon ganz gut

1549
02:29:23,460 --> 02:29:25,460
das ist ja eindeutig meine main funktion

1550
02:29:25,460 --> 02:29:27,460
die umgebaut wurde zu so einer Art

1551
02:29:27,460 --> 02:29:29,460
async task state machine

1552
02:29:29,460 --> 02:29:31,460
hier passiert

1553
02:29:31,460 --> 02:29:33,460
der eigentliche get request

1554
02:29:33,460 --> 02:29:35,460
so und dann guckt der danach nach

1555
02:29:35,460 --> 02:29:37,460
ist der fertig, es kann ja sein dass der instant fertig ist

1556
02:29:37,460 --> 02:29:39,460
wenn der instant fertig ist kann er weitermachen

1557
02:29:39,460 --> 02:29:41,460
aber in der regel hängt das

1558
02:29:41,460 --> 02:29:43,460
erstmal eine weile, dieser get request

1559
02:29:43,460 --> 02:29:45,460
der braucht eine weile, der guckt

1560
02:29:45,460 --> 02:29:47,460
ist der fertig, ok nein

1561
02:29:47,460 --> 02:29:49,460
der ist höchstwahrscheinlich nicht fertig

1562
02:29:49,460 --> 02:29:51,460
und jetzt

1563
02:29:51,460 --> 02:29:53,460
queter quasi

1564
02:29:53,460 --> 02:29:56,840
den callback

1565
02:29:56,840 --> 02:29:58,840
hierfür wieder und dann returnt er

1566
02:29:58,840 --> 02:30:00,840
das ist auch der grund warum in UI nicht hängen

1567
02:30:00,840 --> 02:30:02,840
bleiben würde

1568
02:30:02,840 --> 02:30:04,840
weil die funktion wird hier an der stelle

1569
02:30:04,840 --> 02:30:06,840
an dem await wirklich, deswegen sag ich ja

1570
02:30:06,840 --> 02:30:08,840
return await wäre ein bisschen klarer

1571
02:30:08,840 --> 02:30:10,840
an der stelle

1572
02:30:10,840 --> 02:30:12,840
das wird tatsächlich

1573
02:30:12,840 --> 02:30:14,840
nicht unterbrochen

1574
02:30:14,840 --> 02:30:16,840
also die wird beendet, das ausführen

1575
02:30:16,840 --> 02:30:18,840
dieser funktion

1576
02:30:18,840 --> 02:30:20,840
und sobald der hier fertig ist

1577
02:30:20,840 --> 02:30:22,840
dann wird das wieder

1578
02:30:22,840 --> 02:30:24,840
aufgerufen

1579
02:30:24,840 --> 02:30:26,840
dann wird wieder move next aufgerufen

1580
02:30:26,840 --> 02:30:28,840
und dann ist es allerdings

1581
02:30:28,840 --> 02:30:30,840
an der stelle so, num ist dann

1582
02:30:30,840 --> 02:30:32,840
ungleich 0, weil das der state

1583
02:30:32,840 --> 02:30:34,840
wahrscheinlich dann 1 ist

1584
02:30:34,840 --> 02:30:36,840
oder sonst was und dann siehst du

1585
02:30:36,840 --> 02:30:38,840
ok, wenn er das nächste mal

1586
02:30:38,840 --> 02:30:40,840
in diese funktion rein springt

1587
02:30:40,840 --> 02:30:42,840
dann wird nicht mehr das hier ausgeführt

1588
02:30:42,840 --> 02:30:44,840
sondern es wird der nächste

1589
02:30:44,840 --> 02:30:46,840
schritt ausgeführt, nämlich

1590
02:30:46,840 --> 02:30:48,840
http response message

1591
02:30:48,840 --> 02:30:50,840
und aus der http response message

1592
02:30:50,840 --> 02:30:52,840
holt er sich den String raus

1593
02:30:52,840 --> 02:30:54,840
das queute er wieder im Hintergrund, er returnt

1594
02:30:54,840 --> 02:30:56,840
aus der Funktion, wenn

1595
02:30:56,840 --> 02:30:58,840
das hier fertig ist, das ist quasi so eine Art

1596
02:30:58,840 --> 02:31:00,840
callback

1597
02:31:00,840 --> 02:31:02,840
wenn der background

1598
02:31:02,840 --> 02:31:04,840
job fertig ist, dann springt er wieder

1599
02:31:04,840 --> 02:31:06,840
hier rein zu move next

1600
02:31:06,840 --> 02:31:08,840
dann ist der state diesmal halt

1601
02:31:08,840 --> 02:31:10,840
nicht num und nicht das hier und das hier

1602
02:31:10,840 --> 02:31:12,840
sondern der state ist dann

1603
02:31:12,840 --> 02:31:14,840
das hier

1604
02:31:14,840 --> 02:31:16,840
oder immer hier, get result

1605
02:31:16,840 --> 02:31:18,840
und hier wird es dann ausgegeben

1606
02:31:18,840 --> 02:31:24,840
also im Prinzip ist das wie die mit den callbacks

1607
02:31:24,840 --> 02:31:26,840
nur

1608
02:31:26,840 --> 02:31:28,840
dass der sich im Hintergrund

1609
02:31:28,840 --> 02:31:30,840
drum kümmert und dafür sorgt

1610
02:31:30,840 --> 02:31:32,840
dass es so aussieht als wäre

1611
02:31:32,840 --> 02:31:34,840
es synchron vom

1612
02:31:34,840 --> 02:31:36,840
eigentlichen Ablauf her

1613
02:31:36,840 --> 02:31:38,840
aber im Hintergrund ist es tatsächlich

1614
02:31:38,840 --> 02:31:40,840
ein background task

1615
02:31:40,840 --> 02:31:42,840
sodass deine UIs nicht

1616
02:31:42,840 --> 02:31:44,840
einfrieren, hab ich jetzt

1617
02:31:44,840 --> 02:31:46,840
beschissen erklärt, aber

1618
02:31:46,840 --> 02:31:48,840
es ist spontan recht

1619
02:31:48,840 --> 02:32:00,410
schwierig zu erklären

1620
02:32:00,410 --> 02:32:02,410
so weiter mit kotlin

1621
02:32:02,410 --> 02:32:04,410
wir müssen jetzt hier mal einen get request machen

1622
02:32:04,410 --> 02:32:06,410
jetzt kommt die

1623
02:32:06,410 --> 02:32:08,410
nächste Frage

1624
02:32:08,410 --> 02:32:10,410
wie passt man jason

1625
02:32:10,410 --> 02:32:12,410
in kotlin

1626
02:32:12,410 --> 02:32:14,410
kotlin jason parser

1627
02:32:14,410 --> 02:32:16,410
how to parse jason in kotlin

1628
02:32:16,410 --> 02:32:18,410
stackoverflow beste

1629
02:32:18,410 --> 02:32:20,410
kotlins

1630
02:32:20,410 --> 02:32:22,410
ne

1631
02:32:22,410 --> 02:32:24,410
ich will eigentlich

1632
02:32:24,410 --> 02:32:26,410
keine Objekte anlegen dafür

1633
02:32:26,410 --> 02:32:30,490
ich weiß gar nicht ob kotlin

1634
02:32:30,490 --> 02:32:32,490
unterstützt, wahrscheinlich

1635
02:32:32,490 --> 02:32:34,490
aber ich weiß nicht wie man das da macht

1636
02:32:34,490 --> 02:32:36,490
die haben bestimmt auch

1637
02:32:36,490 --> 02:32:38,490
sowas in der Richtung

1638
02:32:38,490 --> 02:32:40,490
composing suspending

1639
02:32:40,490 --> 02:32:47,320
functions

1640
02:32:47,320 --> 02:32:49,320
ok, das ist hiq

1641
02:32:49,320 --> 02:32:51,320
shit, ok, aber komm mal

1642
02:32:51,320 --> 02:32:53,320
zu kotlin wieder, wie parse ich

1643
02:32:53,320 --> 02:32:55,320
das denn jetzt als jason

1644
02:32:55,320 --> 02:32:57,320
j object

1645
02:32:57,320 --> 02:32:59,320
hab ich da grad schon gesehen

1646
02:32:59,320 --> 02:33:01,320
netscape

1647
02:33:01,320 --> 02:33:03,320
javascript, moment

1648
02:33:03,320 --> 02:33:05,320
was bin ich denn hier

1649
02:33:05,320 --> 02:33:10,940
sehend, ich glaube nicht

1650
02:33:10,940 --> 02:33:14,310
dass man das braucht, oder

1651
02:33:14,310 --> 02:33:16,310
nee, nee, nee

1652
02:33:16,310 --> 02:33:18,310
kotlin

1653
02:33:18,310 --> 02:33:20,310
parse, ok, da ist doch

1654
02:33:20,310 --> 02:33:22,310
standard library irgendwas eingebaut, oder

1655
02:33:22,310 --> 02:33:24,310
how to parse jason

1656
02:33:24,310 --> 02:33:26,310
in kotlin

1657
02:33:26,310 --> 02:33:28,310
example

1658
02:33:28,310 --> 02:33:30,310
jason serialization

1659
02:33:30,310 --> 02:33:32,310
vielleicht groß geschrieben, ja

1660
02:33:32,310 --> 02:33:34,310
jason, nee, auch nicht

1661
02:33:34,310 --> 02:33:37,620
tchatke, ich guck mal was ihr hier schreibt

1662
02:33:37,620 --> 02:33:41,900
example

1663
02:33:41,900 --> 02:33:43,900
serialization, nee

1664
02:33:43,900 --> 02:33:45,900
ich will es nicht serializen

1665
02:33:45,900 --> 02:33:47,900
ich will es ja, eigentlich will ich

1666
02:33:47,900 --> 02:33:49,900
es noch nicht mal deserializen

1667
02:33:49,900 --> 02:33:54,810
ehrlich gesagt

1668
02:33:54,810 --> 02:33:58,950
ich will es

1669
02:33:58,950 --> 02:34:00,950
eigentlich

1670
02:34:00,950 --> 02:34:05,160
nur parsen und dann

1671
02:34:05,160 --> 02:34:07,160
auf irgendwie ein, zwei Felder

1672
02:34:07,160 --> 02:34:09,160
zugreifen, ich will gar keine extra Klassen oder so

1673
02:34:09,160 --> 02:34:11,160
erstellen

1674
02:34:11,160 --> 02:34:13,160
kotlin x serialization

1675
02:34:13,160 --> 02:34:17,370
serialization

1676
02:34:17,370 --> 02:34:19,370
serializable, dataclass

1677
02:34:19,370 --> 02:34:21,370
data, nee da muss ich das

1678
02:34:21,370 --> 02:34:23,370
jetzt ja nachbauen, das ist jetzt nicht so

1679
02:34:23,370 --> 02:34:25,370
sinn und zweck der Sache

1680
02:34:25,370 --> 02:34:30,920
jason, decode

1681
02:34:30,920 --> 02:34:32,920
from string als data

1682
02:34:32,920 --> 02:34:34,920
gibt das nicht sowas wie dynamic

1683
02:34:34,920 --> 02:34:36,920
object, oder irgendwas

1684
02:34:36,920 --> 02:34:38,920
oder sagen wir mal

1685
02:34:38,920 --> 02:34:46,390
java

1686
02:34:46,390 --> 02:34:48,390
parse jason

1687
02:34:48,390 --> 02:34:50,390
gucken wir wie die das machen

1688
02:34:50,390 --> 02:34:52,390
von 2010 ist vielleicht ein bisschen

1689
02:34:52,390 --> 02:34:56,220
bisschen

1690
02:34:56,220 --> 02:35:00,550
übertrieben

1691
02:35:00,550 --> 02:35:02,550
introduction zu jason java

1692
02:35:02,550 --> 02:35:04,550
dann

1693
02:35:04,550 --> 02:35:06,550
introdukte mich mal

1694
02:35:06,550 --> 02:35:08,550
ich bin immer wieder überrascht wie kompliziert

1695
02:35:08,550 --> 02:35:10,550
wie kompliziert so Sachen manchmal sind

1696
02:35:10,550 --> 02:35:12,550
wenn was

1697
02:35:12,550 --> 02:35:14,550
nicht in der standard library drin ist

1698
02:35:14,550 --> 02:35:18,120
jason object

1699
02:35:18,120 --> 02:35:20,120
ok aber das hab ich doch gar nicht

1700
02:35:20,120 --> 02:35:23,500
was

1701
02:35:23,500 --> 02:35:25,500
yes

1702
02:35:25,500 --> 02:35:29,700
nee

1703
02:35:29,700 --> 02:35:31,700
moment

1704
02:35:31,700 --> 02:35:33,700
hab ich da, wall

1705
02:35:33,700 --> 02:35:35,700
moment was ist der unterschied

1706
02:35:35,700 --> 02:35:39,210
zwischen war und wall

1707
02:35:39,210 --> 02:35:41,210
aha wall

1708
02:35:41,210 --> 02:35:43,210
ist quasi nicht mutable

1709
02:35:43,210 --> 02:35:45,210
und war ist

1710
02:35:45,210 --> 02:35:47,210
ich

1711
02:35:47,210 --> 02:35:49,210
muss sagen ohne scheiß

1712
02:35:49,210 --> 02:35:51,210
ich find das gut

1713
02:35:51,210 --> 02:35:53,210
die kotlin leute haben sich wirklich was

1714
02:35:53,210 --> 02:35:55,210
beigedacht, weil well für value

1715
02:35:55,210 --> 02:35:57,210
kann ich irgendwie verstehen, ändert sich

1716
02:35:57,210 --> 02:35:59,210
nicht, und war für

1717
02:35:59,210 --> 02:36:01,210
variable kann sich ändern

1718
02:36:01,210 --> 02:36:03,210
ist doch eigentlich gar nicht doof oder

1719
02:36:03,210 --> 02:36:12,860
in rust

1720
02:36:12,860 --> 02:36:14,860
muss man glaube ich machen

1721
02:36:14,860 --> 02:36:16,860
also in rust macht man glaube ich

1722
02:36:16,860 --> 02:36:18,860
let blub

1723
02:36:18,860 --> 02:36:20,860
u in 32

1724
02:36:20,860 --> 02:36:22,860
gleich 1 oder so

1725
02:36:22,860 --> 02:36:24,860
korrigiert mich wenn mein rust nicht so

1726
02:36:24,860 --> 02:36:26,860
5 header ist im kopf, aber ich glaube das ist

1727
02:36:26,860 --> 02:36:28,860
in rust, muss man das so machen

1728
02:36:28,860 --> 02:36:30,860
und wenn man das mutable haben will

1729
02:36:30,860 --> 02:36:32,860
muss man das glaube ich in rust sogar so machen

1730
02:36:32,860 --> 02:36:34,860
oder

1731
02:36:34,860 --> 02:36:36,860
oder anstatt let mut

1732
02:36:36,860 --> 02:36:41,510
nee

1733
02:36:41,510 --> 02:36:43,510
so

1734
02:36:43,510 --> 02:36:45,510
dann finde ich das hier

1735
02:36:45,510 --> 02:36:47,510
sogar ansprechender ehrlich gesagt

1736
02:36:47,510 --> 02:36:51,460
so aber

1737
02:36:51,460 --> 02:36:53,460
wie parse ich denn jetzt

1738
02:36:53,460 --> 02:36:55,460
fucking jason, so kompliziert kann das doch nicht sein

1739
02:36:55,460 --> 02:37:02,100
und was soll

1740
02:37:02,100 --> 02:37:19,560
das überhaupt sein

1741
02:37:19,560 --> 02:37:21,560
ja das interessiert mich, parse jason without

1742
02:37:21,560 --> 02:37:25,450
dataclass

1743
02:37:25,450 --> 02:37:27,450
ok das ist ganz gut

1744
02:37:27,450 --> 02:37:29,450
kotlin x serialization

1745
02:37:29,450 --> 02:37:33,590
ja

1746
02:37:33,590 --> 02:37:35,590
das will ich haben, ok

1747
02:37:35,590 --> 02:37:37,590
jason

1748
02:37:37,590 --> 02:37:39,590
parse to jason element

1749
02:37:39,590 --> 02:37:45,080
ok top

1750
02:37:45,080 --> 02:37:49,610
jason

1751
02:37:49,610 --> 02:37:51,610
parse to jason element, response

1752
02:37:51,610 --> 02:37:53,610
body

1753
02:37:53,610 --> 02:37:55,610
die preisfrage ist nur

1754
02:37:55,610 --> 02:37:57,610
woher bekomme ich diese lab

1755
02:37:57,610 --> 02:37:59,610
jetzt, weil

1756
02:37:59,610 --> 02:38:04,780
ja dabei ist die ja anscheinend

1757
02:38:04,780 --> 02:38:10,780
nicht

1758
02:38:10,780 --> 02:38:12,780
kotlin x serialization

1759
02:38:12,780 --> 02:38:18,900
wieso ist der funktionsname

1760
02:38:18,900 --> 02:38:22,540
groß

1761
02:38:22,540 --> 02:38:24,540
wahrscheinlich weil das irgendein objekt ist oder

1762
02:38:24,540 --> 02:38:26,540
und die schreibt man halt so

1763
02:38:26,540 --> 02:38:28,540
wie http klein und halt mit groß

1764
02:38:28,540 --> 02:38:30,540
gibt es denn package

1765
02:38:30,540 --> 02:38:32,540
ja da bin ich gerade am überlegen

1766
02:38:32,540 --> 02:38:34,540
wie geht das

1767
02:38:34,540 --> 02:38:40,540
cradle

1768
02:38:40,540 --> 02:38:47,180
hier is a small example

1769
02:38:47,180 --> 02:38:49,180
ich hätte jetzt gedacht das ist sowas wie standard library

1770
02:38:49,180 --> 02:38:55,620
aber nee anscheinend nicht

1771
02:38:55,620 --> 02:38:57,620
ach mein projekt ist im falschen

1772
02:38:57,620 --> 02:39:02,600
format oder wie

1773
02:39:02,600 --> 02:39:04,600
hä

1774
02:39:04,600 --> 02:39:10,150
what

1775
02:39:10,150 --> 02:39:18,780
no god

1776
02:39:18,780 --> 02:39:20,780
ist jetzt nicht euer ernst oder

1777
02:39:20,780 --> 02:39:22,780
das kann

1778
02:39:22,780 --> 02:39:27,560
kein package manager

1779
02:39:27,560 --> 02:39:29,560
ok das gefällt mir schon mal nicht

1780
02:39:29,560 --> 02:39:34,340
rechtsklick auf dein

1781
02:39:34,340 --> 02:39:36,340
projekt und dann framework hinzufügen

1782
02:39:36,340 --> 02:39:42,150
äh wo

1783
02:39:42,150 --> 02:39:45,590
oder ist das

1784
02:39:45,590 --> 02:39:47,590
was ist überhaupt mein projekt, das hier

1785
02:39:47,590 --> 02:39:50,900
ja ne

1786
02:39:50,900 --> 02:39:52,900
ähm module setting

1787
02:39:52,900 --> 02:39:54,900
libraries

1788
02:39:54,900 --> 02:40:00,390
nee

1789
02:40:00,390 --> 02:40:04,280
nee nee das ist irgendwas anderes

1790
02:40:04,280 --> 02:40:10,540
da gehts jetzt schon los

1791
02:40:10,540 --> 02:40:17,180
was ist denn

1792
02:40:17,180 --> 02:40:19,180
in source, gute frage

1793
02:40:19,180 --> 02:40:21,180
kotlin

1794
02:40:21,180 --> 02:40:25,770
zeug

1795
02:40:25,770 --> 02:40:27,770
nee mein source code ist in source

1796
02:40:27,770 --> 02:40:29,770
würd sagen das hier

1797
02:40:29,770 --> 02:40:31,770
ist mein program

1798
02:40:31,770 --> 02:40:33,770
so

1799
02:40:33,770 --> 02:40:35,770
package manager, structure

1800
02:40:35,770 --> 02:40:37,770
nee wie geht das hier

1801
02:40:37,770 --> 02:40:39,770
bookmarks

1802
02:40:39,770 --> 02:40:41,770
find end, end point

1803
02:40:41,770 --> 02:40:43,770
nee, services

1804
02:40:43,770 --> 02:40:45,770
build, terminal

1805
02:40:45,770 --> 02:40:47,770
es gibt kein, das hat doch

1806
02:40:47,770 --> 02:40:49,770
ein package manager

1807
02:40:49,770 --> 02:40:51,770
java hat doch sowas wie ein package manager

1808
02:40:51,770 --> 02:40:53,770
hab ich das falsche

1809
02:40:53,770 --> 02:40:55,770
vielleicht hab ich auch das falsche

1810
02:40:55,770 --> 02:40:57,770
projekt erstellt

1811
02:40:57,770 --> 02:40:59,770
lass mal kurz gucken

1812
02:40:59,770 --> 02:41:01,770
new, project

1813
02:41:01,770 --> 02:41:11,860
ah ich hab build system

1814
02:41:11,860 --> 02:41:13,860
intelliJ genannt, ich muss build system cradle

1815
02:41:13,860 --> 02:41:15,860
nehmen wahrscheinlich

1816
02:41:15,860 --> 02:41:17,860
oder maven oder

1817
02:41:17,860 --> 02:41:19,860
wo immer

1818
02:41:19,860 --> 02:41:21,860
aber das kann man doch bestimmt

1819
02:41:21,860 --> 02:41:29,910
konverten

1820
02:41:29,910 --> 02:41:31,910
das kann man doch bestimmt konvertieren hier mein

1821
02:41:31,910 --> 02:41:33,910
ich seh aber

1822
02:41:33,910 --> 02:41:35,910
nix dafür, ja da sieht man halt

1823
02:41:35,910 --> 02:41:37,910
dass ich keine ahnung von java zeug hab ne

1824
02:41:37,910 --> 02:41:39,910
gut wir machen das anders

1825
02:41:39,910 --> 02:41:41,910
wir copypasten uns das einfach

1826
02:41:41,910 --> 02:41:43,910
ich mein easy und sagen

1827
02:41:43,910 --> 02:41:50,740
jetzt hier zack

1828
02:41:50,740 --> 02:41:55,780
was, package manager

1829
02:41:55,780 --> 02:41:57,780
äh

1830
02:41:57,780 --> 02:41:59,780
vielleicht konvert

1831
02:42:01,780 --> 02:42:03,780
äh, ich leg das

1832
02:42:03,780 --> 02:42:05,780
jetzt einfach neu an

1833
02:42:05,780 --> 02:42:07,780
new, project

1834
02:42:07,780 --> 02:42:09,780
der real

1835
02:42:09,780 --> 02:42:11,780
java champ

1836
02:42:11,780 --> 02:42:13,780
und jetzt wollen wir kotlin haben

1837
02:42:13,780 --> 02:42:15,780
wir wollen das da haben

1838
02:42:15,780 --> 02:42:20,760
ach guck mal der wählt sogar

1839
02:42:20,760 --> 02:42:22,760
ihr sagt cradle ist für

1840
02:42:22,760 --> 02:42:24,760
die cooleren leute oder wie

1841
02:42:24,760 --> 02:42:26,760
unsupported module

1842
02:42:26,760 --> 02:42:28,760
jdk cradle supports

1843
02:42:28,760 --> 02:42:30,760
jdk

1844
02:42:30,760 --> 02:42:32,760
no

1845
02:42:32,760 --> 02:42:34,760
das ist zu neu

1846
02:42:34,760 --> 02:42:36,760
was ich hab

1847
02:42:36,760 --> 02:42:42,790
maven

1848
02:42:42,790 --> 02:42:48,410
this window

1849
02:42:48,410 --> 02:42:50,410
so und jetzt

1850
02:42:50,410 --> 02:42:52,410
hab ich package manager zeug

1851
02:42:52,410 --> 02:42:56,100
oh, wow

1852
02:42:56,100 --> 02:43:03,900
ist ja gut

1853
02:43:03,900 --> 02:43:15,910
äh

1854
02:43:15,910 --> 02:43:17,910
was hat der jetzt für schmerzen das ging doch eben noch

1855
02:43:17,910 --> 02:43:24,810
hä, das geht doch auch

1856
02:43:24,810 --> 02:43:28,380
hä

1857
02:43:28,380 --> 02:43:30,380
ich benutze das irgendwie falsch

1858
02:43:30,380 --> 02:43:39,260
und wie kriege ich jetzt hier

1859
02:43:39,260 --> 02:43:41,260
package manager mäßig

1860
02:43:41,260 --> 02:43:43,260
add maven dependency

1861
02:43:43,260 --> 02:43:46,570
aha

1862
02:43:48,570 --> 02:43:50,570
und nach was muss ich jetzt tun

1863
02:43:50,570 --> 02:43:52,570
kotlin x serialization

1864
02:43:52,570 --> 02:44:13,900
hä

1865
02:44:13,900 --> 02:44:15,900
ok, ich hab keine ahnung wie das funktioniert

1866
02:44:15,900 --> 02:44:17,900
ja, is shipped with a

1867
02:44:17,900 --> 02:44:19,900
kotlin compiler distribution

1868
02:44:19,900 --> 02:44:21,900
ja

1869
02:44:21,900 --> 02:44:23,900
ja, ja schön

1870
02:44:23,900 --> 02:44:35,530
oh

1871
02:44:35,530 --> 02:44:37,530
machen wir jetzt nochmal das andere auf

1872
02:44:37,530 --> 02:44:39,530
recent projects java champ this window

1873
02:44:39,530 --> 02:44:41,530
guck der funktioniert, da hast du gar keine schmerzen mit

1874
02:44:41,530 --> 02:44:43,530
also was muss ich

1875
02:44:43,530 --> 02:44:53,560
sagen

1876
02:44:53,560 --> 02:44:55,560
auf der einen seite schreiben die hier nur irgendwas von

1877
02:44:55,560 --> 02:44:57,560
vielleicht, vielleicht, vielleicht hier so

1878
02:44:57,560 --> 02:45:06,180
create a project

1879
02:45:06,180 --> 02:45:08,180
ja aber das

1880
02:45:08,180 --> 02:45:10,180
kann ich ja nicht verwenden

1881
02:45:10,180 --> 02:45:12,180
da bin ich, da bin ich zu pp-ger

1882
02:45:12,180 --> 02:45:14,180
für, für

1883
02:45:14,180 --> 02:45:16,180
ach hier ist doch ein setup guide drin

1884
02:45:16,180 --> 02:45:18,180
ok

1885
02:45:18,180 --> 02:45:23,990
was zum

1886
02:45:23,990 --> 02:45:27,750
what

1887
02:45:27,750 --> 02:45:29,750
ok dann öffnen wir das andere, den real java champ

1888
02:45:31,750 --> 02:45:33,750
der aus irgendwelchen gründen mit exakt

1889
02:45:33,750 --> 02:45:35,750
dem gleichen source code hier als rot angezeigt

1890
02:45:35,750 --> 02:45:37,750
wird, ok

1891
02:45:37,750 --> 02:45:39,750
nice

1892
02:45:39,750 --> 02:45:43,960
warum

1893
02:45:43,960 --> 02:45:45,960
wo ist das problem

1894
02:45:45,960 --> 02:45:49,340
ach set language version

1895
02:45:49,340 --> 02:45:51,340
steht das hier, steht das vielleicht hier drin

1896
02:45:51,340 --> 02:45:53,340
soll ich jetzt ernsthaft

1897
02:45:53,340 --> 02:45:55,340
xml bearbeiten um pakete installieren

1898
02:45:55,340 --> 02:45:57,340
zu können

1899
02:45:57,340 --> 02:45:59,340
monkaW

1900
02:45:59,340 --> 02:46:01,340
monkaW

1901
02:46:01,340 --> 02:46:03,340
monkaW

1902
02:46:03,340 --> 02:46:19,640
monkaW

1903
02:46:19,640 --> 02:46:26,600
ich glaubs ja jetzt nicht

1904
02:46:26,600 --> 02:46:29,980
project settings

1905
02:46:29,980 --> 02:46:31,980
tja, wenn ich die finden würde

1906
02:46:31,980 --> 02:46:40,860
so, wo steht hier

1907
02:46:40,860 --> 02:46:42,860
die language version jetzt

1908
02:46:42,860 --> 02:46:44,860
hier

1909
02:46:44,860 --> 02:46:46,860
ne

1910
02:46:46,860 --> 02:46:48,860
wo hat er denn diese language version

1911
02:46:48,860 --> 02:46:50,860
jetzt umgestellt

1912
02:46:50,860 --> 02:46:52,860
boah da hab ich keinen bock drauf man

1913
02:46:52,860 --> 02:46:54,860
ich will kein xml bearbeiten

1914
02:46:54,860 --> 02:46:56,860
ich will einen ordentlichen package manager

1915
02:46:56,860 --> 02:46:58,860
guck mal, ich mein

1916
02:46:58,860 --> 02:47:00,860
man kann sich jetzt drüber streiten

1917
02:47:00,860 --> 02:47:02,860
nougat ist bestimmt nicht der geilste

1918
02:47:02,860 --> 02:47:04,860
package manager auf der welt, aber hier kann ich zum

1919
02:47:04,860 --> 02:47:06,860
beispiel einfach suchen nach

1920
02:47:06,860 --> 02:47:08,860
jason oder so

1921
02:47:08,860 --> 02:47:10,860
und was installieren und dann wird es automatisch

1922
02:47:10,860 --> 02:47:12,860
hinzugefügt und gut ist, was ist das für ein kack

1923
02:47:12,860 --> 02:47:14,860
cargo ist auch nice

1924
02:47:14,860 --> 02:47:22,330
ja, wie kann ich denn

1925
02:47:22,330 --> 02:47:24,330
jetzt überhaupt was hinzufügen

1926
02:47:24,330 --> 02:47:26,330
ich hab jetzt schon gelernt, ich kann jetzt hier hingehen und sagen

1927
02:47:26,330 --> 02:47:28,330
add maven dependency

1928
02:47:28,330 --> 02:47:30,330
ja das ist ja schön und gut

1929
02:47:30,330 --> 02:47:38,380
aber

1930
02:47:38,380 --> 02:47:40,380
ich check das net, was muss ich

1931
02:47:40,380 --> 02:47:42,380
jetzt machen, hier das da

1932
02:47:42,380 --> 02:47:44,380
das da

1933
02:47:44,380 --> 02:47:51,530
das gibt's nicht

1934
02:47:51,530 --> 02:47:58,810
das gibt's nicht

1935
02:47:58,810 --> 02:48:00,810
ne artefact gibt's

1936
02:48:00,810 --> 02:48:02,810
auch nicht

1937
02:48:02,810 --> 02:48:04,810
ach moment

1938
02:48:04,810 --> 02:48:06,810
warum findet er das nicht, wenn ich hier nach suche

1939
02:48:06,810 --> 02:48:08,810
ach doch

1940
02:48:08,810 --> 02:48:10,810
der ist einfach nur, ich bin einfach nur zu langsam

1941
02:48:10,810 --> 02:48:21,030
ja aber das ist doch was anderes

1942
02:48:21,030 --> 02:48:23,030
jetzt, das ist doch nicht das was ich

1943
02:48:23,030 --> 02:48:29,100
haben will

1944
02:48:29,100 --> 02:48:31,100
ah, das was exakt

1945
02:48:31,100 --> 02:48:33,100
guck mal

1946
02:48:33,100 --> 02:48:35,100
das was exakt matcht, steht weiter unten

1947
02:48:35,100 --> 02:48:37,100
das macht jetzt

1948
02:48:37,100 --> 02:48:39,100
gerade keine pluspunkte bei mir

1949
02:48:39,100 --> 02:48:41,100
kann man das quoten oder so

1950
02:48:41,100 --> 02:48:46,010
plus davor

1951
02:48:46,010 --> 02:48:48,010
das geht mir auf den sack

1952
02:48:48,010 --> 02:48:50,010
da hab ich echt kein nerv drauf

1953
02:48:50,010 --> 02:48:52,010
warum eigentlich quoten, weil ich mir mal angucken wollte

1954
02:48:52,010 --> 02:48:59,860
wo ist es denn hier

1955
02:48:59,860 --> 02:49:01,860
serialization

1956
02:49:01,860 --> 02:49:03,860
heißt der krempel doch

1957
02:49:03,860 --> 02:49:05,860
ach hier artefakt id

1958
02:49:05,860 --> 02:49:10,010
ja

1959
02:49:10,010 --> 02:49:12,010
serialization

1960
02:49:12,010 --> 02:49:14,010
jason

1961
02:49:14,010 --> 02:49:16,010
dann, nein jetbrains

1962
02:49:16,010 --> 02:49:20,730
da muss er auch gucken, dass

1963
02:49:20,730 --> 02:49:22,730
er echt das richtige erwischt, ok add

1964
02:49:22,730 --> 02:49:26,550
hat das jetzt funktioniert

1965
02:49:26,550 --> 02:49:33,580
ja nice

1966
02:49:33,580 --> 02:49:35,580
aber oh

1967
02:49:35,580 --> 02:49:44,010
reload maven

1968
02:49:44,010 --> 02:49:49,940
und geht das jetzt auf

1969
02:49:49,940 --> 02:49:51,940
magische art und weise

1970
02:49:51,940 --> 02:49:53,940
ah

1971
02:49:53,940 --> 02:49:55,940
boah ist das eklig man

1972
02:49:55,940 --> 02:49:57,940
aber

1973
02:49:57,940 --> 02:49:59,940
ich mein, wenn man es weiß

1974
02:49:59,940 --> 02:50:01,940
ich glaube man kommt mit klar

1975
02:50:01,940 --> 02:50:03,940
ich mein

1976
02:50:03,940 --> 02:50:05,940
nugget ist nicht so viel anders

1977
02:50:05,940 --> 02:50:07,940
aber schöner integriert, guck mal

1978
02:50:07,940 --> 02:50:09,940
mal angenommen

1979
02:50:09,940 --> 02:50:11,940
da sag ich hier nugget

1980
02:50:11,940 --> 02:50:13,940
und da installieren wir jetzt

1981
02:50:13,940 --> 02:50:15,940
newton soft

1982
02:50:15,940 --> 02:50:17,940
jason zum beispiel

1983
02:50:17,940 --> 02:50:19,940
third party jason

1984
02:50:19,940 --> 02:50:21,940
so und da klick ich hier auf das plus

1985
02:50:21,940 --> 02:50:23,940
hinzufügen install

1986
02:50:23,940 --> 02:50:25,940
und dann ist es da und dann kann ich hier sagen

1987
02:50:25,940 --> 02:50:27,940
j object bla bla bla

1988
02:50:27,940 --> 02:50:29,940
so, das funktioniert

1989
02:50:29,940 --> 02:50:31,940
aber unter der haube, also es ist halt einfach

1990
02:50:31,940 --> 02:50:33,940
schön integriert in die ide

1991
02:50:33,940 --> 02:50:35,940
unter der haube ist das tatsächlich ähnlich

1992
02:50:35,940 --> 02:50:37,940
wie in java gelöst, wenn ich mir das jetzt so überlege

1993
02:50:37,940 --> 02:50:41,510
weil

1994
02:50:41,510 --> 02:50:43,510
das wird auch hier als dependency

1995
02:50:43,510 --> 02:50:45,510
in so einer xml datei geschrieben

1996
02:50:45,510 --> 02:50:47,510
nur dass ich da normalerweise nie reingucken muss

1997
02:50:47,510 --> 02:50:49,510
und es einfach funktioniert

1998
02:50:49,510 --> 02:50:51,510
also

1999
02:50:51,510 --> 02:50:53,510
da gefällt mir ja wirklich alles an

2000
02:50:53,510 --> 02:50:55,510
da gefällt mir ja sogar npm besser

2001
02:50:55,510 --> 02:50:57,510
npm oder ruby gems

2002
02:50:57,510 --> 02:51:01,400
gut zumindest

2003
02:51:01,400 --> 02:51:08,360
wir haben es hinbekommen

2004
02:51:08,360 --> 02:51:10,360
wir haben das jetzt als jason element gepasst

2005
02:51:10,360 --> 02:51:13,800
da ist es doch

2006
02:51:13,800 --> 02:51:15,800
nice

2007
02:51:15,800 --> 02:51:17,800
kann man jetzt hiermit weiter

2008
02:51:17,800 --> 02:51:19,800
kann man jetzt hier so auf elemente zugreifen

2009
02:51:19,800 --> 02:51:21,800
nein natürlich nicht

2010
02:51:21,800 --> 02:51:23,800
das wäre jetzt ja auch zu einfach wenn das

2011
02:51:23,800 --> 02:51:38,380
funktioniert

2012
02:51:38,380 --> 02:51:40,380
und was

2013
02:51:40,380 --> 02:51:44,650
und dann jason object

2014
02:51:44,650 --> 02:51:46,650
und da kann man jetzt

2015
02:51:46,650 --> 02:51:48,650
ah da kann man jetzt drauf zugreifen

2016
02:51:48,650 --> 02:51:53,050
also heißt es im prinzip

2017
02:51:53,050 --> 02:51:55,050
wenn ich sowas wie current condition

2018
02:51:55,050 --> 02:51:57,050
da rausholen will, dann geht das

2019
02:51:57,050 --> 02:52:02,860
ok gut

2020
02:52:02,860 --> 02:52:07,640
current condition pressure

2021
02:52:07,640 --> 02:52:09,640
temperature in Celsius

2022
02:52:09,640 --> 02:52:13,080
ok

2023
02:52:13,080 --> 02:52:15,080
das heißt jetzt will ich sowas hier haben

2024
02:52:15,080 --> 02:52:17,080
temp c

2025
02:52:17,080 --> 02:52:19,080
wie das

2026
02:52:19,080 --> 02:52:21,080
funktioniert nicht

2027
02:52:21,080 --> 02:52:23,080
ich muss jetzt nicht ernsthaft

2028
02:52:23,080 --> 02:52:25,080
nochmal jason object machen oder

2029
02:52:25,080 --> 02:52:29,420
äh

2030
02:52:29,420 --> 02:52:34,140
jetzt habe ich das jetzt aber kaputt

2031
02:52:34,140 --> 02:52:38,220
warum ist es jetzt kaputt

2032
02:52:38,220 --> 02:52:48,950
only safe

2033
02:52:48,950 --> 02:52:50,950
or non null

2034
02:52:50,950 --> 02:52:52,950
assert calls

2035
02:52:52,950 --> 02:52:54,950
are allowed on a nullable

2036
02:52:54,950 --> 02:53:02,940
receive

2037
02:53:02,940 --> 02:53:04,940
kann print line kein null ausgeben

2038
02:53:04,940 --> 02:53:10,940
oder was

2039
02:53:10,940 --> 02:53:14,950
dann verstehe ich es ehrlich gesagt

2040
02:53:14,950 --> 02:53:23,450
gar nicht

2041
02:53:23,450 --> 02:53:29,900
du hast ein array

2042
02:53:29,900 --> 02:53:33,720
du hast recht

2043
02:53:33,720 --> 02:53:35,720
ich habe ein array

2044
02:53:35,720 --> 02:53:37,720
aber das ist richtig

2045
02:53:37,720 --> 02:53:39,720
aber das weiß das ding ja nicht

2046
02:53:39,720 --> 02:53:41,720
an der stelle

2047
02:53:41,720 --> 02:53:43,720
der weiß ja nicht wie die struktur aussieht

2048
02:53:43,720 --> 02:53:45,720
also es würde

2049
02:53:45,720 --> 02:53:47,720
ja aber zu

2050
02:53:47,720 --> 02:53:49,720
kann es daran ja nicht liegen

2051
02:53:49,720 --> 02:54:07,300
ok ich sag

2052
02:54:07,300 --> 02:54:09,300
explizit

2053
02:54:09,300 --> 02:54:11,300
scheiß auf null

2054
02:54:11,300 --> 02:54:13,300
ok gut

2055
02:54:13,300 --> 02:54:15,300
das muss jetzt crashen wahrscheinlich

2056
02:54:15,300 --> 02:54:17,300
weil es das nicht gibt

2057
02:54:17,300 --> 02:54:19,300
ja

2058
02:54:19,300 --> 02:54:21,300
is not

2059
02:54:21,300 --> 02:54:27,560
is not a jason object

2060
02:54:27,560 --> 02:54:29,560
ja ok dann ist richtig

2061
02:54:29,560 --> 02:54:31,560
es ist ein jason array

2062
02:54:31,560 --> 02:54:33,560
und dann den

2063
02:54:33,560 --> 02:54:35,560
index hoffen wir mal dass das jetzt funktioniert

2064
02:54:35,560 --> 02:54:37,560
jawoll

2065
02:54:37,560 --> 02:54:39,560
und da drin kann ich jetzt wieder

2066
02:54:39,560 --> 02:54:41,560
sagen jason das ist ja maximal

2067
02:54:41,560 --> 02:54:43,560
eklig

2068
02:54:43,560 --> 02:54:45,560
kann ich nicht

2069
02:54:45,560 --> 02:54:47,560
temp

2070
02:54:47,560 --> 02:54:49,560
c so machen

2071
02:54:49,560 --> 02:54:51,560
vielleicht so

2072
02:54:51,560 --> 02:54:53,560
so

2073
02:54:53,560 --> 02:54:55,560
och man

2074
02:54:55,560 --> 02:55:01,660
hä

2075
02:55:01,660 --> 02:55:03,660
und da darf ich das wieder machen

2076
02:55:03,660 --> 02:55:05,660
das könnte

2077
02:55:05,660 --> 02:55:07,660
doch genauso gut

2078
02:55:07,660 --> 02:55:09,660
ne das könnte nicht sein weil ich explizit sage

2079
02:55:09,660 --> 02:55:11,660
gib mir den nullten index

2080
02:55:11,660 --> 02:55:13,660
und es würde vorher schon crashen das ist auf jeden fall garantiert

2081
02:55:13,660 --> 02:55:15,660
nicht null

2082
02:55:15,660 --> 02:55:19,990
23

2083
02:55:19,990 --> 02:55:30,090
aber was macht

2084
02:55:30,090 --> 02:55:32,090
denn dann

2085
02:55:32,090 --> 02:55:42,180
punkt

2086
02:55:42,180 --> 02:55:44,180
und wenn es das nicht gibt passiert was

2087
02:55:44,180 --> 02:55:50,440
dann crashed es

2088
02:55:50,440 --> 02:55:52,440
mit ner null pointer exception

2089
02:55:52,440 --> 02:55:54,440
ok mit ner ziemlich miesen

2090
02:55:54,440 --> 02:55:56,440
exception wo keiner weiß was sache ist

2091
02:55:56,440 --> 02:56:01,610
ich mein wie soll ich von der

2092
02:56:01,610 --> 02:56:03,610
exception darauf kommen dass ich hier ein falsches

2093
02:56:03,610 --> 02:56:05,610
jason eingegeben hab

2094
02:56:05,610 --> 02:56:17,240
also ganz ehrlich

2095
02:56:17,240 --> 02:56:19,240
ich

2096
02:56:19,240 --> 02:56:21,240
weiß immer wieder die standard.net library

2097
02:56:21,240 --> 02:56:23,240
und das ökosystem zu schätzen

2098
02:56:23,240 --> 02:56:25,240
da funktioniert vieles einfach so wie man es denkt

2099
02:56:25,240 --> 02:56:27,240
insgesamt finde ich

2100
02:56:27,240 --> 02:56:29,240
ist kotlin wirklich gut durchdacht

2101
02:56:29,240 --> 02:56:31,240
das was wir bis jetzt ausprobiert haben

2102
02:56:31,240 --> 02:56:33,240
das dürften wahrscheinlich eher irgendwelche java

2103
02:56:33,240 --> 02:56:35,240
eigenheiten über plyapsel sein

2104
02:56:35,240 --> 02:56:37,240
ich sag dass es nicht null ist

2105
02:56:37,240 --> 02:56:39,240
ja ich will das gar nicht sagen

2106
02:56:39,240 --> 02:56:41,240
ich will das gar nicht sagen

2107
02:56:41,240 --> 02:56:43,240
ich hätte

2108
02:56:43,240 --> 02:56:45,240
hiermit auch kein problem aber das darf ich ja

2109
02:56:45,240 --> 02:56:47,240
nicht also es wäre durchaus

2110
02:56:47,240 --> 02:56:49,240
ok wenn output null werden kann

2111
02:56:49,240 --> 02:56:53,260
und er sagt ja sogar

2112
02:56:53,260 --> 02:56:55,260
auch output kann theoretisch null sein

2113
02:56:55,260 --> 02:56:59,460
so

2114
02:56:59,460 --> 02:57:01,460
an der stelle hier dann natürlich nicht mehr

2115
02:57:01,460 --> 02:57:05,220
dann crashed es

2116
02:57:05,220 --> 02:57:07,220
das ist trotzdem nicht verkehrt jetzt haben wir die aktuelle

2117
02:57:07,220 --> 02:57:09,220
temperatur da haben wir schon mal

2118
02:57:09,220 --> 02:57:11,220
ein unserer sachen

2119
02:57:11,220 --> 02:57:13,220
jetzt ist die frage wie würde ich beispielsweise

2120
02:57:15,220 --> 02:57:17,220
machen wir mal eine klasse

2121
02:57:17,220 --> 02:57:19,220
klasse

2122
02:57:19,220 --> 02:57:21,220
klasse nennen wir es mal irgendwie

2123
02:57:23,220 --> 02:57:25,220
oder so

2124
02:57:25,220 --> 02:57:27,220
ok das geht

2125
02:57:27,220 --> 02:57:31,690
jetzt wird

2126
02:57:31,690 --> 02:57:33,690
spannend

2127
02:57:33,690 --> 02:57:35,690
kopieren wir das mal kurz

2128
02:57:35,690 --> 02:57:39,640
so

2129
02:57:39,640 --> 02:57:41,640
public

2130
02:57:41,640 --> 02:57:44,950
ich tue jetzt einfach

2131
02:57:44,950 --> 02:57:46,950
einfach mal so als wüsste ich was ich mache

2132
02:57:46,950 --> 02:57:48,950
current

2133
02:57:48,950 --> 02:57:50,950
mach wahrscheinlich get

2134
02:57:50,950 --> 02:57:52,950
current

2135
02:57:52,950 --> 02:57:57,030
temp

2136
02:57:57,030 --> 02:57:59,030
string

2137
02:57:59,030 --> 02:58:03,940
string

2138
02:58:03,940 --> 02:58:05,940
ok so geht das schon mal

2139
02:58:05,940 --> 02:58:07,940
class kotlin

2140
02:58:07,940 --> 02:58:09,940
dann müssen wir uns das in der doku mal

2141
02:58:09,940 --> 02:58:11,940
angucken

2142
02:58:11,940 --> 02:58:13,940
constructor person

2143
02:58:13,940 --> 02:58:15,940
ich hab kein constructor

2144
02:58:15,940 --> 02:58:17,940
init

2145
02:58:17,940 --> 02:58:23,780
nee

2146
02:58:23,780 --> 02:58:25,780
nee ich will ne ganz normale methode bauen

2147
02:58:25,780 --> 02:58:31,140
functions

2148
02:58:31,140 --> 02:58:33,140
muss man ok

2149
02:58:33,140 --> 02:58:35,140
es geht an fun

2150
02:58:35,140 --> 02:58:37,140
fun

2151
02:58:37,140 --> 02:58:39,140
fun

2152
02:58:39,140 --> 02:58:41,140
fun

2153
02:58:41,140 --> 02:58:43,140
und dann den return type

2154
02:58:43,140 --> 02:58:45,140
doppelpunkt

2155
02:58:45,140 --> 02:58:47,140
string

2156
02:58:47,140 --> 02:58:49,140
schon besser

2157
02:58:49,140 --> 02:58:54,570
ist das kein string

2158
02:58:54,570 --> 02:58:56,570
nee das ist

2159
02:58:56,570 --> 02:58:58,570
ein jason element

2160
02:58:58,570 --> 02:59:01,940
nee

2161
02:59:01,940 --> 02:59:03,940
da brauche ich jetzt return

2162
02:59:03,940 --> 02:59:07,770
string

2163
02:59:07,770 --> 02:59:11,140
ok

2164
02:59:11,140 --> 02:59:13,140
wie würden

2165
02:59:13,140 --> 02:59:15,140
properties funktionieren

2166
02:59:15,140 --> 02:59:20,760
achso

2167
02:59:20,760 --> 02:59:22,760
nee das ist schon ok

2168
02:59:22,760 --> 02:59:24,760
also get current temp

2169
02:59:24,760 --> 02:59:26,760
das heißt wir würden hier sowas machen

2170
02:59:26,760 --> 02:59:28,760
war oder hier

2171
02:59:28,760 --> 02:59:30,760
output gleich

2172
02:59:30,760 --> 02:59:32,760
hier nochmal kurz zurück

2173
02:59:32,760 --> 02:59:37,860
classes

2174
02:59:37,860 --> 02:59:39,860
instance

2175
02:59:39,860 --> 02:59:41,860
create instances

2176
02:59:41,860 --> 02:59:43,860
of classes

2177
02:59:43,860 --> 02:59:45,860
ach einfach so ohne new oder irgendwie sowas

2178
02:59:45,860 --> 02:59:47,860
davor einfach groß schreiben

2179
02:59:47,860 --> 02:59:49,860
ok

2180
02:59:49,860 --> 02:59:51,860
also war output

2181
02:59:51,860 --> 02:59:53,860
weather forecast

2182
02:59:53,860 --> 02:59:55,860
so

2183
02:59:55,860 --> 02:59:57,860
und können wir gleich get current temp machen

2184
02:59:57,860 --> 03:00:03,480
wobei

2185
03:00:03,480 --> 03:00:05,480
ich muss mal kurz gucken ob die

2186
03:00:05,480 --> 03:00:07,480
intellij den namen vorschlagen könnte dafür

2187
03:00:07,480 --> 03:00:09,480
nee

2188
03:00:09,480 --> 03:00:21,300
aber das ist ja doof

2189
03:00:21,300 --> 03:00:23,300
ok get current temp output 23

2190
03:00:23,300 --> 03:00:25,300
zack

2191
03:00:25,300 --> 03:00:29,260
nice

2192
03:00:29,260 --> 03:00:31,260
das ist doch naming convention oder

2193
03:00:31,260 --> 03:00:36,490
klein

2194
03:00:36,490 --> 03:00:38,490
ok

2195
03:00:38,490 --> 03:00:40,490
das ist tatsächlich auch wenn es hier

2196
03:00:40,490 --> 03:00:42,490
function heißt

2197
03:00:42,490 --> 03:00:44,490
rename

2198
03:00:44,490 --> 03:00:46,490
warum sollte ich das rename

2199
03:00:46,490 --> 03:00:48,490
was hat er für schmerzen

2200
03:00:48,490 --> 03:00:50,490
function name should start with lowercase

2201
03:00:50,490 --> 03:00:54,120
achso

2202
03:00:54,120 --> 03:00:56,120
aber ich kann es doch bestimmt refactoren

2203
03:00:56,120 --> 03:01:03,210
lassen

2204
03:01:03,210 --> 03:01:05,210
jetzt hat es überall unbenannt

2205
03:01:05,210 --> 03:01:07,210
und es funktioniert auch immer noch

2206
03:01:07,210 --> 03:01:09,210
ja ok gut

2207
03:01:09,210 --> 03:01:11,210
alles klar so haben wir schon die erste

2208
03:01:11,210 --> 03:01:13,210
klasse erstellt

2209
03:01:13,210 --> 03:01:15,210
theoretisch können wir das natürlich noch

2210
03:01:15,210 --> 03:01:17,210
ein bisschen besser machen und zwar

2211
03:01:17,210 --> 03:01:19,210
wir machen ein

2212
03:01:19,210 --> 03:01:24,120
konstruktor

2213
03:01:24,120 --> 03:01:26,120
der

2214
03:01:26,120 --> 03:01:28,120
initialisiert

2215
03:01:28,120 --> 03:01:30,120
das ganze allerdings zu einer

2216
03:01:30,120 --> 03:01:32,120
create

2217
03:01:32,120 --> 03:01:34,120
create property

2218
03:01:34,120 --> 03:01:37,430
macht

2219
03:01:37,430 --> 03:01:46,180
ach das geht auch so

2220
03:01:46,180 --> 03:01:50,200
direkt ok

2221
03:01:50,200 --> 03:01:53,640
nicht schlecht

2222
03:01:53,640 --> 03:01:59,190
ja ist ok

2223
03:01:59,190 --> 03:02:01,190
kann ich mit leben

2224
03:02:01,190 --> 03:02:03,190
falls wir noch mehr Sachen

2225
03:02:03,190 --> 03:02:08,040
damit abfragen

2226
03:02:08,040 --> 03:02:10,040
wollen ist das wahrscheinlich gar nicht so blöd

2227
03:02:10,040 --> 03:02:13,610
ja

2228
03:02:13,610 --> 03:02:15,610
ok ja why not

2229
03:02:15,610 --> 03:02:22,440
gut

2230
03:02:22,440 --> 03:02:24,440
so und jetzt kommt die eigentliche Sache

2231
03:02:24,440 --> 03:02:26,440
wie machen wir ordentliches

2232
03:02:26,440 --> 03:02:28,440
command line parsing mit

2233
03:02:28,440 --> 03:02:34,890
kotlin

2234
03:02:34,890 --> 03:02:36,890
also http requests und so weiß ich

2235
03:02:36,890 --> 03:02:38,890
aber was gibt es

2236
03:02:38,890 --> 03:02:40,890
ok kotlin

2237
03:02:40,890 --> 03:02:42,890
cli parser

2238
03:02:42,890 --> 03:02:44,890
kotlin

2239
03:02:44,890 --> 03:02:46,890
xcli ah das ist auch wieder sowas

2240
03:02:46,890 --> 03:02:50,840
offizielles

2241
03:02:50,840 --> 03:02:52,840
pure kotlin implementation with generic cli parser

2242
03:02:52,840 --> 03:02:54,840
i

2243
03:02:54,840 --> 03:02:59,300
wieder so

2244
03:02:59,300 --> 03:03:11,130
komische dinger

2245
03:03:11,130 --> 03:03:13,130
ok das sieht abfuck kompliziert aus

2246
03:03:13,130 --> 03:03:17,140
aber es

2247
03:03:17,140 --> 03:03:19,140
generiert hilfe texten

2248
03:03:19,140 --> 03:03:25,460
automatisch

2249
03:03:25,460 --> 03:03:27,460
wir brauchen erstmal

2250
03:03:27,460 --> 03:03:29,460
ach nee haben wir schon

2251
03:03:29,460 --> 03:03:31,460
ok parser

2252
03:03:31,460 --> 03:03:35,100
arc parser

2253
03:03:35,100 --> 03:03:37,100
dann probieren wir das nochmal

2254
03:03:37,100 --> 03:03:39,100
arc parser

2255
03:03:39,100 --> 03:03:41,100
add maven dependency

2256
03:03:41,100 --> 03:03:43,100
und unsere

2257
03:03:43,100 --> 03:03:45,100
dependency ist kotlin

2258
03:03:45,100 --> 03:03:47,100
xcli jvm

2259
03:03:47,100 --> 03:03:49,100
nee

2260
03:03:49,100 --> 03:03:52,790
nice

2261
03:03:52,790 --> 03:03:56,620
es doch

2262
03:03:56,620 --> 03:03:58,620
ok ich

2263
03:03:58,620 --> 03:04:00,620
lerne langsam java package manager

2264
03:04:00,620 --> 03:04:05,140
und jetzt

2265
03:04:05,140 --> 03:04:07,140
muss ich sagen maven

2266
03:04:07,140 --> 03:04:09,140
reload

2267
03:04:09,140 --> 03:04:11,140
und dann

2268
03:04:11,140 --> 03:04:13,140
ach leute so schlimm ist das doch gar

2269
03:04:13,140 --> 03:04:15,140
nicht mit dem package manager

2270
03:04:15,140 --> 03:04:17,140
das geht doch sogar halbwegs

2271
03:04:17,140 --> 03:04:19,140
wenn man sich daran gewöhnt hat

2272
03:04:19,140 --> 03:04:21,140
da habe ich schon schlimmeres gesehen

2273
03:04:21,140 --> 03:04:26,120
zb c++ header files

2274
03:04:26,120 --> 03:04:28,120
ok proc name ist natürlich der

2275
03:04:28,120 --> 03:04:30,120
real java champ

2276
03:04:30,120 --> 03:04:32,120
meckert er jetzt schon

2277
03:04:32,120 --> 03:04:34,120
gleich wenn ich das hier ausführe? nee

2278
03:04:36,120 --> 03:04:38,120
intelligent integriert das ganz gut

2279
03:04:38,120 --> 03:04:40,120
ja finde ich auch

2280
03:04:40,120 --> 03:04:42,120
ok und wie funzt das jetzt

2281
03:04:42,120 --> 03:04:44,120
parser parse input

2282
03:04:44,120 --> 03:04:46,120
option option option

2283
03:04:46,120 --> 03:04:48,120
parser parse arcs

2284
03:04:48,120 --> 03:04:50,120
das ist das was ich machen will

2285
03:04:52,120 --> 03:04:54,120
es gibt zwar keine arcs zu parsen

2286
03:04:54,120 --> 03:04:56,120
bisher aber das macht ja nix

2287
03:04:56,120 --> 03:04:58,120
haben wir hier mal

2288
03:04:58,120 --> 03:05:14,740
einen return drunter

2289
03:05:14,740 --> 03:05:16,740
ja im vergleich zu c++ geht das wirklich noch klar

2290
03:05:16,740 --> 03:05:18,740
so

2291
03:05:18,740 --> 03:05:20,740
jetzt ist natürlich die preisfrage

2292
03:05:20,740 --> 03:05:22,740
wie kriege ich das gestartet mit

2293
03:05:22,740 --> 03:05:24,740
hier

2294
03:05:24,740 --> 03:05:26,740
run with parameters

2295
03:05:26,740 --> 03:05:30,440
das ist halt dumm

2296
03:05:30,440 --> 03:05:32,440
deswegen würde ich es halt gerne über cli direkt starten

2297
03:05:34,440 --> 03:05:36,440
program arguments

2298
03:05:36,440 --> 03:05:38,440
minus minus blub

2299
03:05:38,440 --> 03:05:40,440
oder sag mal so

2300
03:05:40,440 --> 03:05:42,440
minus minus temp

2301
03:05:49,210 --> 03:05:51,210
local

2302
03:05:51,210 --> 03:05:53,210
es ist jetzt nicht als würde ich wirklich was

2303
03:05:53,210 --> 03:05:55,210
sinnvolles machen damit

2304
03:05:55,210 --> 03:05:57,210
so

2305
03:05:57,210 --> 03:05:59,210
parse

2306
03:05:59,210 --> 03:06:01,210
ach guck mal jetzt sagt er mir auch

2307
03:06:01,210 --> 03:06:03,210
anon option minus minus local

2308
03:06:03,210 --> 03:06:05,210
da funktioniert schon mal prinzipiell

2309
03:06:05,210 --> 03:06:07,210
der

2310
03:06:07,210 --> 03:06:09,210
parser champ

2311
03:06:09,210 --> 03:06:11,210
jetzt kann ich eine neue option

2312
03:06:11,210 --> 03:06:13,210
hinzufügen

2313
03:06:13,210 --> 03:06:15,210
die minus minus local heisst

2314
03:06:15,210 --> 03:06:17,210
weil

2315
03:06:17,210 --> 03:06:19,210
input by parser option

2316
03:06:21,210 --> 03:06:23,210
arc type string import

2317
03:06:23,210 --> 03:06:25,210
required

2318
03:06:27,210 --> 03:06:29,210
single nullable option required

2319
03:06:29,210 --> 03:06:31,210
alles klar

2320
03:06:31,210 --> 03:06:33,210
input by

2321
03:06:33,210 --> 03:06:35,210
by

2322
03:06:35,210 --> 03:06:37,210
ok die syntax verwirrt mich jetzt

2323
03:06:37,210 --> 03:06:39,210
input by

2324
03:06:39,210 --> 03:06:41,210
ist das sowas wie ein using

2325
03:06:41,210 --> 03:06:50,470
so ein bisschen

2326
03:06:50,470 --> 03:06:53,780
what does by keyword mean

2327
03:06:53,780 --> 03:06:55,780
you can understand by

2328
03:06:55,780 --> 03:06:57,780
as provided by

2329
03:06:57,780 --> 03:07:02,060
ja ach

2330
03:07:02,060 --> 03:07:06,010
aber warum nicht so

2331
03:07:06,010 --> 03:07:11,500
moment

2332
03:07:11,500 --> 03:07:16,220
ist das etwa das gleiche

2333
03:07:16,220 --> 03:07:19,530
oder ist das was anderes

2334
03:07:19,530 --> 03:07:21,530
dann check ich es nicht so

2335
03:07:21,530 --> 03:07:28,550
ganz

2336
03:07:32,180 --> 03:07:35,560
dann check ich es nicht so ganz

2337
03:07:35,560 --> 03:07:37,560
nun gut wir nehmen das einfach mal zur

2338
03:07:37,560 --> 03:07:44,650
kenntnis

2339
03:07:44,650 --> 03:07:46,650
short name minus l

2340
03:07:46,650 --> 03:07:48,650
aber wo kann ich

2341
03:07:48,650 --> 03:07:50,650
moment

2342
03:07:50,650 --> 03:07:52,650
wo kann ich denn sagen long

2343
03:07:54,650 --> 03:07:56,650
wenn ich nicht short name haben will

2344
03:07:56,650 --> 03:07:58,650
sondern tatsächlich

2345
03:07:58,650 --> 03:08:00,650
ach full name

2346
03:08:00,650 --> 03:08:02,650
hier

2347
03:08:02,650 --> 03:08:04,650
local

2348
03:08:04,650 --> 03:08:13,340
jetzt sollte er es ja eigentlich checken

2349
03:08:13,340 --> 03:08:15,340
no value for local

2350
03:08:15,340 --> 03:08:17,340
ok

2351
03:08:17,340 --> 03:08:19,340
da muss ich ihm jetzt noch sagen

2352
03:08:19,340 --> 03:08:21,340
dass der arc type

2353
03:08:21,340 --> 03:08:23,340
bool ist

2354
03:08:23,340 --> 03:08:25,340
vermutlich

2355
03:08:25,340 --> 03:08:27,340
dass er nicht eine option

2356
03:08:27,340 --> 03:08:29,340
haben will

2357
03:08:29,340 --> 03:08:31,340
ja nice

2358
03:08:31,340 --> 03:08:39,260
ok

2359
03:08:39,260 --> 03:08:41,260
bin mir nicht so ganz sicher ob das alles

2360
03:08:41,260 --> 03:08:43,260
so

2361
03:08:43,260 --> 03:08:45,260
eifertig ist wie ich das mache

2362
03:08:45,260 --> 03:08:47,260
formatieren wir mal

2363
03:08:47,260 --> 03:08:49,260
neu

2364
03:08:49,260 --> 03:08:51,260
reformat

2365
03:08:53,260 --> 03:08:55,260
so jetzt haben wir den ganzen

2366
03:08:55,260 --> 03:08:57,260
gepasst

2367
03:08:57,260 --> 03:08:59,260
und jetzt kann ich gucken

2368
03:08:59,260 --> 03:09:01,260
letztendlich will ich ja nichts sinnvolles machen

2369
03:09:01,260 --> 03:09:03,260
ich will es ja einfach nur mal ausprobieren

2370
03:09:03,260 --> 03:09:05,260
aber da machen wir den ganzen

2371
03:09:05,260 --> 03:09:07,260
mit den Listen mal weg

2372
03:09:07,260 --> 03:09:09,260
das brauchen wir nicht

2373
03:09:09,260 --> 03:09:11,260
local

2374
03:09:11,260 --> 03:09:15,020
option

2375
03:09:15,020 --> 03:09:17,020
so dann geben wir das für frankfurt

2376
03:09:17,020 --> 03:09:23,020
an

2377
03:09:23,020 --> 03:09:25,020
klammern drum herum

2378
03:09:25,020 --> 03:09:27,020
ne

2379
03:09:27,020 --> 03:09:29,020
was ist zeile verschieben in intellij

2380
03:09:29,020 --> 03:09:31,020
standardmäßig

2381
03:09:31,020 --> 03:09:33,020
so jetzt sollte

2382
03:09:33,020 --> 03:09:35,020
wieder die gleiche ausgabe kommen wie eben

2383
03:09:35,020 --> 03:09:37,020
ja 26 26 grad hier ok

2384
03:09:37,020 --> 03:09:39,020
nice

2385
03:09:39,020 --> 03:09:41,020
moin

2386
03:09:41,020 --> 03:09:43,020
wie gehts

2387
03:09:43,020 --> 03:09:45,020
sauber

2388
03:09:45,020 --> 03:09:47,020
aber es ist nicht so schlecht

2389
03:09:47,020 --> 03:09:49,020
bis jetzt überzeugts mich

2390
03:09:51,020 --> 03:09:51,860
also was geht ist es

2391
03:09:51,860 --> 03:09:53,860
sehr gut

2392
03:09:57,190 --> 03:09:57,910
warum

2393
03:09:57,910 --> 03:09:58,870
quote der überhaupt

2394
03:09:58,870 --> 03:10:00,350
die sonst

2395
03:10:00,350 --> 03:10:01,350
hier das soll der gar nicht

2396
03:10:01,350 --> 03:10:07,030
machen

2397
03:10:07,030 --> 03:10:13,100
auf dem

2398
03:10:13,100 --> 03:10:15,100
freeze

2399
03:10:15,100 --> 03:10:17,100
blanch

2400
03:10:17,100 --> 03:10:19,100
das blau

2401
03:10:19,100 --> 03:10:25,420
warum kommt

2402
03:10:25,420 --> 03:10:27,420
Wo kommen die Quotes her?

2403
03:10:27,420 --> 03:10:42,180
Muss ich vielleicht nochmal sagen,

2404
03:10:42,180 --> 03:10:44,180
JSON Object to String?

2405
03:10:44,180 --> 03:10:46,180
Das ist dann, dass es weg ist?

2406
03:10:46,180 --> 03:10:48,180
Naja, du bist null.

2407
03:10:58,790 --> 03:11:00,790
Es ist auch kein JSON Object,

2408
03:11:00,790 --> 03:11:02,790
sondern JSON Value.

2409
03:11:02,790 --> 03:11:06,230
JSON Primitive.

2410
03:11:06,230 --> 03:11:08,230
Ne.

2411
03:11:08,230 --> 03:11:10,230
Okay, aus irgendwelchen Gründen ist da der Meinung,

2412
03:11:10,230 --> 03:11:12,230
dass in dem Response

2413
03:11:12,230 --> 03:11:14,230
weiter gequotet sein muss.

2414
03:11:14,230 --> 03:11:17,860
Meinst du, es steht einfach so im JSON drin?

2415
03:11:17,860 --> 03:11:19,860
Wollen wir mal.

2416
03:11:19,860 --> 03:11:21,860
Bam. Ups.

2417
03:11:21,860 --> 03:11:23,860
Bam.

2418
03:11:23,860 --> 03:11:25,860
Grab minus I.

2419
03:11:25,860 --> 03:11:27,860
Temp.

2420
03:11:27,860 --> 03:11:29,860
Temp C.

2421
03:11:29,860 --> 03:11:31,860
Nö, steht's nicht drin.

2422
03:11:31,860 --> 03:11:33,860
Das ist ganz normal, dass JSON,

2423
03:11:33,860 --> 03:11:35,860
wenn das gepasst wird als String,

2424
03:11:35,860 --> 03:11:37,860
dann ist das der Value.

2425
03:11:37,860 --> 03:11:39,860
Und die Quotes sind vom...

2426
03:11:39,860 --> 03:11:41,860
Ja, von der Syntax.

2427
03:11:41,860 --> 03:11:43,860
Also eigentlich müsste

2428
03:11:43,860 --> 03:11:45,860
nur 26 drin stehen.

2429
03:11:45,860 --> 03:11:47,860
Ach, muss man sagen,

2430
03:11:47,860 --> 03:11:49,860
S-String?

2431
03:11:49,860 --> 03:11:53,560
Ist das überhaupt ein Unterschied?

2432
03:11:53,560 --> 03:11:55,560
Das wird kein Int.

2433
03:11:55,560 --> 03:11:57,560
Cannot be cast.

2434
03:11:57,560 --> 03:11:59,560
Ja. Nope.

2435
03:11:59,560 --> 03:12:03,900
Genau.

2436
03:12:03,900 --> 03:12:05,900
Wenn's ein Int wäre, könnte in JSON auch

2437
03:12:05,900 --> 03:12:10,300
ohne Quotes stehen.

2438
03:12:10,300 --> 03:12:12,300
Aber ist es nicht. Aber trotzdem ist es falsch.

2439
03:12:12,300 --> 03:12:14,300
Das ist nicht das, was ich haben will.

2440
03:12:14,300 --> 03:12:16,300
Ich will den Wert haben

2441
03:12:16,300 --> 03:12:18,300
als String 26

2442
03:12:18,300 --> 03:12:20,300
ohne die Quotes. Die Quotes gehören da auf jeden Fall

2443
03:12:20,300 --> 03:12:22,300
nicht dabei. Ich vermute mal,

2444
03:12:22,300 --> 03:12:24,300
dass toString eine...

2445
03:12:24,300 --> 03:12:26,300
Ja, wie soll man sagen? Eine...

2446
03:12:28,300 --> 03:12:30,300
Kommandla... Also eine lockbare

2447
03:12:30,300 --> 03:12:32,300
Repräsentation davon

2448
03:12:32,300 --> 03:12:34,300
sein soll. Und nicht

2449
03:12:34,300 --> 03:12:36,300
den Wert. Das heißt, ich brauche jetzt

2450
03:12:36,300 --> 03:12:38,300
eigentlich den Value. Gibt es hier Value oder

2451
03:12:38,300 --> 03:12:40,300
sowas?

2452
03:12:40,300 --> 03:12:42,300
Was ich bauen will? Nichts. Großartig.

2453
03:12:42,300 --> 03:12:46,120
Ich will einfach nur ein bisschen rumprobieren.

2454
03:12:46,120 --> 03:12:55,320
Hm.

2455
03:12:55,320 --> 03:13:00,420
Long is String?

2456
03:13:00,420 --> 03:13:02,420
Content. Das will ich vielleicht

2457
03:13:02,420 --> 03:13:04,420
haben. Das könnte

2458
03:13:04,420 --> 03:13:11,510
sein. Aha!

2459
03:13:13,510 --> 03:13:15,510
Sehr schön.

2460
03:13:15,510 --> 03:13:17,510
So muss man das machen.

2461
03:13:17,510 --> 03:13:19,510
Da sind auch keine Quotes dabei. Siehste?

2462
03:13:19,510 --> 03:13:21,510
Mal kurz drüber nachgedacht.

2463
03:13:21,510 --> 03:13:23,510
Easy.

2464
03:13:23,510 --> 03:13:26,820
So, if local?

2465
03:13:26,820 --> 03:13:28,820
Ja gut. Also, das mit dem... Ich muss sagen,

2466
03:13:28,820 --> 03:13:30,820
der Commandline-Parser, der macht so schon mal

2467
03:13:30,820 --> 03:13:32,820
gar keinen so üblen Eindruck.

2468
03:13:32,820 --> 03:13:38,310
Ich hab ne Idee.

2469
03:13:38,310 --> 03:13:40,310
Wir sind blöd.

2470
03:13:40,310 --> 03:13:42,310
Wir sagen hier nicht isBool, sondern wir sagen

2471
03:13:42,310 --> 03:13:44,310
isString.

2472
03:13:44,310 --> 03:13:54,340
Und...

2473
03:13:54,340 --> 03:13:56,340
Ja. Genau, so machen wir das.

2474
03:13:56,340 --> 03:13:58,340
Und wenn

2475
03:13:58,340 --> 03:14:02,550
ungleich null...

2476
03:14:02,550 --> 03:14:04,550
Also ich geh mal davon aus...

2477
03:14:04,550 --> 03:14:06,550
isAlwaysTrue?

2478
03:14:06,550 --> 03:14:08,550
Wie ist

2479
03:14:08,550 --> 03:14:16,340
alwaysTrue?

2480
03:14:16,340 --> 03:14:18,340
Ach, ich sag ja required da hinten.

2481
03:14:18,340 --> 03:14:20,340
Ist ja gar nicht required.

2482
03:14:20,340 --> 03:14:22,340
Ja. Genau.

2483
03:14:22,340 --> 03:14:24,340
Also, wenn localOption

2484
03:14:24,340 --> 03:14:26,340
gesetzt ist, dann

2485
03:14:26,340 --> 03:14:28,340
will ich das

2486
03:14:28,340 --> 03:14:30,340
übergeben als

2487
03:14:30,340 --> 03:14:32,340
Ort. Da können wir nämlich aber gleich gucken,

2488
03:14:32,340 --> 03:14:34,340
wie man Parameter

2489
03:14:34,340 --> 03:14:36,340
übergibt. Jetzt will

2490
03:14:36,340 --> 03:14:38,340
ich currentTemperature haben für...

2491
03:14:38,340 --> 03:14:42,170
Theoretisch ist das

2492
03:14:42,170 --> 03:14:44,170
sogar im Constructor besser aufgehoben.

2493
03:14:44,170 --> 03:14:47,930
Constructor

2494
03:14:47,930 --> 03:14:49,930
für...

2495
03:14:49,930 --> 03:14:51,930
Moment,

2496
03:14:51,930 --> 03:14:53,930
das ging doch anders. Das ging doch hier oben schon

2497
03:14:53,930 --> 03:14:55,930
irgendwie drin.

2498
03:14:55,930 --> 03:14:57,930
String. Ja, genau.

2499
03:14:57,930 --> 03:14:59,930
Also quasi

2500
03:14:59,930 --> 03:15:01,930
Location.

2501
03:15:01,930 --> 03:15:06,260
Und jetzt

2502
03:15:06,260 --> 03:15:14,760
machen wir hier

2503
03:15:14,760 --> 03:15:16,760
DollarLocation. Ne, so funktioniert das nicht.

2504
03:15:16,760 --> 03:15:26,470
Hm.

2505
03:15:26,470 --> 03:15:28,470
Was? Wall?

2506
03:15:28,470 --> 03:15:34,540
Ach ja.

2507
03:15:34,540 --> 03:15:36,540
Übrigens, das wollen die in der nächsten C-Sharp

2508
03:15:36,540 --> 03:15:38,540
Version auch einführen. So was ähnliches wie

2509
03:15:38,540 --> 03:15:46,390
das hier. Aber okay.

2510
03:15:46,390 --> 03:15:52,520
Besser wäre

2511
03:15:52,520 --> 03:15:54,520
ein was? Required?

2512
03:15:54,520 --> 03:15:58,020
Ah ne, ein

2513
03:15:58,020 --> 03:16:00,020
was? Ein Default

2514
03:16:00,020 --> 03:16:02,020
Pulse.

2515
03:16:02,020 --> 03:16:04,020
Ne, ein Default

2516
03:16:04,020 --> 03:16:06,020
0, oder?

2517
03:16:06,020 --> 03:16:08,020
Ne.

2518
03:16:08,020 --> 03:16:13,130
Das ist doch ein String jetzt.

2519
03:16:13,130 --> 03:16:16,820
Ich will das doch nicht bool machen.

2520
03:16:16,820 --> 03:16:18,820
Ich will, dass man

2521
03:16:18,820 --> 03:16:20,820
Parameter übergeben kann. Ne, das erscheint

2522
03:16:20,820 --> 03:16:22,820
mir so schon...

2523
03:16:22,820 --> 03:16:24,820
Was hat er jetzt für Schmerzen?

2524
03:16:24,820 --> 03:16:31,020
Ah! Kann ich jetzt

2525
03:16:31,020 --> 03:16:33,020
sowas hier machen?

2526
03:16:33,020 --> 03:16:35,020
Hm.

2527
03:16:35,020 --> 03:16:37,020
Und wie war das? So?

2528
03:16:37,020 --> 03:16:39,020
Ah, guck mal, ich hab was

2529
03:16:39,020 --> 03:16:41,020
gelernt. Null. Also, wenn das

2530
03:16:41,020 --> 03:16:43,020
Null ist, dann

2531
03:16:43,020 --> 03:16:45,020
soll das auf

2532
03:16:45,020 --> 03:16:47,020
was weiß ich

2533
03:16:47,020 --> 03:16:49,020
Berlin

2534
03:16:49,020 --> 03:16:51,020
oder so gehen. Okay.

2535
03:16:51,020 --> 03:16:53,020
Es muss ja keinen großen Sinn ergeben,

2536
03:16:53,020 --> 03:17:02,600
was wir hier bauen.

2537
03:17:02,600 --> 03:17:04,600
Ach so, ja. Hä?

2538
03:17:04,600 --> 03:17:06,600
Ach so, ja.

2539
03:17:06,600 --> 03:17:08,600
Ach so, ja. Ich hab's ja angegeben.

2540
03:17:08,600 --> 03:17:10,600
Okay, Input File hier.

2541
03:17:10,600 --> 03:17:16,920
Location. Kann man

2542
03:17:16,920 --> 03:17:18,920
sagen Default?

2543
03:17:18,920 --> 03:17:20,920
Irgendwie so?

2544
03:17:20,920 --> 03:17:22,920
Oder Default Frankfurt?

2545
03:17:22,920 --> 03:17:24,920
Ja, Berlin ist so ein Drecksloch.

2546
03:17:24,920 --> 03:17:26,920
Da will man

2547
03:17:26,920 --> 03:17:28,920
nicht als Default haben.

2548
03:17:28,920 --> 03:17:32,740
Okay, so geht das auch.

2549
03:17:32,740 --> 03:17:34,740
So, jetzt hab ich natürlich Location angegeben.

2550
03:17:34,740 --> 03:17:36,740
Was ja keinen Sinn macht.

2551
03:17:36,740 --> 03:17:38,740
Also, gehen wir mal Location an.

2552
03:17:38,740 --> 03:17:42,890
Local. Tja.

2553
03:17:42,890 --> 03:17:44,890
Äh.

2554
03:17:44,890 --> 03:17:46,890
Berlin. So.

2555
03:17:46,890 --> 03:17:48,890
Zack.

2556
03:17:48,890 --> 03:17:50,890
Und jetzt kriegen wir

2557
03:17:50,890 --> 03:17:52,890
Temperaturen in Berlin sind

2558
03:17:52,890 --> 03:17:57,100
Post Champ.

2559
03:17:59,100 --> 03:18:11,560
Äh. Wurde ich grad

2560
03:18:11,560 --> 03:18:13,560
gerate limited?

2561
03:18:13,560 --> 03:18:15,560
Okay, das sind 21.

2562
03:18:15,560 --> 03:18:17,560
Alles klar. Nice.

2563
03:18:17,560 --> 03:18:19,560
Gut, jetzt wissen wir schon mal

2564
03:18:19,560 --> 03:18:21,560
Bescheid, wie das funktioniert.

2565
03:18:21,560 --> 03:18:23,560
Und jetzt kommt die große Preisfrage.

2566
03:18:23,560 --> 03:18:25,560
Was passiert, wenn ich

2567
03:18:25,560 --> 03:18:30,020
die alle wieder rausschmeiße?

2568
03:18:30,020 --> 03:18:32,020
26.

2569
03:18:32,020 --> 03:18:34,020
Nice. Okay. Dann setzt er einfach

2570
03:18:34,020 --> 03:18:36,020
immer Frankfurt. So. Und jetzt

2571
03:18:36,020 --> 03:18:38,020
der letzte Punkt

2572
03:18:38,020 --> 03:18:40,020
und einer der wichtigsten Punkte.

2573
03:18:40,020 --> 03:18:42,020
Wie mach ich da eine gescheite

2574
03:18:42,020 --> 03:18:44,020
Command Line Application raus?

2575
03:18:44,020 --> 03:18:46,020
Da hab ich am Anfang schon mal kurz

2576
03:18:46,020 --> 03:18:48,020
geguckt.

2577
03:18:48,020 --> 03:18:50,020
Aber wie bilde ich das denn

2578
03:18:50,020 --> 03:18:52,020
jetzt, dass ich's normal ausführen kann?

2579
03:18:52,020 --> 03:18:54,020
Da fehlt mir nämlich

2580
03:18:54,020 --> 03:18:58,230
noch jegliche

2581
03:18:58,230 --> 03:19:00,230
Vorstellung von.

2582
03:19:00,230 --> 03:19:10,460
Ich mein, ich will das ja nicht

2583
03:19:10,460 --> 03:19:14,470
verdokkerisieren müssen oder sowas.

2584
03:19:14,470 --> 03:19:18,680
Bild.

2585
03:19:18,680 --> 03:19:20,680
Mit dem Maven Icon

2586
03:19:20,680 --> 03:19:30,390
rechts.

2587
03:19:30,390 --> 03:19:39,020
Jetzt blick ich da durch.

2588
03:19:39,020 --> 03:19:44,760
Also Leute, was ich machen

2589
03:19:44,760 --> 03:19:46,760
will ist, ich glaube das geht überhaupt nicht.

2590
03:19:46,760 --> 03:19:48,760
Ich hätte gern

2591
03:19:48,760 --> 03:19:50,760
so ein Binary,

2592
03:19:50,760 --> 03:19:52,760
was ich ausführen kann.

2593
03:19:52,760 --> 03:19:54,760
Wahrscheinlich ist das zu viel verlangt.

2594
03:19:54,760 --> 03:19:58,780
Oder zumindest

2595
03:19:58,780 --> 03:20:15,340
ein JAR-File oder sowas.

2596
03:20:15,340 --> 03:20:17,340
Was macht der denn hier beim Ausführen?

2597
03:20:17,340 --> 03:20:23,400
Rechts Maven sollte ein JAR

2598
03:20:23,400 --> 03:20:25,400
machen. Ja, aber ich will auch ein Self-Contain

2599
03:20:25,400 --> 03:20:27,400
haben, ehrlich gesagt.

2600
03:20:27,400 --> 03:20:29,400
Ja, aber ich check nicht, was ich hier machen

2601
03:20:29,400 --> 03:20:31,400
muss, ehrlich gesagt.

2602
03:20:31,400 --> 03:20:37,400
Diagramm.

2603
03:20:41,540 --> 03:20:43,540
Da hab ich drauf gewartet. Endlich.

2604
03:20:43,540 --> 03:20:45,540
Nice.

2605
03:20:45,540 --> 03:20:47,540
Was? Lifecycle

2606
03:20:47,540 --> 03:20:52,900
Package? Wow.

2607
03:20:52,900 --> 03:20:54,900
Huiuiui.

2608
03:20:54,900 --> 03:21:00,840
Und wo ist jetzt der Output?

2609
03:21:00,840 --> 03:21:05,880
Target.

2610
03:21:05,880 --> 03:21:07,880
Aha.

2611
03:21:07,880 --> 03:21:09,880
Da ist es.

2612
03:21:09,880 --> 03:21:14,150
Der real Java-Champ.

2613
03:21:14,150 --> 03:21:16,150
Das heißt, ich kann es jetzt zumindest

2614
03:21:16,150 --> 03:21:21,510
schon mal

2615
03:21:21,510 --> 03:21:23,510
mit Java

2616
03:21:23,510 --> 03:21:25,510
minus JAR

2617
03:21:25,510 --> 03:21:27,510
ausführen.

2618
03:21:27,510 --> 03:21:29,510
Nee.

2619
03:21:31,510 --> 03:21:33,510
Natürlich nicht. Wäre ja auch

2620
03:21:33,510 --> 03:21:35,510
viel zu einfach, wenn das direkt funktionieren würde.

2621
03:21:46,900 --> 03:21:48,900
Okay, in dem Punkt

2622
03:21:48,900 --> 03:21:50,900
ist es einfach echt kompletter Müll.

2623
03:21:50,900 --> 03:21:55,750
Keine Ahnung, wie das

2624
03:21:55,750 --> 03:21:59,770
funktionieren soll jetzt.

2625
03:21:59,770 --> 03:22:01,770
Was will das überhaupt

2626
03:22:01,770 --> 03:22:03,770
von mir?

2627
03:22:03,770 --> 03:22:08,230
Wie groß ist die JAR?

2628
03:22:08,230 --> 03:22:10,230
5,4 Kilobyte. Da muss auf jeden Fall

2629
03:22:10,230 --> 03:22:12,230
eine Runtime für da sein.

2630
03:22:12,230 --> 03:22:18,170
Also, Java-Zeug.

2631
03:22:18,170 --> 03:22:20,170
Ich hab keinen Plan, wie das funktioniert.

2632
03:22:20,170 --> 03:22:24,570
Okay.

2633
03:22:24,570 --> 03:22:26,570
Kotlin self-contained

2634
03:22:26,570 --> 03:22:28,570
binary. Geht das irgendwie?

2635
03:22:28,570 --> 03:22:35,080
Build final native

2636
03:22:35,080 --> 03:22:37,080
binaries. Okay.

2637
03:22:37,080 --> 03:22:39,080
Jetzt geht's zur Sache, ja.

2638
03:22:39,080 --> 03:22:51,160
Multi-Plattform-Development.

2639
03:22:51,160 --> 03:23:00,680
Oh nee,

2640
03:23:00,680 --> 03:23:08,150
das kriegen wir nicht mehr gebacken.

2641
03:23:08,150 --> 03:23:10,150
Getting start. Das ist Kotlin native.

2642
03:23:10,150 --> 03:23:12,150
Ja, da scheint was anderes zu sein.

2643
03:23:12,150 --> 03:23:18,150
Alter, ich suche nach einem

2644
03:23:18,150 --> 03:23:20,150
Fat-JAR oder Shadow-JAR.

2645
03:23:20,150 --> 03:23:22,150
Ich hätte gern

2646
03:23:22,150 --> 03:23:24,150
so eine komplett self-contained

2647
03:23:24,150 --> 03:23:57,860
Anwendung.

2648
03:23:57,860 --> 03:23:59,860
Okay, include runtime brauchen wir

2649
03:23:59,860 --> 03:24:01,860
noch, aber ehrlich gesagt, ich

2650
03:24:01,860 --> 03:24:05,430
hätte auch gerne

2651
03:24:05,430 --> 03:24:07,430
ein komplettes self-contained.

2652
03:24:07,430 --> 03:24:09,430
Oh nee, da hab ich keinen

2653
03:24:09,430 --> 03:24:11,430
Bock drauf.

2654
03:24:11,430 --> 03:24:13,430
Das mach ich jetzt nicht.

2655
03:24:13,430 --> 03:24:15,430
Das ist, glaube ich, echt eine Wissenschaft für sich.

2656
03:24:15,430 --> 03:24:19,060
Das ist, glaube ich,

2657
03:24:19,060 --> 03:24:21,060
echt eine Wissenschaft für sich.

2658
03:24:21,060 --> 03:24:23,060
Self-contained heißt ja im Endeffekt,

2659
03:24:23,060 --> 03:24:25,060
im Java-Umfeld, pack einfach

2660
03:24:25,060 --> 03:24:27,060
die JVM komplett mit rein.

2661
03:24:27,060 --> 03:24:29,060
Dann ist dein Binary am Ende dann halt irgendwie

2662
03:24:29,060 --> 03:24:31,060
50, 60 MB groß.

2663
03:24:31,060 --> 03:24:33,060
Ich bin mir nicht sicher, ob Java

2664
03:24:33,060 --> 03:24:35,060
schon auch Versuche in Richtung

2665
03:24:35,060 --> 03:24:37,060
Ahead-of-Time-Compilation hat.

2666
03:24:37,060 --> 03:24:39,060
Gerade bei

2667
03:24:39,060 --> 03:24:41,060
.NET 8

2668
03:24:41,060 --> 03:24:43,060
hat sich da viel getan, beziehungsweise wird sich

2669
03:24:43,060 --> 03:24:45,060
sehr viel tun noch, wenn das

2670
03:24:45,060 --> 03:24:47,060
in ein paar Monaten rauskommt.

2671
03:24:47,060 --> 03:24:50,570
.NET 8 Release Date.

2672
03:24:50,570 --> 03:24:52,570
Ja, im November.

2673
03:24:52,570 --> 03:24:54,570
Ja.

2674
03:24:54,570 --> 03:24:56,570
Mal gucken, ob Java auch sowas...

2675
03:24:56,570 --> 03:25:02,500
Java Ahead-of-Time-Compilation.

2676
03:25:02,500 --> 03:25:07,030
IBM.

2677
03:25:07,030 --> 03:25:09,030
Ich sehe schon, das ist tatsächlich gar nicht so einfach.

2678
03:25:09,030 --> 03:25:13,110
Für Backend,

2679
03:25:13,110 --> 03:25:15,110
für serverseitige Backend-Anwendungen

2680
03:25:15,110 --> 03:25:17,110
ist das ja überhaupt kein Problem.

2681
03:25:17,110 --> 03:25:19,110
Dann würde ich da jetzt irgendein Docker-Image mitbauen,

2682
03:25:19,110 --> 03:25:21,110
mit Java-Runtime drin und fertig.

2683
03:25:21,110 --> 03:25:23,110
Kann man sowas

2684
03:25:23,110 --> 03:25:25,110
nicht mit der GraalVM machen?

2685
03:25:25,110 --> 03:25:27,110
Weiß ich nicht, sagt mir nix.

2686
03:25:27,110 --> 03:25:30,870
Was ist denn die

2687
03:25:30,870 --> 03:25:32,870
GraalVM?

2688
03:25:32,870 --> 03:25:37,020
Compiles your Java

2689
03:25:37,020 --> 03:25:39,020
Ahead-of-Time.

2690
03:25:39,020 --> 03:25:41,020
Okay. Und wie kann man das

2691
03:25:41,020 --> 03:25:45,860
mit Kotlin verwenden?

2692
03:25:45,860 --> 03:25:47,860
Okay. Okay, jetzt.

2693
03:25:47,860 --> 03:25:49,860
Build a native image of a Java

2694
03:25:49,860 --> 03:25:51,860
and Kotlin application.

2695
03:25:51,860 --> 03:25:56,650
Aber dazu brauche ich erstmal nicht...

2696
03:25:56,650 --> 03:25:58,650
Boah, das ist wieder

2697
03:25:58,650 --> 03:26:00,650
hyperkompliziert.

2698
03:26:00,650 --> 03:26:10,870
Gu install native

2699
03:26:10,870 --> 03:26:15,660
image.

2700
03:26:15,660 --> 03:26:17,660
Ne, ne, ne, ne, ne.

2701
03:26:17,660 --> 03:26:23,850
Und wie kompi...

2702
03:26:23,850 --> 03:26:25,850
Execute.build

2703
03:26:25,850 --> 03:26:27,850
Ne, ne, ne.

2704
03:26:27,850 --> 03:26:29,850
Das mache ich heute nicht. Das halte ich heute

2705
03:26:29,850 --> 03:26:31,850
geistig nicht aus.

2706
03:26:31,850 --> 03:26:33,850
Was ich ein bisschen schade finde, ist, dass das nicht funktioniert.

2707
03:26:33,850 --> 03:26:39,020
Ich weiß nicht, warum.

2708
03:26:39,020 --> 03:26:41,020
Du bist auf dem falschen Pfad.

2709
03:26:41,020 --> 03:26:43,020
Okay.

2710
03:26:43,020 --> 03:26:45,020
Na dann.

2711
03:26:45,020 --> 03:26:47,020
Wo ist der richtige Pfad?

2712
03:26:47,020 --> 03:26:49,020
Ne, aber das machen wir heute nicht mehr.

2713
03:26:49,020 --> 03:26:51,020
Das ist mir zu anstrengend.

2714
03:26:51,020 --> 03:26:53,020
Da kann ich mich jetzt nicht mit beschäftigen.

2715
03:26:53,020 --> 03:26:55,020
Vielleicht beschäftige ich mich da mal noch ein bisschen.

2716
03:26:55,020 --> 03:26:58,780
Die Manifest-Datei fehlt.

2717
03:26:58,780 --> 03:27:00,780
Mag sein,

2718
03:27:00,780 --> 03:27:02,780
aber irgendwie sagt nichts

2719
03:27:02,780 --> 03:27:04,780
darüber Bescheid, dass ich eine Manifest-Datei

2720
03:27:04,780 --> 03:27:16,340
brauche.

2721
03:27:16,340 --> 03:27:18,340
Ach, keine Main.

2722
03:27:18,340 --> 03:27:20,340
Was ist denn das Maven-Manifest?

2723
03:27:20,340 --> 03:27:22,340
Das hier, oder wie?

2724
03:27:22,340 --> 03:27:26,490
Pom.

2725
03:27:26,490 --> 03:27:28,490
Ist das das Maven-Manifest?

2726
03:27:28,490 --> 03:27:30,490
Pom.xml?

2727
03:27:32,490 --> 03:27:34,490
Ich weiß wirklich nicht, wo ich was machen muss.

2728
03:27:34,490 --> 03:27:38,120
Ich habe davon absolut keinen Plan.

2729
03:27:38,120 --> 03:27:40,120
Kann das hier vielleicht sowas?

2730
03:27:40,120 --> 03:27:46,150
Ne.

2731
03:27:46,150 --> 03:27:48,150
Und da muss ich eine Main-Methode festlegen.

2732
03:27:48,150 --> 03:27:50,150
Das kann man doch bestimmt auch hier drüber machen.

2733
03:27:50,150 --> 03:27:55,700
Ne.

2734
03:27:55,700 --> 03:27:57,700
Pom.xml Main.

2735
03:27:57,700 --> 03:28:05,820
Du müsstest in die

2736
03:28:05,820 --> 03:28:07,820
Pom noch schreiben, was ein Manifest

2737
03:28:07,820 --> 03:28:09,820
in die JAR soll. Ne, das mache ich jetzt nicht, Leute.

2738
03:28:09,820 --> 03:28:11,820
Zack.

2739
03:28:13,820 --> 03:28:15,820
Das mache ich jetzt nicht.

2740
03:28:15,820 --> 03:28:17,820
Genug Kotlin für heute.

2741
03:28:17,820 --> 03:28:19,820
Vielleicht gucken wir uns das nächste Mal tatsächlich

2742
03:28:19,820 --> 03:28:21,820
noch weiter an. Ich muss mich erst mal

2743
03:28:21,820 --> 03:28:23,820
ein bisschen

2744
03:28:23,820 --> 03:28:25,820
noch damit beschäftigen.

2745
03:28:25,820 --> 03:28:29,830
Ich würde sagen, als Fazit,

2746
03:28:29,830 --> 03:28:31,830
Kotlin als Sprache

2747
03:28:31,830 --> 03:28:33,830
echt nice.

2748
03:28:33,830 --> 03:28:35,830
Intuitiv.

2749
03:28:35,830 --> 03:28:37,830
Man weiß, wie die Sachen gehen, obwohl man sie noch nicht gemacht hat.

2750
03:28:37,830 --> 03:28:39,830
Finde ich gut.

2751
03:28:39,830 --> 03:28:41,830
Das Java-Ökosystem, boah, ich weiß echt

2752
03:28:41,830 --> 03:28:46,100
nicht.

2753
03:28:46,100 --> 03:28:53,700
Ja, das, was ich gerade gesagt habe.

2754
03:28:53,700 --> 03:28:55,700
Cradle macht einiges einfacher.

2755
03:28:55,700 --> 03:28:57,700
Vielleicht gucken wir uns das das nächste Mal an.

2756
03:28:57,700 --> 03:28:59,700
So. Chatge.

2757
03:29:01,700 --> 03:29:03,700
Wer noch nicht gefollowt hat und wem der Content

2758
03:29:03,700 --> 03:29:05,700
gefällt, ich würde mich sehr

2759
03:29:05,700 --> 03:29:07,700
freuen, wenn ihr demnächst hier öfters da seid.

2760
03:29:07,700 --> 03:29:09,700
Ich muss ein bisschen sehr laut machen, weil ich habe gesehen,

2761
03:29:09,700 --> 03:29:11,700
meine Stats waren diese

2762
03:29:11,700 --> 03:29:13,700
Woche nicht so gut.

2763
03:29:13,700 --> 03:29:15,700
Das geht ja nicht. Cackweight.

2764
03:29:15,700 --> 03:29:17,700
Für mehr Stonks.

2765
03:29:17,700 --> 03:29:23,130
Ja.

2766
03:29:23,130 --> 03:29:26,760
Und ansonsten

2767
03:29:26,760 --> 03:29:28,760
würde ich sagen, Chat,

2768
03:29:28,760 --> 03:29:30,760
schön,

2769
03:29:30,760 --> 03:29:32,760
dass ihr so high IQ seid.

2770
03:29:32,760 --> 03:29:36,260
Und wir sehen uns im nächsten Stream.

2771
03:29:36,260 --> 03:29:38,260
Macht's gut, bis dann.

{"text": "So, erstmal ne Runde husten, ich weiss auch nicht warum ich dazu jetzt warten muss bisdas Stream angeht.Aber wollte vorher nicht.Massive Poggersound.Moin Marc, Jojo Moink.Kussi ist auch da, Relax ist auch am Start, jetzt kommen sich alle.So, ich zeige euch mal was, wusst ihr das Windows mittlerweile, \u00e4hm, propriet\u00e4re Emojishat?Wie sieht bei euch der Titel aus, guckt mal.Wie sieht bei euch der Titel vom Stream aus, warte mal, ich muss mal kurz Musik ein bisschenleiser machen.Tja, passt mal auf, Windows hat propriet\u00e4re Emojis, schaut mal.So sieht der Titel bei einigen von euch aus, jetzt guckt mal an wie das unter Windows aussieht.Tja, unter Windows sieht das so aus.Microsoft hat es tats\u00e4chlich geschafft propriet\u00e4re Windows-only Emojis zu designen.Ich habe eigentlich gedacht Microsoft w\u00e4re aus dieser Zeit raus, wo sie propriet\u00e4reWindows-only Sachen gemacht haben, aber dieses ist ein Windows-only Emoji.Ja, copy-paste in Twitch-Channel ergibt das, weil Twitch das Searching replaced durcheigene Emojis.So sieht es im Titel aus und in Wirklichkeit ist es aus zwei Emojis zusammengesetzt.Lustig, oder?Dass es propriet\u00e4re Windows-only Emojis gibt.Gut, in dem Fall wundert es mich nicht, wenn das eine Katze mit Stirnband und Windows-Logoist, aber trotzdem.Ich habe nachgeguckt, das ist irgendwas, was zum Windows-Jubil\u00e4um gekommen ist von Microsoft,was auch immer.Ich habe es aufgegeben zu versuchen nachzuvollziehen, was Microsoft da manchmal treibt.So, wir gucken uns jetzt mal ein paar neue, die neuen C-Sharp-9-Features an.Das ist gar nicht so viel, auch wenn die Seite lang aussieht, aber das ist gro\u00dfe Schriftgr\u00f6\u00dfeund es ist nicht so viel wirklich Tolles.Ich habe schon mal grob dr\u00fcbergescrollt vorhin und ich habe auch schon vor einem Dritteloder so, vor einem Jahr mal einen Webcast dazu gesehen.Das gucken wir uns jetzt mal an.Also ich habe jetzt das neue.NET 5 installiert.Ich habe die Rider-Test-Version installiert, also sprich das hier, hier Rider-2020-3-EAP-7,das hat.NET 5 Support.Ich finde es ja ein bisschen schade, dass es nicht geschafft haben zum Release von.NET5 das fertig zu bekommen, aber wahrscheinlich hat Microsoft den auch gar nicht erz\u00e4hlt,wann eigentlich Release von.NET 5 ist.Denke ich mal.Wow, ein bisschen gro\u00df vielleicht.Ein bisschen Chat auf, ne, Chat, so, dass wir nichts \u00fcbersehen.Gut, genau, also wie gesagt, diese Windows-Only-Emojis wollte ich euch mal zeigen und ich w\u00fcrdesagen, wir k\u00f6nnen auch mehr oder weniger gleich anfangen, gucken, was es so gibt.Ich muss da selbst ein bisschen dr\u00fcber, wie gesagt, ich habe schon vorher mal dr\u00fcbergescrollt, aber ein bisschen in Ruhe mir das angucken, weil mir manche neuen Features selberein bisschen schleierhaft noch sind, wozu man die benutzen soll.Zum Beispiel das erste Feature, n\u00e4mlich Record-Types.Also, bis jetzt, ich zeige euch erst mal, wie es bis jetzt in.NET, bzw. in C-Sharpfunktioniert.WistleBasic.NET, lasst mal mal au\u00dfen vor, den ganzen M\u00fcll, da kann man, ja, und F-Sharpwei\u00df ich auch nicht, wie es funktioniert.F-Sharp habe ich mal so ein Einsteiger-Tutorial gemacht an Schkalusten, funktionale Sprachensind einfach nix f\u00fcr mich.Ich habe mich auch schon mal an, \u00e4h, ne, nicht Skala Erlang versucht, \u00e4hm, also mirreicht, mir reicht das, was Funktionales in C-Sharp drin ist, oder kann es ja auch inRuby und Groovy ein bisschen Funktionales machen, aber wirklich diese Hardcore-Funktional-Sprachen,ich werde damit nicht warm, also weder mit F-Sharp noch mit Erlang noch mit Skala nochmit Haskell oder mit irgendwas anderem, das ist irgendwie nicht meine Welt.Ich habe es mir schon lange vorgenommen, mir das Ganze mal anzugucken, aber, \u00e4h, warumich das ein bisschen scheue ist, so, ist folgenderma\u00dfen, warum ich, also warum ich mich ein bisschendavor dr\u00fccke, mich mal mit Funktional-Programmiersprachen zu besch\u00e4ftigen, weil ich wei\u00df jetzt schon,dass ich das eigentlich nicht wirklich auszahlen werde, in Form von, dass man das, was ist,was man wirklich sehr oft verwendet, das ist eher was, was man mal bei speziellen Problemenrausholt und jetzt nicht so Daily, wie sagt man so, Daily-Triver, ja, \u00e4hm, deswegen binich, wenn ich sehe, ob sich das wirklich lohnt, auf der anderen Seite, ich mach so viele Sachen,die sich \u00fcberhaupt nicht lohnen, einfach nur weil's mir gef\u00e4llt, also insofern, warumda nicht auch, h\u00e4? Ja man, C++ Beste, Kappa HD, Golden Kappa Check. C++ ist das Besteim Schlechtsein, also quasi das Beste von unten. Okay, legen wir mal eine Konsolenanwendungan und gucken uns mal an, was es hier so alles gibt. Exzellent. So, das blenden wir jetztmal aus, das machen wir auf einen anderen Desktop, wobei eigentlich kann ich den ganzen anderenM\u00fcll mal wegmachen, ne? Ich l\u00f6sche den ganzen Krams mal hier. So, Browser k\u00f6nnen wir auflassen,das lassen wir auf, das verschieben wir auch mal zu, das verschieben wir auf drei, machenso, ja, exquisite Platzeinteilung, Rider, genauso muss es sein. Gut, wunderbar, danngehen wir jetzt hier nach Rider, Projects, QtChat,.net watch run. What? Ah. So, guckenwir uns das Ganze mal an. Ah, Moment, Moment, ich darf nicht.net watch run machen, ichmuss machen.net,.net SDK,.net watch run, weil ich will ja.net 5 und nicht 3.1 verwenden,ich habe ja beides installiert, ich habe ja.net 5 erstmal als Snap installiert und Riderals Early Access, oder wie sie es hei\u00dfen, wie sie es nennen, und das gibt es noch nichtim offiziellen Paketmanager, sind noch nicht so schnell. So, und das k\u00f6nnen wir hier auchr\u00fcber machen und da wieder auf. Machen wir mal ein bisschen gr\u00f6\u00dfer. Wow. Okay, vielleicht,vielleicht doch nicht so gro\u00df, so, so, so, reicht. Der Bauer hat den Cryok\u00fchler aufden Risen gepappt, das haben wir uns doch heute noch angeguckt. Jeder, der das jetztschreibt, ist zu fr\u00fch im aufwachen Stream abgehauen. Das Video haben wir uns noch angeguckt.Chat, bin ich aufgepasst wieder. Tja. Okay, fangen wir mal an, gucken wir uns das mal,gucken wir uns das mal in Ruhe an. Also, es gibt jetzt Record Types, bisher in C Sharp,nur mal so zur Erkl\u00e4rung gibt es das ja folgenderma\u00dfen, es gibt zwei verschiedene, grunds\u00e4tzliche,ja, wie soll man es nennen, nicht Typen, doch grunds\u00e4tzlich verschiedene Typen gibt esin C Sharp, zwei St\u00fcck. So, das sind einmal, wir machen das mal hier unten, da machen wirein bisschen Platz, so, das ist nicht hier, \u00e4h, gut, chat, ah ja, ja, so, ab hier gehtes los. So, es gibt ja in C Sharp zwei, vielleicht machen wir mal ein bisschen Erkl\u00e4rbeerstream,gibt es ja zwei unterschiedliche Typen. Es gibt einmal Classes und es gibt f\u00fcr die OldschoolLeute und es gibt Strucks. So, und, \u00e4hm, der Unterschied ist auf den ersten Blick garnicht so gro\u00df, aber wie gesagt, auf den ersten Blick. So, also man kann da mehr oder weniger\u00e4hnliche Sachen drin machen, in so einer Klasse oder in einem Struct, also zum Beispiel,ich kann da drin irgendwelche Methoden anlegen, sowas wie Public, also wir machen jetzt mal,wir machen jetzt mal so die, wirklich die Low-Brain-Einsteiger-Examples, weil sonst bin ich zu, zu, zu, nichtgenug Brainpower, um mir welche auszuheilen, also wir machen jetzt sowas wie, keine Ahnung,Door, so, oder haben wir sowas wie Open zum Beispiel drin, so. \u00c4hm, das kann man, daskann man \u00fcbrigens in Structs und Classes machen, das ist kein Problem. So, also aufden ersten Blick unterscheidet sich das gar nicht mal so gro\u00dfartig. Der eigentliche Unterschiedzwischen Classes und Structs ist folgender, dass Classes, also, also wenn ich jetzt was,wir machen das jetzt einfach mal, so, wir machen das hier, myStruct, ah, ohje, keineAhnung, ohje, myClass, meistens eigentlich ganz guter Name, dann passt das, dann passtdas n\u00e4mlich ganz gut. So, wenn ich die, wenn ich die jetzt anlege, so, sowas hier, bar,myClass, so, immer, wir machen, beste, beste Variab, beste Variab in dem A, B gleich new,myStruct. So, jetzt ist die Frage, was passiert, was passiert hier? So, was passiert bei wem?Sieht ja erst mal relativ gleich aus. Man legt hier eine Instanz von Klasse an und manlegt hier quasi eine Instanz von myStruct an. Wenn ich jetzt die Class zuweis in eineranderen Variabel, dann passiert hier eigentlich nix weiter. Es wird einfach, so, einen Linkerzeugt, das kann ich, das kann ich euch zeigen, zum Beispiel, wir machen jetzt hiermal ne public, wie kommen wir mal, public int, \u00e4hm, keine Ahnung, test, so, \u00e4hm, so,das ist, wir machen hier zwei public Variablen, test, wir machen hier keine Ahnung, test istnull, ach nee, Moment, kann man das standardm\u00e4\u00dfig gar nicht so zuweisen? Kann man das standardm\u00e4\u00dfignicht zuweisen? Okay, ist egal. So, \u00e4hm, wenn ich jetzt sage, bei der Klasse, wir machendas erstmal mit der Klasse, so, wenn ich jetzt sage, a, test ist gleich eins, so, dann k\u00f6nnenwir uns hier ausgeben, am Anfang, am Anfang ist test null, also das ist, null ist glaubich default f\u00fcr int, so, danach ist test eins, guckt euch das mal an, erst ist testnull, dann ist test eins, also, genauso, wie man das ganze erwarten w\u00fcrde, Highkicks,also was, wir gucken uns die 90 sharp Features an, was vor ein paar Tagen rausgekommen ist,Mark Jojo, genau, danach, danach wird, danach kommt der Test, danach wird abgefragt, jetztPr\u00fcfung, so, also man sieht, da kommt null und eins raus, das ist ja eigentlich auchso, wie man es erwarten w\u00fcrde, jetzt kommt allerdings der Trick, was passiert denn jetzt,wenn ich sowas hier mache, b ist gleich a, was ist jetzt, was ist jetzt in b.test drinne,was meint ihr? Also, ich nehme a und wei\u00df, dass b zu und dann gucke ich, was in testdrin steht, da ist nat\u00fcrlich immer noch eins drin, weil das haben wir ja vorher reingeschriebenund a ist ja, b ist ja nur ein Zeige auf a, aber jetzt kommt, jetzt kommt der Knackpunkt,was passiert denn, wenn ich jetzt sowas hier mache, b, test, gleich 100, dann ist b test100, aber, und jetzt kommt der Witz, a test ist auch 100, also sprich, das hier, b isteinfach nur ein Zeige auf a, so, mit einem Struct sieht das schon wieder anders aus,wenn wir das Ganze jetzt nochmal machen und nehmen jetzt hier mal my struct, das mussich jetzt mal ein bisschen als Intro erkl\u00e4ren, dass man vielleicht das neue Feature besserversteht, weil ich kapiere es selbst noch nicht so genau, so, wenn man das Ganze jetztmal mit structs macht, wir k\u00f6nnen das Ganze jetzt mal ein bisschen abk\u00fcrzen, so, ichklicke jetzt ein neues Struct und dann sage, a ist gleich, a ist gleich links, so, jetztsage ich a test ist gleich 100, oder a test, bleiben wir bei, ist gleich 1, so, gebe ichdas hier aus, wunderbar, noch nichts neues, aber jetzt, jetzt kommt der Witz, sage ichjetzt b test gleich 100 und gebe b aus, dann ist das auch noch alles ok, aber, wenn ichjetzt a test ausgebe, werdet ihr feststellen, tja, hoch, das scheint anders zu funktionieren,n\u00e4mlich da ist a noch 1, ja, und deswegen, das ist der haupts\u00e4chliche Unterschied, alsosprich, wenn ich eine Klasse habe, dann ist das hier immer eine Referenz und ein Structwird immer kopiert, das hei\u00dft, sobald ich das hier mache, hat b nichts mehr mit a zutun, das ist so der grunds\u00e4tzliche, der basic Unterschied zwischen Structs und Classes,wer braucht sowas, du brauchst Leute, die sowas k\u00f6nnen, dass du dein t\u00e4gliches SmartphoneZeug spielen kannst, dass du fortan ein Mobile spielen kannst, brauchst du das, und zumindestindirekt, so, so weit zur Erkl\u00e4rung der ganzen Geschichte, also sprich, Structs werden immerkopiert und Classes sind immer Referenzen aufeinander, das hat nat\u00fcrlich den gro\u00dfenVorteil oder auch einen Nachteil, je nachdem, wie man das sieht, hier muss ich immer waskopieren, wenn ich das \u00fcbergebe oder zuweise oder sonst was, sprich, ich muss permanentwas kapieren, und hier \u00fcbergebe ich einfach nur eine Referenz, was nat\u00fcrlich auch hei\u00dft,die Sachen ver\u00e4ndere ich immer automatisch mit und hier bleibt das Original unber\u00fchrt,so, das ist so der grunds\u00e4tzliche Unterschied, ich wei\u00df, die Kenner werden jetzt anfangenvon wegen Heap und Stack und sonst was, das ist erstmal vollkommen egal, das grunds\u00e4tzliche,was man wissen muss, Structs werden kopiert und Klassen werden referenziert, exzellent,so und jetzt k\u00f6nnen wir uns mal das neue Feature angucken, das habe ich n\u00e4mlich selbst nochnicht so ganz gecheckt, Structs sind f\u00fcr Boomer, das w\u00fcrde ich tats\u00e4chlich teilweiseso unterschreiben, weil ganz ehrlich, Structs verwendet man sehr selten, es gibt einen gro\u00dfenUnterschied, den ich noch zeigen muss zwischen Structs und Classes und Structs, den ichnoch nicht gezeigt habe, so, also, wir machen jetzt mal eine Klasse, wir machen jetzt malhier, keine Ahnung, Struct 1 und Struct 2, so, was meint ihr, was hier rauskommt?Wobei, ich fange mal, ich fange, vielleicht fange ich besser anders an, ja, doch, machenwir es mal, was meint ihr, was hier rauskommt, bei dem Check, wenn ich checke, achso, darfich so ja gar nicht, \u00e4h, okay, Equals, machen wir es so, was meint ihr, was bei dem Checkrauskommt, wenn ich gucken will, ob Struct 1 gleich Struct 2 ist, tja, noch kommt daTrue raus, noch kommt da True raus, warum?Weil die Werte innerhalb dieses Structs in beiden Structs gleich sind, so, mache ichStruct 1, Test gleich 5, dann wird da False rauskommen, also sprich, wenn ich \u00fcberpr\u00fcfe,ob zwei Structs gleich sind, da werden immer die Werte miteinander \u00fcberpr\u00fcft, ob diegleich sind, so, und jetzt machen wir das nochmal mit den Klassen, jetzt, jetzt, \u00e4h,okay, ich pendenze mal um, so, was meint ihr, was da jetzt rauskommt?Jetzt k\u00f6nnen wir, jetzt k\u00f6nnen wir \u00fcbrigens hier auch gleich, gleich machen, ja, waswird, achso, ja, das sind wir gleich, tja, da kommt jetzt False raus, so viel kann icheuch schon mal spoilern, aber, und jetzt kommt der gro\u00dfe Unterschied zu Structs, wenn ichdas hier jetzt wegmache, also sprich, jetzt sind ja die Werte zwischen Class 1 und Class2 exakt gleich, ich hab bei keinem die Werte ver\u00e4ndert, jetzt ist das immer noch False,warum?Genau, was der Void Danny sagt, zwischen Klassen wird die Referenz verglichen, alsosprich, zeig das hier mal ganz, einfach gesagt, zeig das hier auf den gleichen, \u00e4h, Startpunktim Speicher, wenn ja, dann ist das die gleiche Instanz und es ist true, ansonsten zwei unterschiedlicheKlasseninstanzen, wenn du die miteinander vergleichst, sind immer False, bei Structsist es umgedreht, Structs ist eigentlich ziemlich wurscht, wo die ganzen Sachen im Speicherverliegen, Structs werden immer die Werte \u00fcberpr\u00fcft, also sprich, mit Structs l\u00e4sstsich zum Beispiel relativ gut alles abbilden, was irgendwie so eine Art Wert ist, also zumBeispiel ein Datum oder so, oder irgendwie eine Uhrzeit, oder ein Intervall, oder sowasin der Richtung, ja, weil es ist so, wenn ich zum Beispiel eine Klasse habe f\u00fcr Uhrzeit,oder einen Struct habe f\u00fcr Uhrzeit und ich will \u00fcberpr\u00fcfen, Uhrzeit 1 ist Uhrzeit 1gleich Uhrzeit 2, dann will ich nicht \u00fcberpr\u00fcfen, ob das im Speicher die gleiche Adresse ist,sondern ich will wissen, ist das quasi logisch gesehen von den Zahlen her der gleiche Wert,so dementsprechend, wenn bei Structs Werte \u00fcberpr\u00fcft miteinander und bei Klassenreferenzen.So und jetzt kommt der Bits, was das bei C Sharp auch ein bisschen schwammiger macht,man kann, ich l\u00f6sche das Struct mal, was man machen kann, also wir wissen jetzt ja,dass hier ist False, das wissen wir jetzt ja, also wir wissen, wir machen mal, ich machmal hier so einen Start, dann sieht man es besser, Start und Ende, so, dann sieht mann\u00e4mlich hier im Terminal besser, was Sache ist, so, also das wissen wir ja, das hierist eine Referenz auf eine Instanz von Klasse, das hier ist auch eine Instanz, eine Referenzauf eine Instanz von Klasse, so und die sind nie, die sind nie gleich, weil es sind unterschiedlicheReferenzen, unterschiedliche Adressen im Speicher, was man jetzt machen kann in C Sharp ist folgendes,man kann sagen, ich muss ehrlich sagen, ich hoffe ich krieg's aus dem Kopf hin, weilman macht das nicht sehr oft, kann man sagen Over, nee, Overwrite, Equals und dann kannman das Ganze ein bisschen faken, also sprich ich kann \u00fcberschreiben, wie sich das hierverh\u00e4lt und ich kann auch ne Klasse so programmieren, dass sie sich \u00e4hnlich wie den Struct verh\u00e4ltbeim Vergleich, wo man sich nat\u00fcrlich dann die Frage stellen muss, okay, macht das Sinn,das ist nat\u00fcrlich von, wie machen wir das jetzt eigentlich, Return, wie funktioniertdas jetzt \u00fcberhaupt nicht, ich mach das so selten, ich glaub man braucht hier dann irgendwie,man muss das glaube ich casten, ne, da muss man irgendwie sagen, my class, ist das richtig,man muss das irgendwie casten, also das hei\u00dft ich muss dann sagen, keine Ahnung, i, dasda, irgendwie sowas in der Richtung kann man glaube ich machen, so und jetzt werdenwir sehen, das ist immer noch falsch, was hab ich verkehrt gemacht, was hab ich falschgemacht, warum kommt da jetzt nicht True raus, ach ich muss Dings \u00fcberschreiben, ich mussnoch gleich gleich \u00fcberschreiben, jetzt kommt True raus, so und wie \u00fcberschreibe ich jetzt,wie \u00fcberschreibe ich jetzt gleich gleich, das geht auch irgendwie, ja ich \u00fcberleg mir auchwie man das generieren kann, wie kann man das denken, ach hier kann man den bestimmtsagen, ich m\u00f6chte da noch generate, wow, what the fuck, und das funzt jetzt, ne, das warich falsch auf meinen Basics, ach man muss den Operator \u00fcberladen, ach stimmt, das machtman so selten, ja, man muss den Operator \u00fcberladen, also sprich ich muss jetzt machen, was Publixist, Static, Bool, Operator, ernsthaft so, ach du gro\u00dfe Schei\u00dfe, das mach ich ja nie,und wie geht das jetzt, C Sharp, Class, Overload, Equals, sieht man mal wie oft man sowas macht,so geht es schon mal nicht, Operator, ja, excellent, ok, wir Copy Pasting, Stack Overflow, wir wissenja, Stack Overflow, Copy Pasting ist prinzipiell die beste Antwort auf alle Sachen, ok, Return,Object 1, wobei ne, ich kann doch da jetzt aufrufen, Equals, oder, wir machen das jetzthier einfach noch mal, aber ich kann sowas, mach du das so, ne, das geht nicht, warum gehtdas nicht, ah, man muss Matching, aha, aha, oh, komm mal hier, Big Brain, man muss beides\u00fcberschreiben, jetzt kommt True raus, ok, alles klar, das ist \u00fcbrigens auch ne Sache,was ich an C Sharp mag, beziehungsweise an der Philosophie, was Microsoft macht, dassdie hier gleich sagen, ok, wenn du Equals \u00fcberl\u00e4dst, oder beziehungsweise den GleichgleichOperator \u00fcberl\u00e4dst, du musst auch ungleich \u00fcberladen, weil es w\u00e4re ja so komplett wir,wenn auf einmal das da True w\u00e4re und das da auch True w\u00e4re, das w\u00fcrde ja \u00fcberhauptkeinen Sinn ergeben, das kann man h\u00f6chstens machen, um die Leute zu trollen, ja, so, alsoman sieht, man kann auch Klassen fabrizieren, die sich ein bisschen wie Struts anf\u00fchlen,aber der grunds\u00e4tzliche Unterschied zwischen Klassen und Struts bleibt, Struts werden immerkopiert und Klassen sind immer quasi Verkn\u00fcpfung, ja, Referenzen aufeinander, das muss man wissenund manchmal ist es tats\u00e4chlich sinnvoller einen Strut zu nehmen, aber meistens in, ahman, 99% der F\u00e4lle sind es eigentlich Klassen, die man nimmt, so, und jetzt k\u00f6nnen wir unsdas neue Feature angucken, n\u00e4mlich, es gibt jetzt sowas Neues, das ist quasi ein Strutals Klasse, soweit ich das verstanden habe, ich bin da n\u00e4mlich im Vorfeld schon mal dr\u00fcbergescrollt und zwar, es gibt jetzt Record Types, also sprich, bisher gab es ja in Public Strut,Strut, also bisher gab es ja in C Sharp nur Klassen und Struts und jetzt gibt es quasieine verkappte Klasse als Strut, die, also, ja doch, eine Klasse, die so tut, als w\u00e4rees ein Strut, die quasi genau das macht, was ich eben gemacht habe, aber schon standardm\u00e4\u00dfig,also sprich, Record Types sind, soweit ich das verstanden habe, die legt man \u00fcbrigensso an, also wir k\u00f6nnen das ja mal kurz copypasten, wie die das hier machen, so, das ist jetztneu, also das gibt es erst seit 5 Tagen oder so, oder seit 2 Tagen, oder wie auch immer,ich glaube seit 5 Tagen gibt es das erst, so, das ist jetzt neu, also sprich, was dasmacht, ist, dass da unten k\u00f6nnen wir uns glaube ich sparen, das ist der Constructor hier,ja, wir machen das mal kurz weg, so, das ist jetzt ein neuer Typ, und zwar, der \u00fcberschreibtdas ganze jetzt, also ich kann jetzt quasi sagen, New, Rec 1, Rec 2, New, das ist jetztwie gesagt, das ist das erste Mal, dass ich das verwende, schauen wir mal, und wir machenjetzt auch wirklich nur noch sowas hier, so, also, my record 1, my record 2, Rec 1 gleichRec 2, und jetzt wird mir sehen, es ist true, 0W, so, also sprich, den Record ist ne Klasse,die schon Equals \u00fcberschrieben hat f\u00fcr mich, also quasi das hier, was ich eben von Handgemacht hab, dieser Schmodder hier, den ich hier eben von Hand gemacht hab, den machtRecord schon f\u00fcr mich, warum will man sowas haben, ich habs auch erst nicht kapiert ehrlichgesagt, und ich bin mir da noch immer noch nicht hundertprozentig sicher, aber ich denkemal, das liegt daran, wenn man sowas hat, was eben, so gewisse Wert, wo so die Zahlengeht, die drin gespeichert werden, nicht so sehr ob es ne Referenz ist oder nicht, aberich trotzdem es nicht bei jedem Aufruf kopieren will, also sprich, wenn ich aus PerformanceGr\u00fcnden keine Structs verwenden mag, aber ich von der Vergleichlogik her eigentlichdas verwenden will, was Structs machen, so, und deswegen haben sie das wahrscheinlichauch Record genannt, oder sie h\u00e4tten es auch Data oder so nennen k\u00f6nnen, also sprich,um zu symbolisieren, dass es bei dieser Klasse nicht um die Methoden und sonst was geht,die man implementiert, sondern eigentlich haupts\u00e4chlich um die Daten, die drin enthaltensind, so, und was man jetzt damit noch gro\u00dfartig machen kann, muss ich mir angucken, weil habich auch keine Ahnung von, genau, ach ja stimmt, man kann Records glaube ich gar nicht \u00e4ndern,ne, das ist ja das n\u00e4chste Feature, was ich, so wie ich das gesehen hab, ich glaube mankann Records nicht \u00e4ndern, also was ich jetzt, ich kann doch sowas hier nicht machen, oder?Oh doch, kann ich, warum geht das?Ich dachte, das geht nicht, ich dachte, das ist der Sinn davon gewesen, dass das nichtgeht.Okay, das kann man nicht, das darf man nicht wie Public Variable machen, das muss manwohl mit irgendwelchen Properties machen.Die gro\u00dfe Preisfrage ist, Moment mal, REC 1, ob der das \u00fcberhaupt macht, okay, okay,wir lesen mal den Text dazu, was die geschrieben haben, also, wie gesagt, ich hab mich da nichtgro\u00dfartig mit besch\u00e4ftigt, zumindest, was ich in dem Webcast gesehen hab, ist, dasseines der neuen Features von Records im Vergleich zu Structs und Klassen ist, dass man sieimmutable machen kann, also sprich, dass ich, nachdem ich sie angelegt hab, sie nicht mehr\u00e4ndern kann.Was zum Beispiel, wenn man Multi-Threading macht, ganz n\u00fctzlich ist, so, \u00e4hm, so,also, das muss ich mir jetzt mal durchlesen, was verschreib ich denn mal, so, also, wasmachen wir hier in dem Beispiel, sie legen den Record an, mit zwei Properties, die, ach,die Get Only sind, ah, ich glaub, jetzt versteh ich das, okay, das probieren wir jetzt malmit dem Beispiel aus, von denen hier, also, legen wir mal den Record an, also, Personssind immer so dieser, alter, \u00fcbelste Knees-Action, Persons sind immer so der Standard-Test vondenen, irgendwie, so, und da muss ich jetzt angeben, was First und Last Name, okay, FirstName, Max, Last Name, Q-Chat, so, und jetzt kann ich die Glaube nicht mehr \u00e4ndern, ne,ah, genau, jetzt geht das nicht mehr, okay, also sprich, wenn ich das so mache, wie diedas jetzt zeigen, also sprich, mit diesen, \u00e4hm, Get Only-Properties, dann funktioniertdas nicht, so, was ganz praktisch ist, wenn ich sicherstellen will, dass nachdem die Sacheinitialisiert wurde, sie sich nie wieder \u00e4ndern kann, was man jetzt, glaub ich, machen kannist sowas hier, ne, warte mal, wie ging das, With, da muss ich die Syntax mir mal angucken,ach, so, genau, das geht, also sprich, man kann, hm, okay, also, also, also, also, also,okay, dann hab ich das noch nicht so genau kapiert, ehrlich gesagt, dann m\u00fcssen wiruns das jetzt doch mal durchlesen, was sie hier geschrieben haben, zumindest mal so grobdr\u00fcber scrollen, dass wir wissen, was da, was da Sache ist, also, das haben wir ausprobiert,das funktioniert, also, wenn ich das so anlege, kann ich das einmal anlegen und nie wieder\u00e4ndern, was jetzt nicht ganz so toll ist, jaja, das mit Init, ich, ich hab, ich glaube,ich hab das schon gesehen, dass ich da Init eintragen muss, aber ich muss mir erstmaldurchlesen, so grob, was die sonst noch dazwischen geschrieben haben, also, sprich, wenn ichso mache, kann ich nie wieder dieses Objekt \u00e4ndern, egal, was ich mach, geht nicht, istnicht erlaubt, was nat\u00fcrlich auch seinen Charme hat, das ist, das ist zum ersten Mal in CSharp so, das, das gab's vorher in der Art und Weise nicht, dass es quasi nen Typ gibt,der standardm\u00e4\u00dfig immutable ist, also sprich, den ich initialisieren kann, aber nie wieder\u00e4ndern kann, der Vorteil von sowas ist, warum man, warum man sowas zum Beispiel macht, ist,wenn man Multi-Threading betreibt, so, ich versuch euch da mal ein Beispiel zu zeigenund zwar, ne, kann ich euch kein Beispiel zeigen, das hab ich hier nicht, stelle euchmal vor, ihr lest, bleiben wir mal bei diesem Beispiel mit den Webcams, was wir hier schonmal programmiert haben, man hat einen Thread, der liest von der Webcam in den Buffer, manm\u00f6chte, kennt ihr das, wenn man bei so modernen, moderneren Aufnahmeger\u00e4ten, wenn man da Fernsehprogrammeaufnimmt, oder, oder, dass man Fernsehprogramme, kennt ihr, dass man Fernsehprogramme anhaltenkann, oder auch \u00fcberhaupt, dass man Amazon-Videos anhalten kann, ne, also sprich, du l\u00e4dst dasVideo runter, dr\u00fcckst du auf Pause und, \u00e4hm, dann f\u00e4ngt der an zu buffern, beim Fernsehprogrammzum Beispiel, also der startet im Hintergrund ne Aufnahme, so, oder, was ihr ja auch kenntist bei Shadowplay, bei Shadowplay, wo man dann, \u00e4hm, beispielsweise bis zu, bis zu,glaub, 10 Minuten r\u00fcckw\u00e4rts, oder Viertelstunde r\u00fcckw\u00e4rts, oder so Sachen aufnehmen kann,stellt man das jetzt noch mal ein, \u00e4h, wo hat man das, wo stellt man das jetzt in Shadowplaynoch mal ein, dass man, Buffer, hier, genau, guckt, also sprich, man kann hier in Shadowplayauch einstellen, dass man bis zu 20 Minuten r\u00fcckwirkend aufnehmen kann, so, und das funktioniertja auch vollenderma\u00dfen, die haben im Hintergrund was, was permanent aufnimmt, und erst wenndu dann auf r\u00fcckw\u00e4rts, r\u00fcckw\u00e4rts aufnehmen dr\u00fcckst, kopiert er das halt in ein neuesVideo-File, der muss es ja aufnehmen, weil der kann ja nicht wirklich r\u00fcckwirkend aufnehmen,dann nehmt einfach in ein Temp-File auf, und wenn du sagst, jetzt aufnehmen, dann machter eine Datei draus, so, dann stellt euch mal vor, ihr macht das auch, also sprich,ihr habt einen Thread, der im Hintergrund irgendwie was in den Buffer schreibt, undder soll nat\u00fcrlich m\u00f6glichst unabh\u00e4ngig von allen zus\u00e4tzlich weiter in diesen Bufferschreiben, sagen wir mal, so immer, so 20 Sekunden Buffer wollt ihr permanent haben,dass wenn einer mal auf aufnehmen dr\u00fcckt, zum Beispiel wenn ihr eine Kamera habt, wennihr eine Kamera aufnehmt, und ihr wollt auf jeden Fall den DHL-Lieferant oder den Einbrecherdrauf haben, bei Motion Detection, dann nehmt ihr immer 20 Sekunden permanent auf in soeinem Buffer, \u00fcberschreibt das immer wieder, 20 Sekunden quasi vorne ein Paket raus, hintenein Paket rein, so dass ihr immer 20 Sekunden habt, so, und dann gibt es ein Event, zumBeispiel, man wurde Bewegung erkannt, und dann m\u00f6chte man eine neue Datei anlegen unddiese 20 Sekunden quasi in die Datei kopieren und dann weiter darin aufnehmen, das macht,da brauchen wir unterschiedliche Threads f\u00fcr, also auf dem einen Thread l\u00e4uft dieseGeschichte mit dem in den Buffer reinschreiben, und der andere Thread wird dann beispielsweisedas Aufnehmen in Datei schreiben machen. So, und da bietet sich sowas hier an, jetzt vielleichtnicht mit so einem Record, wie ich es hier gemacht hab, aber dass man diesen Buffer alsImmutable List macht, der quasi bei jeder \u00c4nderung, also der nicht ge\u00e4ndert wird, sondernimmer eine neue erzeugt wird, das hat n\u00e4mlich den gro\u00dfen Vorteil, ich kann einen Snapshotmachen, mit Immutable Sachen kann man immer wunderbar Snapshots machen, also sprich ichmache einen Snapshot von dem Buffer, \u00fcbergebe den der Funktion, die meine Aufnahme startet,w\u00e4hrenddessen kann ich in dem anderen Thread weiter einlesen, das was von der Kamera kommt,aber im Hintergrund habe ich einen Snapshot von dem Buffer, schreibe die 20 Sekunden ausdem Buffer in der Datei, und dann nehme ich weiter auf und schreibe es hinten dran. Also,sowas bietet sich zum Beispiel an, dass man eine Immutable List oder sowas nimmt, spricheine Liste, wo jedes Mal wenn ich ein Element anh\u00e4nge oder entferne, eine neue Liste erzeugtwird, anstatt die bestehende Liste zu ver\u00e4ndern, eigentlich den Nachteil ist es ein bisschenlangsamer. Da gibt es nat\u00fcrlich noch andere Varianten, wie man das machen kann, man kanndas ganze auch locken, sprich ich kann auch einfach sagen, ok, w\u00e4hrend die Aufnahme l\u00e4uft,f\u00fcr die erste Sekunde, wie ihr zum Buffer schreiben braucht, locke ich den Buffer undman darf in der Zwischenzeit nichts reinschreiben. Kann ich auch machen, muss man sich dann unterscheiden,entscheiden was man dann haben will. Ja, so, jetzt gucken wir uns aber mal das Beispielhier genauer an, was die jetzt eigentlich genau getrieben haben. Also, Public RecordPerson, Last, das haben wir ja gemacht. So, was das hier macht, soweit ich das sehe, istja ein Constructor, mit dieser neuen, ich habe vergessen wie sie hei\u00dft, diese Syntax,also sprich, anstatt das hier, kann ich auch sowas hier schreiben. Das ist neu, das gibtes hier, das gibt es glaube ich seit C Sharp 8, die lange Schreibweise davon w\u00e4re folgendes,so, das w\u00e4re die lange Schreibweise davon. Was jetzt sch\u00f6ner ist, kann man sich streiten,ich pers\u00f6nlich finde immer noch das hier ein bisschen lesbare, aber nachdem ich faulbin, finde ich die Sache hier auch ziemlich gut. Ich wei\u00df nicht, Chat, wie es euch geht,was ihr da bevorzugt, unter der Haube ist es das gleiche, also es kommt genau das gleichebei rum, also sprich, das ist die klassische Constructor Schreibweise und das ist dieseneue, ich habe vergessen wie sie hei\u00dft, Expression Member Schreibweise, Expression Body, genau,der Void-Danny ist ja Big Brain, der kennt sich aus. Genau, also was da sch\u00f6ner ist,kann man sich, ich wei\u00df nicht, was findet ihr sch\u00f6ner, Chat? Also sprich, jetzt kannman so machen, ja und das ist glaube ich seit C Sharp 8 oder 7 war das drinnen, dass mandie Sachen so schreiben kann, also sprich, das hier sind die Werte aus dem Constructor,die man bekommt und das sind die Private, nicht die Private, das sind die Properties,die wir zugewiesen kriegen, Geschmackssache. Das hier braucht man aber gar nicht mehr,jetzt verstehe ich, warum es das gibt, genau, weil es gibt seit ein paar C Sharp Versionendie M\u00f6glichkeit sowas hier zu machen, dass man keinen Constructor mehr verwenden muss,sondern, dass man die Sachen so initialisiert, aber das, jetzt verstehe ich was sie gemachthaben, aber das funktioniert hier nicht, normalerweise k\u00f6nnte ich hier sowas machen, last name gleichMax, first name gleich Max, last name gleich Chat, so, das funktioniert aber nicht, weilich gesagt habe, die Dinge hier sind read only, wenn ich jetzt sowas hier machen w\u00fcrde,wenn ich erlauben w\u00fcrde, dass man da was reinschreiben kann, dann funktioniert das ganze wunderbar,aber das will man ja nicht, man will ja, dass das ganze immutable ist, dass man es nicht\u00e4ndern kann, deswegen funktioniert das nicht, und deswegen haben sie jetzt neue Schl\u00fcssel,jetzt habe ich glaube ich zum ersten Mal kapiert, warum sie das gemacht haben, jetzt haben sien\u00e4mlich ein neues Schl\u00fcsselwort eingef\u00fcgt, n\u00e4mlich init, das k\u00f6nnen wir alles hier skippen,wo haben sie es hier, init, jetzt gibt es n\u00e4mlich noch einen dritten, wie hei\u00dft denn das aufdeutsch, Zugriffsbeschr\u00e4nkungsoperator, frag mich nicht, wie das Ding genau hei\u00dft, jetztkann man n\u00e4mlich anstatt get set oder sowas wie private set oder so, kann man jetzt initverwenden, wenn ich init verwende, dann darf ich die Sachen so initialisieren, aber danachsie auch nie wieder \u00e4ndern, wenn ich das jetzt richtig verstanden habe, oder? Ja, ok, dasist eine coole Sache, weil ich muss euch ehrlich sagen, ich verwende mittlerweile fast lieberdas hier zum initialisieren, als wirklich die Sachen im Constructor, wenn es was ist, woein bisschen l\u00e4ngere Eintr\u00e4ge dazu kommen, zumal ja auch der Vorteil glaube ich relativauf der Hand liegt, also wenn ich jetzt eine Klasse habe, mit sagen wir mal irgendwie ganzvielen, ganz vielen Sachen, mit ganz vielen Datenproperties, dann ist es nat\u00fcrlich vieleinfacher, die so zu initialisieren, als den hier zu machen, mal exemplarisch, what thefuck, so m\u00fcsste ich das ja dann machen, wenn ich einen Constructor h\u00e4tte, der alle meineDatenproperties initialisieren will, das ist ja hardcore un\u00fcbersichtlich, deswegen istes so eigentlich sch\u00f6ner, dann w\u00fcrde ich so machen, 2, 2, 3, 3, 4, 4, easy, das ist dochviel besser, das finde ich nett, das hat was, das hat was, das mag ich, so, genau,so jetzt kann ich aber immer noch eine Klasse anlegen und sie hiermit initialisieren, aberich kann danach nichts mehr \u00e4ndern von dieser Klasse, guckt, wenn ich versucht was zuzuweisen,bei last name, da sagt er mir, nee, in it only geht nicht, was ist jetzt, wenn ich aberdoch was anlegen m\u00f6chte, mit den Werten, also wenn ich die Werte \u00e4ndern will, das ist,das ist der big brain streamer am Abend heute, so und da kann ich jetzt glaube ich sagen,reg1 with last name gleich, ah jaja, so und jetzt habe ich folgendes gemacht, ich habehier meine Klasse reg1, \u00fcbrigens ich glaube die haben auch to string \u00fcberschrieben, dassman die Sachen ordentlich printen kann, guck mal hier, eigentlich richtig, eigentlich einerichtig coole Sache, das ist auch was, was mir an den C sharp Entwicklern ganz gut gef\u00e4llt,die machen nicht immer so riesen \u00fcber neue komplizierte Dinger, das sind einfach Sachendie praktisch sind, so also jetzt habe ich hier reg1 und ich habe reg2 und reg2 ist derfirst name, ah jaja und in reg1 hat sich nichts ge\u00e4ndert, genau, also sprich ich habe jetzteinen neuen record angelegt mit den Werten von record 1, also ich habe record 2 angelegtmit den Werten von record 1 und habe den first name ge\u00e4ndert, eigentlich ganz nett, ich glaubeich werde es erstmal nicht verwenden, weil ich immer eine Weile brauche mit neuen Features,bis ich die dann nat\u00fcrlich, nat\u00fcrlich quasi einbaue, ich glaube erstmal werde ich da\u00fcberhaupt gar nichts mitmachen, vermute ich jetzt einfach mal so, weil ich habe ehrlichgesagt auch noch gar keine gro\u00dfartige Idee wof\u00fcr ich das jetzt brauchen w\u00fcrde, so cooldas Feature an sich sein mag, wo w\u00fcrde ich es verwenden, mir f\u00e4llt spontan nicht soviel ein ehrlich gesagt, wo w\u00fcrde man es verwenden, was haben die hier f\u00fcr Beispiele,ja gut das sind so die Standard Beispiele, record dog, record pad, das, ok was schreibensonst noch dazu, ja chat hat von euch immer eine Ahnung wof\u00fcr man das jetzt genau verwendenw\u00fcrde, also mir f\u00e4llt jetzt spontan nicht so viel ein gerade, ich glaube das ist soein Ding, wenn man es braucht und dran denkt, dann freut man sich, dass man jetzt dran gedachthat, wenn man was hat, wo sich es gut f\u00fcr eignet, aber ich kann mir nicht vorstellen,dass das was ist, was ich t\u00e4glich mehrfach nehme, choose my name sagt vielleicht, wennman irgendwelche API anspricht oder Datenhaltung macht, zum Beispiel JSON Zeugs, vielleicht,mir f\u00e4llt da jetzt nicht so viel ein zu, wenn man state halten will und properties, alsoin multithreading Sachen stelle ich es mir teilweise ganz praktisch vor, generell sindimmutable Sachen, wenn man multithreading macht, wo man snapshots von verschiedenenStatus braucht, ist das ganz nice, sowas wie der silver dog schreibt, ok hier schreibensie auch was ein record type f\u00fcr einen macht, methods for value based equality comparison,das ist das, was wir gerade gesehen haben, also sprich, dass record 1 gleich gleich record2 ist, wenn der inhalt gleich ist und nicht die referenz, get hashcode \u00fcberschreiben,das braucht man zum Beispiel f\u00fcr dictionaries und sowas, also man kann ja bei jedem Objekt,hier record 2, get hashcode, man kann ja von jedem Objekt sich quasi mehr oder wenigerhoffentlich unic hashcode generieren lassen, das braucht man zum Beispiel intern verwendendesdictionaries um die Objekte einzuordnen und sowas, so das haben sie \u00fcberschreiben, copyand clone members gibt es, das, das k\u00f6nnte sogar ganz n\u00fctzlich sein, das k\u00f6nnte sogarganz n\u00fctzlich sein, copy, wie, wie, wie, wie, wie, wie, wie, wie, wie, wie, wie, wie, wie,wie, wie, wie, wie, wie, wie kann ich dieDie list copy macht okay das muss ich nicht ist copy macht das nicht oderJa das ist jetzt die frage legt es jetzt dann jedes mal neue records an oder nicht dasm\u00fcssen wir mal ausprobierenGut UntoString \u00fcberschreibt es f\u00fcr einen das ist tats\u00e4chlich ganz n\u00fctzlich deswegenkann man sowas hier machendeswegen kann man sowas hier machenWisst ihr was ich finde das ist sogar fast das n\u00fctzlichste Feature da drandass man es einfach printen kannSo easy das jetzt aussieht und so easy das in anderen sprachen ist so einfach ist dasin C sharp gar nichtwenn ich eine klasse habe und m\u00f6chte die die die daten die drin gespeichert sind in soeinem format ausgeben da muss ich jedes mal ToString \u00fcberschreiben das ist gar nichtso einfach wie es aussiehtOkay der Chat wollte irgendwas was habe gerade ein kleines RAS programmiert das \u00fcber Netzwerkmiteinander kommuniziert auf Linux kompil kompilieren kein Ding auf Windows muss manerst mal 30GBEy vieles ist unter Windows was Entwicklungssachen angeht richtig ekligDa ist dort net mit Visual Studio und so wirklich eine riesen Erholung wobei man daf\u00fcr ja auch30GB Visual Studio und SDK und alles installieren mussWeiter bei GTK unter Windows habe ich mal gemacht ist abfuck hoch 3 oder hoch 10 hoch100Also GTK unter Windows ist wirklich abgefuckt da musste erst mal sys msys ne wie hei\u00dftdasmsys 2 installierenUnd \u00e4hm dann musst du GTK installieren unter msys 2 und dann hast du das Problem dassdie GTK Libraries aus msys 2 mit mingw kompiliert sind wenn du das allerdings mit dem VisualStudio C++ compiler oder Visual Studio compiler benutzen willst dann geht das nicht totalwie also GTK unter Windows ist echt absolute Zumutung\u00c4h Silver Dark ja da kommen wir noch zu das habe ich auch schon gelesen dass man keinMainmap braucht\u00c4h also GTK ist absolut keine Konkurrenz gegen Qt und ElectronGTK ist so ein Linux only DingIch muss euch sagen mir gefallen in der Regel die meisten GTK Programme meistens besserals die KDE Counterparts wenn es einfache Dinger sindKomplizierte Dinger sind eindeutig die KDE Programme oder die Qt Programmeweil die GTK Programme meistens ultra rudiment\u00e4r sindAber generell sobald es Cross Platform ist bleibt hier nur noch Qt \u00fcbrigVLCGucken wir mal VLC 1 GUIDie ersteDas erste VLC GUI ich wei\u00df gar nicht ob es VLC 1.0 warDie das war noch ein GTKDas war noch ein GTK InterfaceMittlerweile ist VLC auch Qt einzig und allein aus dem Grund weil sie gesagt habenGTK Cross Platform ist shitWegen Ansela kein Bock mehr draufUnd ich kann jeden verstehen der keinen Bock hat auf GTK Cross PlatformGTK ist eigentlich so ein Ding was du da musst du schon richtig Hardcore Gnome Fan seinWeil ich hab mal versucht mit GTK was zu machenDie sind so Bleeding Edge bei GTKDass die quasi bei jeder Gnome Version was umbauen was es inkommatibel zum anderen machtUnd das dann aber auch nicht irgendwie in ihrem Gnome abfackenSondern im GTK und deswegen funktioniert ein GTK mit dem anderen Beispiel dann mal richtigUnd sind dann auch nie richtig dokumentiert weil das schon wieder so neu istAlso GTK ist wirklich abfack was das angehtGTK unter Windows verwendet ja nicht ohne Grund kein GTK 3Ich glaub GIMP unter Windows immer noch GTK 2Oder?Oh neHaben sie es mittlerweileJa gutJa gut vor ner WocheVor ner WocheGTK 3 gibt es seit 10 Jahren oder soHaben sie es jetzt schon geschafftWeirdchampDas hat schon seinen Grund warum das nicht funktioniert hat die ganze ZeitOk aber zu den Record Types mit ich wie gesagt ich wei\u00df noch nicht so wirklich vor was ichsie braucheAber wenn ich sie brauche find ichs bestimmt cool dass sie da sindWas ich viel cooler finde ist Init PropertiesAlso Init Only Setter find ich niceIch hab ja schon immer gerne diese Initialisierungs Variante gemochtAlso lieber als alles in Constructor schreibenUnd ich denke mal dass das auch bei normalen Klassen geht oderMach mal ne Class drausDann geht das hier nat\u00fcrlich nicht mehrJa funktioniert auch mit ner normalen Class okWarum keine Init Only GetterDu solltest ne eigene Programmiersprache designenIch find Init Only Getter ist ne super IdeeDas sind dann quasi Getter die zur Compile Zeit schon den gleiche also im Prinzip einStandard Getter mit Default ValueJa was auch immerDarf ich Qt nur eingeschr\u00e4nkt privat nutzen?Nee also bisher war es so dass jeder Qt verwenden darfWie gesagt ich wei\u00df nicht ob das geht hierGeht um das hier Cross Platform GUI FrameworkWowHm MonkaSAh das war auch das Falsche oderLulEs geht um dieses Cross Platform FrameworkAlso bisher war es glaube ich so es darf jeder Qt verwendenSo wie kommerziell als auch privatSofern er es nicht statisch linktSo was wie statisch linken ist ein C++ DingDas muss man sich normalerweise in anderen Programmiersprachen heutzutage gar nicht mehrGro\u00dfartig mit besch\u00e4ftigenAber es ist C++ da ist sowas noch an der TagesordnungSachen die man 1995 machen musste macht man halt auch 2020 noch in C++Ja soweit ich wei\u00df ist das soWenn man Qt statisch linked braucht man irgendwie ne LizenzUnd wenn man Qt Libraries ausliefert mit ausliefert und dynamisch linkedWas im Prinzip gar kein Unterschied macht wenn man die Libraries mit ausliefertAu\u00dfer dass man sie austauschen k\u00f6nnte was eh keiner machtUnd am Strich kommt es gleich heraus darf man es verwenden wie man willNee nee du musst kein Source Code ProvideNee nee neeLGPL ist eigentlich eines der besten Sachen die es gibtLGPL ist du darfst quasi allesAlso LGPL ist Commercial allesIch wei\u00df noch nicht mal was LGPL nicht erlaubtGenauso so ein bisschen wie diese komische BSD Lizenz daDa darf man auch allesMal ne Frage ich mach mal kurz den Chat ein bisschen gr\u00f6\u00dferMal ne Frage was sollte man in Pricen k\u00f6nnenUnd wie findet man das am besten wasUnd wie findet man da am besten etwas zuHabe bis jetzt nur Mathe und Plotting gemachtOk Mathe und Plotting ist jetzt meistens nicht so das was die Leute als Einstieg in ProgrammiersprachenmachenDer Polar Fuchs hat SubscribedDankesch\u00f6n f\u00fcr den Prime SubNoch mehr High IQ f\u00fcr den Chat heute das geht aufw\u00e4rtsDankesch\u00f6nJa also Kali Rex das ist jetzt sehr vage gestellt diese Frage also die kann man eigentlichso nicht beantwortenIch mein was sollte man in Pricen k\u00f6nnenWas solltest du keine Ahnung beim Tischfu\u00dfball spielen k\u00f6nnenAlso es ist schwer zu sagen also das h\u00e4ngt ganz stark damit ab was du f\u00fcr einen Anspruchda an dich hast was du k\u00f6nnen solltestUnd wie man da am besten was herausfindet kann man erst herausfinden wenn man \u00fcberhauptwei\u00df was man machen willWeil wenn du nicht wei\u00dft was du machen willst ist ja auch schwierig was herauszufindenAlso umgedreht geht das ja schlechtIch bilde mir auch ein dass das so istDas ist das was ich auch so im Kopf habeDu darfst nicht statisch linken ansonsten ist das alles in OrdnungDaher ist es eigentlich schwer das zu finden wozu ich es braucheAlso wenn du kein Anwendungswerk hast dann brauchst du es ja auch nichtOder ich verstehe es nicht so wirklich also warte mal anders wenn du mit Pricen anf\u00e4ngstdu die Standardsachen die man am Anfang so machtDas sind so die das sind so eigentlich die Basics die man in jeder ProgrammiersprachemachtMan guckt sich an so ein bisschen standardm\u00e4\u00dfig eine Ausgabe sprich wie lese ich Dateien einwie schreibe ich DateienWie programmiere ich ein paar einfache if else Geschichten wie mache ich mal eine Schleifewie lese ich Sachen von der Kommandozeile ein wie gebe ich Sachen auf die KommandozeileausWie schicke ich ein Webrequest wie lese ich ein WebrequestSo die Basicsachen die man in jeder Programmiersprache macht aber es ist viel einfacher zu beantwortenwenn man einen gewissen Anwendungszweck hat wo man was zu machen willAnstatt einfach so ins blaue also so ganz ins blaue rein ist ziemlich schwierig zu beantwortenUnd so einfach Pricen aussieht mittlerweile ist das auch ganz gut komplex gewordenAber es ist echt h\u00fcbsch also Pricen ist wirklich entspannend zu programmierenIch finde eines der gr\u00f6\u00dften positiven Punkte istWas Pricen angeht dass die eine ziemlich gute komplette Standard Library habenAlso die haben von einem DNS Client bis zu einem CSV Parser bis zu irgendwelchen abgedrehterenKram bis zu einem HTTP Server die haben eigentlich alles drinDeswegen mag ich Pricen auch wenn ich wenig mitmachOk In It Only Setters haben wir uns auch angegucktAlso sprich ich glaube das Feature haben wir jetzt abgefackelt halbwegsIch scroll nochmal kurz dr\u00fcberPositional RecordsWhat the hell ist das eher lang?Alter so viele KlammernDas ist irgendwelche Vererbungsgeschichten oder soDas werde ich eh nie verwendenJa das sind irgendwelche Vererbungs SachenAh Moment mal das ist coolDas ist tats\u00e4chlich ganz niceKann ich das hier auch verwenden?Das geht wahrscheinlich jetzt nicht ne?Moment das muss ich mal ausprobierenNein das geht nicht das geht nur wenn ich das Beispiel von oben verwende was sie hierhattenNe Moment dann habe ich es noch nicht gechecktOk dann habe ich es nicht kapiert was sie mir hier sagen wollenWas macht der da anders als ich?Ah das ist coolDas gef\u00e4llt mirOh das ist ja mal niceDas ist doch mal ein cooles Feature also sprich anstatt diesen Schmodder hier zu schreibendie klassische Class Declaration kann ich einfach die Abk\u00fcrzung benutzen und der machtdas alles f\u00fcr michAlso sprich das hier das hier und das hier ist genau das gleicheJa das ist nice das gef\u00e4llt mirDas ist niceJa das spart auch wirklich tippenOk jetzt habe ich einen Anwendungszweck daf\u00fcr was ich verwenden w\u00fcrdeAlso sprich wenn ich eine Klasse mache die nur Daten enth\u00e4lt dann w\u00fcrde ich eigentlichso machen jetztDer ist neu den gibt es seit 5 Tagen quasiAber dass man quasi das hier schreiben kann und das hier bekommt und das hier generiertdie auch schon viel unter der HaubeJa sie kriegt viele funktionale FeaturesSo und jetzt guckt mal jetzt kann ich sogar deconstructenJa das ist das ist niceDas ist wirklich coolAlso sprich ich kann jetzt also ich bekomme von irgendwo diesen Rekord mit FirstNameMaxLastNameLinks und ich kann jetzt den deconstructen in zwei Variablen n\u00e4mlich First und Lastund kann ich nennen wie ich will die kann ich auch A und B oder so nennen das ist wurschtmuss ich wirklich First und Last hei\u00dfenUnd jetzt kann ich direkt jetzt kann ich quasi aus diesem Rekordobjekt zwei Variablen erstellenAch nee nicht Moment nicht festJetzt kann ich quasi zwei Variablen aus diesem Objekt erstellen ohne dass ich da jetzt irgendwiegro\u00dfartige Sachen anlegen und zuweisen mussDas ist ein cooles Feature das gef\u00e4llt mirGuckt ich habe jetzt quasi dieses Rekordobjekt deconstructed in die Variable First und Lastund das geht nur das geht nur weil es positional ist weil er wei\u00df das hier ist die also dashier steht an erster Stelle das hier steht an zweiter StelleDeswegen kann er deswegen um die Leute zu verwirren kann k\u00f6nnte man auch sowas machendas funktioniert genauso nur dass es jetzt umgedreht ist also sprich es ist egal wiedieser Kram hier hei\u00dft es kann auch A und B hei\u00dfen wichtig ist die Position wie iches angelegt habeDas ist ein cooles Feature ok das hat mich \u00fcberzeugtDas verwende ich Last Name League oh MonkaSDas verwende ich\u00dcbrigens kennt ihr die Big Brain Taktik eine Schleife zu machen die von 1 bis 50 z\u00e4hltalso weil die einfache Variante ist das da ok sagen wir mal 0 bis 49 die einfache Varianteist das daSo kriege ich 50 Leerzeilen jeder vor das ist die einfache Variante die Variante dieglaube ich jeder checkt aber viel Big Brainigere VarianteEnumerable range 0 bis 50 for eachnicht dass das wirklich sinnvoll ist aber irgendwie ist es mir gerade zu den Kopf gekommenhier also wem einfache Vorschleifen zu einfach sind macht die soja und hier drinnen z\u00e4hlen ist das gleichenat\u00fcrlich wenn man ehrlich ist ist das hier die bessere Variantedas hat andere Vorteile aber machen wir vielleicht mal andersso da gab es ein paar Fragen im Chat wo ich gerade noch was zu sagen wollteWas ist denn der gro\u00dfe Unterschied zwischen Python und C Sharp habe nicht so viel Knowledgeim Programmierbereich also das ist was was man einfach beantworten kann oder wirklichausf\u00fchrlich beantworten kann das sind grunds\u00e4tzlich vom Ansatz her zwei unterschiedliche SprachenPython ist komplett dynamisch also sprich jede Variable kann zu jeder Zeit alles seinvon einer Zahl zu einem String zu einem JSON Objekt oder sonst was und C Sharp ist statischtypisiert das bedeutet ich muss festlegen was welche Variable ist und die kann auchihren Typ da nicht zwischendurch wechselnObwohl ich bin mir gar nicht sicher kann in Python eine Variable ihren Typ wechseln?Ja oder?Ich glaube das gehtalso die grunds\u00e4tzliche Unterschiede also den finde ich markantesten Unterschied erstmalist unabh\u00e4ngig von Syntax oder sonst was C Sharp ist statisch typisiert also sprichdu wei\u00dft genau welcher Datentyp in welcher Variable zu jeder Zeit ist zur Kompilzeitschon und in Python ist es halt komplett dynamisch das ist \u00fcbrigens auch der Grund warum Pythonin vielen Bereichen so schnarchlangsam ist Python ist abfuckm\u00e4\u00dfig langsam wenn esum Performance Geschichten geht der haupts\u00e4chliche Grund ist dass es dynamisch getyped istes gibt doch hier diesen gRPC Benchmarkhier ist die Sharp da hatten die doch einen neuenwenn ihr mal lachen wolltalso man sieht die Performance von dynamischen Sprachen ist ein bisschen hinten dran warumSwift so langsam ist verstehe ich \u00fcbrigens nichtSwift sollte eigentlich auch halbwegs geschwind sein da ist wahrscheinlich die Implementierungkacke was macht gRPC da kannst du von einem da kannstdu \u00fcbers Netz da kannst du von einem kleinen \u00fcbers Netzwerk Funktionen auf dem Serveraufrufen und dir Antworten schicken lassen und sowas das ist ein Binary KommunikationsProtokollalso keine Webrequest Binaryich meine dasdas Ruby langsam ist ist mir klar und das Python langsam ist mir auch klar warum Swiftso langsam ist verstehe ich nichtPHP ok aber PHP ist auch besser als ein Ruf was Speed angeht dass Node so langsam istwobei so langsam istNode also generell Javascript ist viel schneller als ein RufJavascript ist mittlerweile extrem schnellalso diese Geschichte mit von wegen lamen dynamisch interpretiertem Javascript ist schonlange nicht mal sosp\u00e4testens seit V8 und Google damit angefangen haben ist da da ist wirklich ich wei\u00df ichhabe schon oft extrem gesagt letztes Jahr aber extrem viel Big Brain in V8 drinnealso V8 platzt das Gehirn quasi was die sich da \u00fcberlegt habendie machen so abgedrehte Optimierung Sachen in in Chrome Javascript ist der Wahnsinndie haben zum Beispieleine Erkennung drin ob der Wert in einer Schleife quasi \u00fcberlaufen kann oder nichtalso sprich wenn du wenn du auf irgendwas zugreift in der Schleife und z\u00e4hlt die Schleifehochda haben die quasi irgendwie so eine Logik drinne eingebaut in V8 ob es m\u00f6glich istdass dieser Wert jemals overflowedwenn er overflowed bleibt das langsam weil er muss jedes mal checken ob es overflowedistwenn diese diese Black Magic Google Logik quasi feststellt das kann niemals overflowendann kompilieren die quasi im Hintergrund irgendwie so einen so einen Hot Pass Ausf\u00fchrungsdingf\u00fcr in Node und dann ist es superschnell das ist wirklichExploding Expanding Brain was sie in Javascript machen echt das ist das ist nicht normaldas verstehen auch Normalsterbliche nicht mehralso also warum Swift zu langsam jetzt verstehe ich nicht PAP ok Node h\u00e4tte ich eigentlichauch ein bisschen schneller vorgestellt aber ich bin mir nicht sicher ob in diesem Benchmarkvielleicht weil es gerade einer im Chat gesagt hat irgendwelche Multithreading Sachen gemachtwerdenwenn Multithreading dann ist Node zumindest standardm\u00e4\u00dfig nicht so nicht so sch\u00f6nLua gut wer sich wirklich geben will kann sich auch Lua gebenKotlin Java ich vermute mal Kotlin ist ein bisschen langsamer als Java entweder ist eseine eigene neue Implementierung die einfach nicht so performant ist wie hier oder aberdie Magic die Kotlin angenehm macht im Vergleich zu Java schl\u00e4gt halt ein bisschen Performancem\u00e4\u00dfig reinso Go, Go gRPC ist schnell muss es auch weil Go ist von Google und und na gut gRPC istso halb von Googleso und was wisst ihr was wirklich nice ist das C++, Go,.NET und Rust ungef\u00e4hr allegleich schnell sindalso man sieht man kann mittlerweile auch in.NET ziemlich optimiertes Zeug fabrizierenund ich glaube mal dass C++ das Potenzial h\u00e4tte sogar in der Ecke schneller zu seinhier als.NET aber C++ hat auch das Potenzial unn\u00f6tig h\u00e4sslich entwicklerfeindlich undkompliziert zu sein deswegen kann es durchaus sein dass die gRPC Implementierung in C++einfach suboptimal ist im Vergleich zur Implementierung von in.NETweil in.NET blickst du durch wenn du was programmierst in C++ eigentlich nichtzumindest nicht so gutgenau gut Rust ist ganz vorne mit dabei also ausweichlich hat C++ hier eindeutig das Potenzialauf der gleichen Ebene von Rust zu seinaber es hat wahrscheinlich keiner Bock eine neue performantere gRPC Implementierung f\u00fcrC++ zu programmieren weil C++ so ma\u00dflos sackt und keiner C++ programmieren willso und Kirby Musik ist vorbei muss ich wieder anmachengibt es ein schnelleres Minibot als den Raspberry Pi 4ja total viele total viele musst du einfach mal suchen danachaber ich w\u00fcrde trotzdem nichts anderes nehmen weil die Kombination aus Support, Tutorials,Partikel, Boards und generell Community Unterst\u00fctzung ist einfach durch nichts zu schlagenach da steht Single Threaded Multi Threaded ah ich sehe es hieralso C++ Multi Threaded ist genauso gut wie Go Multi Threaded ohne MT und.NET Multi Threadedes ist nicht alles Single Threaded Multi Threaded manches ist auch unbekannt Threadedja zumindest worauf ich eigentlich raus wollte jetzt mit dieser ganzen Performance mit ganzenPerformance Vergleichund Ruby Ruby auch in vielen Bereichen wobei Ruby jetzt mit der n\u00e4chsten Ruby Versioneinen dicken Performance Boost kriegt ich hoffe dass Ruby dadurch wieder ein bisschenbeliebter wird weil pers\u00f6nlich bei mir gibt es zwei Sprachen die ich am liebsten benutzedas ist C Sharp und Ruby Ruby genau leider kann man Ruby nicht mal so gut verwenden inletzter Zeit Rails ist komplett gefallen ne wie sagt man da so komplett aus der Modegekommen genau und so normales Scripting Zeug macht jetzt eigentlich fast jeder irgendwiein Preisenschon mal mit Crystal gearbeitet ja habe ich mir vor Jahren mal angeguckt das gr\u00f6\u00dfteProblem was ich bei Crystal hatte ist dass sie so halb kompatibel zu Ruby sind abernicht richtig und dass sie nicht unter Winnows funktionierenvielleicht ist mittlerweile alles andersdu hast keine Ideen was du programmieren k\u00f6nntestdas ist nat\u00fcrlich ein Problemwas h\u00e4ltst du von Webseitenich finde Webseiten immer am sch\u00f6nsten zu machen zum Einstieg weil dann sieht man wasdas passiertweil du kannst ja dann Python Backend machenoder schwierig zu seinspielen wir das neue Cod ich habe es noch nicht mal installiert ich will unbedingt die Kampagnespielen vielleicht spiele ich sogar im Streamich habe es doch Hissi habe ich gerade beantwortet es gibt total viele Boards die schneller sindals der Raspberry Pi 4aber ich w\u00fcrde trotzdem keines empfehlen weil die von Support und Community Unterst\u00fctzungund Tutorials und Software die einfach l\u00e4uft und Hardware Erweiterungen so einfach nichtso gut sindund meistens ist der Raspberry Pi 4 ja nicht irgendwie der limitierende Faktor bei demwas man machen willwas haben sie hier sonst noch GAPC Benchmarks blaja und Python ist halt manchmal echt krass langsam so wie man hier siehtund das liegt um jetzt mal auf die urspr\u00fcngliche Frage zur\u00fcck zu kommen was der gro\u00dfe Unterschiedzwischen.NETund C-Sharp und Python ist das liegt zum gr\u00f6\u00dften Teil daran dass Python dynamisch istdu kannst einfach den Ablauf von einem Programm viel schlechter optimisieren wenn du nichtwei\u00dftwas f\u00fcr einen Datentyp und also quasi wie viel Speicher ja letztendlicheine gewisse Variable zu welchem Zeit ben\u00f6tigt das ist einfach kacke zu optimierenalso dass das Python dynamisch ist ist der gr\u00f6\u00dfte Vor- und Nachteil an der ganzen Sachedas ist sch\u00f6n elegant und das ist schon einfach zu programmieren und auch sehr pr\u00e4gnantund aussagekr\u00e4ftig aber es ist halt optimierbar nur in Grenzenja und ob kompiliert oder interpretiert w\u00fcrde ich jetzt gar nicht mal in der heutigen Zeitmal so hoch einsch\u00e4tzen weil viele Sachen haben da so einen hybriden Modus also sogarin JavaScript ist es ja mittlerweile auch so JavaScript in V8 wird ja auch nicht reininterpretiert da wird ja auch dann viele Sachen werden dann wenn sie gecheckt wurden quasikompiliert dass es dann recht optimierten Code gibt also vieles ist so hybridm\u00e4\u00dfigman kann heute gar nicht mehr sagen hey das ist rein interpretiert und das ist rein aheadof time kompiliert das ist oft mal so ein Ding und beispielsweise ist es in.NET \u00e4hnlichbei.NET w\u00fcrde nie jemand sagen das ist eine interpretierte Sprache in.NET ist es so wenndu ein Programm startest dann haben die noch keinen f\u00fcr deine Plattform optimierten Codeerzeugt das hei\u00dft dann l\u00e4uft das ganze erstmal ein bisschen langsamer nicht wirklich interpretiertaber quasi in so einem Art Bytecode Interpreter ist das l\u00e4uft das dann und sobald du deswegenist es in C-Sharp auch oder in.NET auch oft so wenn du zumindest war das bisher so wenndu eine Methode zweimal aufrufst ist sie beim zweiten mal viel schneller ja das gucken wiruns gleich an mit Main und so da sieht man das ist also flie\u00dfend was da zwischen interpretierenkompilieren Bytecode4M und so da tricksten heute viele Sprachen rum und es gibt ja auchschon ein paar ahead of time Compiler f\u00fcr Python die machen Python aber auch nicht zueiner ultra schnellen Sprache es gibt so ein paar Versuche habe ich letztens gesehen zumBeispiel jemand der hat einen Python Compiler gebastelt und aber mit der Beschr\u00e4nkung dassman manche Features nicht verwenden darf man darf quasi nur so ein Subset von Python verwendendas ist dann sch\u00f6n schnell ja ich bin mal auf die n\u00e4chste Ruby Version gespannt weildie n\u00e4chste Ruby Version soll angeblich irgendwie zehnmal schneller sein oder so da bin ichmal gespannt vielleicht also wenn Ruby es schaffen w\u00fcrde hier auf dieser Ebene irgendwiezu landen w\u00e4re schon huge ja und in.NET haben sie halt die letzten die letzten Versionen\u00fcber ziemlich viel eingef\u00fchrt was der Performance zugute kommt zum Beispiel was sind wir damal also diese ganze Task Geschichte ist ja ist ja schon alt zum Beispiel ihr ganzesMemory Management fr\u00fcher war das ja so du hast f\u00fcr alles und jeden hast du irgendwelcheObjekte erzeugt in C Sharp oder in.NET die dann garbage collected werden m\u00fcssen so undwas ganz ganz eklig war in.NET ist wenn du sowas hier machen musstest also sagen wirjetzt mal wir machen jetzt mal eine Liste Liste int oder Array komm wir machen Arraymit Array geht das mit Liste geht das gar nicht also du hast ein Array sagen wir dassind jetzt irgendwie 20.000 Elemente drin so und jetzt willst du dieses Array verarbeitenan unterschiedlichen Stellen in deinem Programm unterschiedliche Abschnitte das ist gar nichtso einfach gewesen wenn du das alles \u00fcbersichtlich untereinander machst dann kannst du nat\u00fcrlichda irgendwie zig vorschleifen bauen die dann wussten wo die andere gerade ist und sowasdas hat funktioniert da haben wir jetzt aber gesagt ok solche Low Level Sachen m\u00fcssenwir anders handhaben und deswegen haben sie jetzt sowas hier gemacht das ist quasi eineAbstraction f\u00fcr Speicher Zugriff vorbei vielleicht soll ich eher auf Byte machen also sprichwenn ich auf Speicher zugreife und das Splitten will und an unterschiedlichen Stellen verarbeitenm\u00f6chte dann kann ich das damit machen und ich kann da quasi da neue Slices erzeugenneue Abschnitte von diesem Array an unterschiedliche Teile \u00fcbergeben an unterschiedlichen Teilenbearbeiten und unten drunter ist das im Prinzip immer noch das gleiche Array also sprich ichmuss hier nichts kopieren ich muss hier nichts neu anlegen an Speicher ich greife unter derHaube immer noch auf das gleiche Array zu was nat\u00fcrlich irgendwelche Parser oder Sachendie halt Multithreaded Byte Buffer Zeug verarbeiten viel viel schneller macht so das ist so einFeature was er eingef\u00fchrt im C-Shop was echt Performance geboostet hat das n\u00e4chste wassie eingef\u00fchrt haben ist dass wenn du Multithreaded wenn du Sachen Multithreaded machst dass dugibt es daf\u00fcr nicht auch GetRange kann schon sein ich wei\u00df es ehrlich gesagt nicht obes sowas wie GetRange gibt GetRange nein das erzeugt eine neue Liste das ist genau daswas ich meine das erzeugt eine neue Liste mit Referenz auf die Elemente aus der altenListe das hei\u00dft du musst jedes mal wenn du das benutzt eine neue Liste erzeugen mit Referenzenauf die alten Elemente was nat\u00fcrlich wenn du das keine Ahnung 30 Millionen mal proSekunde machst oder so auch f\u00fcr den Garbage Collector nervig wird wenn er den ganzen Kramaufr\u00e4umen muss und sie haben selbst gesagt ich muss euch ehrlich sagen ich verwendediese Span Geschichte auch relativ selten wo ich es verwendet habe ist zum Beispielbei meinem FFmpeg Video Einlese Zeug f\u00fcr den Buffer den man wiederbekommt von den UnmanagedBuffer von FFmpeg mit dem komprimierten Video daf\u00fcr verwende ich es an einer Stelle ansonstenverwende ich es auch relativ selten aber sie haben gesagt dass sie beispielsweise ihreWeb Request bei ASP.NET Core um ein Vielfaches beschleunigen konnten dadurch dass sie Spanverwendet haben so noch eine Sache die sie eingebaut haben ist was in den letzten Jahrenwirklich viel Performance Boost gebracht hat bei NC Sharp ist du hattest bisher immer soein bisschen das Problem wenn du Multithreading gemacht hast NC Sharp du hast einen neuenTask aufgemacht ein neuer Task ist ja NC Sharp eine Abstraktion zu einem Thread du wei\u00dftnicht genau ob es ein eigener Thread ist oder nicht in der Regel l\u00e4uft der Task in einemeigenen Thread Pool also sprich wenn ein Task fertig ist dann gibt er den Thread zur\u00fcckin den Pool und wenn ein neuer Task anf\u00e4ngt kann er sich den wieder rausnehmen und derStandard Thread Pool hat keine Ahnung ich wei\u00df es nicht ich sag jetzt einfach mal 500offene Threads ich hab ehrlich gesagt kein Plassen Schimmer wie gro\u00df der Standard ThreadPool ist das hat den Vorteil man muss nicht immer neue Threads erstellen und so ja soaber du wei\u00dft das nicht so genau so und eine Sache ist jetzt wenn du Sachen programmierthast die asynchron laufen in Task zum Beispiel NC Sharp dann musstest du ja als R\u00fcckgabevon so machen wir mal irgendwie hier was Static, Void, Static, Task, Blob und wenn jetzt hierirgendwas machst was ein Task erzeugt so hier kann ein Return, Task, Run so wenn ich dashier jetzt aufrufe diese Methode Blob die gibt mir den Task zur\u00fcck und dieser Task l\u00e4uftein Asynchron es sei denn ich warte drauf also zum Beispiel kann ich dann hier sagenWait Blob was das jetzt macht ist Blob erzeugt einen Task der Asynchron l\u00e4uft und ich wartehier bis der Task vorbei ist also was hei\u00dft ich warte nicht warten ist das falsche Wortich springe quasi aus der Methode raus und wenn das fertig ist mache ich dann an derStelle weiter so was das Problem ist wenn ich das 20 wenn ich das f\u00fcnf Millionen malmache keine Ahnung alle paar Sekunden dann ja Async, Void jetzt fangen sie wieder allean ne in dem Fall ist Async, Void ok hier ist Async, Void vollkommen ok weil ich awaitja den Task was willst du sonst machen ja mach da mach da by await das kann ich gleichauch nochmal erz\u00e4hlen so zumindest wenn man das jetzt wenn man das jetzt irgendwie 100.000mal die Sekunde macht das erzeugt ganz sch\u00f6n viel Overhead vor allem wenn man sich mal\u00fcberlegt wenn ich was habe was ich 50.000 mal 100.000 mal die Sekunde mache was ichAsynchron machen m\u00f6chte in einem extra Task dann ist halt eh die Frage wie Asynchron dasist weil das muss ja verdammt schnell fertig sein sonst wird sich ja nicht lohnen das 50.000mal pro Sekunde zu machen deswegen haben die jetzt was neues eingef\u00fchrt und zwar ValueTask ich werde aber einfach nur erw\u00e4hnen dass es das gibt Value Task ist quasi einRapper um Task der den Fall optimiert dass der Task instant schon fertig ist also sprichwenn ich was habe was ich sau oft mache pro Sekunde und ich w\u00fcrde daf\u00fcr jedes mal einenneuen Task erzeugen aber das Ergebnis was ich mit diesem Task berechnen will ist so schnellmeistens zumindest so schnell da dass es quasi Synchron ist da kann ich das mit Value Taskmachen weil der optimiert diesen Fall dass ich Sachen quasi so fake Asynchron macheobwohl sie eigentlich Synchron sind und dann muss der auch keine 30 Billiarden Sachen erstellenpro Sekunde so und das ist auch eine Sache wo sie viel Performance optimieren konntenin dotnet so dann haben wir jetzt hier noch eine Frage von springt er bei Await wiederin die Methode ja Await ist eigentlich viel einfacher als es auf den ersten Blick alsoumgedreht Await h\u00f6rt sich Await h\u00f6rt sich erstmal einfach an wenn man sich damit besch\u00e4ftigtstellt man fest fuck das ist doch gar nicht so einfach und wenn man sich dann ein bisschendamit besch\u00e4ftigt dann stellt man fest dass es viel einfacher ist wenn man sich so vorstelltalso dieses Konstrukt gibt es nicht in C-Sharp aber das ist im Prinzip das was ein Awaitmacht ein Await ist ein Return ein Await ist ein Return mit einem Callback wenn es weitergehtalso ein Return beendet die Methode ja komplett so und ein Await also es w\u00e4re eigentlichfast aussagekr\u00e4ftiger man w\u00fcrde Return Await schreiben aber es ist halt in dem Fall nurAwait was dann Await macht ist folgendes also sagen wir mal so ich ruf jetzt diese Sachehier dreimal auf und danach sage ich dann irgendwie fertig wir machen jetzt mal TaskRun Big Brain Code machen wir jetzt Threadsleep 100 Threadsleep 1000 also ich wei\u00df ich machenoch einen Task der ne Sekunde wartet und jetzt rufen wir das Ganze mal auf achso \u00e4hMoment jetzt muss ich danach warten \u00e4h Moment \u00e4h Task ne \u00e4h \u00e4h erst mal ah stimmt dasgeht jetzt ja ne nicht was hab ich verkehrt gemacht achso ha das kann ich jetzt nichterwarten doch wuppi du hast vollkommen recht das funktioniert ja so nicht keck weh jetztbeendet er sich n\u00e4mlich ja \u00e4h fuck wie mach ich das jetzt wie zeige ich das jetzt am bestenConsole Readline dann beendet er sich nicht ja du hast recht in dem Fall ist es tats\u00e4chlichbl\u00f6d gewesen ja \u00e4hm so ich h\u00e4tte dir wirklich Task zur\u00fcckgeben sollen ja jetzt weil jetztkann ich jetzt auch erwarten wuppi und ich hab noch gesagt ist okay und gleich kommtb\u00e4m ist nicht okay so also was der hier macht ist jetzt vielleicht soll ich hier noch wasdazwischen ausgeben also so das ist das ist \u00e4h quasi das erste mal wenn er rausspringtdas ist das zweite mal wenn er rausspringt und das ist das dritte mal wenn er rausspringtso was der macht ist folgendes eins zwei drei also wenn der hier Test aufruft geht er erstmal hin blub so blub startet ne neuen Thread ne neuen Task der ne Sekunde wartet also imPrinzip block das quasi ne Sekunde wenn man es so will so was der jetzt hier an der Stellebei dem Await macht ist wenn der hier das Await sieht dann startet er das und geht wiederraus hier mal hier mal warte ich jetzt auch also sprich an der Stelle passiert nichtsder returned und er bekommt ne Callback wenn blub fertig ist und wenn blub fertig ist machter hier weiter im Prinzip ist Await blub exakt das gleiche wie das hieraber man sieht schon wie eklig das jetzt wird ne man sieht man sieht man sieht schon mansieht schon wie eklig das jetzt wird ne Moment ich machs ja sogar falsch also man siehtsglaube ich schon man siehts glaube ich schon dass es dass es eklig wird mit der Zeit nedas ist n\u00e4mlich fast schon ein Java Callback ich kann es aber nicht mal richtig schreibenalso das hier ist das gleiche wie wenn ich das mit Await machealso der f\u00fchrt blub aus wenn blub fertig ist macht f\u00fchrt er das hier aus wenn blubhier fertig ist f\u00fchrt er das hier aus das ist genau das gleiche wie wenn ich so schreibealso ja der returned immer an der Stelle bekommt ne Callback wenn das fertig ist und machtdann das hier weiter intern wenn man sich das ich hab jetzt ehrlich gesagt keine Ahnungob Ryder nen D-Compiler dabei hat da sieht man das auch sch\u00f6n der hat dann ein riesiglanges Switch Statement wo er sich den Statement beim rein und rausspringen und wozu brauchtman da einen Tags der Arbeit doch von oben nach unten das sieht so aus der arbeitet vonoben nach unten aber es ist insofern asynchron mal angenommen du h\u00e4ttest jetzt ne grafischeOberfl\u00e4che ne grafische Oberfl\u00e4che mit nem Knopf so und wenn du den Knopf dr\u00fcckst dannw\u00fcrde hier dann w\u00fcrde der hier Test aufrufen und Test macht jetzt nicht das hier Test machtnicht das hier sondern Test macht mal einfach mal ganz hardcoded sleep 50.000 so was jetztpassieren w\u00fcrde in deiner grafischen Oberfl\u00e4che ist das GUI w\u00fcrde 5 Sekunden h\u00e4ngen und w\u00e4reabsolut unresponsive und Windows w\u00fcrde wahrscheinlich sagen die Anwendung reagiert nicht wollensie die Anwendung beenden so nicht so mit Await weil Await plockt nicht der arbeitetzwar von oben nach unten ab aber nicht indem er hier wartet deswegen ist Await ist schwierigdas Wort ja der wartet hier nicht der plockt nicht an der Stelle der geht raus aus derMethode und du machst hier oben weiter jetzt nicht das kann man ohne GUI schlecht schlechtdemonstrieren mir f\u00e4llt jetzt auch kein gutes Beispiel dazu ein du hast den Vorteil in nemGUI dass hier das return zu dem thread der aufruft deswegen return Await verfasst verfasstirgendwie pr\u00e4gnanterich \u00fcberleg gerade ob ihr ein gutes gutes Beispiel einf\u00e4lltja ok wir machen wir machen mal eins also alter die Musikso wir machen mal was so wir machen jetzt hier oben mal nen wir tun jetzt mal als h\u00e4ttenwir nen UI Task nen GUI Task der irgendwas macht der macht nun der macht ne Endlosschleifewo nix passiert au\u00dfer dass er die Schleife einmal pro Sekunde durchl\u00e4uft und da rufich jetzt hier unten Test auf ich sollte vielleicht noch ne Ausgabe machen 1 2 3 so und was manjetzt hier sch\u00f6n sieht ist so was man jetzt hier sch\u00f6n sieht ist das ist ja gut hier kommtfertig dazwischen ne das ist jetzt do also was man hier sieht ist er m\u00fcsste er m\u00fcssteja eigentlich m\u00fcsste der hier drei Sekunden plocken macht er aber nicht ich nehm mal kurzdie ne mal kurz hier die dinger hier raus ne also von der Idee her m\u00fcsste der jetztdrei Sekunden plocken nach meinem 1 2 3 aber das 1 2 3 kommt einmal in der Sekunde SekundeSekunde Sekunde aber eigentlich m\u00fcsste der ja plocken weil ich ruf hier dreimal ne Methodeauf die die ne Sekunde dauert aber der plockt nicht der ruft das auf der f\u00fchrt das hierzwar in der richtigen Reihenfolge aus aber jedes mal wenn er auf nen Await trifft machtden Return zur\u00fcck an den Task also sprich der ruft Test auf der sieht nen Await undReturned so dann irgendwann kriegt der hier nen Callback Plop ist fertig dann springter hier rein und macht weiter Returned wieder kriegt wieder nen Callback macht weiter alsosprich das ganze ist asynchron ohne dass man sich gro\u00dfartig drum k\u00fcmmern muss das machtfinde ich aber auch dementsprechend komplex weil es schwierig ist durchzusteigen wanner was an welcher Stelle macht und ich benutze das jetzt schon eine Weile und ich muss euchehrlich sagen ich tu mir manchmal auch schwer warum manche Ergebnisse rauskommen so wiesie rauskommen also das ist nicht so easy wie man sich wie es auf den ersten Blick vielleichtaussieht aber wenn man sich den Await als Return vorstellt ist das eigentlich einfacherfinde ich als also wenn man sich als Return Await vorstellt ist es einfacher so h\u00e4ttenwir jetzt ist hier ein D-Compiler dabei in also der der beste Anwendungsfall den man sichvorstellen kann wo man auch sofort sieht dass es was bringt ist wenn man sich vorstelltman hat eine grafische Oberfl\u00e4che man klickt einen Knopf und man m\u00f6chte was machen wasf\u00fcnf Sekunden dauert wenn man den Knopf dr\u00fcckt wenn man das einfach so macht dann h\u00e4ngtdas GUI f\u00fcnf Sekunden wenn man das in einem eigenen Task macht dann h\u00e4ngt das GUI nichtdann hast du allerdings das Problem dass du dann die Reihenfolge nicht mehr richtig hinbekommst und das ist halt mit Await einfacher weil im Prinzip kannst du mit Await den Codeschreiben wie du ihn synchron schreiben w\u00fcrdest also von oben nach unten aber jedes mal hierblockt er nicht sondern Return eins oben dr\u00fcber ist halt ein bisschen Eingew\u00f6hnungssacheaber mittlerweile ist fast alles was es so im.NET Framework gibt Async aber GUI istauch das beste Beispiel f\u00fcr zum Beispiel noch ein anderes Beispiel w\u00e4re zum Beispieldu hast irgendeinen Webrequest du hast irgendeinen Webrequest und du willst halt nicht dass derWebrequest zehn Sekunden h\u00e4ngt bei dein eigener Task reicht aber mit dem GUI l\u00e4sstich glaube ich am besten am besten erkl\u00e4ren so wei\u00df jemand ob Rider einen D-Compiler dabeihat hat Rider einen Explore und Decode Assembly da kann ich euch das n\u00e4mlich zeigen was der mitdem Await macht ich habe keine Ahnung wie das funktioniert habe ich noch nie gemacht wenn mandas n\u00e4mlich dekompiliert was.NET hier draus macht ist das immer noch ziemlich lesbar undman sieht was aus dem Await wird mit Rider irgendwas dekompilieren keine Ahnung kann man das?Ah das ja ja ok das ist gut das ist richtig gut das habe ich schon in ein paar Streams gesehen okdas machen wir jetzt mal also wir machen jetzt hier Task plupp wir kopieren uns jetzt mal denKram rein Using System Threading glaube ich ne wo ist wo ist Task drinnen? Wei\u00df das gar nichtich lasse das immer so wo ist dann Task drinnen? Using System Threading Task ist es glaube ichund was hat er hier f\u00fcr Schmerzen? Ich hab das noch nie verwendet geht das? Public Class C Await M ok dann machen wir das so, pluppieren wir das n\u00e4mlich hier reinPublic kann das auch f\u00fcr mich formatieren Using System Threading Task und threading genau da kann man sich n\u00e4mlich sch\u00f6n angucken was der da draus macht so und jetzt noch die Methode die das ganze aufruftnajaok hier sieht man es guckt es sieht \u00fcbelst wie aus aber das ist was Await unter der Haube machtso hier ist das ist jetzt halt IL Code was rauskommt also sprich das zwischenkompilierteding von von C-Sharp wo sind wir jetzt ok void main ist egal task test gut das hier ist meinemeine testmethode hier und das hier ist plupp plupp ist relativ easy plupp sieht dekompiliertungef\u00e4hr so aus wie plupp im source code also so so ungef\u00e4hr nicht so viel unterschied manerkennt es immer noch so aber hier wirds jetzt hier wirds jetzt interessanter man sieht hieroben schon dieses async state machine und das sieht jetzt schon ein bisschen anders aus das ist n\u00e4mlichdie hier mit das ist die Methode also sprich Await plupp Print 1 Await plupp Print 2 Await plupp Print 2 fertig so und man sieht irgendwiesieht diese Methode und diese so komplett anders aus warum weil der diese Methode quasi in einerextra class wrapped und das ist die logik von Async und Await was hier oben reinkommtalso das hier ist quasi dies das ist diese klasse die regeneriert aus diesem also das hier ist meinAsync Await code wird das hier draus gemacht so und hier sieht man auch schon so ein bisschen die logik waspassiert da muss ich das jetzt gar nicht so sehr im detailer gucken 100 prozent alles kann ich euchdavon auch nicht erkl\u00e4ren er hat zumindest eine neue klasse generiert die Async state machineimplementiert so und move next das ist quasi so der iterator den er hier aufruft also sprichich rufe test auf er legt eine neue state machine an nach dinger die ich jetzt auch nicht alleerkl\u00e4ren kann zumindest der erste das erste Await sieht man hier wo ist mein erstes Awaitwo ist Print Result Moment wo ist mein console write line siehts ihr mal wo ist mein consolewrite line eins wo ist es hier ist mein console write line eins hier ist irgendwo mein consolewrite line zwei genau da geht hier rein in dieses switch und wenn der dann das ist ganz ekliggebaut auch mit mit go tos und sonst was also sprich der geht in dieses switch rein und returnzwischendurch oder macht der irgendwelche go tos und sonst was also man sieht zwischendrinimmer der geht wieder raus also der der beendet die methode wirklich stimmt wo kann man auf darkstellen o f mein zeug ist weg top warum ist mein zeug weg super toll ne zumindest ich hoffe man hates jetzt ein bisschen besser besser verstanden also sprich der macht gar nicht wirklich das hiernacheinander sondern der macht jedes mal einen return wenn hier ein Await kommt wenn es noch nichtfertig ist und dann springt er wieder zur\u00fcck rein es ist es ist ein bisschen komplizierter was wasman aber daran sch\u00f6n sieht ist dass Async Await reine compiler magic ist. Async Await ist nichtswas jetzt gro\u00dfartig da runtime wobei mittlerweile wahrscheinlich schon ich kann es euch nichtgenau sagen was da gro\u00dfartig runtime m\u00e4\u00dfig unterst\u00fctzt werden muss sondern das ist reinecompiler magic Async Await. Await hast du ja ja allerdings return das zu dem thread oben dr\u00fcberden es nicht gibt also das ist ja hier schon main also das ist ja schon der main threadda kann er nicht mehr weitermachen h\u00e4tte ich da jetzt noch mal was dr\u00fcber was aus dem anderentask aufruft dann wird er da return aber hier muss er ja warten bis fertig ist weil hier willich ja vielleicht auch das ergebnis verwenden danach weil hier muss er sich ja dran halten andie reinfolge ja wir k\u00f6nnten sonst jetzt ich wei\u00df nicht kann man das hier komplett rein kopierenne das funktioniert nicht oder stimmt das kann auch kein csharp 6 das kann auch kein csharp 6neun dotnet f\u00fcnf csharp neun so ja siehst du aus dieser m\u00fcll kommt aus dem ganzen Async Awaithinten raus return state machine builder task ist ganz interessant aber ganz ehrlich man musses nicht \u00fcbertreiben das ist ja gerade auch eines der vorteile von csharp dass es gut verst\u00e4ndlichist ohne dass man sich die details jetzt so extrem anguckt zumindest was man sich bei Awaiteinfach merken kann ist dass ein Await im prinzip ein return Await ist also eigentlich ist es sowas hier wir haben \u00fcbrigens auch immer nicht weiter gemacht mit dotnet 5 csharp 9 ok gab'sirgendwelche anderen sachen ich wei\u00df es ehrlich gesagt nicht wie go to naja intern wenn dieirgendwelche compiler magic machen und das verhalten klar abgegrenzt ist was passiertwarum kein go to das w\u00e4re auch ohne go to eklig hab schon mal gefragt aber was h\u00e4ltst du vonco-routines in kotlin ich habe mit kotlin noch nie was gemacht ich bin quasi kotlin jungfraudas ist kirby multithreading ist immer verwirrend ja korrekt k\u00f6nnte man keepers mit zwei faktorerweitern wei\u00df das jemand keine ahnung wie gesagt also wollte ich ich habe es dir zu guterkl\u00e4rt wie ich konnte ich hoffe man hat man hat es halblich verstanden oder gut machen wirweiter also positionen rekords ja jetzt machen wir dieses ganze async-await zeug mal wieder wegum mal zu der eigentlichen sache zu kommen die wir heute ausbringen das hier finde ich einrichtig nice feature positionen rekords was sagt er mir \u00fcberhaupt make class sealed ja stimmt alsopositionen rekords finde ich poggers ich kann eine ganz kurze pr\u00e4gnante sache schreiben ohnehier zigtausend sachen zu implementieren und rauskommt eine klasse die ich einfach als datencontainer verwenden kann finde ich nice der immutable klasse wohlgemerkt gut machen wir mal weiter alsodas haben wir uns angeguckt in it in it only setter haben wir uns auch angeguckt top levelstatements jetzt kommt was f\u00fcr die python fans unter uns so muss man es jetzt machenund man kann jetzt main top level machen das ist jetzt in valid C sharp programmdas funktioniert wie ihr seht ich sage doch das was f\u00fcr unsere python fans dasist jetzt in valid C sharp programm allerdings unter der haube wir k\u00f6nnen uns das ganze malin diesem schapland aber schapland ist doch nicht dort net 5 aber es ist doch kein dotnet5 kam in dotnet standard irgendwie umstellen geht das aber doch exzellent das macht derC sharp compiler aus dem da also der macht ein ganz normales internal static class programprivate static void main hello world raus also im prinzip wird das hier durch compiler magicnur transferiert in ja so was da aber das wie gesagt das wird unsere python fans freuenbei way was man nicht machen kann ist mehrere top level methods zu haben dann wei\u00df er n\u00e4mlichnicht was davon main ist also wenn ich jetzt glaube ich neu noch eine zweite datei oderso anlege ich habe ich in dem webkasten das geht nicht wobei das hier finde ich pers\u00f6nlichziemlich cool also man kann jetzt hier ganz normal dass die scharpe zeug machen das cwlull die frage ist das kann ich erwarten ich kann sogar das ist ein erstes main dasist doch mal was also f\u00fcr schnelle sachen ausprobieren ist das doch sehr nice das istjetzt well it's the sharp ohne ohne ganz viel boilerplate drumrum ziemlich cool kleine\u00e4nderung man sieht eigentlich nur compiler magic also reine compiler magic da ist nixruntime support aber aber coole sachen das sieht so ungewohnt sauber ausaus jetzt mal eins f\u00fcr alle funktioniert gut ich glaube die katze ist an der t\u00fcrjetzt legt sie sich auf den schrank bei mir und schl\u00e4ft gleich ja dann machtdas mal cico hast du dir eine neue katze geholt die habe ich jetzt schon \u00fcber ein jahr beidie cico ja genau \u00fcbrigens \u00fcbrigens katze hei\u00dft cico was meint ihr ob es ist weibchenoder m\u00e4nnlein cico also ich kann sagen es ist es ist ein grill es ist ein grill abersie hei\u00dft cico was irgendwie nicht so passt weil er m\u00fcsste nicht eigentlich cica hei\u00dfentrans kender genau kenne kanzler soll jetzt auch cico kommt mich nicht so b\u00f6s an denbist du nicht alles gut alles ist gut guck nicht so b\u00f6s meine katze ist beleidigt jagenau ich habe assumed das hat sehr hat sehr aufgeregt ok so machen wir weiter also washaben wir hier als n\u00e4chstes noch sch\u00f6nes top level sicherprogramm also das passt allesdas haben wir uns anguckt da gibt es glaube ich nicht so viel dazu zu sagen ich kann jetztmal die t\u00fcr wieder zumachen weil die katze hat sich auf den schrank gelegtso nicht jetzt gerade auf dem schrank ob ich das bild das bild hier nicht drin solegt sie gerade auf den schrank mich an ja ok schauen wir mal weiter moment man kannjetzt komplett one liner machen ist das los den guck mal cute chat ajaja das ist g\u00fcltigesdie schaap jetzt einfach eine zeile ich sag doch die pyson fans freuen sich jetzt genauonly one file in die application may use top level statement also das hei\u00dft wenn ich jetzteine zweite datei anlege und auch so was reinschreibe probieren wir das mal aus was er dann machtdann sagt er wahrscheinlich geht nicht omega lullwieso ja weil er unter der haube da wieder eine ganz normale meinmethode draus machteigentlich tibet das ist reine compiler magic reine compiler magic so also was was gibt essonst noch neues das ist ein feature das ist jetzt f\u00fcr das da explodiert der kopf leuteich sag es euch der platzt bei diesem feature das kapiert n\u00e4mlich auch nicht richtig dasist total abgedreht was man als machen kann pattern matching enhancements also patternmatching vielleicht ein bisschen mal ein bisschen was zu zeigen ist das wie in rust es ist mittlerweile\u00e4hnlicher als \u00e4hnlicher wie in rust als vorher also zum beispiel so die einfachste patternmatching geschichte kann man in dem if machen so was machen wir da f\u00fcr sch\u00f6nes beispielok wir machen jetzt hier war gleich eins ich kann jetzt zum beispiel mit gucken ifdas ist jetzt bescheuertes beispiel der zeit ist int das ist jetzt nat\u00fcrlich doof weilich habe hier oben ja selbst belegt das sagt ja auch es ist es ist es ist es ist es istalways true oder so und das ist jetzt neue genau also ich kann sagen ist int und wennint ist wenn int wenn wenn i ein int ist dann schreiben wir den wert in b das ist jetztnat\u00fcrlich ziemlich sinnlos in dem beispiel was ich hier gezeigt habe so es wird es wirdnoch advanceder es wird advanceder wenn wir einen switch draus machen switch so jetztkann man nat\u00fcrlich nicht jetzt kann man nat\u00fcrlich nicht cases generieren wenn wir machen wireinen int draus ich glaube da kann man das besser zeigen so lul so emotes emotes emotesint emotes ayaya monkaS lulw kekw so das reicht jetzt als beispiel switch emotes nee quatschich muss ja erst mal was an deswegen im neuen top level verwirrt mich mega emotes ob gehtdas nicht was ist happening was hat etwas okay das verstehe nicht warum geht das nichtob geht das nicht public ich glaube der compiler ist nicht magic genug ja ich glaube der compilerist echt nicht magic genug top level status must precede precede namespace and type declarationsah ich kann keine neuen sachen anlegen okay da muss ich das so rum machen meinetwegenso rum ist auch okay so ist auch okay so general switch labels so das ist das ist die klassischeart zu checken was denn beispielsweise gerade also wenn ich die und also mal angenommenich h\u00e4tte eine methode und ich kann unterschiedliche werte haben so da kann ich das quasi so dieklassische art zu checken okay ist das ist es ayaya ist es monkaS ist es lulw ist eskekw oder so was in der richtung so die neue syntax ist jetzt quasi so was in der richtungwas jetzt schwierig zu zeigen ist ehrlich gesagt ihr macht immer anders wir machenobjekt objekt draus kann jetzt ja alles sein potenziell ja wenn ich das da als obje reinkriegeso das kann ich zum beispiel sagen okay das war value beste beste name aller zeiten daskann ich mal sagen case value ist emotes oh fuck wie geht es weiter ich bin dazu lowbrain f\u00fcr wie immer deshalb schreiben value ist emotes where ne when ach du gro\u00dfe kackeemotes weh wenn weh ich krieg es nicht gebacken ich verwende das nicht so oft ich verwendesich oft genug warum sollte man das tun warum man das tun soll ist um zu pr\u00fcfen was dasf\u00fcr ein objekt ist zum beispiel also mal angenommen ist das k\u00f6nnte den ins sein dask\u00f6nnte den enum sein das k\u00f6nnte den string sein oder sonst was also ich kann zum beispielsagen if case ach nee im moment ist case ist so kann ich glaube ich mache oder ist stringb ging das so ich bin zu low brain daf\u00fcr wie ging das denn jetzt nochmal ok beispiel guckenfunktioniert das nicht wie sql synthax nee was du meinst ist link alter h\u00f6r mal aufich will euch erstmal das alte zeigen bevor wir jetzt komplett mein mein plot switch patternmatching c sharp ja genau so wie sind sie so wie sind sie schon acht war case apple manbraucht das ist gar nicht ok das hei\u00dft ich kann jetzt \u00fcberpr\u00fcfen ist es ein string ichkann jetzt \u00fcberpr\u00fcfen ist das ein emotes in am zum beispiel und so was ok ok genausowar das so und dann kann ich noch sagen ok wenn value den string man ist ja objekt esk\u00f6nnte ja alles sein so wenn es wenn es ein string ist dann kann ich sagen wenn stringdann wenn string contains a ja ja und dann gebe ich 123 aus warum ist das warum ist dasjetzt warum ist das denn hier jetzt eigentlich grau remove unreachable code der weil derwei\u00df weil value der wei\u00df weil value ist nie ist nie string der ist writer ist zu writerist zu big brain daf\u00fcr writer ist zu schlau gut dann machen wir das jetzt anders publicvoid test objekt oh so ist gut jetzt jetzt ist writer nicht mehr jetzt ist writer dummjetzt kann writer das nicht mehr so also ich habe eine methode wo ich ein objekt reingeworfenbekomme so jetzt kann ich \u00fcberpr\u00fcfen ok ist das objekt ein string und wenn es ein stringist dann gucke ich auch ob es a ja ja enth\u00e4lt so dann kann ich noch gucken ok ist es einemote wenn es ein emote ist dann will ich gucken ob es gleich monka es ist so das ist so dasist so ich habe sechs addedgibt es in C Sharp kein Object Slicing, ich wei\u00df nicht, was du mit Object Slicing meinst.Es gibt sowohl Slices \u00fcber Arbeitsspeicher, also \u00fcber Memory, es gibt Slices \u00fcber Arrays,es gibt Range Operator f\u00fcr Arrays, das ist \u00fcbrigens auch ein super neues Feature, eintolles neues Feature von C Sharp 8 gewesen, was kaum jemand verwendet.Also wenn ich hier eine Liste habe, wenn ich jetzt eine Liste habe und ich m\u00f6chte vondieser Liste das erste bis zum f\u00fcnften Element rausholen, dann kann ich sowas hier machen.Int B, naja, das ist neu seit C Sharp 8 glaube, das ist eigentlich richtig cool und totalunderrated.In Ruby und Python verwendet das jeder, aber diese Range Operators ist in C Sharp totalwenig verbreitet, man kann sogar sagen, ich m\u00f6chte von eins bis zum Ende, da kenne ichdiese, da genau, ich glaube, ich bin mir nicht ganz sicher, ich m\u00f6chte vom ersten Elementbis eins vors Ende und solche Dinger, oder war es der Raute, nee es war glaube ich das,also sprich das ist jetzt vom, oder vom Anfang, ach nee genau, das kann man auch weglassen,aber das sieht mega kryptisch aus, das sagt, ich m\u00f6chte vom Anfang der Liste bis zum vorletztenElement alles haben.Ich finde es ziemlich nice, aber total underrated in C Sharp.Ok, kommen wir mal zu diesem Pattern-Matching-Ged\u00f6ns zur\u00fcck.So, was man nat\u00fcrlich auch machen kann ist zu sagen, ok, ich will da noch gucken, Caseist Null, ich glaube, das ging so, oder nee einfach nur Null, so und was jetzt neu ist,weil ich jetzt gesehen habe, was neu ist, ich kann sagen, Not Null geht auch, hier sitztja aber auf dem, ja ist, so, also das ist jetzt neu, dass man checken kann, ob es NotNull ist, so ok, das war jetzt schon Big Brain Pattern-Matching, ach das kann man \u00fcbrigensnoch beliebig, beliebig weiter treiben, man kann glaube ich jetzt sogar checken, wir legennochmal so einen Rekord-Typ an, den wir vorher auch hatten, man kann jetzt sogar checken,if ist das Person, so und jetzt kommt neue Big Brain Magic, alter Break, jetzt kann ichmal gucken, ob das Person ist Max, so und das matcht jetzt nur, wenn es eine Person ist undnur, wenn First Name Max ist, so und mit diesem, mit dieser Sorte Pattern-Matching kannst dudie abgrundtief h\u00e4sslichsten, kompliziertesten Konstrukte aller Zeiten bauen, da platzt euchder Kopf und ich glaube, da kann man auch weitermachen, when, nee, geht nicht weiter,aber kann man end, aber man kann sagen, end, geht das, nee das geht nicht, ok und das,es wird noch viel abgedreht, also ich hab da Beispiele gesehen, wo die checken quasi,es ist gr\u00f6\u00dfer, es ist kleiner, es ist gleich, so und man kann quasi hier drinnen auch nochmalswitchen, wir gucken uns, wir gucken uns mal die Beispiele an, also das ist jetzt wirklichnur an der Oberfl\u00e4che gekratzt, was man damit machen kann, das ist das eindeutig, das BigN\u00e4chste Feature von C sharp 9, so also das ist so der Klassiker, jetzt haben wir ja geradegemacht, gucken ob das ein Apple ist, ok, seit C sharp 7 geht das, ja das haben wirgerade gemacht, Moment, das ist das falsche Dokument, so also jetzt kann man neues Pattern-Matchingmachen, Type Patterns, Match a variable is a type, das machen wir hier, String, Klammer,Patterns, Presence of Pattern Combination, Conjunction, End Patterns, All Patterns, NotPatterns, Relational Pattern, ok was auch immer, so dann kann man jetzt solche Dinger machen,is letter, ach du gro\u00dfe Schei\u00dfe, is letter C, also das ist wieder so eine, das ist eineMethode mit Expression Body Dings, also im Prinzip k\u00f6nnte man das auch mit Klammernschreiben, aber die haben sich gedacht, ey jetzt \u00fcbertreiben wir das richtig, jetztschreiben wir das nicht mit Klammern, jetzt schreiben wir das auch komplett so, Moment,ist das eine Extension Method oder was, this Char, das ist eine Extension Method oder, deswegenmuss Static sein, Phoenix, das ist eine Extension Method, du hast weil du gerade gefragt hasthier, das ist eine Extension Method, blo\u00df eine echt big brainste Schreibweise von einerExtension Method aller Zeiten, also nochmal zur Erkl\u00e4rung, das ist auch ein, finde ichein ziemlich underrated, das ist die Sharp Feature und zwar, ich versuche euch das malzu zeigen, ich glaube das geht hier schlicht und ergreifend nicht drinnen, ich glaubedas kann man hier gar nicht, das darf man hier gar nicht drinnen machen, ok, ok, ichzeige euch das mal, und zwar, wenn ihr hier ein Character anlegt, dann habt ihr ein gewissesSet an Methoden f\u00fcr diesen Character, was ist, also Char ist ja eine eingebaute Klassein.NET oder in C-Sharp, also sprich, die k\u00f6nnt ihr nicht einfach \u00e4ndern, aber ihrk\u00f6nnt die erweitern, n\u00e4mlich mit einer Extension Method und zwar, machen wir mal hier PublicClass Extensions, ich hoffe das darf man hier \u00fcberhaupt jetzt so machen, moment, \u00fcbrigensso schon mal gar nicht, Extensions und dann machen wir das hier rein und dann darf mandas auch nicht, Moment, was, ah Static, Static, jetzt gehts, so und jetzt werdet ihr feststellen,wenn ich jetzt auf A gehe, gibts da auf einmal Is Letter, obwohl das ein eingebauter Typin.NET ist, habe ich den gerade erweitert und das macht man mit einer Extension Method,\u00fcbrigens das komplette Link sind Extension Methods, also das hier, das hier sind allesExtension Methods, es ist nicht so, dass Array diesen ganzen Schei\u00df implementiert, Listdiesen ganzen Schei\u00df implementiert, Dictionary diesen ganzen Schei\u00df implementiert, das sindExtension Methods, ohne dass man den Typ an sich ver\u00e4ndern muss, sprich, ich habe jetzteine Extension Method f\u00fcr den Datentyp Char programmiert und this ist einfach nur beiExtension Methods, der, die Syntax, das damit das aktuelle Objekt gemeint ist, also sprich,hier wird quasi die aktuelle Instanz, wo ich drauf arbeite, reingeschoben, dass dieMethode damit arbeiten kann, Extension Methods ist auch ein ziemlich underratedes Ding, wasnicht so oft verwendet wird, was aber richtig praktisch ist, das ist \u00fcbrigens auch eineder Sachen, die ich extrem vermisse in C++, gerade in C++ w\u00e4re es richtig cool, wennman eingebaute Datentypen erweitern k\u00f6nnte, zum Beispiel ist die C++ String Klasse, dieStandard String Klasse, unglaublich schei\u00dfe, die ist, die hat keine Ahnung von jeglichenUnicode Sachen, gut C++ sollte sagen, m\u00fcssen sie auch nicht, es ist ja im Prinzip nur einsch\u00f6neres Byte Array, die hat keinerlei guten Methoden, also sprich, es gibt noch nichtmal to upper to lower und so was in C++ und h\u00e4tte man in C++ Extension Methods, k\u00f6nnteman das wunderbar machen, hat man nicht, nee, nee, das muss nicht Extensions hei\u00dfen, daskann auch so hei\u00dfen, vollkommen egal wie das hei\u00dft, wie du das nennst, ist egal, das istreine optische Sache, reine Optik, kannst du nennen wie du willst, kannst du sagen OmegaLul Klasse oder Ayayaya Poggers, bin ich Pegas, Poggers, Keck www kann das hei\u00dfen, so unddas ist jetzt anscheinend diese neue Syntax f\u00fcr Pattern Matching und das ist wirklichbisschen Mind Blown, also sprich, was es macht, kann ich erkennen, aber es ist schon echtHardcore, \u00fcbrigens wir k\u00f6nnen es ein bisschen sch\u00f6ner machen, wir machen jetzt erstmaleine normale Methode draus, ja, erstmal nur mal, dass man so Busy Busy Busy besser lesenkann, ok, jetzt erkennt man schon mal, dass es eine Methode ist, ja, das ist eine guteFrage, ich w\u00fcrde sagen es gibt einen Compiler Fehler, ich habe das noch nie ausprobiert,ich w\u00fcrde sagen es gibt einen Compiler Fehler, wenn die exakt gleich ist, nope, ok, ich solltees vielleicht anders machen, wir machen so noch ein bisschen anders, ok, es gibt keinenCompiler Fehler, ich habe keine Ahnung, welche davon genommen wird, ich habe keine Ahnung,beides, ah, jetzt wird er aber meckern, dass er nicht wei\u00df, was er aufrufen soll, genau,ah, Moment, was mache ich verkehrt?Ach, Moment, Moment, Schwachsinn, ich muss ja da gar nichts rein machen, das ist ja dieReferenz auf sich selber, ah, guck, jetzt sagt er, es ist doppeldeutig, also sprichnicht das Anlegen von einer mehrdeutigen Extension-Message f\u00fchrt zum Compiler-Fehler, sondern das Aufrufeneiner mehrdeutigen Extension-Message f\u00fchrt zum Compiler-Fehler, er sagt halt keine Ahnung,was ich nehmen soll, die Implementierung aus Iaiya Pogas Keg WWW oder die Implementierungaus Iaiya Pogas Keg WWW 2, nat\u00fcrlich empfehle ich jedem seine Klassen auch immer so sch\u00f6nzu nennen, wie hier, wusste ich auch noch nicht, habe ich mir das noch nicht ausprobiert,gut zu wissen, so, aber das hier ist wirklich Next Level Shit, Alter, is letter, C is gr\u00f6\u00dfera and kleiner z or gr\u00f6\u00dfer a and kleiner, ach du gro\u00dfe Schei\u00dfe, in dem Fall ist dasja noch klar, aber ich wei\u00df genau, dass die Leute das Zweck empfremden werden, bis zumgeht nicht mehr, was f\u00fcr ein Casing, Twitch Chat Case, Twitch Case hat die, die hat keinCamel Case, kein K-Bub Case, kein Pascal Case, die hat Twitch Case, mal gucken, ob die nochmehr am Beispiel, ach du Schei\u00dfe, boah, ey, what, mein, was zum Teufel, bin ich sehend,das sieht aus wie Opfoskated, ja, das sieht wirklich aus wie, ach du Schei\u00dfe, also, ichmeine, man erkennt, was er macht, er guckt, ob C und dann ist es hier kropiert, ok, gr\u00f6\u00dfera, ein kleiner gleich z oder das, das oder Punkt oder Komma, boah, fuck, ok, das istjetzt neu, das habe ich euch ja schon gezeigt, dass man checken kann, is not null, das isttats\u00e4chlich richtig gut, glaubt man gar nicht, aber mal so als Beispiel, man konnte fr\u00fcherchecken, Case null, man konnte nicht checken, Case not null, das hei\u00dft, man musste immer,ich wei\u00df gar nicht, ob man das im Case \u00fcberhaupt machen kann, man musste irgendwelche komischenKonstrukte bauen, um zu checken, ob es, ob es not null ist, wenn man das in einem Patternmatchingverwenden will, also man muss zum Beispiel gucken, hier kann, if a is not null, kannman jetzt machen, is not null, ne, wie, das geht immer noch nicht, ah, Moment, das gehtnicht, weil es not nullable ist, Objekt, ich nehme jetzt einfach, oh, das haben wirdoch hier oben, genau, das kann man jetzt machen, das ging letztes die Sharp Versionnicht, da gab es das not Keyword nicht an der Stelle, da musste man dann solche Dingerhier machen, is null, not, oder so, ich krieg die Syntax Tasche schon gar nicht mehr hinaus dem Kopf, irgendwie sowas musste man da, musste man letztes die Sharp Version machen,hat kein Mensch benutzt, so und jetzt kann man sagen, is not, is not null, ist ein bisschensch\u00f6ner, ja, man muss \u00fcbrigens sagen, dass es an der Stelle nat\u00fcrlich, ah guck mal hier,der Chat ist big brain, er muss nat\u00fcrlich sagen, dass an der Stelle macht es jetzt relativwenig Sinn, genau so ging das, ist h\u00e4sslich wie die Nacht, an der Stelle macht das wenigSinn, weil hier k\u00f6nnte ich ja auch einfach \u00fcberpr\u00fcfen, ah, is oh, gleich, gleich null,ah, das w\u00e4re hier die, oder ungleich null, das w\u00e4re hier die einfache Variante, aberdas kann ich halt nicht in Bestandteil von so einem Pattern Matching Ged\u00f6ns machen,so Performance, okay, sie sparen sich gr\u00f6\u00dfere Beispiele daf\u00fcr, also ich hab Beispielegesehen davon, das war abartig, was die Leute hier mitgemacht haben, ich versuch's euchmal zu zeigen, ich hab auf YouTube ein Video gesehen, wo sich die Sharp 9 vorgestellt hatund da hatten die den Pattern Matching, das war ein ziemlich langes Video, Pattern Matching,guck mal was der f\u00fcr ein Beispiel drin hat, siehste Leute, es wird schon ekliger, du kannstn\u00e4mlich nicht nur ne Switch machen, du kannst n\u00e4mlich auch irgendwie auf, als Expressionswitchen, also kein Switch Statement, sondern du kannst jetzt ne Switch Expression verwenden,dann wird's schon ekeliger, guckt euch das mal an hier, also das hier war noch poggerslesbar was wir hier gehabt haben, was ist der Vorteil, ja das muss ich glaube ich im einzigen,im einzelnen Fall rausstellen, ja Switch Expression sind die Sharp 8, das ist richtig, ja alsodie m\u00f6glichen, man kann jetzt mehr mitmachen, der Switched auf Return, genau, also sprichder Switched, der nimmt, der setzt quasi das was hier rauskommt dann da ein, also man kannquasi Variablen damit irgendwie bef\u00fcllen dann oder so, ich verwende das so gut wienie, muss ich ehrlich sagen, ich will aber mal das offizielle Video mir angucken, daswar wirklich extrem Big Brain, wie hei\u00dft der Typ, Metz, Into the Future, genau, das istder Oberst die Sharp, die Sharp 8, ach Leute \u00fcbrigens, hab ich es euch eigentlich schongezeigt, pass mal auf jetzt kommt's, die hat ne Konferenz und ich hab ne Frage gestelltin der Konferenz, ich hab ne Frage gestellt in der C-Sharp, in der.NET, in der.NET,.NET 5 Release Konferenz, hab ich ne Frage gestellt, die m\u00fcssen wir uns jetzt mal anh\u00f6ren.It's updating and not, there we go, can we use emojis in Variablen?Alright guys, I'll let you get back to it.Und wisst ihr was das beste ist, Moment, Moment, ich muss euch das andere noch zeigen, wisstihr was das beste ist, das war ja die \u00fcbelste Trollfrage \u00fcberhaupt, ja und ich hab dasauch nur zum Trollen geschrieben, nicht weil ich, weil ich wirklich wollte, dass sie dasbeantworten, aber jetzt kommt's, wartet mal, guckt euch mal die Antwort an, ich muss dieAntwort suchen, wartet mal, wo ist die Antwort, so viele Tweets, sticks out for Harambee,Alter, ja, ja, Tweet, ich hab ne 25 Dollar Giftcard mit dieser Frage gewonnen, das istnicht geil, ich hab die \u00fcbelste Trollfrage gestellt, die haben die Trollfrage beantwortetund ich hab noch ne 25 Dollar Giftcard gewonnen, so kann's gehen, Alter, nein, das sind Ami25,00, h\u00e4tt ich 2500 gewonnen, h\u00e4tt ich auch nichts dagegen gesagt, hei\u00dft die Singleton,ja, die hei\u00dft Singleton mit Nachname, hat mich auch erstmal voll \u00fcberrascht, ja, tjaund nat\u00fcrlich, wenn die so ein Bild mit Maske und so drin hat, ich hab mal nach der gegoogelt,die sieht echt h\u00fcbsch aus, m\u00fcsst mal googeln danach, Microsoft Stonks Frau, naja, aberschon nice, oder, 25 Dollar Giftcard und Trollfrage beantwortet, besser geht's doch eigentlichgar nicht, ok, ich wollt euch jetzt ja das Beispiel mit Pattern Matching zeigen, wassie hier vorgestellt haben, also das ist der Ober C Sharp Language Designer, seitdem esder Anders Halsberg nicht mehr macht, der ist es ja nicht mehr, der wartet, dass derist die Sharp Erfinder, ich wei\u00df gar nicht, ob ihn Halsberg ausspricht oder Hilsberg,Pattern Matching, Pattern Matching, Gibt kein Pattern Matching, habt ihr das doch irgendwogesehen, hier vielleicht, die hatten ein richtig gutes Beispiel was Pattern Matching angeht,so ein richtig langes, total abartiges Beispiel, wo ich mir gedacht hab, Monka S, da blickstedann mal durch, das war ein Beispiel mit irgendeiner Maut, mit irgendeiner LKW Maut und Berufsverkehrwar das Beispiel, vielleicht kennt ihr einer das Video, total abartig, ey hier ist es nichtdrin, ah die Inder sind nat\u00fcrlich auch am Start, das hier, war das das hier, ok diearbeiten sich noch in Record Types ab, hier, hier, das geht ab hier, genau, Return VehicleSwitch, Bus, boah, da krieg ich mir Angst zu tun, wenn ich sowas sehe, und das ist nochein Beispiel was gut lesbar ist, also man kann glaube ich sogar switchen in einem Switch,ja guck hier, also ich sag, also das erste ist, so wie ich das hier mache, ist es janoch ne normale Statement, so ein ganz normales Switch Statement, ich kann allerdings auchsagen ok, ich will, keine Ahnung, ich return jetzt hier ein Int und um rauszubekommen wasf\u00fcr ein Int ich returnen will, sag ich jetzt, return, dann switch, ne, Switch, ne, genau,return, ach du schei\u00dfe, ich kann nicht so ein Tag sein, ich mach, ok, return, v, switchund dann kann ich hier drinnen switchen, ne, muss ich v machen, ich wei\u00df gar nicht, ok,ich wei\u00df, ach ne, ich switch, ich brauch irgendwas worauf ich switchen kann, ok, o, o, switchof o, ok, so, das hei\u00dft jetzt return ich, je nach, je nachdem was o ist, oh, gibt esTiefenlimitationen, so wie ich die kennen nicht, so, so, also, nehmen wir mal jetztirgendwie sowas, keine Ahnung, ich hab hier, switch ist ein Int, so, und dann kann ichjetzt quasi gucken, ist das gr\u00f6\u00dfer als 3000, ne, ist das, ne, wie mach ich denn das jetzt,ist das, ist das kleiner als 3000, dann, ach du kacke, ich bin da zu dumm f\u00fcr, muss ichjetzt sowas machen, eins, und dann, kleiner, 3000 oder so, ne, ok, ich, klammern, wie benutzeich das \u00fcberhaupt, ah, ich wei\u00df gar nicht wie es funktioniert, gibt es keine Interfaces,ich hab doch klar, aber das ist halt, ich wei\u00df noch nicht mal was ich \u00fcberhaupt machenmuss, was, kleiner, kleiner, 3000, und dann, eins, ah, aber ich kann doch auch sagen, kleiner3000, end, gr\u00f6\u00dfer als 5000, ne, geht das nicht, ach so, end geht nicht, oh, muss essein, huiuiuiuiuiui, \u00fcbrigens, wir k\u00f6nnen es noch, wir k\u00f6nnen es noch ganz abgedrehterwerden, wir k\u00f6nnen sagen, objekt, ich geb nen objekt zur\u00fcck, ok, ich geb nen int zur\u00fcck,ich geb eins zur\u00fcck, wenn es kleiner 3000 oder gr\u00f6\u00dfer 5000 ist, so, oder ich geb ein,\u00e4hm, genau, new, was machen wir denn, new, string, ne, ergibt eigentlich keinen Sinn,welche Syntax ist das hier, ok, ok, ok, oah, ey, ich bin, ok, ok, h\u00e4, monka giga, ok,Bus, im Bus, ich kann Bus zur\u00fcckgeben, Bus, kann ich, kann ich, kann ich auch sowas machen,ok, es ist gr\u00f6\u00dfer als 10.000, gr\u00f6\u00dfer als 10.000, und dann geb ich jetzt nen stringzur\u00fcck, geht das auch, oder muss der, ah, ne, ok, ok, der return, ne, komm ma, ok, kommma, komm ma, pattern has already been handled, achso, oder gr\u00f6\u00dfer 5000, ja ok, das ist klar,also kleiner, kleiner, kleiner 10.000, ok, kleiner 10.000, alles klar, \u00e4hm, ist zwei,an string kann ich ja nicht, doch ich kann auch an string zur\u00fcckgehen, na gut, es istein Objekt, ok, das wird, das wird kompliziert, so, und da kann ich jetzt noch, da noch andereChecks drinne einbauen, oder wie, also wenn wir jetzt zum Beispiel diesen record typeda unten nehmen, ich hab doch irgendwie record person, so, person, also kann ich sagen, person,ach ne, ich muss sagen, kleiner, kleiner dem, oh, das ist mir zu big brain, und dann kannich ne person zur\u00fcckgeben, oder wie, new person, ja, funktioniert, kann ich jetzt daraufwieder switchen, kann ich darauf wieder switchen, geht das jetzt, ne, oder, das, das w\u00e4re dannglaube ich dann doch, wobei doch, das geht doch, oder, ach ne, ne, ne, ne, das geht nur,wenn das, das ist, was da, was da reingegeben wird, oder, also quasi switch, ach, guck mal,das kann, das kann ich nicht einmal richtig formatieren, das kann ich nicht einmal richtigformatieren, so abgedreht ist das, generative patterns, kann ich nicht, boah, ist das, ok,ich geb zu, dass, ok, man kann abartige Sachen mit konstruieren, zumindest das Beispiel istdas, was ich euch zeigen wollte, also eigentlich richtig cool, was man damit machen kann, aberes wird schon schnell, also man wechselt schnell in den, in den big brain modus, ich find'sauch cool, ja, ich find's richtig nice, also die ganzen funktionalen programmierer dudeshier, die freuen sich jetzt in ast ab, ach ja, das gibt's ja auch noch, stimmt, es gibtja noch mehr neue features, sind sogar ein paar ganz coole mit dabei, halten wir unsjetzt mal nicht zu lange an abgedrehtem pattern matching zeug auf, genau, es gibt native sizedints, gut, das ist was, was ich relativ selten brauchen werde, das braucht man wahrscheinlichbei performance kritischen sachen, also sprich, ein int auf ein 32 spit system ist halt, dann,also native int ist dann auf ein 32 spit system als 32 spit und 64 spit system, ok, bestimmtf\u00fcr native sachen performancem\u00e4\u00dfig ganz gut, dann haben wir noch ein bisschen andere sachen,die jetzt nicht so spannend sind, fit and finish features, also es gibt jetzt diesem\u00f6glichkeit hier und das find ich eigentlich recht nice, also man kann jetzt, man kannjetzt die kurzvariante schreiben, also ich zeige euch jetzt mal wof\u00fcr ich denke, dassman das gut verwenden kann, so, machen wir mal den kram hier weg und das ist void unddas ding hier will, keine ahnung, ein i enumerable von int, so, list, immer und man kann jetztdie liste, also bisher hat man die liste so angelegt, list gleich new lists int, was manjetzt machen kann ist, aber das ergibt da noch wenig sinn an der stelle, was man jetztmachen kann ist das hier, also der ist jetzt quasi so schlau und erkennt, ok, wenn derhier new macht, dann will der wahrscheinlich ne list int haben, das ist insofern ganz cool,wenn man klassen macht, ich hoffe, wir m\u00fcssen mal kurz gucken, ob das da geht, so, alsof\u00fcr eine sache, wo ich mir vorstelle, wo das cool ist, public class, plupp, so und dannhat man sowas wie hier ne private read only concurrent dictionary aus int und frag michnicht int und irgendein tuppel aus string s und string b, sowas, macht man jetzt vielleichtnicht so oft, aber kommt vor, so, was hat der f\u00fcr schmerzen, das ist auch gar keinemethode, so, dict gleich new, so und normalerweise muss man sowas hier machen, also quasi, so,normalerweise muss man sowas machen und das ist ein bisschen kompliziert, so, jetzt kannman da einfach nur noch, wenn ich das jetzt richtig verstehe, das da machen, das ist ganzpraktisch, das ist cool, so und wo ich mir jetzt noch, wo ich mir jetzt noch ganz praktischvorstelle, ist folgendes, wenn ich jetzt hier ne methode hab, die ne liste haben willund ich will dann ne leere liste oder ne list initializer oder so \u00fcbergeben, dass ich dannsagen kann, test new, das ist jetzt ne leere, neue liste, ohne dass ichs angeben muss unddas ist automatisch quasi, so und ich kann jetzt wahrscheinlich sowas hier machen, ahne, das geht nicht, das geht nur wenn es list ist oder, ah ok, ist aber eigentlich auchganz n\u00fctzlich, das ist wirklich highly sophisticated, big brain, also das ist quasi die kurzformdavon, eigentlich auch ganz nett, das sind so kleine features, die einfach das lebenein bisschen einfacher machen, die jetzt im prinzip auch irgendwie compiler magic sind,wei\u00df nicht wie ich mir das ganze neues zeugs merken soll, 1337 geht mir \u00e4hnlich, deswegengibt es sicherlich features aus, die sharp 678, die ich kaum verwende, weil vieles untergeht,dazu kommt ja noch, das hier ist jetzt, fuck was wollte ich sagen, das hier ist jetzt nurdie sprach features, was wir noch gar nicht haben ist, die ganze framework library zus\u00e4tze,die es bestimmt auch gibt, also es gibt bestimmt wieder zig neue klassen im framework, dieman verwenden kann, grpc, kengin ist gro\u00dfer grpc fan, list gleich array, what, ne, ne,das ist eine neue synthax, das ist die kurzform hierf\u00fcr, new list int, der kann jetzt seitder neuen c sharp version, der bronc, kann man das weglassen und der ist so schlau underkennt, diese methode will eine list int haben und ich kann jetzt nur new schreibenmit list initializer und er kapiert, dass mein new an der stelle eigentlich ein newlist int ist, es hat den nachteil, es ist nicht unbedingt gut lesbar ohne ide support,ich mein guck mal selbst rider checkt das nicht, doch hier schon, also sprich jetztgehen wir mal von aus, test ist irgendwo da unten deklariert, wir wissen nicht wo, dannist uns jetzt nicht so wirklich klar auf den ersten blick, was das da f\u00fcr ein typ ist,aber das ist eine sache, wo ich mir vorstellen kann, dass es ganz cool ist, aber das hierist f\u00fcr mich das was wirklich lesbarkeit auch was bringt, danno ich wei\u00df nicht wie du dassiehst aber f\u00fcr den fall findest du es wahrscheinlich auch ganz praktisch oder, also hier findeich es cool, weil gerade wenn man solche langen sachen hat, das ist einfach abartig zu lesenhier und total redundant gleicher schei\u00df und da ist das hier eigentlich, das ist nice ja,so was haben wir noch f\u00fcr features, das haben wir uns grade angeguckt,haben wir uns auch grad angeguckt, anosa, was, anosa leute, anosa, anosa nice, anosanice use, ah yes yes, das ist cool, das ist cool, guck mal wir haben noch hier unsereperson class, wenn ich jetzt, wenn die metode jetzt ne person haben m\u00f6chte, die jetzt listhei\u00dft, p besser, dann kann ich jetzt sagen new, auch nicht, warum nicht, ah weil, ahdie muss ich im constructor machen, die sind gar nicht in it only, ah die sind gar nichtin it only, oh das ist ja doof, gut aber ich mein es ist immer noch k\u00fcrzer, es ist immernoch k\u00fcrzer als new person, ich h\u00e4tte jetzt eigentlich gedacht, man kann, kann new person,warum, ich h\u00e4tte jetzt eigentlich gedacht, das funktioniert, weil wo ist denn jetzt dersinn davon, ja das darf ich n\u00e4mlich nicht \u00e4ndern, ok das verstehe ich jetzt nicht,ach ich bin ja auch doof, ich darf keine klammern machen, oder doch, ok dann wei\u00df ich auch nichtso genau, ok dann muss ich die dinger quasi hier \u00fcber den constructor machen, ok waskommt da jetzt bei raus, ok ist das jetzt null oder ist es blub und lull, probieren wir malmal, es ist blub und lull, wie kann ich das optional machen, nee, nee oder, das glaubeich nicht, dass es so gedacht ist, eh ok, ich glaube das erfordert noch ein wenig imdetailplanung, das ist irgendwie komisch, weil das richtig coole w\u00e4re, wenn man dasquasi standardm\u00e4\u00dfig so anlegen k\u00f6nnte und ich k\u00f6nnte das hier callen so, ohne dass ichdas da eintragen muss, das w\u00e4re cool wenn das geht, das ist sch\u00f6n kompakt und eigentlichauch ganz gut lesbar, sag mal kennt jemand einen trick wie man rider dazu \u00fcberredenkann, dass es beim speichern auto format macht, das geht mir n\u00e4mlich voll auf den sack, okwas haben wir ansonsten noch f\u00fcr fiaturis, das haben wir uns jetzt angeguckt, why isdas denn, nee das plugin gibt es f\u00fcr rider nicht, ich kann einen static von lambda expressionmachen, also also, ok das check ich noch nicht so genau, warum verwende lambda expressiondoch als callbacks oder sowas, so also das n\u00e4chste ergibt f\u00fcr mich schon mehr sinn,also ich kann zum beispiel sowas machen, das ist auch ein feature, was selten verwendetwird, was man auch nicht oft braucht, aber was ich ganz n\u00fctzlich finde, so also zumbeispiel, was machen wir denn jetzt mal, was gibt es denn ein sch\u00f6nes beispiel f\u00fcr, jaalso zum beispiel process start lull, also das l\u00e4sst jetzt, das startet jetzt das programmmit dem namen lull, so und ich subscribe jetzt das event f\u00fcr, nee das ist ein schei\u00df beispiel,das ist doofs beispiel, ok mir f\u00e4llt kein gutes beispiel ein, aber manchmal brauchtman hier innerhalb von so ner metode noch eine und das kann man schon seit glaube ich6 oder 7 machen, man kann jetzt hier drinne quasi so kleine lokale helper methoden nochanlegen, also ich kann zum beispiel sagen int generate number, irgendwie sowas, so return1, das geht, also man kann so nested functions machen, das geht schon ein bisschen l\u00e4nger,und die kann man jetzt static machen, aha ok habe ich noch nie gebraucht, aber wennich es brauche, ist es vielleicht ganz nice, also man kann jetzt quasi lokale helperfunktionin, also helperfunktion in methoden machen, was auch ungew\u00f6hnlich ist f\u00fcr c-sharp insofern, weil die haben lambdafunktionen, also diese geschichten schon, bekommen bevor sieanonyme funktionen hatten, normalerweise ist das eigentlich eher umgedreht, sprachen habenzuerst das und bekommen dann das, m\u00fcsste doch auch f\u00fcr rider punkt 2, gucken wir malrein, punkt 2, nein das geht nicht f\u00fcr rider, weil dieses plugin gibt es nicht f\u00fcr rider,dieses plugin gibt es quasi f\u00fcr so ziemlich alles, nur nicht f\u00fcr rider, warum auch immernicht, um mich zu \u00e4rgern wahrscheinlich, ja ok das kann man jetzt static machen, mirf\u00e4llt jetzt gerade kein wirklicher anwendungszweck ein, warum ich das haben m\u00f6chte, f\u00e4llt euchirgendwas ein, warum will ich eine lokal, static, local, so eine helperfunktion haben,das ist wahrscheinlich der typische fall von, wenn man es braucht dann freut man sich, dasses da ist, ich kann euch jetzt mal ein ganz gutes anwendungsbeispiel zeigen f\u00fcr so eineanonyme lokalen funktion, ich glaube ich habe, ich wei\u00df nicht ob ich das schon gepusht habe,oh nein habe ich nicht, da kann ich es euch nicht zeigen, weil das hier verursacht einenmemory leak, was ich hier gebastelt habe, weil ich den callback nie unsubscriber, na gutkann ich euch nicht zeigen, habe ich nicht gepusht, so was haben wir sonst noch f\u00fcrneue sachen, k\u00f6nnen jetzt static sein, ok da habe ich wirklich keine ahnung wozu dasjetzt gut sein soll, dann warten wir mal ab, in addition for each loop, dass ich kann jetztfor each verwenden, wenn ich irgendeinen typ habe, der die n\u00f6tigen metoden implementiert,ok, next you can use this card as parameters to lambda, oh das ist nice, das ist wirklichcool, das h\u00e4tte ich mir schon \u00f6fters mal gew\u00fcnscht, also zum beispiel wenn man, \u00e4hmaction, int int int, das ist jetzt nur mal exemplarisch f\u00fcr ein callback oder f\u00fcr lambda,so und wenn ich den jetzt hier aufrufe, dann muss ich immer, dann muss ich bisher immerdie parameter mit angeben, moment, jetzt, ach nee, moment, gleich, \u00e4hm, so, \u00e4hm,da muss ich bisher immer die parameter mit angeben, selbst wenn ich die parameter garnicht haben will, und jetzt kann man so machen, wenn man die parameter nicht haben will, dasist cool, \u00e4hm, nee, wie, ach so, das hier, ja, das, das, jetzt wo du es sagst, f\u00e4lltes mir wieder ein, jaja, also du meinst jetzt nicht an event, du meinst, dass man quasihier dran jetzt was, was anh\u00e4ngen kann, oder, ja, oder auch nicht, ich wei\u00df aber was dumeinst, nee, das, \u00e4hm, war mir so jetzt nicht im kopf, ich hab das schon mal gesehen, ja,wo, mir f\u00e4llt es wieder ein, wo du es gesagt hast, aber ehrlich gesagt hab ich noch niebenutzt, kopf gameplay auf youtube, ja, mal gucken, mal gucken, so, was haben wir sonstnoch sch\u00f6nes, also das mit discard parametern ist wirklich sehr nice, you can now applyattributes to local functions, boah, jetzt wirds aber abgedreht, alter, nullable attributeannotation, \u00e4hm, mal, frage an euch, die, die vielleicht die eine oder andere ist, diesharp verwendet, verwendet ihr dieses nullable, not nullable feature eigentlich, ich mussmich ja mal outen, ich verwende es gar nicht, dabei haben die sich so viel m\u00fche gegebenmit not nullable, aber ich finde man merkt, dass es irgendwie drauf gest\u00fclpt ist aufne sprache, die nicht so designt ist, hat das dann nen default wert statt 0, nee, keindefault wert, wenn du not nullable eingeschaltet hast, dann musst du, wenn nen referenztypnull werden kann, musst du explizit markieren mit nem fragezeichen, also zum beispiel, wennich not nullable einschalte, dann muss ich sowas hier schreiben, und das sagt dann, ok,best ist ne funktion, der kann ich, kann ich null \u00fcbergeben, als person, normalerweiseist das der default verhalten, ne, also, die person kann ne instanz von person sein odernull, und mit not nullable haben sie es umgedreht, ich muss das, \u00e4hm, angeben, wenn es nullsein darf, und wenn ich das mache, dann macht der compiler und, \u00e4h, die ide und sowas,machen paar checks f\u00fcr mich, dass ich mich nicht vertippe, aber ich verwende das so gutwie nie, guck der sagt mir auch, ich muss, \u00e4h, nullable sachen einschalten, jetzt habichs eingeschaltet, jetzt wei\u00df ich nicht wie ichs wieder auskriege, ach hier oben,genau, weil jetzt, jetzt kann ich sagen, ey guck mal, hier ist null erlauben, null \u00fcbergebenerlaubt, das bedeutet, wenn ich test aufrufe mit null, anstatt der person, sagt er mir,ok, wenn ich das fragezeichen wegmache, sagt er mir, \u00e4h, eigentlich darf man hier keinnull reinmachen, aber wie du siehst, es funktioniert trotzdem, das ist nur ne warnung, nur ne warnung,deswegen ich verwende das so gut, ich verwende das gar nicht, ehrlich gesagt, ich hab jajahrelang auch gerne null zur\u00fcckgegeben, \u00e4hm, mittlerweile versuche ich es ein bisschenordentlicher zu machen, entweder ist es was, was man logischerweise in irgendein defaultwert zur\u00fcckgeben kann, oder ich mach das, zumindest meistens einzig richtige, ne exceptionschmei\u00dfen, wenn du nix zur\u00fcckgeben kannst, ja, also wenn man hier zum beispiel diese,ich hab doch hier eben euch gezeigt auf github, ne, zum beispiel hier, getoutput, so mittlerweilesieht das anders aus, getoutput gibt nen channel reader zur\u00fcck, so, aber getoutput kann ichnur was zur\u00fcckgeben, wenn denn \u00fcberhaupt gerade zu ner kamera connected ist, so, wenndas hier nicht fehlschl\u00e4gt, was geb ich denn dann zur\u00fcck, eigentlich muss ich da ne exceptionschmei\u00dfen, so nach dem motto camera not connected oder sowas, weil ich kann nichts sinnvollzur\u00fcckgeben, ja ne null reference exception passt ja nicht so ganz, das ist eher so neart io exception oder sowas, schwierig, also wie gesagt ich verwende das so gut wie garnicht, ups, hab ich zugemacht, hier, also ich glaube das wars im gro\u00dfen und ganzen,ja, wenn man jetzt mal zum beispiel zur\u00fcck geht zu csharp 8, da kam ein bisschen mehrrein, ne, in csharp gab es diese ganzen features f\u00fcr nullable und sonst was, \u00fcbrigens auchein feature was kaum verwendet wird, was ziemlich geil ist, wenn man mal ehrlich ist, kenntihr diese geschichte, also ihr habt sowas hier, void tritest, so, das gibt nen boolzur\u00fcck, also sprich tritest gibt zur\u00fcck ja oder nein, also sprich, das war erfolgreich,wenn es erfolgreich war, dann gibt es irgendeinen wert, machen wir mal, wir machen mal ein beispiel,tryopen, was programmierst du, wir gucken uns gerade csharp 9 features an, so tryopen,so und tryopen ist dann quasi kann ich sagen hier if, if tryopen und dann kann ich wasmachen mit, so bisher hat man das so gemacht, tryopen, out, outperson, so bisher hat mandas so gemacht, ich hab gesagt if tryopen und dann hat man gesagt out, so in der richtung,so das hei\u00dft ich kann jetzt erstmal checken, ok klappt der zugriff, wenn der zugriff klappt,dann krieg ich als outport hier nen objekt, also person ist jetzt doof, das m\u00fcsste eigentlicheher sowas wie nen file oder so sein, ja, irgendwie sowas, also string, file, pass,out, out ist nen file, wobei file kann man nicht, aber ich glaub ihr wisst was ich mein,wir faken das jetzt einfach, lull, dann kann man es besser lesen, dann versteht man besserwas ich mein, so also new file, so das w\u00e4r so ne typische methodik, also sprich ich gebjetzt hier den fad ein, so keine ahnung, home, max, keqw.txt und die versuch ich zu \u00f6ffnenund wenn das funktioniert dann bekomm ich nen file zur\u00fcck, so das w\u00e4r so ne typischetryopen geschichte, die es auch total oft im framework gibt, ist glaub ich relativ logischwas es machen w\u00fcrde, es gibt seit csharp 8 ein richtig geiles feature, f\u00fcr \u00e4hnlichef\u00e4lle, der hier ist eigentlich ziemlich gut so wie er ist, aber es gibt jetzt die m\u00f6glichkeitman kann mehr als eine sache zur\u00fcckgeben, also ich kann zum beispiel, ich m\u00fcsste jetztnicht das hier zur\u00fcckgeben, sondern k\u00f6nnte jetzt bool und das file zur\u00fcckgeben, so undwie sieht der return aus, der return sieht dann so aus, also man kann jetzt zwei sachenzur\u00fcckgeben, das funktioniert, so und dann w\u00fcrde ich n\u00e4mlich sagen tryopen result unddann sieht man mein result ist jetzt ein tuppel mit item 1 und 2, dementsprechend kann ichjetzt auch sagen, mal gucken ob der das f\u00fcr mich machen kann, kann ich jetzt auch sagenresult und file und jetzt kann ich hier drauf zugreifen, result und file, das geht glaubich mit bis zu 9, ja ich kanns benennen, stimmt das ist auch ein feature, das kann ich malsagen, also ich glaube es geht bis zu 9 return sachen, ok nein es geht noch mehr, excellentalles klar, so muss das sein, so und was auch richtig cool ist, man kann die hier benennen,man kann sagen result und man kann sagen hier file handle oder so und wenn ich das jetztausf\u00fchre, dann kann der das automatisch eigentlich deconstructen unter dem name, ne das gehtnicht oder, aber ich glaube rider ist so schlau und kapiert das, konnte rider die dinger nichtdeconstructen f\u00fcr mich, ne oder, aber zumindest wenn ich hier das objekt jetzt hab, dann sehich, dann sind die dinger sogar hier richtig benannt, also man kann sogar die return parameterbenennen, allerdings ist das ne reine kosmetik, unter der haube hei\u00dfen die nach wie vor weiteritem 1 und item 2, kann ich das irgendwie deconstructen, kann das rider, doch easy, kann rider f\u00fcrmich machen, so und jetzt hab ich hier den result und den file handle, jetzt kann ichwieder quasi sagen, if result file handle, ja das ist ein ziemlich underratedes featurefinde ich, wof\u00fcr das ziemlich gut ist, ist es f\u00fcr solche sachen hier, also zum beispielich hab hier nen dictionary mit nem key, m\u00f6chte aber jetzt nicht, also die standard variantew\u00e4re, wenn ich nen dictionary hab mit nem key und m\u00f6chte hier als value mehr als einenwert speichern, dann w\u00fcrde ich irgendwie ne klasse machen, keine ahnung was wei\u00df ichhier, dict info und dann dort 2 sachen anlegen und hier sagen, es ist nen dict info, so, sowird man das normalerweise machen, aber wenn das was ganz easy ist, was aus 2 sachen besteht,dann kann man das auch hier so machen, so und wenn man jetzt hier drauf zugreifen will,sieht man zum beispiel dict, genau und try oder hier get und wenn ich hier drauf zugreife,sieht man hier, dass ich b und s kriege, also sprich das was ich hier benannt hab, das istziemlich underratedes feature, ok und hier sind 30 milliarden sachen noch drin, dasgucken wir uns jetzt nicht an, eines meiner lieblings sachen in csharp 8 ist das hier,das ist richtig nice, async enumerator, das ist quasi, da kann ich quasi ne for eachschleife machen, in der ich awaiten kann, das ist sehr praktisch, ja das geht auch,fips das funktioniert auch, man kann auch sagen, man kann auch sagen, das, ach gehtdas nicht, ah moment, was mache ich denn da, ich bin doch falsch, ich kann auch sagen,das filehandel interessiert mich nicht, das geht auch, channels sind richtig nice, channelshaben wir hier irgendwo schon mal drin eingebaut, ah meine ordnung, ja channels, da haben wirschon channels eingebaut und irgendwo machen wir auch async hier, das ist eines der geilstenfeatures aus csharp 8, man kann jetzt ne for each machen, in der man quasi sowohl returnmit await, als auch mit nem neuen element, das ist ziemlich cool, ja, boah leute, daswar jetzt big brain stream, was ist h\u00e4ngen geblieben von den neuen csharp features, lasstmal \u00fcberlegen, also, was ist h\u00e4ngen geblieben, also, records, coole sache, die kurzschreibweise,rest wei\u00df ich nicht so wirklich, init only setups, werde ich wahrscheinlich hier nurim zusammenhang mit records verwenden, ich glaube nicht, dass ich das oft da anwendungszweckfinde, top level statements finde ich cool, aber nachdem ich selten konsolenanwendungenmache in letzter zeit und wenn es zum beispiel ne asp.net anwendung ist, dass eh das templatef\u00fcr einen generiert, eher f\u00fcr vorf\u00fchrezwecke, pattern matching werde ich wahrscheinlichin zukunft h\u00e4ufiger verwenden, allerdings dauert es ein bisschen bis ich da mein hirnrum gerappt habe, dass ich das checke, wann man wie was verwenden kann, csharp hat sichpyson generieren, bisschen vielleicht eigentlich nicht, eher, eher rust vielleicht oder skalaoder so, irgendwas in dieser richtung, hier lernt man was, guck mal was ich f\u00fcr techsdrinne hab, lehrreich, educational habe ich als tech drinne vom video, da muss das jaauch mal, muss ja auch educational sein, so native size integers habe ich eigentlichkeine verwendung f\u00fcr, function habe ich mir gar nicht angeschaut, \u00e4h brauchen wir die,brauchen wir nicht, \u00e4hm target type new expressions stelle ich mir cool f\u00fcr, gerade f\u00fcr ne variablerin der klasse, das jetzt nicht, dictionary von dictionary mit dictionary gleich new dictionaryvon dictionary mit dictionary schreiben muss, sondern einfach nur gleich new, finde ichcool, static anonymos functions, ich hab keinen plastenschimmer, wozu man das braucht, ichhab da gerade \u00fcberhaupt kein anwendungszweck im kopf, \u00e4hm target type conditional expressions,dann hab ich schon wieder vergessen was es ist, \u00e4hm hab ich auch schon wieder vergessenwas es ist, hab ich auch schon wieder vergessen was es ist, ok, discard parameter f\u00fcr lambdas,das werde ich auf jeden fall oft verwenden, das ist nice, weil meistens brauchst du garnicht alles was da so zur\u00fcckkommt, oder oftmals, oftmals, so attributes on local function werdeich wahrscheinlich auch so gut wie nie verwenden, module final initializer wei\u00df gar nicht mehrwas es ist und new features for partial method interessiert mich auch nicht, also man musssagen c sharp 9, \u00e4h bei weitem nicht so dieses riesen feature release wie jetzt c sharp 8,aber trotzdem nice Sachen und es ist ne ganze ecke funktionaler geworden, als es davor war,also gerade diese pattern matching geschichte und auch diese record types, also man siehtund das ist ne sache die ich wirklich cool finde an c sharp, man sieht das die nichtstehen bleiben mit der sprache, man sieht das die aktuelle trends auch aufgreifen diesich bew\u00e4hrt haben, dass sie cool sind, dass sie gut funktionieren und sie bauen das ein,und zwar mit hirn bauen sie das ein, nicht so wie das t++ cremium wo jeder was andereseinbaut und du \u00fcberhaupt nicht mehr verstehst was eigentlich sache ist, ahja interface defaultimplementation, \u00e4hm wei\u00dft du elsa wei\u00dft du warum ich glaube warum die das gemachthaben, ich glaube das hat also interface default implementation der einzige grund warum diedas gemacht haben ist eigennutz, weil microsoft gerade was office angeht 75 interfaces hatdie interfaces erweitern die schon da war, also die haben dann office interface 1, officeinterface 1x, office interface xx, office interface xx, office interface 5x, office 555x, so unddie hatten einfach keinen bock mehr drauf und haben deswegen die default implementationsf\u00fcr interfaces eingebaut, ich glaube kein mensch verwende das au\u00dfer microsoft selbst,verwende einer von euch die default implementations in interfaces, ergibt eigentlich keinen sinndas das gibt aber ok, also es gibt ja die m\u00f6glichkeit ein interface anzulegen in csharp, so ai interface beste, so und \u00e4hm, da kann ich jetzt neuerdings defaultsachenimplementations, ich wei\u00df gar nicht wie es funktioniert wenn ich ehrlich bin, einfachso ok, total wir, gibt es interfaces mit default implementations, habe ich noch nieverwendet, ja bei comobjekten ist das ja generell bei microsoft native sachen ist das totalbeliebt dass die ihre interfaces 1, 2, 3 bis 5075x, xx, xx, xx haben und ich glaube dashaben die aus reinem eigennutz gemacht, das ist keine abstract class, nee das ist keineabstract class, das ist ein interface, ich kanns dir nicht genau erkl\u00e4ren ehrlich gesagtda muss ich jetzt mal nachgucken, ich hab, ich verwende das nicht, glaub der unterschiedist zwischen der abstract class und dem interface, dass du, \u00e4hm, gut du kannst ein paar sachenim interfacing machen wie private methoden und sowas in der richtung, das ist der prinzipielleunterschied und dass das hier weiter r\u00fcckw\u00e4rts kompatibel ist, also ne abstract class istso, wenn du ne abstract class erweiterst, dann muss alles was virtual ist implementiertwerden, so bei nem interface ist es jetzt so, mal angenommen ich hab hier nen interfacevoidplub, so, so sah das interface mal urspr\u00fcnglich aus, so und jetzt komm ich auf die idee ichm\u00f6chte eigentlich das interface erweitern mit lull, jetzt ist ja die sache so, ich habschon ganz viele klassen dieses interface implementieren und ne eigene lull, ne eigeneplub methode haben, wenn ich das interface jetzt erweitern will ohne, dass ich 50 oder500 klassen die das interface implementieren anfassen will, dann kann ich ne default implementationhier reinhauen und dann geht nix kaputt, wie gut sich das umsetzen l\u00e4sst und wie gut sichdas dann in die alten klassen integriert sei mal dahingestellt, hab ich keine erfahrungenmit hab ich noch nie verwendet, chat ich wei\u00df nicht wie es bei euch aussieht ob das einervon euch verwendet, hab ich noch nie verwendet, hab ich noch nie benutzt, kein klassen shimmerich hab keine ahnung was taugt, ja, so chat das war echt anstrengend big brain streamdreieinhalb stunden, solange haben wir uns jetzt die sharp features eingeguckt, chat waranstrengend, ich hoffe euch hat es gefallen, ich muss mich da selbst erstmal ein bisschendran tasten was es da f\u00fcr neue sachen gibt, sagt mir mal chat, hat man wenigstens einbisschen was gelernt bei, ja auf jeden fall nice wenn der ein oder andere vielleicht nochwas gelernt h\u00e4tte, war ja immerhin educational stream, ja und ihr merkt vielleicht ich meinich wei\u00df das auch nicht bei allem, also bei sachen die ich selten verwende hab ich daauch oftmals keinen plan, geht glaube ich jedem so, die sachen die man nicht oft machtdie man kann sie nicht alles wissen, ist ja letztendlich das wo man auch mal irgendwiedrauf klarkommen muss, man kann einfach nicht alles wissen und es ist auch letztendlichkeine schande, man muss einfach nur wissen wie man sucht, poggers google skills sinddas wichtigste was man haben kann wenn man in der IT arbeitet, das sag ich auch den azubisimmer, ihr m\u00fcsst so weit ahnung haben, dass ihr wisst wonach ihr suchen m\u00fcsst, kannstdu mal deine meinung zur ps5 sagen, ja und ne weil ich hab mich weder mit der neuen xboxnoch mit der playstation gro\u00dfartig besch\u00e4ftigt, ich finde nur dass die playstation 5 ultragro\u00df ist oder der japaner das vorgestellt hat war ziemlich klein, ansonsten kann ichda gar nichts zu sagen, es sind im prinzip beides mehr oder weniger stink normale pcs,halt mit exklusiv sachen, stack overflow triffen programming ja sieht so aus, istaber so, wenn man mal ehrlich ist, die leute denken zwar programmieren w\u00fcrde so aussehen,krasse Hacker man am start, die leute denken in wirklichkeit so sieht programmieren ausja ja aber in wirklichkeit sieht programmieren so ausdas ist das somit eigentlich programmieren ja, true 0w, jeder der es macht wei\u00df dasses so ist, jeder der in dem bereich arbeitet, was man was macht privat ist egal, jeder wei\u00dfdass es so ist, die au\u00dfenstehenden noobs denken man ist ein richtiger hacker man, inwirklichkeit programmieren, eigentlich klaut man sich nicht auf stack overflow zusammen,man guckt sich da was an und \u00e4ndert das dann auf das was man braucht, genau das genauwie in dem video ist das, \u00fcbrigens bestes programm hier, ah yes, ich hoffe ihr seidauch die krassen hacker mans wie ich hier, vor allem der matrix bildschirm schon da unten,der ist ganz ganz wichtig, ich hab legit keine ahnung was da passiert, das ist ein h-top,was auch immer da \u00fcberhaupt passiert, er generiert nicht, was ist speedometer 2.8,irgendeinen hacksdump, ist das eine weltkarte, ist das ein ascii video oder matrix bildschirmschon naja, ja so muss das sein, das ist der richtige hacker mode, ja so ist es in wirklichkeitund dann arrow geht nicht, vor allem ist es auch noch java, so genau so siehts aus, istsein haus fertig renoviert, jaja klar seit jahren schon, ich mein 2013 sind wir eingezogen,das war dark, ich muss sagen, egal wie ordentlich ich was programmiere, wenn ich da nach einergewissen zeit wieder ran muss hab ich nie bock, wann kommt das gartenstells video 3.0, jaich hatte ja vor im december viele videos zu machen, von denen ich noch so gut wie nichtserledigt hab, ihr kennt mich, vielleicht gibt es dann auch wieder ein gartenvideo, arayantwitch prime, dankesch\u00f6n, f\u00fcr den sub, eigentlich wollte ich jetzt Schluss machen, eigentlichwollte ich jetzt Schluss machen f\u00fcr heute, 21.55, ich bin m\u00fcde, ich mein guck doch malan wie lang ich heute gestreamt hab, war hier, heute morgen, heute morgen 4 Stunden und jetztnoch mal 3.5 Stunden, morgen cold war story stream, k\u00f6nnten wir eigentlich machen, jaich freu mich wirklich auf die cold war story, ich fand black ops 2, 3 nicht sch\u00f6n von derstory, 3 hab ich glaub ich die story gar nicht gespielt, aber 2, wirklich nice fandich die black ops 1 story, also black ops 1 story find ich mit die beste cold of dutystory, \u00fcberhaupt ja, ok leute wisst ihr was, ich geh jetzt ins bett, machts gut, wir sehenuns, see you.", "segments": [{"id": 1, "start": 0.0, "end": 24.48, "text": "So, erstmal ne Runde husten, ich weiss auch nicht warum ich dazu jetzt warten muss bis"}, {"id": 2, "start": 24.48, "end": 25.48, "text": "das Stream angeht."}, {"id": 3, "start": 25.48, "end": 39.12, "text": "Aber wollte vorher nicht."}, {"id": 4, "start": 39.12, "end": 40.28, "text": "Massive Poggersound."}, {"id": 5, "start": 40.28, "end": 55.24, "text": "Moin Marc, Jojo Moink."}, {"id": 6, "start": 55.24, "end": 68.2, "text": "Kussi ist auch da, Relax ist auch am Start, jetzt kommen sich alle."}, {"id": 7, "start": 68.2, "end": 78.2, "text": "So, ich zeige euch mal was, wusst ihr das Windows mittlerweile, \u00e4hm, propriet\u00e4re Emojis"}, {"id": 8, "start": 78.2, "end": 79.2, "text": "hat?"}, {"id": 9, "start": 79.2, "end": 96.24, "text": "Wie sieht bei euch der Titel aus, guckt mal."}, {"id": 10, "start": 96.24, "end": 99.36, "text": "Wie sieht bei euch der Titel vom Stream aus, warte mal, ich muss mal kurz Musik ein bisschen"}, {"id": 11, "start": 99.36, "end": 100.36, "text": "leiser machen."}, {"id": 12, "start": 100.36, "end": 118.04, "text": "Tja, passt mal auf, Windows hat propriet\u00e4re Emojis, schaut mal."}, {"id": 13, "start": 118.04, "end": 124.96, "text": "So sieht der Titel bei einigen von euch aus, jetzt guckt mal an wie das unter Windows aussieht."}, {"id": 14, "start": 124.96, "end": 132.76, "text": "Tja, unter Windows sieht das so aus."}, {"id": 15, "start": 132.76, "end": 138.28, "text": "Microsoft hat es tats\u00e4chlich geschafft propriet\u00e4re Windows-only Emojis zu designen."}, {"id": 16, "start": 138.28, "end": 143.6, "text": "Ich habe eigentlich gedacht Microsoft w\u00e4re aus dieser Zeit raus, wo sie propriet\u00e4re"}, {"id": 17, "start": 143.6, "end": 148.4, "text": "Windows-only Sachen gemacht haben, aber dieses ist ein Windows-only Emoji."}, {"id": 18, "start": 148.4, "end": 157.88, "text": "Ja, copy-paste in Twitch-Channel ergibt das, weil Twitch das Searching replaced durch"}, {"id": 19, "start": 157.88, "end": 158.88, "text": "eigene Emojis."}, {"id": 20, "start": 158.88, "end": 167.2, "text": "So sieht es im Titel aus und in Wirklichkeit ist es aus zwei Emojis zusammengesetzt."}, {"id": 21, "start": 167.2, "end": 170.2, "text": "Lustig, oder?"}, {"id": 22, "start": 170.2, "end": 173.8, "text": "Dass es propriet\u00e4re Windows-only Emojis gibt."}, {"id": 23, "start": 173.8, "end": 177.44, "text": "Gut, in dem Fall wundert es mich nicht, wenn das eine Katze mit Stirnband und Windows-Logo"}, {"id": 24, "start": 177.44, "end": 178.44, "text": "ist, aber trotzdem."}, {"id": 25, "start": 178.44, "end": 183.32, "text": "Ich habe nachgeguckt, das ist irgendwas, was zum Windows-Jubil\u00e4um gekommen ist von Microsoft,"}, {"id": 26, "start": 183.32, "end": 184.32, "text": "was auch immer."}, {"id": 27, "start": 184.32, "end": 189.32, "text": "Ich habe es aufgegeben zu versuchen nachzuvollziehen, was Microsoft da manchmal treibt."}, {"id": 28, "start": 189.32, "end": 200.24, "text": "So, wir gucken uns jetzt mal ein paar neue, die neuen C-Sharp-9-Features an."}, {"id": 29, "start": 200.24, "end": 204.64, "text": "Das ist gar nicht so viel, auch wenn die Seite lang aussieht, aber das ist gro\u00dfe Schriftgr\u00f6\u00dfe"}, {"id": 30, "start": 204.64, "end": 206.8, "text": "und es ist nicht so viel wirklich Tolles."}, {"id": 31, "start": 206.8, "end": 215.16, "text": "Ich habe schon mal grob dr\u00fcbergescrollt vorhin und ich habe auch schon vor einem Drittel"}, {"id": 32, "start": 215.16, "end": 218.32, "text": "oder so, vor einem Jahr mal einen Webcast dazu gesehen."}, {"id": 33, "start": 218.32, "end": 220.24, "text": "Das gucken wir uns jetzt mal an."}, {"id": 34, "start": 220.24, "end": 222.32, "text": "Also ich habe jetzt das neue.NET 5 installiert."}, {"id": 35, "start": 222.32, "end": 235.48, "text": "Ich habe die Rider-Test-Version installiert, also sprich das hier, hier Rider-2020-3-EAP-7,"}, {"id": 36, "start": 235.48, "end": 236.8, "text": "das hat.NET 5 Support."}, {"id": 37, "start": 236.8, "end": 240.0, "text": "Ich finde es ja ein bisschen schade, dass es nicht geschafft haben zum Release von.NET"}, {"id": 38, "start": 240.0, "end": 243.6, "text": "5 das fertig zu bekommen, aber wahrscheinlich hat Microsoft den auch gar nicht erz\u00e4hlt,"}, {"id": 39, "start": 243.6, "end": 250.6, "text": "wann eigentlich Release von.NET 5 ist."}, {"id": 40, "start": 250.6, "end": 251.6, "text": "Denke ich mal."}, {"id": 41, "start": 251.6, "end": 254.0, "text": "Wow, ein bisschen gro\u00df vielleicht."}, {"id": 42, "start": 254.0, "end": 273.12, "text": "Ein bisschen Chat auf, ne, Chat, so, dass wir nichts \u00fcbersehen."}, {"id": 43, "start": 273.12, "end": 279.76, "text": "Gut, genau, also wie gesagt, diese Windows-Only-Emojis wollte ich euch mal zeigen und ich w\u00fcrde"}, {"id": 44, "start": 279.76, "end": 282.96, "text": "sagen, wir k\u00f6nnen auch mehr oder weniger gleich anfangen, gucken, was es so gibt."}, {"id": 45, "start": 282.96, "end": 285.72, "text": "Ich muss da selbst ein bisschen dr\u00fcber, wie gesagt, ich habe schon vorher mal dr\u00fcber"}, {"id": 46, "start": 285.72, "end": 293.04, "text": "gescrollt, aber ein bisschen in Ruhe mir das angucken, weil mir manche neuen Features selber"}, {"id": 47, "start": 293.04, "end": 298.76, "text": "ein bisschen schleierhaft noch sind, wozu man die benutzen soll."}, {"id": 48, "start": 298.76, "end": 303.04, "text": "Zum Beispiel das erste Feature, n\u00e4mlich Record-Types."}, {"id": 49, "start": 303.04, "end": 309.8, "text": "Also, bis jetzt, ich zeige euch erst mal, wie es bis jetzt in.NET, bzw. in C-Sharp"}, {"id": 50, "start": 309.8, "end": 310.8, "text": "funktioniert."}, {"id": 51, "start": 310.8, "end": 315.52, "text": "WistleBasic.NET, lasst mal mal au\u00dfen vor, den ganzen M\u00fcll, da kann man, ja, und F-Sharp"}, {"id": 52, "start": 315.52, "end": 317.52, "text": "wei\u00df ich auch nicht, wie es funktioniert."}, {"id": 53, "start": 317.52, "end": 322.92, "text": "F-Sharp habe ich mal so ein Einsteiger-Tutorial gemacht an Schkalusten, funktionale Sprachen"}, {"id": 54, "start": 322.92, "end": 324.16, "text": "sind einfach nix f\u00fcr mich."}, {"id": 55, "start": 324.16, "end": 334.6, "text": "Ich habe mich auch schon mal an, \u00e4h, ne, nicht Skala Erlang versucht, \u00e4hm, also mir"}, {"id": 56, "start": 334.6, "end": 339.64, "text": "reicht, mir reicht das, was Funktionales in C-Sharp drin ist, oder kann es ja auch in"}, {"id": 57, "start": 339.64, "end": 344.2, "text": "Ruby und Groovy ein bisschen Funktionales machen, aber wirklich diese Hardcore-Funktional-Sprachen,"}, {"id": 58, "start": 344.2, "end": 347.36, "text": "ich werde damit nicht warm, also weder mit F-Sharp noch mit Erlang noch mit Skala noch"}, {"id": 59, "start": 347.36, "end": 350.92, "text": "mit Haskell oder mit irgendwas anderem, das ist irgendwie nicht meine Welt."}, {"id": 60, "start": 350.92, "end": 355.56, "text": "Ich habe es mir schon lange vorgenommen, mir das Ganze mal anzugucken, aber, \u00e4h, warum"}, {"id": 61, "start": 355.56, "end": 360.24, "text": "ich das ein bisschen scheue ist, so, ist folgenderma\u00dfen, warum ich, also warum ich mich ein bisschen"}, {"id": 62, "start": 360.24, "end": 364.84, "text": "davor dr\u00fccke, mich mal mit Funktional-Programmiersprachen zu besch\u00e4ftigen, weil ich wei\u00df jetzt schon,"}, {"id": 63, "start": 364.84, "end": 368.88, "text": "dass ich das eigentlich nicht wirklich auszahlen werde, in Form von, dass man das, was ist,"}, {"id": 64, "start": 368.88, "end": 374.56, "text": "was man wirklich sehr oft verwendet, das ist eher was, was man mal bei speziellen Problemen"}, {"id": 65, "start": 374.56, "end": 380.16, "text": "rausholt und jetzt nicht so Daily, wie sagt man so, Daily-Triver, ja, \u00e4hm, deswegen bin"}, {"id": 66, "start": 380.16, "end": 385.88, "text": "ich, wenn ich sehe, ob sich das wirklich lohnt, auf der anderen Seite, ich mach so viele Sachen,"}, {"id": 67, "start": 385.88, "end": 389.68, "text": "die sich \u00fcberhaupt nicht lohnen, einfach nur weil's mir gef\u00e4llt, also insofern, warum"}, {"id": 68, "start": 389.68, "end": 402.48, "text": "da nicht auch, h\u00e4? Ja man, C++ Beste, Kappa HD, Golden Kappa Check. C++ ist das Beste"}, {"id": 69, "start": 402.48, "end": 408.44, "text": "im Schlechtsein, also quasi das Beste von unten. Okay, legen wir mal eine Konsolenanwendung"}, {"id": 70, "start": 408.44, "end": 415.36, "text": "an und gucken uns mal an, was es hier so alles gibt. Exzellent. So, das blenden wir jetzt"}, {"id": 71, "start": 415.36, "end": 421.68, "text": "mal aus, das machen wir auf einen anderen Desktop, wobei eigentlich kann ich den ganzen anderen"}, {"id": 72, "start": 421.68, "end": 428.48, "text": "M\u00fcll mal wegmachen, ne? Ich l\u00f6sche den ganzen Krams mal hier. So, Browser k\u00f6nnen wir auflassen,"}, {"id": 73, "start": 428.48, "end": 433.68, "text": "das lassen wir auf, das verschieben wir auch mal zu, das verschieben wir auf drei, machen"}, {"id": 74, "start": 433.68, "end": 441.72, "text": "so, ja, exquisite Platzeinteilung, Rider, genauso muss es sein. Gut, wunderbar, dann"}, {"id": 75, "start": 441.72, "end": 452.72, "text": "gehen wir jetzt hier nach Rider, Projects, QtChat,.net watch run. What? Ah. So, gucken"}, {"id": 76, "start": 452.72, "end": 459.52, "text": "wir uns das Ganze mal an. Ah, Moment, Moment, ich darf nicht.net watch run machen, ich"}, {"id": 77, "start": 459.52, "end": 470.04, "text": "muss machen.net,.net SDK,.net watch run, weil ich will ja.net 5 und nicht 3.1 verwenden,"}, {"id": 78, "start": 470.04, "end": 474.8, "text": "ich habe ja beides installiert, ich habe ja.net 5 erstmal als Snap installiert und Rider"}, {"id": 79, "start": 474.8, "end": 480.08, "text": "als Early Access, oder wie sie es hei\u00dfen, wie sie es nennen, und das gibt es noch nicht"}, {"id": 80, "start": 480.08, "end": 484.8, "text": "im offiziellen Paketmanager, sind noch nicht so schnell. So, und das k\u00f6nnen wir hier auch"}, {"id": 81, "start": 484.8, "end": 491.76, "text": "r\u00fcber machen und da wieder auf. Machen wir mal ein bisschen gr\u00f6\u00dfer. Wow. Okay, vielleicht,"}, {"id": 82, "start": 491.76, "end": 503.04, "text": "vielleicht doch nicht so gro\u00df, so, so, so, reicht. Der Bauer hat den Cryok\u00fchler auf"}, {"id": 83, "start": 503.04, "end": 508.24, "text": "den Risen gepappt, das haben wir uns doch heute noch angeguckt. Jeder, der das jetzt"}, {"id": 84, "start": 508.24, "end": 512.16, "text": "schreibt, ist zu fr\u00fch im aufwachen Stream abgehauen. Das Video haben wir uns noch angeguckt."}, {"id": 85, "start": 512.16, "end": 528.0, "text": "Chat, bin ich aufgepasst wieder. Tja. Okay, fangen wir mal an, gucken wir uns das mal,"}, {"id": 86, "start": 528.0, "end": 532.4, "text": "gucken wir uns das mal in Ruhe an. Also, es gibt jetzt Record Types, bisher in C Sharp,"}, {"id": 87, "start": 532.4, "end": 539.04, "text": "nur mal so zur Erkl\u00e4rung gibt es das ja folgenderma\u00dfen, es gibt zwei verschiedene, grunds\u00e4tzliche,"}, {"id": 88, "start": 539.04, "end": 542.72, "text": "ja, wie soll man es nennen, nicht Typen, doch grunds\u00e4tzlich verschiedene Typen gibt es"}, {"id": 89, "start": 542.72, "end": 548.44, "text": "in C Sharp, zwei St\u00fcck. So, das sind einmal, wir machen das mal hier unten, da machen wir"}, {"id": 90, "start": 548.44, "end": 557.76, "text": "ein bisschen Platz, so, das ist nicht hier, \u00e4h, gut, chat, ah ja, ja, so, ab hier geht"}, {"id": 91, "start": 557.76, "end": 562.72, "text": "es los. So, es gibt ja in C Sharp zwei, vielleicht machen wir mal ein bisschen Erkl\u00e4rbeerstream,"}, {"id": 92, "start": 562.72, "end": 568.92, "text": "gibt es ja zwei unterschiedliche Typen. Es gibt einmal Classes und es gibt f\u00fcr die Oldschool"}, {"id": 93, "start": 568.92, "end": 579.44, "text": "Leute und es gibt Strucks. So, und, \u00e4hm, der Unterschied ist auf den ersten Blick gar"}, {"id": 94, "start": 579.44, "end": 585.28, "text": "nicht so gro\u00df, aber wie gesagt, auf den ersten Blick. So, also man kann da mehr oder weniger"}, {"id": 95, "start": 585.28, "end": 589.28, "text": "\u00e4hnliche Sachen drin machen, in so einer Klasse oder in einem Struct, also zum Beispiel,"}, {"id": 96, "start": 589.28, "end": 593.64, "text": "ich kann da drin irgendwelche Methoden anlegen, sowas wie Public, also wir machen jetzt mal,"}, {"id": 97, "start": 593.64, "end": 600.76, "text": "wir machen jetzt mal so die, wirklich die Low-Brain-Einsteiger-Examples, weil sonst bin ich zu, zu, zu, nicht"}, {"id": 98, "start": 600.76, "end": 604.64, "text": "genug Brainpower, um mir welche auszuheilen, also wir machen jetzt sowas wie, keine Ahnung,"}, {"id": 99, "start": 604.64, "end": 611.36, "text": "Door, so, oder haben wir sowas wie Open zum Beispiel drin, so. \u00c4hm, das kann man, das"}, {"id": 100, "start": 611.36, "end": 616.12, "text": "kann man \u00fcbrigens in Structs und Classes machen, das ist kein Problem. So, also auf"}, {"id": 101, "start": 616.12, "end": 622.64, "text": "den ersten Blick unterscheidet sich das gar nicht mal so gro\u00dfartig. Der eigentliche Unterschied"}, {"id": 102, "start": 622.64, "end": 629.76, "text": "zwischen Classes und Structs ist folgender, dass Classes, also, also wenn ich jetzt was,"}, {"id": 103, "start": 629.76, "end": 634.84, "text": "wir machen das jetzt einfach mal, so, wir machen das hier, myStruct, ah, ohje, keine"}, {"id": 104, "start": 634.84, "end": 638.2, "text": "Ahnung, ohje, myClass, meistens eigentlich ganz guter Name, dann passt das, dann passt"}, {"id": 105, "start": 638.2, "end": 648.6, "text": "das n\u00e4mlich ganz gut. So, wenn ich die, wenn ich die jetzt anlege, so, sowas hier, bar,"}, {"id": 106, "start": 648.6, "end": 656.72, "text": "myClass, so, immer, wir machen, beste, beste Variab, beste Variab in dem A, B gleich new,"}, {"id": 107, "start": 656.72, "end": 674.84, "text": "myStruct. So, jetzt ist die Frage, was passiert, was passiert hier? So, was passiert bei wem?"}, {"id": 108, "start": 674.84, "end": 680.12, "text": "Sieht ja erst mal relativ gleich aus. Man legt hier eine Instanz von Klasse an und man"}, {"id": 109, "start": 680.12, "end": 686.88, "text": "legt hier quasi eine Instanz von myStruct an. Wenn ich jetzt die Class zuweis in einer"}, {"id": 110, "start": 686.88, "end": 696.2, "text": "anderen Variabel, dann passiert hier eigentlich nix weiter. Es wird einfach, so, einen Link"}, {"id": 111, "start": 696.2, "end": 700.08, "text": "erzeugt, das kann ich, das kann ich euch zeigen, zum Beispiel, wir machen jetzt hier"}, {"id": 112, "start": 700.08, "end": 711.8, "text": "mal ne public, wie kommen wir mal, public int, \u00e4hm, keine Ahnung, test, so, \u00e4hm, so,"}, {"id": 113, "start": 711.8, "end": 715.88, "text": "das ist, wir machen hier zwei public Variablen, test, wir machen hier keine Ahnung, test ist"}, {"id": 114, "start": 715.88, "end": 723.08, "text": "null, ach nee, Moment, kann man das standardm\u00e4\u00dfig gar nicht so zuweisen? Kann man das standardm\u00e4\u00dfig"}, {"id": 115, "start": 723.08, "end": 730.24, "text": "nicht zuweisen? Okay, ist egal. So, \u00e4hm, wenn ich jetzt sage, bei der Klasse, wir machen"}, {"id": 116, "start": 730.24, "end": 736.2, "text": "das erstmal mit der Klasse, so, wenn ich jetzt sage, a, test ist gleich eins, so, dann k\u00f6nnen"}, {"id": 117, "start": 736.2, "end": 741.6, "text": "wir uns hier ausgeben, am Anfang, am Anfang ist test null, also das ist, null ist glaub"}, {"id": 118, "start": 741.6, "end": 751.04, "text": "ich default f\u00fcr int, so, danach ist test eins, guckt euch das mal an, erst ist test"}, {"id": 119, "start": 751.04, "end": 754.92, "text": "null, dann ist test eins, also, genauso, wie man das ganze erwarten w\u00fcrde, Highkicks,"}, {"id": 120, "start": 754.92, "end": 762.6, "text": "also was, wir gucken uns die 90 sharp Features an, was vor ein paar Tagen rausgekommen ist,"}, {"id": 121, "start": 762.6, "end": 766.84, "text": "Mark Jojo, genau, danach, danach wird, danach kommt der Test, danach wird abgefragt, jetzt"}, {"id": 122, "start": 766.84, "end": 771.56, "text": "Pr\u00fcfung, so, also man sieht, da kommt null und eins raus, das ist ja eigentlich auch"}, {"id": 123, "start": 771.56, "end": 778.2, "text": "so, wie man es erwarten w\u00fcrde, jetzt kommt allerdings der Trick, was passiert denn jetzt,"}, {"id": 124, "start": 778.2, "end": 791.88, "text": "wenn ich sowas hier mache, b ist gleich a, was ist jetzt, was ist jetzt in b.test drinne,"}, {"id": 125, "start": 791.88, "end": 800.12, "text": "was meint ihr? Also, ich nehme a und wei\u00df, dass b zu und dann gucke ich, was in test"}, {"id": 126, "start": 800.12, "end": 807.36, "text": "drin steht, da ist nat\u00fcrlich immer noch eins drin, weil das haben wir ja vorher reingeschrieben"}, {"id": 127, "start": 807.36, "end": 813.6, "text": "und a ist ja, b ist ja nur ein Zeige auf a, aber jetzt kommt, jetzt kommt der Knackpunkt,"}, {"id": 128, "start": 813.6, "end": 824.12, "text": "was passiert denn, wenn ich jetzt sowas hier mache, b, test, gleich 100, dann ist b test"}, {"id": 129, "start": 824.12, "end": 834.36, "text": "100, aber, und jetzt kommt der Witz, a test ist auch 100, also sprich, das hier, b ist"}, {"id": 130, "start": 834.36, "end": 840.88, "text": "einfach nur ein Zeige auf a, so, mit einem Struct sieht das schon wieder anders aus,"}, {"id": 131, "start": 840.88, "end": 845.4, "text": "wenn wir das Ganze jetzt nochmal machen und nehmen jetzt hier mal my struct, das muss"}, {"id": 132, "start": 845.4, "end": 848.2, "text": "ich jetzt mal ein bisschen als Intro erkl\u00e4ren, dass man vielleicht das neue Feature besser"}, {"id": 133, "start": 848.2, "end": 853.96, "text": "versteht, weil ich kapiere es selbst noch nicht so genau, so, wenn man das Ganze jetzt"}, {"id": 134, "start": 853.96, "end": 858.32, "text": "mal mit structs macht, wir k\u00f6nnen das Ganze jetzt mal ein bisschen abk\u00fcrzen, so, ich"}, {"id": 135, "start": 858.32, "end": 865.12, "text": "klicke jetzt ein neues Struct und dann sage, a ist gleich, a ist gleich links, so, jetzt"}, {"id": 136, "start": 865.12, "end": 872.32, "text": "sage ich a test ist gleich 100, oder a test, bleiben wir bei, ist gleich 1, so, gebe ich"}, {"id": 137, "start": 872.32, "end": 880.84, "text": "das hier aus, wunderbar, noch nichts neues, aber jetzt, jetzt kommt der Witz, sage ich"}, {"id": 138, "start": 880.84, "end": 889.84, "text": "jetzt b test gleich 100 und gebe b aus, dann ist das auch noch alles ok, aber, wenn ich"}, {"id": 139, "start": 889.84, "end": 899.84, "text": "jetzt a test ausgebe, werdet ihr feststellen, tja, hoch, das scheint anders zu funktionieren,"}, {"id": 140, "start": 899.84, "end": 907.0, "text": "n\u00e4mlich da ist a noch 1, ja, und deswegen, das ist der haupts\u00e4chliche Unterschied, also"}, {"id": 141, "start": 907.0, "end": 913.52, "text": "sprich, wenn ich eine Klasse habe, dann ist das hier immer eine Referenz und ein Struct"}, {"id": 142, "start": 913.52, "end": 917.92, "text": "wird immer kopiert, das hei\u00dft, sobald ich das hier mache, hat b nichts mehr mit a zu"}, {"id": 143, "start": 917.92, "end": 928.24, "text": "tun, das ist so der grunds\u00e4tzliche, der basic Unterschied zwischen Structs und Classes,"}, {"id": 144, "start": 928.24, "end": 931.52, "text": "wer braucht sowas, du brauchst Leute, die sowas k\u00f6nnen, dass du dein t\u00e4gliches Smartphone"}, {"id": 145, "start": 931.52, "end": 938.92, "text": "Zeug spielen kannst, dass du fortan ein Mobile spielen kannst, brauchst du das, und zumindest"}, {"id": 146, "start": 938.92, "end": 949.08, "text": "indirekt, so, so weit zur Erkl\u00e4rung der ganzen Geschichte, also sprich, Structs werden immer"}, {"id": 147, "start": 949.08, "end": 953.64, "text": "kopiert und Classes sind immer Referenzen aufeinander, das hat nat\u00fcrlich den gro\u00dfen"}, {"id": 148, "start": 953.64, "end": 958.48, "text": "Vorteil oder auch einen Nachteil, je nachdem, wie man das sieht, hier muss ich immer was"}, {"id": 149, "start": 958.48, "end": 962.96, "text": "kopieren, wenn ich das \u00fcbergebe oder zuweise oder sonst was, sprich, ich muss permanent"}, {"id": 150, "start": 962.96, "end": 967.04, "text": "was kapieren, und hier \u00fcbergebe ich einfach nur eine Referenz, was nat\u00fcrlich auch hei\u00dft,"}, {"id": 151, "start": 967.04, "end": 973.72, "text": "die Sachen ver\u00e4ndere ich immer automatisch mit und hier bleibt das Original unber\u00fchrt,"}, {"id": 152, "start": 973.72, "end": 981.6, "text": "so, das ist so der grunds\u00e4tzliche Unterschied, ich wei\u00df, die Kenner werden jetzt anfangen"}, {"id": 153, "start": 981.6, "end": 985.4, "text": "von wegen Heap und Stack und sonst was, das ist erstmal vollkommen egal, das grunds\u00e4tzliche,"}, {"id": 154, "start": 985.4, "end": 993.0, "text": "was man wissen muss, Structs werden kopiert und Klassen werden referenziert, exzellent,"}, {"id": 155, "start": 993.0, "end": 995.7, "text": "so und jetzt k\u00f6nnen wir uns mal das neue Feature angucken, das habe ich n\u00e4mlich selbst noch"}, {"id": 156, "start": 995.7, "end": 1002.24, "text": "nicht so ganz gecheckt, Structs sind f\u00fcr Boomer, das w\u00fcrde ich tats\u00e4chlich teilweise"}, {"id": 157, "start": 1002.24, "end": 1008.32, "text": "so unterschreiben, weil ganz ehrlich, Structs verwendet man sehr selten, es gibt einen gro\u00dfen"}, {"id": 158, "start": 1008.32, "end": 1017.32, "text": "Unterschied, den ich noch zeigen muss zwischen Structs und Classes und Structs, den ich"}, {"id": 159, "start": 1017.32, "end": 1022.6, "text": "noch nicht gezeigt habe, so, also, wir machen jetzt mal eine Klasse, wir machen jetzt mal"}, {"id": 160, "start": 1022.6, "end": 1033.24, "text": "hier, keine Ahnung, Struct 1 und Struct 2, so, was meint ihr, was hier rauskommt?"}, {"id": 161, "start": 1033.24, "end": 1044.76, "text": "Wobei, ich fange mal, ich fange, vielleicht fange ich besser anders an, ja, doch, machen"}, {"id": 162, "start": 1044.76, "end": 1051.68, "text": "wir es mal, was meint ihr, was hier rauskommt, bei dem Check, wenn ich checke, achso, darf"}, {"id": 163, "start": 1051.68, "end": 1058.44, "text": "ich so ja gar nicht, \u00e4h, okay, Equals, machen wir es so, was meint ihr, was bei dem Check"}, {"id": 164, "start": 1058.44, "end": 1067.12, "text": "rauskommt, wenn ich gucken will, ob Struct 1 gleich Struct 2 ist, tja, noch kommt da"}, {"id": 165, "start": 1067.12, "end": 1071.2, "text": "True raus, noch kommt da True raus, warum?"}, {"id": 166, "start": 1071.2, "end": 1076.8, "text": "Weil die Werte innerhalb dieses Structs in beiden Structs gleich sind, so, mache ich"}, {"id": 167, "start": 1076.8, "end": 1089.48, "text": "Struct 1, Test gleich 5, dann wird da False rauskommen, also sprich, wenn ich \u00fcberpr\u00fcfe,"}, {"id": 168, "start": 1089.48, "end": 1094.32, "text": "ob zwei Structs gleich sind, da werden immer die Werte miteinander \u00fcberpr\u00fcft, ob die"}, {"id": 169, "start": 1094.32, "end": 1107.84, "text": "gleich sind, so, und jetzt machen wir das nochmal mit den Klassen, jetzt, jetzt, \u00e4h,"}, {"id": 170, "start": 1107.84, "end": 1111.28, "text": "okay, ich pendenze mal um, so, was meint ihr, was da jetzt rauskommt?"}, {"id": 171, "start": 1111.28, "end": 1118.24, "text": "Jetzt k\u00f6nnen wir, jetzt k\u00f6nnen wir \u00fcbrigens hier auch gleich, gleich machen, ja, was"}, {"id": 172, "start": 1118.24, "end": 1123.56, "text": "wird, achso, ja, das sind wir gleich, tja, da kommt jetzt False raus, so viel kann ich"}, {"id": 173, "start": 1123.56, "end": 1128.76, "text": "euch schon mal spoilern, aber, und jetzt kommt der gro\u00dfe Unterschied zu Structs, wenn ich"}, {"id": 174, "start": 1128.76, "end": 1133.72, "text": "das hier jetzt wegmache, also sprich, jetzt sind ja die Werte zwischen Class 1 und Class"}, {"id": 175, "start": 1133.72, "end": 1138.32, "text": "2 exakt gleich, ich hab bei keinem die Werte ver\u00e4ndert, jetzt ist das immer noch False,"}, {"id": 176, "start": 1138.32, "end": 1139.32, "text": "warum?"}, {"id": 177, "start": 1139.32, "end": 1147.28, "text": "Genau, was der Void Danny sagt, zwischen Klassen wird die Referenz verglichen, also"}, {"id": 178, "start": 1147.28, "end": 1155.36, "text": "sprich, zeig das hier mal ganz, einfach gesagt, zeig das hier auf den gleichen, \u00e4h, Startpunkt"}, {"id": 179, "start": 1155.36, "end": 1161.84, "text": "im Speicher, wenn ja, dann ist das die gleiche Instanz und es ist true, ansonsten zwei unterschiedliche"}, {"id": 180, "start": 1161.84, "end": 1166.88, "text": "Klasseninstanzen, wenn du die miteinander vergleichst, sind immer False, bei Structs"}, {"id": 181, "start": 1166.88, "end": 1170.64, "text": "ist es umgedreht, Structs ist eigentlich ziemlich wurscht, wo die ganzen Sachen im Speicher"}, {"id": 182, "start": 1170.64, "end": 1178.04, "text": "verliegen, Structs werden immer die Werte \u00fcberpr\u00fcft, also sprich, mit Structs l\u00e4sst"}, {"id": 183, "start": 1178.04, "end": 1187.4, "text": "sich zum Beispiel relativ gut alles abbilden, was irgendwie so eine Art Wert ist, also zum"}, {"id": 184, "start": 1187.4, "end": 1197.48, "text": "Beispiel ein Datum oder so, oder irgendwie eine Uhrzeit, oder ein Intervall, oder sowas"}, {"id": 185, "start": 1197.48, "end": 1203.4, "text": "in der Richtung, ja, weil es ist so, wenn ich zum Beispiel eine Klasse habe f\u00fcr Uhrzeit,"}, {"id": 186, "start": 1203.4, "end": 1209.96, "text": "oder einen Struct habe f\u00fcr Uhrzeit und ich will \u00fcberpr\u00fcfen, Uhrzeit 1 ist Uhrzeit 1"}, {"id": 187, "start": 1209.96, "end": 1217.88, "text": "gleich Uhrzeit 2, dann will ich nicht \u00fcberpr\u00fcfen, ob das im Speicher die gleiche Adresse ist,"}, {"id": 188, "start": 1217.88, "end": 1224.92, "text": "sondern ich will wissen, ist das quasi logisch gesehen von den Zahlen her der gleiche Wert,"}, {"id": 189, "start": 1224.92, "end": 1231.16, "text": "so dementsprechend, wenn bei Structs Werte \u00fcberpr\u00fcft miteinander und bei Klassenreferenzen."}, {"id": 190, "start": 1231.16, "end": 1239.44, "text": "So und jetzt kommt der Bits, was das bei C Sharp auch ein bisschen schwammiger macht,"}, {"id": 191, "start": 1239.44, "end": 1243.76, "text": "man kann, ich l\u00f6sche das Struct mal, was man machen kann, also wir wissen jetzt ja,"}, {"id": 192, "start": 1243.76, "end": 1248.64, "text": "dass hier ist False, das wissen wir jetzt ja, also wir wissen, wir machen mal, ich mach"}, {"id": 193, "start": 1248.64, "end": 1253.88, "text": "mal hier so einen Start, dann sieht man es besser, Start und Ende, so, dann sieht man"}, {"id": 194, "start": 1253.88, "end": 1258.36, "text": "n\u00e4mlich hier im Terminal besser, was Sache ist, so, also das wissen wir ja, das hier"}, {"id": 195, "start": 1258.36, "end": 1263.04, "text": "ist eine Referenz auf eine Instanz von Klasse, das hier ist auch eine Instanz, eine Referenz"}, {"id": 196, "start": 1263.04, "end": 1268.84, "text": "auf eine Instanz von Klasse, so und die sind nie, die sind nie gleich, weil es sind unterschiedliche"}, {"id": 197, "start": 1268.84, "end": 1273.32, "text": "Referenzen, unterschiedliche Adressen im Speicher, was man jetzt machen kann in C Sharp ist folgendes,"}, {"id": 198, "start": 1273.32, "end": 1275.92, "text": "man kann sagen, ich muss ehrlich sagen, ich hoffe ich krieg's aus dem Kopf hin, weil"}, {"id": 199, "start": 1275.92, "end": 1284.4, "text": "man macht das nicht sehr oft, kann man sagen Over, nee, Overwrite, Equals und dann kann"}, {"id": 200, "start": 1284.4, "end": 1289.4, "text": "man das Ganze ein bisschen faken, also sprich ich kann \u00fcberschreiben, wie sich das hier"}, {"id": 201, "start": 1289.4, "end": 1301.4, "text": "verh\u00e4lt und ich kann auch ne Klasse so programmieren, dass sie sich \u00e4hnlich wie den Struct verh\u00e4lt"}, {"id": 202, "start": 1301.4, "end": 1309.72, "text": "beim Vergleich, wo man sich nat\u00fcrlich dann die Frage stellen muss, okay, macht das Sinn,"}, {"id": 203, "start": 1309.72, "end": 1316.44, "text": "das ist nat\u00fcrlich von, wie machen wir das jetzt eigentlich, Return, wie funktioniert"}, {"id": 204, "start": 1316.44, "end": 1320.4, "text": "das jetzt \u00fcberhaupt nicht, ich mach das so selten, ich glaub man braucht hier dann irgendwie,"}, {"id": 205, "start": 1320.4, "end": 1331.84, "text": "man muss das glaube ich casten, ne, da muss man irgendwie sagen, my class, ist das richtig,"}, {"id": 206, "start": 1331.84, "end": 1340.12, "text": "man muss das irgendwie casten, also das hei\u00dft ich muss dann sagen, keine Ahnung, i, das"}, {"id": 207, "start": 1340.12, "end": 1350.0, "text": "da, irgendwie sowas in der Richtung kann man glaube ich machen, so und jetzt werden"}, {"id": 208, "start": 1350.0, "end": 1355.0, "text": "wir sehen, das ist immer noch falsch, was hab ich verkehrt gemacht, was hab ich falsch"}, {"id": 209, "start": 1355.0, "end": 1369.36, "text": "gemacht, warum kommt da jetzt nicht True raus, ach ich muss Dings \u00fcberschreiben, ich muss"}, {"id": 210, "start": 1369.36, "end": 1377.96, "text": "noch gleich gleich \u00fcberschreiben, jetzt kommt True raus, so und wie \u00fcberschreibe ich jetzt,"}, {"id": 211, "start": 1377.96, "end": 1388.92, "text": "wie \u00fcberschreibe ich jetzt gleich gleich, das geht auch irgendwie, ja ich \u00fcberleg mir auch"}, {"id": 212, "start": 1388.92, "end": 1392.52, "text": "wie man das generieren kann, wie kann man das denken, ach hier kann man den bestimmt"}, {"id": 213, "start": 1392.52, "end": 1417.36, "text": "sagen, ich m\u00f6chte da noch generate, wow, what the fuck, und das funzt jetzt, ne, das war"}, {"id": 214, "start": 1417.36, "end": 1433.8, "text": "ich falsch auf meinen Basics, ach man muss den Operator \u00fcberladen, ach stimmt, das macht"}, {"id": 215, "start": 1433.8, "end": 1440.56, "text": "man so selten, ja, man muss den Operator \u00fcberladen, also sprich ich muss jetzt machen, was Publix"}, {"id": 216, "start": 1440.56, "end": 1451.32, "text": "ist, Static, Bool, Operator, ernsthaft so, ach du gro\u00dfe Schei\u00dfe, das mach ich ja nie,"}, {"id": 217, "start": 1451.32, "end": 1471.12, "text": "und wie geht das jetzt, C Sharp, Class, Overload, Equals, sieht man mal wie oft man sowas macht,"}, {"id": 218, "start": 1471.12, "end": 1485.36, "text": "so geht es schon mal nicht, Operator, ja, excellent, ok, wir Copy Pasting, Stack Overflow, wir wissen"}, {"id": 219, "start": 1485.36, "end": 1497.32, "text": "ja, Stack Overflow, Copy Pasting ist prinzipiell die beste Antwort auf alle Sachen, ok, Return,"}, {"id": 220, "start": 1497.32, "end": 1509.4, "text": "Object 1, wobei ne, ich kann doch da jetzt aufrufen, Equals, oder, wir machen das jetzt"}, {"id": 221, "start": 1509.4, "end": 1520.24, "text": "hier einfach noch mal, aber ich kann sowas, mach du das so, ne, das geht nicht, warum geht"}, {"id": 222, "start": 1520.24, "end": 1528.4, "text": "das nicht, ah, man muss Matching, aha, aha, oh, komm mal hier, Big Brain, man muss beides"}, {"id": 223, "start": 1528.4, "end": 1534.64, "text": "\u00fcberschreiben, jetzt kommt True raus, ok, alles klar, das ist \u00fcbrigens auch ne Sache,"}, {"id": 224, "start": 1534.64, "end": 1541.44, "text": "was ich an C Sharp mag, beziehungsweise an der Philosophie, was Microsoft macht, dass"}, {"id": 225, "start": 1541.44, "end": 1547.28, "text": "die hier gleich sagen, ok, wenn du Equals \u00fcberl\u00e4dst, oder beziehungsweise den Gleichgleich"}, {"id": 226, "start": 1547.28, "end": 1553.56, "text": "Operator \u00fcberl\u00e4dst, du musst auch ungleich \u00fcberladen, weil es w\u00e4re ja so komplett wir,"}, {"id": 227, "start": 1553.56, "end": 1559.16, "text": "wenn auf einmal das da True w\u00e4re und das da auch True w\u00e4re, das w\u00fcrde ja \u00fcberhaupt"}, {"id": 228, "start": 1559.16, "end": 1564.52, "text": "keinen Sinn ergeben, das kann man h\u00f6chstens machen, um die Leute zu trollen, ja, so, also"}, {"id": 229, "start": 1564.52, "end": 1571.76, "text": "man sieht, man kann auch Klassen fabrizieren, die sich ein bisschen wie Struts anf\u00fchlen,"}, {"id": 230, "start": 1571.76, "end": 1579.04, "text": "aber der grunds\u00e4tzliche Unterschied zwischen Klassen und Struts bleibt, Struts werden immer"}, {"id": 231, "start": 1579.04, "end": 1586.64, "text": "kopiert und Klassen sind immer quasi Verkn\u00fcpfung, ja, Referenzen aufeinander, das muss man wissen"}, {"id": 232, "start": 1586.64, "end": 1592.72, "text": "und manchmal ist es tats\u00e4chlich sinnvoller einen Strut zu nehmen, aber meistens in, ah"}, {"id": 233, "start": 1592.72, "end": 1598.08, "text": "man, 99% der F\u00e4lle sind es eigentlich Klassen, die man nimmt, so, und jetzt k\u00f6nnen wir uns"}, {"id": 234, "start": 1598.08, "end": 1603.28, "text": "das neue Feature angucken, n\u00e4mlich, es gibt jetzt sowas Neues, das ist quasi ein Strut"}, {"id": 235, "start": 1603.28, "end": 1607.88, "text": "als Klasse, soweit ich das verstanden habe, ich bin da n\u00e4mlich im Vorfeld schon mal dr\u00fcber"}, {"id": 236, "start": 1607.88, "end": 1616.48, "text": "gescrollt und zwar, es gibt jetzt Record Types, also sprich, bisher gab es ja in Public Strut,"}, {"id": 237, "start": 1616.48, "end": 1627.36, "text": "Strut, also bisher gab es ja in C Sharp nur Klassen und Struts und jetzt gibt es quasi"}, {"id": 238, "start": 1627.36, "end": 1634.44, "text": "eine verkappte Klasse als Strut, die, also, ja doch, eine Klasse, die so tut, als w\u00e4re"}, {"id": 239, "start": 1634.44, "end": 1639.52, "text": "es ein Strut, die quasi genau das macht, was ich eben gemacht habe, aber schon standardm\u00e4\u00dfig,"}, {"id": 240, "start": 1639.52, "end": 1644.48, "text": "also sprich, Record Types sind, soweit ich das verstanden habe, die legt man \u00fcbrigens"}, {"id": 241, "start": 1644.48, "end": 1652.32, "text": "so an, also wir k\u00f6nnen das ja mal kurz copypasten, wie die das hier machen, so, das ist jetzt"}, {"id": 242, "start": 1652.32, "end": 1657.64, "text": "neu, also das gibt es erst seit 5 Tagen oder so, oder seit 2 Tagen, oder wie auch immer,"}, {"id": 243, "start": 1657.64, "end": 1661.96, "text": "ich glaube seit 5 Tagen gibt es das erst, so, das ist jetzt neu, also sprich, was das"}, {"id": 244, "start": 1661.96, "end": 1669.08, "text": "macht, ist, dass da unten k\u00f6nnen wir uns glaube ich sparen, das ist der Constructor hier,"}, {"id": 245, "start": 1669.08, "end": 1681.08, "text": "ja, wir machen das mal kurz weg, so, das ist jetzt ein neuer Typ, und zwar, der \u00fcberschreibt"}, {"id": 246, "start": 1681.08, "end": 1688.84, "text": "das ganze jetzt, also ich kann jetzt quasi sagen, New, Rec 1, Rec 2, New, das ist jetzt"}, {"id": 247, "start": 1688.84, "end": 1694.08, "text": "wie gesagt, das ist das erste Mal, dass ich das verwende, schauen wir mal, und wir machen"}, {"id": 248, "start": 1694.08, "end": 1703.28, "text": "jetzt auch wirklich nur noch sowas hier, so, also, my record 1, my record 2, Rec 1 gleich"}, {"id": 249, "start": 1703.28, "end": 1715.88, "text": "Rec 2, und jetzt wird mir sehen, es ist true, 0W, so, also sprich, den Record ist ne Klasse,"}, {"id": 250, "start": 1715.88, "end": 1722.2, "text": "die schon Equals \u00fcberschrieben hat f\u00fcr mich, also quasi das hier, was ich eben von Hand"}, {"id": 251, "start": 1722.2, "end": 1727.48, "text": "gemacht hab, dieser Schmodder hier, den ich hier eben von Hand gemacht hab, den macht"}, {"id": 252, "start": 1727.48, "end": 1732.36, "text": "Record schon f\u00fcr mich, warum will man sowas haben, ich habs auch erst nicht kapiert ehrlich"}, {"id": 253, "start": 1732.36, "end": 1736.28, "text": "gesagt, und ich bin mir da noch immer noch nicht hundertprozentig sicher, aber ich denke"}, {"id": 254, "start": 1736.28, "end": 1745.68, "text": "mal, das liegt daran, wenn man sowas hat, was eben, so gewisse Wert, wo so die Zahlen"}, {"id": 255, "start": 1745.68, "end": 1750.64, "text": "geht, die drin gespeichert werden, nicht so sehr ob es ne Referenz ist oder nicht, aber"}, {"id": 256, "start": 1750.64, "end": 1755.6, "text": "ich trotzdem es nicht bei jedem Aufruf kopieren will, also sprich, wenn ich aus Performance"}, {"id": 257, "start": 1755.6, "end": 1764.28, "text": "Gr\u00fcnden keine Structs verwenden mag, aber ich von der Vergleichlogik her eigentlich"}, {"id": 258, "start": 1764.28, "end": 1768.24, "text": "das verwenden will, was Structs machen, so, und deswegen haben sie das wahrscheinlich"}, {"id": 259, "start": 1768.24, "end": 1772.64, "text": "auch Record genannt, oder sie h\u00e4tten es auch Data oder so nennen k\u00f6nnen, also sprich,"}, {"id": 260, "start": 1772.64, "end": 1780.16, "text": "um zu symbolisieren, dass es bei dieser Klasse nicht um die Methoden und sonst was geht,"}, {"id": 261, "start": 1780.16, "end": 1783.2, "text": "die man implementiert, sondern eigentlich haupts\u00e4chlich um die Daten, die drin enthalten"}, {"id": 262, "start": 1783.2, "end": 1789.96, "text": "sind, so, und was man jetzt damit noch gro\u00dfartig machen kann, muss ich mir angucken, weil hab"}, {"id": 263, "start": 1789.96, "end": 1794.96, "text": "ich auch keine Ahnung von, genau, ach ja stimmt, man kann Records glaube ich gar nicht \u00e4ndern,"}, {"id": 264, "start": 1794.96, "end": 1800.28, "text": "ne, das ist ja das n\u00e4chste Feature, was ich, so wie ich das gesehen hab, ich glaube man"}, {"id": 265, "start": 1800.28, "end": 1804.24, "text": "kann Records nicht \u00e4ndern, also was ich jetzt, ich kann doch sowas hier nicht machen, oder?"}, {"id": 266, "start": 1804.24, "end": 1809.2, "text": "Oh doch, kann ich, warum geht das?"}, {"id": 267, "start": 1809.2, "end": 1813.36, "text": "Ich dachte, das geht nicht, ich dachte, das ist der Sinn davon gewesen, dass das nicht"}, {"id": 268, "start": 1813.36, "end": 1814.36, "text": "geht."}, {"id": 269, "start": 1814.36, "end": 1827.52, "text": "Okay, das kann man nicht, das darf man nicht wie Public Variable machen, das muss man"}, {"id": 270, "start": 1827.52, "end": 1829.84, "text": "wohl mit irgendwelchen Properties machen."}, {"id": 271, "start": 1829.84, "end": 1846.84, "text": "Die gro\u00dfe Preisfrage ist, Moment mal, REC 1, ob der das \u00fcberhaupt macht, okay, okay,"}, {"id": 272, "start": 1846.84, "end": 1854.68, "text": "wir lesen mal den Text dazu, was die geschrieben haben, also, wie gesagt, ich hab mich da nicht"}, {"id": 273, "start": 1854.68, "end": 1860.0, "text": "gro\u00dfartig mit besch\u00e4ftigt, zumindest, was ich in dem Webcast gesehen hab, ist, dass"}, {"id": 274, "start": 1860.0, "end": 1864.64, "text": "eines der neuen Features von Records im Vergleich zu Structs und Klassen ist, dass man sie"}, {"id": 275, "start": 1864.64, "end": 1869.68, "text": "immutable machen kann, also sprich, dass ich, nachdem ich sie angelegt hab, sie nicht mehr"}, {"id": 276, "start": 1869.68, "end": 1870.68, "text": "\u00e4ndern kann."}, {"id": 277, "start": 1870.68, "end": 1880.12, "text": "Was zum Beispiel, wenn man Multi-Threading macht, ganz n\u00fctzlich ist, so, \u00e4hm, so,"}, {"id": 278, "start": 1880.12, "end": 1888.92, "text": "also, das muss ich mir jetzt mal durchlesen, was verschreib ich denn mal, so, also, was"}, {"id": 279, "start": 1888.92, "end": 1893.76, "text": "machen wir hier in dem Beispiel, sie legen den Record an, mit zwei Properties, die, ach,"}, {"id": 280, "start": 1893.76, "end": 1902.04, "text": "die Get Only sind, ah, ich glaub, jetzt versteh ich das, okay, das probieren wir jetzt mal"}, {"id": 281, "start": 1902.04, "end": 1910.88, "text": "mit dem Beispiel aus, von denen hier, also, legen wir mal den Record an, also, Persons"}, {"id": 282, "start": 1910.88, "end": 1918.76, "text": "sind immer so dieser, alter, \u00fcbelste Knees-Action, Persons sind immer so der Standard-Test von"}, {"id": 283, "start": 1918.76, "end": 1928.12, "text": "denen, irgendwie, so, und da muss ich jetzt angeben, was First und Last Name, okay, First"}, {"id": 284, "start": 1928.12, "end": 1938.84, "text": "Name, Max, Last Name, Q-Chat, so, und jetzt kann ich die Glaube nicht mehr \u00e4ndern, ne,"}, {"id": 285, "start": 1938.84, "end": 1946.24, "text": "ah, genau, jetzt geht das nicht mehr, okay, also sprich, wenn ich das so mache, wie die"}, {"id": 286, "start": 1946.24, "end": 1954.2, "text": "das jetzt zeigen, also sprich, mit diesen, \u00e4hm, Get Only-Properties, dann funktioniert"}, {"id": 287, "start": 1954.2, "end": 1963.36, "text": "das nicht, so, was ganz praktisch ist, wenn ich sicherstellen will, dass nachdem die Sache"}, {"id": 288, "start": 1963.36, "end": 1967.56, "text": "initialisiert wurde, sie sich nie wieder \u00e4ndern kann, was man jetzt, glaub ich, machen kann"}, {"id": 289, "start": 1967.56, "end": 1984.48, "text": "ist sowas hier, ne, warte mal, wie ging das, With, da muss ich die Syntax mir mal angucken,"}, {"id": 290, "start": 1984.48, "end": 2008.36, "text": "ach, so, genau, das geht, also sprich, man kann, hm, okay, also, also, also, also, also,"}, {"id": 291, "start": 2008.36, "end": 2020.92, "text": "okay, dann hab ich das noch nicht so genau kapiert, ehrlich gesagt, dann m\u00fcssen wir"}, {"id": 292, "start": 2020.92, "end": 2024.08, "text": "uns das jetzt doch mal durchlesen, was sie hier geschrieben haben, zumindest mal so grob"}, {"id": 293, "start": 2024.08, "end": 2030.28, "text": "dr\u00fcber scrollen, dass wir wissen, was da, was da Sache ist, also, das haben wir ausprobiert,"}, {"id": 294, "start": 2030.28, "end": 2034.88, "text": "das funktioniert, also, wenn ich das so anlege, kann ich das einmal anlegen und nie wieder"}, {"id": 295, "start": 2034.88, "end": 2040.16, "text": "\u00e4ndern, was jetzt nicht ganz so toll ist, jaja, das mit Init, ich, ich hab, ich glaube,"}, {"id": 296, "start": 2040.16, "end": 2043.52, "text": "ich hab das schon gesehen, dass ich da Init eintragen muss, aber ich muss mir erstmal"}, {"id": 297, "start": 2043.52, "end": 2047.24, "text": "durchlesen, so grob, was die sonst noch dazwischen geschrieben haben, also, sprich, wenn ich"}, {"id": 298, "start": 2047.24, "end": 2052.56, "text": "so mache, kann ich nie wieder dieses Objekt \u00e4ndern, egal, was ich mach, geht nicht, ist"}, {"id": 299, "start": 2052.56, "end": 2058.56, "text": "nicht erlaubt, was nat\u00fcrlich auch seinen Charme hat, das ist, das ist zum ersten Mal in C"}, {"id": 300, "start": 2058.56, "end": 2067.12, "text": "Sharp so, das, das gab's vorher in der Art und Weise nicht, dass es quasi nen Typ gibt,"}, {"id": 301, "start": 2067.12, "end": 2070.44, "text": "der standardm\u00e4\u00dfig immutable ist, also sprich, den ich initialisieren kann, aber nie wieder"}, {"id": 302, "start": 2070.44, "end": 2077.04, "text": "\u00e4ndern kann, der Vorteil von sowas ist, warum man, warum man sowas zum Beispiel macht, ist,"}, {"id": 303, "start": 2077.04, "end": 2082.4, "text": "wenn man Multi-Threading betreibt, so, ich versuch euch da mal ein Beispiel zu zeigen"}, {"id": 304, "start": 2082.4, "end": 2089.4, "text": "und zwar, ne, kann ich euch kein Beispiel zeigen, das hab ich hier nicht, stelle euch"}, {"id": 305, "start": 2089.4, "end": 2094.44, "text": "mal vor, ihr lest, bleiben wir mal bei diesem Beispiel mit den Webcams, was wir hier schon"}, {"id": 306, "start": 2094.44, "end": 2100.44, "text": "mal programmiert haben, man hat einen Thread, der liest von der Webcam in den Buffer, man"}, {"id": 307, "start": 2100.44, "end": 2106.68, "text": "m\u00f6chte, kennt ihr das, wenn man bei so modernen, moderneren Aufnahmeger\u00e4ten, wenn man da Fernsehprogramme"}, {"id": 308, "start": 2106.68, "end": 2112.68, "text": "aufnimmt, oder, oder, dass man Fernsehprogramme, kennt ihr, dass man Fernsehprogramme anhalten"}, {"id": 309, "start": 2112.68, "end": 2116.12, "text": "kann, oder auch \u00fcberhaupt, dass man Amazon-Videos anhalten kann, ne, also sprich, du l\u00e4dst das"}, {"id": 310, "start": 2116.12, "end": 2124.24, "text": "Video runter, dr\u00fcckst du auf Pause und, \u00e4hm, dann f\u00e4ngt der an zu buffern, beim Fernsehprogramm"}, {"id": 311, "start": 2124.24, "end": 2128.64, "text": "zum Beispiel, also der startet im Hintergrund ne Aufnahme, so, oder, was ihr ja auch kennt"}, {"id": 312, "start": 2128.64, "end": 2136.92, "text": "ist bei Shadowplay, bei Shadowplay, wo man dann, \u00e4hm, beispielsweise bis zu, bis zu,"}, {"id": 313, "start": 2136.92, "end": 2142.32, "text": "glaub, 10 Minuten r\u00fcckw\u00e4rts, oder Viertelstunde r\u00fcckw\u00e4rts, oder so Sachen aufnehmen kann,"}, {"id": 314, "start": 2142.32, "end": 2153.84, "text": "stellt man das jetzt noch mal ein, \u00e4h, wo hat man das, wo stellt man das jetzt in Shadowplay"}, {"id": 315, "start": 2153.84, "end": 2163.12, "text": "noch mal ein, dass man, Buffer, hier, genau, guckt, also sprich, man kann hier in Shadowplay"}, {"id": 316, "start": 2163.12, "end": 2169.66, "text": "auch einstellen, dass man bis zu 20 Minuten r\u00fcckwirkend aufnehmen kann, so, und das funktioniert"}, {"id": 317, "start": 2169.66, "end": 2174.0, "text": "ja auch vollenderma\u00dfen, die haben im Hintergrund was, was permanent aufnimmt, und erst wenn"}, {"id": 318, "start": 2174.0, "end": 2178.12, "text": "du dann auf r\u00fcckw\u00e4rts, r\u00fcckw\u00e4rts aufnehmen dr\u00fcckst, kopiert er das halt in ein neues"}, {"id": 319, "start": 2178.12, "end": 2182.4, "text": "Video-File, der muss es ja aufnehmen, weil der kann ja nicht wirklich r\u00fcckwirkend aufnehmen,"}, {"id": 320, "start": 2182.4, "end": 2186.32, "text": "dann nehmt einfach in ein Temp-File auf, und wenn du sagst, jetzt aufnehmen, dann macht"}, {"id": 321, "start": 2186.32, "end": 2190.0, "text": "er eine Datei draus, so, dann stellt euch mal vor, ihr macht das auch, also sprich,"}, {"id": 322, "start": 2190.0, "end": 2195.08, "text": "ihr habt einen Thread, der im Hintergrund irgendwie was in den Buffer schreibt, und"}, {"id": 323, "start": 2195.08, "end": 2198.36, "text": "der soll nat\u00fcrlich m\u00f6glichst unabh\u00e4ngig von allen zus\u00e4tzlich weiter in diesen Buffer"}, {"id": 324, "start": 2198.36, "end": 2202.96, "text": "schreiben, sagen wir mal, so immer, so 20 Sekunden Buffer wollt ihr permanent haben,"}, {"id": 325, "start": 2202.96, "end": 2206.16, "text": "dass wenn einer mal auf aufnehmen dr\u00fcckt, zum Beispiel wenn ihr eine Kamera habt, wenn"}, {"id": 326, "start": 2206.16, "end": 2210.04, "text": "ihr eine Kamera aufnehmt, und ihr wollt auf jeden Fall den DHL-Lieferant oder den Einbrecher"}, {"id": 327, "start": 2210.04, "end": 2214.8, "text": "drauf haben, bei Motion Detection, dann nehmt ihr immer 20 Sekunden permanent auf in so"}, {"id": 328, "start": 2214.8, "end": 2219.32, "text": "einem Buffer, \u00fcberschreibt das immer wieder, 20 Sekunden quasi vorne ein Paket raus, hinten"}, {"id": 329, "start": 2219.32, "end": 2225.16, "text": "ein Paket rein, so dass ihr immer 20 Sekunden habt, so, und dann gibt es ein Event, zum"}, {"id": 330, "start": 2225.16, "end": 2229.04, "text": "Beispiel, man wurde Bewegung erkannt, und dann m\u00f6chte man eine neue Datei anlegen und"}, {"id": 331, "start": 2229.04, "end": 2234.36, "text": "diese 20 Sekunden quasi in die Datei kopieren und dann weiter darin aufnehmen, das macht,"}, {"id": 332, "start": 2234.36, "end": 2237.04, "text": "da brauchen wir unterschiedliche Threads f\u00fcr, also auf dem einen Thread l\u00e4uft diese"}, {"id": 333, "start": 2237.04, "end": 2243.28, "text": "Geschichte mit dem in den Buffer reinschreiben, und der andere Thread wird dann beispielsweise"}, {"id": 334, "start": 2243.28, "end": 2248.36, "text": "das Aufnehmen in Datei schreiben machen. So, und da bietet sich sowas hier an, jetzt vielleicht"}, {"id": 335, "start": 2248.36, "end": 2253.04, "text": "nicht mit so einem Record, wie ich es hier gemacht hab, aber dass man diesen Buffer als"}, {"id": 336, "start": 2253.04, "end": 2262.08, "text": "Immutable List macht, der quasi bei jeder \u00c4nderung, also der nicht ge\u00e4ndert wird, sondern"}, {"id": 337, "start": 2262.08, "end": 2266.6, "text": "immer eine neue erzeugt wird, das hat n\u00e4mlich den gro\u00dfen Vorteil, ich kann einen Snapshot"}, {"id": 338, "start": 2266.6, "end": 2271.64, "text": "machen, mit Immutable Sachen kann man immer wunderbar Snapshots machen, also sprich ich"}, {"id": 339, "start": 2271.64, "end": 2278.64, "text": "mache einen Snapshot von dem Buffer, \u00fcbergebe den der Funktion, die meine Aufnahme startet,"}, {"id": 340, "start": 2278.64, "end": 2284.32, "text": "w\u00e4hrenddessen kann ich in dem anderen Thread weiter einlesen, das was von der Kamera kommt,"}, {"id": 341, "start": 2284.32, "end": 2288.44, "text": "aber im Hintergrund habe ich einen Snapshot von dem Buffer, schreibe die 20 Sekunden aus"}, {"id": 342, "start": 2288.44, "end": 2294.0, "text": "dem Buffer in der Datei, und dann nehme ich weiter auf und schreibe es hinten dran. Also,"}, {"id": 343, "start": 2294.0, "end": 2298.64, "text": "sowas bietet sich zum Beispiel an, dass man eine Immutable List oder sowas nimmt, sprich"}, {"id": 344, "start": 2298.64, "end": 2303.64, "text": "eine Liste, wo jedes Mal wenn ich ein Element anh\u00e4nge oder entferne, eine neue Liste erzeugt"}, {"id": 345, "start": 2303.64, "end": 2308.16, "text": "wird, anstatt die bestehende Liste zu ver\u00e4ndern, eigentlich den Nachteil ist es ein bisschen"}, {"id": 346, "start": 2308.16, "end": 2313.92, "text": "langsamer. Da gibt es nat\u00fcrlich noch andere Varianten, wie man das machen kann, man kann"}, {"id": 347, "start": 2313.92, "end": 2318.48, "text": "das ganze auch locken, sprich ich kann auch einfach sagen, ok, w\u00e4hrend die Aufnahme l\u00e4uft,"}, {"id": 348, "start": 2318.48, "end": 2322.08, "text": "f\u00fcr die erste Sekunde, wie ihr zum Buffer schreiben braucht, locke ich den Buffer und"}, {"id": 349, "start": 2322.08, "end": 2328.36, "text": "man darf in der Zwischenzeit nichts reinschreiben. Kann ich auch machen, muss man sich dann unterscheiden,"}, {"id": 350, "start": 2328.36, "end": 2332.12, "text": "entscheiden was man dann haben will. Ja, so, jetzt gucken wir uns aber mal das Beispiel"}, {"id": 351, "start": 2332.12, "end": 2338.56, "text": "hier genauer an, was die jetzt eigentlich genau getrieben haben. Also, Public Record"}, {"id": 352, "start": 2338.56, "end": 2345.36, "text": "Person, Last, das haben wir ja gemacht. So, was das hier macht, soweit ich das sehe, ist"}, {"id": 353, "start": 2345.36, "end": 2350.68, "text": "ja ein Constructor, mit dieser neuen, ich habe vergessen wie sie hei\u00dft, diese Syntax,"}, {"id": 354, "start": 2350.68, "end": 2358.32, "text": "also sprich, anstatt das hier, kann ich auch sowas hier schreiben. Das ist neu, das gibt"}, {"id": 355, "start": 2358.32, "end": 2363.84, "text": "es hier, das gibt es glaube ich seit C Sharp 8, die lange Schreibweise davon w\u00e4re folgendes,"}, {"id": 356, "start": 2363.84, "end": 2384.88, "text": "so, das w\u00e4re die lange Schreibweise davon. Was jetzt sch\u00f6ner ist, kann man sich streiten,"}, {"id": 357, "start": 2384.88, "end": 2391.4, "text": "ich pers\u00f6nlich finde immer noch das hier ein bisschen lesbare, aber nachdem ich faul"}, {"id": 358, "start": 2391.4, "end": 2395.76, "text": "bin, finde ich die Sache hier auch ziemlich gut. Ich wei\u00df nicht, Chat, wie es euch geht,"}, {"id": 359, "start": 2395.76, "end": 2400.16, "text": "was ihr da bevorzugt, unter der Haube ist es das gleiche, also es kommt genau das gleiche"}, {"id": 360, "start": 2400.16, "end": 2404.56, "text": "bei rum, also sprich, das ist die klassische Constructor Schreibweise und das ist diese"}, {"id": 361, "start": 2404.56, "end": 2414.28, "text": "neue, ich habe vergessen wie sie hei\u00dft, Expression Member Schreibweise, Expression Body, genau,"}, {"id": 362, "start": 2414.28, "end": 2419.0, "text": "der Void-Danny ist ja Big Brain, der kennt sich aus. Genau, also was da sch\u00f6ner ist,"}, {"id": 363, "start": 2419.0, "end": 2423.76, "text": "kann man sich, ich wei\u00df nicht, was findet ihr sch\u00f6ner, Chat? Also sprich, jetzt kann"}, {"id": 364, "start": 2423.76, "end": 2427.68, "text": "man so machen, ja und das ist glaube ich seit C Sharp 8 oder 7 war das drinnen, dass man"}, {"id": 365, "start": 2427.68, "end": 2432.64, "text": "die Sachen so schreiben kann, also sprich, das hier sind die Werte aus dem Constructor,"}, {"id": 366, "start": 2432.64, "end": 2439.48, "text": "die man bekommt und das sind die Private, nicht die Private, das sind die Properties,"}, {"id": 367, "start": 2439.48, "end": 2449.92, "text": "die wir zugewiesen kriegen, Geschmackssache. Das hier braucht man aber gar nicht mehr,"}, {"id": 368, "start": 2449.92, "end": 2455.56, "text": "jetzt verstehe ich, warum es das gibt, genau, weil es gibt seit ein paar C Sharp Versionen"}, {"id": 369, "start": 2455.56, "end": 2460.32, "text": "die M\u00f6glichkeit sowas hier zu machen, dass man keinen Constructor mehr verwenden muss,"}, {"id": 370, "start": 2460.32, "end": 2469.48, "text": "sondern, dass man die Sachen so initialisiert, aber das, jetzt verstehe ich was sie gemacht"}, {"id": 371, "start": 2469.48, "end": 2476.24, "text": "haben, aber das funktioniert hier nicht, normalerweise k\u00f6nnte ich hier sowas machen, last name gleich"}, {"id": 372, "start": 2476.24, "end": 2491.84, "text": "Max, first name gleich Max, last name gleich Chat, so, das funktioniert aber nicht, weil"}, {"id": 373, "start": 2491.84, "end": 2497.84, "text": "ich gesagt habe, die Dinge hier sind read only, wenn ich jetzt sowas hier machen w\u00fcrde,"}, {"id": 374, "start": 2497.84, "end": 2501.88, "text": "wenn ich erlauben w\u00fcrde, dass man da was reinschreiben kann, dann funktioniert das ganze wunderbar,"}, {"id": 375, "start": 2501.88, "end": 2505.24, "text": "aber das will man ja nicht, man will ja, dass das ganze immutable ist, dass man es nicht"}, {"id": 376, "start": 2505.24, "end": 2509.76, "text": "\u00e4ndern kann, deswegen funktioniert das nicht, und deswegen haben sie jetzt neue Schl\u00fcssel,"}, {"id": 377, "start": 2509.76, "end": 2514.24, "text": "jetzt habe ich glaube ich zum ersten Mal kapiert, warum sie das gemacht haben, jetzt haben sie"}, {"id": 378, "start": 2514.24, "end": 2525.0, "text": "n\u00e4mlich ein neues Schl\u00fcsselwort eingef\u00fcgt, n\u00e4mlich init, das k\u00f6nnen wir alles hier skippen,"}, {"id": 379, "start": 2525.0, "end": 2531.56, "text": "wo haben sie es hier, init, jetzt gibt es n\u00e4mlich noch einen dritten, wie hei\u00dft denn das auf"}, {"id": 380, "start": 2531.56, "end": 2538.88, "text": "deutsch, Zugriffsbeschr\u00e4nkungsoperator, frag mich nicht, wie das Ding genau hei\u00dft, jetzt"}, {"id": 381, "start": 2538.88, "end": 2545.4, "text": "kann man n\u00e4mlich anstatt get set oder sowas wie private set oder so, kann man jetzt init"}, {"id": 382, "start": 2545.4, "end": 2552.6, "text": "verwenden, wenn ich init verwende, dann darf ich die Sachen so initialisieren, aber danach"}, {"id": 383, "start": 2552.6, "end": 2558.32, "text": "sie auch nie wieder \u00e4ndern, wenn ich das jetzt richtig verstanden habe, oder? Ja, ok, das"}, {"id": 384, "start": 2558.32, "end": 2564.44, "text": "ist eine coole Sache, weil ich muss euch ehrlich sagen, ich verwende mittlerweile fast lieber"}, {"id": 385, "start": 2564.44, "end": 2568.28, "text": "das hier zum initialisieren, als wirklich die Sachen im Constructor, wenn es was ist, wo"}, {"id": 386, "start": 2568.28, "end": 2573.38, "text": "ein bisschen l\u00e4ngere Eintr\u00e4ge dazu kommen, zumal ja auch der Vorteil glaube ich relativ"}, {"id": 387, "start": 2573.38, "end": 2580.32, "text": "auf der Hand liegt, also wenn ich jetzt eine Klasse habe, mit sagen wir mal irgendwie ganz"}, {"id": 388, "start": 2580.32, "end": 2588.28, "text": "vielen, ganz vielen Sachen, mit ganz vielen Datenproperties, dann ist es nat\u00fcrlich viel"}, {"id": 389, "start": 2588.28, "end": 2600.44, "text": "einfacher, die so zu initialisieren, als den hier zu machen, mal exemplarisch, what the"}, {"id": 390, "start": 2600.44, "end": 2608.44, "text": "fuck, so m\u00fcsste ich das ja dann machen, wenn ich einen Constructor h\u00e4tte, der alle meine"}, {"id": 391, "start": 2608.44, "end": 2615.88, "text": "Datenproperties initialisieren will, das ist ja hardcore un\u00fcbersichtlich, deswegen ist"}, {"id": 392, "start": 2615.88, "end": 2625.92, "text": "es so eigentlich sch\u00f6ner, dann w\u00fcrde ich so machen, 2, 2, 3, 3, 4, 4, easy, das ist doch"}, {"id": 393, "start": 2625.92, "end": 2641.92, "text": "viel besser, das finde ich nett, das hat was, das hat was, das mag ich, so, genau,"}, {"id": 394, "start": 2641.92, "end": 2648.24, "text": "so jetzt kann ich aber immer noch eine Klasse anlegen und sie hiermit initialisieren, aber"}, {"id": 395, "start": 2648.24, "end": 2653.0, "text": "ich kann danach nichts mehr \u00e4ndern von dieser Klasse, guckt, wenn ich versucht was zuzuweisen,"}, {"id": 396, "start": 2653.0, "end": 2660.48, "text": "bei last name, da sagt er mir, nee, in it only geht nicht, was ist jetzt, wenn ich aber"}, {"id": 397, "start": 2660.48, "end": 2669.48, "text": "doch was anlegen m\u00f6chte, mit den Werten, also wenn ich die Werte \u00e4ndern will, das ist,"}, {"id": 398, "start": 2669.48, "end": 2675.92, "text": "das ist der big brain streamer am Abend heute, so und da kann ich jetzt glaube ich sagen,"}, {"id": 399, "start": 2675.92, "end": 2688.72, "text": "reg1 with last name gleich, ah jaja, so und jetzt habe ich folgendes gemacht, ich habe"}, {"id": 400, "start": 2688.72, "end": 2693.44, "text": "hier meine Klasse reg1, \u00fcbrigens ich glaube die haben auch to string \u00fcberschrieben, dass"}, {"id": 401, "start": 2693.44, "end": 2698.36, "text": "man die Sachen ordentlich printen kann, guck mal hier, eigentlich richtig, eigentlich eine"}, {"id": 402, "start": 2698.36, "end": 2703.36, "text": "richtig coole Sache, das ist auch was, was mir an den C sharp Entwicklern ganz gut gef\u00e4llt,"}, {"id": 403, "start": 2703.36, "end": 2707.56, "text": "die machen nicht immer so riesen \u00fcber neue komplizierte Dinger, das sind einfach Sachen"}, {"id": 404, "start": 2707.56, "end": 2717.12, "text": "die praktisch sind, so also jetzt habe ich hier reg1 und ich habe reg2 und reg2 ist der"}, {"id": 405, "start": 2717.12, "end": 2728.84, "text": "first name, ah jaja und in reg1 hat sich nichts ge\u00e4ndert, genau, also sprich ich habe jetzt"}, {"id": 406, "start": 2728.84, "end": 2733.52, "text": "einen neuen record angelegt mit den Werten von record 1, also ich habe record 2 angelegt"}, {"id": 407, "start": 2733.52, "end": 2742.68, "text": "mit den Werten von record 1 und habe den first name ge\u00e4ndert, eigentlich ganz nett, ich glaube"}, {"id": 408, "start": 2742.68, "end": 2748.24, "text": "ich werde es erstmal nicht verwenden, weil ich immer eine Weile brauche mit neuen Features,"}, {"id": 409, "start": 2748.24, "end": 2755.12, "text": "bis ich die dann nat\u00fcrlich, nat\u00fcrlich quasi einbaue, ich glaube erstmal werde ich da"}, {"id": 410, "start": 2755.12, "end": 2761.24, "text": "\u00fcberhaupt gar nichts mitmachen, vermute ich jetzt einfach mal so, weil ich habe ehrlich"}, {"id": 411, "start": 2761.24, "end": 2768.24, "text": "gesagt auch noch gar keine gro\u00dfartige Idee wof\u00fcr ich das jetzt brauchen w\u00fcrde, so cool"}, {"id": 412, "start": 2768.24, "end": 2774.4, "text": "das Feature an sich sein mag, wo w\u00fcrde ich es verwenden, mir f\u00e4llt spontan nicht so"}, {"id": 413, "start": 2774.4, "end": 2783.92, "text": "viel ein ehrlich gesagt, wo w\u00fcrde man es verwenden, was haben die hier f\u00fcr Beispiele,"}, {"id": 414, "start": 2783.92, "end": 2797.56, "text": "ja gut das sind so die Standard Beispiele, record dog, record pad, das, ok was schreiben"}, {"id": 415, "start": 2797.56, "end": 2802.56, "text": "sonst noch dazu, ja chat hat von euch immer eine Ahnung wof\u00fcr man das jetzt genau verwenden"}, {"id": 416, "start": 2802.56, "end": 2808.08, "text": "w\u00fcrde, also mir f\u00e4llt jetzt spontan nicht so viel ein gerade, ich glaube das ist so"}, {"id": 417, "start": 2808.08, "end": 2812.28, "text": "ein Ding, wenn man es braucht und dran denkt, dann freut man sich, dass man jetzt dran gedacht"}, {"id": 418, "start": 2812.28, "end": 2815.96, "text": "hat, wenn man was hat, wo sich es gut f\u00fcr eignet, aber ich kann mir nicht vorstellen,"}, {"id": 419, "start": 2815.96, "end": 2822.68, "text": "dass das was ist, was ich t\u00e4glich mehrfach nehme, choose my name sagt vielleicht, wenn"}, {"id": 420, "start": 2822.68, "end": 2833.24, "text": "man irgendwelche API anspricht oder Datenhaltung macht, zum Beispiel JSON Zeugs, vielleicht,"}, {"id": 421, "start": 2833.24, "end": 2840.72, "text": "mir f\u00e4llt da jetzt nicht so viel ein zu, wenn man state halten will und properties, also"}, {"id": 422, "start": 2840.72, "end": 2845.84, "text": "in multithreading Sachen stelle ich es mir teilweise ganz praktisch vor, generell sind"}, {"id": 423, "start": 2845.84, "end": 2850.84, "text": "immutable Sachen, wenn man multithreading macht, wo man snapshots von verschiedenen"}, {"id": 424, "start": 2850.84, "end": 2871.96, "text": "Status braucht, ist das ganz nice, sowas wie der silver dog schreibt, ok hier schreiben"}, {"id": 425, "start": 2871.96, "end": 2878.68, "text": "sie auch was ein record type f\u00fcr einen macht, methods for value based equality comparison,"}, {"id": 426, "start": 2878.68, "end": 2882.72, "text": "das ist das, was wir gerade gesehen haben, also sprich, dass record 1 gleich gleich record"}, {"id": 427, "start": 2882.72, "end": 2888.56, "text": "2 ist, wenn der inhalt gleich ist und nicht die referenz, get hashcode \u00fcberschreiben,"}, {"id": 428, "start": 2888.56, "end": 2894.68, "text": "das braucht man zum Beispiel f\u00fcr dictionaries und sowas, also man kann ja bei jedem Objekt,"}, {"id": 429, "start": 2894.68, "end": 2902.76, "text": "hier record 2, get hashcode, man kann ja von jedem Objekt sich quasi mehr oder weniger"}, {"id": 430, "start": 2902.76, "end": 2909.56, "text": "hoffentlich unic hashcode generieren lassen, das braucht man zum Beispiel intern verwendendes"}, {"id": 431, "start": 2909.56, "end": 2917.36, "text": "dictionaries um die Objekte einzuordnen und sowas, so das haben sie \u00fcberschreiben, copy"}, {"id": 432, "start": 2917.36, "end": 2933.88, "text": "and clone members gibt es, das, das k\u00f6nnte sogar ganz n\u00fctzlich sein, das k\u00f6nnte sogar"}, {"id": 433, "start": 2933.88, "end": 2938.32, "text": "ganz n\u00fctzlich sein, copy, wie, wie, wie, wie, wie, wie, wie, wie, wie, wie, wie, wie, wie,"}, {"id": 434, "start": 2938.32, "end": 2952.28, "text": "wie, wie, wie, wie, wie, wie kann ich die"}, {"id": 435, "start": 2953.22, "end": 2956.94, "text": "Die list copy macht okay das muss ich nicht ist copy macht das nicht oder"}, {"id": 436, "start": 2956.94, "end": 2977.32, "text": "Ja das ist jetzt die frage legt es jetzt dann jedes mal neue records an oder nicht das"}, {"id": 437, "start": 2977.32, "end": 2978.56, "text": "m\u00fcssen wir mal ausprobieren"}, {"id": 438, "start": 2978.56, "end": 2987.76, "text": "Gut UntoString \u00fcberschreibt es f\u00fcr einen das ist tats\u00e4chlich ganz n\u00fctzlich deswegen"}, {"id": 439, "start": 2987.76, "end": 2993.8, "text": "kann man sowas hier machen"}, {"id": 440, "start": 2993.8, "end": 2995.12, "text": "deswegen kann man sowas hier machen"}, {"id": 441, "start": 2995.12, "end": 3003.68, "text": "Wisst ihr was ich finde das ist sogar fast das n\u00fctzlichste Feature da dran"}, {"id": 442, "start": 3003.68, "end": 3009.88, "text": "dass man es einfach printen kann"}, {"id": 443, "start": 3009.88, "end": 3014.2, "text": "So easy das jetzt aussieht und so easy das in anderen sprachen ist so einfach ist das"}, {"id": 444, "start": 3014.2, "end": 3015.48, "text": "in C sharp gar nicht"}, {"id": 445, "start": 3015.48, "end": 3019.92, "text": "wenn ich eine klasse habe und m\u00f6chte die die die daten die drin gespeichert sind in so"}, {"id": 446, "start": 3019.92, "end": 3023.88, "text": "einem format ausgeben da muss ich jedes mal ToString \u00fcberschreiben das ist gar nicht"}, {"id": 447, "start": 3023.88, "end": 3024.88, "text": "so einfach wie es aussieht"}, {"id": 448, "start": 3024.88, "end": 3035.08, "text": "Okay der Chat wollte irgendwas was habe gerade ein kleines RAS programmiert das \u00fcber Netzwerk"}, {"id": 449, "start": 3035.08, "end": 3042.72, "text": "miteinander kommuniziert auf Linux kompil kompilieren kein Ding auf Windows muss man"}, {"id": 450, "start": 3042.72, "end": 3043.72, "text": "erst mal 30GB"}, {"id": 451, "start": 3043.72, "end": 3048.72, "text": "Ey vieles ist unter Windows was Entwicklungssachen angeht richtig eklig"}, {"id": 452, "start": 3048.72, "end": 3054.24, "text": "Da ist dort net mit Visual Studio und so wirklich eine riesen Erholung wobei man daf\u00fcr ja auch"}, {"id": 453, "start": 3054.24, "end": 3057.28, "text": "30GB Visual Studio und SDK und alles installieren muss"}, {"id": 454, "start": 3057.28, "end": 3064.12, "text": "Weiter bei GTK unter Windows habe ich mal gemacht ist abfuck hoch 3 oder hoch 10 hoch"}, {"id": 455, "start": 3064.12, "end": 3065.12, "text": "100"}, {"id": 456, "start": 3065.12, "end": 3071.84, "text": "Also GTK unter Windows ist wirklich abgefuckt da musste erst mal sys msys ne wie hei\u00dft"}, {"id": 457, "start": 3071.84, "end": 3072.84, "text": "das"}, {"id": 458, "start": 3072.84, "end": 3074.72, "text": "msys 2 installieren"}, {"id": 459, "start": 3074.72, "end": 3085.32, "text": "Und \u00e4hm dann musst du GTK installieren unter msys 2 und dann hast du das Problem dass"}, {"id": 460, "start": 3085.32, "end": 3090.72, "text": "die GTK Libraries aus msys 2 mit mingw kompiliert sind wenn du das allerdings mit dem Visual"}, {"id": 461, "start": 3090.72, "end": 3096.92, "text": "Studio C++ compiler oder Visual Studio compiler benutzen willst dann geht das nicht total"}, {"id": 462, "start": 3096.92, "end": 3100.2, "text": "wie also GTK unter Windows ist echt absolute Zumutung"}, {"id": 463, "start": 3100.2, "end": 3105.56, "text": "\u00c4h Silver Dark ja da kommen wir noch zu das habe ich auch schon gelesen dass man kein"}, {"id": 464, "start": 3105.56, "end": 3106.56, "text": "Mainmap braucht"}, {"id": 465, "start": 3106.56, "end": 3113.12, "text": "\u00c4h also GTK ist absolut keine Konkurrenz gegen Qt und Electron"}, {"id": 466, "start": 3113.12, "end": 3115.52, "text": "GTK ist so ein Linux only Ding"}, {"id": 467, "start": 3115.52, "end": 3121.6, "text": "Ich muss euch sagen mir gefallen in der Regel die meisten GTK Programme meistens besser"}, {"id": 468, "start": 3121.6, "end": 3126.04, "text": "als die KDE Counterparts wenn es einfache Dinger sind"}, {"id": 469, "start": 3126.04, "end": 3129.52, "text": "Komplizierte Dinger sind eindeutig die KDE Programme oder die Qt Programme"}, {"id": 470, "start": 3129.52, "end": 3133.4, "text": "weil die GTK Programme meistens ultra rudiment\u00e4r sind"}, {"id": 471, "start": 3133.4, "end": 3137.68, "text": "Aber generell sobald es Cross Platform ist bleibt hier nur noch Qt \u00fcbrig"}, {"id": 472, "start": 3137.68, "end": 3138.68, "text": "VLC"}, {"id": 473, "start": 3138.68, "end": 3144.92, "text": "Gucken wir mal VLC 1 GUI"}, {"id": 474, "start": 3144.92, "end": 3145.92, "text": "Die erste"}, {"id": 475, "start": 3145.92, "end": 3153.0, "text": "Das erste VLC GUI ich wei\u00df gar nicht ob es VLC 1.0 war"}, {"id": 476, "start": 3153.0, "end": 3154.4, "text": "Die das war noch ein GTK"}, {"id": 477, "start": 3154.4, "end": 3160.64, "text": "Das war noch ein GTK Interface"}, {"id": 478, "start": 3160.64, "end": 3165.92, "text": "Mittlerweile ist VLC auch Qt einzig und allein aus dem Grund weil sie gesagt haben"}, {"id": 479, "start": 3165.92, "end": 3168.04, "text": "GTK Cross Platform ist shit"}, {"id": 480, "start": 3168.04, "end": 3173.12, "text": "Wegen Ansela kein Bock mehr drauf"}, {"id": 481, "start": 3173.12, "end": 3176.08, "text": "Und ich kann jeden verstehen der keinen Bock hat auf GTK Cross Platform"}, {"id": 482, "start": 3176.08, "end": 3183.24, "text": "GTK ist eigentlich so ein Ding was du da musst du schon richtig Hardcore Gnome Fan sein"}, {"id": 483, "start": 3183.24, "end": 3186.52, "text": "Weil ich hab mal versucht mit GTK was zu machen"}, {"id": 484, "start": 3186.52, "end": 3190.68, "text": "Die sind so Bleeding Edge bei GTK"}, {"id": 485, "start": 3190.68, "end": 3195.64, "text": "Dass die quasi bei jeder Gnome Version was umbauen was es inkommatibel zum anderen macht"}, {"id": 486, "start": 3195.64, "end": 3199.32, "text": "Und das dann aber auch nicht irgendwie in ihrem Gnome abfacken"}, {"id": 487, "start": 3199.32, "end": 3206.44, "text": "Sondern im GTK und deswegen funktioniert ein GTK mit dem anderen Beispiel dann mal richtig"}, {"id": 488, "start": 3206.44, "end": 3209.92, "text": "Und sind dann auch nie richtig dokumentiert weil das schon wieder so neu ist"}, {"id": 489, "start": 3209.92, "end": 3216.32, "text": "Also GTK ist wirklich abfack was das angeht"}, {"id": 490, "start": 3216.32, "end": 3220.2, "text": "GTK unter Windows verwendet ja nicht ohne Grund kein GTK 3"}, {"id": 491, "start": 3220.2, "end": 3223.24, "text": "Ich glaub GIMP unter Windows immer noch GTK 2"}, {"id": 492, "start": 3223.24, "end": 3224.24, "text": "Oder?"}, {"id": 493, "start": 3224.24, "end": 3225.24, "text": "Oh ne"}, {"id": 494, "start": 3225.24, "end": 3230.24, "text": "Haben sie es mittlerweile"}, {"id": 495, "start": 3230.24, "end": 3242.56, "text": "Ja gut"}, {"id": 496, "start": 3242.56, "end": 3245.2, "text": "Ja gut vor ner Woche"}, {"id": 497, "start": 3245.2, "end": 3246.2, "text": "Vor ner Woche"}, {"id": 498, "start": 3246.2, "end": 3247.84, "text": "GTK 3 gibt es seit 10 Jahren oder so"}, {"id": 499, "start": 3247.84, "end": 3249.8, "text": "Haben sie es jetzt schon geschafft"}, {"id": 500, "start": 3249.8, "end": 3250.8, "text": "Weirdchamp"}, {"id": 501, "start": 3250.8, "end": 3256.24, "text": "Das hat schon seinen Grund warum das nicht funktioniert hat die ganze Zeit"}, {"id": 502, "start": 3256.24, "end": 3264.0, "text": "Ok aber zu den Record Types mit ich wie gesagt ich wei\u00df noch nicht so wirklich vor was ich"}, {"id": 503, "start": 3264.0, "end": 3265.0, "text": "sie brauche"}, {"id": 504, "start": 3265.0, "end": 3267.24, "text": "Aber wenn ich sie brauche find ichs bestimmt cool dass sie da sind"}, {"id": 505, "start": 3267.24, "end": 3272.6, "text": "Was ich viel cooler finde ist Init Properties"}, {"id": 506, "start": 3272.6, "end": 3277.6, "text": "Also Init Only Setter find ich nice"}, {"id": 507, "start": 3277.6, "end": 3282.84, "text": "Ich hab ja schon immer gerne diese Initialisierungs Variante gemocht"}, {"id": 508, "start": 3282.84, "end": 3286.24, "text": "Also lieber als alles in Constructor schreiben"}, {"id": 509, "start": 3286.24, "end": 3292.28, "text": "Und ich denke mal dass das auch bei normalen Klassen geht oder"}, {"id": 510, "start": 3292.28, "end": 3294.32, "text": "Mach mal ne Class draus"}, {"id": 511, "start": 3294.32, "end": 3297.24, "text": "Dann geht das hier nat\u00fcrlich nicht mehr"}, {"id": 512, "start": 3297.24, "end": 3301.72, "text": "Ja funktioniert auch mit ner normalen Class ok"}, {"id": 513, "start": 3301.72, "end": 3307.76, "text": "Warum keine Init Only Getter"}, {"id": 514, "start": 3307.76, "end": 3311.16, "text": "Du solltest ne eigene Programmiersprache designen"}, {"id": 515, "start": 3311.16, "end": 3315.0, "text": "Ich find Init Only Getter ist ne super Idee"}, {"id": 516, "start": 3315.0, "end": 3321.12, "text": "Das sind dann quasi Getter die zur Compile Zeit schon den gleiche also im Prinzip ein"}, {"id": 517, "start": 3321.12, "end": 3322.6, "text": "Standard Getter mit Default Value"}, {"id": 518, "start": 3322.6, "end": 3323.88, "text": "Ja was auch immer"}, {"id": 519, "start": 3323.88, "end": 3332.52, "text": "Darf ich Qt nur eingeschr\u00e4nkt privat nutzen?"}, {"id": 520, "start": 3332.52, "end": 3338.28, "text": "Nee also bisher war es so dass jeder Qt verwenden darf"}, {"id": 521, "start": 3338.28, "end": 3340.44, "text": "Wie gesagt ich wei\u00df nicht ob das geht hier"}, {"id": 522, "start": 3340.44, "end": 3344.8, "text": "Geht um das hier Cross Platform GUI Framework"}, {"id": 523, "start": 3344.8, "end": 3345.8, "text": "Wow"}, {"id": 524, "start": 3345.8, "end": 3348.8, "text": "Hm MonkaS"}, {"id": 525, "start": 3348.8, "end": 3353.96, "text": "Ah das war auch das Falsche oder"}, {"id": 526, "start": 3353.96, "end": 3356.96, "text": "Lul"}, {"id": 527, "start": 3356.96, "end": 3358.28, "text": "Es geht um dieses Cross Platform Framework"}, {"id": 528, "start": 3358.28, "end": 3363.6, "text": "Also bisher war es glaube ich so es darf jeder Qt verwenden"}, {"id": 529, "start": 3363.6, "end": 3367.08, "text": "So wie kommerziell als auch privat"}, {"id": 530, "start": 3367.08, "end": 3370.68, "text": "Sofern er es nicht statisch linkt"}, {"id": 531, "start": 3370.68, "end": 3372.88, "text": "So was wie statisch linken ist ein C++ Ding"}, {"id": 532, "start": 3372.88, "end": 3376.6, "text": "Das muss man sich normalerweise in anderen Programmiersprachen heutzutage gar nicht mehr"}, {"id": 533, "start": 3376.6, "end": 3377.6, "text": "Gro\u00dfartig mit besch\u00e4ftigen"}, {"id": 534, "start": 3377.6, "end": 3383.0, "text": "Aber es ist C++ da ist sowas noch an der Tagesordnung"}, {"id": 535, "start": 3383.0, "end": 3387.28, "text": "Sachen die man 1995 machen musste macht man halt auch 2020 noch in C++"}, {"id": 536, "start": 3387.28, "end": 3388.28, "text": "Ja soweit ich wei\u00df ist das so"}, {"id": 537, "start": 3388.28, "end": 3392.52, "text": "Wenn man Qt statisch linked braucht man irgendwie ne Lizenz"}, {"id": 538, "start": 3392.52, "end": 3397.44, "text": "Und wenn man Qt Libraries ausliefert mit ausliefert und dynamisch linked"}, {"id": 539, "start": 3397.44, "end": 3400.6, "text": "Was im Prinzip gar kein Unterschied macht wenn man die Libraries mit ausliefert"}, {"id": 540, "start": 3400.6, "end": 3403.04, "text": "Au\u00dfer dass man sie austauschen k\u00f6nnte was eh keiner macht"}, {"id": 541, "start": 3403.04, "end": 3406.72, "text": "Und am Strich kommt es gleich heraus darf man es verwenden wie man will"}, {"id": 542, "start": 3406.72, "end": 3414.88, "text": "Nee nee du musst kein Source Code Provide"}, {"id": 543, "start": 3414.88, "end": 3415.88, "text": "Nee nee nee"}, {"id": 544, "start": 3415.88, "end": 3418.48, "text": "LGPL ist eigentlich eines der besten Sachen die es gibt"}, {"id": 545, "start": 3418.48, "end": 3421.68, "text": "LGPL ist du darfst quasi alles"}, {"id": 546, "start": 3421.68, "end": 3428.12, "text": "Also LGPL ist Commercial alles"}, {"id": 547, "start": 3428.12, "end": 3431.8, "text": "Ich wei\u00df noch nicht mal was LGPL nicht erlaubt"}, {"id": 548, "start": 3431.8, "end": 3442.52, "text": "Genauso so ein bisschen wie diese komische BSD Lizenz da"}, {"id": 549, "start": 3442.52, "end": 3443.52, "text": "Da darf man auch alles"}, {"id": 550, "start": 3443.52, "end": 3446.24, "text": "Mal ne Frage ich mach mal kurz den Chat ein bisschen gr\u00f6\u00dfer"}, {"id": 551, "start": 3446.24, "end": 3449.76, "text": "Mal ne Frage was sollte man in Pricen k\u00f6nnen"}, {"id": 552, "start": 3449.76, "end": 3452.48, "text": "Und wie findet man das am besten was"}, {"id": 553, "start": 3452.48, "end": 3455.4, "text": "Und wie findet man da am besten etwas zu"}, {"id": 554, "start": 3455.4, "end": 3457.08, "text": "Habe bis jetzt nur Mathe und Plotting gemacht"}, {"id": 555, "start": 3457.08, "end": 3461.56, "text": "Ok Mathe und Plotting ist jetzt meistens nicht so das was die Leute als Einstieg in Programmiersprachen"}, {"id": 556, "start": 3461.56, "end": 3462.56, "text": "machen"}, {"id": 557, "start": 3462.56, "end": 3466.52, "text": "Der Polar Fuchs hat Subscribed"}, {"id": 558, "start": 3466.52, "end": 3483.32, "text": "Dankesch\u00f6n f\u00fcr den Prime Sub"}, {"id": 559, "start": 3483.32, "end": 3485.92, "text": "Noch mehr High IQ f\u00fcr den Chat heute das geht aufw\u00e4rts"}, {"id": 560, "start": 3485.92, "end": 3488.68, "text": "Dankesch\u00f6n"}, {"id": 561, "start": 3488.68, "end": 3499.0, "text": "Ja also Kali Rex das ist jetzt sehr vage gestellt diese Frage also die kann man eigentlich"}, {"id": 562, "start": 3499.0, "end": 3501.08, "text": "so nicht beantworten"}, {"id": 563, "start": 3501.08, "end": 3506.8, "text": "Ich mein was sollte man in Pricen k\u00f6nnen"}, {"id": 564, "start": 3506.8, "end": 3516.12, "text": "Was solltest du keine Ahnung beim Tischfu\u00dfball spielen k\u00f6nnen"}, {"id": 565, "start": 3516.12, "end": 3531.28, "text": "Also es ist schwer zu sagen also das h\u00e4ngt ganz stark damit ab was du f\u00fcr einen Anspruch"}, {"id": 566, "start": 3531.28, "end": 3534.2, "text": "da an dich hast was du k\u00f6nnen solltest"}, {"id": 567, "start": 3534.2, "end": 3540.52, "text": "Und wie man da am besten was herausfindet kann man erst herausfinden wenn man \u00fcberhaupt"}, {"id": 568, "start": 3540.52, "end": 3542.08, "text": "wei\u00df was man machen will"}, {"id": 569, "start": 3542.08, "end": 3547.24, "text": "Weil wenn du nicht wei\u00dft was du machen willst ist ja auch schwierig was herauszufinden"}, {"id": 570, "start": 3547.24, "end": 3549.0, "text": "Also umgedreht geht das ja schlecht"}, {"id": 571, "start": 3549.0, "end": 3575.84, "text": "Ich bilde mir auch ein dass das so ist"}, {"id": 572, "start": 3575.84, "end": 3585.12, "text": "Das ist das was ich auch so im Kopf habe"}, {"id": 573, "start": 3585.12, "end": 3589.36, "text": "Du darfst nicht statisch linken ansonsten ist das alles in Ordnung"}, {"id": 574, "start": 3589.36, "end": 3602.08, "text": "Daher ist es eigentlich schwer das zu finden wozu ich es brauche"}, {"id": 575, "start": 3602.08, "end": 3607.76, "text": "Also wenn du kein Anwendungswerk hast dann brauchst du es ja auch nicht"}, {"id": 576, "start": 3607.76, "end": 3612.12, "text": "Oder ich verstehe es nicht so wirklich also warte mal anders wenn du mit Pricen anf\u00e4ngst"}, {"id": 577, "start": 3612.12, "end": 3614.72, "text": "du die Standardsachen die man am Anfang so macht"}, {"id": 578, "start": 3614.72, "end": 3617.76, "text": "Das sind so die das sind so eigentlich die Basics die man in jeder Programmiersprache"}, {"id": 579, "start": 3617.76, "end": 3618.76, "text": "macht"}, {"id": 580, "start": 3618.76, "end": 3623.88, "text": "Man guckt sich an so ein bisschen standardm\u00e4\u00dfig eine Ausgabe sprich wie lese ich Dateien ein"}, {"id": 581, "start": 3623.88, "end": 3625.32, "text": "wie schreibe ich Dateien"}, {"id": 582, "start": 3625.32, "end": 3631.52, "text": "Wie programmiere ich ein paar einfache if else Geschichten wie mache ich mal eine Schleife"}, {"id": 583, "start": 3631.52, "end": 3635.4, "text": "wie lese ich Sachen von der Kommandozeile ein wie gebe ich Sachen auf die Kommandozeile"}, {"id": 584, "start": 3635.4, "end": 3636.4, "text": "aus"}, {"id": 585, "start": 3636.4, "end": 3639.68, "text": "Wie schicke ich ein Webrequest wie lese ich ein Webrequest"}, {"id": 586, "start": 3639.68, "end": 3644.52, "text": "So die Basicsachen die man in jeder Programmiersprache macht aber es ist viel einfacher zu beantworten"}, {"id": 587, "start": 3644.52, "end": 3647.48, "text": "wenn man einen gewissen Anwendungszweck hat wo man was zu machen will"}, {"id": 588, "start": 3647.48, "end": 3653.92, "text": "Anstatt einfach so ins blaue also so ganz ins blaue rein ist ziemlich schwierig zu beantworten"}, {"id": 589, "start": 3653.92, "end": 3660.28, "text": "Und so einfach Pricen aussieht mittlerweile ist das auch ganz gut komplex geworden"}, {"id": 590, "start": 3660.28, "end": 3663.24, "text": "Aber es ist echt h\u00fcbsch also Pricen ist wirklich entspannend zu programmieren"}, {"id": 591, "start": 3663.24, "end": 3669.04, "text": "Ich finde eines der gr\u00f6\u00dften positiven Punkte ist"}, {"id": 592, "start": 3669.04, "end": 3675.12, "text": "Was Pricen angeht dass die eine ziemlich gute komplette Standard Library haben"}, {"id": 593, "start": 3675.12, "end": 3682.72, "text": "Also die haben von einem DNS Client bis zu einem CSV Parser bis zu irgendwelchen abgedrehteren"}, {"id": 594, "start": 3682.72, "end": 3686.6, "text": "Kram bis zu einem HTTP Server die haben eigentlich alles drin"}, {"id": 595, "start": 3686.6, "end": 3694.76, "text": "Deswegen mag ich Pricen auch wenn ich wenig mitmach"}, {"id": 596, "start": 3694.76, "end": 3697.68, "text": "Ok In It Only Setters haben wir uns auch angeguckt"}, {"id": 597, "start": 3697.68, "end": 3701.64, "text": "Also sprich ich glaube das Feature haben wir jetzt abgefackelt halbwegs"}, {"id": 598, "start": 3701.64, "end": 3702.64, "text": "Ich scroll nochmal kurz dr\u00fcber"}, {"id": 599, "start": 3702.64, "end": 3706.32, "text": "Positional Records"}, {"id": 600, "start": 3706.32, "end": 3712.4, "text": "What the hell ist das eher lang?"}, {"id": 601, "start": 3712.4, "end": 3717.68, "text": "Alter so viele Klammern"}, {"id": 602, "start": 3717.68, "end": 3722.2, "text": "Das ist irgendwelche Vererbungsgeschichten oder so"}, {"id": 603, "start": 3722.2, "end": 3723.52, "text": "Das werde ich eh nie verwenden"}, {"id": 604, "start": 3723.52, "end": 3733.12, "text": "Ja das sind irgendwelche Vererbungs Sachen"}, {"id": 605, "start": 3733.12, "end": 3742.64, "text": "Ah Moment mal das ist cool"}, {"id": 606, "start": 3742.64, "end": 3752.36, "text": "Das ist tats\u00e4chlich ganz nice"}, {"id": 607, "start": 3752.36, "end": 3753.92, "text": "Kann ich das hier auch verwenden?"}, {"id": 608, "start": 3753.92, "end": 3758.52, "text": "Das geht wahrscheinlich jetzt nicht ne?"}, {"id": 609, "start": 3758.52, "end": 3763.24, "text": "Moment das muss ich mal ausprobieren"}, {"id": 610, "start": 3763.24, "end": 3776.04, "text": "Nein das geht nicht das geht nur wenn ich das Beispiel von oben verwende was sie hier"}, {"id": 611, "start": 3776.04, "end": 3777.04, "text": "hatten"}, {"id": 612, "start": 3777.04, "end": 3790.0, "text": "Ne Moment dann habe ich es noch nicht gecheckt"}, {"id": 613, "start": 3790.0, "end": 3816.4, "text": "Ok dann habe ich es nicht kapiert was sie mir hier sagen wollen"}, {"id": 614, "start": 3816.4, "end": 3840.64, "text": "Was macht der da anders als ich?"}, {"id": 615, "start": 3840.64, "end": 3861.52, "text": "Ah das ist cool"}, {"id": 616, "start": 3861.52, "end": 3862.52, "text": "Das gef\u00e4llt mir"}, {"id": 617, "start": 3862.52, "end": 3864.4, "text": "Oh das ist ja mal nice"}, {"id": 618, "start": 3864.4, "end": 3873.44, "text": "Das ist doch mal ein cooles Feature also sprich anstatt diesen Schmodder hier zu schreiben"}, {"id": 619, "start": 3873.44, "end": 3879.32, "text": "die klassische Class Declaration kann ich einfach die Abk\u00fcrzung benutzen und der macht"}, {"id": 620, "start": 3879.32, "end": 3881.12, "text": "das alles f\u00fcr mich"}, {"id": 621, "start": 3881.12, "end": 3887.08, "text": "Also sprich das hier das hier und das hier ist genau das gleiche"}, {"id": 622, "start": 3887.08, "end": 3889.08, "text": "Ja das ist nice das gef\u00e4llt mir"}, {"id": 623, "start": 3889.08, "end": 3891.68, "text": "Das ist nice"}, {"id": 624, "start": 3891.68, "end": 3895.48, "text": "Ja das spart auch wirklich tippen"}, {"id": 625, "start": 3895.48, "end": 3899.64, "text": "Ok jetzt habe ich einen Anwendungszweck daf\u00fcr was ich verwenden w\u00fcrde"}, {"id": 626, "start": 3899.64, "end": 3905.76, "text": "Also sprich wenn ich eine Klasse mache die nur Daten enth\u00e4lt dann w\u00fcrde ich eigentlich"}, {"id": 627, "start": 3905.76, "end": 3906.76, "text": "so machen jetzt"}, {"id": 628, "start": 3906.76, "end": 3915.52, "text": "Der ist neu den gibt es seit 5 Tagen quasi"}, {"id": 629, "start": 3915.52, "end": 3922.16, "text": "Aber dass man quasi das hier schreiben kann und das hier bekommt und das hier generiert"}, {"id": 630, "start": 3922.16, "end": 3923.48, "text": "die auch schon viel unter der Haube"}, {"id": 631, "start": 3923.48, "end": 3929.52, "text": "Ja sie kriegt viele funktionale Features"}, {"id": 632, "start": 3929.52, "end": 3933.2, "text": "So und jetzt guckt mal jetzt kann ich sogar deconstructen"}, {"id": 633, "start": 3933.2, "end": 3935.64, "text": "Ja das ist das ist nice"}, {"id": 634, "start": 3935.64, "end": 3937.12, "text": "Das ist wirklich cool"}, {"id": 635, "start": 3937.12, "end": 3945.72, "text": "Also sprich ich kann jetzt also ich bekomme von irgendwo diesen Rekord mit FirstNameMax"}, {"id": 636, "start": 3945.72, "end": 3951.44, "text": "LastNameLinks und ich kann jetzt den deconstructen in zwei Variablen n\u00e4mlich First und Last"}, {"id": 637, "start": 3951.44, "end": 3956.0, "text": "und kann ich nennen wie ich will die kann ich auch A und B oder so nennen das ist wurscht"}, {"id": 638, "start": 3956.0, "end": 3957.92, "text": "muss ich wirklich First und Last hei\u00dfen"}, {"id": 639, "start": 3957.92, "end": 3970.0, "text": "Und jetzt kann ich direkt jetzt kann ich quasi aus diesem Rekordobjekt zwei Variablen erstellen"}, {"id": 640, "start": 3970.0, "end": 3973.32, "text": "Ach nee nicht Moment nicht fest"}, {"id": 641, "start": 3973.32, "end": 3980.08, "text": "Jetzt kann ich quasi zwei Variablen aus diesem Objekt erstellen ohne dass ich da jetzt irgendwie"}, {"id": 642, "start": 3980.08, "end": 3982.32, "text": "gro\u00dfartige Sachen anlegen und zuweisen muss"}, {"id": 643, "start": 3982.32, "end": 3983.92, "text": "Das ist ein cooles Feature das gef\u00e4llt mir"}, {"id": 644, "start": 3983.92, "end": 3991.24, "text": "Guckt ich habe jetzt quasi dieses Rekordobjekt deconstructed in die Variable First und Last"}, {"id": 645, "start": 3991.24, "end": 3998.44, "text": "und das geht nur das geht nur weil es positional ist weil er wei\u00df das hier ist die also das"}, {"id": 646, "start": 3998.44, "end": 4000.96, "text": "hier steht an erster Stelle das hier steht an zweiter Stelle"}, {"id": 647, "start": 4000.96, "end": 4008.2, "text": "Deswegen kann er deswegen um die Leute zu verwirren kann k\u00f6nnte man auch sowas machen"}, {"id": 648, "start": 4008.2, "end": 4015.12, "text": "das funktioniert genauso nur dass es jetzt umgedreht ist also sprich es ist egal wie"}, {"id": 649, "start": 4015.12, "end": 4022.36, "text": "dieser Kram hier hei\u00dft es kann auch A und B hei\u00dfen wichtig ist die Position wie ich"}, {"id": 650, "start": 4022.36, "end": 4024.48, "text": "es angelegt habe"}, {"id": 651, "start": 4024.48, "end": 4030.96, "text": "Das ist ein cooles Feature ok das hat mich \u00fcberzeugt"}, {"id": 652, "start": 4030.96, "end": 4040.08, "text": "Das verwende ich Last Name League oh MonkaS"}, {"id": 653, "start": 4040.08, "end": 4045.08, "text": "Das verwende ich"}, {"id": 654, "start": 4045.08, "end": 4051.36, "text": "\u00dcbrigens kennt ihr die Big Brain Taktik eine Schleife zu machen die von 1 bis 50 z\u00e4hlt"}, {"id": 655, "start": 4051.36, "end": 4056.4, "text": "also weil die einfache Variante ist das da ok sagen wir mal 0 bis 49 die einfache Variante"}, {"id": 656, "start": 4056.4, "end": 4057.4, "text": "ist das da"}, {"id": 657, "start": 4057.4, "end": 4063.6, "text": "So kriege ich 50 Leerzeilen jeder vor das ist die einfache Variante die Variante die"}, {"id": 658, "start": 4063.6, "end": 4068.64, "text": "glaube ich jeder checkt aber viel Big Brainigere Variante"}, {"id": 659, "start": 4068.64, "end": 4088.8, "text": "Enumerable range 0 bis 50 for each"}, {"id": 660, "start": 4088.8, "end": 4094.6, "text": "nicht dass das wirklich sinnvoll ist aber irgendwie ist es mir gerade zu den Kopf gekommen"}, {"id": 661, "start": 4094.6, "end": 4100.52, "text": "hier also wem einfache Vorschleifen zu einfach sind macht die so"}, {"id": 662, "start": 4100.52, "end": 4106.96, "text": "ja und hier drinnen z\u00e4hlen ist das gleiche"}, {"id": 663, "start": 4106.96, "end": 4111.24, "text": "nat\u00fcrlich wenn man ehrlich ist ist das hier die bessere Variante"}, {"id": 664, "start": 4111.24, "end": 4115.24, "text": "das hat andere Vorteile aber machen wir vielleicht mal anders"}, {"id": 665, "start": 4115.24, "end": 4124.28, "text": "so da gab es ein paar Fragen im Chat wo ich gerade noch was zu sagen wollte"}, {"id": 666, "start": 4124.28, "end": 4128.44, "text": "Was ist denn der gro\u00dfe Unterschied zwischen Python und C Sharp habe nicht so viel Knowledge"}, {"id": 667, "start": 4128.44, "end": 4134.52, "text": "im Programmierbereich also das ist was was man einfach beantworten kann oder wirklich"}, {"id": 668, "start": 4134.52, "end": 4141.36, "text": "ausf\u00fchrlich beantworten kann das sind grunds\u00e4tzlich vom Ansatz her zwei unterschiedliche Sprachen"}, {"id": 669, "start": 4141.36, "end": 4147.88, "text": "Python ist komplett dynamisch also sprich jede Variable kann zu jeder Zeit alles sein"}, {"id": 670, "start": 4147.88, "end": 4154.92, "text": "von einer Zahl zu einem String zu einem JSON Objekt oder sonst was und C Sharp ist statisch"}, {"id": 671, "start": 4154.92, "end": 4158.44, "text": "typisiert das bedeutet ich muss festlegen was welche Variable ist und die kann auch"}, {"id": 672, "start": 4158.44, "end": 4160.48, "text": "ihren Typ da nicht zwischendurch wechseln"}, {"id": 673, "start": 4160.48, "end": 4164.44, "text": "Obwohl ich bin mir gar nicht sicher kann in Python eine Variable ihren Typ wechseln?"}, {"id": 674, "start": 4164.44, "end": 4165.44, "text": "Ja oder?"}, {"id": 675, "start": 4165.44, "end": 4176.44, "text": "Ich glaube das geht"}, {"id": 676, "start": 4176.44, "end": 4180.48, "text": "also die grunds\u00e4tzliche Unterschiede also den finde ich markantesten Unterschied erstmal"}, {"id": 677, "start": 4180.48, "end": 4186.08, "text": "ist unabh\u00e4ngig von Syntax oder sonst was C Sharp ist statisch typisiert also sprich"}, {"id": 678, "start": 4186.08, "end": 4192.2, "text": "du wei\u00dft genau welcher Datentyp in welcher Variable zu jeder Zeit ist zur Kompilzeit"}, {"id": 679, "start": 4192.2, "end": 4198.44, "text": "schon und in Python ist es halt komplett dynamisch das ist \u00fcbrigens auch der Grund warum Python"}, {"id": 680, "start": 4198.44, "end": 4204.36, "text": "in vielen Bereichen so schnarchlangsam ist Python ist abfuckm\u00e4\u00dfig langsam wenn es"}, {"id": 681, "start": 4204.36, "end": 4213.8, "text": "um Performance Geschichten geht der haupts\u00e4chliche Grund ist dass es dynamisch getyped ist"}, {"id": 682, "start": 4213.8, "end": 4215.88, "text": "es gibt doch hier diesen gRPC Benchmark"}, {"id": 683, "start": 4215.88, "end": 4224.0, "text": "hier ist die Sharp da hatten die doch einen neuen"}, {"id": 684, "start": 4224.0, "end": 4243.68, "text": "wenn ihr mal lachen wollt"}, {"id": 685, "start": 4243.68, "end": 4249.68, "text": "also man sieht die Performance von dynamischen Sprachen ist ein bisschen hinten dran warum"}, {"id": 686, "start": 4249.68, "end": 4255.56, "text": "Swift so langsam ist verstehe ich \u00fcbrigens nicht"}, {"id": 687, "start": 4255.56, "end": 4261.0, "text": "Swift sollte eigentlich auch halbwegs geschwind sein da ist wahrscheinlich die Implementierung"}, {"id": 688, "start": 4261.0, "end": 4267.56, "text": "kacke was macht gRPC da kannst du von einem da kannst"}, {"id": 689, "start": 4267.56, "end": 4272.0, "text": "du \u00fcbers Netz da kannst du von einem kleinen \u00fcbers Netzwerk Funktionen auf dem Server"}, {"id": 690, "start": 4272.0, "end": 4276.36, "text": "aufrufen und dir Antworten schicken lassen und sowas das ist ein Binary Kommunikations"}, {"id": 691, "start": 4276.36, "end": 4283.72, "text": "Protokoll"}, {"id": 692, "start": 4283.72, "end": 4285.2, "text": "also keine Webrequest Binary"}, {"id": 693, "start": 4285.2, "end": 4292.6, "text": "ich meine das"}, {"id": 694, "start": 4292.6, "end": 4296.4, "text": "das Ruby langsam ist ist mir klar und das Python langsam ist mir auch klar warum Swift"}, {"id": 695, "start": 4296.4, "end": 4297.88, "text": "so langsam ist verstehe ich nicht"}, {"id": 696, "start": 4297.88, "end": 4305.32, "text": "PHP ok aber PHP ist auch besser als ein Ruf was Speed angeht dass Node so langsam ist"}, {"id": 697, "start": 4305.32, "end": 4307.32, "text": "wobei so langsam ist"}, {"id": 698, "start": 4307.32, "end": 4311.72, "text": "Node also generell Javascript ist viel schneller als ein Ruf"}, {"id": 699, "start": 4311.72, "end": 4316.12, "text": "Javascript ist mittlerweile extrem schnell"}, {"id": 700, "start": 4316.12, "end": 4325.0, "text": "also diese Geschichte mit von wegen lamen dynamisch interpretiertem Javascript ist schon"}, {"id": 701, "start": 4325.0, "end": 4326.0, "text": "lange nicht mal so"}, {"id": 702, "start": 4326.0, "end": 4333.8, "text": "sp\u00e4testens seit V8 und Google damit angefangen haben ist da da ist wirklich ich wei\u00df ich"}, {"id": 703, "start": 4333.8, "end": 4339.24, "text": "habe schon oft extrem gesagt letztes Jahr aber extrem viel Big Brain in V8 drinne"}, {"id": 704, "start": 4339.24, "end": 4342.96, "text": "also V8 platzt das Gehirn quasi was die sich da \u00fcberlegt haben"}, {"id": 705, "start": 4342.96, "end": 4348.36, "text": "die machen so abgedrehte Optimierung Sachen in in Chrome Javascript ist der Wahnsinn"}, {"id": 706, "start": 4348.36, "end": 4349.36, "text": "die haben zum Beispiel"}, {"id": 707, "start": 4349.36, "end": 4361.32, "text": "eine Erkennung drin ob der Wert in einer Schleife quasi \u00fcberlaufen kann oder nicht"}, {"id": 708, "start": 4361.32, "end": 4366.16, "text": "also sprich wenn du wenn du auf irgendwas zugreift in der Schleife und z\u00e4hlt die Schleife"}, {"id": 709, "start": 4366.16, "end": 4367.16, "text": "hoch"}, {"id": 710, "start": 4367.16, "end": 4372.04, "text": "da haben die quasi irgendwie so eine Logik drinne eingebaut in V8 ob es m\u00f6glich ist"}, {"id": 711, "start": 4372.04, "end": 4375.04, "text": "dass dieser Wert jemals overflowed"}, {"id": 712, "start": 4375.04, "end": 4379.36, "text": "wenn er overflowed bleibt das langsam weil er muss jedes mal checken ob es overflowed"}, {"id": 713, "start": 4379.36, "end": 4380.36, "text": "ist"}, {"id": 714, "start": 4380.36, "end": 4387.2, "text": "wenn diese diese Black Magic Google Logik quasi feststellt das kann niemals overflowen"}, {"id": 715, "start": 4387.2, "end": 4391.76, "text": "dann kompilieren die quasi im Hintergrund irgendwie so einen so einen Hot Pass Ausf\u00fchrungsding"}, {"id": 716, "start": 4391.76, "end": 4394.4, "text": "f\u00fcr in Node und dann ist es superschnell das ist wirklich"}, {"id": 717, "start": 4394.4, "end": 4401.36, "text": "Exploding Expanding Brain was sie in Javascript machen echt das ist das ist nicht normal"}, {"id": 718, "start": 4401.36, "end": 4403.04, "text": "das verstehen auch Normalsterbliche nicht mehr"}, {"id": 719, "start": 4403.04, "end": 4413.36, "text": "also also warum Swift zu langsam jetzt verstehe ich nicht PAP ok Node h\u00e4tte ich eigentlich"}, {"id": 720, "start": 4413.36, "end": 4417.76, "text": "auch ein bisschen schneller vorgestellt aber ich bin mir nicht sicher ob in diesem Benchmark"}, {"id": 721, "start": 4417.76, "end": 4422.24, "text": "vielleicht weil es gerade einer im Chat gesagt hat irgendwelche Multithreading Sachen gemacht"}, {"id": 722, "start": 4422.24, "end": 4423.24, "text": "werden"}, {"id": 723, "start": 4423.24, "end": 4426.2, "text": "wenn Multithreading dann ist Node zumindest standardm\u00e4\u00dfig nicht so nicht so sch\u00f6n"}, {"id": 724, "start": 4426.2, "end": 4432.52, "text": "Lua gut wer sich wirklich geben will kann sich auch Lua geben"}, {"id": 725, "start": 4432.52, "end": 4440.24, "text": "Kotlin Java ich vermute mal Kotlin ist ein bisschen langsamer als Java entweder ist es"}, {"id": 726, "start": 4440.24, "end": 4445.8, "text": "eine eigene neue Implementierung die einfach nicht so performant ist wie hier oder aber"}, {"id": 727, "start": 4445.8, "end": 4450.1, "text": "die Magic die Kotlin angenehm macht im Vergleich zu Java schl\u00e4gt halt ein bisschen Performance"}, {"id": 728, "start": 4450.1, "end": 4451.1, "text": "m\u00e4\u00dfig rein"}, {"id": 729, "start": 4451.1, "end": 4459.84, "text": "so Go, Go gRPC ist schnell muss es auch weil Go ist von Google und und na gut gRPC ist"}, {"id": 730, "start": 4459.84, "end": 4460.84, "text": "so halb von Google"}, {"id": 731, "start": 4460.84, "end": 4469.96, "text": "so und was wisst ihr was wirklich nice ist das C++, Go,.NET und Rust ungef\u00e4hr alle"}, {"id": 732, "start": 4469.96, "end": 4470.96, "text": "gleich schnell sind"}, {"id": 733, "start": 4470.96, "end": 4478.16, "text": "also man sieht man kann mittlerweile auch in.NET ziemlich optimiertes Zeug fabrizieren"}, {"id": 734, "start": 4478.16, "end": 4487.48, "text": "und ich glaube mal dass C++ das Potenzial h\u00e4tte sogar in der Ecke schneller zu sein"}, {"id": 735, "start": 4487.48, "end": 4494.52, "text": "hier als.NET aber C++ hat auch das Potenzial unn\u00f6tig h\u00e4sslich entwicklerfeindlich und"}, {"id": 736, "start": 4494.52, "end": 4501.4, "text": "kompliziert zu sein deswegen kann es durchaus sein dass die gRPC Implementierung in C++"}, {"id": 737, "start": 4501.4, "end": 4505.4, "text": "einfach suboptimal ist im Vergleich zur Implementierung von in.NET"}, {"id": 738, "start": 4505.4, "end": 4515.08, "text": "weil in.NET blickst du durch wenn du was programmierst in C++ eigentlich nicht"}, {"id": 739, "start": 4515.08, "end": 4516.08, "text": "zumindest nicht so gut"}, {"id": 740, "start": 4516.08, "end": 4531.76, "text": "genau gut Rust ist ganz vorne mit dabei also ausweichlich hat C++ hier eindeutig das Potenzial"}, {"id": 741, "start": 4531.76, "end": 4538.04, "text": "auf der gleichen Ebene von Rust zu sein"}, {"id": 742, "start": 4538.04, "end": 4543.64, "text": "aber es hat wahrscheinlich keiner Bock eine neue performantere gRPC Implementierung f\u00fcr"}, {"id": 743, "start": 4543.64, "end": 4549.24, "text": "C++ zu programmieren weil C++ so ma\u00dflos sackt und keiner C++ programmieren will"}, {"id": 744, "start": 4549.24, "end": 4553.04, "text": "so und Kirby Musik ist vorbei muss ich wieder anmachen"}, {"id": 745, "start": 4553.04, "end": 4560.28, "text": "gibt es ein schnelleres Minibot als den Raspberry Pi 4"}, {"id": 746, "start": 4560.28, "end": 4565.68, "text": "ja total viele total viele musst du einfach mal suchen danach"}, {"id": 747, "start": 4565.68, "end": 4572.04, "text": "aber ich w\u00fcrde trotzdem nichts anderes nehmen weil die Kombination aus Support, Tutorials,"}, {"id": 748, "start": 4572.04, "end": 4576.8, "text": "Partikel, Boards und generell Community Unterst\u00fctzung ist einfach durch nichts zu schlagen"}, {"id": 749, "start": 4576.8, "end": 4581.6, "text": "ach da steht Single Threaded Multi Threaded ah ich sehe es hier"}, {"id": 750, "start": 4581.6, "end": 4592.4, "text": "also C++ Multi Threaded ist genauso gut wie Go Multi Threaded ohne MT und.NET Multi Threaded"}, {"id": 751, "start": 4592.4, "end": 4596.8, "text": "es ist nicht alles Single Threaded Multi Threaded manches ist auch unbekannt Threaded"}, {"id": 752, "start": 4596.8, "end": 4602.84, "text": "ja zumindest worauf ich eigentlich raus wollte jetzt mit dieser ganzen Performance mit ganzen"}, {"id": 753, "start": 4602.84, "end": 4606.6, "text": "Performance Vergleich"}, {"id": 754, "start": 4606.6, "end": 4611.56, "text": "und Ruby Ruby auch in vielen Bereichen wobei Ruby jetzt mit der n\u00e4chsten Ruby Version"}, {"id": 755, "start": 4611.56, "end": 4616.4, "text": "einen dicken Performance Boost kriegt ich hoffe dass Ruby dadurch wieder ein bisschen"}, {"id": 756, "start": 4616.4, "end": 4622.04, "text": "beliebter wird weil pers\u00f6nlich bei mir gibt es zwei Sprachen die ich am liebsten benutze"}, {"id": 757, "start": 4622.04, "end": 4627.44, "text": "das ist C Sharp und Ruby Ruby genau leider kann man Ruby nicht mal so gut verwenden in"}, {"id": 758, "start": 4627.44, "end": 4637.8, "text": "letzter Zeit Rails ist komplett gefallen ne wie sagt man da so komplett aus der Mode"}, {"id": 759, "start": 4637.8, "end": 4645.88, "text": "gekommen genau und so normales Scripting Zeug macht jetzt eigentlich fast jeder irgendwie"}, {"id": 760, "start": 4645.88, "end": 4646.88, "text": "in Preisen"}, {"id": 761, "start": 4646.88, "end": 4651.56, "text": "schon mal mit Crystal gearbeitet ja habe ich mir vor Jahren mal angeguckt das gr\u00f6\u00dfte"}, {"id": 762, "start": 4651.56, "end": 4655.6, "text": "Problem was ich bei Crystal hatte ist dass sie so halb kompatibel zu Ruby sind aber"}, {"id": 763, "start": 4655.6, "end": 4662.64, "text": "nicht richtig und dass sie nicht unter Winnows funktionieren"}, {"id": 764, "start": 4662.64, "end": 4663.64, "text": "vielleicht ist mittlerweile alles anders"}, {"id": 765, "start": 4663.64, "end": 4670.84, "text": "du hast keine Ideen was du programmieren k\u00f6nntest"}, {"id": 766, "start": 4670.84, "end": 4672.32, "text": "das ist nat\u00fcrlich ein Problem"}, {"id": 767, "start": 4672.32, "end": 4676.08, "text": "was h\u00e4ltst du von Webseiten"}, {"id": 768, "start": 4676.08, "end": 4680.6, "text": "ich finde Webseiten immer am sch\u00f6nsten zu machen zum Einstieg weil dann sieht man was"}, {"id": 769, "start": 4680.6, "end": 4681.6, "text": "das passiert"}, {"id": 770, "start": 4681.6, "end": 4683.96, "text": "weil du kannst ja dann Python Backend machen"}, {"id": 771, "start": 4683.96, "end": 4687.36, "text": "oder schwierig zu sein"}, {"id": 772, "start": 4687.36, "end": 4695.36, "text": "spielen wir das neue Cod ich habe es noch nicht mal installiert ich will unbedingt die Kampagne"}, {"id": 773, "start": 4695.36, "end": 4697.4, "text": "spielen vielleicht spiele ich sogar im Stream"}, {"id": 774, "start": 4697.4, "end": 4703.28, "text": "ich habe es doch Hissi habe ich gerade beantwortet es gibt total viele Boards die schneller sind"}, {"id": 775, "start": 4703.28, "end": 4704.72, "text": "als der Raspberry Pi 4"}, {"id": 776, "start": 4704.72, "end": 4709.08, "text": "aber ich w\u00fcrde trotzdem keines empfehlen weil die von Support und Community Unterst\u00fctzung"}, {"id": 777, "start": 4709.08, "end": 4714.2, "text": "und Tutorials und Software die einfach l\u00e4uft und Hardware Erweiterungen so einfach nicht"}, {"id": 778, "start": 4714.2, "end": 4715.2, "text": "so gut sind"}, {"id": 779, "start": 4715.2, "end": 4719.12, "text": "und meistens ist der Raspberry Pi 4 ja nicht irgendwie der limitierende Faktor bei dem"}, {"id": 780, "start": 4719.12, "end": 4720.12, "text": "was man machen will"}, {"id": 781, "start": 4720.12, "end": 4726.92, "text": "was haben sie hier sonst noch GAPC Benchmarks bla"}, {"id": 782, "start": 4726.92, "end": 4730.96, "text": "ja und Python ist halt manchmal echt krass langsam so wie man hier sieht"}, {"id": 783, "start": 4730.96, "end": 4734.12, "text": "und das liegt um jetzt mal auf die urspr\u00fcngliche Frage zur\u00fcck zu kommen was der gro\u00dfe Unterschied"}, {"id": 784, "start": 4734.12, "end": 4735.12, "text": "zwischen.NET"}, {"id": 785, "start": 4735.12, "end": 4740.12, "text": "und C-Sharp und Python ist das liegt zum gr\u00f6\u00dften Teil daran dass Python dynamisch ist"}, {"id": 786, "start": 4740.12, "end": 4746.92, "text": "du kannst einfach den Ablauf von einem Programm viel schlechter optimisieren wenn du nicht"}, {"id": 787, "start": 4746.92, "end": 4747.92, "text": "wei\u00dft"}, {"id": 788, "start": 4747.92, "end": 4752.2, "text": "was f\u00fcr einen Datentyp und also quasi wie viel Speicher ja letztendlich"}, {"id": 789, "start": 4752.2, "end": 4759.56, "text": "eine gewisse Variable zu welchem Zeit ben\u00f6tigt das ist einfach kacke zu optimieren"}, {"id": 790, "start": 4759.56, "end": 4772.44, "text": "also dass das Python dynamisch ist ist der gr\u00f6\u00dfte Vor- und Nachteil an der ganzen Sache"}, {"id": 791, "start": 4772.44, "end": 4778.2, "text": "das ist sch\u00f6n elegant und das ist schon einfach zu programmieren und auch sehr pr\u00e4gnant"}, {"id": 792, "start": 4778.2, "end": 4783.12, "text": "und aussagekr\u00e4ftig aber es ist halt optimierbar nur in Grenzen"}, {"id": 793, "start": 4783.12, "end": 4787.52, "text": "ja und ob kompiliert oder interpretiert w\u00fcrde ich jetzt gar nicht mal in der heutigen Zeit"}, {"id": 794, "start": 4787.52, "end": 4795.52, "text": "mal so hoch einsch\u00e4tzen weil viele Sachen haben da so einen hybriden Modus also sogar"}, {"id": 795, "start": 4795.52, "end": 4800.88, "text": "in JavaScript ist es ja mittlerweile auch so JavaScript in V8 wird ja auch nicht rein"}, {"id": 796, "start": 4800.88, "end": 4805.64, "text": "interpretiert da wird ja auch dann viele Sachen werden dann wenn sie gecheckt wurden quasi"}, {"id": 797, "start": 4805.64, "end": 4811.72, "text": "kompiliert dass es dann recht optimierten Code gibt also vieles ist so hybridm\u00e4\u00dfig"}, {"id": 798, "start": 4811.72, "end": 4815.48, "text": "man kann heute gar nicht mehr sagen hey das ist rein interpretiert und das ist rein ahead"}, {"id": 799, "start": 4815.48, "end": 4824.48, "text": "of time kompiliert das ist oft mal so ein Ding und beispielsweise ist es in.NET \u00e4hnlich"}, {"id": 800, "start": 4824.48, "end": 4831.16, "text": "bei.NET w\u00fcrde nie jemand sagen das ist eine interpretierte Sprache in.NET ist es so wenn"}, {"id": 801, "start": 4831.16, "end": 4837.4, "text": "du ein Programm startest dann haben die noch keinen f\u00fcr deine Plattform optimierten Code"}, {"id": 802, "start": 4837.4, "end": 4843.44, "text": "erzeugt das hei\u00dft dann l\u00e4uft das ganze erstmal ein bisschen langsamer nicht wirklich interpretiert"}, {"id": 803, "start": 4843.44, "end": 4852.96, "text": "aber quasi in so einem Art Bytecode Interpreter ist das l\u00e4uft das dann und sobald du deswegen"}, {"id": 804, "start": 4852.96, "end": 4858.28, "text": "ist es in C-Sharp auch oder in.NET auch oft so wenn du zumindest war das bisher so wenn"}, {"id": 805, "start": 4858.28, "end": 4863.92, "text": "du eine Methode zweimal aufrufst ist sie beim zweiten mal viel schneller ja das gucken wir"}, {"id": 806, "start": 4863.92, "end": 4877.92, "text": "uns gleich an mit Main und so da sieht man das ist also flie\u00dfend was da zwischen interpretieren"}, {"id": 807, "start": 4877.92, "end": 4883.84, "text": "kompilieren Bytecode4M und so da tricksten heute viele Sprachen rum und es gibt ja auch"}, {"id": 808, "start": 4883.84, "end": 4889.04, "text": "schon ein paar ahead of time Compiler f\u00fcr Python die machen Python aber auch nicht zu"}, {"id": 809, "start": 4889.04, "end": 4898.44, "text": "einer ultra schnellen Sprache es gibt so ein paar Versuche habe ich letztens gesehen zum"}, {"id": 810, "start": 4898.44, "end": 4906.04, "text": "Beispiel jemand der hat einen Python Compiler gebastelt und aber mit der Beschr\u00e4nkung dass"}, {"id": 811, "start": 4906.04, "end": 4910.56, "text": "man manche Features nicht verwenden darf man darf quasi nur so ein Subset von Python verwenden"}, {"id": 812, "start": 4910.56, "end": 4914.84, "text": "das ist dann sch\u00f6n schnell ja ich bin mal auf die n\u00e4chste Ruby Version gespannt weil"}, {"id": 813, "start": 4914.84, "end": 4918.48, "text": "die n\u00e4chste Ruby Version soll angeblich irgendwie zehnmal schneller sein oder so da bin ich"}, {"id": 814, "start": 4918.48, "end": 4921.88, "text": "mal gespannt vielleicht also wenn Ruby es schaffen w\u00fcrde hier auf dieser Ebene irgendwie"}, {"id": 815, "start": 4921.88, "end": 4928.68, "text": "zu landen w\u00e4re schon huge ja und in.NET haben sie halt die letzten die letzten Versionen"}, {"id": 816, "start": 4928.68, "end": 4938.44, "text": "\u00fcber ziemlich viel eingef\u00fchrt was der Performance zugute kommt zum Beispiel was sind wir da"}, {"id": 817, "start": 4938.44, "end": 4942.76, "text": "mal also diese ganze Task Geschichte ist ja ist ja schon alt zum Beispiel ihr ganzes"}, {"id": 818, "start": 4942.76, "end": 4949.36, "text": "Memory Management fr\u00fcher war das ja so du hast f\u00fcr alles und jeden hast du irgendwelche"}, {"id": 819, "start": 4949.36, "end": 4954.44, "text": "Objekte erzeugt in C Sharp oder in.NET die dann garbage collected werden m\u00fcssen so und"}, {"id": 820, "start": 4954.44, "end": 4961.2, "text": "was ganz ganz eklig war in.NET ist wenn du sowas hier machen musstest also sagen wir"}, {"id": 821, "start": 4961.2, "end": 4970.32, "text": "jetzt mal wir machen jetzt mal eine Liste Liste int oder Array komm wir machen Array"}, {"id": 822, "start": 4970.32, "end": 4977.96, "text": "mit Array geht das mit Liste geht das gar nicht also du hast ein Array sagen wir das"}, {"id": 823, "start": 4977.96, "end": 4988.6, "text": "sind jetzt irgendwie 20.000 Elemente drin so und jetzt willst du dieses Array verarbeiten"}, {"id": 824, "start": 4988.6, "end": 4998.96, "text": "an unterschiedlichen Stellen in deinem Programm unterschiedliche Abschnitte das ist gar nicht"}, {"id": 825, "start": 4998.96, "end": 5006.28, "text": "so einfach gewesen wenn du das alles \u00fcbersichtlich untereinander machst dann kannst du nat\u00fcrlich"}, {"id": 826, "start": 5006.28, "end": 5012.68, "text": "da irgendwie zig vorschleifen bauen die dann wussten wo die andere gerade ist und sowas"}, {"id": 827, "start": 5012.68, "end": 5017.44, "text": "das hat funktioniert da haben wir jetzt aber gesagt ok solche Low Level Sachen m\u00fcssen"}, {"id": 828, "start": 5017.44, "end": 5023.68, "text": "wir anders handhaben und deswegen haben sie jetzt sowas hier gemacht das ist quasi eine"}, {"id": 829, "start": 5023.68, "end": 5031.12, "text": "Abstraction f\u00fcr Speicher Zugriff vorbei vielleicht soll ich eher auf Byte machen also sprich"}, {"id": 830, "start": 5031.12, "end": 5038.96, "text": "wenn ich auf Speicher zugreife und das Splitten will und an unterschiedlichen Stellen verarbeiten"}, {"id": 831, "start": 5038.96, "end": 5043.92, "text": "m\u00f6chte dann kann ich das damit machen und ich kann da quasi da neue Slices erzeugen"}, {"id": 832, "start": 5043.92, "end": 5048.36, "text": "neue Abschnitte von diesem Array an unterschiedliche Teile \u00fcbergeben an unterschiedlichen Teilen"}, {"id": 833, "start": 5048.36, "end": 5055.56, "text": "bearbeiten und unten drunter ist das im Prinzip immer noch das gleiche Array also sprich ich"}, {"id": 834, "start": 5055.56, "end": 5060.52, "text": "muss hier nichts kopieren ich muss hier nichts neu anlegen an Speicher ich greife unter der"}, {"id": 835, "start": 5060.52, "end": 5066.32, "text": "Haube immer noch auf das gleiche Array zu was nat\u00fcrlich irgendwelche Parser oder Sachen"}, {"id": 836, "start": 5066.32, "end": 5074.64, "text": "die halt Multithreaded Byte Buffer Zeug verarbeiten viel viel schneller macht so das ist so ein"}, {"id": 837, "start": 5074.64, "end": 5078.76, "text": "Feature was er eingef\u00fchrt im C-Shop was echt Performance geboostet hat das n\u00e4chste was"}, {"id": 838, "start": 5078.76, "end": 5091.72, "text": "sie eingef\u00fchrt haben ist dass wenn du Multithreaded wenn du Sachen Multithreaded machst dass du"}, {"id": 839, "start": 5091.72, "end": 5096.84, "text": "gibt es daf\u00fcr nicht auch GetRange kann schon sein ich wei\u00df es ehrlich gesagt nicht ob"}, {"id": 840, "start": 5096.84, "end": 5104.12, "text": "es sowas wie GetRange gibt GetRange nein das erzeugt eine neue Liste das ist genau das"}, {"id": 841, "start": 5104.12, "end": 5109.64, "text": "was ich meine das erzeugt eine neue Liste mit Referenz auf die Elemente aus der alten"}, {"id": 842, "start": 5109.64, "end": 5117.72, "text": "Liste das hei\u00dft du musst jedes mal wenn du das benutzt eine neue Liste erzeugen mit Referenzen"}, {"id": 843, "start": 5117.72, "end": 5123.44, "text": "auf die alten Elemente was nat\u00fcrlich wenn du das keine Ahnung 30 Millionen mal pro"}, {"id": 844, "start": 5123.44, "end": 5128.56, "text": "Sekunde machst oder so auch f\u00fcr den Garbage Collector nervig wird wenn er den ganzen Kram"}, {"id": 845, "start": 5128.56, "end": 5135.24, "text": "aufr\u00e4umen muss und sie haben selbst gesagt ich muss euch ehrlich sagen ich verwende"}, {"id": 846, "start": 5135.24, "end": 5139.24, "text": "diese Span Geschichte auch relativ selten wo ich es verwendet habe ist zum Beispiel"}, {"id": 847, "start": 5139.24, "end": 5147.52, "text": "bei meinem FFmpeg Video Einlese Zeug f\u00fcr den Buffer den man wiederbekommt von den Unmanaged"}, {"id": 848, "start": 5147.52, "end": 5152.4, "text": "Buffer von FFmpeg mit dem komprimierten Video daf\u00fcr verwende ich es an einer Stelle ansonsten"}, {"id": 849, "start": 5152.4, "end": 5156.96, "text": "verwende ich es auch relativ selten aber sie haben gesagt dass sie beispielsweise ihre"}, {"id": 850, "start": 5156.96, "end": 5161.64, "text": "Web Request bei ASP.NET Core um ein Vielfaches beschleunigen konnten dadurch dass sie Span"}, {"id": 851, "start": 5161.64, "end": 5167.84, "text": "verwendet haben so noch eine Sache die sie eingebaut haben ist was in den letzten Jahren"}, {"id": 852, "start": 5167.84, "end": 5174.68, "text": "wirklich viel Performance Boost gebracht hat bei NC Sharp ist du hattest bisher immer so"}, {"id": 853, "start": 5174.68, "end": 5178.8, "text": "ein bisschen das Problem wenn du Multithreading gemacht hast NC Sharp du hast einen neuen"}, {"id": 854, "start": 5178.8, "end": 5184.8, "text": "Task aufgemacht ein neuer Task ist ja NC Sharp eine Abstraktion zu einem Thread du wei\u00dft"}, {"id": 855, "start": 5184.8, "end": 5191.28, "text": "nicht genau ob es ein eigener Thread ist oder nicht in der Regel l\u00e4uft der Task in einem"}, {"id": 856, "start": 5191.28, "end": 5197.48, "text": "eigenen Thread Pool also sprich wenn ein Task fertig ist dann gibt er den Thread zur\u00fcck"}, {"id": 857, "start": 5197.48, "end": 5200.64, "text": "in den Pool und wenn ein neuer Task anf\u00e4ngt kann er sich den wieder rausnehmen und der"}, {"id": 858, "start": 5200.64, "end": 5204.6, "text": "Standard Thread Pool hat keine Ahnung ich wei\u00df es nicht ich sag jetzt einfach mal 500"}, {"id": 859, "start": 5204.6, "end": 5208.44, "text": "offene Threads ich hab ehrlich gesagt kein Plassen Schimmer wie gro\u00df der Standard Thread"}, {"id": 860, "start": 5208.44, "end": 5213.36, "text": "Pool ist das hat den Vorteil man muss nicht immer neue Threads erstellen und so ja so"}, {"id": 861, "start": 5213.36, "end": 5219.4, "text": "aber du wei\u00dft das nicht so genau so und eine Sache ist jetzt wenn du Sachen programmiert"}, {"id": 862, "start": 5219.4, "end": 5228.76, "text": "hast die asynchron laufen in Task zum Beispiel NC Sharp dann musstest du ja als R\u00fcckgabe"}, {"id": 863, "start": 5228.76, "end": 5239.8, "text": "von so machen wir mal irgendwie hier was Static, Void, Static, Task, Blob und wenn jetzt hier"}, {"id": 864, "start": 5239.8, "end": 5251.92, "text": "irgendwas machst was ein Task erzeugt so hier kann ein Return, Task, Run so wenn ich das"}, {"id": 865, "start": 5251.92, "end": 5257.88, "text": "hier jetzt aufrufe diese Methode Blob die gibt mir den Task zur\u00fcck und dieser Task l\u00e4uft"}, {"id": 866, "start": 5257.88, "end": 5271.52, "text": "ein Asynchron es sei denn ich warte drauf also zum Beispiel kann ich dann hier sagen"}, {"id": 867, "start": 5271.52, "end": 5279.44, "text": "Wait Blob was das jetzt macht ist Blob erzeugt einen Task der Asynchron l\u00e4uft und ich warte"}, {"id": 868, "start": 5279.44, "end": 5284.4, "text": "hier bis der Task vorbei ist also was hei\u00dft ich warte nicht warten ist das falsche Wort"}, {"id": 869, "start": 5284.4, "end": 5288.16, "text": "ich springe quasi aus der Methode raus und wenn das fertig ist mache ich dann an der"}, {"id": 870, "start": 5288.16, "end": 5296.64, "text": "Stelle weiter so was das Problem ist wenn ich das 20 wenn ich das f\u00fcnf Millionen mal"}, {"id": 871, "start": 5296.64, "end": 5306.44, "text": "mache keine Ahnung alle paar Sekunden dann ja Async, Void jetzt fangen sie wieder alle"}, {"id": 872, "start": 5306.44, "end": 5312.16, "text": "an ne in dem Fall ist Async, Void ok hier ist Async, Void vollkommen ok weil ich await"}, {"id": 873, "start": 5312.16, "end": 5327.36, "text": "ja den Task was willst du sonst machen ja mach da mach da by await das kann ich gleich"}, {"id": 874, "start": 5327.36, "end": 5332.12, "text": "auch nochmal erz\u00e4hlen so zumindest wenn man das jetzt wenn man das jetzt irgendwie 100.000"}, {"id": 875, "start": 5332.12, "end": 5337.68, "text": "mal die Sekunde macht das erzeugt ganz sch\u00f6n viel Overhead vor allem wenn man sich mal"}, {"id": 876, "start": 5337.68, "end": 5343.92, "text": "\u00fcberlegt wenn ich was habe was ich 50.000 mal 100.000 mal die Sekunde mache was ich"}, {"id": 877, "start": 5343.92, "end": 5351.08, "text": "Asynchron machen m\u00f6chte in einem extra Task dann ist halt eh die Frage wie Asynchron das"}, {"id": 878, "start": 5351.08, "end": 5357.64, "text": "ist weil das muss ja verdammt schnell fertig sein sonst wird sich ja nicht lohnen das 50.000"}, {"id": 879, "start": 5357.64, "end": 5361.8, "text": "mal pro Sekunde zu machen deswegen haben die jetzt was neues eingef\u00fchrt und zwar Value"}, {"id": 880, "start": 5361.8, "end": 5366.48, "text": "Task ich werde aber einfach nur erw\u00e4hnen dass es das gibt Value Task ist quasi ein"}, {"id": 881, "start": 5366.48, "end": 5379.08, "text": "Rapper um Task der den Fall optimiert dass der Task instant schon fertig ist also sprich"}, {"id": 882, "start": 5379.08, "end": 5384.6, "text": "wenn ich was habe was ich sau oft mache pro Sekunde und ich w\u00fcrde daf\u00fcr jedes mal einen"}, {"id": 883, "start": 5384.6, "end": 5394.36, "text": "neuen Task erzeugen aber das Ergebnis was ich mit diesem Task berechnen will ist so schnell"}, {"id": 884, "start": 5394.36, "end": 5402.36, "text": "meistens zumindest so schnell da dass es quasi Synchron ist da kann ich das mit Value Task"}, {"id": 885, "start": 5402.36, "end": 5408.76, "text": "machen weil der optimiert diesen Fall dass ich Sachen quasi so fake Asynchron mache"}, {"id": 886, "start": 5408.76, "end": 5414.92, "text": "obwohl sie eigentlich Synchron sind und dann muss der auch keine 30 Billiarden Sachen erstellen"}, {"id": 887, "start": 5414.92, "end": 5420.36, "text": "pro Sekunde so und das ist auch eine Sache wo sie viel Performance optimieren konnten"}, {"id": 888, "start": 5420.36, "end": 5427.56, "text": "in dotnet so dann haben wir jetzt hier noch eine Frage von springt er bei Await wieder"}, {"id": 889, "start": 5427.56, "end": 5433.24, "text": "in die Methode ja Await ist eigentlich viel einfacher als es auf den ersten Blick also"}, {"id": 890, "start": 5433.24, "end": 5438.6, "text": "umgedreht Await h\u00f6rt sich Await h\u00f6rt sich erstmal einfach an wenn man sich damit besch\u00e4ftigt"}, {"id": 891, "start": 5438.6, "end": 5443.28, "text": "stellt man fest fuck das ist doch gar nicht so einfach und wenn man sich dann ein bisschen"}, {"id": 892, "start": 5443.28, "end": 5450.0, "text": "damit besch\u00e4ftigt dann stellt man fest dass es viel einfacher ist wenn man sich so vorstellt"}, {"id": 893, "start": 5450.0, "end": 5455.2, "text": "also dieses Konstrukt gibt es nicht in C-Sharp aber das ist im Prinzip das was ein Await"}, {"id": 894, "start": 5455.2, "end": 5470.44, "text": "macht ein Await ist ein Return ein Await ist ein Return mit einem Callback wenn es weitergeht"}, {"id": 895, "start": 5470.44, "end": 5478.08, "text": "also ein Return beendet die Methode ja komplett so und ein Await also es w\u00e4re eigentlich"}, {"id": 896, "start": 5478.08, "end": 5483.72, "text": "fast aussagekr\u00e4ftiger man w\u00fcrde Return Await schreiben aber es ist halt in dem Fall nur"}, {"id": 897, "start": 5483.72, "end": 5488.32, "text": "Await was dann Await macht ist folgendes also sagen wir mal so ich ruf jetzt diese Sache"}, {"id": 898, "start": 5488.32, "end": 5494.84, "text": "hier dreimal auf und danach sage ich dann irgendwie fertig wir machen jetzt mal Task"}, {"id": 899, "start": 5494.84, "end": 5503.24, "text": "Run Big Brain Code machen wir jetzt Threadsleep 100 Threadsleep 1000 also ich wei\u00df ich mache"}, {"id": 900, "start": 5503.24, "end": 5510.76, "text": "noch einen Task der ne Sekunde wartet und jetzt rufen wir das Ganze mal auf achso \u00e4h"}, {"id": 901, "start": 5510.76, "end": 5520.56, "text": "Moment jetzt muss ich danach warten \u00e4h Moment \u00e4h Task ne \u00e4h \u00e4h erst mal ah stimmt das"}, {"id": 902, "start": 5520.56, "end": 5527.84, "text": "geht jetzt ja ne nicht was hab ich verkehrt gemacht achso ha das kann ich jetzt nicht"}, {"id": 903, "start": 5527.84, "end": 5534.48, "text": "erwarten doch wuppi du hast vollkommen recht das funktioniert ja so nicht keck weh jetzt"}, {"id": 904, "start": 5534.48, "end": 5539.4, "text": "beendet er sich n\u00e4mlich ja \u00e4h fuck wie mach ich das jetzt wie zeige ich das jetzt am besten"}, {"id": 905, "start": 5539.4, "end": 5545.52, "text": "Console Readline dann beendet er sich nicht ja du hast recht in dem Fall ist es tats\u00e4chlich"}, {"id": 906, "start": 5545.52, "end": 5551.96, "text": "bl\u00f6d gewesen ja \u00e4hm so ich h\u00e4tte dir wirklich Task zur\u00fcckgeben sollen ja jetzt weil jetzt"}, {"id": 907, "start": 5551.96, "end": 5558.84, "text": "kann ich jetzt auch erwarten wuppi und ich hab noch gesagt ist okay und gleich kommt"}, {"id": 908, "start": 5558.84, "end": 5572.08, "text": "b\u00e4m ist nicht okay so also was der hier macht ist jetzt vielleicht soll ich hier noch was"}, {"id": 909, "start": 5572.08, "end": 5578.68, "text": "dazwischen ausgeben also so das ist das ist \u00e4h quasi das erste mal wenn er rausspringt"}, {"id": 910, "start": 5578.68, "end": 5581.96, "text": "das ist das zweite mal wenn er rausspringt und das ist das dritte mal wenn er rausspringt"}, {"id": 911, "start": 5581.96, "end": 5598.44, "text": "so was der macht ist folgendes eins zwei drei also wenn der hier Test aufruft geht er erst"}, {"id": 912, "start": 5598.44, "end": 5603.6, "text": "mal hin blub so blub startet ne neuen Thread ne neuen Task der ne Sekunde wartet also im"}, {"id": 913, "start": 5603.6, "end": 5609.32, "text": "Prinzip block das quasi ne Sekunde wenn man es so will so was der jetzt hier an der Stelle"}, {"id": 914, "start": 5609.32, "end": 5615.48, "text": "bei dem Await macht ist wenn der hier das Await sieht dann startet er das und geht wieder"}, {"id": 915, "start": 5615.48, "end": 5619.68, "text": "raus hier mal hier mal warte ich jetzt auch also sprich an der Stelle passiert nichts"}, {"id": 916, "start": 5619.68, "end": 5635.08, "text": "der returned und er bekommt ne Callback wenn blub fertig ist und wenn blub fertig ist macht"}, {"id": 917, "start": 5635.08, "end": 5657.52, "text": "er hier weiter im Prinzip ist Await blub exakt das gleiche wie das hier"}, {"id": 918, "start": 5657.52, "end": 5661.0, "text": "aber man sieht schon wie eklig das jetzt wird ne man sieht man sieht man sieht schon man"}, {"id": 919, "start": 5661.0, "end": 5672.8, "text": "sieht schon wie eklig das jetzt wird ne Moment ich machs ja sogar falsch also man siehts"}, {"id": 920, "start": 5672.8, "end": 5676.92, "text": "glaube ich schon man siehts glaube ich schon dass es dass es eklig wird mit der Zeit ne"}, {"id": 921, "start": 5676.92, "end": 5682.64, "text": "das ist n\u00e4mlich fast schon ein Java Callback ich kann es aber nicht mal richtig schreiben"}, {"id": 922, "start": 5682.64, "end": 5693.12, "text": "also das hier ist das gleiche wie wenn ich das mit Await mache"}, {"id": 923, "start": 5693.12, "end": 5697.76, "text": "also der f\u00fchrt blub aus wenn blub fertig ist macht f\u00fchrt er das hier aus wenn blub"}, {"id": 924, "start": 5697.76, "end": 5702.76, "text": "hier fertig ist f\u00fchrt er das hier aus das ist genau das gleiche wie wenn ich so schreibe"}, {"id": 925, "start": 5702.76, "end": 5708.96, "text": "also ja der returned immer an der Stelle bekommt ne Callback wenn das fertig ist und macht"}, {"id": 926, "start": 5708.96, "end": 5716.56, "text": "dann das hier weiter intern wenn man sich das ich hab jetzt ehrlich gesagt keine Ahnung"}, {"id": 927, "start": 5716.56, "end": 5727.04, "text": "ob Ryder nen D-Compiler dabei hat da sieht man das auch sch\u00f6n der hat dann ein riesig"}, {"id": 928, "start": 5727.04, "end": 5732.4, "text": "langes Switch Statement wo er sich den Statement beim rein und rausspringen und wozu braucht"}, {"id": 929, "start": 5732.4, "end": 5739.16, "text": "man da einen Tags der Arbeit doch von oben nach unten das sieht so aus der arbeitet von"}, {"id": 930, "start": 5739.16, "end": 5744.6, "text": "oben nach unten aber es ist insofern asynchron mal angenommen du h\u00e4ttest jetzt ne grafische"}, {"id": 931, "start": 5744.6, "end": 5749.72, "text": "Oberfl\u00e4che ne grafische Oberfl\u00e4che mit nem Knopf so und wenn du den Knopf dr\u00fcckst dann"}, {"id": 932, "start": 5749.72, "end": 5758.32, "text": "w\u00fcrde hier dann w\u00fcrde der hier Test aufrufen und Test macht jetzt nicht das hier Test macht"}, {"id": 933, "start": 5758.32, "end": 5764.4, "text": "nicht das hier sondern Test macht mal einfach mal ganz hardcoded sleep 50.000 so was jetzt"}, {"id": 934, "start": 5764.4, "end": 5771.56, "text": "passieren w\u00fcrde in deiner grafischen Oberfl\u00e4che ist das GUI w\u00fcrde 5 Sekunden h\u00e4ngen und w\u00e4re"}, {"id": 935, "start": 5771.56, "end": 5776.16, "text": "absolut unresponsive und Windows w\u00fcrde wahrscheinlich sagen die Anwendung reagiert nicht wollen"}, {"id": 936, "start": 5776.16, "end": 5784.52, "text": "sie die Anwendung beenden so nicht so mit Await weil Await plockt nicht der arbeitet"}, {"id": 937, "start": 5784.52, "end": 5790.56, "text": "zwar von oben nach unten ab aber nicht indem er hier wartet deswegen ist Await ist schwierig"}, {"id": 938, "start": 5790.56, "end": 5796.84, "text": "das Wort ja der wartet hier nicht der plockt nicht an der Stelle der geht raus aus der"}, {"id": 939, "start": 5796.84, "end": 5803.08, "text": "Methode und du machst hier oben weiter jetzt nicht das kann man ohne GUI schlecht schlecht"}, {"id": 940, "start": 5803.08, "end": 5808.24, "text": "demonstrieren mir f\u00e4llt jetzt auch kein gutes Beispiel dazu ein du hast den Vorteil in nem"}, {"id": 941, "start": 5808.24, "end": 5817.16, "text": "GUI dass hier das return zu dem thread der aufruft deswegen return Await verfasst verfasst"}, {"id": 942, "start": 5817.16, "end": 5832.68, "text": "irgendwie pr\u00e4gnanter"}, {"id": 943, "start": 5832.68, "end": 5845.64, "text": "ich \u00fcberleg gerade ob ihr ein gutes gutes Beispiel einf\u00e4llt"}, {"id": 944, "start": 5845.64, "end": 5849.88, "text": "ja ok wir machen wir machen mal eins also alter die Musik"}, {"id": 945, "start": 5849.88, "end": 5863.72, "text": "so wir machen mal was so wir machen jetzt hier oben mal nen wir tun jetzt mal als h\u00e4tten"}, {"id": 946, "start": 5863.72, "end": 5872.76, "text": "wir nen UI Task nen GUI Task der irgendwas macht der macht nun der macht ne Endlosschleife"}, {"id": 947, "start": 5872.76, "end": 5880.76, "text": "wo nix passiert au\u00dfer dass er die Schleife einmal pro Sekunde durchl\u00e4uft und da ruf"}, {"id": 948, "start": 5880.76, "end": 5890.36, "text": "ich jetzt hier unten Test auf ich sollte vielleicht noch ne Ausgabe machen 1 2 3 so und was man"}, {"id": 949, "start": 5890.36, "end": 5905.12, "text": "jetzt hier sch\u00f6n sieht ist so was man jetzt hier sch\u00f6n sieht ist das ist ja gut hier kommt"}, {"id": 950, "start": 5905.12, "end": 5909.44, "text": "fertig dazwischen ne das ist jetzt do also was man hier sieht ist er m\u00fcsste er m\u00fcsste"}, {"id": 951, "start": 5909.44, "end": 5915.12, "text": "ja eigentlich m\u00fcsste der hier drei Sekunden plocken macht er aber nicht ich nehm mal kurz"}, {"id": 952, "start": 5915.12, "end": 5921.84, "text": "die ne mal kurz hier die dinger hier raus ne also von der Idee her m\u00fcsste der jetzt"}, {"id": 953, "start": 5921.84, "end": 5929.08, "text": "drei Sekunden plocken nach meinem 1 2 3 aber das 1 2 3 kommt einmal in der Sekunde Sekunde"}, {"id": 954, "start": 5929.08, "end": 5934.28, "text": "Sekunde Sekunde aber eigentlich m\u00fcsste der ja plocken weil ich ruf hier dreimal ne Methode"}, {"id": 955, "start": 5934.28, "end": 5940.44, "text": "auf die die ne Sekunde dauert aber der plockt nicht der ruft das auf der f\u00fchrt das hier"}, {"id": 956, "start": 5940.44, "end": 5944.6, "text": "zwar in der richtigen Reihenfolge aus aber jedes mal wenn er auf nen Await trifft macht"}, {"id": 957, "start": 5944.6, "end": 5955.92, "text": "den Return zur\u00fcck an den Task also sprich der ruft Test auf der sieht nen Await und"}, {"id": 958, "start": 5955.92, "end": 5963.88, "text": "Returned so dann irgendwann kriegt der hier nen Callback Plop ist fertig dann springt"}, {"id": 959, "start": 5963.88, "end": 5972.64, "text": "er hier rein und macht weiter Returned wieder kriegt wieder nen Callback macht weiter also"}, {"id": 960, "start": 5972.64, "end": 5977.32, "text": "sprich das ganze ist asynchron ohne dass man sich gro\u00dfartig drum k\u00fcmmern muss das macht"}, {"id": 961, "start": 5977.32, "end": 5983.16, "text": "finde ich aber auch dementsprechend komplex weil es schwierig ist durchzusteigen wann"}, {"id": 962, "start": 5983.16, "end": 5986.92, "text": "er was an welcher Stelle macht und ich benutze das jetzt schon eine Weile und ich muss euch"}, {"id": 963, "start": 5986.92, "end": 5991.16, "text": "ehrlich sagen ich tu mir manchmal auch schwer warum manche Ergebnisse rauskommen so wie"}, {"id": 964, "start": 5991.16, "end": 5995.24, "text": "sie rauskommen also das ist nicht so easy wie man sich wie es auf den ersten Blick vielleicht"}, {"id": 965, "start": 5995.24, "end": 6003.64, "text": "aussieht aber wenn man sich den Await als Return vorstellt ist das eigentlich einfacher"}, {"id": 966, "start": 6003.64, "end": 6010.56, "text": "finde ich als also wenn man sich als Return Await vorstellt ist es einfacher so h\u00e4tten"}, {"id": 967, "start": 6010.56, "end": 6019.96, "text": "wir jetzt ist hier ein D-Compiler dabei in also der der beste Anwendungsfall den man sich"}, {"id": 968, "start": 6019.96, "end": 6023.28, "text": "vorstellen kann wo man auch sofort sieht dass es was bringt ist wenn man sich vorstellt"}, {"id": 969, "start": 6023.28, "end": 6028.56, "text": "man hat eine grafische Oberfl\u00e4che man klickt einen Knopf und man m\u00f6chte was machen was"}, {"id": 970, "start": 6028.56, "end": 6035.66, "text": "f\u00fcnf Sekunden dauert wenn man den Knopf dr\u00fcckt wenn man das einfach so macht dann h\u00e4ngt"}, {"id": 971, "start": 6035.66, "end": 6042.72, "text": "das GUI f\u00fcnf Sekunden wenn man das in einem eigenen Task macht dann h\u00e4ngt das GUI nicht"}, {"id": 972, "start": 6042.72, "end": 6046.62, "text": "dann hast du allerdings das Problem dass du dann die Reihenfolge nicht mehr richtig hin"}, {"id": 973, "start": 6046.62, "end": 6052.4, "text": "bekommst und das ist halt mit Await einfacher weil im Prinzip kannst du mit Await den Code"}, {"id": 974, "start": 6052.4, "end": 6060.76, "text": "schreiben wie du ihn synchron schreiben w\u00fcrdest also von oben nach unten aber jedes mal hier"}, {"id": 975, "start": 6060.76, "end": 6068.24, "text": "blockt er nicht sondern Return eins oben dr\u00fcber ist halt ein bisschen Eingew\u00f6hnungssache"}, {"id": 976, "start": 6068.24, "end": 6076.24, "text": "aber mittlerweile ist fast alles was es so im.NET Framework gibt Async aber GUI ist"}, {"id": 977, "start": 6076.24, "end": 6083.08, "text": "auch das beste Beispiel f\u00fcr zum Beispiel noch ein anderes Beispiel w\u00e4re zum Beispiel"}, {"id": 978, "start": 6083.08, "end": 6088.84, "text": "du hast irgendeinen Webrequest du hast irgendeinen Webrequest und du willst halt nicht dass der"}, {"id": 979, "start": 6088.84, "end": 6105.04, "text": "Webrequest zehn Sekunden h\u00e4ngt bei dein eigener Task reicht aber mit dem GUI l\u00e4sst"}, {"id": 980, "start": 6105.04, "end": 6111.72, "text": "ich glaube ich am besten am besten erkl\u00e4ren so wei\u00df jemand ob Rider einen D-Compiler dabei"}, {"id": 981, "start": 6111.72, "end": 6126.44, "text": "hat hat Rider einen Explore und Decode Assembly da kann ich euch das n\u00e4mlich zeigen was der mit"}, {"id": 982, "start": 6126.44, "end": 6135.32, "text": "dem Await macht ich habe keine Ahnung wie das funktioniert habe ich noch nie gemacht wenn man"}, {"id": 983, "start": 6135.32, "end": 6139.8, "text": "das n\u00e4mlich dekompiliert was.NET hier draus macht ist das immer noch ziemlich lesbar und"}, {"id": 984, "start": 6139.8, "end": 6157.08, "text": "man sieht was aus dem Await wird mit Rider irgendwas dekompilieren keine Ahnung kann man das?"}, {"id": 985, "start": 6157.08, "end": 6167.68, "text": "Ah das ja ja ok das ist gut das ist richtig gut das habe ich schon in ein paar Streams gesehen ok"}, {"id": 986, "start": 6167.68, "end": 6171.32, "text": "das machen wir jetzt mal also wir machen jetzt hier Task plupp wir kopieren uns jetzt mal den"}, {"id": 987, "start": 6171.32, "end": 6189.8, "text": "Kram rein Using System Threading glaube ich ne wo ist wo ist Task drinnen? Wei\u00df das gar nicht"}, {"id": 988, "start": 6189.8, "end": 6197.96, "text": "ich lasse das immer so wo ist dann Task drinnen? Using System Threading Task ist es glaube ich"}, {"id": 989, "start": 6197.96, "end": 6220.28, "text": "und was hat er hier f\u00fcr Schmerzen? Ich hab das noch nie verwendet geht das? Public Class C Await M ok dann machen wir das so, pluppieren wir das n\u00e4mlich hier rein"}, {"id": 990, "start": 6220.28, "end": 6244.68, "text": "Public kann das auch f\u00fcr mich formatieren Using System Threading Task und threading genau da kann man sich n\u00e4mlich sch\u00f6n angucken was der da draus macht so und jetzt noch die Methode die das ganze aufruft"}, {"id": 991, "start": 6250.88, "end": 6251.38, "text": "naja"}, {"id": 992, "start": 6256.88, "end": 6264.36, "text": "ok hier sieht man es guckt es sieht \u00fcbelst wie aus aber das ist was Await unter der Haube macht"}, {"id": 993, "start": 6264.36, "end": 6273.0, "text": "so hier ist das ist jetzt halt IL Code was rauskommt also sprich das zwischenkompilierte"}, {"id": 994, "start": 6273.0, "end": 6281.52, "text": "ding von von C-Sharp wo sind wir jetzt ok void main ist egal task test gut das hier ist meine"}, {"id": 995, "start": 6281.52, "end": 6289.56, "text": "meine testmethode hier und das hier ist plupp plupp ist relativ easy plupp sieht dekompiliert"}, {"id": 996, "start": 6289.56, "end": 6299.16, "text": "ungef\u00e4hr so aus wie plupp im source code also so so ungef\u00e4hr nicht so viel unterschied man"}, {"id": 997, "start": 6299.16, "end": 6306.24, "text": "erkennt es immer noch so aber hier wirds jetzt hier wirds jetzt interessanter man sieht hier"}, {"id": 998, "start": 6306.24, "end": 6312.72, "text": "oben schon dieses async state machine und das sieht jetzt schon ein bisschen anders aus das ist n\u00e4mlich"}, {"id": 999, "start": 6312.72, "end": 6321.76, "text": "die hier mit das ist die Methode also sprich Await plupp Print 1 Await plupp Print 2 Await plupp Print 2 fertig so und man sieht irgendwie"}, {"id": 1000, "start": 6321.76, "end": 6330.64, "text": "sieht diese Methode und diese so komplett anders aus warum weil der diese Methode quasi in einer"}, {"id": 1001, "start": 6330.64, "end": 6338.2, "text": "extra class wrapped und das ist die logik von Async und Await was hier oben reinkommt"}, {"id": 1002, "start": 6338.2, "end": 6349.28, "text": "also das hier ist quasi dies das ist diese klasse die regeneriert aus diesem also das hier ist mein"}, {"id": 1003, "start": 6349.28, "end": 6355.16, "text": "Async Await code wird das hier draus gemacht so und hier sieht man auch schon so ein bisschen die logik was"}, {"id": 1004, "start": 6355.16, "end": 6359.36, "text": "passiert da muss ich das jetzt gar nicht so sehr im detailer gucken 100 prozent alles kann ich euch"}, {"id": 1005, "start": 6359.36, "end": 6365.96, "text": "davon auch nicht erkl\u00e4ren er hat zumindest eine neue klasse generiert die Async state machine"}, {"id": 1006, "start": 6365.96, "end": 6372.44, "text": "implementiert so und move next das ist quasi so der iterator den er hier aufruft also sprich"}, {"id": 1007, "start": 6372.44, "end": 6380.84, "text": "ich rufe test auf er legt eine neue state machine an nach dinger die ich jetzt auch nicht alle"}, {"id": 1008, "start": 6380.84, "end": 6389.6, "text": "erkl\u00e4ren kann zumindest der erste das erste Await sieht man hier wo ist mein erstes Await"}, {"id": 1009, "start": 6389.6, "end": 6403.36, "text": "wo ist Print Result Moment wo ist mein console write line siehts ihr mal wo ist mein console"}, {"id": 1010, "start": 6403.36, "end": 6421.48, "text": "write line eins wo ist es hier ist mein console write line eins hier ist irgendwo mein console"}, {"id": 1011, "start": 6421.48, "end": 6433.28, "text": "write line zwei genau da geht hier rein in dieses switch und wenn der dann das ist ganz eklig"}, {"id": 1012, "start": 6433.28, "end": 6441.2, "text": "gebaut auch mit mit go tos und sonst was also sprich der geht in dieses switch rein und return"}, {"id": 1013, "start": 6441.2, "end": 6448.0, "text": "zwischendurch oder macht der irgendwelche go tos und sonst was also man sieht zwischendrin"}, {"id": 1014, "start": 6448.0, "end": 6455.36, "text": "immer der geht wieder raus also der der beendet die methode wirklich stimmt wo kann man auf dark"}, {"id": 1015, "start": 6455.36, "end": 6475.56, "text": "stellen o f mein zeug ist weg top warum ist mein zeug weg super toll ne zumindest ich hoffe man hat"}, {"id": 1016, "start": 6475.56, "end": 6482.04, "text": "es jetzt ein bisschen besser besser verstanden also sprich der macht gar nicht wirklich das hier"}, {"id": 1017, "start": 6482.04, "end": 6485.88, "text": "nacheinander sondern der macht jedes mal einen return wenn hier ein Await kommt wenn es noch nicht"}, {"id": 1018, "start": 6485.88, "end": 6490.8, "text": "fertig ist und dann springt er wieder zur\u00fcck rein es ist es ist ein bisschen komplizierter was was"}, {"id": 1019, "start": 6490.8, "end": 6500.0, "text": "man aber daran sch\u00f6n sieht ist dass Async Await reine compiler magic ist. Async Await ist nichts"}, {"id": 1020, "start": 6500.0, "end": 6506.8, "text": "was jetzt gro\u00dfartig da runtime wobei mittlerweile wahrscheinlich schon ich kann es euch nicht"}, {"id": 1021, "start": 6506.8, "end": 6513.64, "text": "genau sagen was da gro\u00dfartig runtime m\u00e4\u00dfig unterst\u00fctzt werden muss sondern das ist reine"}, {"id": 1022, "start": 6513.64, "end": 6529.68, "text": "compiler magic Async Await. Await hast du ja ja allerdings return das zu dem thread oben dr\u00fcber"}, {"id": 1023, "start": 6529.68, "end": 6538.8, "text": "den es nicht gibt also das ist ja hier schon main also das ist ja schon der main thread"}, {"id": 1024, "start": 6538.8, "end": 6548.48, "text": "da kann er nicht mehr weitermachen h\u00e4tte ich da jetzt noch mal was dr\u00fcber was aus dem anderen"}, {"id": 1025, "start": 6548.48, "end": 6553.36, "text": "task aufruft dann wird er da return aber hier muss er ja warten bis fertig ist weil hier will"}, {"id": 1026, "start": 6553.36, "end": 6557.12, "text": "ich ja vielleicht auch das ergebnis verwenden danach weil hier muss er sich ja dran halten an"}, {"id": 1027, "start": 6557.12, "end": 6563.28, "text": "die reinfolge ja wir k\u00f6nnten sonst jetzt ich wei\u00df nicht kann man das hier komplett rein kopieren"}, {"id": 1028, "start": 6563.28, "end": 6571.2, "text": "ne das funktioniert nicht oder stimmt das kann auch kein csharp 6 das kann auch kein csharp 6"}, {"id": 1029, "start": 6571.2, "end": 6589.48, "text": "neun dotnet f\u00fcnf csharp neun so ja siehst du aus dieser m\u00fcll kommt aus dem ganzen Async Await"}, {"id": 1030, "start": 6589.48, "end": 6607.72, "text": "hinten raus return state machine builder task ist ganz interessant aber ganz ehrlich man muss"}, {"id": 1031, "start": 6607.72, "end": 6613.6, "text": "es nicht \u00fcbertreiben das ist ja gerade auch eines der vorteile von csharp dass es gut verst\u00e4ndlich"}, {"id": 1032, "start": 6613.6, "end": 6621.6, "text": "ist ohne dass man sich die details jetzt so extrem anguckt zumindest was man sich bei Await"}, {"id": 1033, "start": 6621.6, "end": 6628.4, "text": "einfach merken kann ist dass ein Await im prinzip ein return Await ist also eigentlich ist es so"}, {"id": 1034, "start": 6628.4, "end": 6639.8, "text": "was hier wir haben \u00fcbrigens auch immer nicht weiter gemacht mit dotnet 5 csharp 9 ok gab's"}, {"id": 1035, "start": 6639.8, "end": 6652.0, "text": "irgendwelche anderen sachen ich wei\u00df es ehrlich gesagt nicht wie go to naja intern wenn die"}, {"id": 1036, "start": 6652.0, "end": 6655.56, "text": "irgendwelche compiler magic machen und das verhalten klar abgegrenzt ist was passiert"}, {"id": 1037, "start": 6655.56, "end": 6661.16, "text": "warum kein go to das w\u00e4re auch ohne go to eklig hab schon mal gefragt aber was h\u00e4ltst du von"}, {"id": 1038, "start": 6661.16, "end": 6672.2, "text": "co-routines in kotlin ich habe mit kotlin noch nie was gemacht ich bin quasi kotlin jungfrau"}, {"id": 1039, "start": 6672.2, "end": 6687.56, "text": "das ist kirby multithreading ist immer verwirrend ja korrekt k\u00f6nnte man keepers mit zwei faktor"}, {"id": 1040, "start": 6687.56, "end": 6697.92, "text": "erweitern wei\u00df das jemand keine ahnung wie gesagt also wollte ich ich habe es dir zu gut"}, {"id": 1041, "start": 6697.92, "end": 6704.36, "text": "erkl\u00e4rt wie ich konnte ich hoffe man hat man hat es halblich verstanden oder gut machen wir"}, {"id": 1042, "start": 6704.36, "end": 6711.04, "text": "weiter also positionen rekords ja jetzt machen wir dieses ganze async-await zeug mal wieder weg"}, {"id": 1043, "start": 6711.04, "end": 6714.76, "text": "um mal zu der eigentlichen sache zu kommen die wir heute ausbringen das hier finde ich ein"}, {"id": 1044, "start": 6714.76, "end": 6724.08, "text": "richtig nice feature positionen rekords was sagt er mir \u00fcberhaupt make class sealed ja stimmt also"}, {"id": 1045, "start": 6724.08, "end": 6729.76, "text": "positionen rekords finde ich poggers ich kann eine ganz kurze pr\u00e4gnante sache schreiben ohne"}, {"id": 1046, "start": 6729.76, "end": 6737.56, "text": "hier zigtausend sachen zu implementieren und rauskommt eine klasse die ich einfach als daten"}, {"id": 1047, "start": 6737.56, "end": 6747.28, "text": "container verwenden kann finde ich nice der immutable klasse wohlgemerkt gut machen wir mal weiter also"}, {"id": 1048, "start": 6747.28, "end": 6754.56, "text": "das haben wir uns angeguckt in it in it only setter haben wir uns auch angeguckt top level"}, {"id": 1049, "start": 6754.56, "end": 6760.56, "text": "statements jetzt kommt was f\u00fcr die python fans unter uns so muss man es jetzt machen"}, {"id": 1050, "start": 6760.56, "end": 6775.36, "text": "und man kann jetzt main top level machen das ist jetzt in valid C sharp programm"}, {"id": 1051, "start": 6775.36, "end": 6790.92, "text": "das funktioniert wie ihr seht ich sage doch das was f\u00fcr unsere python fans das"}, {"id": 1052, "start": 6790.92, "end": 6800.52, "text": "ist jetzt in valid C sharp programm allerdings unter der haube wir k\u00f6nnen uns das ganze mal"}, {"id": 1053, "start": 6800.52, "end": 6806.16, "text": "in diesem schapland aber schapland ist doch nicht dort net 5 aber es ist doch kein dotnet"}, {"id": 1054, "start": 6806.16, "end": 6831.16, "text": "5 kam in dotnet standard irgendwie umstellen geht das aber doch exzellent das macht der"}, {"id": 1055, "start": 6831.16, "end": 6838.16, "text": "C sharp compiler aus dem da also der macht ein ganz normales internal static class program"}, {"id": 1056, "start": 6838.16, "end": 6845.76, "text": "private static void main hello world raus also im prinzip wird das hier durch compiler magic"}, {"id": 1057, "start": 6845.76, "end": 6873.28, "text": "nur transferiert in ja so was da aber das wie gesagt das wird unsere python fans freuen"}, {"id": 1058, "start": 6873.28, "end": 6883.72, "text": "bei way was man nicht machen kann ist mehrere top level methods zu haben dann wei\u00df er n\u00e4mlich"}, {"id": 1059, "start": 6883.72, "end": 6892.32, "text": "nicht was davon main ist also wenn ich jetzt glaube ich neu noch eine zweite datei oder"}, {"id": 1060, "start": 6892.32, "end": 6899.76, "text": "so anlege ich habe ich in dem webkasten das geht nicht wobei das hier finde ich pers\u00f6nlich"}, {"id": 1061, "start": 6899.76, "end": 6911.28, "text": "ziemlich cool also man kann jetzt hier ganz normal dass die scharpe zeug machen das cw"}, {"id": 1062, "start": 6911.28, "end": 6922.2, "text": "lull die frage ist das kann ich erwarten ich kann sogar das ist ein erstes main das"}, {"id": 1063, "start": 6922.2, "end": 6930.8, "text": "ist doch mal was also f\u00fcr schnelle sachen ausprobieren ist das doch sehr nice das ist"}, {"id": 1064, "start": 6930.8, "end": 6937.56, "text": "jetzt well it's the sharp ohne ohne ganz viel boilerplate drumrum ziemlich cool kleine"}, {"id": 1065, "start": 6937.56, "end": 6944.32, "text": "\u00e4nderung man sieht eigentlich nur compiler magic also reine compiler magic da ist nix"}, {"id": 1066, "start": 6944.32, "end": 6955.2, "text": "runtime support aber aber coole sachen das sieht so ungewohnt sauber aus"}, {"id": 1067, "start": 6955.2, "end": 6979.2, "text": "aus jetzt mal eins f\u00fcr alle funktioniert gut ich glaube die katze ist an der t\u00fcr"}, {"id": 1068, "start": 5978.14, "end": 7012.64, "text": "jetzt legt sie sich auf den schrank bei mir und schl\u00e4ft gleich ja dann macht"}, {"id": 1069, "start": 7012.64, "end": 7020.44, "text": "das mal cico hast du dir eine neue katze geholt die habe ich jetzt schon \u00fcber ein jahr bei"}, {"id": 1070, "start": 7020.44, "end": 7031.96, "text": "die cico ja genau \u00fcbrigens \u00fcbrigens katze hei\u00dft cico was meint ihr ob es ist weibchen"}, {"id": 1071, "start": 7031.96, "end": 7045.04, "text": "oder m\u00e4nnlein cico also ich kann sagen es ist es ist ein grill es ist ein grill aber"}, {"id": 1072, "start": 7045.04, "end": 7050.0, "text": "sie hei\u00dft cico was irgendwie nicht so passt weil er m\u00fcsste nicht eigentlich cica hei\u00dfen"}, {"id": 1073, "start": 7050.0, "end": 7055.12, "text": "trans kender genau kenne kanzler soll jetzt auch cico kommt mich nicht so b\u00f6s an den"}, {"id": 1074, "start": 7055.12, "end": 7063.64, "text": "bist du nicht alles gut alles ist gut guck nicht so b\u00f6s meine katze ist beleidigt ja"}, {"id": 1075, "start": 7063.64, "end": 7078.32, "text": "genau ich habe assumed das hat sehr hat sehr aufgeregt ok so machen wir weiter also was"}, {"id": 1076, "start": 7078.32, "end": 7082.88, "text": "haben wir hier als n\u00e4chstes noch sch\u00f6nes top level sicherprogramm also das passt alles"}, {"id": 1077, "start": 7082.88, "end": 7085.6, "text": "das haben wir uns anguckt da gibt es glaube ich nicht so viel dazu zu sagen ich kann jetzt"}, {"id": 1078, "start": 7085.6, "end": 7096.0, "text": "mal die t\u00fcr wieder zumachen weil die katze hat sich auf den schrank gelegt"}, {"id": 1079, "start": 7096.0, "end": 7115.96, "text": "so nicht jetzt gerade auf dem schrank ob ich das bild das bild hier nicht drin so"}, {"id": 1080, "start": 7115.96, "end": 7144.04, "text": "legt sie gerade auf den schrank mich an ja ok schauen wir mal weiter moment man kann"}, {"id": 1081, "start": 7144.04, "end": 7156.8, "text": "jetzt komplett one liner machen ist das los den guck mal cute chat ajaja das ist g\u00fcltiges"}, {"id": 1082, "start": 7156.8, "end": 7174.96, "text": "die schaap jetzt einfach eine zeile ich sag doch die pyson fans freuen sich jetzt genau"}, {"id": 1083, "start": 7174.96, "end": 7178.96, "text": "only one file in die application may use top level statement also das hei\u00dft wenn ich jetzt"}, {"id": 1084, "start": 7178.96, "end": 7184.16, "text": "eine zweite datei anlege und auch so was reinschreibe probieren wir das mal aus was er dann macht"}, {"id": 1085, "start": 7184.16, "end": 7200.76, "text": "dann sagt er wahrscheinlich geht nicht omega lull"}, {"id": 1086, "start": 7200.76, "end": 7207.2, "text": "wieso ja weil er unter der haube da wieder eine ganz normale meinmethode draus macht"}, {"id": 1087, "start": 7207.2, "end": 7222.08, "text": "eigentlich tibet das ist reine compiler magic reine compiler magic so also was was gibt es"}, {"id": 1088, "start": 7222.08, "end": 7229.0, "text": "sonst noch neues das ist ein feature das ist jetzt f\u00fcr das da explodiert der kopf leute"}, {"id": 1089, "start": 7229.0, "end": 7236.12, "text": "ich sag es euch der platzt bei diesem feature das kapiert n\u00e4mlich auch nicht richtig das"}, {"id": 1090, "start": 7236.12, "end": 7247.52, "text": "ist total abgedreht was man als machen kann pattern matching enhancements also pattern"}, {"id": 1091, "start": 7247.52, "end": 7255.04, "text": "matching vielleicht ein bisschen mal ein bisschen was zu zeigen ist das wie in rust es ist mittlerweile"}, {"id": 1092, "start": 7255.04, "end": 7261.32, "text": "\u00e4hnlicher als \u00e4hnlicher wie in rust als vorher also zum beispiel so die einfachste pattern"}, {"id": 1093, "start": 7261.32, "end": 7266.32, "text": "matching geschichte kann man in dem if machen so was machen wir da f\u00fcr sch\u00f6nes beispiel"}, {"id": 1094, "start": 7266.32, "end": 7284.84, "text": "ok wir machen jetzt hier war gleich eins ich kann jetzt zum beispiel mit gucken if"}, {"id": 1095, "start": 7284.84, "end": 7298.84, "text": "das ist jetzt bescheuertes beispiel der zeit ist int das ist jetzt nat\u00fcrlich doof weil"}, {"id": 1096, "start": 7298.84, "end": 7304.52, "text": "ich habe hier oben ja selbst belegt das sagt ja auch es ist es ist es ist es ist es ist"}, {"id": 1097, "start": 7304.52, "end": 7311.28, "text": "always true oder so und das ist jetzt neue genau also ich kann sagen ist int und wenn"}, {"id": 1098, "start": 7311.28, "end": 7319.72, "text": "int ist wenn int wenn wenn i ein int ist dann schreiben wir den wert in b das ist jetzt"}, {"id": 1099, "start": 7319.72, "end": 7324.2, "text": "nat\u00fcrlich ziemlich sinnlos in dem beispiel was ich hier gezeigt habe so es wird es wird"}, {"id": 1100, "start": 7324.2, "end": 7335.96, "text": "noch advanceder es wird advanceder wenn wir einen switch draus machen switch so jetzt"}, {"id": 1101, "start": 7335.96, "end": 7339.16, "text": "kann man nat\u00fcrlich nicht jetzt kann man nat\u00fcrlich nicht cases generieren wenn wir machen wir"}, {"id": 1102, "start": 7339.16, "end": 7346.64, "text": "einen int draus ich glaube da kann man das besser zeigen so lul so emotes emotes emotes"}, {"id": 1103, "start": 7346.64, "end": 7364.04, "text": "int emotes ayaya monkaS lulw kekw so das reicht jetzt als beispiel switch emotes nee quatsch"}, {"id": 1104, "start": 7364.04, "end": 7377.56, "text": "ich muss ja erst mal was an deswegen im neuen top level verwirrt mich mega emotes ob geht"}, {"id": 1105, "start": 7377.56, "end": 7405.92, "text": "das nicht was ist happening was hat etwas okay das verstehe nicht warum geht das nicht"}, {"id": 1106, "start": 7405.92, "end": 7433.64, "text": "ob geht das nicht public ich glaube der compiler ist nicht magic genug ja ich glaube der compiler"}, {"id": 1107, "start": 7433.64, "end": 7449.4, "text": "ist echt nicht magic genug top level status must precede precede namespace and type declarations"}, {"id": 1108, "start": 7449.4, "end": 7454.76, "text": "ah ich kann keine neuen sachen anlegen okay da muss ich das so rum machen meinetwegen"}, {"id": 1109, "start": 7454.76, "end": 7462.64, "text": "so rum ist auch okay so ist auch okay so general switch labels so das ist das ist die klassische"}, {"id": 1110, "start": 7462.64, "end": 7469.72, "text": "art zu checken was denn beispielsweise gerade also wenn ich die und also mal angenommen"}, {"id": 1111, "start": 7469.72, "end": 7476.56, "text": "ich h\u00e4tte eine methode und ich kann unterschiedliche werte haben so da kann ich das quasi so die"}, {"id": 1112, "start": 7476.56, "end": 7482.36, "text": "klassische art zu checken okay ist das ist es ayaya ist es monkaS ist es lulw ist es"}, {"id": 1113, "start": 7482.36, "end": 7488.8, "text": "kekw oder so was in der richtung so die neue syntax ist jetzt quasi so was in der richtung"}, {"id": 1114, "start": 7488.8, "end": 7494.88, "text": "was jetzt schwierig zu zeigen ist ehrlich gesagt ihr macht immer anders wir machen"}, {"id": 1115, "start": 7494.88, "end": 7501.32, "text": "objekt objekt draus kann jetzt ja alles sein potenziell ja wenn ich das da als obje reinkriege"}, {"id": 1116, "start": 7501.32, "end": 7509.76, "text": "so das kann ich zum beispiel sagen okay das war value beste beste name aller zeiten das"}, {"id": 1117, "start": 7509.76, "end": 7522.16, "text": "kann ich mal sagen case value ist emotes oh fuck wie geht es weiter ich bin dazu low"}, {"id": 1118, "start": 7522.16, "end": 7532.68, "text": "brain f\u00fcr wie immer deshalb schreiben value ist emotes where ne when ach du gro\u00dfe kacke"}, {"id": 1119, "start": 7532.68, "end": 7553.44, "text": "emotes weh wenn weh ich krieg es nicht gebacken ich verwende das nicht so oft ich verwende"}, {"id": 1120, "start": 7553.44, "end": 7567.76, "text": "sich oft genug warum sollte man das tun warum man das tun soll ist um zu pr\u00fcfen was das"}, {"id": 1121, "start": 7567.76, "end": 7571.6, "text": "f\u00fcr ein objekt ist zum beispiel also mal angenommen ist das k\u00f6nnte den ins sein das"}, {"id": 1122, "start": 7571.6, "end": 7578.2, "text": "k\u00f6nnte den enum sein das k\u00f6nnte den string sein oder sonst was also ich kann zum beispiel"}, {"id": 1123, "start": 7578.2, "end": 7589.92, "text": "sagen if case ach nee im moment ist case ist so kann ich glaube ich mache oder ist string"}, {"id": 1124, "start": 7589.92, "end": 7605.44, "text": "b ging das so ich bin zu low brain daf\u00fcr wie ging das denn jetzt nochmal ok beispiel gucken"}, {"id": 1125, "start": 7605.44, "end": 7617.44, "text": "funktioniert das nicht wie sql synthax nee was du meinst ist link alter h\u00f6r mal auf"}, {"id": 1126, "start": 7617.44, "end": 7622.84, "text": "ich will euch erstmal das alte zeigen bevor wir jetzt komplett mein mein plot switch pattern"}, {"id": 1127, "start": 7622.84, "end": 7640.44, "text": "matching c sharp ja genau so wie sind sie so wie sind sie schon acht war case apple man"}, {"id": 1128, "start": 7640.44, "end": 7647.32, "text": "braucht das ist gar nicht ok das hei\u00dft ich kann jetzt \u00fcberpr\u00fcfen ist es ein string ich"}, {"id": 1129, "start": 7647.32, "end": 7653.48, "text": "kann jetzt \u00fcberpr\u00fcfen ist das ein emotes in am zum beispiel und so was ok ok genauso"}, {"id": 1130, "start": 7653.48, "end": 7660.12, "text": "war das so und dann kann ich noch sagen ok wenn value den string man ist ja objekt es"}, {"id": 1131, "start": 7660.12, "end": 7667.12, "text": "k\u00f6nnte ja alles sein so wenn es wenn es ein string ist dann kann ich sagen wenn string"}, {"id": 1132, "start": 7667.12, "end": 7677.96, "text": "dann wenn string contains a ja ja und dann gebe ich 123 aus warum ist das warum ist das"}, {"id": 1133, "start": 7677.96, "end": 7687.52, "text": "jetzt warum ist das denn hier jetzt eigentlich grau remove unreachable code der weil der"}, {"id": 1134, "start": 7687.52, "end": 7694.24, "text": "wei\u00df weil value der wei\u00df weil value ist nie ist nie string der ist writer ist zu writer"}, {"id": 1135, "start": 7694.24, "end": 7707.2, "text": "ist zu big brain daf\u00fcr writer ist zu schlau gut dann machen wir das jetzt anders public"}, {"id": 1136, "start": 7707.2, "end": 7723.0, "text": "void test objekt oh so ist gut jetzt jetzt ist writer nicht mehr jetzt ist writer dumm"}, {"id": 1137, "start": 7723.0, "end": 7727.52, "text": "jetzt kann writer das nicht mehr so also ich habe eine methode wo ich ein objekt reingeworfen"}, {"id": 1138, "start": 7727.52, "end": 7732.88, "text": "bekomme so jetzt kann ich \u00fcberpr\u00fcfen ok ist das objekt ein string und wenn es ein string"}, {"id": 1139, "start": 7732.88, "end": 7739.84, "text": "ist dann gucke ich auch ob es a ja ja enth\u00e4lt so dann kann ich noch gucken ok ist es ein"}, {"id": 1140, "start": 7739.84, "end": 7748.16, "text": "emote wenn es ein emote ist dann will ich gucken ob es gleich monka es ist so das ist so das"}, {"id": 1141, "start": 7748.16, "end": 7765.66, "text": "ist so ich habe sechs added"}, {"id": 1142, "start": 7765.66, "end": 7773.02, "text": "gibt es in C Sharp kein Object Slicing, ich wei\u00df nicht, was du mit Object Slicing meinst."}, {"id": 1143, "start": 7773.02, "end": 7783.62, "text": "Es gibt sowohl Slices \u00fcber Arbeitsspeicher, also \u00fcber Memory, es gibt Slices \u00fcber Arrays,"}, {"id": 1144, "start": 7783.62, "end": 7789.74, "text": "es gibt Range Operator f\u00fcr Arrays, das ist \u00fcbrigens auch ein super neues Feature, ein"}, {"id": 1145, "start": 7789.74, "end": 7793.38, "text": "tolles neues Feature von C Sharp 8 gewesen, was kaum jemand verwendet."}, {"id": 1146, "start": 7793.38, "end": 7807.84, "text": "Also wenn ich hier eine Liste habe, wenn ich jetzt eine Liste habe und ich m\u00f6chte von"}, {"id": 1147, "start": 7807.84, "end": 7815.38, "text": "dieser Liste das erste bis zum f\u00fcnften Element rausholen, dann kann ich sowas hier machen."}, {"id": 1148, "start": 7815.38, "end": 7831.9, "text": "Int B, naja, das ist neu seit C Sharp 8 glaube, das ist eigentlich richtig cool und total"}, {"id": 1149, "start": 7831.9, "end": 7832.9, "text": "underrated."}, {"id": 1150, "start": 7832.9, "end": 7839.54, "text": "In Ruby und Python verwendet das jeder, aber diese Range Operators ist in C Sharp total"}, {"id": 1151, "start": 7839.54, "end": 7848.5, "text": "wenig verbreitet, man kann sogar sagen, ich m\u00f6chte von eins bis zum Ende, da kenne ich"}, {"id": 1152, "start": 7848.5, "end": 7853.7, "text": "diese, da genau, ich glaube, ich bin mir nicht ganz sicher, ich m\u00f6chte vom ersten Element"}, {"id": 1153, "start": 7853.7, "end": 7859.5, "text": "bis eins vors Ende und solche Dinger, oder war es der Raute, nee es war glaube ich das,"}, {"id": 1154, "start": 7859.5, "end": 7866.54, "text": "also sprich das ist jetzt vom, oder vom Anfang, ach nee genau, das kann man auch weglassen,"}, {"id": 1155, "start": 7866.54, "end": 7873.06, "text": "aber das sieht mega kryptisch aus, das sagt, ich m\u00f6chte vom Anfang der Liste bis zum vorletzten"}, {"id": 1156, "start": 7873.06, "end": 7874.06, "text": "Element alles haben."}, {"id": 1157, "start": 7874.06, "end": 7883.46, "text": "Ich finde es ziemlich nice, aber total underrated in C Sharp."}, {"id": 1158, "start": 7883.46, "end": 7886.82, "text": "Ok, kommen wir mal zu diesem Pattern-Matching-Ged\u00f6ns zur\u00fcck."}, {"id": 1159, "start": 7886.82, "end": 7896.58, "text": "So, was man nat\u00fcrlich auch machen kann ist zu sagen, ok, ich will da noch gucken, Case"}, {"id": 1160, "start": 7896.58, "end": 7904.14, "text": "ist Null, ich glaube, das ging so, oder nee einfach nur Null, so und was jetzt neu ist,"}, {"id": 1161, "start": 7904.14, "end": 7911.18, "text": "weil ich jetzt gesehen habe, was neu ist, ich kann sagen, Not Null geht auch, hier sitzt"}, {"id": 1162, "start": 7911.18, "end": 7923.38, "text": "ja aber auf dem, ja ist, so, also das ist jetzt neu, dass man checken kann, ob es Not"}, {"id": 1163, "start": 7923.38, "end": 7929.66, "text": "Null ist, so ok, das war jetzt schon Big Brain Pattern-Matching, ach das kann man \u00fcbrigens"}, {"id": 1164, "start": 7929.66, "end": 7939.94, "text": "noch beliebig, beliebig weiter treiben, man kann glaube ich jetzt sogar checken, wir legen"}, {"id": 1165, "start": 7939.94, "end": 7948.14, "text": "nochmal so einen Rekord-Typ an, den wir vorher auch hatten, man kann jetzt sogar checken,"}, {"id": 1166, "start": 7948.14, "end": 7971.14, "text": "if ist das Person, so und jetzt kommt neue Big Brain Magic, alter Break, jetzt kann ich"}, {"id": 1167, "start": 7971.14, "end": 7978.14, "text": "mal gucken, ob das Person ist Max, so und das matcht jetzt nur, wenn es eine Person ist und"}, {"id": 1168, "start": 7978.14, "end": 7984.42, "text": "nur, wenn First Name Max ist, so und mit diesem, mit dieser Sorte Pattern-Matching kannst du"}, {"id": 1169, "start": 7984.42, "end": 7999.38, "text": "die abgrundtief h\u00e4sslichsten, kompliziertesten Konstrukte aller Zeiten bauen, da platzt euch"}, {"id": 1170, "start": 7999.38, "end": 8010.66, "text": "der Kopf und ich glaube, da kann man auch weitermachen, when, nee, geht nicht weiter,"}, {"id": 1171, "start": 8010.66, "end": 8023.74, "text": "aber kann man end, aber man kann sagen, end, geht das, nee das geht nicht, ok und das,"}, {"id": 1172, "start": 8023.74, "end": 8030.46, "text": "es wird noch viel abgedreht, also ich hab da Beispiele gesehen, wo die checken quasi,"}, {"id": 1173, "start": 8030.46, "end": 8037.54, "text": "es ist gr\u00f6\u00dfer, es ist kleiner, es ist gleich, so und man kann quasi hier drinnen auch nochmal"}, {"id": 1174, "start": 8037.54, "end": 8043.22, "text": "switchen, wir gucken uns, wir gucken uns mal die Beispiele an, also das ist jetzt wirklich"}, {"id": 1175, "start": 8043.22, "end": 8047.94, "text": "nur an der Oberfl\u00e4che gekratzt, was man damit machen kann, das ist das eindeutig, das Big"}, {"id": 1176, "start": 8047.94, "end": 8053.7, "text": "N\u00e4chste Feature von C sharp 9, so also das ist so der Klassiker, jetzt haben wir ja gerade"}, {"id": 1177, "start": 8053.7, "end": 8058.86, "text": "gemacht, gucken ob das ein Apple ist, ok, seit C sharp 7 geht das, ja das haben wir"}, {"id": 1178, "start": 8058.86, "end": 8067.82, "text": "gerade gemacht, Moment, das ist das falsche Dokument, so also jetzt kann man neues Pattern-Matching"}, {"id": 1179, "start": 8067.82, "end": 8078.7, "text": "machen, Type Patterns, Match a variable is a type, das machen wir hier, String, Klammer,"}, {"id": 1180, "start": 8078.7, "end": 8085.9, "text": "Patterns, Presence of Pattern Combination, Conjunction, End Patterns, All Patterns, Not"}, {"id": 1181, "start": 8085.9, "end": 8098.78, "text": "Patterns, Relational Pattern, ok was auch immer, so dann kann man jetzt solche Dinger machen,"}, {"id": 1182, "start": 8098.78, "end": 8109.46, "text": "is letter, ach du gro\u00dfe Schei\u00dfe, is letter C, also das ist wieder so eine, das ist eine"}, {"id": 1183, "start": 8109.46, "end": 8115.3, "text": "Methode mit Expression Body Dings, also im Prinzip k\u00f6nnte man das auch mit Klammern"}, {"id": 1184, "start": 8115.3, "end": 8119.7, "text": "schreiben, aber die haben sich gedacht, ey jetzt \u00fcbertreiben wir das richtig, jetzt"}, {"id": 1185, "start": 8119.7, "end": 8127.02, "text": "schreiben wir das nicht mit Klammern, jetzt schreiben wir das auch komplett so, Moment,"}, {"id": 1186, "start": 8127.02, "end": 8138.42, "text": "ist das eine Extension Method oder was, this Char, das ist eine Extension Method oder, deswegen"}, {"id": 1187, "start": 8138.42, "end": 8145.86, "text": "muss Static sein, Phoenix, das ist eine Extension Method, du hast weil du gerade gefragt hast"}, {"id": 1188, "start": 8145.86, "end": 8152.7, "text": "hier, das ist eine Extension Method, blo\u00df eine echt big brainste Schreibweise von einer"}, {"id": 1189, "start": 8152.7, "end": 8156.3, "text": "Extension Method aller Zeiten, also nochmal zur Erkl\u00e4rung, das ist auch ein, finde ich"}, {"id": 1190, "start": 8156.3, "end": 8162.42, "text": "ein ziemlich underrated, das ist die Sharp Feature und zwar, ich versuche euch das mal"}, {"id": 1191, "start": 8162.42, "end": 8167.18, "text": "zu zeigen, ich glaube das geht hier schlicht und ergreifend nicht drinnen, ich glaube"}, {"id": 1192, "start": 8167.18, "end": 8174.86, "text": "das kann man hier gar nicht, das darf man hier gar nicht drinnen machen, ok, ok, ich"}, {"id": 1193, "start": 8174.86, "end": 8183.5, "text": "zeige euch das mal, und zwar, wenn ihr hier ein Character anlegt, dann habt ihr ein gewisses"}, {"id": 1194, "start": 8183.5, "end": 8190.54, "text": "Set an Methoden f\u00fcr diesen Character, was ist, also Char ist ja eine eingebaute Klasse"}, {"id": 1195, "start": 8190.54, "end": 8194.7, "text": "in.NET oder in C-Sharp, also sprich, die k\u00f6nnt ihr nicht einfach \u00e4ndern, aber ihr"}, {"id": 1196, "start": 8194.7, "end": 8202.1, "text": "k\u00f6nnt die erweitern, n\u00e4mlich mit einer Extension Method und zwar, machen wir mal hier Public"}, {"id": 1197, "start": 8202.1, "end": 8209.66, "text": "Class Extensions, ich hoffe das darf man hier \u00fcberhaupt jetzt so machen, moment, \u00fcbrigens"}, {"id": 1198, "start": 8209.66, "end": 8213.7, "text": "so schon mal gar nicht, Extensions und dann machen wir das hier rein und dann darf man"}, {"id": 1199, "start": 8213.7, "end": 8227.22, "text": "das auch nicht, Moment, was, ah Static, Static, jetzt gehts, so und jetzt werdet ihr feststellen,"}, {"id": 1200, "start": 8227.22, "end": 8235.66, "text": "wenn ich jetzt auf A gehe, gibts da auf einmal Is Letter, obwohl das ein eingebauter Typ"}, {"id": 1201, "start": 8235.66, "end": 8242.38, "text": "in.NET ist, habe ich den gerade erweitert und das macht man mit einer Extension Method,"}, {"id": 1202, "start": 8242.38, "end": 8247.82, "text": "\u00fcbrigens das komplette Link sind Extension Methods, also das hier, das hier sind alles"}, {"id": 1203, "start": 8247.82, "end": 8253.02, "text": "Extension Methods, es ist nicht so, dass Array diesen ganzen Schei\u00df implementiert, List"}, {"id": 1204, "start": 8253.02, "end": 8256.66, "text": "diesen ganzen Schei\u00df implementiert, Dictionary diesen ganzen Schei\u00df implementiert, das sind"}, {"id": 1205, "start": 8256.66, "end": 8262.22, "text": "Extension Methods, ohne dass man den Typ an sich ver\u00e4ndern muss, sprich, ich habe jetzt"}, {"id": 1206, "start": 8262.22, "end": 8268.66, "text": "eine Extension Method f\u00fcr den Datentyp Char programmiert und this ist einfach nur bei"}, {"id": 1207, "start": 8268.66, "end": 8277.22, "text": "Extension Methods, der, die Syntax, das damit das aktuelle Objekt gemeint ist, also sprich,"}, {"id": 1208, "start": 8277.22, "end": 8281.14, "text": "hier wird quasi die aktuelle Instanz, wo ich drauf arbeite, reingeschoben, dass die"}, {"id": 1209, "start": 8281.14, "end": 8286.46, "text": "Methode damit arbeiten kann, Extension Methods ist auch ein ziemlich underratedes Ding, was"}, {"id": 1210, "start": 8286.46, "end": 8292.78, "text": "nicht so oft verwendet wird, was aber richtig praktisch ist, das ist \u00fcbrigens auch eine"}, {"id": 1211, "start": 8292.78, "end": 8298.54, "text": "der Sachen, die ich extrem vermisse in C++, gerade in C++ w\u00e4re es richtig cool, wenn"}, {"id": 1212, "start": 8298.54, "end": 8305.7, "text": "man eingebaute Datentypen erweitern k\u00f6nnte, zum Beispiel ist die C++ String Klasse, die"}, {"id": 1213, "start": 8305.7, "end": 8312.3, "text": "Standard String Klasse, unglaublich schei\u00dfe, die ist, die hat keine Ahnung von jeglichen"}, {"id": 1214, "start": 8312.3, "end": 8317.42, "text": "Unicode Sachen, gut C++ sollte sagen, m\u00fcssen sie auch nicht, es ist ja im Prinzip nur ein"}, {"id": 1215, "start": 8317.42, "end": 8324.58, "text": "sch\u00f6neres Byte Array, die hat keinerlei guten Methoden, also sprich, es gibt noch nicht"}, {"id": 1216, "start": 8324.58, "end": 8330.6, "text": "mal to upper to lower und so was in C++ und h\u00e4tte man in C++ Extension Methods, k\u00f6nnte"}, {"id": 1217, "start": 8330.6, "end": 8335.22, "text": "man das wunderbar machen, hat man nicht, nee, nee, das muss nicht Extensions hei\u00dfen, das"}, {"id": 1218, "start": 8335.22, "end": 8340.3, "text": "kann auch so hei\u00dfen, vollkommen egal wie das hei\u00dft, wie du das nennst, ist egal, das ist"}, {"id": 1219, "start": 8340.3, "end": 8352.02, "text": "reine optische Sache, reine Optik, kannst du nennen wie du willst, kannst du sagen Omega"}, {"id": 1220, "start": 8352.02, "end": 8372.34, "text": "Lul Klasse oder Ayayaya Poggers, bin ich Pegas, Poggers, Keck www kann das hei\u00dfen, so und"}, {"id": 1221, "start": 8372.34, "end": 8378.46, "text": "das ist jetzt anscheinend diese neue Syntax f\u00fcr Pattern Matching und das ist wirklich"}, {"id": 1222, "start": 8378.46, "end": 8386.58, "text": "bisschen Mind Blown, also sprich, was es macht, kann ich erkennen, aber es ist schon echt"}, {"id": 1223, "start": 8386.58, "end": 8389.66, "text": "Hardcore, \u00fcbrigens wir k\u00f6nnen es ein bisschen sch\u00f6ner machen, wir machen jetzt erstmal"}, {"id": 1224, "start": 8389.66, "end": 8395.82, "text": "eine normale Methode draus, ja, erstmal nur mal, dass man so Busy Busy Busy besser lesen"}, {"id": 1225, "start": 8395.82, "end": 8407.74, "text": "kann, ok, jetzt erkennt man schon mal, dass es eine Methode ist, ja, das ist eine gute"}, {"id": 1226, "start": 8407.74, "end": 8416.82, "text": "Frage, ich w\u00fcrde sagen es gibt einen Compiler Fehler, ich habe das noch nie ausprobiert,"}, {"id": 1227, "start": 8416.82, "end": 8427.34, "text": "ich w\u00fcrde sagen es gibt einen Compiler Fehler, wenn die exakt gleich ist, nope, ok, ich sollte"}, {"id": 1228, "start": 8427.34, "end": 8435.06, "text": "es vielleicht anders machen, wir machen so noch ein bisschen anders, ok, es gibt keinen"}, {"id": 1229, "start": 8435.06, "end": 8451.74, "text": "Compiler Fehler, ich habe keine Ahnung, welche davon genommen wird, ich habe keine Ahnung,"}, {"id": 1230, "start": 8451.74, "end": 8460.42, "text": "beides, ah, jetzt wird er aber meckern, dass er nicht wei\u00df, was er aufrufen soll, genau,"}, {"id": 1231, "start": 8460.42, "end": 8490.14, "text": "ah, Moment, was mache ich verkehrt?"}, {"id": 1232, "start": 8490.14, "end": 8504.78, "text": "Ach, Moment, Moment, Schwachsinn, ich muss ja da gar nichts rein machen, das ist ja die"}, {"id": 1233, "start": 8504.78, "end": 8516.3, "text": "Referenz auf sich selber, ah, guck, jetzt sagt er, es ist doppeldeutig, also sprich"}, {"id": 1234, "start": 8516.3, "end": 8522.34, "text": "nicht das Anlegen von einer mehrdeutigen Extension-Message f\u00fchrt zum Compiler-Fehler, sondern das Aufrufen"}, {"id": 1235, "start": 8522.34, "end": 8528.26, "text": "einer mehrdeutigen Extension-Message f\u00fchrt zum Compiler-Fehler, er sagt halt keine Ahnung,"}, {"id": 1236, "start": 8528.26, "end": 8533.58, "text": "was ich nehmen soll, die Implementierung aus Iaiya Pogas Keg WWW oder die Implementierung"}, {"id": 1237, "start": 8533.58, "end": 8540.78, "text": "aus Iaiya Pogas Keg WWW 2, nat\u00fcrlich empfehle ich jedem seine Klassen auch immer so sch\u00f6n"}, {"id": 1238, "start": 8540.78, "end": 8546.9, "text": "zu nennen, wie hier, wusste ich auch noch nicht, habe ich mir das noch nicht ausprobiert,"}, {"id": 1239, "start": 8546.9, "end": 8555.34, "text": "gut zu wissen, so, aber das hier ist wirklich Next Level Shit, Alter, is letter, C is gr\u00f6\u00dfer"}, {"id": 1240, "start": 8555.34, "end": 8562.14, "text": "a and kleiner z or gr\u00f6\u00dfer a and kleiner, ach du gro\u00dfe Schei\u00dfe, in dem Fall ist das"}, {"id": 1241, "start": 8562.14, "end": 8566.66, "text": "ja noch klar, aber ich wei\u00df genau, dass die Leute das Zweck empfremden werden, bis zum"}, {"id": 1242, "start": 8566.66, "end": 8577.34, "text": "geht nicht mehr, was f\u00fcr ein Casing, Twitch Chat Case, Twitch Case hat die, die hat kein"}, {"id": 1243, "start": 8577.34, "end": 8590.34, "text": "Camel Case, kein K-Bub Case, kein Pascal Case, die hat Twitch Case, mal gucken, ob die noch"}, {"id": 1244, "start": 8590.34, "end": 8604.22, "text": "mehr am Beispiel, ach du Schei\u00dfe, boah, ey, what, mein, was zum Teufel, bin ich sehend,"}, {"id": 1245, "start": 8604.22, "end": 8619.1, "text": "das sieht aus wie Opfoskated, ja, das sieht wirklich aus wie, ach du Schei\u00dfe, also, ich"}, {"id": 1246, "start": 8619.1, "end": 8624.38, "text": "meine, man erkennt, was er macht, er guckt, ob C und dann ist es hier kropiert, ok, gr\u00f6\u00dfer"}, {"id": 1247, "start": 8624.38, "end": 8631.86, "text": "a, ein kleiner gleich z oder das, das oder Punkt oder Komma, boah, fuck, ok, das ist"}, {"id": 1248, "start": 8631.86, "end": 8636.5, "text": "jetzt neu, das habe ich euch ja schon gezeigt, dass man checken kann, is not null, das ist"}, {"id": 1249, "start": 8636.5, "end": 8642.22, "text": "tats\u00e4chlich richtig gut, glaubt man gar nicht, aber mal so als Beispiel, man konnte fr\u00fcher"}, {"id": 1250, "start": 8642.22, "end": 8649.26, "text": "checken, Case null, man konnte nicht checken, Case not null, das hei\u00dft, man musste immer,"}, {"id": 1251, "start": 8649.26, "end": 8653.9, "text": "ich wei\u00df gar nicht, ob man das im Case \u00fcberhaupt machen kann, man musste irgendwelche komischen"}, {"id": 1252, "start": 8653.9, "end": 8660.9, "text": "Konstrukte bauen, um zu checken, ob es, ob es not null ist, wenn man das in einem Patternmatching"}, {"id": 1253, "start": 8660.9, "end": 8669.5, "text": "verwenden will, also man muss zum Beispiel gucken, hier kann, if a is not null, kann"}, {"id": 1254, "start": 8669.5, "end": 8680.42, "text": "man jetzt machen, is not null, ne, wie, das geht immer noch nicht, ah, Moment, das geht"}, {"id": 1255, "start": 8680.42, "end": 8688.5, "text": "nicht, weil es not nullable ist, Objekt, ich nehme jetzt einfach, oh, das haben wir"}, {"id": 1256, "start": 8688.5, "end": 8693.3, "text": "doch hier oben, genau, das kann man jetzt machen, das ging letztes die Sharp Version"}, {"id": 1257, "start": 8693.3, "end": 8696.98, "text": "nicht, da gab es das not Keyword nicht an der Stelle, da musste man dann solche Dinger"}, {"id": 1258, "start": 8696.98, "end": 8704.86, "text": "hier machen, is null, not, oder so, ich krieg die Syntax Tasche schon gar nicht mehr hin"}, {"id": 1259, "start": 8704.86, "end": 8712.06, "text": "aus dem Kopf, irgendwie sowas musste man da, musste man letztes die Sharp Version machen,"}, {"id": 1260, "start": 8712.06, "end": 8716.66, "text": "hat kein Mensch benutzt, so und jetzt kann man sagen, is not, is not null, ist ein bisschen"}, {"id": 1261, "start": 8716.66, "end": 8722.86, "text": "sch\u00f6ner, ja, man muss \u00fcbrigens sagen, dass es an der Stelle nat\u00fcrlich, ah guck mal hier,"}, {"id": 1262, "start": 8722.86, "end": 8726.38, "text": "der Chat ist big brain, er muss nat\u00fcrlich sagen, dass an der Stelle macht es jetzt relativ"}, {"id": 1263, "start": 8726.38, "end": 8730.86, "text": "wenig Sinn, genau so ging das, ist h\u00e4sslich wie die Nacht, an der Stelle macht das wenig"}, {"id": 1264, "start": 8730.86, "end": 8736.02, "text": "Sinn, weil hier k\u00f6nnte ich ja auch einfach \u00fcberpr\u00fcfen, ah, is oh, gleich, gleich null,"}, {"id": 1265, "start": 8736.02, "end": 8740.86, "text": "ah, das w\u00e4re hier die, oder ungleich null, das w\u00e4re hier die einfache Variante, aber"}, {"id": 1266, "start": 8740.86, "end": 8752.22, "text": "das kann ich halt nicht in Bestandteil von so einem Pattern Matching Ged\u00f6ns machen,"}, {"id": 1267, "start": 8752.22, "end": 8760.54, "text": "so Performance, okay, sie sparen sich gr\u00f6\u00dfere Beispiele daf\u00fcr, also ich hab Beispiele"}, {"id": 1268, "start": 8760.54, "end": 8765.34, "text": "gesehen davon, das war abartig, was die Leute hier mitgemacht haben, ich versuch's euch"}, {"id": 1269, "start": 8765.34, "end": 8770.34, "text": "mal zu zeigen, ich hab auf YouTube ein Video gesehen, wo sich die Sharp 9 vorgestellt hat"}, {"id": 1270, "start": 8770.34, "end": 8778.7, "text": "und da hatten die den Pattern Matching, das war ein ziemlich langes Video, Pattern Matching,"}, {"id": 1271, "start": 8778.7, "end": 8792.14, "text": "guck mal was der f\u00fcr ein Beispiel drin hat, siehste Leute, es wird schon ekliger, du kannst"}, {"id": 1272, "start": 8792.14, "end": 8798.38, "text": "n\u00e4mlich nicht nur ne Switch machen, du kannst n\u00e4mlich auch irgendwie auf, als Expression"}, {"id": 1273, "start": 8798.38, "end": 8804.02, "text": "switchen, also kein Switch Statement, sondern du kannst jetzt ne Switch Expression verwenden,"}, {"id": 1274, "start": 8804.02, "end": 8813.7, "text": "dann wird's schon ekeliger, guckt euch das mal an hier, also das hier war noch poggers"}, {"id": 1275, "start": 8813.7, "end": 8820.02, "text": "lesbar was wir hier gehabt haben, was ist der Vorteil, ja das muss ich glaube ich im einzigen,"}, {"id": 1276, "start": 8820.02, "end": 8826.98, "text": "im einzelnen Fall rausstellen, ja Switch Expression sind die Sharp 8, das ist richtig, ja also"}, {"id": 1277, "start": 8826.98, "end": 8833.18, "text": "die m\u00f6glichen, man kann jetzt mehr mitmachen, der Switched auf Return, genau, also sprich"}, {"id": 1278, "start": 8833.18, "end": 8839.7, "text": "der Switched, der nimmt, der setzt quasi das was hier rauskommt dann da ein, also man kann"}, {"id": 1279, "start": 8839.7, "end": 8843.54, "text": "quasi Variablen damit irgendwie bef\u00fcllen dann oder so, ich verwende das so gut wie"}, {"id": 1280, "start": 8843.54, "end": 8852.66, "text": "nie, muss ich ehrlich sagen, ich will aber mal das offizielle Video mir angucken, das"}, {"id": 1281, "start": 8852.66, "end": 8866.7, "text": "war wirklich extrem Big Brain, wie hei\u00dft der Typ, Metz, Into the Future, genau, das ist"}, {"id": 1282, "start": 8866.7, "end": 8871.38, "text": "der Oberst die Sharp, die Sharp 8, ach Leute \u00fcbrigens, hab ich es euch eigentlich schon"}, {"id": 1283, "start": 8871.38, "end": 8881.58, "text": "gezeigt, pass mal auf jetzt kommt's, die hat ne Konferenz und ich hab ne Frage gestellt"}, {"id": 1284, "start": 8881.58, "end": 8892.3, "text": "in der Konferenz, ich hab ne Frage gestellt in der C-Sharp, in der.NET, in der.NET,"}, {"id": 1285, "start": 8892.3, "end": 8896.78, "text": ".NET 5 Release Konferenz, hab ich ne Frage gestellt, die m\u00fcssen wir uns jetzt mal anh\u00f6ren."}, {"id": 1286, "start": 8896.78, "end": 8914.86, "text": "It's updating and not, there we go, can we use emojis in Variablen?"}, {"id": 1287, "start": 8914.86, "end": 8916.3, "text": "Alright guys, I'll let you get back to it."}, {"id": 1288, "start": 8916.3, "end": 8937.1, "text": "Und wisst ihr was das beste ist, Moment, Moment, ich muss euch das andere noch zeigen, wisst"}, {"id": 1289, "start": 8937.1, "end": 8943.94, "text": "ihr was das beste ist, das war ja die \u00fcbelste Trollfrage \u00fcberhaupt, ja und ich hab das"}, {"id": 1290, "start": 8943.94, "end": 8947.94, "text": "auch nur zum Trollen geschrieben, nicht weil ich, weil ich wirklich wollte, dass sie das"}, {"id": 1291, "start": 8947.94, "end": 8953.58, "text": "beantworten, aber jetzt kommt's, wartet mal, guckt euch mal die Antwort an, ich muss die"}, {"id": 1292, "start": 8953.58, "end": 8962.06, "text": "Antwort suchen, wartet mal, wo ist die Antwort, so viele Tweets, sticks out for Harambee,"}, {"id": 1293, "start": 8962.06, "end": 8990.1, "text": "Alter, ja, ja, Tweet, ich hab ne 25 Dollar Giftcard mit dieser Frage gewonnen, das ist"}, {"id": 1294, "start": 8990.1, "end": 8998.7, "text": "nicht geil, ich hab die \u00fcbelste Trollfrage gestellt, die haben die Trollfrage beantwortet"}, {"id": 1295, "start": 8998.7, "end": 9008.82, "text": "und ich hab noch ne 25 Dollar Giftcard gewonnen, so kann's gehen, Alter, nein, das sind Ami"}, {"id": 1296, "start": 9008.82, "end": 9016.7, "text": "25,00, h\u00e4tt ich 2500 gewonnen, h\u00e4tt ich auch nichts dagegen gesagt, hei\u00dft die Singleton,"}, {"id": 1297, "start": 9016.7, "end": 9038.3, "text": "ja, die hei\u00dft Singleton mit Nachname, hat mich auch erstmal voll \u00fcberrascht, ja, tja"}, {"id": 1298, "start": 9038.3, "end": 9043.26, "text": "und nat\u00fcrlich, wenn die so ein Bild mit Maske und so drin hat, ich hab mal nach der gegoogelt,"}, {"id": 1299, "start": 9043.26, "end": 9052.94, "text": "die sieht echt h\u00fcbsch aus, m\u00fcsst mal googeln danach, Microsoft Stonks Frau, naja, aber"}, {"id": 1300, "start": 9052.94, "end": 9057.78, "text": "schon nice, oder, 25 Dollar Giftcard und Trollfrage beantwortet, besser geht's doch eigentlich"}, {"id": 1301, "start": 9057.78, "end": 9065.3, "text": "gar nicht, ok, ich wollt euch jetzt ja das Beispiel mit Pattern Matching zeigen, was"}, {"id": 1302, "start": 9065.3, "end": 9070.62, "text": "sie hier vorgestellt haben, also das ist der Ober C Sharp Language Designer, seitdem es"}, {"id": 1303, "start": 9070.62, "end": 9074.54, "text": "der Anders Halsberg nicht mehr macht, der ist es ja nicht mehr, der wartet, dass der"}, {"id": 1304, "start": 9074.54, "end": 9079.82, "text": "ist die Sharp Erfinder, ich wei\u00df gar nicht, ob ihn Halsberg ausspricht oder Hilsberg,"}, {"id": 1305, "start": 9079.82, "end": 9102.82, "text": "Pattern Matching, Pattern Matching, Gibt kein Pattern Matching, habt ihr das doch irgendwo"}, {"id": 1306, "start": 9102.82, "end": 9123.58, "text": "gesehen, hier vielleicht, die hatten ein richtig gutes Beispiel was Pattern Matching angeht,"}, {"id": 1307, "start": 9123.58, "end": 9132.54, "text": "so ein richtig langes, total abartiges Beispiel, wo ich mir gedacht hab, Monka S, da blickste"}, {"id": 1308, "start": 9132.54, "end": 9140.42, "text": "dann mal durch, das war ein Beispiel mit irgendeiner Maut, mit irgendeiner LKW Maut und Berufsverkehr"}, {"id": 1309, "start": 9140.42, "end": 9148.26, "text": "war das Beispiel, vielleicht kennt ihr einer das Video, total abartig, ey hier ist es nicht"}, {"id": 1310, "start": 9148.26, "end": 9172.46, "text": "drin, ah die Inder sind nat\u00fcrlich auch am Start, das hier, war das das hier, ok die"}, {"id": 1311, "start": 9172.46, "end": 9183.7, "text": "arbeiten sich noch in Record Types ab, hier, hier, das geht ab hier, genau, Return Vehicle"}, {"id": 1312, "start": 9183.7, "end": 9199.5, "text": "Switch, Bus, boah, da krieg ich mir Angst zu tun, wenn ich sowas sehe, und das ist noch"}, {"id": 1313, "start": 9199.5, "end": 9207.78, "text": "ein Beispiel was gut lesbar ist, also man kann glaube ich sogar switchen in einem Switch,"}, {"id": 1314, "start": 9207.78, "end": 9213.46, "text": "ja guck hier, also ich sag, also das erste ist, so wie ich das hier mache, ist es ja"}, {"id": 1315, "start": 9213.46, "end": 9218.7, "text": "noch ne normale Statement, so ein ganz normales Switch Statement, ich kann allerdings auch"}, {"id": 1316, "start": 9218.7, "end": 9224.14, "text": "sagen ok, ich will, keine Ahnung, ich return jetzt hier ein Int und um rauszubekommen was"}, {"id": 1317, "start": 9224.14, "end": 9237.34, "text": "f\u00fcr ein Int ich returnen will, sag ich jetzt, return, dann switch, ne, Switch, ne, genau,"}, {"id": 1318, "start": 9237.34, "end": 9247.1, "text": "return, ach du schei\u00dfe, ich kann nicht so ein Tag sein, ich mach, ok, return, v, switch"}, {"id": 1319, "start": 9247.1, "end": 9256.82, "text": "und dann kann ich hier drinnen switchen, ne, muss ich v machen, ich wei\u00df gar nicht, ok,"}, {"id": 1320, "start": 9256.82, "end": 9262.14, "text": "ich wei\u00df, ach ne, ich switch, ich brauch irgendwas worauf ich switchen kann, ok, o, o, switch"}, {"id": 1321, "start": 9262.14, "end": 9274.5, "text": "of o, ok, so, das hei\u00dft jetzt return ich, je nach, je nachdem was o ist, oh, gibt es"}, {"id": 1322, "start": 9274.5, "end": 9297.46, "text": "Tiefenlimitationen, so wie ich die kennen nicht, so, so, also, nehmen wir mal jetzt"}, {"id": 1323, "start": 9297.46, "end": 9304.5, "text": "irgendwie sowas, keine Ahnung, ich hab hier, switch ist ein Int, so, und dann kann ich"}, {"id": 1324, "start": 9304.5, "end": 9318.86, "text": "jetzt quasi gucken, ist das gr\u00f6\u00dfer als 3000, ne, ist das, ne, wie mach ich denn das jetzt,"}, {"id": 1325, "start": 9318.86, "end": 9336.18, "text": "ist das, ist das kleiner als 3000, dann, ach du kacke, ich bin da zu dumm f\u00fcr, muss ich"}, {"id": 1326, "start": 9336.18, "end": 9353.98, "text": "jetzt sowas machen, eins, und dann, kleiner, 3000 oder so, ne, ok, ich, klammern, wie benutze"}, {"id": 1327, "start": 9353.98, "end": 9362.78, "text": "ich das \u00fcberhaupt, ah, ich wei\u00df gar nicht wie es funktioniert, gibt es keine Interfaces,"}, {"id": 1328, "start": 9362.78, "end": 9365.98, "text": "ich hab doch klar, aber das ist halt, ich wei\u00df noch nicht mal was ich \u00fcberhaupt machen"}, {"id": 1329, "start": 9365.98, "end": 9382.74, "text": "muss, was, kleiner, kleiner, 3000, und dann, eins, ah, aber ich kann doch auch sagen, kleiner"}, {"id": 1330, "start": 9382.74, "end": 9398.26, "text": "3000, end, gr\u00f6\u00dfer als 5000, ne, geht das nicht, ach so, end geht nicht, oh, muss es"}, {"id": 1331, "start": 9398.26, "end": 9408.7, "text": "sein, huiuiuiuiuiui, \u00fcbrigens, wir k\u00f6nnen es noch, wir k\u00f6nnen es noch ganz abgedrehter"}, {"id": 1332, "start": 9408.7, "end": 9414.34, "text": "werden, wir k\u00f6nnen sagen, objekt, ich geb nen objekt zur\u00fcck, ok, ich geb nen int zur\u00fcck,"}, {"id": 1333, "start": 9414.34, "end": 9423.66, "text": "ich geb eins zur\u00fcck, wenn es kleiner 3000 oder gr\u00f6\u00dfer 5000 ist, so, oder ich geb ein,"}, {"id": 1334, "start": 9423.66, "end": 9432.22, "text": "\u00e4hm, genau, new, was machen wir denn, new, string, ne, ergibt eigentlich keinen Sinn,"}, {"id": 1335, "start": 9432.22, "end": 9445.58, "text": "welche Syntax ist das hier, ok, ok, ok, oah, ey, ich bin, ok, ok, h\u00e4, monka giga, ok,"}, {"id": 1336, "start": 9445.58, "end": 9450.9, "text": "Bus, im Bus, ich kann Bus zur\u00fcckgeben, Bus, kann ich, kann ich, kann ich auch sowas machen,"}, {"id": 1337, "start": 9450.9, "end": 9458.02, "text": "ok, es ist gr\u00f6\u00dfer als 10.000, gr\u00f6\u00dfer als 10.000, und dann geb ich jetzt nen string"}, {"id": 1338, "start": 9458.02, "end": 9479.62, "text": "zur\u00fcck, geht das auch, oder muss der, ah, ne, ok, ok, der return, ne, komm ma, ok, komm"}, {"id": 1339, "start": 9479.62, "end": 9489.82, "text": "ma, komm ma, pattern has already been handled, achso, oder gr\u00f6\u00dfer 5000, ja ok, das ist klar,"}, {"id": 1340, "start": 9489.82, "end": 9496.02, "text": "also kleiner, kleiner, kleiner 10.000, ok, kleiner 10.000, alles klar, \u00e4hm, ist zwei,"}, {"id": 1341, "start": 9496.02, "end": 9498.86, "text": "an string kann ich ja nicht, doch ich kann auch an string zur\u00fcckgehen, na gut, es ist"}, {"id": 1342, "start": 9498.86, "end": 9513.14, "text": "ein Objekt, ok, das wird, das wird kompliziert, so, und da kann ich jetzt noch, da noch andere"}, {"id": 1343, "start": 9513.14, "end": 9517.74, "text": "Checks drinne einbauen, oder wie, also wenn wir jetzt zum Beispiel diesen record type"}, {"id": 1344, "start": 9517.74, "end": 9522.94, "text": "da unten nehmen, ich hab doch irgendwie record person, so, person, also kann ich sagen, person,"}, {"id": 1345, "start": 9522.94, "end": 9538.38, "text": "ach ne, ich muss sagen, kleiner, kleiner dem, oh, das ist mir zu big brain, und dann kann"}, {"id": 1346, "start": 9538.38, "end": 9551.34, "text": "ich ne person zur\u00fcckgeben, oder wie, new person, ja, funktioniert, kann ich jetzt darauf"}, {"id": 1347, "start": 9551.34, "end": 9563.98, "text": "wieder switchen, kann ich darauf wieder switchen, geht das jetzt, ne, oder, das, das w\u00e4re dann"}, {"id": 1348, "start": 9563.98, "end": 9570.42, "text": "glaube ich dann doch, wobei doch, das geht doch, oder, ach ne, ne, ne, ne, das geht nur,"}, {"id": 1349, "start": 9570.42, "end": 9584.9, "text": "wenn das, das ist, was da, was da reingegeben wird, oder, also quasi switch, ach, guck mal,"}, {"id": 1350, "start": 9584.9, "end": 9588.62, "text": "das kann, das kann ich nicht einmal richtig formatieren, das kann ich nicht einmal richtig"}, {"id": 1351, "start": 9588.62, "end": 9599.86, "text": "formatieren, so abgedreht ist das, generative patterns, kann ich nicht, boah, ist das, ok,"}, {"id": 1352, "start": 9599.86, "end": 9606.14, "text": "ich geb zu, dass, ok, man kann abartige Sachen mit konstruieren, zumindest das Beispiel ist"}, {"id": 1353, "start": 9606.14, "end": 9611.38, "text": "das, was ich euch zeigen wollte, also eigentlich richtig cool, was man damit machen kann, aber"}, {"id": 1354, "start": 9611.38, "end": 9629.58, "text": "es wird schon schnell, also man wechselt schnell in den, in den big brain modus, ich find's"}, {"id": 1355, "start": 9629.58, "end": 9634.82, "text": "auch cool, ja, ich find's richtig nice, also die ganzen funktionalen programmierer dudes"}, {"id": 1356, "start": 9634.82, "end": 9643.22, "text": "hier, die freuen sich jetzt in ast ab, ach ja, das gibt's ja auch noch, stimmt, es gibt"}, {"id": 1357, "start": 9643.22, "end": 9646.62, "text": "ja noch mehr neue features, sind sogar ein paar ganz coole mit dabei, halten wir uns"}, {"id": 1358, "start": 9646.62, "end": 9652.26, "text": "jetzt mal nicht zu lange an abgedrehtem pattern matching zeug auf, genau, es gibt native sized"}, {"id": 1359, "start": 9652.26, "end": 9657.1, "text": "ints, gut, das ist was, was ich relativ selten brauchen werde, das braucht man wahrscheinlich"}, {"id": 1360, "start": 9657.1, "end": 9664.62, "text": "bei performance kritischen sachen, also sprich, ein int auf ein 32 spit system ist halt, dann,"}, {"id": 1361, "start": 9664.62, "end": 9672.94, "text": "also native int ist dann auf ein 32 spit system als 32 spit und 64 spit system, ok, bestimmt"}, {"id": 1362, "start": 9672.94, "end": 9680.62, "text": "f\u00fcr native sachen performancem\u00e4\u00dfig ganz gut, dann haben wir noch ein bisschen andere sachen,"}, {"id": 1363, "start": 9680.62, "end": 9688.18, "text": "die jetzt nicht so spannend sind, fit and finish features, also es gibt jetzt diese"}, {"id": 1364, "start": 9688.18, "end": 9695.94, "text": "m\u00f6glichkeit hier und das find ich eigentlich recht nice, also man kann jetzt, man kann"}, {"id": 1365, "start": 9695.94, "end": 9698.78, "text": "jetzt die kurzvariante schreiben, also ich zeige euch jetzt mal wof\u00fcr ich denke, dass"}, {"id": 1366, "start": 9698.78, "end": 9711.1, "text": "man das gut verwenden kann, so, machen wir mal den kram hier weg und das ist void und"}, {"id": 1367, "start": 9711.1, "end": 9722.3, "text": "das ding hier will, keine ahnung, ein i enumerable von int, so, list, immer und man kann jetzt"}, {"id": 1368, "start": 9722.3, "end": 9731.26, "text": "die liste, also bisher hat man die liste so angelegt, list gleich new lists int, was man"}, {"id": 1369, "start": 9731.26, "end": 9735.78, "text": "jetzt machen kann ist, aber das ergibt da noch wenig sinn an der stelle, was man jetzt"}, {"id": 1370, "start": 9735.78, "end": 9744.7, "text": "machen kann ist das hier, also der ist jetzt quasi so schlau und erkennt, ok, wenn der"}, {"id": 1371, "start": 9744.7, "end": 9754.22, "text": "hier new macht, dann will der wahrscheinlich ne list int haben, das ist insofern ganz cool,"}, {"id": 1372, "start": 9754.22, "end": 9760.14, "text": "wenn man klassen macht, ich hoffe, wir m\u00fcssen mal kurz gucken, ob das da geht, so, also"}, {"id": 1373, "start": 9760.14, "end": 9766.58, "text": "f\u00fcr eine sache, wo ich mir vorstelle, wo das cool ist, public class, plupp, so und dann"}, {"id": 1374, "start": 9766.58, "end": 9777.34, "text": "hat man sowas wie hier ne private read only concurrent dictionary aus int und frag mich"}, {"id": 1375, "start": 9777.34, "end": 9788.06, "text": "nicht int und irgendein tuppel aus string s und string b, sowas, macht man jetzt vielleicht"}, {"id": 1376, "start": 9788.06, "end": 9796.78, "text": "nicht so oft, aber kommt vor, so, was hat der f\u00fcr schmerzen, das ist auch gar keine"}, {"id": 1377, "start": 9796.78, "end": 9808.62, "text": "methode, so, dict gleich new, so und normalerweise muss man sowas hier machen, also quasi, so,"}, {"id": 1378, "start": 9808.62, "end": 9812.7, "text": "normalerweise muss man sowas machen und das ist ein bisschen kompliziert, so, jetzt kann"}, {"id": 1379, "start": 9812.7, "end": 9817.26, "text": "man da einfach nur noch, wenn ich das jetzt richtig verstehe, das da machen, das ist ganz"}, {"id": 1380, "start": 9817.26, "end": 9832.22, "text": "praktisch, das ist cool, so und wo ich mir jetzt noch, wo ich mir jetzt noch ganz praktisch"}, {"id": 1381, "start": 9832.22, "end": 9840.66, "text": "vorstelle, ist folgendes, wenn ich jetzt hier ne methode hab, die ne liste haben will"}, {"id": 1382, "start": 9840.66, "end": 9845.74, "text": "und ich will dann ne leere liste oder ne list initializer oder so \u00fcbergeben, dass ich dann"}, {"id": 1383, "start": 9845.74, "end": 9852.54, "text": "sagen kann, test new, das ist jetzt ne leere, neue liste, ohne dass ichs angeben muss und"}, {"id": 1384, "start": 9852.54, "end": 9859.86, "text": "das ist automatisch quasi, so und ich kann jetzt wahrscheinlich sowas hier machen, ah"}, {"id": 1385, "start": 9859.86, "end": 9866.7, "text": "ne, das geht nicht, das geht nur wenn es list ist oder, ah ok, ist aber eigentlich auch"}, {"id": 1386, "start": 9866.7, "end": 9877.06, "text": "ganz n\u00fctzlich, das ist wirklich highly sophisticated, big brain, also das ist quasi die kurzform"}, {"id": 1387, "start": 9877.06, "end": 9883.62, "text": "davon, eigentlich auch ganz nett, das sind so kleine features, die einfach das leben"}, {"id": 1388, "start": 9883.62, "end": 9891.46, "text": "ein bisschen einfacher machen, die jetzt im prinzip auch irgendwie compiler magic sind,"}, {"id": 1389, "start": 9891.46, "end": 9896.14, "text": "wei\u00df nicht wie ich mir das ganze neues zeugs merken soll, 1337 geht mir \u00e4hnlich, deswegen"}, {"id": 1390, "start": 9896.14, "end": 9902.22, "text": "gibt es sicherlich features aus, die sharp 678, die ich kaum verwende, weil vieles untergeht,"}, {"id": 1391, "start": 9902.22, "end": 9911.98, "text": "dazu kommt ja noch, das hier ist jetzt, fuck was wollte ich sagen, das hier ist jetzt nur"}, {"id": 1392, "start": 9911.98, "end": 9919.1, "text": "die sprach features, was wir noch gar nicht haben ist, die ganze framework library zus\u00e4tze,"}, {"id": 1393, "start": 9919.1, "end": 9923.42, "text": "die es bestimmt auch gibt, also es gibt bestimmt wieder zig neue klassen im framework, die"}, {"id": 1394, "start": 9923.42, "end": 9937.82, "text": "man verwenden kann, grpc, kengin ist gro\u00dfer grpc fan, list gleich array, what, ne, ne,"}, {"id": 1395, "start": 9937.82, "end": 9945.74, "text": "das ist eine neue synthax, das ist die kurzform hierf\u00fcr, new list int, der kann jetzt seit"}, {"id": 1396, "start": 9945.74, "end": 9953.02, "text": "der neuen c sharp version, der bronc, kann man das weglassen und der ist so schlau und"}, {"id": 1397, "start": 9953.02, "end": 9958.5, "text": "erkennt, diese methode will eine list int haben und ich kann jetzt nur new schreiben"}, {"id": 1398, "start": 9958.5, "end": 9964.82, "text": "mit list initializer und er kapiert, dass mein new an der stelle eigentlich ein new"}, {"id": 1399, "start": 9964.82, "end": 9977.5, "text": "list int ist, es hat den nachteil, es ist nicht unbedingt gut lesbar ohne ide support,"}, {"id": 1400, "start": 9977.5, "end": 9986.22, "text": "ich mein guck mal selbst rider checkt das nicht, doch hier schon, also sprich jetzt"}, {"id": 1401, "start": 9986.22, "end": 9990.78, "text": "gehen wir mal von aus, test ist irgendwo da unten deklariert, wir wissen nicht wo, dann"}, {"id": 1402, "start": 9990.78, "end": 9999.9, "text": "ist uns jetzt nicht so wirklich klar auf den ersten blick, was das da f\u00fcr ein typ ist,"}, {"id": 1403, "start": 9999.9, "end": 10004.3, "text": "aber das ist eine sache, wo ich mir vorstellen kann, dass es ganz cool ist, aber das hier"}, {"id": 1404, "start": 10004.3, "end": 10011.1, "text": "ist f\u00fcr mich das was wirklich lesbarkeit auch was bringt, danno ich wei\u00df nicht wie du das"}, {"id": 1405, "start": 10011.1, "end": 10021.26, "text": "siehst aber f\u00fcr den fall findest du es wahrscheinlich auch ganz praktisch oder, also hier finde"}, {"id": 1406, "start": 10021.26, "end": 10026.62, "text": "ich es cool, weil gerade wenn man solche langen sachen hat, das ist einfach abartig zu lesen"}, {"id": 1407, "start": 10026.62, "end": 10039.06, "text": "hier und total redundant gleicher schei\u00df und da ist das hier eigentlich, das ist nice ja,"}, {"id": 1408, "start": 10039.06, "end": 10055.22, "text": "so was haben wir noch f\u00fcr features, das haben wir uns grade angeguckt,"}, {"id": 1409, "start": 10055.22, "end": 10068.46, "text": "haben wir uns auch grad angeguckt, anosa, was, anosa leute, anosa, anosa nice, anosa"}, {"id": 1410, "start": 10068.46, "end": 10091.66, "text": "nice use, ah yes yes, das ist cool, das ist cool, guck mal wir haben noch hier unsere"}, {"id": 1411, "start": 10091.66, "end": 10098.66, "text": "person class, wenn ich jetzt, wenn die metode jetzt ne person haben m\u00f6chte, die jetzt list"}, {"id": 1412, "start": 10098.66, "end": 10121.62, "text": "hei\u00dft, p besser, dann kann ich jetzt sagen new, auch nicht, warum nicht, ah weil, ah"}, {"id": 1413, "start": 10121.62, "end": 10133.7, "text": "die muss ich im constructor machen, die sind gar nicht in it only, ah die sind gar nicht"}, {"id": 1414, "start": 10133.7, "end": 10147.9, "text": "in it only, oh das ist ja doof, gut aber ich mein es ist immer noch k\u00fcrzer, es ist immer"}, {"id": 1415, "start": 10147.9, "end": 10163.54, "text": "noch k\u00fcrzer als new person, ich h\u00e4tte jetzt eigentlich gedacht, man kann, kann new person,"}, {"id": 1416, "start": 10163.54, "end": 10188.34, "text": "warum, ich h\u00e4tte jetzt eigentlich gedacht, das funktioniert, weil wo ist denn jetzt der"}, {"id": 1417, "start": 10188.34, "end": 10204.78, "text": "sinn davon, ja das darf ich n\u00e4mlich nicht \u00e4ndern, ok das verstehe ich jetzt nicht,"}, {"id": 1418, "start": 10204.78, "end": 10222.02, "text": "ach ich bin ja auch doof, ich darf keine klammern machen, oder doch, ok dann wei\u00df ich auch nicht"}, {"id": 1419, "start": 10222.02, "end": 10236.1, "text": "so genau, ok dann muss ich die dinger quasi hier \u00fcber den constructor machen, ok was"}, {"id": 1420, "start": 10236.1, "end": 10253.02, "text": "kommt da jetzt bei raus, ok ist das jetzt null oder ist es blub und lull, probieren wir mal"}, {"id": 1421, "start": 10253.02, "end": 10277.26, "text": "mal, es ist blub und lull, wie kann ich das optional machen, nee, nee oder, das glaube"}, {"id": 1422, "start": 10277.26, "end": 10292.5, "text": "ich nicht, dass es so gedacht ist, eh ok, ich glaube das erfordert noch ein wenig im"}, {"id": 1423, "start": 10292.5, "end": 10303.18, "text": "detailplanung, das ist irgendwie komisch, weil das richtig coole w\u00e4re, wenn man das"}, {"id": 1424, "start": 10303.18, "end": 10310.94, "text": "quasi standardm\u00e4\u00dfig so anlegen k\u00f6nnte und ich k\u00f6nnte das hier callen so, ohne dass ich"}, {"id": 1425, "start": 10310.94, "end": 10327.22, "text": "das da eintragen muss, das w\u00e4re cool wenn das geht, das ist sch\u00f6n kompakt und eigentlich"}, {"id": 1426, "start": 10327.22, "end": 10332.62, "text": "auch ganz gut lesbar, sag mal kennt jemand einen trick wie man rider dazu \u00fcberreden"}, {"id": 1427, "start": 10332.62, "end": 10352.34, "text": "kann, dass es beim speichern auto format macht, das geht mir n\u00e4mlich voll auf den sack, ok"}, {"id": 1428, "start": 10352.34, "end": 10376.22, "text": "was haben wir ansonsten noch f\u00fcr fiaturis, das haben wir uns jetzt angeguckt, why is"}, {"id": 1429, "start": 10376.22, "end": 10384.46, "text": "das denn, nee das plugin gibt es f\u00fcr rider nicht, ich kann einen static von lambda expression"}, {"id": 1430, "start": 10384.46, "end": 10397.5, "text": "machen, also also, ok das check ich noch nicht so genau, warum verwende lambda expression"}, {"id": 1431, "start": 10397.5, "end": 10407.02, "text": "doch als callbacks oder sowas, so also das n\u00e4chste ergibt f\u00fcr mich schon mehr sinn,"}, {"id": 1432, "start": 10407.02, "end": 10410.9, "text": "also ich kann zum beispiel sowas machen, das ist auch ein feature, was selten verwendet"}, {"id": 1433, "start": 10410.9, "end": 10417.42, "text": "wird, was man auch nicht oft braucht, aber was ich ganz n\u00fctzlich finde, so also zum"}, {"id": 1434, "start": 10417.42, "end": 10433.78, "text": "beispiel, was machen wir denn jetzt mal, was gibt es denn ein sch\u00f6nes beispiel f\u00fcr, ja"}, {"id": 1435, "start": 10433.78, "end": 10443.86, "text": "also zum beispiel process start lull, also das l\u00e4sst jetzt, das startet jetzt das programm"}, {"id": 1436, "start": 10443.86, "end": 10454.34, "text": "mit dem namen lull, so und ich subscribe jetzt das event f\u00fcr, nee das ist ein schei\u00df beispiel,"}, {"id": 1437, "start": 10454.34, "end": 10464.38, "text": "das ist doofs beispiel, ok mir f\u00e4llt kein gutes beispiel ein, aber manchmal braucht"}, {"id": 1438, "start": 10464.38, "end": 10471.86, "text": "man hier innerhalb von so ner metode noch eine und das kann man schon seit glaube ich"}, {"id": 1439, "start": 10471.86, "end": 10480.18, "text": "6 oder 7 machen, man kann jetzt hier drinne quasi so kleine lokale helper methoden noch"}, {"id": 1440, "start": 10480.18, "end": 10490.62, "text": "anlegen, also ich kann zum beispiel sagen int generate number, irgendwie sowas, so return"}, {"id": 1441, "start": 10490.62, "end": 10497.62, "text": "1, das geht, also man kann so nested functions machen, das geht schon ein bisschen l\u00e4nger,"}, {"id": 1442, "start": 10497.62, "end": 10504.06, "text": "und die kann man jetzt static machen, aha ok habe ich noch nie gebraucht, aber wenn"}, {"id": 1443, "start": 10504.06, "end": 10511.14, "text": "ich es brauche, ist es vielleicht ganz nice, also man kann jetzt quasi lokale helperfunktion"}, {"id": 1444, "start": 10511.14, "end": 10518.94, "text": "in, also helperfunktion in methoden machen, was auch ungew\u00f6hnlich ist f\u00fcr c-sharp in"}, {"id": 1445, "start": 10518.94, "end": 10524.22, "text": "sofern, weil die haben lambdafunktionen, also diese geschichten schon, bekommen bevor sie"}, {"id": 1446, "start": 10524.22, "end": 10528.22, "text": "anonyme funktionen hatten, normalerweise ist das eigentlich eher umgedreht, sprachen haben"}, {"id": 1447, "start": 10528.22, "end": 10538.9, "text": "zuerst das und bekommen dann das, m\u00fcsste doch auch f\u00fcr rider punkt 2, gucken wir mal"}, {"id": 1448, "start": 10538.9, "end": 10550.86, "text": "rein, punkt 2, nein das geht nicht f\u00fcr rider, weil dieses plugin gibt es nicht f\u00fcr rider,"}, {"id": 1449, "start": 10550.86, "end": 10559.18, "text": "dieses plugin gibt es quasi f\u00fcr so ziemlich alles, nur nicht f\u00fcr rider, warum auch immer"}, {"id": 1450, "start": 10559.18, "end": 10571.98, "text": "nicht, um mich zu \u00e4rgern wahrscheinlich, ja ok das kann man jetzt static machen, mir"}, {"id": 1451, "start": 10571.98, "end": 10584.34, "text": "f\u00e4llt jetzt gerade kein wirklicher anwendungszweck ein, warum ich das haben m\u00f6chte, f\u00e4llt euch"}, {"id": 1452, "start": 10584.34, "end": 10596.22, "text": "irgendwas ein, warum will ich eine lokal, static, local, so eine helperfunktion haben,"}, {"id": 1453, "start": 10596.22, "end": 10600.42, "text": "das ist wahrscheinlich der typische fall von, wenn man es braucht dann freut man sich, dass"}, {"id": 1454, "start": 10600.42, "end": 10624.26, "text": "es da ist, ich kann euch jetzt mal ein ganz gutes anwendungsbeispiel zeigen f\u00fcr so eine"}, {"id": 1455, "start": 10624.26, "end": 10630.9, "text": "anonyme lokalen funktion, ich glaube ich habe, ich wei\u00df nicht ob ich das schon gepusht habe,"}, {"id": 1456, "start": 10630.9, "end": 10651.22, "text": "oh nein habe ich nicht, da kann ich es euch nicht zeigen, weil das hier verursacht einen"}, {"id": 1457, "start": 10651.22, "end": 10659.06, "text": "memory leak, was ich hier gebastelt habe, weil ich den callback nie unsubscriber, na gut"}, {"id": 1458, "start": 10659.06, "end": 10663.3, "text": "kann ich euch nicht zeigen, habe ich nicht gepusht, so was haben wir sonst noch f\u00fcr"}, {"id": 1459, "start": 10663.3, "end": 10667.9, "text": "neue sachen, k\u00f6nnen jetzt static sein, ok da habe ich wirklich keine ahnung wozu das"}, {"id": 1460, "start": 10667.9, "end": 10680.22, "text": "jetzt gut sein soll, dann warten wir mal ab, in addition for each loop, dass ich kann jetzt"}, {"id": 1461, "start": 10680.22, "end": 10687.82, "text": "for each verwenden, wenn ich irgendeinen typ habe, der die n\u00f6tigen metoden implementiert,"}, {"id": 1462, "start": 10687.82, "end": 10697.26, "text": "ok, next you can use this card as parameters to lambda, oh das ist nice, das ist wirklich"}, {"id": 1463, "start": 10697.26, "end": 10702.86, "text": "cool, das h\u00e4tte ich mir schon \u00f6fters mal gew\u00fcnscht, also zum beispiel wenn man, \u00e4hm"}, {"id": 1464, "start": 10702.86, "end": 10713.22, "text": "action, int int int, das ist jetzt nur mal exemplarisch f\u00fcr ein callback oder f\u00fcr lambda,"}, {"id": 1465, "start": 10713.22, "end": 10720.34, "text": "so und wenn ich den jetzt hier aufrufe, dann muss ich immer, dann muss ich bisher immer"}, {"id": 1466, "start": 10720.34, "end": 10733.3, "text": "die parameter mit angeben, moment, jetzt, ach nee, moment, gleich, \u00e4hm, so, \u00e4hm,"}, {"id": 1467, "start": 10733.3, "end": 10737.42, "text": "da muss ich bisher immer die parameter mit angeben, selbst wenn ich die parameter gar"}, {"id": 1468, "start": 10737.42, "end": 10744.34, "text": "nicht haben will, und jetzt kann man so machen, wenn man die parameter nicht haben will, das"}, {"id": 1469, "start": 10744.34, "end": 10762.62, "text": "ist cool, \u00e4hm, nee, wie, ach so, das hier, ja, das, das, jetzt wo du es sagst, f\u00e4llt"}, {"id": 1470, "start": 10762.62, "end": 10766.18, "text": "es mir wieder ein, jaja, also du meinst jetzt nicht an event, du meinst, dass man quasi"}, {"id": 1471, "start": 10766.18, "end": 10785.06, "text": "hier dran jetzt was, was anh\u00e4ngen kann, oder, ja, oder auch nicht, ich wei\u00df aber was du"}, {"id": 1472, "start": 10785.06, "end": 10789.18, "text": "meinst, nee, das, \u00e4hm, war mir so jetzt nicht im kopf, ich hab das schon mal gesehen, ja,"}, {"id": 1473, "start": 10789.18, "end": 10792.22, "text": "wo, mir f\u00e4llt es wieder ein, wo du es gesagt hast, aber ehrlich gesagt hab ich noch nie"}, {"id": 1474, "start": 10792.22, "end": 10799.18, "text": "benutzt, kopf gameplay auf youtube, ja, mal gucken, mal gucken, so, was haben wir sonst"}, {"id": 1475, "start": 10799.18, "end": 10808.78, "text": "noch sch\u00f6nes, also das mit discard parametern ist wirklich sehr nice, you can now apply"}, {"id": 1476, "start": 10808.78, "end": 10816.74, "text": "attributes to local functions, boah, jetzt wirds aber abgedreht, alter, nullable attribute"}, {"id": 1477, "start": 10816.74, "end": 10822.66, "text": "annotation, \u00e4hm, mal, frage an euch, die, die vielleicht die eine oder andere ist, die"}, {"id": 1478, "start": 10822.66, "end": 10829.34, "text": "sharp verwendet, verwendet ihr dieses nullable, not nullable feature eigentlich, ich muss"}, {"id": 1479, "start": 10829.34, "end": 10842.62, "text": "mich ja mal outen, ich verwende es gar nicht, dabei haben die sich so viel m\u00fche gegeben"}, {"id": 1480, "start": 10842.62, "end": 10856.94, "text": "mit not nullable, aber ich finde man merkt, dass es irgendwie drauf gest\u00fclpt ist auf"}, {"id": 1481, "start": 10856.94, "end": 10869.7, "text": "ne sprache, die nicht so designt ist, hat das dann nen default wert statt 0, nee, kein"}, {"id": 1482, "start": 10869.7, "end": 10880.74, "text": "default wert, wenn du not nullable eingeschaltet hast, dann musst du, wenn nen referenztyp"}, {"id": 1483, "start": 10880.74, "end": 10885.98, "text": "null werden kann, musst du explizit markieren mit nem fragezeichen, also zum beispiel, wenn"}, {"id": 1484, "start": 10885.98, "end": 10894.94, "text": "ich not nullable einschalte, dann muss ich sowas hier schreiben, und das sagt dann, ok,"}, {"id": 1485, "start": 10894.94, "end": 10902.1, "text": "best ist ne funktion, der kann ich, kann ich null \u00fcbergeben, als person, normalerweise"}, {"id": 1486, "start": 10902.1, "end": 10907.02, "text": "ist das der default verhalten, ne, also, die person kann ne instanz von person sein oder"}, {"id": 1487, "start": 10907.02, "end": 10916.74, "text": "null, und mit not nullable haben sie es umgedreht, ich muss das, \u00e4hm, angeben, wenn es null"}, {"id": 1488, "start": 10916.74, "end": 10923.66, "text": "sein darf, und wenn ich das mache, dann macht der compiler und, \u00e4h, die ide und sowas,"}, {"id": 1489, "start": 10923.66, "end": 10928.94, "text": "machen paar checks f\u00fcr mich, dass ich mich nicht vertippe, aber ich verwende das so gut"}, {"id": 1490, "start": 10928.94, "end": 10937.7, "text": "wie nie, guck der sagt mir auch, ich muss, \u00e4h, nullable sachen einschalten, jetzt hab"}, {"id": 1491, "start": 10937.7, "end": 10952.06, "text": "ichs eingeschaltet, jetzt wei\u00df ich nicht wie ichs wieder auskriege, ach hier oben,"}, {"id": 1492, "start": 10952.06, "end": 10957.82, "text": "genau, weil jetzt, jetzt kann ich sagen, ey guck mal, hier ist null erlauben, null \u00fcbergeben"}, {"id": 1493, "start": 10957.82, "end": 10963.82, "text": "erlaubt, das bedeutet, wenn ich test aufrufe mit null, anstatt der person, sagt er mir,"}, {"id": 1494, "start": 10963.82, "end": 10970.38, "text": "ok, wenn ich das fragezeichen wegmache, sagt er mir, \u00e4h, eigentlich darf man hier kein"}, {"id": 1495, "start": 10970.38, "end": 10981.1, "text": "null reinmachen, aber wie du siehst, es funktioniert trotzdem, das ist nur ne warnung, nur ne warnung,"}, {"id": 1496, "start": 10981.1, "end": 10989.7, "text": "deswegen ich verwende das so gut, ich verwende das gar nicht, ehrlich gesagt, ich hab ja"}, {"id": 1497, "start": 10989.7, "end": 10995.98, "text": "jahrelang auch gerne null zur\u00fcckgegeben, \u00e4hm, mittlerweile versuche ich es ein bisschen"}, {"id": 1498, "start": 10995.98, "end": 11001.5, "text": "ordentlicher zu machen, entweder ist es was, was man logischerweise in irgendein default"}, {"id": 1499, "start": 11001.5, "end": 11008.54, "text": "wert zur\u00fcckgeben kann, oder ich mach das, zumindest meistens einzig richtige, ne exception"}, {"id": 1500, "start": 11008.54, "end": 11015.58, "text": "schmei\u00dfen, wenn du nix zur\u00fcckgeben kannst, ja, also wenn man hier zum beispiel diese,"}, {"id": 1501, "start": 11015.58, "end": 11022.14, "text": "ich hab doch hier eben euch gezeigt auf github, ne, zum beispiel hier, getoutput, so mittlerweile"}, {"id": 1502, "start": 11022.14, "end": 11028.02, "text": "sieht das anders aus, getoutput gibt nen channel reader zur\u00fcck, so, aber getoutput kann ich"}, {"id": 1503, "start": 11028.02, "end": 11034.42, "text": "nur was zur\u00fcckgeben, wenn denn \u00fcberhaupt gerade zu ner kamera connected ist, so, wenn"}, {"id": 1504, "start": 11034.42, "end": 11039.02, "text": "das hier nicht fehlschl\u00e4gt, was geb ich denn dann zur\u00fcck, eigentlich muss ich da ne exception"}, {"id": 1505, "start": 11039.02, "end": 11043.26, "text": "schmei\u00dfen, so nach dem motto camera not connected oder sowas, weil ich kann nichts sinnvoll"}, {"id": 1506, "start": 11043.26, "end": 11050.58, "text": "zur\u00fcckgeben, ja ne null reference exception passt ja nicht so ganz, das ist eher so ne"}, {"id": 1507, "start": 11050.58, "end": 11070.3, "text": "art io exception oder sowas, schwierig, also wie gesagt ich verwende das so gut wie gar"}, {"id": 1508, "start": 11070.3, "end": 11080.02, "text": "nicht, ups, hab ich zugemacht, hier, also ich glaube das wars im gro\u00dfen und ganzen,"}, {"id": 1509, "start": 11080.02, "end": 11085.02, "text": "ja, wenn man jetzt mal zum beispiel zur\u00fcck geht zu csharp 8, da kam ein bisschen mehr"}, {"id": 1510, "start": 11085.02, "end": 11092.9, "text": "rein, ne, in csharp gab es diese ganzen features f\u00fcr nullable und sonst was, \u00fcbrigens auch"}, {"id": 1511, "start": 11092.9, "end": 11099.3, "text": "ein feature was kaum verwendet wird, was ziemlich geil ist, wenn man mal ehrlich ist, kennt"}, {"id": 1512, "start": 11099.3, "end": 11110.86, "text": "ihr diese geschichte, also ihr habt sowas hier, void tritest, so, das gibt nen bool"}, {"id": 1513, "start": 11110.86, "end": 11118.9, "text": "zur\u00fcck, also sprich tritest gibt zur\u00fcck ja oder nein, also sprich, das war erfolgreich,"}, {"id": 1514, "start": 11118.9, "end": 11124.38, "text": "wenn es erfolgreich war, dann gibt es irgendeinen wert, machen wir mal, wir machen mal ein beispiel,"}, {"id": 1515, "start": 11124.38, "end": 11133.26, "text": "tryopen, was programmierst du, wir gucken uns gerade csharp 9 features an, so tryopen,"}, {"id": 1516, "start": 11133.26, "end": 11140.5, "text": "so und tryopen ist dann quasi kann ich sagen hier if, if tryopen und dann kann ich was"}, {"id": 1517, "start": 11140.5, "end": 11157.94, "text": "machen mit, so bisher hat man das so gemacht, tryopen, out, outperson, so bisher hat man"}, {"id": 1518, "start": 11157.94, "end": 11165.18, "text": "das so gemacht, ich hab gesagt if tryopen und dann hat man gesagt out, so in der richtung,"}, {"id": 1519, "start": 11165.18, "end": 11170.7, "text": "so das hei\u00dft ich kann jetzt erstmal checken, ok klappt der zugriff, wenn der zugriff klappt,"}, {"id": 1520, "start": 11170.7, "end": 11175.66, "text": "dann krieg ich als outport hier nen objekt, also person ist jetzt doof, das m\u00fcsste eigentlich"}, {"id": 1521, "start": 11175.66, "end": 11184.42, "text": "eher sowas wie nen file oder so sein, ja, irgendwie sowas, also string, file, pass,"}, {"id": 1522, "start": 11184.42, "end": 11197.58, "text": "out, out ist nen file, wobei file kann man nicht, aber ich glaub ihr wisst was ich mein,"}, {"id": 1523, "start": 11197.58, "end": 11206.1, "text": "wir faken das jetzt einfach, lull, dann kann man es besser lesen, dann versteht man besser"}, {"id": 1524, "start": 11206.1, "end": 11216.5, "text": "was ich mein, so also new file, so das w\u00e4r so ne typische methodik, also sprich ich geb"}, {"id": 1525, "start": 11216.5, "end": 11223.82, "text": "jetzt hier den fad ein, so keine ahnung, home, max, keqw.txt und die versuch ich zu \u00f6ffnen"}, {"id": 1526, "start": 11223.82, "end": 11228.26, "text": "und wenn das funktioniert dann bekomm ich nen file zur\u00fcck, so das w\u00e4r so ne typische"}, {"id": 1527, "start": 11228.26, "end": 11234.62, "text": "tryopen geschichte, die es auch total oft im framework gibt, ist glaub ich relativ logisch"}, {"id": 1528, "start": 11234.62, "end": 11243.02, "text": "was es machen w\u00fcrde, es gibt seit csharp 8 ein richtig geiles feature, f\u00fcr \u00e4hnliche"}, {"id": 1529, "start": 11243.02, "end": 11248.42, "text": "f\u00e4lle, der hier ist eigentlich ziemlich gut so wie er ist, aber es gibt jetzt die m\u00f6glichkeit"}, {"id": 1530, "start": 11248.42, "end": 11257.22, "text": "man kann mehr als eine sache zur\u00fcckgeben, also ich kann zum beispiel, ich m\u00fcsste jetzt"}, {"id": 1531, "start": 11257.22, "end": 11274.46, "text": "nicht das hier zur\u00fcckgeben, sondern k\u00f6nnte jetzt bool und das file zur\u00fcckgeben, so und"}, {"id": 1532, "start": 11274.46, "end": 11281.3, "text": "wie sieht der return aus, der return sieht dann so aus, also man kann jetzt zwei sachen"}, {"id": 1533, "start": 11281.3, "end": 11292.62, "text": "zur\u00fcckgeben, das funktioniert, so und dann w\u00fcrde ich n\u00e4mlich sagen tryopen result und"}, {"id": 1534, "start": 11292.62, "end": 11298.9, "text": "dann sieht man mein result ist jetzt ein tuppel mit item 1 und 2, dementsprechend kann ich"}, {"id": 1535, "start": 11298.9, "end": 11307.58, "text": "jetzt auch sagen, mal gucken ob der das f\u00fcr mich machen kann, kann ich jetzt auch sagen"}, {"id": 1536, "start": 11307.58, "end": 11316.9, "text": "result und file und jetzt kann ich hier drauf zugreifen, result und file, das geht glaub"}, {"id": 1537, "start": 11316.9, "end": 11330.5, "text": "ich mit bis zu 9, ja ich kanns benennen, stimmt das ist auch ein feature, das kann ich mal"}, {"id": 1538, "start": 11330.5, "end": 11346.86, "text": "sagen, also ich glaube es geht bis zu 9 return sachen, ok nein es geht noch mehr, excellent"}, {"id": 1539, "start": 11346.86, "end": 11357.7, "text": "alles klar, so muss das sein, so und was auch richtig cool ist, man kann die hier benennen,"}, {"id": 1540, "start": 11357.7, "end": 11366.78, "text": "man kann sagen result und man kann sagen hier file handle oder so und wenn ich das jetzt"}, {"id": 1541, "start": 11366.78, "end": 11372.86, "text": "ausf\u00fchre, dann kann der das automatisch eigentlich deconstructen unter dem name, ne das geht"}, {"id": 1542, "start": 11372.86, "end": 11383.82, "text": "nicht oder, aber ich glaube rider ist so schlau und kapiert das, konnte rider die dinger nicht"}, {"id": 1543, "start": 11383.82, "end": 11394.74, "text": "deconstructen f\u00fcr mich, ne oder, aber zumindest wenn ich hier das objekt jetzt hab, dann seh"}, {"id": 1544, "start": 11394.74, "end": 11400.62, "text": "ich, dann sind die dinger sogar hier richtig benannt, also man kann sogar die return parameter"}, {"id": 1545, "start": 11400.62, "end": 11406.78, "text": "benennen, allerdings ist das ne reine kosmetik, unter der haube hei\u00dfen die nach wie vor weiter"}, {"id": 1546, "start": 11406.78, "end": 11421.5, "text": "item 1 und item 2, kann ich das irgendwie deconstructen, kann das rider, doch easy, kann rider f\u00fcr"}, {"id": 1547, "start": 11421.5, "end": 11427.18, "text": "mich machen, so und jetzt hab ich hier den result und den file handle, jetzt kann ich"}, {"id": 1548, "start": 11427.18, "end": 11437.14, "text": "wieder quasi sagen, if result file handle, ja das ist ein ziemlich underratedes feature"}, {"id": 1549, "start": 11437.14, "end": 11447.3, "text": "finde ich, wof\u00fcr das ziemlich gut ist, ist es f\u00fcr solche sachen hier, also zum beispiel"}, {"id": 1550, "start": 11447.3, "end": 11453.94, "text": "ich hab hier nen dictionary mit nem key, m\u00f6chte aber jetzt nicht, also die standard variante"}, {"id": 1551, "start": 11453.94, "end": 11458.94, "text": "w\u00e4re, wenn ich nen dictionary hab mit nem key und m\u00f6chte hier als value mehr als einen"}, {"id": 1552, "start": 11458.94, "end": 11462.7, "text": "wert speichern, dann w\u00fcrde ich irgendwie ne klasse machen, keine ahnung was wei\u00df ich"}, {"id": 1553, "start": 11462.7, "end": 11473.26, "text": "hier, dict info und dann dort 2 sachen anlegen und hier sagen, es ist nen dict info, so, so"}, {"id": 1554, "start": 11473.26, "end": 11478.06, "text": "wird man das normalerweise machen, aber wenn das was ganz easy ist, was aus 2 sachen besteht,"}, {"id": 1555, "start": 11478.06, "end": 11488.54, "text": "dann kann man das auch hier so machen, so und wenn man jetzt hier drauf zugreifen will,"}, {"id": 1556, "start": 11488.54, "end": 11497.54, "text": "sieht man zum beispiel dict, genau und try oder hier get und wenn ich hier drauf zugreife,"}, {"id": 1557, "start": 11497.54, "end": 11505.18, "text": "sieht man hier, dass ich b und s kriege, also sprich das was ich hier benannt hab, das ist"}, {"id": 1558, "start": 11505.18, "end": 11509.62, "text": "ziemlich underratedes feature, ok und hier sind 30 milliarden sachen noch drin, das"}, {"id": 1559, "start": 11509.62, "end": 11514.74, "text": "gucken wir uns jetzt nicht an, eines meiner lieblings sachen in csharp 8 ist das hier,"}, {"id": 1560, "start": 11514.74, "end": 11523.82, "text": "das ist richtig nice, async enumerator, das ist quasi, da kann ich quasi ne for each"}, {"id": 1561, "start": 11523.82, "end": 11535.34, "text": "schleife machen, in der ich awaiten kann, das ist sehr praktisch, ja das geht auch,"}, {"id": 1562, "start": 11535.34, "end": 11547.58, "text": "fips das funktioniert auch, man kann auch sagen, man kann auch sagen, das, ach geht"}, {"id": 1563, "start": 11547.58, "end": 11556.94, "text": "das nicht, ah moment, was mache ich denn da, ich bin doch falsch, ich kann auch sagen,"}, {"id": 1564, "start": 11556.94, "end": 11571.26, "text": "das filehandel interessiert mich nicht, das geht auch, channels sind richtig nice, channels"}, {"id": 1565, "start": 11571.26, "end": 11595.38, "text": "haben wir hier irgendwo schon mal drin eingebaut, ah meine ordnung, ja channels, da haben wir"}, {"id": 1566, "start": 11595.38, "end": 11602.86, "text": "schon channels eingebaut und irgendwo machen wir auch async hier, das ist eines der geilsten"}, {"id": 1567, "start": 11602.86, "end": 11613.18, "text": "features aus csharp 8, man kann jetzt ne for each machen, in der man quasi sowohl return"}, {"id": 1568, "start": 11613.18, "end": 11630.5, "text": "mit await, als auch mit nem neuen element, das ist ziemlich cool, ja, boah leute, das"}, {"id": 1569, "start": 11630.5, "end": 11635.5, "text": "war jetzt big brain stream, was ist h\u00e4ngen geblieben von den neuen csharp features, lasst"}, {"id": 1570, "start": 11635.5, "end": 11644.02, "text": "mal \u00fcberlegen, also, was ist h\u00e4ngen geblieben, also, records, coole sache, die kurzschreibweise,"}, {"id": 1571, "start": 11644.02, "end": 11649.62, "text": "rest wei\u00df ich nicht so wirklich, init only setups, werde ich wahrscheinlich hier nur"}, {"id": 1572, "start": 11649.62, "end": 11654.18, "text": "im zusammenhang mit records verwenden, ich glaube nicht, dass ich das oft da anwendungszweck"}, {"id": 1573, "start": 11654.18, "end": 11660.42, "text": "finde, top level statements finde ich cool, aber nachdem ich selten konsolenanwendungen"}, {"id": 1574, "start": 11660.42, "end": 11665.66, "text": "mache in letzter zeit und wenn es zum beispiel ne asp.net anwendung ist, dass eh das template"}, {"id": 1575, "start": 11665.66, "end": 11671.3, "text": "f\u00fcr einen generiert, eher f\u00fcr vorf\u00fchrezwecke, pattern matching werde ich wahrscheinlich"}, {"id": 1576, "start": 11671.3, "end": 11675.18, "text": "in zukunft h\u00e4ufiger verwenden, allerdings dauert es ein bisschen bis ich da mein hirn"}, {"id": 1577, "start": 11675.18, "end": 11683.5, "text": "rum gerappt habe, dass ich das checke, wann man wie was verwenden kann, csharp hat sich"}, {"id": 1578, "start": 11683.5, "end": 11695.94, "text": "pyson generieren, bisschen vielleicht eigentlich nicht, eher, eher rust vielleicht oder skala"}, {"id": 1579, "start": 11695.94, "end": 11707.22, "text": "oder so, irgendwas in dieser richtung, hier lernt man was, guck mal was ich f\u00fcr techs"}, {"id": 1580, "start": 11707.22, "end": 11714.3, "text": "drinne hab, lehrreich, educational habe ich als tech drinne vom video, da muss das ja"}, {"id": 1581, "start": 11714.3, "end": 11720.86, "text": "auch mal, muss ja auch educational sein, so native size integers habe ich eigentlich"}, {"id": 1582, "start": 11720.86, "end": 11724.5, "text": "keine verwendung f\u00fcr, function habe ich mir gar nicht angeschaut, \u00e4h brauchen wir die,"}, {"id": 1583, "start": 11724.5, "end": 11731.9, "text": "brauchen wir nicht, \u00e4hm target type new expressions stelle ich mir cool f\u00fcr, gerade f\u00fcr ne variabler"}, {"id": 1584, "start": 11731.9, "end": 11738.02, "text": "in der klasse, das jetzt nicht, dictionary von dictionary mit dictionary gleich new dictionary"}, {"id": 1585, "start": 11738.02, "end": 11741.7, "text": "von dictionary mit dictionary schreiben muss, sondern einfach nur gleich new, finde ich"}, {"id": 1586, "start": 11741.7, "end": 11747.14, "text": "cool, static anonymos functions, ich hab keinen plastenschimmer, wozu man das braucht, ich"}, {"id": 1587, "start": 11747.14, "end": 11755.78, "text": "hab da gerade \u00fcberhaupt kein anwendungszweck im kopf, \u00e4hm target type conditional expressions,"}, {"id": 1588, "start": 11755.78, "end": 11763.78, "text": "dann hab ich schon wieder vergessen was es ist, \u00e4hm hab ich auch schon wieder vergessen"}, {"id": 1589, "start": 11763.78, "end": 11768.5, "text": "was es ist, hab ich auch schon wieder vergessen was es ist, ok, discard parameter f\u00fcr lambdas,"}, {"id": 1590, "start": 11768.5, "end": 11772.5, "text": "das werde ich auf jeden fall oft verwenden, das ist nice, weil meistens brauchst du gar"}, {"id": 1591, "start": 11772.5, "end": 11779.74, "text": "nicht alles was da so zur\u00fcckkommt, oder oftmals, oftmals, so attributes on local function werde"}, {"id": 1592, "start": 11779.74, "end": 11783.58, "text": "ich wahrscheinlich auch so gut wie nie verwenden, module final initializer wei\u00df gar nicht mehr"}, {"id": 1593, "start": 11783.58, "end": 11788.98, "text": "was es ist und new features for partial method interessiert mich auch nicht, also man muss"}, {"id": 1594, "start": 11788.98, "end": 11795.58, "text": "sagen c sharp 9, \u00e4h bei weitem nicht so dieses riesen feature release wie jetzt c sharp 8,"}, {"id": 1595, "start": 11795.58, "end": 11808.06, "text": "aber trotzdem nice Sachen und es ist ne ganze ecke funktionaler geworden, als es davor war,"}, {"id": 1596, "start": 11808.06, "end": 11812.66, "text": "also gerade diese pattern matching geschichte und auch diese record types, also man sieht"}, {"id": 1597, "start": 11812.66, "end": 11816.06, "text": "und das ist ne sache die ich wirklich cool finde an c sharp, man sieht das die nicht"}, {"id": 1598, "start": 11816.06, "end": 11820.82, "text": "stehen bleiben mit der sprache, man sieht das die aktuelle trends auch aufgreifen die"}, {"id": 1599, "start": 11820.82, "end": 11829.06, "text": "sich bew\u00e4hrt haben, dass sie cool sind, dass sie gut funktionieren und sie bauen das ein,"}, {"id": 1600, "start": 11829.06, "end": 11834.42, "text": "und zwar mit hirn bauen sie das ein, nicht so wie das t++ cremium wo jeder was anderes"}, {"id": 1601, "start": 11834.42, "end": 11844.82, "text": "einbaut und du \u00fcberhaupt nicht mehr verstehst was eigentlich sache ist, ahja interface default"}, {"id": 1602, "start": 11844.82, "end": 11850.02, "text": "implementation, \u00e4hm wei\u00dft du elsa wei\u00dft du warum ich glaube warum die das gemacht"}, {"id": 1603, "start": 11850.02, "end": 11855.06, "text": "haben, ich glaube das hat also interface default implementation der einzige grund warum die"}, {"id": 1604, "start": 11855.06, "end": 11864.4, "text": "das gemacht haben ist eigennutz, weil microsoft gerade was office angeht 75 interfaces hat"}, {"id": 1605, "start": 11864.4, "end": 11870.06, "text": "die interfaces erweitern die schon da war, also die haben dann office interface 1, office"}, {"id": 1606, "start": 11870.06, "end": 11879.14, "text": "interface 1x, office interface xx, office interface xx, office interface 5x, office 555x, so und"}, {"id": 1607, "start": 11879.14, "end": 11882.3, "text": "die hatten einfach keinen bock mehr drauf und haben deswegen die default implementations"}, {"id": 1608, "start": 11882.3, "end": 11886.86, "text": "f\u00fcr interfaces eingebaut, ich glaube kein mensch verwende das au\u00dfer microsoft selbst,"}, {"id": 1609, "start": 11886.86, "end": 11893.18, "text": "verwende einer von euch die default implementations in interfaces, ergibt eigentlich keinen sinn"}, {"id": 1610, "start": 11893.18, "end": 11897.1, "text": "das das gibt aber ok, also es gibt ja die m\u00f6glichkeit ein interface anzulegen in c"}, {"id": 1611, "start": 11897.1, "end": 11910.34, "text": "sharp, so ai interface beste, so und \u00e4hm, da kann ich jetzt neuerdings defaultsachen"}, {"id": 1612, "start": 11910.34, "end": 11914.42, "text": "implementations, ich wei\u00df gar nicht wie es funktioniert wenn ich ehrlich bin, einfach"}, {"id": 1613, "start": 11914.42, "end": 11922.26, "text": "so ok, total wir, gibt es interfaces mit default implementations, habe ich noch nie"}, {"id": 1614, "start": 11922.26, "end": 11931.34, "text": "verwendet, ja bei comobjekten ist das ja generell bei microsoft native sachen ist das total"}, {"id": 1615, "start": 11931.34, "end": 11937.74, "text": "beliebt dass die ihre interfaces 1, 2, 3 bis 5075x, xx, xx, xx haben und ich glaube das"}, {"id": 1616, "start": 11937.74, "end": 11942.06, "text": "haben die aus reinem eigennutz gemacht, das ist keine abstract class, nee das ist keine"}, {"id": 1617, "start": 11942.06, "end": 11945.66, "text": "abstract class, das ist ein interface, ich kanns dir nicht genau erkl\u00e4ren ehrlich gesagt"}, {"id": 1618, "start": 11945.66, "end": 11948.46, "text": "da muss ich jetzt mal nachgucken, ich hab, ich verwende das nicht, glaub der unterschied"}, {"id": 1619, "start": 11948.46, "end": 11954.46, "text": "ist zwischen der abstract class und dem interface, dass du, \u00e4hm, gut du kannst ein paar sachen"}, {"id": 1620, "start": 11954.46, "end": 11959.54, "text": "im interfacing machen wie private methoden und sowas in der richtung, das ist der prinzipielle"}, {"id": 1621, "start": 11959.54, "end": 11966.3, "text": "unterschied und dass das hier weiter r\u00fcckw\u00e4rts kompatibel ist, also ne abstract class ist"}, {"id": 1622, "start": 11966.3, "end": 11972.58, "text": "so, wenn du ne abstract class erweiterst, dann muss alles was virtual ist implementiert"}, {"id": 1623, "start": 11972.58, "end": 11978.7, "text": "werden, so bei nem interface ist es jetzt so, mal angenommen ich hab hier nen interface"}, {"id": 1624, "start": 11978.7, "end": 11987.9, "text": "voidplub, so, so sah das interface mal urspr\u00fcnglich aus, so und jetzt komm ich auf die idee ich"}, {"id": 1625, "start": 11987.9, "end": 11993.9, "text": "m\u00f6chte eigentlich das interface erweitern mit lull, jetzt ist ja die sache so, ich hab"}, {"id": 1626, "start": 11993.9, "end": 11998.98, "text": "schon ganz viele klassen dieses interface implementieren und ne eigene lull, ne eigene"}, {"id": 1627, "start": 11998.98, "end": 12005.94, "text": "plub methode haben, wenn ich das interface jetzt erweitern will ohne, dass ich 50 oder"}, {"id": 1628, "start": 12005.94, "end": 12012.5, "text": "500 klassen die das interface implementieren anfassen will, dann kann ich ne default implementation"}, {"id": 1629, "start": 12012.5, "end": 12019.7, "text": "hier reinhauen und dann geht nix kaputt, wie gut sich das umsetzen l\u00e4sst und wie gut sich"}, {"id": 1630, "start": 12019.7, "end": 12023.7, "text": "das dann in die alten klassen integriert sei mal dahingestellt, hab ich keine erfahrungen"}, {"id": 1631, "start": 12023.7, "end": 12026.06, "text": "mit hab ich noch nie verwendet, chat ich wei\u00df nicht wie es bei euch aussieht ob das einer"}, {"id": 1632, "start": 12026.06, "end": 12040.26, "text": "von euch verwendet, hab ich noch nie verwendet, hab ich noch nie benutzt, kein klassen shimmer"}, {"id": 1633, "start": 12040.26, "end": 12055.94, "text": "ich hab keine ahnung was taugt, ja, so chat das war echt anstrengend big brain stream"}, {"id": 1634, "start": 12055.94, "end": 12072.86, "text": "dreieinhalb stunden, solange haben wir uns jetzt die sharp features eingeguckt, chat war"}, {"id": 1635, "start": 12072.86, "end": 12079.26, "text": "anstrengend, ich hoffe euch hat es gefallen, ich muss mich da selbst erstmal ein bisschen"}, {"id": 1636, "start": 12079.26, "end": 12086.26, "text": "dran tasten was es da f\u00fcr neue sachen gibt, sagt mir mal chat, hat man wenigstens ein"}, {"id": 1637, "start": 12086.26, "end": 12090.06, "text": "bisschen was gelernt bei, ja auf jeden fall nice wenn der ein oder andere vielleicht noch"}, {"id": 1638, "start": 12090.06, "end": 12097.38, "text": "was gelernt h\u00e4tte, war ja immerhin educational stream, ja und ihr merkt vielleicht ich mein"}, {"id": 1639, "start": 12097.38, "end": 12102.18, "text": "ich wei\u00df das auch nicht bei allem, also bei sachen die ich selten verwende hab ich da"}, {"id": 1640, "start": 12102.18, "end": 12107.7, "text": "auch oftmals keinen plan, geht glaube ich jedem so, die sachen die man nicht oft macht"}, {"id": 1641, "start": 12107.7, "end": 12113.94, "text": "die man kann sie nicht alles wissen, ist ja letztendlich das wo man auch mal irgendwie"}, {"id": 1642, "start": 12113.94, "end": 12118.18, "text": "drauf klarkommen muss, man kann einfach nicht alles wissen und es ist auch letztendlich"}, {"id": 1643, "start": 12118.18, "end": 12128.94, "text": "keine schande, man muss einfach nur wissen wie man sucht, poggers google skills sind"}, {"id": 1644, "start": 12128.94, "end": 12133.1, "text": "das wichtigste was man haben kann wenn man in der IT arbeitet, das sag ich auch den azubis"}, {"id": 1645, "start": 12133.1, "end": 12142.9, "text": "immer, ihr m\u00fcsst so weit ahnung haben, dass ihr wisst wonach ihr suchen m\u00fcsst, kannst"}, {"id": 1646, "start": 12142.9, "end": 12151.54, "text": "du mal deine meinung zur ps5 sagen, ja und ne weil ich hab mich weder mit der neuen xbox"}, {"id": 1647, "start": 12151.54, "end": 12155.86, "text": "noch mit der playstation gro\u00dfartig besch\u00e4ftigt, ich finde nur dass die playstation 5 ultra"}, {"id": 1648, "start": 12155.86, "end": 12163.54, "text": "gro\u00df ist oder der japaner das vorgestellt hat war ziemlich klein, ansonsten kann ich"}, {"id": 1649, "start": 12163.54, "end": 12177.06, "text": "da gar nichts zu sagen, es sind im prinzip beides mehr oder weniger stink normale pcs,"}, {"id": 1650, "start": 12177.06, "end": 12185.82, "text": "halt mit exklusiv sachen, stack overflow triffen programming ja sieht so aus, ist"}, {"id": 1651, "start": 12185.82, "end": 12197.34, "text": "aber so, wenn man mal ehrlich ist, die leute denken zwar programmieren w\u00fcrde so aussehen,"}, {"id": 1652, "start": 12197.34, "end": 12204.58, "text": "krasse Hacker man am start, die leute denken in wirklichkeit so sieht programmieren aus"}, {"id": 1653, "start": 12204.58, "end": 12230.14, "text": "ja ja aber in wirklichkeit sieht programmieren so aus"}, {"id": 1654, "start": 12230.14, "end": 12241.18, "text": "das ist das somit eigentlich programmieren ja, true 0w, jeder der es macht wei\u00df dass"}, {"id": 1655, "start": 12241.18, "end": 12250.66, "text": "es so ist, jeder der in dem bereich arbeitet, was man was macht privat ist egal, jeder wei\u00df"}, {"id": 1656, "start": 12250.66, "end": 12257.02, "text": "dass es so ist, die au\u00dfenstehenden noobs denken man ist ein richtiger hacker man, in"}, {"id": 1657, "start": 12257.02, "end": 12263.5, "text": "wirklichkeit programmieren, eigentlich klaut man sich nicht auf stack overflow zusammen,"}, {"id": 1658, "start": 12263.5, "end": 12275.14, "text": "man guckt sich da was an und \u00e4ndert das dann auf das was man braucht, genau das genau"}, {"id": 1659, "start": 12275.14, "end": 12289.66, "text": "wie in dem video ist das, \u00fcbrigens bestes programm hier, ah yes, ich hoffe ihr seid"}, {"id": 1660, "start": 12289.66, "end": 12303.94, "text": "auch die krassen hacker mans wie ich hier, vor allem der matrix bildschirm schon da unten,"}, {"id": 1661, "start": 12303.94, "end": 12312.34, "text": "der ist ganz ganz wichtig, ich hab legit keine ahnung was da passiert, das ist ein h-top,"}, {"id": 1662, "start": 12312.34, "end": 12325.26, "text": "was auch immer da \u00fcberhaupt passiert, er generiert nicht, was ist speedometer 2.8,"}, {"id": 1663, "start": 12325.26, "end": 12342.98, "text": "irgendeinen hacksdump, ist das eine weltkarte, ist das ein ascii video oder matrix bildschirm"}, {"id": 1664, "start": 12342.98, "end": 12369.58, "text": "schon naja, ja so muss das sein, das ist der richtige hacker mode, ja so ist es in wirklichkeit"}, {"id": 1665, "start": 12369.58, "end": 12384.34, "text": "und dann arrow geht nicht, vor allem ist es auch noch java, so genau so siehts aus, ist"}, {"id": 1666, "start": 12384.34, "end": 12399.5, "text": "sein haus fertig renoviert, jaja klar seit jahren schon, ich mein 2013 sind wir eingezogen,"}, {"id": 1667, "start": 12399.5, "end": 12407.5, "text": "das war dark, ich muss sagen, egal wie ordentlich ich was programmiere, wenn ich da nach einer"}, {"id": 1668, "start": 12407.5, "end": 12415.18, "text": "gewissen zeit wieder ran muss hab ich nie bock, wann kommt das gartenstells video 3.0, ja"}, {"id": 1669, "start": 12415.18, "end": 12419.74, "text": "ich hatte ja vor im december viele videos zu machen, von denen ich noch so gut wie nichts"}, {"id": 1670, "start": 12419.74, "end": 12426.1, "text": "erledigt hab, ihr kennt mich, vielleicht gibt es dann auch wieder ein gartenvideo, arayan"}, {"id": 1671, "start": 12426.1, "end": 12446.3, "text": "twitch prime, dankesch\u00f6n, f\u00fcr den sub, eigentlich wollte ich jetzt Schluss machen, eigentlich"}, {"id": 1672, "start": 12446.3, "end": 12452.5, "text": "wollte ich jetzt Schluss machen f\u00fcr heute, 21.55, ich bin m\u00fcde, ich mein guck doch mal"}, {"id": 1673, "start": 12452.5, "end": 12470.62, "text": "an wie lang ich heute gestreamt hab, war hier, heute morgen, heute morgen 4 Stunden und jetzt"}, {"id": 1674, "start": 12470.62, "end": 12478.06, "text": "noch mal 3.5 Stunden, morgen cold war story stream, k\u00f6nnten wir eigentlich machen, ja"}, {"id": 1675, "start": 12478.06, "end": 12491.3, "text": "ich freu mich wirklich auf die cold war story, ich fand black ops 2, 3 nicht sch\u00f6n von der"}, {"id": 1676, "start": 12491.3, "end": 12499.02, "text": "story, 3 hab ich glaub ich die story gar nicht gespielt, aber 2, wirklich nice fand"}, {"id": 1677, "start": 12499.02, "end": 12504.1, "text": "ich die black ops 1 story, also black ops 1 story find ich mit die beste cold of duty"}, {"id": 1678, "start": 12504.1, "end": 12529.5, "text": "story, \u00fcberhaupt ja, ok leute wisst ihr was, ich geh jetzt ins bett, machts gut, wir sehen"}, {"id": 1679, "start": 12529.5, "end": 12536.26, "text": "uns, see you."}]}
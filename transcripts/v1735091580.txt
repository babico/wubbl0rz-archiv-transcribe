und
und
und
und
und
und
und
und
und
und
und
und
und
und
und
und
und
und
und
und
und
und
und
und
und
und
und
und
und
So, alles klar, ich muss grad noch was gucken auf dem zweiten Bildschirm.
Eigentlich ist mein Vorschau-Rechner immer noch total overkill für einfach nur Vorschau-Rechner.
Aber ich will mich ja mal nicht beschweren.
Besser zu viel Vorschau-Rechner als zu wenig Vorschau-Rechner.
Projektdokumentation, was schreibst du denn?
Das stimmt für die Abschlussprüfung, oder?
Was hast du für ein Thema?
Was hast du für ein Thema in der Abschlussprüfung?
Äh, für dein Projekt?
Für dein Abschlussprojekt?
Ich glaube es gibt kaum einer, der weiter entfernt ist, Vollzeit-Streamer zu werden
beziehungsweise zu wollen als ich, also jemand aus diesem Twitch-YouTube-Ökosystem, ja.
Also der 0815-Dude um die Ecke wahrscheinlich weniger, aber ich hab da keine Ambition.
Ach so, okay kein Abschlussprojekt.
Keg-Buy.
Könntest du von YouTube und Twitch leben, also so wie ich es jetzt aktuell mache?
Nee, auf gar keinen Fall.
Zumindest, sag mal, ich könnte vielleicht überleben davon, also ich könnte mir wahrscheinlich
zu Essen kaufen und ich könnte heizen oder so, aber ich könnte sonst wahrscheinlich
wenig machen.
Auf der anderen Seite, wenn ich Vollzeit machen würde, dann würde ich wahrscheinlich
pro Woche auch zwei, drei, wahrscheinlich eher drei Videos machen und wahrscheinlich
täglich streamen und mehr Sponsorships und irgendwelche anderen Kooperationssachen machen,
dann vielleicht, aber sag mal so, mit dem was jetzt unter dem Strich rauskommt, könntest
du halbwegs überleben, aber nicht wirklich gut vonleben.
Doch, wenn ich jeden Tag ein Video mache und Sponsorship mache oder so, dann bestimmt,
aber das sehe ich jetzt nicht als da way für mich, außer weil ich da gar keinen Bock
drauf gezwungenermaßen Content machen zu müssen, nicht da ich wirklich jeden Tag streamen
würde, jeden Tag Videos machen würde, also jeden zweiten Tag Videos machen würde, viel
mehr Sponsorings annehmen und Sellout machen, alle möglichen Geschichten.
Wo du schon auf Patreon seid und alles, was du nicht gesehen machst, doch, klar, wahrscheinlich,
höchstwahrscheinlich schon, aber habe ich überhaupt keinen Bock drauf, mir ist das
so viel lieber.
Normaler Job, dafür Teilzeit dort und hier, wie ich Bock habe, ich muss halt nicht.
Das ist gute, das ist unglaublich beruhigend, wenn du weißt, du musst weder das eine noch
das andere machen.
Also wenn dich das eine nervt, könntest du das andere machen und umgedreht.
Also Wohnung habe ich ja eh nicht das Problem, ich muss ja keine Miete bezahlen.
Was hältst du eigentlich von Zappix, ich finde Zappix gut, ich habe Zappix bei mir daheim
auch im Einsatz.
Ich muss sagen, Zappix ist halt vom Web-Interface und der Konfiguration im Web-Interface ziemlich
abartig, bzw. muss ich erstmal an die Zappix-Logik gewöhnen und dass sie Sachen so nennen, aber
es nicht unbedingt das ist, wie es benannt ist und so, das ist ganz merkwürdig.
Aber Zappix ist ne gute Sache, wenn man quasi was haben will mit Web-Interface zum Konfigurieren
und wo du mehr machen kannst als mit Uptime-Kuma, also wenn ein das pure Pingen-Up-Down-Anzeige
oder halt auch einfache Statuswerte nicht reicht, wenn man zum Beispiel Notifications haben
will, wenn die Festplatte voll läuft oder wenn man vielleicht auch mal 2-3 Wochen History
haben will, rückwärts gucken will, also wenn da Uptime-Kuma nicht reicht, ist Zappix ne
super Geschichte.
Die Prometheus-Grafana-Kombi ist eher so, wir bauen unser Monitoring selbst, was ja auch
seine Daseinsberechtigung hat und es sind ja auch zwei unterschiedliche Ansätze.
Prometheus ist ursprünglich mal dafür entwickelt worden, damit man Anwendungsmetriken einsammeln
kann.
Nicht so sehr, wie ist die CPU-Auslastung auf der Linux-Kiste.
Kann man auch machen, aber ich finde man merkt schon, wo das herkommt.
Deswegen ist Zappix nicht verkehrt.
Hast du eigentlich auch Pläne, was smartes Energiemanagement angeht mit Solar?
Nee, hab ich nicht.
Ich werd in nächster Zeit kein Photovoltaikzeug aufs Dach bauen lassen.
Liegt an mehreren Gründen.
Die Lage ist ganz okay, aber man kommt halt sehr schlecht ans Dach dran, d.h. da muss
wahrscheinlich Gerüst gebaut werden, das ist ein riesen Akt.
Am Ende bezahle ich dann irgendwie 30.000 Euro oder so für eine Installation, dann hab
ich ehrlich gesagt keinen Bock drauf.
Bis ich das jemals wieder eingespart habe, sind wahrscheinlich die ersten Panels kaputt
oder so.
Und selbst wenn es einem nur auf so plus minus null geht, selbst dann, dafür ist es eigentlich
zu teuer.
Dementsprechend hab ich da keine Ambitionen, was das angeht.
Also noch Kontakt zum Friseur, unregelmäßig, ja.
Ich glaub vor einem Monat oder so hab ich das letzte Mal mit ihm geschrieben im Discord.
Was meinst du mit optimieren, achso, naja, ich weiß nicht, was man auf den Dingern einstellen
kann.
Das erste, was ich mal prinzipiell ausprobieren würde, wie gut ist denn die Übertragungsrate,
wenn man direkt neben dem Access Point steht?
Das ist das erste, wo ich mal gucken würde, so, weil je nachdem, was in deiner, also wenn
du nur 80 MB Down bekommst, was kann denn der Access Point?
Was ist das für ein Access Point, also was, was, was, was, was geht denn da maximal?
Also brauchst du natürlich auch das passende Endgerät dafür, logischerweise, ja.
Also 80 MB Down ist schon ein bisschen wenig, also ich krieg mit meinem hier irgendwie so
100, 160, 170 MBit und das ist schon nicht wirklich eine der neuesten.
Hä, 100, verwendet man 100 überhaupt?
WLAN-technisch darfst du mich nix fragen, WLAN-technisch hab ich wenig Ahnung.
Kein Plan, guck mir lieber zum beruhigenden Runde ASCII-Quarium jetzt an.
Aber viele Access Points haben so einen automatisch Optimierungsmodus, wo die gucken, welche Kanäle
frei sind und dann darauf switchen.
Das könnte man vielleicht mal machen.
Habt ihr im Büro auch laufen, Beste?
Naja, Pläne hab ich im Prinzip dahingehend, dass ich mich damit beschäftigt hab und es
nicht aktiv plane, das zu machen, das sind meine Pläne dazu.
Ja, also ich zeige euch mal kurz, was wir heute machen, Stream, ja, korrekt, Pogo-Stream,
oh, Sekunde, ich muss mal kurz mein Headset entknoten, ich bin gleich wieder am Start.
So, bin ich wieder.
Excellent, also, was machen wir heute?
Weiß ich, ob Modgis schon da ist, irgendeiner der Modgis, ja doch, der Sirius Max ist da,
der ist immer richtig, richtig high IQ, was Daily-Zusammenfassungsschreiben angeht.
Also, was wir heute machen ist, wir gucken uns folgendes an, und zwar, nein, nicht, ich
hätte es eine Cloud, oh, oh, mein Auge, Sekunde, Sekunde, Dark Reader, ah, jetzt ist es gleich
viel besser.
Also, wir gucken uns heute folgende Sache an, zservers.com, das habe ich gefunden über,
ne, ja, über Hacker News damals, da habe ich einen Post gelesen vor, ist doch nicht so
lange her, Hacker News, Set-Servers, ja hier, ist doch gar nicht so lange her, von drei
Monaten, das war irgendwann im November, so, und da ist jemand auf eine sehr schlaue Idee
gekommen, und zwar, der hat eine Übungsseite gebaut, nicht für irgendwelchen Hacker-Gramm
oder irgendwelches Kryptografiezeug oder Programmier-Stells, äh, Lead-Code-Gedöns, nein, der ist auf die
Idee gekommen, hat gesagt, hey, warum bauen wir nicht mal so eine Challenge, beziehungsweise
Test-Übungsseite für Linux-Administration und DevOps-Themen?
Und da hat er, oder sagen wir so, hauptsächlich Linux-Skills, und da hat er zservers.com gebaut
und da gibt es unterschiedlich schwere Herausforderungen, die man in einer vorgegebenen Zeitspanne
schaffen muss.
Also, guckt mal, könnt ihr euch mal angucken, also, was es zum Beispiel gibt, aktuell gibt
es 17 verschiedene Tests, die man machen kann, zwischen easy und 10 Minuten zu schwer und
bis zu 30 Minuten.
Ich würde sagen, wir fangen einfach von oben nach unten an, ja.
Ich muss sagen, ich mach das nicht ganz planlos, ich hab mir manche Aufgaben, Stellungen und
Sachen schon im Vorfeld angeguckt, auf dem Smartphone, als ich mal morgens im Zug gehockt
hab, da kann ich mich auch dran erinnern, da hab ich morgens im Zug bisschen durchgescrollt,
wobei man das Terminal im Zug nicht gescheit bedienen konnte, und da gibt es Aufgaben,
da gibt es dann zum Beispiel Aufgaben wie, also, level easy, du hast 10 Minuten Zeit und
zur Info siehst du, ok, Aufgabe ist folgende, hier auf diesem Server läuft ein Programm,
was eine Log-Datei schreibt, warlog badlog.log, und was die Festplatte vollschreibt, und
das kann man hiermit überprüfen, und das Ziel ist es, dass das Programm quasi für
bis zu 6 Sekunden, also der Test, den man am Ende durchführen kann, ist, dass das Programm
6 Sekunden lang nichts in die Log-Datei reingeschrieben hat.
Das fängt relativ simpel an, ich mein, jeder, der ein bisschen was mit Linux bisher zu tun
hatte, wird sich denken können, ja, gut, psauks, grep, oder ls, äh, nee, nicht, nicht, äh,
effuser, ls-off, oder irgendwas auf die Datei, gucken, was es ist, den Prozess abschießen
und dann ist es wieder gut, aber das wird dann mit der Zeit schon ein bisschen komplexer,
ja, da gibt es dann irgendwann so ein paar Mediums, kommen dann solche Aufgaben, wie
hier zum Beispiel, es gibt hier eine Web-Application mit einem Proxy davor, und der Proxy funktioniert
nicht richtig, man soll rausbekommen, woran das liegt, dass die Anwendung nicht richtig
erreichbar ist, also das geht von easy, die teilweise wirklich easy sind, von der Aufgabenbeschreibung
her zu, doch schon relativ, relativ kompliziert, ja, zum Beispiel hier solche Geschichten
wie, ähm, Docker-Container kann nicht zur Datenbank-Container und sowas, also das fängt
einfach an, ist dann aber spätestens, spätestens am Medium, nix mehr, was man innerhalb von
einer Minute mal easy bei, easy nebenbei, mal kurz, äh, einmal angeguckt, man weiß
es sofort.
Finde ich, ist eine super Idee, weil mir ist nichts bekannt, wo man so ein bisschen
so mit, mit vordefinierten Aufgaben, äh, vordefinierten Aufgaben und auch Tests am Ende
wirklich ein bisschen so seine Linux-Skills testen kann, hätte es das vor ein paar Jahren
gegeben, guck mal, das ist auch ganz neu hier unten, hätte es das vor ein paar Jahren
gegeben, hätte ich mal unsere Azubis immer so Dinger machen lassen.
Als Linux-Noop-coole Übung zum reinkommen bestimmt, ich gehe davon aus, dass es spätestens
ab Medium gar nicht mehr so noobig ist, also was ich hier gelesen habe, zum Beispiel, ähm,
sowas hier, war das glaube ich, genau, äh, die Datei home-admin-sum-file wird, wird geschrieben
von irgendeinem Prozess und man soll die Datei schließen, ohne dass man den Prozess abschießt,
da muss man wahrscheinlich irgendein Signal an den Prozess senden oder sowas, müssen
wir uns da mal angucken, aber das ist dann schon ein bisschen trickreicher, also sprich,
wie kriege ich das Ding dazu, dass die Log-Datei freigegeben wird, ohne dass ich den Prozess
abschieße, das kann ja auch durchaus ein realistisches Szenario sein, überlegt euch
mal, ihr habt irgendeine Anwendung, irgendeine produktive Anwendung, die gigabyteweise Log
schreibt und ihr wollt die dazu auffordern, rotier mal deine Logs oder mach mal Log, äh,
ein neues Log, weil die Platte voll läuft, also das ist gar kein so unrealistisches Szenario,
oder was haben wir hier, DNS, kann pinggoogle.com, das kann ja potentiell alles sein, pinggoogle.com,
name of service unknown, das kann ja prinzipiell alles sein, also woran auch immer das liegt,
ja, Unix-Porn schon, gute Idee, das machen wir nachher. Gucken wir uns nachher eine Runde
Unix-Porn an, Gatschi-Buzz, jetzt müssen wir erstmal ein paar Server glücklich machen,
ja, also und so ist das ganze aufgebaut, ich finde das ist eine super Idee von dem Typ,
ich hab doch auf Discord einen Aufruf aus der Community, ich war seit gestern nicht
mal auf Discord drauf, ich hab noch nicht auf Discord drauf geguckt, keine Ahnung, ich
lecke critical information, ich hab keine Ahnung was es da gibt, es gibt einen neuen
Channel dafür, ich guck da mal kurz rein, Sekunde Leute.
Unix-Porn, Bilder-Only-Channels, Max macht morgen im Stream, hab ich das tatsächlich
gesagt, dass ich das morgen geschwöre, fuck Alter wie viel da drinnen ist, ja, ok gucken
wir uns nachher an, ja, falls ich irgendwie das wieder ignorieren sollte und verdrängen
sollte erinnert mich mal dran, ich schreib's mir extra mal auf, dass ich's am Ende nicht
vergesse, Unix-Porn aus Discord, alles klar so machen wir das, ja was weiß ich was ich
gestern im Stream alles erzählt habe, ich meine Leute ich rede da 3-4 Stunden teilweise
ohne Unterbrechung, was weiß ich, was ich da irgendwie mal in einem Nebensatz gesagt
habe, was ich angeblich mache, es war jetzt auch ein Tag später nicht mehr, ne jetzt
machen wir erstmal ZGServer, die sind nämlich alle sehr traurig gerade und müssen von uns
gefixt werden, ja und das können wir nicht tolerieren, dass die Linux-Server traurig
sind, so also übrigens gibt ein GitHub Projekt dazu, FDuran Set Servers hätte durchaus noch
ein paar Sterne verdient, also Leute tut euch wenn euch dieser Service gefällt ja tut
euch Konzwang an, gebt ihm ein paar Sterne auf GitHub und ich würde sagen wir probieren
das einfach mal, wir gucken uns das ganze jetzt einfach mal an, also Chat wenn ihr Fragen
habt, beziehungsweise wenn ihr Ideen habt, wenn ich nicht weiter kommen sollte oder so,
ihr dürft auch Backseiten wie ihr wollt heute, ok was heißt wie ihr wollt, ja ihr dürft
Backseiten wie ihr wollt, wenn es mir auf den Sack geht kann es aber sein, dass ich
euch time oute, also da weiß ich nie so genau, manchmal regt es mich ja auf, aber so prinzipiell
dürft ihr so viel Backseiten wie ihr wollt und ich glaube man hat verstanden um was es
geht oder, ich mein wir können uns ja nochmal kurz angucken was der Typ selbst über den
Servers schreibt, der schreibt hier Lead Code for Linux Troubleshoot and make a Set Server
happy. Aktuell ist der Server äußerst Setgip und danach ist der Server WhitePepo happy.
Was ist Backseiten? Ich würd jetzt ja eigentlich Chat-GPT fragen, what's backseiting, aber
ich fürchte meine Session ist abgelaufen, Bergseiting vor allem. Ok ich fürchte meine
Session ist tatsächlich wieder abgelaufen, keine Ahnung. Backseiting ist, wenn jemand
was macht im Stream und der Chat versucht ihm die ganze Zeit zu erzählen was er denn
jetzt als nächstes machen soll, zum Beispiel stell dir vor irgendjemand spielt ein Spiel,
kommt nicht weiter und der Chat sagt dem im Sekundentakt was er jetzt machen soll und
meistens, und das ist ja das fatale beim Backseiting, meistens hat der Chat noch weniger Ahnung
von der ganzen Sache als der Streamer selbst und der Chat ist einfach nur nervig am Backseiten.
Genau, das ist zum Beispiel, das könnte man schon als Backseiting interpretieren.
Ok, also wir fangen jetzt mal an. Gucken wir uns das Ganze mal an. Also Setge Servers,
wir fangen oben an, wir machen die Easy Variante. Also wir fangen an mit St. John. What's writing
to this log file? Run. Ja danke. Aber die coole Sache daran ist, ich hab mir ja ein bisschen
hier durchgelesen bei Hacker News, was der Typ macht. Man bekommt, eine steht ja auch
hier glaube ich irgendwo, man bekommt einen echten AWS, eine echte AWS Linux VM. Moin
wie geil dass du Chat-GPT direkt an der Hand hast. Gibt's eine Möglichkeit das zu nutzen
ohne seine Handynummer angeben zu müssen. Nee, registrieren musst du dich so. Du kannst
aber wenigstens das ohne Api-Key machen. Also du kannst zum Beispiel das hier verwenden
auf dem Terminal. Du kannst so Chat-GPT-Wrapper. Kannst du sowas hier zum Beispiel verwenden.
Das sind Kommando-Zeilen-Tools, was quasi einen Browser simuliert und so tut, bzw.
keinen Browser simuliert, einen Browser fernsteuert und die Antworten dann ins Terminal haut.
Also quasi wie wenn du einen Browser aufmachst und auch direkt auf die Webseite gehst. Aber
du brauchst einen Account, das geht nicht anders. Okay Leute, also geh los. Wir haben
10 Minuten Zeit, wenn ich das richtige in Erinnerung hab für die Challenge. Also, time
to solve 10 minutes. Übrigens Leute, wenn man es in 10 Minuten nicht geschafft hat,
dann wird einfach der Server wieder gelöscht. Also du musst es in 10 Minuten schaffen.
Das liegt einfach daran, der Typ der will ja auch nicht unendlich Geld für seine AVS
VMS bezahlen. Deswegen ist das alles zeitlich beschränkt. Das ist nicht arschteuer zu hosten,
ja deswegen ist es ja auch zeitlich beschränkt. Okay also, Instructions, Terminal aufmachen.
Okay, nice. Mach mal kurz ein bisschen größere Schrift, dass ihr auch was ordentlich seht.
Also, Beschriftung. Äh Beschriftung. Description, Beschreibung. Level easy, Description. Also
ein Entwickler. Ah Leute, Leute, weißt du was wir machen? Five-Hat-Time. Guck mal. Komm
für euch. Für euch machen wir das jetzt. Diepel. Ach fuck. Ich will ja von Englisch
zu Englisch. Oh. Okay. Dann übersetzen wir es mit der Webseite. Ein Entwickler hat ein
Testprogramm erstellt, das kontinuierlich in eine Protokolldatei warlog badlog schreibt
und die Festplatte füllt. Sie können dies z.B. tail-f warlog überprüfen. Dieses Programm
wird nicht mehr benötigt. Finden Sie es und beenden Sie es. Okay, das ist relativ easy.
Ich glaube das kriegen wir einfach hin. Wir sehen, okay auf dem Server gibt es eine Log-Datei,
wo permanent reingespammt wird. Ja, der Chat schon wieder am Backseaten, aber wenn es
ausarten gibt es Timeouts. Ich sag es euch. Ihr dürft Backseaten, aber ihr müsst den
feinen Grad finden zwischen Backseaten und mir auf den Sack gehen. Und nachdem es ja
irgendwie keine Anzeige gibt, auf welcher Seite ich gerade bin, ist Backseating quasi
immer nur auf eigene Gefahr. Danke für den Sub. So, also von der Idee her relativ einfach.
Wir können z.B. mal gucken was läuft denn da so. Wir können hier mal gucken ob da irgendwas
drin auftaucht. Also ich meine die einfachste, ich zeige euch gleich wie man es ordentlich
macht oder wie ich denke, dass man es ordentlich macht. Also da sieht man hier z.B. links großartig.
Wir können z.B. PS AUX gucken, CREP, BAD. Ach guck mal da läuft doch schon was. BADLOG.PI.
Okay, das wird es wahrscheinlich sein. Allerdings, die einfachste Variante ist LS OFF. Chat ist
im Weg? Ja, der Chat, der Chat ist, ähm, eigentlich ist der Chat, nee der Chat ist
meistens nicht im Weg. Der Chat ist hier unten recht. Ich weiß eben war es im Weg, aber das
wird wahrscheinlich so oft der Fall sein. Chat bleibt trotzdem eingeplendet. So, gehen
wir mal ins Heimatverzeichnis. Select ein bisschen. So, BADLOG.PI haben wir hier. Und
dann machen wir LS OFF auf, äh, Moment. LS OFF war log BADLOG und da sehen wir, es ist
tatsächlich BADLOG.PI was da drauf zugreift. D.h. wir können jetzt folgendes machen, entweder
sagen wir KILL 633, also hier die Prozess-ID, oder wir sagen, äh, Kivo macht hier keine
Gedanken, der Chat ist wieder ein bisschen am rum, rumchibäden. Ich hab damit keine
Schmerzen mit, wenn mich einer darauf hinweist, dass der Chat über dem Text ist. So, ähm,
oder wir sagen KILL ALL BADLOG.PI, wenn das jetzt allerdings mehrfach laufen würde, dann
würden wir alles abschießen. Was LS OFF macht, das guckt, äh, welche Filehandles offen
sind. Gucken, was sie sagen. LIST OPEN FILE. Guckt, ob es Filehandles gibt auf die, auf
die Datei und zeigt ihr an, was da drauf zugreift. Und jetzt haben wir es eigentlich gefixt,
würde ich sagen. So, TAIL minus F und wir sehen, dass wir nichts mehr sehen, dass nichts
mehr reingeschrieben wird. Okay, dann lasst uns mal checken, ob wir recht haben. Check
mal Solution. KORREKT. EASY. Geh davon aus, dass nicht alles so einfach sein wird. Okay.
Jetzt restliche Zeit meinen. Ich glaube, man hat kein Internetzugriff. Man hat, man hat
kein Internetzugriff. Funktioniert nicht. Okay, ähm, der schreibt irgendwie, dass man
nicht VM ausschalten soll hier. Also, SUDO, POWER OFF. CONNECTION CLOSED. NEXT. NEXT.
Also, erstes war tatsächlich easy. Ich behaupte mal, wir haben nicht mal ansatzweise 10 Minuten
gebraucht. Ah, ich hab, meinst du, ich hab jetzt ganz AWS runtergefahren? Ja. Ich glaube,
ich ruf mal kurz bei der Amazon Hotline an. Okay, nächstes. COUNTING IPs. RUN. So, was
haben wir hier? Während die VM erzeugt wird, lesen wir uns mal durch, um was es geht. SASCATON.
SUS. SASCATON. COUNTING IPs. Okay. DIPL. Wir übersetzen es jetzt einfach wirklich jedes
Jahr. Also, folgendes. Was ist die Aufgabe? Es gibt eine Web-Server Zugriffs-Portokoll-Datei,
alles klar, unter HomeAdminAccess.log. Die Datei besteht aus einer Zeile pro HTTP Anfrage,
wobei die IP-Adresse des Anfragen am Anfang jeder Zeile steht. Finden Sie die IP-Adresse
mit den meisten Anfragen in dieser Datei heraus. Es gibt keinen Gleichstand, die IP-Adresse
ist eindeutig. Schreiben Sie die Lösung in eine Datei. HOME-HIGHEST-IP. Okay, easy. Easy.
Easy. Machen wir das doch mal. Probieren wir uns mal hier das Lösungsding. Ah, okay, man
kann auch einen Hash-Wert machen und gucken, ob das alles stimmt. Alles klar, gucken wir
mal. Schauen wir uns das Ganze mal an. Leute, ich schiebe das einfach auf die linke Seite
des Terminals, weil da kann der Chat nicht drüber sein. Ob der Chat hier drüber ist,
ist ja nicht schlimm. Alles klar. Okay, also, gehen wir mal HomeAdmin, wobei da sind wir
wahrscheinlich schon. HomeAdmin und da gibt es eine Access-Log. Okay, die Datei ist leer.
Heißt IP.txt. Es gibt eine Access-Log, tatsächlich. Access-Log. Okay, gucken wir noch mal kurz
rein. Oh, die ist ein bisschen größer. Okay, das erste in jeder Zeile ist die IP. Wir
sollen jetzt quasi, was sollen wir... Da wollte ich jetzt nicht hin. Was sollen wir
machen? Wir sollen zählen, welche IP, das die meisten Requests gemacht hat. Okay, also,
ich würde sagen, jetzt weiß ich, jetzt kommt bestimmt der erste, useless use of cat oder
irgendwie sowas. Also, ganz am Anfang jeder Zeile steht die IP. Oh, ich hätte das nicht
catten sollen, das Ding. Also, sagen wir mal, cat an einem Leerzeichen, an einem Leerzeichen
field one. So, haben wir alle IPs. Sortieren wir die IPs. So. Uniken die IPs. Nee, nicht
Unik. Unik count, geht das irgendwie? Ich glaube schon. Ich glaube, Unik kann zählen.
Unik count. Okay, also Unik count. Okay. Jetzt haben wir pro Zeile, wie oft die Sache
aufgetaucht ist. Das heißt, jetzt können wir das Ganze nochmal sortieren. Numeric. Und
dann haben wir diese IP. Diese IP hat 482 Anfragen. Können wir auch überprüfen, wenn
wir einfach sagen Echo und dann was? Char. Eins. Summ. 6ef42. Okay, check my solution.
Ach, Moment. Ich noob. Ich muss es ja erst noch in die Datei reinschreiben. Jesper, danke
für den Zapp. Check my solution ist korrekt. Wir gucken uns jetzt mal an, wie die offizielle
Lösung dazu ist. Also, was der sagt, wie man das machen soll. To get the first field IP
of. Okay, da macht's mit AWK. Cut, genau. Okay, aber andere Delimiter, aber es ist im
Prinzip das gleiche. Klar, mit AWK ist die schönere Variante, weil dann ist es egal,
ob es Leerzeichen oder Tabs oder sonst was sind. And pick the first field. Okay, cat
accessible. Ja, das braucht man gar nicht. Ach nee, ach field 1. Okay, ja, das habe
ich ja auch so gemacht. You may want to append a pipe, head or tail as you constrain. Und
weiter. Das ist ja noch nicht die Lösung. After the previous step. Sort. Ja, haben wir
auch gemacht. Unique minus C haben wir auch gemacht. Ah, der macht es anders. Ah, okay,
wie macht der das? Ich habe Sort numeric gemacht und er hat Sort minus A. Okay, das wird wahrscheinlich
auch funktionieren. Das ist der Leute viele, viele Wege führen zum Ziel. Aber wir haben
es richtige rausgekriegt. Easy. Sudo Power off. Also ich gehe davon aus, dass die Dinger
noch ein bisschen schwerer werden. Das soll easy sein. Ja, das ist doch auch easy. Also
jeder, der schon ein bisschen Linux Erfahrung. Also ich rede jetzt nicht Linux Desktop Erfahrung
reine Anwendersache, aber jeder, der ein bisschen Linux Administration Erfahrung hatte, sollte
sowas eigentlich easy hinkriegen. Chat, findet ihr das nicht? Okay, okay, wir machen eine
Umfrage. Max, falls du noch da bist, könntest du eine Umfrage machen? War das easy? Ja,
nein. Und ohne und ohne mit Kekseworten und sowas. Warum kommt nach dem S was? Was kommt
nach dem S? Okay, also war es Eats oder nicht Eats? Cut ein Sort, ja, kann ich dir gleich
erklären. Vielleicht lasse ich ja vom Teil nur ein Highlight schneiden für YouTube von
diesem Stream. Da könnt ihr jetzt einmal alle Hallo YouTube spammen, wobei ich glaube YouTube
interessiert das nicht null, nicht die Bohne, ob ich die irgendwie Linux-Admin-Challenges
hier mache. Okay, also wir sind uns nicht ganz einig, ob es Eats oder nicht Eats ist,
aber der überwiegende Teil meint Eats, allerdings ist es sehr knapp Eats. Und jetzt höre ich
auf, weil ich weiß genau, alle Leute, die jetzt noch nicht abgestimmt haben und noch
abstimmen können, die stimmen jetzt so ab, dass es 50-50 wird am Ende. Das ist immer
so. Das heißt, man darf eigentlich, sobald man im Stream das Ergebnis zeigt, muss die
absch Abstimmung fertig sein oder du musst das ignorieren, weil genau sonst passiert
nämlich exakt das. Also 50-50. Mit Google hättet ihr es auf jeden Fall alle hinbekommen.
Warum? Die Frage war, warum nach dem Cut ein Sort muss, weil Unix sonst nicht funktioniert.
Unix erwartet, dass der Input sortiert ist. Also du musst zuerst, also guck mal, wenn
du das hier machst, also der erste Teil ist, du holst dir die IP-Adressen raus. Der nächste
Teil ist, du sortierst die IP-Adressen. Der nächste Teil ist, du guckst mit Unix, wie
oft welche IP-Adresse vorkommt und dann, das ist ein bisschen abweichend von der offiziellen
Lösung, dann sortiere ich das Ganze nochmal numerisch, weil nach dem hier steht ja vorne
ganz am Anfang eine Zahl und mit Sort minus N sortiert er quasi anhand von numerisch das
Ganze und dementsprechend steht 482 unten und die letzte Zeile ist, also meine Lösung
ist ein bisschen anders als die offizielle Lösung, aber funktioniert ja auch genauso.
Ja, Google ist ja auch erlaubt. Google ist ja, ist ja hier denke ich auch erlaubt. Okay,
Power off. Easy, next. More Scenarios. Also wenn ihr was wissen wollt, Leute, gerade
wenn wir durch sind, könntest du auch Sort minus U machen, wahrscheinlich. In der offiziellen
Lösung ist es ein Revertsort und sowas. Gibt sich, wahrscheinlich könntest du auch noch
ganz trickreichere Sachen machen. Der Python Crack hätte wahrscheinlich in Python Interpreter
gepiped und das darin irgendwie sortiert oder was auch immer. Nutzt du deine Linux-Maschine
als VM und was für ein Linux-Distro benutzt du? Das ist eine VM, korrekt? Guckt da. Ich
benutze selbstverständlich Archlinux, by the way. Das ist aber gut, dass du es ansprichst,
weil ich denke, ich hätte euch das heute schon nochmal erzählen müssen, dass ich Archlinux
verwende. Also hier nochmal ganz offiziell Leute, ich verwende Archlinux. Ich hoffe,
ihr habt es mitbekommen. Archlinux. Nicht elitär genug für Gento. Auf Gento hab ich
keinen Bock. Manjaro, doch Manjaro war es vorher. Opensuse, äh, Igitt. Oder Gentoo,
wie es manche sagen, ja. Womit sollte man bei Windows 11 virtualisieren, um halbwegs
performant zu sein? Vor allem bei Workstation finde ich es die beste Desktop-Virtualisierung,
die es gibt. Auch mit Snapshots und allem dabei und bisschen 3D-Beschleunigung und
Acceleration und du kannst sogar nestet-Virtualisierung machen und sowas. Ja, also gerade wenn wir
mit so einer Übung durch sind und ihr was wissen wollt, Leute, könnt ihr das ohne
Probleme dann, ihr könnt es vorher schon in den Chat schreiben, aber wenn wir mit der
Übung durch sind, kann ich ja noch ein bisschen was erklären, wenn es noch was offene Fragen
gibt, wobei ich denke, das war jetzt relativ einfach. Ok, weiter. Find Secret Combination,
doch easy, aber jetzt haben wir 15 Minuten Zeit. Deine Meinung zu Postgres, beste Datenbank,
gerade beste Open Source-Datenbank. Das Gute an Postgres ist, dass Postgres alles kann,
du kannst Time-Series-Daten, du kannst Time-Series-Sachen drinnen speichern, mit Time-Scale-DB, oma,
was, Time-Scale, ja doch, ich glaube, Time-Scale-DB, vielleicht nicht so gut wie ein Influx oder
sonst was, aber performant genug. Du kannst eine Volltext-Suche, du hast eine Trigram-Suche
für Wildcards und Autocomplete und sowas. Postgres ist das Beste, was es gibt. SQLite
ist auch das Beste, was es gibt in seinem Bereich. SQLite, also wenn ich die Auswahl
hätte zwischen, was ist die beste, universellste, einsetzbare Datenbank, dann SQLite, weil ich
glaube, SQLite dürfte auch die weltweit verbreitetste Datenbank sein, gerade weil so gut wie jede
Android-App mit einer internen SQLite-Datenbank daherkommt, aber das war jetzt ja nicht die
Frage. Also es ging ja um keine so embedded Datenbank-Kram wie SQLite, sondern es ging
ja um einen richtigen Datenbank-Server und da finde ich Postgres das Beste, auch wenn
ich nicht der Super-Datenbank-Checker bin. Ich habe schon gelesen, es gibt manchmal Datenbank,
also manche dieser Aufgaben sind so Datenbank-Aufgaben, da bin ich mal gespannt. Auf geht's, nächste
Übung. Okay, easy, Santiago. Find a secret combination, okay, Alice hat zwei geheime
Nummern versteckt auf dem System. So, wir sollen die Anzahl der Zeilen rausbekommen,
wie oft der String Alice vorkommt in allen txt-Files im home-admin-directory. Okay, also
wir sinds. Okay, Deep L, ihr habt Recht. Massive. Massive, Diepel. Deep L. So, also. Alice die
Spionin hat eine geheime Zahlenkombination versteckt. Finden Sie mit diesen Anweisungen,
finde die Anzahl der Zeilen, in denen die Zeichenkette Alice in allen txt-Dateilen im
verzeichnungs-home-admin vorkommt. Es gibt eine Datei, in der Alice genau einmal vorkommt,
in der Zeile nach diesem Vorkommen steht eine Zahl. Schreiben Sie beide Zahlen nacheinander
als eine, keine neue Zeile oder Leerzeichen in die Lösungsdatei. Okay, da hat Diepel
jetzt ein bisschen verkackt. Zum Beispiel, wenn die ersten Zahlen, okay. Ich soll im
Prinzip beide Zeilen ohne Leerzeichen. Das ist okay. Kann man so machen. Könnt ihr auch
einfach hintereinander echoen. Okay, dann probieren wir das doch mal. Also, wir sollen
rausfinden, wie oft kommt Alice vor. Na, das ist relativ easy. Crab minus C. Alice. Wohlgemer
Groß- und Kleinschreibung ist an der Stelle wichtig, also machen wir nicht minus I. Und
dann Sternchen Punkt txt. Und wir sehen. Okay. Mit AWK könntest du es bestimmt auch irgendwie
machen, aber in dem Fall ist Crab einfacher, zumal es um Zeilen geht. Okay, also hier kommt
Alice einmal vor in 1, 3, 2, 1, 3, 4, 2, 0 Punkt txt. Und in den anderen kommt es 12
und 0 mal vor. Okay, das heißt, wir rechnen das mal kurz zusammen. Echo 3, 9, 8 plus 1
plus 12 nach BC. Cringe. BC nicht installiert. Darf man Sachen nachinstallieren? Wahrscheinlich
nicht. Ich glaube nicht, dass das funktioniert. Nachinstalliert werden darf nicht. Na gut.
Dann, ich wollte gerade sagen, dann machen wir es mit Bash Build ins Deskump funktioniert
auch. So. 411. Okay, 411 ist schon mal unsere erste Zahl. Und die zweite Zahl finden wir
in der Datei, wo Alice nur einmal vorkommt. Könnte man eventuell mit WC rechnen? Ja,
du könntest es auch mit WC machen. Das zeige ich gleich. So, machen wir das mal auf, suchen
da drin nach Alice. Kommt ja nur einmal drin vor und dann brauchen wir in the line after,
dann nach Alice. Okay, also brauchen wir 156. Also haben wir 411, 156 und das soll exakt
so in die Datei rein. Ich zeige gleich, wie man es mit WC eventuell machen könnte. Bin
mir gerade nicht ganz sicher, ob es funktioniert. Da müsste gehen. Und das muss jetzt in die
Datei. Solution. X ist Solution. MD5 Sum. Solution. Ja, D80E02D sieht gut aus. Check
my Solution. Passt, ist korrekt. Also was man auch machen könnte wahrscheinlich ist,
anstatt CREP minus C könnte man wahrscheinlich auch WC minus L machen. Dann hat man auch
411. Das ist eine gute Idee. Das ist eine gute Idee. Zählt WC auch richtig, wenn Alice
zweimal pro Zeile vorkommt? Ja, weil CREP das nur einmal ausspucken würde. Das ist
eine gute Idee, Chat, das so zu machen. Was der Unterschied ist, der Unterschied ist,
hier wird es angehängt und hier wird es überschrieben. Guck mal, jetzt steht es zweimal drinnen
und mehrfach und jetzt, wobei das bei ZSH nicht unbedingt so standardlich funktioniert,
überschreibt das. Also das ist reinschreiben in die Datei, aber quasi von vorne anfangen
und den Rest überschreiben oder erstmal Datei quasi leeren und dann überschreiben und das
andere ist Anhängen. Also zwei sind Anhängen, eins ist reinschreiben. Also wenn du ein Log
File hast, was permanent gefüllt werden soll, dann ist das. Wenn du einen Log hast pro Skript
dran, zum Beispiel, dann würdest du es mit einem machen. Was macht minus L? Zählen,
Beligns, Zeilen zählen. Wenn du nämlich normales WC machst, dann zeigt es dir auch
Zeilen an. Es zeigt dir Zeilen, Charakter und keine Ahnung, was sonst noch an. Wörter,
Charakter, Zeilen, irgendwie sowas. WC minus L ist nur Zeilen, nur Zeilen rechnen. WC minus
L ist auch das am häufigsten Benutzte in der Kombination. Ok, sudo power off easy. Bevor
ich ausmache, noch irgendwelche Questions zu der Aufgabe. Ich vermute mal, jetzt wird
es ein bisschen schwerer. Ach ja, wir gucken uns doch mal die offizielle Lösung an, was
sie dazu wie sie schreiben, wie man das machen soll. Use find. Ok, das haben wir schon mal
nicht gemacht. Use find and pass the results to grab via xarx. Kann man auch machen. Solution,
zum Beispiel find, home, admin, xarx, grab minus zählen. Könnte man auch so machen.
Ja, also was xarx macht, ist folgendes. xarx nimmt die Zeilen vom Input und macht daraus
quasi eine Argumentliste, die sie an grab anhängt. Was im Endeffekt bedeutet, es ruft
in grab auf und dahinter schreibt es die Dateien, so das grab in den Dateien. Aber wie gesagt,
man kann auch Sternchen.txt machen. Ok, fertig. Was ist zserver? Zserver ist troubleshoot
and makes zservers happy. Lead code for linux. Capture the flag challenges. Train and prove
your debugging skills. Practice for your next sre devops interview. Also im Endeffekt bekommst
du den linux server bei aws, auf dem du verschiedene Aufgaben lösen musst. Das war doch nicht die
ganze solution. Doch. Also das was ich gemacht hab. Signs auch oder? Signs funktioniert
auch hier. Wobei ich meins angenehmer fand. Das ist ohne Registrierung ja, aber das hat
ein Limit. Also du kannst jetzt nicht irgendwie das ganze 40 mal am Tag machen oder so. Ach
so, der zweite Teil hat noch gefehlt. Ja, jetzt steht stimmt, wenn man mir nochmal drauf
klicken müssen. Alles klar. Nice haben wir sudo sudo power off. Bäm. Next. More Scenarios.
Also Leute, easy ist jetzt fertig. Jetzt wirds anstrengend. Jetzt kommen die medium medium
schweren Dinger. Manhattan can't write into database. Da wollen wir mal gucken was man
hätten für Probleme hat. Manhattan hat wahrscheinlich zu viel dritter deutschland in den letzten
Tagen gelesen und hat keinen Bock mehr. Hat sich gedacht, ne ich hör auf, ich stell den
Dienst ein. Richtig gut, da ist es schön, dass du deinen Weg hergefunden hat und dass
dirs gefällt. So, also wir können uns das ganze ja mal durchlesen bis die vm gestartet
ist. Ok, description. Moment, Diepel. Diepel. Diepel. Also Beschreibung. Ihr Ziel ist es,
eine Zeile in eine bestehende Postgres Datenbank einzufügen. Das Problem ist nicht spezifisch
für Postgres und sie brauchen keine Details darüber zu wissen, obwohl es hilfreich sein
könnte. Aha. Ja, ich hab die neuen Api Pricings gesehen, total lächerlich. Zur hilfreichen
Information zu Postgres. Es handelt sich um einen Dienst, der an einem Port 5432, das
ist der Standard Postgres Port, lauscht und auf die Festplatte in ein Datenverzeichnis
schreibt, dessen Speicherort im Parameter Data Directory der Konfigurationsdatei etc
die Postgres14MainPostgres.conf. In unserem Fall wird Postgres von Systemd als eine Unit
mit dem Namen PostgresQL verwaltet. Vom Standard Admin Benutzer. Ok, der Test. Das ist der
Test, da können wir testen, ob es funktioniert. Alles klar. Den Test copypasten wir uns mal
und schauen wir mal, ob der Server bereit ist. Jop. Ok, führen wir das mal aus und stellen
fest, nope geht nicht. Warum geht es nicht? Weil, no such file or directory is the server
running. Ok, wahrscheinlich läuft Postgres einfach nicht. Ostge. Wobei es heißt glaube
ich, PG irgendwas. Gibt es nicht. Ok, System CTL, Status, Postgres, nee PostgresQL, das
ist glaube ich. Ok, das ist, ok, jetzt wird es langsam interessant. Ich hätte jetzt gedacht,
easy, wir gucken einfach und das Service läuft nicht und wir starten den Service. So einfach
ist es anscheinend schon mal nicht. Also Postgres selber läuft wohl, aber trotzdem
funktioniert der Zugriff auf Postgres nicht. Das heißt wir machen jetzt mal NetStats und
gucken ob an Port 5, 5 4 3 2 überhaupt was lauscht und wir stellen fest, Postgres ist
der Meinung, dass es läuft. Ja, das ist komisch. Ok, das ist natürlich merkwürdig. Postgres
ist der Meinung, dass es läuft, aber Postgres läuft anscheinend gar nicht.
Da ist ChainLore, ja. Werde ich meinem Cutter ausrichten, wir werden in Zukunft easy selbstverständlich
noch als easy emote einplanen und Begründung ist, weil es der ChainLore gesagt hat. Aber
ist wahrscheinlich, wäre wahrscheinlich doch besser gewesen. Ok, lass mal kurz, lass mal
kurz so prinzipiell ein paar Sachen, ein paar Sachen checken. War, log, Postgres, Postgres
MainLog, wieder ist nichts drin. Das schon mal, sus, could not create log file, no space,
ok, Moment, df-h, die Festplatte ist voll. Ok, das ist ein guter Test. Das ist gar nicht
so weit von der Realität weg, Leute. Das kommt tatsächlich vor in der Praxis. Ok, die Festplatte
ist voll. Also, gehen wir mal nach. Opt, pg-data, gucken wir mal, was es da so gibt. Guck mal,
es gibt sogar einen File, was ich delete me nennt. rm, delete me, Moment, in dem File steht
überhaupt nichts drinne. Der muss aber auch nur einen pit-file anlegen, vielleicht reicht
das ja, delete me. Ok, System, ctl, restart, Postgresql, net-stat, ups, what the fuck, net-stat,
minus, nein, die läuft immer noch nicht. Wir löschen, komm, wir löschen die anderen,
ich mein, das sind Backup-Files oder irgendwie, irgendwie, Postgres-Dumps oder sowas. Das
hier wird, das hier ist ja die eigentliche Datenbank. Wir löschen, wir löschen den
ganzen Kampel hier einfach mal. rm, File, m, restart, Postgresql. Hast du das neue Harry
Potter Spiel? Nee, hab ich nicht. Ich war aber nach diesem ganzen Circle-Jerk auf Twitter
mal ganz kurz haben überlegen, ob ich es mir nicht kaufen soll. Einfach, um ein paar
Leute abzufucken. Aber ich hab mir dann am Ende gedacht, nee, eigentlich ist es bescheuert,
Geld auszugeben für ein Game, was dich nicht interessiert und dich das Franchise auch nicht
wirklich interessiert, also insofern. So, net-stat. Jetzt läuft die Datenbank. sudo, insert-into,
funktioniert, Datenbank läuft wieder, check my solution, ist korrekt. You made a Zetges
server happy, congrats. Nice, oder? Wir sind, wir sind schon richtig, richtig nette Leute
hier. Server is happy. A white pepo happy server. Ich muss es auf Twitter streamen.
Ich muss gar nichts. Alles auf Twitter streamen, das machen bestimmt manche Leute zum Ultratriggern.
Poggers, Server is wieder glücklich. Chat, gibt es noch Fragen dazu? Wollt ihr noch
was wissen? Hab ich irgendwas übersehen? Ja, man kann, man kann auf Twitter, früher
war das mit Periscope, aber man kann auf Twitter irgendwie streamen. Kannste auf Twitter so
viel Bullshit machen, was keiner will? Ach, was wäre die Original-Lösung gewesen? Gute
Frage, gucken wir gleich. A disk space voll. Wir hatten Glück, dass in der Fehlermeldung
stand, no space left on device. Weil auf die Idee da jetzt zu gucken, wäre ich wahrscheinlich
erst viel später gekommen. Die Original-Lösung. Ja, was ist die Original-Lösung? Run the test,
is this Postgres Server running? You can check sudo, das haben wir gemacht. PS AUX Postgres,
ne das haben wir, doch haben wir glaub ich auch so was probiert. System start Postgres,
check status again, sowas in der Richtung haben wir auch gemacht. Das haben wir nicht
gemacht. Journal minus u, Postgres, blablub. Wir haben es im Postgres Log selber gefunden,
ist aber auch ok, ist ja egal wo man es herfindet. Warlog syslog, hab ich auch nicht reingeguckt,
ich hab im Postgres Log selber geguckt. Check disk space, das haben wir wieder gemacht. Minus
h ist übrigens nicht wirklich erforderlich. Minus h ist nur, dass es human readable ist.
Das heißt, hier hätten wir es auch gesehen, aber minus h ist natürlich deutlich angenehmer
zu lesen. Weil, was weiß ich wie viele bytes versus 8G, da erkennt man das deutlich besser.
So und danach krept minus i im syslog, aha. Und dann Postgres data, ok leute, ich hab es
ganz anders gemacht anscheinend. Delete backup files, ok das hab ich dann wiederum gemacht
und das Ding gestartet. Ok, die offizielle Lösung ist finde ich fast komplizierter als
meins. Leute, das ist jetzt, das ist wirklich noch nichts großartig kompliziertes. Ich
hab 15 Jahre Linux Erfahrung und auch Admin Erfahrung, da ist sowas nicht sonderlich kompliziert.
Ich gebe zu, ich gebe zu, das war Zufall, das muss ich auch zugeben, das war in dem
Fall tatsächlich Zufall, dass ich das gefunden habe so schnell. Das ist so direkt im Log
drin entstanden, das war Zufall, das hätte doch durchaus länger dauern können. Weirdflex,
ja was soll ich sagen, es ist die Wahrheit. Aber man muss sich da keine Gedanken drüber
machen. Ich benutze täglich Linux, ja. ncedu ist wahrscheinlich nicht drauf. Ich benutze
täglich Linux, ich benutze täglich Linux auf der Arbeit, sowohl auf dem Desktop als
auch in unserer gesamten Linux Umgebung. So ein paar Sachen, wie Dienst läuft nicht,
Logg Files nachgucken, das macht man so oft, da denkt man gar nicht mehr großartig drüber
nach. Ich habe in Warlog geschaut, genau. Ja. Das ist auch nicht verkehrt erstmal zu
gucken. Also ich glaube so eines der meist benutzten Befehle ist df-h, free-m und solche
Geschichten. Danach dicht gefolgt von htop, ok vielleicht normales top, wenn es kein htop
gibt. Alles klar, check my solution, korrekt, BÄM. Sudo, ne brauchen wir nicht. Power off.
Gibt es noch Fragen zu der Aufgabe chat? Ist das eine Debian vm, das ist eine gute Frage,
guck mal mal. Alter, leckt, meine Güte, jetzt haben wir, ach home is not set. CUT, etc.
Es ist eine Debian GNU Linux, nicht dass man etwa auf die Idee kommt, einfach nur Linux
zu sagen, weil ihr wisst was passiert. Dann wirds kritisch, wenn man einfach nur Linux
sagt. Man muss schon korrekterweise GNU Linux sagen, sonst spawnt er bei euch um die Ecke
und flamet euch. Du hast keinen anderen Zugang von dort, du kannst dort nicht rein und nicht
raus. Funktioniert nicht auf der Kiste. Die haben das schon ganz gut gemacht, guck du
kannst jetzt zum Beispiel, du kannst ja nicht mal ein DNS Server pingen. Kannste gar nichts
machen. Was aber auch sinnvoll ist, weil sonst würden die Leute garantiert das irgendwie
missbrauchen. Was für ein Linux wird auf Enterprise Ebene gerne benutzt, dazu kann
man eigentlich bloß sagen Red Hat beziehungsweise CentOS, was es ja nicht mehr gibt in der jetzigen
Form. Zum größten Teil Red Hat. Mit UFW geblockt, können wir gucken. Ach, der hat mal installiert.
Ne ne, das ist bestimmt nicht geblockt, das ist ein privates Netz ohne Zugang. So blöd
ist der Betreiber bestimmt nicht. Also Red Hat, Red Hat ist im Enterprise Umfeld eigentlich
mit Abstand das beliebteste, zumindest meiner Erfahrung nach. IP Tables willst du, ja können
wir auch gucken. IP Tables minus V minus L, nix drinne. Ansonsten, ich wollte gerade sagen,
flirten als ich wollte gerade sagen, in Asher ist Ubuntu tatsächlich relativ beliebt. Dadurch,
dass es jetzt kein CentOS mehr gibt, könnte ich mir vorstellen, dass es im Enterprise
Umfeld auch etwas nachlässt. Weil aktuell ist es so, entweder du kaufst dir wirklich
Red Hat für jede Kiste, beziehungsweise mit Support Abo und Geschiss, oder du benutzt
eines der neuen CentOS Nachfolgeprojekte. Genau, sowas. Wobei, da hat kaum noch eine
Erfahrung so wirklich damit. Oder, oder, das ist auch eine Möglichkeit, oder man benutzt
Oracle Linux. Kann man auch machen. Wobei ich persönlich eher auf Ubuntu setzen würde,
Debian ist auch möglich. Also, so wie Shryker sagt, es ist eigentlich Red Hat, Red Hat,
Ubuntu und Debian. Suze ist, ist mir ehrlich gesagt in freier Wildbahn bis einmal für
die Telefonanlage noch nie untergekommen. Ja, Alpine, wenn die Container zählen, da
hast du recht. OpenBSD habe ich so, will ich gerade, habe ich so in freier Wildbahn mal
ein OpenBSD gesehen? Nee, ich glaube nicht. Doch, habe ich. PFSense habe ich ein paar
Mal im Einsatz gesehen. Aber ansonsten. Ja gut, Alpine basierte Images haben den Vorteil,
die sind halt sehr klein. Ok, also sind wir hier fertig. Sudo, Power off. Bam. Ups, ja.
So, more Scenarios. Next please. Wo sind wir stehen geblieben? Manhattan. Can't write into
Database. Als nächstes kommt Tokyo. Can't surf Webfile. Medium, 15 Minuten. Ok, run.
Also, was ist die Aufgabe? Die Aufgabe ist tatsächlich diesmal relativ kurz und knapp.
Also, Stufe Mittel. Es gibt einen Web Server, der eine Datei war www.html.ok, das ist also
der Standard der Standardfahrt. Der eine Datei war www.htmlindex.html mit dem Inhalt Hello
Set Server bereitstellt. Aber wenn wir versuchen sie lokal mit einem HTTP Client wie Curl zu
prüfen, zu überprüfen, wird nichts zurückgegeben. In diesem Szenario geht es nicht um die spezielle
Web Server Konfiguration und sie müssen nur allgemeine Kenntnisse über die Funktionsweise
von Web Servern haben. Ok, Test ist Curl auf Port 80 sollte Hello Set Server zurückliefern.
Alles klar. Gucken wir mal. Gucken wir mal was passiert, wenn wir es ausführen. Curl hängt.
Hängen ist komisch. Home, Ubuntu, ja gut, was auch immer. Netstat. Wir gucken mal ob
auf Port 80 überhaupt was läuft. Port 80 läuft ein Apache. Der läuft und ist an.
Ob IPv6 auf Port 40, das ist bei lokalen Sachen, das ist egal, das müsste auch so funktionieren.
Ok, ich habe eine Idee. Ich habe eine Idee. Nachdem das hier gar nicht funktioniert, machen
wir mal System CTL, stopp, Apache, Apache 2, ok, Apache 2 ist es. Status, aus. Wir haben
das gleiche Ergebnis wie vorher. Passt mal auf Leute, die wollen uns debaten. Ich sage
euch, die wollen uns debaten. Sieht eigentlich gut aus. Ne, sieht nicht gut aus. Die wollen
uns ernsthaft debaten. Die wollen uns wirklich debaten. Ich habe es eigentlich nur eingegeben,
weil vor zwei Minuten jemand im Chat geschrieben hat, wie man mit IP Tables überhaupt die
Chains und so auflistet. Das hätte ich aus dem Kopf gar nicht gewusst. Also ohne den
Chat hätte ich das nicht so schnell rausgekriegt. Ja, daran liegt es. Daran liegt es, der droppt
einfach alles. Also normalerweise, also hätte jetzt nicht einer im Chat geschrieben, hätte
ich folgendes gemacht. Ich hätte einen temporären Web Server oder Netcat gestartet auf Port
80. Ich hätte Apache ausgeschaltet. Wir machen das mal. Wir tun mal so, als hätten wir es
noch nicht gefunden. Wir tun einfach mal so, als hätten wir es noch nicht gefunden. Also
wahrscheinlich hätte ich als nächstes folgendes gemacht. Python One Liner HTTP Server. Wahrscheinlich
hätte ich das hier gemacht. Wahrscheinlich hätte ich sowas hier gemacht. Haben wir eine
T-Max drauf? Ah, Polgarz, nice. Also wahrscheinlich hätte ich jetzt gesagt, war www. War www,
habe ich mal hier geguckt, HTML. Okay, es ist zwar alles root, das ist schon sehr merkwürdig,
aber es ist zumindest lesbar. HTML. Und dann hätte ich wahrscheinlich sowas hier gemacht.
Port 80. Ach Mist, okay. Ist gar nicht drauf. Na dann. Ah nee, doch ist drauf. Wahrscheinlich
hätte ich das hier gemacht. Und dann hätte ich mal probiert. Curl, Local Host 80. Brauchen
wir da eigentlich nicht. Und es geht immer noch nicht. Und dann wäre ich wahrscheinlich
schon skeptisch geworden, weil ich mir gedacht, okay, das kommt gar nichts an. Das wird wahrscheinlich
auch nicht am Apache liegen. Das nächste, was ich wahrscheinlich probiert hätte, ist
auf Port 8000. Und dann hätte ich geguckt, geht es auf Port 8000? Auf Port 8000 funktioniert
es. Und dann hätte ich mir gedacht, Moment, woran kann das liegen? Und dann hätte ich
wahrscheinlich IP-Tables geguckt. IP-Tables minus V minus L. Und da ist es drin. Ja, okay.
Also dann wählen wir das Ganze mal. System CTL Restart Apache. IP-Tables, boah, das
weiß ich aus dem Kopf nicht. IP-Tables minus D. Keine Ahnung, weiß ich aus dem Kopf nicht.
IP-Tables, Delete, Rule. Ist NF-Tables eigentlich mittlerweile weit verbreitet? Nö. IP-Tables
minus F, okay. Und wie löscht man? Okay, ich machs einfach wieder. Ich machs einfach
wieder. Chatters schreiben. IP-Tables einfach nur minus F oder sowas wie minus F Input.
Das ist doch, glaube ich, eine Input-Regel. Gibt es sowas wie IP-Tables, IP-Tables minus
F Input, sowas? No-Chain, ah nee. Input groß geschrieben, so. Okay, einfach nur minus
F. Alles klar. Okay, jetzt ist es leer. Und jetzt Curl Local Host. Oh. Da ist noch mehr
im Argen. Nee, Leute, das hab ich jetzt kaputt gemacht. Ich glaube, das hab ich mit meinem
Python Zeug kaputt gemacht. Nee, Apache ist gestartet. Alter, was will denn das hier?
NetStats minus Tulpen. Apache läuft. Ich glaube, ich hab's kaputt gemacht. Aber Curl
funktioniert nicht. Warum oder was ist der Test? Ach so, Moment. Wobei das eigentlich
können. You don't have permissions. Eigentlich müsste das ja auch WWW-Data gehören. War
schon kaputt? Also normalerweise müsste das WWW-Data gehören. Vermute ich mal. Gucken
wir mal. Hier ist auch Scrap-Apache. Der läuft als WWW-Data. Allerdings wundert es mich,
weil es ist ReadX. Was im Endeffekt? Ah. She baited. Deswegen funktioniert das nicht.
Okay, dann machen wir's gleich mal richtig. CHown WWW-Data. WWW-Data. CHown minus R. HTML.
HTML. Curl. Jetzt funktioniert's. Okay, alles klar. Das hab ich doch nicht selbst kaputt
gemacht. Also waren's zwei Schritte. Als erstes, musste man feststellen, dass IP-Tables HTTP
Traffic blockt. Und als zweites hat man festgestellt, der Datei hat die falschen Rechte. Schauen
wir mal, ob das jetzt funktioniert. Check my solution. Correct. Also, dann schauen wir
uns mal die offizielle Lösung an. Chat, wenn ihr Fragen zu dieser Übung habt, haut's
jetzt in Chat. Wahrscheinlich hab ich manche Sachen übersehen. Oh. Ich glaub, wir haben
länger gebraucht als notwendig. Dafür ist. Okay, alles klar. Also, Solution. Run test
Curl. Okay, haben wir gemacht. Siehste, da wär ich wahrscheinlich erst viel später
draufgekommen, IP-Tables zu gucken. Siehste, das war Zufall, weil's eben jemand im Chat
vorher geschrieben hat. IP-Tables. Dann muss man IP-Tables minus F machen. Okay. Dann
muss man das Ownership checken für die Datei. Ja. Und dann CHown. Okay, ich hab Recursive
FCA ongemacht. Alles klar. Okay, nice. Haben wir auch rausgekriegt? Pfeifert. Wobei das
wahrscheinlich gar nicht funktioniert, weil der DNS ist ja cached. Da hat's eine Anfrage
geschickt. Ja, so was in der Richtung machen wir. Okay, gibt anscheinend. Nee, hab ich nicht.
Da lagst du gar nicht so falsch mit. Warst ja am Ende dann auch. Also was? Okay, Moment.
Hallo und guten Tag. Ich habe mal eine Frage. Vielleicht kann mir hier einer helfen. Ich
benutze in meiner Schule auf Linux VM Tools. Was? Ich benutze in meiner Schule auf Linux
VM Tools. Kann ich meine erstellte Sandbox, die Daten kopieren, diese bei mir zu Hause
auf Windows dann aufrufen mit dem VM Tools bei mir? Ich hab keine Ahnung, was du genau
machst. Da kann ich jetzt so nichts zu sagen. Das ist mir zu vage. Okay, haben wir das fertig?
Next. Tokio sind verstehen geblieben. Tokio. Als nächstes kommt Cape Town. Das hört sich
ja schon an. Run. Moment, das gehört ja gar nicht dazu. Okay, also. Was ist die Aufgabe?
Gestörte Engine X. Kollege vom Chainlord, der Engine X hier. Es ist ein Engine X Web Server
installiert, der von System D verwaltet wird. Wenn Sie curl minus L machen, ausführen,
erhalten Sie curl fail to connect to localhost. Beheben Sie das, so dass Sie die Standard
Engine X-Seite erhalten, wenn Sie curl ausführen. Okay. Okay, die VM ist noch nicht ready. Nicht
ready. Ich glaube, er will einfach nur seine VM kopieren. Ja, vielleicht. Keine Ahnung.
Er könnte sich auch die Dateien auf den USB Stick kopieren und dann was ich daheim in
der VM oder was auch immer. Ich kann daraus das nicht erkennen. Also du kannst die, also
wenn du die VM kopierst, komplett, also mit Config Files und Disk Images und sowas, da
kannst du die ohne Probleme eins zu eins auf dem anderen Rechner starten. Okay, was? In
der Schule haben wir ein Linux PC. Da ist VM Tools drauf. Da machten wir ein Windows
10 Pro Sandbox drin. Jetzt habe ich aber zu Hause kein Linux, sondern nur Windows 10 kann
ich erteilen, die ich in. Ach so, ja, sind ja die gleichen. Es ist ja das gleiche Betriebssystem
in der VM. Ja, ja, das funktioniert. Nee, also ich kenne das, aber dieses habe ich nicht
gemacht. Das funktioniert. Am besten ist, du nimmst einen USB Stick, ziehst dir das
da drauf und nimmst halt einfach mit. Okay, also, wo sind wir stehen geblieben? Open Terminal.
Next. So, was soll funktionieren? Was soll funktionieren? Erst mal root werden, wie immer.
Curl 127.0.0.1. Geht nicht. Connection refused. Der ist in engine.x-webserver install. Okay,
also System CTL Status engine.x. Paled. MonkaS. Geht schon gut los. Warum ist der engine.x-Server?
Warum failed der? Der failed, weil. Unexpected Semicolon in etc engine.x sites enabled default.
Aha, da sind irgendwelche Zeichen drinnen, die da nicht rein sollen. Ich sehe es nicht.
Wo ist da? Er sagt Zeile 1. Ah, she baited. She baited. Habe ich nicht gesehen, Leute.
Alles klar, okay. So, Semicolon weg. Restart engine.x. Okay, das sieht jetzt schon viel
besser aus. Das wird aber wahrscheinlich nicht alles gewesen sein, oder? Status engine.x running.
Eats. Okay, das wird aber wirklich, ich glaube nicht, dass das alles gewesen wird. Curl.
Okay, ich wusste doch, dass da was kommt. Internal Server Error. Oh, Moment. Jetzt müssen
wir nochmal. Vielleicht heißt die Datei falsch. War. Okay, ich meine, sie gehört gut, aber
sie hat Read Access. Das sollte reichen. Da ist doch bestimmt ein Schreibfehler drinne
oder sowas. Index Engine.x debian.html. Darf das, darf das Ding so heißen? Das darf so
heißen. Okay. MV. Wir verschieben, wir verschieben das Ding jetzt mal. Machen ein Curl und gucken,
was rauskommt. Pop in. Okay, also prinzipiell geht das, aber es hat einen Internal Server.
Hä? Da kaputt. Wie kommt man auf den Internal, Festplatte voll wieder. Wie kommt man auf
den Internal Server Error bei einer einfachen Log Datei, bei einer einfachen HTML Datei.
Ist der rechte Schein okay? Gucken wir mal, Wahllog. Show in die HTML. Können wir gleich
machen? Na klar. Alter Windows, was ist jetzt los? Engine.x Error Log. Oh, was ist da? Was
ist da los? TMAX. Ach fuck. Okay, es ist kein TMAX auf. Too many open files? Two? Hat das
Ding irgendwelche Limits gesetzt, dass es keine Dateien aufmachen kann? Hat es ein File
Handle Limit irgendwo gesetzt, was ich jetzt nicht gesehen habe? Wobei man das wahrscheinlich
nicht in der. Okay, das ist jetzt tatsächlich ein bisschen komplizierter. Ich glaube hier
in der Konfig setzt man das nicht. Moment, Moment, Moment. Google. Too many open files.
Engine.x Aha, aha. Too many open files. Also in der Engine.x Konfig habe ich nichts gesehen.
Es wäre aber auch bescheuert. Ah, hier guck mal. Limit. Das kann sein, dass in der Limits
da Teil was drinne steht. Limits. Nope. Du hast recht, im Unit File. Im Unit File könnte
wirklich sein. System CTL Edit. Okay. Stack Overflow Driven Bug Fixing. Limit File. Zehn.
Ich habe seriously keine Ahnung was diese Option macht. Ich habe diese Option noch nie
in meinem Leben verwendet. Du hast zwei VWW. Nee, ich kann keine zwei VWW haben. Okay,
wir schreiben einfach 10.000 rein oder so. Okay, easy. Wenn das hilft. Ups. Ah, das ist
ja Nano, MonkaS. Wer macht denn sowas? Wer quält einen hier mit Nano, Mensch? Richtiger
Pepega Editor. System CTL Restart Engine.x Wie? Was? Hey, ist die Datei aber noch vorhin
editiert? Hä? Ach, ETC Engine. Ist das da auch noch verkehrt oder was? Nee, Quatsch.
Quatsch, Quatsch, Quatsch. Ach, kann man sich mit der ID etwa verbinden, Chat? Ah,
okay. Ich muss die Kiste jetzt ausschalten, Leute. Wer weiß was ihr da drauf rumwurstet.
Das hätte ich ja nicht gedacht, dass man mit der ID, wenn man die ID sieht, irgendwelche
komischen Dinge anstellen kann. Das hätte ich wirklich nicht gedacht. Aber okay, dann
kann man das so im Stream nicht machen. Kann man, ja. Anscheinend geht das. Also, es gibt
jetzt zwei Varianten, wie wir das machen können, Chat. Entweder ihr haltet euch zurück, wobei
ich vermute, vermute, dass das nicht funktionieren wird. Oder ich muss das irgendwie ausblenden.
Okay, oder Vollscreen, oder, nee, das ist, das ist auch dumm. Einfach die Katze oben
in die Ecke. Nee, nee, nee, so einfach ist das, glaube ich, nicht. Wie blende ich das
jetzt? Kann man nicht irgendwie einfach die Adressleiste ausblenden oder so? Okay, wir
müssen das, glaube ich, OBS-technisch irgendwie ein bisschen verschieben. Okay, jetzt muss
ich mal kurz gucken, ob das jetzt weg ist. Nee, aber da muss ich viel zu viel ausblenden.
Das ist doof. Da muss uns irgendwas anderes einfallen. Keklchi bated. Nee, nee, das kannst
du vergessen. Der Chat wird sich nicht benehmen. Das kannst du, das kannst, das ist ausgeschlossen.
Kannst du den OBS einfach eine Color-Source hinzufügen und dann? Okay, gibt es die Möglichkeit
Chrome-Hide-Addressbar, Auto-Hide-Addressbar, okay. Ja, ich muss, ich muss wohl einen Offerlay
machen. Halt, gibt es da irgendwas? About-Flags? Hä? Hide-Toolbar, das ist doch was ganz anderes.
Ach nee, das geht tatsächlich. Das geht, das geht tatsächlich. Ach komm, scheiß drauf,
ich mach jetzt, ich mach jetzt einfach folgendes. So. Easy. Jetzt seht ihr auch nichts mehr.
Okay, more scenarios. Weil mich das triggert, ich kann keine 1 mehr kopieren. Also, wo sind
wir stehengeblieben? BorkedEngineX, das hatten wir gerade, das haben wir gefixt. Außer Keklchi
Baited. Doch, das war gefixt. Das hätte funktioniert, das hätte funktioniert. Ich bin mir relativ
sicher, das hätte funktioniert jetzt. Ich weiß, wir können es auch einfach nochmal
schnell fixen, okay. Können wir nämlich gleich testen, ob es funktioniert. Wir probieren
es nochmal aus, wir probieren es nochmal aus. Wir machen, wir machen das nochmal schnell,
das dauert ja bloß 2-3 Minuten. Wir machen das nochmal schnell. Keklchi Baited, mann.
Zu geil. 15 Minuten soll die Aufgabe gehen. Ja, sonst wird es für den zu teuer auf AWS.
Keklchi Baited. Wer das wohl gewesen ist. Warum gibt es den Preis-Champ nicht mehr? Weil
es zu eklig war, die Crawler aktuell zu halten. Ich glaube, Leute, Leute, ich glaube, wir
dürfen das nicht nochmal machen. Ich glaube, wir dürfen es nicht nochmal machen. Die Firm
geht nicht auf. Kann das sein, dass das procken ist? W-Power-Off bringt nichts oder was? Na
na na. Ach, jetzt surfen wir, okay. Alter. Okay, das heißt, wir wissen jetzt, wo wir
es positionieren müssen und zwar, wir müssen es so positionieren. Okay, wenn ich es jetzt
verschließe, okay, jetzt ist alles weg. Connection Closed. Okay, jetzt ist, jetzt ist weg. Jetzt
müssen wir nochmal einen Server erstellen. Wahrscheinlich sind wir gleich im Rate-Limit
drin. Wahrscheinlich sind wir gleich im Rate-Limit und dürfen nicht weitermachen. Kurz Cookies
clearen. Ich glaube, die sind nicht so blöd und machen das auf Cookie-Basis. Es steht
unten, wenn ich über den Link haffe. Alter, es ist ja gut jetzt, Mann. Warum ist das so
kompliziert? Brauche ich unten Link? Brauche ich jetzt hier unten nochmal einen Terminal
drüber oder wie? Okay, wir machen hier oben mal was anderes.
Oh, excellent. Okay, jetzt sieht man nichts, oder? Chat, top secret. Jetzt ist alles hidden.
Okay, also zwei Sachen. Moment, wenn ich das jetzt rüberschiebe, hoa, Glück gehabt, Leute.
Knappe Geschichte, knappe Kiste hier. Okay, man sieht nichts. Also, wo sind vielleicht
die Sachen? Etc, nginx, nginx, ne, default, ne, wo war das Ding? Sites, enabled, default,
irgendwie so. Zack, die Musik ist aus. So geht das net. Also, hier war das drinne. System,
ctl, restart, nginx, status. Was war das andere Problem nochmal? Ah, das ist das sus-edit,
mir das da. Limit. Okay, pepega-editor, Mann. Yes. Hat das jetzt funktioniert? Yes. Restart,
nginx, status, nginx. Läuft, jetzt steht ja auch nicht kackel, cibeide drin. Und curl,
nginx, returns. Returns, okay. Check my solution. Bäm, hat funktioniert, alles klar. Also Leute,
so war die offizie... Achso, wir können uns mal angucken, was die offizielle Lösung ist,
wie man das Ganze fixen soll. Check status of nginx. Jo, haben wir gemacht. Nginx minus
t. Das hätte ich machen sollen. Habe ich nicht dran gedacht, dass es sowas gibt. Hat
aber glaube ich jemand im Chat geschrieben. After fixing config file and restarting nginx
hat 500er error. Und dann soll man im log gucken. Ich glaube, das habe ich auch gemacht.
Und dann soll man im service limit no file anpassen. Und dann restarten. Okay,
alles klar, haben wir gemacht. Bäm, next please. Wir sind stehen geblieben bei borkt nginx. Als
nächstes kommt jetzt salta. Docker container won't start. Da bin ich jetzt mal gespannt.
Docker containerisierungsstells am start. Okay, also was ist die Aufgabe? Die Aufgabe ist,
im Verzeichnis home admin app befindet sich eine gedokte, eine dockerize, befindet sich eine
containeri dockerizierte web anwendung. Erstellen sie einen docker container, sodass sie eine
web anwendung auf port 8888 erhalten und zu ihr curlen können. Damit die lösung gültig ist,
sollte es nur einen laufenden docker container geben. Also der test ist curl localhost 8888
soll hello world zurückgeben. Schauen wir mal. Was macht curl eigentlich so webrequest?
Curl hat bald 25 jähriges jubiläum im märz. Das habe ich auf github gelesen. Die haben irgendwie
so einen curl celebration day oder sowas im märz irgendwann. Okay, auf geht's. Okay,
was passiert, wenn man das hier. Okay, da läuft. Okay, gut, dass wir das ausprobiert haben am
Anfang, weil da wäre ich jetzt auf die nase gefallen, dass der port geblockt ist. Es läuft
schon was auf port 8888. Was läuft denn, was läuft denn so auf port 8888? Netstat minus tulben.
Es läuft auf port 8888 ein engine x. Systemctl stopp engine x. Und jetzt machen wir nochmal
ein curl. Und jetzt geht nix mehr. Okay, das ist schon mal gut. So, wo liegt die dockeranwendung?
App. Ich will ein bisschen was sehen hier. Okay, home admin, home app. Da gibt's ein dockerfile. Kann
ich das hier resizen, ohne dass ich es irgendwie leake? Ja, kann ich. Also da liegt ein dockerfile,
ein server.js. Gucken wir mal ein server.js rein. Server.js. Das ist eine express anwendung,
habe ich keinen plan von map slash send hello world. Okay. Alles klar. Ja gut, t-max gibt's
net. Ach toll. Dann würde ich sagen, wir bauen das Ding einfach mal. Docker, bild, Punkt. Geben wir
dem Ding mal Name, App. Was ist t-max? Da kannst du dann mehrere, da kannst du in einem Terminal
mehrere tabs und sowas aufmachen. Das ist ganz praktisch, wenn man ein paar Sachen parallel machen
möchte. So, also wir haben jetzt die App gebaut. Da machen wir jetzt mal docker run minus d, weil
ich nicht will, dass es im Vordergrund ist, da ich noch was tippen kann. Minus d, App. Okay, docker ps.
Okay. Docker log. Logs. Wie heißt das Ding? Kind. Ach ja, guck mal da. Es gibt ein Fehler in
der Node.js Anwendung. Cannot find module user user src app surf.js. Lasst uns mal in das Docker
File gucken. Okay. Okay. Okay. Das soll 8888 sein, oder? Nicht 8880. Wart mal. Moment, Moment. Ich
glaube, die wollen uns schon wieder jebaden. Genau, das heißt server.js. Das ist ein Master
jebader. Der Part fürs Working, der sieht falsch aus. User source. Sicher? Nö. Müsste eigentlich
stimmen. Sehen wir gleich. Ein richtiger Master jebader ist das. Server.js. Build. Run. Docker ps.
Aha. Netztat. Ach, ich hab Port Mapping nicht richtig gemacht. Docker stopp. Hab das Port
Mapping nicht richtig gemacht. Wir wollen es ja auf Port 8888 haben. Wir werden nicht das
Docker File anpassen. Wir sagen einfach Docker Run und dann minus P 8888 auf Port 8880. Bam.
Docker ps. Aha. Läuft. Jo. Mehr alter Shit. Läuft. Okay. Und was ist der Test? Der Test ist
curl 8888 returns hello world. Fuck. Das wäre ja auch zu einfach gewesen, wenn das einfach
funktioniert hätte. Warum funktioniert das nicht? Netztat. Oh nee, ist das wieder eine
IP-Tables-Regel? Ich raste aus, Alter. Boah, das ist zu viel. Moment. Äh.
Ich seh nix. Seht ihr irgendwas Schlemmes? Sieht doch okay aus, oder? Nee, was ist das hier?
Nee, alles gut. Nee, das ist eigentlich okay. Oh, what? Nee, das sieht, das sieht eigentlich
okay aus. Okay. Ähm. Warum geht das nicht? Netztat. Sieht eigentlich okay aus. Docker stopp. Die App
hört auf einem anderen Port, aber das ist nicht wild, weil ich hab's ja umgemappt. Stopp. Fuck. Ich
hab, ich hab Steuerung W gedrückt. Shit. Es war nicht so high IQ. Curl. Localhost 8888. Connection
reset. Okay, jetzt steh ich echt ein bisschen auf dem Schlauch. Was hat er jetzt für Probleme? Docker
logs. Moment. Der Server startet an 8888 anstatt auf. Moment, ist da noch ein Fehler im Dockerfile?
CD, Home, Admin, Dockerfile. Aha. 8888, weil ich vermute mal im Server.js steht Port 8. Aha. Okay,
okay, okay. Docker stopp. Da war auch noch ein Fehler drin. Da war auch noch ein Fehler drin.
Alles klar. Wir haben zwar den richtigen Port umgeleitet, aber die Anwendung lauscht auf dem
anderen Port. Jetzt, jetzt wird's funktionieren hier. Build. Richtiger Chebater, der Typ. So,
jetzt können wir quasi 8888 extern auf 8888 intern machen. Docker, PS. Curl, Localhost 8. Das ist
wunderbar für Azubis. Okay, hello world. Funst. Check my solution. Correct. Agreege. Nice. Leute,
gibt's noch Fragen? Wir haben nicht mal viel Zeit in der VM. Ich glaube wir haben bloß 15
Minuten Zeit. Wir haben die 15 Minuten wahrscheinlich fast erreicht. Zudo, Power off. Bam. More Scenarios.
Hab ich irgendwas überlesen? Bei dem, bei dem musste ich mich ein bisschen konzentrieren. Das
war schon ein bisschen komplizierter jetzt, oder? Stimmt, wir können unseren Timer verwenden. Leute,
Sixhead, wir verwenden das nächste Mal den Timer. Sind das jetzt Admin-Aufgaben oder ist
das schon ein Bereich? DevOps. Das kann man nicht so, das kann man nicht so genau trennen. Seriously,
viele Admins nennen sich heute einfach nur DevOps-Engineer, weil es cooler klingt. Glaubt mir,
ich spreche da aus Erfahrung. Das ist alles fließend, der Übergang. Okay, gab's Questions,
die ich übersehen habe? Nee. Weiter, was haben wir das nächste? Docker, Container,
Wunschpass. Venice. I'm in a container. Okay. 15 Minuten Zeit. Guck mal Leute, wir benutzen
mal unseren neuen Sixhead Timer. 15 Minuten. Okay. Gleich geht's los, sobald es startet.
Was ist denn die Aufgabe? Try to figure out if you are inside a container or inside a virtual
machine. Leute, easy. Wisst ihr was ich einfach probiere? Modprobe, PC-Speaker. Wenn Modprobe
funktioniert, weiß ich, ich bin in der VM. Wenn Modprobe fehlschlägt, weiß ich, ich bin im
Container. Was ist denn sonst noch? Man könnte, wird what verwenden? Was ich nicht installiert
habe? Wird what? Wird what könnte ich verwenden? Als root, ja, ist gut. VMWare. Aber ich gehe
davon aus, dass es nicht installiert ist. Wir könnten die MAC-Adresse checken. Wir
könnten die MAC-Adresse checken, ob das bekannte VMWare, KVM oder sonst was MAC-Adressen sind.
Wir könnten vielleicht die kernel command line angucken, mit was das OS gestartet wurde.
Wir könnten gucken, ob unser Initprozess, falls wir einen Initprozess, wobei, wenn wir
System D laufen haben, ist es höchstwahrscheinlich kein Docker-Container. Wir könnten gucken,
ob unser Initprozess, der erste Prozess ist, der gestartet wurde. Keine Ahnung, wie man
gescheit rauskriegt auf einem Container. Du kannst auf.dockerenv schauen. Ja, es gibt
aber nicht nur Docker als Kontainerisierungslösung. Proc CPU-Info. Das ist eine gute Idee. Wir
können gucken. Hostname-CTL. DMSC. Ja, gucken wir. Also ich probiere das mit dem kernel-Modul.
Der kernel-Modul dürfte das aller-einfachste sein. Open new window. Sack. Also, modprop.
Modprop ist nicht drauf. Meine... Scheiße. Okay. Mein erster Ansatz funktioniert schonmal
nicht, dass ich einfach kernel-Module laden kann. Ellers wird wahrscheinlich alles nicht
drauf sein. DME-Decode. Alles nicht drauf. Okay. Cat Proc CPU-Info. Da könnten wir gucken.
Das ist ein AMD-Epic. Tja. Erkennt man jetzt nicht wirklich was. Mein bester Guess ist
erstmal Mac-Adressen. Ist das eine bekannte Mac-Adresse von irgendeiner Virtualisierungslösung?
Mac. What? Sender. Nope. Okay. Cat Proc CMD-Line oder sowas. Boot-Image. Cloud-AMD-64.
Das sieht nach einer VM aus, wobei ich mir ehrlich gesagt nicht sicher bin, ob das nicht
in einem Container, der auf einer VM läuft, schlicht und ergreifend ganz genauso aussieht.
Gibt es nicht System-D-Detect-Wirt? Ach. Was ist das? Okay. Wir sind in einem Container.
Das habe ich ja noch nie gehört. System-D-Detect-Wirt. Yep. Cock. Kannte dir das? Versuch Hostname-CTL.
Ach. Guck mal. Das ist auch cool. Okay. Das muss ich mir merken. Da habe ich wieder was
gelernt. Das kannte ich selbst auch nicht. Hostname-CTL und System-D. Schau Proc 1-C-Groups
an. Proc 1? Ja gut, das ist ja Init. C-Groups. Init Scope. Das ist jetzt gut oder schlecht?
Was sagt... Also okay, wir sind in einem Container. Das wissen wir. Aber erkennt man jetzt daran,
ob es ein Container ist oder nicht? Ja. Aber nice, nice. Interessant. Das wusste ich nicht.
Okay, da hätte ich jetzt ein bisschen überlegen müssen. Aber gut, wir haben es rausbekommen.
Wir sind in einem Container. Ease. E. Sudo. Power off. Ach so, gibt es nicht. Okay. Also
next. Wo sind wir stehen geblieben? Close an open file. Ach, jetzt kommt das. Boah Leute,
ich kann mich nicht mehr lange konzentrieren. Also wir machen das hier noch. Vielleicht,
vielleicht. Mal gucken. Aber das machen wir auf jeden Fall noch. Guck mal, da haben wir
fast die Hälfte. Dann machen wir das nächste Mal die schweren Dinger. Close an open file.
Okay, also Aufgabe. Wir haben eine Datei. Home admin some file is open for writing by
some process. Das habe ich eben vorhin schon angeguckt. Close this file without killing
the process. Okay, also wir sollen die Datei quasi schließen ohne den Prozess, der die
Datei offen hat, zu killen. Das klingt, je nachdem. Irgendwie ein Signal schicken oder
sowas. Okay, erstmal root werden, wie immer. Home admin. Okay. Moment, was ist das? Open
file.sh? Also Alice of some file. Okay, die Datei ist offen. Womit bin ich das selbst?
Wait a minute. Home? Ich glaube, da ist wieder der MasterChebader am Werk. Das bin ich selbst,
der die Datei offen hat. Moment. Da ist wirklich wieder der MasterChebader am Werk. Ich glaube,
das ist einfacher, als man denkt. Besher C? Less? Geht da irgendwas? Be connect!
DEeeeeEEEEHHHHH
Okay das ist das ist gemein, das ist wirklich gemein
ich bin nur drauf gekommen
Weil ich zufällig hier irgendwie OpenFile.sh und sowas gesehen habe
Ok das ist das ist Achiebe, das ist Richtig krasser Achiebe
Das heißt im Bold
Das heißt im Endeffekt eigentlich muss ich nur die Zeile aus der Bash Sahne löschen und es ist gefixt
ich mal zack ok loggen wir uns aus loggen wir uns noch mal ein
das war aber gemein das war wirklich gemein das ist wirklich
der prozess ist jetzt dead ja ja der prozess beendet sich beim aus loggen aber ich habe
ihn nicht gekillt das war aber fies also das ist wirklich das ist also ich glaube wenn du
nicht zufällig daran denkst weil du die datei gesehen hast suchst du dich da kaputt
an den moment power aus der kram kostet ja geld sudo power off ok nice more scenarios ok wir hören
jetzt hier auf und ich guck mir hacker ich ich guck mir guck mir unix porn von euch an
machen wir das nächste mal weiter an der stelle also merkt euch wir sind bis zu
nummer übung nummer 9 gekommen dass man den prozess nicht töten soll auch nicht durch
stand das da drin ok dann haben wir es vielleicht nicht auf die richtige art und weise gelöst
ok discord ich mache kurz discord auf das muss ich leider am zweiten bildschirm machen weil
hier bin ich eingeloggt aber ich kopiere mir die bilder raus jepp discord
channel unix porn ok oder bin ich hier eingeloggt discord wahrscheinlich discord
habe ich hier gar installiert weil ich müsste
habe ich echt kein discord
anscheinend nicht ok also weiter geht's
dann gucken wir uns das mal an dass den ersten desktop den wir uns angucken
ist vom serious max na das passt doch motte motte höchstpersönlich copy image
ob ging das jetzt nicht copy link copy link muss ich machen ok
du hast nicht wirklich den typ da im hintergrund oder
nur für den screenshot sagst du jetzt in die bilder auch noch größer wenn man die anklickt
neger oder gehen die noch größer
ach so die gehen noch größer ich bin nur zu blöd hier haben wir es das ist kacke ich
muss mich in discord einloggen sonst klicke ich sonst klicke ich mich da ja kaputt
da bin ich da bin ich ja bin ich ja am mich drei drei tage am kopieren bis ich
das hier offen habe ok also das ist hier das ist der linux desktop von unserem
obermod also was hat er denn am start lasst mal gucken also ich finde farblich
ist das ganze sommer sehr schick gemacht vor allem die kombination mit b top oder
b top plus plus oder wie das ding genau heißt die farblich tatsächlich zum
terminal passt ich könnte dir vielleicht noch einen tipp dafür geben und meine
augen viel zu hell ich könnte ich könnte da vielleicht einen tipp für geben und
zwar ist mir auch aufgefallen dass der guck mal du kannst den hintergrund
einstellen wenn du hier auf menü gehst options du kannst sagen dass der den
background nicht vom theme nimmt sondern den background von einem terminal finde
ich persönlich schicker weil weil dann sich der hintergrund besser ins terminal
integriert ist aber sicherlich geschmackssache aber ansonsten passt
das eigentlich ganz gut finde ich finde ich hübsch schickes schickes color scheme
terminal font hack ist eh allerbeste terminal font endeavor os arch by the way
auch beste sway also ich sehe du verwendest wayland allerdings dann nicht
in einer vm weil der vm funktioniert nicht gescheit ist das hier was ist das
hier oben für eine leiste was was hast du da am start wey bar ok alles klar
excellent so das hier ist der tap mit dem browser ok du hast umgedreht ich
mache es immer so ich mache browser tap 1 command line tap 2 das ist aber
geschmackssache ok moment habe ich doppelt aufgemacht ja und hier haben wir
noch sein wishlist studio code mit selbstverständlich blazingly fast
written in go und er verwendet extra extra als ls ersatz da bin ich ja nicht so
richtig mit warm geworden bisher ich habe es eine weile verwendet aber ich
finde immer noch raw ls beste tuner als file manager vermute ich jetzt einfach
mal ja sehr schick sehr schick sieht auch alles so ziemlich aus einem guss aus
also ich vermute dass es tuner ist nicht laut die los
arch enjoyer ja finde ich nice so zu sagen so wenn haben wir als nächstes
sink sinking face haben wir als nächstes hat leider nicht allzu viele screenshots
gepostet aber ein screenshot der wahrscheinlich allen weeps unter uns
gefällt also wir sehen hier ein terminal i3 vermute vermutlich i3 mit
irgendeiner recht minimalistischen i3 status leiste scheinen wohl keine vm zu
sein arch linux by the way was mich jetzt noch
interessieren würde ist ist das der hintergrund vom terminal oder ist das
der hintergrund von deinem i3 der durch terminal durchschimmert weil ich muss
sagen ich für meinen geschmack wäre es ein bisschen viel transparenz im
terminal also ein bisschen transparenz im terminal finde ich nice das sieht
optisch schick aus aber ich also ich persönlich würde die schrift zu schlecht
erkennen mit so viel transparenz hintendran
aber sonst sieht doch auch schick aus
es ist mir ein bisschen zu also für meinen also für meinen geschmack ist es
zu zu nah am original i3 dran und ich finde original i3 sieht nicht so schick
aus
ok komm uns das nächste an nächste nächste kommt wieder von motge motge und
zwar stripes 007 kommt als nächstes dran
mit einem linux mint vermute ich mal ja sieht linux mint
pinguine im hintergrund
ok also b top ist an ist sehr beliebt anscheinend weil es was her macht im
terminal mich würde interessieren wie viele von euch es wirklich regelmäßig
verwenden und hard top vorziehen jetzt soll ich laufen es ist ein linux mint mit
ist es ein i3 das ist kein i3 ist kein i3 das ist ein gnome
denn ist mate ist das mateen wobei das steht doch hier irgendwo auch gnome
terminal cinnamon ist es cinnamon
ach das sind beide bildschirme das ist ein linker bildschirm den
fotografiert hatten das ist ein rechter bildschirm jetzt verstehe ich das auch
warum die taskleiste auf einmal hier aufhört ok dann suchen wir mal
suchen wir mal ran aber es war so dass es irgendwie mit bildschirm passt ok es
sieht sehr klassisch gnome style ich aus ok cinnamon style ich in dem fall und
der eine monitor ist auch kleiner als der andere sieht aber auch ganz schick
aus ist halt klassischer recht klassischer desktop also mehr desktop
als ein i3 aber auch schick ich vermute aber dass das default color scheme ist
hier sieht man ja auch mint dark orange und sowas also das ist halt der vorteil
von sovorkonfigurierten distributionen du kannst es einfach installieren und so
benutzen also der hat wahrscheinlich nicht allzu viel custom ist sieht aber
trotzdem nicht schlecht aus aber nicht sagen wir haben als nächstes doch der
adrian legacy
aber als nächstes
ok
alter was das für eine font
das ist doch das ist doch gemimt oder oder benutzt er wirklich die font
aber das farbschema ist nicht schlecht ich glaube das ist nicht dass die
fault farbschema oder sieht ein bisschen heller aus als das die fault farbschema
aber der rest sieht ziemlich die folgt aus was hat er denn sonst noch
dann noch einen anderen bildschirm gepostet von sich gießen es ist einer
sieht man was es ist ein pop os pop os gnome ziemlich klassischer standard
gnome klausur so so das ist ein pop os pop os mit gnome dark theme ok gnome
terminal
und das letzte sieht man so nach seinem desktop das nicht so spannend aber wenn
das alles die voll ist sieht auch nicht schlecht aus wobei ich ehrlich sagen
was die schriftart ist nicht so meins pop os genau pop os ist das gachi bus als
nächstes haben wir tibelius tibelius hat ein ultra pepo white happy bild
gepostet also das das ist mega auflösung dem sein bildschirm oder sind
wahrscheinlich sogar zwei bildschirme beste so muss das sein
ja ja art ok da hat er dran rum gebastelt also ein artschlinux mit gnome
defaults theme defaults black box terminal habe ich noch nie gehört
a beautiful getika fort terminal
ok
beautiful artsch by the way schicken hintergrund hat
natürlich gerade unten was in rust was was ein poser und hier omer noch ein
terminal aber im groß und ganzen ist es doch ein sehr schickes setup also
farblich auch gut aufeinander abgestimmt vom hintergrund zur leiste
oben zum leicht durchschimmernden background vom terminal wie teilt er die
windows wahrscheinlich gar nicht sondern von hand oder man kann vielleicht hat
gnome ja auch irgendwelche shortcuts dafür
ist das mal kurz dorken was er laufen hat ok ein wine enjoyer
was ist denn btm das sieht ein bisschen aus wie hardtop nur noch mal anders
btm github yet another cross platform graphical process monitor
irgendwann ist auch mal gut ach das ist written in rust ja dann dann ist ja
alles klar das muss auch sein explorer exit ja wine stels ich finde es aber
hübsch also ich finde die farbausfall gut so diese farbtöne passt das passt
alles richtig gut zusammen so als nächstes kommt captain paul oder
auch captain poggers genannt merkt euch das mal please wo wir stehen geblieben
sind ich schreibt mir das mal auf captain poggers kommt als nächstes
dran ich muss jetzt nämlich mal ganz dringend aufs klo und dann muss ich was
essen dass wir machen für heute schluss und schauen das nächste mal weiter ich
hoffe euch hat es gefallen chat set setke ja aber die set servers sind
jetzt mittlerweile white pepo happy servers die sind glücklich dass wir uns
um sie gekümmert haben und dass es jetzt alles läuft
ja schön dass ihr da wart schön dass es euch gefallen hat wir machen demnächst
weiter mit set servers der zweiten hälfte und gucken uns auch weiter eure
desktops an vielleicht machen wir das desktop angucken das nächste mal am
anfang im stream vielleicht auch gleich morgen früh oder so machen wir lieber
morgen mittag falls wir noch mal streamen oder am nächsten stream dann
mal gucken alles klar ich gehe jetzt was futtern leute wir sehen uns macht's gut
bis dann

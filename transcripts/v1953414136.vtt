WEBVTT

01:45.710 --> 01:47.710
So da bin ich

01:48.910 --> 02:07.740
Der go champ ist am start was ich vorhabe sage ich gleich

02:09.220 --> 02:11.220
Ich habe ich habe nicht viel vor

02:12.500 --> 02:16.460
Aber dort wo ich arbeite die haben was vor und ich habe mir gedacht wir können was für bauen

02:24.700 --> 02:29.460
Ich update mal kurz meine vm und ich muss mal kurz die kirby musik ausmachen

02:30.820 --> 02:32.820
So anstrengend

02:32.820 --> 02:44.110
Du du du du du du du du ich muss ich muss erst mal die leute die jetzt schon da sind kurz verschrecken

02:48.170 --> 03:01.460
exzellent

03:02.820 --> 03:19.570
Jetzt wird es jetzt muss gerade empfohlen wird euch veranwaltet ich muss mich aufs go programmieren einstellen

03:21.890 --> 03:37.050
Ich war mal kurz package update in meiner vm aber gerade dabei sind hat nicht funktioniert warum nicht

03:37.990 --> 03:40.110
Arzbein was jetzt los

03:42.350 --> 03:44.590
Gibt gibt gar nicht so viel

03:46.670 --> 03:48.670
Läuft alles bei dir in der vm

03:50.030 --> 03:52.190
Das ist mein host das vor

04:09.300 --> 04:15.180
Gucken wir lassen es mal auf bis die bis die vor die vm ist schon fertig updatet das ging jetzt viel schneller als mir das

04:15.180 --> 04:24.180
vorgestellt haben

04:24.180 --> 04:27.820
Warum warum geht hier gachi bass nicht über die vm doch geht doch

04:31.350 --> 04:39.070
Ihr könnt jetzt noch den beruhigenden klängen lauschen bis die packages geupdated sind da mache ich ein bisschen was entspannendes dass man sich

04:39.350 --> 04:40.910
konzentrieren kann

04:40.910 --> 04:43.710
Und dann erkläre ich euch was wir eigentlich machen

04:44.430 --> 04:53.840
Warum ist das so langsam mit updaten?

05:10.330 --> 05:14.250
Was macht das denn eine halbe stunde für den eigenen theme zum upgraden? Yes

05:14.970 --> 05:16.970
Okay

05:17.170 --> 05:19.770
Exzellent haben wir irgendwas zum upgraden

05:21.490 --> 05:25.770
Haben wir nicht aber nicht reboot zack

05:26.850 --> 05:28.850
okay

05:29.290 --> 05:31.290
Dann machen wir ein bisschen was entspannendes

05:31.490 --> 05:38.130
Okay, was ist das meditative music that rive moment was was macht das chat moment was?

05:38.850 --> 05:40.210
re

05:40.330 --> 05:42.210
Verb

05:42.210 --> 05:45.130
Das kann ich nicht mal aussprechen. Ich weiß nicht was es heißen soll

05:52.330 --> 05:55.330
Reits in the brain was

05:56.290 --> 05:59.970
Ach so das vibriert im kopf oder wie oder was

06:04.660 --> 06:09.380
Wenn ich noch vom letzten mal an doch im zweifelsfall eine runde

06:09.380 --> 06:15.620
Wuppwuppwupp ein bisschen lautes wuppwuppwupp hier das geht einfach wuppwupp aus leise wuppwupp machen

06:16.820 --> 06:18.820
Okay, so ist gut

06:19.020 --> 06:21.260
Warum immer update weil arch by the way

06:24.780 --> 06:27.260
Rolling release da muss halt öfters mal updaten

06:29.180 --> 06:31.180
Du du du du

06:32.980 --> 06:34.980
Gut

06:35.180 --> 06:37.180
Pogu

06:37.740 --> 06:40.140
Einfach mal der random Pogu

06:42.420 --> 06:46.620
Haben wir hier noch 8 das garmen zeug haben wir ja hier noch da müssen wir auch mal fertig machen

06:49.820 --> 06:51.820
okay, also

06:51.820 --> 06:54.780
Wie viel go erfahrung hast du schon es geht

06:55.700 --> 06:58.180
Also ich habe schon die einen anderen sachen in go gemacht

06:58.860 --> 07:02.460
Aber noch nie was wirklich richtig großes

07:03.100 --> 07:07.300
Ich habe beispielsweise web rtc

07:08.580 --> 07:10.780
Sachen schon in go gebaut ich habe

07:11.620 --> 07:15.860
Wir haben im stream auch schon command line tools gebaut ich habe ich habe ein bisschen was umfangreicheres

07:16.340 --> 07:19.260
Für die arbeit gebaut also mein letzter job nicht der aktuelle

07:19.860 --> 07:25.580
Aber es hält sich immer so es ist jetzt nicht dass ich komplett planlos bin was go angeht aber

07:26.420 --> 07:29.460
Ich bin jetzt auch nicht der go profi das problem ist

07:29.780 --> 07:33.860
Ich habe ich mache sehr selten was mit go und habe auch schon eine weile nicht mehr mit go gemacht

07:33.860 --> 07:39.020
Und go gemacht das heißt ich habe jetzt wahrscheinlich erst mal ein bisschen anlaufschwierigkeit aber das wird schon wird schon hinhauen

07:41.140 --> 07:44.860
Vielleicht mal mein mikrofon nicht einstellen so oder ansonsten

07:46.020 --> 07:48.500
Schauen wir mal ich werde euch jetzt erst mal erzählen

07:49.780 --> 07:51.980
Was ich mir überlegt habe und zwar also

07:53.380 --> 07:54.700
Das

07:54.700 --> 08:02.200
Weshalb und warum ist ja immer eine wichtige sache also warum wir das in go machen ist eigentlich relativ einfach das liegt daran

08:03.120 --> 08:04.920
weil

08:04.920 --> 08:06.920
Ja genau

08:07.720 --> 08:09.560
Das liegt daran

08:09.560 --> 08:10.520
weil

08:10.520 --> 08:12.520
wir auf der arbeit

08:12.960 --> 08:18.040
Ein java entwickler haben der dort net nicht mag aber der gerne an dem tool mit basteln will

08:18.840 --> 08:21.280
Was im endeffekt heißt dort net fällt flach

08:23.920 --> 08:25.560
Also go

08:25.560 --> 08:29.960
Wobei ich nicht mal sicher bin ob wir das tool überhaupt brauchen

08:30.760 --> 08:34.080
Da habe ich mir jetzt aber noch gar keine gedanken großartig drüber gemacht

08:35.080 --> 08:44.010
Würdest du go für cli verwenden oder lieber was aus preis immer immer go wenn du was also jetzt nicht

08:44.130 --> 08:49.090
Versus python sondern immer go wenn du was haben willst was sich einfach verteilen lässt

08:49.290 --> 08:55.790
Go binaries das ist easy du kannst go binaries auf jedes x beliebige linux system kopieren der letzten

08:56.010 --> 09:02.090
15 jahre ich glaube das geht rückwirkend bis kernels wo 635 36 oder sowas

09:02.610 --> 09:08.010
Also wenn du es wenn du einfach was haben willst zum kopieren zum ausführen es geht

09:08.730 --> 09:15.890
Self-contained binary mäßig ist go einfach das beste was es gibt sobald du externe abhängigkeiten hast sieht es natürlich schon wieder anders aus da

09:15.890 --> 09:18.170
Musst du trotzdem wieder um viele sachen gedanken machen

09:21.330 --> 09:27.370
Wie sieht das ökosystem von go aus ich würde mal sagen go hat eines der größten ökosystem aller programmier sprachen

09:28.090 --> 09:35.130
Also sicherlich hat javascript vielleicht eventuell noch ein bisschen was mehr ja python auch riesen ökosystem

09:35.770 --> 09:39.810
Aber trotzdem also go hat hat ein massive großes ökosystem

09:40.690 --> 09:48.490
Wird das kompiliert oder wird immer eine installation belötigt nein das wird nicht einfach nur kompiliert go ist viel besser in dem fall

09:49.450 --> 09:51.450
go baut

09:51.490 --> 09:53.490
Behaupte ich jetzt einfach mal die besten

09:54.490 --> 10:01.740
Self-contained binaries von allen sprachen weil das auch eines der erklärten ziele von go ist

10:02.140 --> 10:09.780
Go hat keinerlei abhängigkeiten zu irgendwas was auf deinem system läuft nicht mal lip c oder sonst was gar nix

10:10.860 --> 10:19.220
Dementsprechend läuft go auch rückwirkend bis kernels wo 636 glaube ich weil ich weiß ich nicht go minimum kernel

10:20.460 --> 10:24.140
keller

10:24.140 --> 10:27.660
Go muss man go lang suchen ja hier ist doch da

10:28.460 --> 10:34.980
Ja, go required minimum kernel version 26 32 ich meinte fuck das ist von wann?

10:36.260 --> 10:38.180
2008 oder so

10:38.180 --> 10:40.620
na ja ja vielleicht doch

10:41.740 --> 10:45.740
Nee sagen wir mal okay sagen wir mal 2010 2010 guck mal hier

10:47.220 --> 10:49.220
2009 leute

10:49.260 --> 10:54.620
2009 das heißt du kompilierst heute ein go binary auf einem ganz neuen system

10:55.300 --> 11:00.580
Kopierst das auf linux drauf von vor 14 jahren und es läuft einfach

11:01.260 --> 11:12.780
Sofern es go only ist und keine externen abhängigkeiten hat wie sieht es mit windows aus geht geht auch

11:13.340 --> 11:19.340
habe ich noch nie benutzt aber kannst auch kannst mit go nv glaube ich glaube dass du mit go nv sogar

11:19.940 --> 11:21.940
Cross

11:21.940 --> 11:27.310
Kannst du cross plattformen kompilieren von linux zu windows aus mit go

11:28.350 --> 11:30.350
glaube ja dass das geht

11:30.590 --> 11:35.150
Also mit net geht es auf jeden fall ich glaube mit go geht das auch weil du kannst mit go ja auch

11:35.670 --> 11:39.870
Kostkompilieren für also von x86 kiste für eine armkiste also kannst du beispielsweise

11:41.990 --> 11:49.190
Raspberry Pi bei also binaries von Raspberry Pi erstellen auf deiner x86 kiste das funktioniert so aber jetzt versuche ich erst mal zu erklären

11:49.590 --> 11:52.430
Was ich machen will und zwar da muss ich jetzt ein bisschen ausholen

11:53.630 --> 11:57.390
Wobei ich lasse den scheiß einfach weg ist eigentlich vollkommen unbedeutend

11:57.950 --> 12:04.890
Was gemacht werden soll ist folgendes heute ist jemand bei uns auf der arbeit auf die glorreiche idee gekommen also wir haben einen message bus

12:05.150 --> 12:07.150
Oder wir haben einen message broker

12:07.630 --> 12:10.190
Auf der arbeit das ist ein apache

12:10.830 --> 12:12.830
active mq

12:14.070 --> 12:16.070
Artemis das sowas

12:17.070 --> 12:18.350
Neues

12:18.350 --> 12:23.530
Keine ahnung warum es das unbedingt sein musste aber ich glaube weil in dieser party

12:24.030 --> 12:28.870
Anwendung das braucht so das ist das ist quasi next next next gen

12:29.270 --> 12:31.930
Active mq so das unterstützt das protokoll

12:33.150 --> 12:39.730
amq p 1.0 wohlgemerkt active mq selber unterstützt plus amq p

12:39.970 --> 12:45.090
0.9 1 warum warum man so verwirrend macht ich habe keine ahnung

12:45.650 --> 12:50.810
Rabbit mq kann übrigens auch bloß 0.9 1 oder mit add-on 1.0

12:51.610 --> 12:56.010
Warum das nicht abwärts kompatibel und was die da machen ich habe keine ahnung ist mir auch vollkommen egal

12:56.650 --> 12:59.370
Es ist so also wir haben wir haben einen message broker

13:00.090 --> 13:02.090
active mq artemis

13:02.970 --> 13:04.970
Da dran hängen paar services

13:04.970 --> 13:09.250
Und einer dieser services der möchte nachts was machen

13:11.250 --> 13:14.530
Das problem ist nur dass irgendwie keiner in der lage ist

13:15.170 --> 13:20.210
Ich versuche das jetzt so weit zu umschreiben wie wie geht ohne jetzt alle details zu erzählen

13:20.370 --> 13:26.050
Also wie keiner in der lage ist das ordentlich zu triggern dass das nachts passiert

13:27.650 --> 13:29.650
Und daraufhin habe ich gesagt leute

13:30.770 --> 13:32.770
Das läuft doch eh alles in der klasse

13:32.930 --> 13:38.090
Das läuft doch eh alles in der cloud warum machen wir nicht irgendeinen container

13:38.530 --> 13:42.410
Hauen das in irgendeinen cloud run rein oder in unseren kubernetes cluster rein

13:43.330 --> 13:47.370
Der einfach eine message published nachts in den message broker

13:48.650 --> 13:50.650
mit dem was da drin stehen muss

13:51.250 --> 13:55.410
Und daraufhin macht dann der andere microservice was er machen soll

13:56.090 --> 14:00.610
Und da kamen die ersten bei mir auf der arbeit haben gesagt auch nein das können wir doch nicht machen

14:01.250 --> 14:07.130
Weil irgendwie gibt es interne policy dass solche automatisierten jobs

14:08.090 --> 14:13.090
nicht über eigene container die getriggert werden gestartet werden dürfen sondern über eine

14:15.770 --> 14:22.890
Unternehmensweit eingesetzte workflow automation als ich das gehört habe habe ich gesagt okay ich ziehe alle wie das alles wieder zurück das

14:23.170 --> 14:26.010
Vergesst was ich vergesst was ich gesagt habe damit will ich nichts zu tun haben

14:29.920 --> 14:33.200
Ich habe gedacht das klingt mir schon viel zu böses enterprise

14:33.720 --> 14:35.560
gut aber daraufhin

14:35.560 --> 14:39.600
Kam ein entwickler und hat gemeint max das ist eine gute idee

14:39.960 --> 14:47.280
Lass uns einfach was bauen und auf github pushen muss ja nix muss ja nix mit mit der arbeit direkt zu tun haben

14:47.280 --> 14:50.600
Wir können es dann halt benutzen wenn es da ist aber wen juckt es ja

14:51.120 --> 14:54.040
Lass einfach mal bauen morgen okay

14:54.240 --> 14:57.120
Und im prinzip soll das was ganz simples werden

14:58.840 --> 15:04.400
Exakt das exakt das war geplant und da kam jemand an okay wir müssen eine unternehmensweite

15:05.160 --> 15:08.920
workflow automation workflow automation tool was auch immer verwenden

15:09.560 --> 15:14.940
Und jetzt werden wir es trotzdem machen jetzt bauen wir zusammen ein mini cli tool

15:15.260 --> 15:21.420
Was in am qp was über über am qp 1.0 an messagebroker was publischen kann und sonst nix

15:21.420 --> 15:24.860
Und fertig dazu kann man da nur sagen

15:26.940 --> 15:33.340
Das bedeutet auch wir brauchen jetzt erst mal damit wir überhaupt anfangen können einen lokalen active mq

15:33.940 --> 15:40.400
Artemis broker ich habe aber schon geguckt die haben ein docker image was man einfach starten kann

15:41.040 --> 15:46.520
Dann schnappen wir uns go land und versuchen mal da drüben ein mini qtool zu bauen

15:46.680 --> 15:51.840
Die haben ein docker image was man einfach starten kann dann schnappen wir uns go land

15:53.760 --> 15:55.760
Und versuchen mal da drin eine message zu veröffentlichen

15:56.200 --> 15:59.680
Also ich muss da gleich sagen disclaimer ich mache nicht so oft was in go

16:00.000 --> 16:07.280
Ich bin nicht komplett ahnungslos in go ich habe beispielsweise schon mal relativ low level c interop mit go gemacht das war

16:07.720 --> 16:11.120
Extremely pains champ da ist das wischl studio code

16:11.960 --> 16:14.400
cgo also dass das wischl studio go

16:15.360 --> 16:19.520
Plugin ist immer abgestürzt wenn man cgo verwendet hat

16:20.840 --> 16:26.600
Ist egal brauche heute nicht dass ich habe schon ein paar sachen aber wie gesagt ich verwende go nicht so oft

16:27.200 --> 16:33.720
Und mit mit active mq habe ich noch nie was gemacht also das heißt wir brauchen das erst mal in active mq server dazu starten wir

16:33.720 --> 16:35.720
mal ein docker container

16:36.720 --> 16:40.860
Bei der gelegenheit wie restarten docker mal weil docker nach dem reboot manchmal ein bisschen rum spackt

16:41.340 --> 16:43.340
Ups

16:43.500 --> 16:45.500
Docker run

16:45.740 --> 16:51.860
Lasst uns mal alles klar docker funst container am start rust rewrite

16:53.220 --> 16:55.460
Ice freak danke für den zapf du wirst lachen

16:56.820 --> 17:03.900
Der kollege auf der arbeit also der entwickler von der arbeit meinte warum muss es denn go sein lasst doch in rust machen

17:03.900 --> 17:11.140
Hab ich da habe ich gesagt ja aber nur wenn es blazingly fast ist und dann haben wir uns am ende darauf geeinigt dass wir es doch

17:11.140 --> 17:14.220
Lieber in go machen weil wir beide in go mehr durchblicken als in rust

17:15.820 --> 17:16.980
Chat wie

17:16.980 --> 17:24.340
Hättet ihr das gemacht welches tool hättet ihr welche welche umgebung hättet ihr für den mini für den mini cli tool verwendet

17:24.420 --> 17:32.100
Go oder rust rust ist für selfcontained für selfcontained binaries auch nicht schlecht wenn man es gegen musel lip c

17:32.860 --> 17:39.500
Kompiliert dann ist auch relativ ruby wenn sie im fall nicht so gut jaja chat chat alles gut alles klar

17:40.460 --> 17:45.980
Ahja und der grund warum wir überhaupt ein eigenes tool bauen ist weil es anscheinend keinen ordentlichen

17:46.700 --> 17:49.900
commandline active mq 1 am qp

17:50.700 --> 17:52.060
1.0

17:52.060 --> 17:59.180
Commandline client gibt soweit ich das verstanden habe ich habe noch nicht danach gesucht und ich werde auch nicht danach suchen weil wenn ich

17:59.180 --> 18:01.460
Danach suche und finde was dann

18:02.100 --> 18:04.780
Können wir gar kein eigenes tool bauen das fände ich doof

18:06.060 --> 18:09.980
Ich ignoriere das einfach ob es was geben könnte und wir brauchen einfach ein tool

18:10.660 --> 18:15.990
Kann ein bisschen ein bisschen proger stellt zu machen habe ich immer wieder bock drauf

18:17.270 --> 18:23.750
Eines tool ist immer sehe ich genau so sehe ich genau so außerdem kann man das dann komplett customizen auf unsere needs

18:24.750 --> 18:26.390
geiler satz

18:26.390 --> 18:28.790
Kasten kasten meist ja auch immer auf eure needs ja

18:29.310 --> 18:36.320
Wie werden guies für sowas wie spotify gemacht das ist ganz eklig das willst du glaube ich nicht wissen

18:36.800 --> 18:38.920
Das ist höchstwahrscheinlich einfach nur ein browser

18:39.840 --> 18:41.840
Und was das sich elektron nennt

18:42.960 --> 18:44.960
Was viel ram braucht

18:45.240 --> 18:50.880
Aber aus irgendwelchen gründen sich großer beliebtheit erfreut glaube das willst du nicht das willst du nicht machen

18:52.120 --> 18:54.120
Obwohl doch jetzt

18:54.800 --> 18:58.680
Ignoriere mein blödes gelaber elektron ist für das was es macht eigentlich das beste was es gibt

19:01.450 --> 19:08.690
Aber spotify ist ziemlich sicher elektron übrigens genauso wie microsoft teams wobei teams 2.0 nicht mehr und discord

19:08.770 --> 19:13.930
Discord ist auch elektron discord hat aber viele zumindest bei dem native client relativ viele

19:14.690 --> 19:15.890
eigens

19:15.890 --> 19:22.090
Angedockten c++ note extensions soweit ich weiß das nie angeguckt weil discord hat ja kein source code

19:22.650 --> 19:30.070
Ja discord muss es gibt es gibt zwei sachen die man immer flamen muss das eine ist elektron das andere ist java

19:30.630 --> 19:38.700
Es ist egal ob das berechtigt oder unberechtigt ist aber kann man mal kann man mal zwischendurch zwischendurch immer machen

19:39.260 --> 19:45.990
Ja und okay c++ c++ flame ich ja gar nicht einfach just for fun

19:46.670 --> 19:50.030
C++ flame ich weil c++ es verdient hat und wirklich scheiße ist

19:50.710 --> 19:55.020
Also java hat es ja nicht mal groß verdient

19:55.340 --> 20:04.060
Ja war hat es ja nicht mal groß verdient und elektron hat es eigentlich auch nicht groß verdient

20:04.940 --> 20:06.940
Aber c++ hat es verdient

20:07.300 --> 20:14.800
Du machst gerade was mit elektron und java background ja warum nicht

20:15.320 --> 20:19.200
Und patrick heute auf arbeit neues projekt vorgestellt hat gefragt ob ja

20:20.440 --> 20:22.440
Besse so muss das machen

20:22.480 --> 20:26.080
Kein game ready driver so also doch erstellt

20:26.840 --> 20:28.840
Lasst uns mal kurz gucken

20:29.560 --> 20:34.420
Apache artemis image

20:36.060 --> 20:38.060
Wenn man das jetzt auch richtig schreiben kann

20:38.660 --> 20:40.660
gibt es da ein

20:40.940 --> 20:45.700
docker image

20:45.700 --> 20:48.020
official docker image na ist doch pog

20:48.860 --> 20:51.220
use our docu or check out our

20:51.740 --> 20:58.540
Documentation guck mal das muss man bei den apache projekten erst echt mal lassen die haben meistens zumindest ein paar sinnvolle docks guck mal hier

20:58.980 --> 21:01.460
official docker images docker run

21:03.900 --> 21:07.620
61614 ok man muss zwei sachen runnen warum

21:10.300 --> 21:12.500
Messaging port und http

21:13.100 --> 21:16.780
Http hat das ding in webinterface wahrscheinlich hat das ding webinterface

21:17.420 --> 21:22.420
Once the broker starts you can open the webmanagement console ok verstehe

21:23.100 --> 21:27.380
Default username und password ist artemis you can also use shellkommando

21:28.060 --> 21:29.220
moment

21:29.220 --> 21:33.100
Wollen die mir sagen da ist da ist ein command line tool etwa integriert

21:33.820 --> 21:37.860
Das wollen wir gar nicht wissen es gibt keine command line tools dafür

21:42.170 --> 21:44.170
Ignore

21:44.730 --> 21:50.530
Wir sind wir sind mal so frei wir gucken wir gucken kurz rein wir gucken ich will einfach nur wissen ich meine vielleicht müssen wir

21:50.530 --> 21:52.530
Vielleicht vielleicht bauen wir doch nichts selbst ja

21:56.490 --> 21:57.930
shell

21:57.930 --> 22:00.770
Aufpackt das hat echt ein eingebautes command line tool

22:06.150 --> 22:07.830
1

22:07.830 --> 22:10.630
Was auf damit muss ich go ab benutzen ja ist auch

22:11.510 --> 22:15.390
Go geht es ist vielleicht nicht meine lieblingssprache aber es geht geht voll klar

22:16.550 --> 22:18.550
ok command line interface

22:20.800 --> 22:22.800
getting help

22:22.800 --> 22:24.400
shell

22:24.400 --> 22:26.400
transfer

22:27.080 --> 22:31.340
Wir müssen eigentlich gar nicht selbst bauen

22:31.340 --> 22:33.340
Alter

22:36.420 --> 22:41.460
Man kann einfach sagen artemis producer und dann die message so wie es aussieht

22:46.170 --> 22:48.170
Naja

22:48.410 --> 22:51.050
Nee wir bauen jetzt trotzdem was

22:51.890 --> 22:57.690
Auch wenn wir es nicht brauchen zumindest zumindest mal ein bisschen basteln können wir lass uns mal kurz angucken wie das funktioniert

22:58.490 --> 23:00.490
hier gibt es dann ein beispiel für

23:01.250 --> 23:33.960
Okay das ist auch noch mega easy zu benutzen und welche message sendet der jetzt

23:35.360 --> 23:37.520
Let's try sending messages

23:41.680 --> 23:55.110
Wo ist denn hier die message die er sendet adress hello world ist nee das ist das ist die message queue

24:01.330 --> 24:03.330
Ja okay das ist natürlich jetzt

24:06.150 --> 24:09.470
Ach hier so minus minus data hängt man da einfach was dran

24:09.670 --> 24:15.550
Na gut egal wir bauen das trotzdem selbst easy also docker run my container

24:15.550 --> 24:18.830
Nee nee nee so ein kack machen wir nicht wir machen docker run

24:21.610 --> 24:23.610
Nee

24:24.530 --> 24:26.530
Einfach einfach docker run

24:27.530 --> 24:29.530
Minus minus am

24:29.890 --> 24:34.930
Dass es wieder weg ist gleich danach vergessen es vergesse ich das minus port

24:35.610 --> 24:37.610
Ach da ist schon am

24:37.730 --> 24:46.890
Apache active mq latest alpine okay dann dann pull mal dann

24:47.690 --> 24:51.830
your system can make

24:53.270 --> 24:59.230
Warum habe ich da gerade irgendwelche in instant exceptions bekommen am anfang timeout

25:00.750 --> 25:03.310
Typisches java program erst mal exception nach dem start

25:07.750 --> 25:13.070
Gestartet beim exception aber auch typisch java es geht gleich weiter trotz exception

25:15.520 --> 25:17.960
Okay, so und jetzt habe ich angeblich ein

25:18.600 --> 25:22.960
Quatsch habe ja gar kein teamox am start jetzt habe ich angegeben was das da

25:26.870 --> 25:28.870
ach das war für

25:29.910 --> 25:32.990
Mojo was ich dann doch nicht ausprobiert habe

25:34.750 --> 25:36.070
Local

25:36.070 --> 25:39.230
host port was 81

25:40.110 --> 25:42.110
61 flashed console

25:47.570 --> 25:50.570
Wenn ich mich jetzt so richtig wenn ich jetzt so richtig schreibe ok hat funktioniert

25:50.650 --> 25:56.140
Funktioniert okay

25:57.420 --> 25:59.420
Lock in to your active mq

26:01.820 --> 26:03.820
Okay als webinterface geht schon mal

26:08.230 --> 26:10.230
Artemis artemis

26:11.070 --> 26:13.070
Remember me yes

26:13.270 --> 26:15.270
Da sind wir okay

26:16.510 --> 26:18.510
Jmx monka w

26:19.350 --> 26:30.970
Monka w und users consumers ich will einfach nur eine message publischen leute jetzt

26:31.970 --> 26:33.970
key cloak integration

26:34.370 --> 26:36.170
übertreibt halt mal

26:36.170 --> 26:42.210
Yolo kia rest api jetzt lasst mich in ruhe ich will ich will einfach ich will das einfach nur api technik ansprechen gut ist

26:42.570 --> 26:44.570
okay also

26:44.890 --> 26:46.890
Go go land

26:47.210 --> 26:51.130
Jetzt wird es jetzt mit advanced ich habe schon wie gesagt eine weile nix mehr in go gemacht

26:51.570 --> 26:53.570
Enable new i ja würde ich schon sagen

26:54.770 --> 27:02.560
nur i

27:02.560 --> 27:07.760
Mir wurde mal gesagt dass es zwei sichere dinge im leben gibt der tote java exception beim staat

27:08.200 --> 27:10.560
Ja, ich habe letztens auch einen schlauen spruch gehört

27:11.640 --> 27:14.720
Erst wenn sich der mosquito auf deine eier setzt

27:15.320 --> 27:18.120
Lernst du dass man probleme nicht nur mit gewalt lösen kann

27:19.000 --> 27:21.000
Der ist aber eigentlich gar nicht schlecht oder

27:30.150 --> 27:32.150
Ist eigentlich ziemlich fein fährt oder

27:32.750 --> 27:37.710
So weiß ich weiß ich wo ich das wo ich das gelesen habe aufgeräumt ist nicht schlecht

27:38.270 --> 27:50.900
so ein new project ich bin immer verwirrt wenn ich neue go projekte anlege weil

27:51.420 --> 27:54.260
man kann das dann auswählen irgendwie zwischen

27:55.780 --> 28:00.220
Zwischen modules und nicht modules und go path und

28:00.860 --> 28:03.380
Ich glaube ich will das und dann macht es standardmäßig

28:04.220 --> 28:05.620
nen

28:05.620 --> 28:06.820
modules

28:07.820 --> 28:20.270
Also ich habe das jetzt mal frei übersetzt das war irgendein bildchen mit mit spruch auf englisch und war sicherlich gewählter

28:20.470 --> 28:27.070
Ausgedrückt als wie ich jetzt übersetzt habe ich fand das nicht schlecht so wir haben go 1 2 1 3 installiert ist das ist das neu

28:27.710 --> 28:32.290
Weil wir haben arch linux damit ja das ist

28:33.450 --> 28:38.970
verhältnismäßig

28:38.970 --> 28:40.730
ok

28:40.730 --> 28:43.330
enable vendoring support automatically

28:44.610 --> 28:46.610
das

28:46.770 --> 28:54.370
Funktioniert nicht so richtig ich lasse einfach mal alles default my awesome project ganz toll so muss das moment moment moment

28:55.410 --> 28:57.970
so heißt es nicht das heißt

28:59.530 --> 29:01.530
Message champ

29:06.120 --> 29:13.880
Schreibt man chat bei go muss man sich ja immer penibel daran halten dass man alles richtig macht von der schreibweise her und so gedünst

29:14.200 --> 29:21.160
Muss das projekt mit einem kleinen buchstaben anfangen oder oder wenn ich im großbuchstaben macht kackt er dann komplett ab

29:21.480 --> 29:23.480
Bei go ist das alles möglich

29:23.520 --> 29:29.760
Also wie gesagt go flippt auch aus wenn du was importiert hast was du nicht benutzt und und wenn du bei einem if die die

29:29.760 --> 29:31.760
Klammer auf der falschen zeile zumachst

29:33.560 --> 29:35.560
Implodiert go klein und will nicht mehr

29:36.600 --> 29:42.760
Okay, ich hoffe das tut einfach create

29:53.140 --> 29:56.300
Suggested plugin plugin kubernetes nene jetzt nicht

29:58.140 --> 30:07.990
Okay nice wenn sehe ich das richtig dass er nicht mal einen main go file anlegt er macht gar nix

30:09.470 --> 30:13.150
Main.go muss man glaube ich machen jetzt konnte man sagen hallo

30:17.150 --> 30:19.430
Das war ich bin schon wieder richtbar print

30:20.030 --> 30:21.630
Nee

30:21.630 --> 30:22.790
printen

30:22.790 --> 30:25.350
Okay, es ist schon schon direkt lost

30:27.510 --> 30:33.710
Ich weiß nicht mal mehr wie man brennt macht ne das war format war das fmt war das oder fmt punkt

30:35.390 --> 30:46.580
Import an die function um sieht nicht so eklig aus

30:49.310 --> 30:50.790
so

30:50.790 --> 30:55.190
Und jetzt und jetzt meint es ist go es ist go das heißt es muss so sein sonst mag das nicht

30:56.070 --> 30:58.430
Und wir machen das war alles mal ein bisschen größer

31:01.670 --> 31:06.900
size ja

31:08.500 --> 31:19.950
Okay perfekt so muss es sein package sollte auch main sein

31:21.430 --> 31:28.590
Warum geht es sonst nicht oder wie was passiert wenn ich hier print rindeln

31:29.670 --> 31:31.670
War das nicht fmt oder so

31:34.330 --> 31:39.730
Okay, was ist der unterschied zwischen print line und fmt print line keckel

31:40.930 --> 31:42.930
mit oder ohne ohne

31:44.010 --> 31:46.610
Okay, das muss ich jetzt das muss ich jetzt mal aus ausführen

31:48.450 --> 31:50.290
Go

31:50.290 --> 31:53.250
Message champ was war es einfach go run

31:56.300 --> 31:57.700
Main

31:57.700 --> 31:59.700
go run main oder

32:00.380 --> 32:13.820
Hey, aber go build war das go run punkt oder go run punkt

32:15.060 --> 32:19.180
Package ist not the main package. Okay, da muss das wirklich main sein. Okay

32:20.900 --> 32:23.900
Jetzt funsters keckel da sind wir

32:25.180 --> 32:29.580
Er ist alles schon ein bisschen her was in der unterschied zwischen print line und

32:30.980 --> 32:32.980
fmt in line

32:33.980 --> 32:43.220
Mein schäler ist auch wieder da. Wo warst du denn? Ja, was ist die difference interessiert mich auch

32:51.740 --> 32:58.820
Esoterischen sachen da wieder wer entwickelt solche elektronen apps sind es dann fronten entwickler oder gibt es extra elektronen entwickler

32:58.940 --> 33:05.820
Naja, der grund warum sich elektron so durchgesetzt hat ist dass damit auch web entwickler desktop anwendungen entwickeln können

33:05.860 --> 33:07.860
Also kannst du von ausgehen dass es vornehmlich

33:08.740 --> 33:15.860
Webentwickler sind weil du hast ja im prinzip einen browser nur halt als eigenes fenster

33:16.740 --> 33:18.740
Für deine anwendung also in eigenen

33:19.140 --> 33:25.300
Eigenes browser fenster exklusiv für deine anwendung und note dabei also es werden ich gehe mal davon aus wenn du solche umfangreichen

33:25.540 --> 33:32.820
Sachen wie discord nimmst ja das sind sicherlich nicht nur fronten entwickler dran beteiligt die haben ja beispielsweise auch eigene c++

33:33.460 --> 33:35.340
modules und sowas mit drinne

33:35.340 --> 33:37.340
aber insgesamt würde ich sagen

33:38.700 --> 33:44.980
Wahrscheinlich mehr fronten entwickler die elektronen verwenden also wenn ihr wenn jetzt irgendjemand sagen wir mal ein

33:46.500 --> 33:53.100
Oldschool boomer windows only wpf entwickler ist da wird er wahrscheinlich nicht so unbedingt elektronen verwenden

33:53.500 --> 33:55.980
Wobei es weiß ich gar nicht was ich schlimmer finden soll

33:56.660 --> 33:58.660
Wer sie laut sage für den zahn

34:00.550 --> 34:01.670
war

34:01.670 --> 34:04.150
Wo wann gibt es das release von deiner elektronen app

34:07.710 --> 34:08.950
Ach

34:08.950 --> 34:14.390
Bist du so jung chain lohr so jung und schon auf so vielen discord servern gebannt

34:18.720 --> 34:29.110
Musste auch erst mal schaffen so also kommen wir zur eigentlichen sache

34:30.310 --> 34:36.390
Wir können schon mal print line machen das schon mal enorm enorm. Okay, es gibt eine github

34:36.990 --> 34:38.430
go

34:38.430 --> 34:44.830
am qp 1.0 library die habe ich schon gefunden von microsoft azure go am qp

34:46.780 --> 34:50.300
Es gibt auch von datadog eine oder von

34:51.860 --> 34:56.700
Vcabbage okay leute wenn ich die auswahl habe moment moment habe sehe ich das richtig

34:57.620 --> 35:00.100
Microsoft hat es gefolgt von vcabbage

35:01.060 --> 35:13.000
Das heißt vcabbage ist original und datadog hat es gefolgt von azure na nice

35:14.000 --> 35:20.390
Jeder gut also ist das wahrscheinlich die beste library die es für go gibt

35:23.470 --> 35:25.470
Wie viel funds das denn

35:27.250 --> 35:29.250
Install the module

35:30.210 --> 35:34.930
Gut da geht es jetzt schon los wie ich überhaupt nicht mehr weiß wie das funktioniert

35:36.530 --> 35:42.630
Ging das nicht einfach alter ging das nicht so und jetzt sinkt die pendent siehst

35:44.850 --> 35:51.550
Okay, okay, okay

35:53.270 --> 35:57.470
Ja, ja an justin das ist auch eine sache die mich an go übelst abfakt

35:58.470 --> 36:04.750
Ich würde es halt einfach mal gerne drin stehen lassen ohne dass es beim speichern gleich removed wird beziehungsweise nicht kompiliert

36:05.350 --> 36:08.730
So ich hoffe es hat jetzt funktioniert

36:10.090 --> 36:14.930
Stimmt man kann so komische dinger machen gäbe es aber trotzdem trotzdem eklige

36:16.250 --> 36:20.220
Ich bin bin dann zu blöd für jetzt wieder weg

36:21.220 --> 36:23.700
Okay, wie benutzt man es connect to broker

36:25.890 --> 36:27.890
Okay, wo ist es hin?

36:28.890 --> 36:31.850
Moment wait a minute das verschwindet wenn ich den

36:38.740 --> 36:53.550
Ich habe ich irgendwie safe und fokus oder sowas was zum teufel ist kontext

37:02.650 --> 37:06.530
Ich bezweifle dass der das haben will ach hier kontext tatsächlich

37:07.490 --> 37:09.490
Das ist einfach nur platzhalter oder

37:10.930 --> 37:13.610
Das ist einfach nur ein platzhalter oder ne was ist das

37:13.810 --> 37:15.810
Kontext zu du

37:16.530 --> 37:28.220
Was soll das denn schon wieder sein

37:28.820 --> 37:38.600
Das ist komisches go geduld wieder to do returns in non empty kontext

37:39.400 --> 37:41.400
Code should use

37:41.720 --> 37:49.740
Alter ich habe absolut keinen blassen schimmer was sie überhaupt von mir wollen aber das der example code

37:50.300 --> 37:55.460
Unterkante dank für den sag ich habe keine ahnung was sie von mir wollen aber wir lassen es einfach mal okay einfach so

37:55.900 --> 37:57.900
Okay, ein coupé local host

37:57.980 --> 37:59.980
Okay, ein coupé local host

38:01.780 --> 38:09.970
Local host port was 61617 oder sowas nicht minus a

38:14.190 --> 38:20.960
Warum ex posten der 30 milliarden ports nie macht er gar nicht lieber c

38:22.920 --> 38:24.920
Also wenn ich die auswahl ab c oder c++

38:25.920 --> 38:30.360
Okay, ganz ehrlich leute wenn ich die auswahl habe c oder c++

38:31.360 --> 38:34.320
Wahrscheinlich würde ich sagen ja dann

38:34.920 --> 38:39.480
Lieber c++ wenn es für sowas wie microcontroller ist beispielsweise 32 aber

38:40.200 --> 38:41.800
möglichst wenig

38:41.800 --> 39:01.710
von den bullshit parts von c++ nutzen das dem ort war ich da nicht rein aber

39:03.230 --> 39:05.230
Das hat zu hohes

39:05.870 --> 39:10.350
Missusage quasi so potenzial aber die idee finde ich gut

39:13.980 --> 39:29.780
Das das erkennst du erst wenn du es für das klein warst wenn das normal großes erkennt man gar nichts so jetzt okay jetzt erzählt er

39:29.780 --> 39:31.780
mir weil an just variable kon

39:32.500 --> 39:34.500
sondern machen wir jetzt mal

39:34.660 --> 39:40.540
Einfach so ne das geht error handling ist ja auch komplett overrated in goal nach geweck weg

39:43.340 --> 39:45.600
Hey wie kann ich beides diskaden leute

39:46.340 --> 39:48.180
Kann man es einfach weglassen

39:52.580 --> 39:58.340
Ja so ist gut so ist gut einfach einfach ja moment ich kann aber hier dann sagen

39:58.580 --> 40:01.420
Kontext und hier so ne dass das geht dann das geht dann

40:02.420 --> 40:08.740
Muss ich so machen dass das funktioniert okay aber ich lasse es mal trotzdem mit error handling drinne

40:11.660 --> 40:15.660
Okay, so bla bla bla bla error handling

40:17.780 --> 40:19.780
Error

40:19.860 --> 40:21.860
Und ansonsten

40:23.220 --> 40:26.220
Check wait so return

40:28.140 --> 40:33.300
Alles klar dann gehen wir mal nach go projects message champ und sagen go run

40:36.220 --> 40:44.020
Error na super funktioniert ja schon mal aber wenn der port ist ja auch falsch es ist 6 16 16

40:47.070 --> 40:48.470
error

40:48.470 --> 40:53.530
ja

40:53.530 --> 41:01.240
gut

41:01.240 --> 41:03.240
Ich meine das ist nicht http aber

41:05.790 --> 41:08.550
telnet

41:08.590 --> 41:13.070
Localhost

41:13.070 --> 41:15.070
Okay, das funktioniert

41:15.070 --> 41:21.150
Da geht in den port gut das heißt ja noch nix ist ja nur der docker proxy der das der das annimmt

41:27.280 --> 41:29.440
Woher weiß ich jetzt ob das überhaupt anders

41:37.720 --> 41:39.720
61616

41:47.190 --> 41:50.500
Ist anscheinend

41:51.340 --> 41:53.340
Weitergeleitet oder

41:53.540 --> 41:55.540
Machten das webinterface

41:57.990 --> 42:00.670
Das geht noch okay was sagen die denn

42:03.320 --> 42:06.920
You can also use the shell command to interact with the

42:14.520 --> 42:20.880
Seher dass das der port ist ja die schreiben das hier nämlich auch weil es ist auch der einzige port neben dem webinterface der

42:20.880 --> 42:24.080
weitergeleitet ist

42:24.080 --> 42:26.080
Das ist der richtige port

42:27.280 --> 42:34.120
61616 ich glaube nicht dass es am qps ist

42:39.440 --> 42:41.440
Doch ist es

42:42.440 --> 42:48.120
Alles klar

42:48.120 --> 42:55.600
Highly secure jetzt jetzt mal hier go checker mans wie kriege ich jetzt die fehlermeldung eigentlich was das problem ist

42:56.160 --> 42:59.160
Ist das irgendwie dem error error objekt drinne

42:59.880 --> 43:01.880
sage ich dann

43:02.400 --> 43:08.600
Fmt print okay go lang print error kann man das einfach so printen wie man will

43:10.480 --> 43:12.480
Einfach hier den error reinhauen und dann

43:13.000 --> 43:21.830
Na yes yes yes excellent excellent das muss man doch bestimmt okay go lang print error

43:28.900 --> 43:33.620
würdest du deine was wusstest du dass doch keine ports öffnet ja wusste ich

43:34.180 --> 43:38.620
Da gibt es muss man paar zeilen zusätzlich eintragen weil docker eigene

43:39.420 --> 43:41.620
iptables ip table chains anlegt

43:49.940 --> 44:02.180
Kann man kann man nicht einfach hier ist es doch da vielleicht muss man es auch mit fmt machen dann ist

44:05.040 --> 44:06.680
hier

44:06.680 --> 44:08.680
unexpected protocol header

44:10.120 --> 44:12.000
0x3

44:12.000 --> 44:19.600
expected 0x0 das ist ja eine erstklassige fehlermeldung dafür dass man sich mit am qp anstatt am qps

44:20.400 --> 44:23.400
verbindet ich finde das kann man original also wirklich

44:24.120 --> 44:26.840
obviously anhand dieser fehlermeldung erkennen

44:27.720 --> 44:31.920
ganz klare error message ja finde ich auch und jetzt funktioniert

44:31.920 --> 44:46.820
Geil jetzt weiß man Bescheid so also wie veröffentlicht man jetzt eine message also call am qp deal to connect to am qp broker

44:47.020 --> 44:51.700
this creates blablabla connection ich vermute die connection

44:52.900 --> 44:59.100
die müssen wir uns merken aber ich habe gemerkt leute die go benutzen die kürzen gerne ab weil wir machen auch con

45:02.110 --> 45:07.470
Ich persönlich würde nicht kon schreiben sondern oder einfach nur c wenn schon dann richtig kon

45:07.990 --> 45:12.110
oder oder oder gleich connection ich ich persönlich mag ja ausgeschriebene sachen

45:12.910 --> 45:14.910
aber das scheint im go

45:15.190 --> 45:17.590
im go ökosystem nicht so angesagt zu sein

45:18.670 --> 45:24.470
chat wer von euch ist experience go programmer wie würdet ihr die variablen nennen kon kon

45:25.870 --> 45:28.510
weglassen oder connection

45:29.510 --> 45:31.510
Oder einfach c kon

45:34.000 --> 45:40.570
okay

45:40.570 --> 45:42.570
ich finde als als

45:42.930 --> 45:46.250
.net c sharp fan connection ausgeschrieben auch nicht schlecht

45:50.300 --> 45:53.020
cn ja cn wäre eher so die c variante

45:57.780 --> 46:00.460
und und java wäre wäre wäre

46:01.580 --> 46:04.460
connection händler factory

46:07.700 --> 46:09.700
Message

46:09.980 --> 46:13.540
Response singleton

46:16.740 --> 46:22.420
Manager in java würde das ungefähr so heißen das ding in go heißt einfach kon

46:32.940 --> 46:38.940
Okay, was kann man mit diesem kon objekt denn so machen close und new session okay das ist in der tat

46:39.740 --> 46:41.740
sehr

46:41.980 --> 46:46.460
Minimalistisch wahrscheinlich muss ich jetzt sagen new session vermute ich jetzt einfach mal

46:47.500 --> 46:50.940
Ja steht ja sogar da

46:51.140 --> 46:55.340
Jetzt jetzt jetzt scheint das tolle go error handling

46:56.340 --> 47:09.500
Ich das ist auch so ein ding ich weiß viele finden das gerade toll an go ich mag es persönlich jetzt nicht so

47:11.620 --> 47:15.100
Ich meine das hier ist doch standard error handling oder mein

47:16.340 --> 47:18.340
print den error und geht raus

47:19.180 --> 47:21.180
Okay, session wie geht es weiter

47:27.550 --> 47:29.550
Once the session has been created

47:30.190 --> 47:33.790
Create a mqp sender to message okay und the receiver

47:36.030 --> 47:40.110
Was genau ist der plan ich will eine mqp message senden über go

47:42.070 --> 47:43.830
Sender

47:43.830 --> 47:45.830
error

47:45.910 --> 47:53.150
Aber das kann man das irgendwie ein bisschen schöner machen in go anstatt jedes mal hier print error zack bumm

47:53.990 --> 47:55.590
weil

47:55.590 --> 47:57.590
Das ist halt das coole an der exception

47:58.350 --> 48:01.270
Da muss an der stelle einfach gar nichts machen das reicht einfach

48:04.540 --> 48:07.220
Weil es geht nicht weil wir so auf der arbeit brauchen

48:08.580 --> 48:15.580
Okay, was wollen die hier von mir new sender konnte was zum teufel ist diese kontextgeschichte

48:20.720 --> 48:22.720
carries deadlines

48:23.920 --> 48:26.720
Das ist cancellation token source

48:27.360 --> 48:34.020
quasi

48:34.020 --> 48:39.380
Aber das ist doch also ich finde das ist das ist das ist super obskur benannt oder

48:40.260 --> 48:42.260
kontext punkt to do

48:44.950 --> 48:46.950
also das ist

48:47.910 --> 48:52.390
Gewöhnungsbedürftig name of peers receiving terminus was

48:56.100 --> 49:02.780
Was ist ein cancellation token das ist in der dotnet standard library ein ja man kann nicht mal sagen ein

49:03.380 --> 49:08.820
Was eingebaut also das ist der eingebaute klasse in der dotnet standard library und sehr viele methoden

49:09.340 --> 49:12.460
also und klassen unterstützen das wenn man denen ein

49:13.260 --> 49:15.700
cancellation token übergibt in dotnet

49:16.340 --> 49:17.980
dass du dann

49:18.020 --> 49:24.740
Das asynchron quasi canceln kannst du ergibt dem cancellation token und irgendwann setzt du das auf true

49:24.740 --> 49:29.420
Das auf canceled das token und dann und dann return das bevor es fertig ist

49:29.980 --> 49:38.140
So und was was ist denn das hier jetzt target name of peers receiving terminus

49:39.060 --> 49:45.120
what

49:45.720 --> 49:50.720
Was das sein soll aber gut gibt es ist das hier vielleicht

49:51.720 --> 49:56.200
Überladen oder so news moment ist das

49:56.960 --> 50:01.960
Ist das der name von diesem sender also kann ich jetzt einfach mal keckel nennen zum beispiel

50:03.000 --> 50:07.520
Was auch immer target ist in dem in dem zusammenhang okay

50:08.200 --> 50:09.320
sender

50:09.320 --> 50:12.760
send context am coupé new message hello

50:16.740 --> 50:18.740
Okay, so jetzt sollte eine message schicken

50:19.460 --> 50:27.590
Was ich was ich sehr merkwürdig finde ist

50:28.270 --> 50:38.290
Warum hängt er jetzt und an welcher stelle hängt er

50:40.090 --> 50:43.050
Guckt man mal ins web interface ob der jetzt was gemacht hat

50:49.270 --> 50:50.310
Konsumers

50:50.310 --> 50:55.110
Producers sessions nee gibt noch nicht mal sessions aber connections gibt es

50:55.510 --> 51:14.460
Nee, das ist ja selbst oder okay der hängt jetzt einfach und und wo hängt der

51:15.300 --> 51:17.020
leute gutes

51:17.020 --> 51:19.340
gutes print print line debugging

51:24.020 --> 51:29.400
Nee der hängt bei new session

51:33.450 --> 51:39.780
warum denn das

51:39.780 --> 51:41.900
Dann machen wir das doch mal mit timeout jetzt

51:44.800 --> 51:54.030
Nehmen der im moment noch nicht mal kann das sein dass es vorhin auch schon nicht funktioniert hat

51:59.460 --> 52:06.380
Und der einfach nur jetzt hängt weil das versucht mit einem qps sich zu connecten dass das connect noch nie funktioniert hat

52:07.500 --> 52:11.460
unexpected protocol header 0x3 expected 0x0

52:17.030 --> 52:22.260
Aha okay

52:22.820 --> 52:25.100
Ich weiß keine ahnung x3 was

52:26.860 --> 52:33.340
Protokoll zassel protokoll tls protokoll am coupé ja

52:36.100 --> 52:38.100
Expected 0x0

52:40.060 --> 52:47.020
Ist das das was das server sagt also wir müssen per am coupé connecten da muss man bestimmt irgendein options objekt hier übergeben

52:47.860 --> 52:53.540
Und was was muss man da rein rein stecken an der stelle hier sowas

52:55.140 --> 52:57.140
Gatschi bass

52:57.260 --> 53:02.340
Ach hier kann man umstellen was er benutzen soll aha okay

53:04.900 --> 53:10.420
Also hostname string tls tls connection

53:11.380 --> 53:16.260
Port ist richtig aber kommen wir kommen eine response wie stelle ich das jetzt um

53:17.980 --> 53:30.770
Gibt es da vielleicht noch mehr

53:31.890 --> 53:33.890
Deal configuration

53:35.570 --> 53:37.570
Jetzt mal

53:40.560 --> 53:46.760
Jetzt mal was anderes lasst uns gerade mal noch mal kurz was ausprobieren so das hier hing jetzt ja ne

53:47.440 --> 53:49.440
Jetzt jetzt muss ich das mal ausprobieren

53:49.440 --> 53:55.440
Das hier hing jetzt ja ne jetzt jetzt muss ich das mal ausprobieren dass ich ein bisschen was go mäßiges lerne

53:56.240 --> 53:58.240
Was muss ich machen?

54:02.320 --> 54:04.320
Okay und jetzt

54:05.200 --> 54:07.200
Time duration

54:09.890 --> 54:12.530
Das war doch jetzt so eine ganz komische syntax oder

54:13.530 --> 54:15.530
irgendwie fünf mal

54:16.130 --> 54:18.130
Time second oder sowas

54:20.850 --> 54:22.850
Okay das aber schon mal falsch

54:26.260 --> 54:27.700
Aber

54:27.700 --> 54:34.980
Das kann man da nicht reinschreiben okay das ist auch wieder so ein coding aber aber error handling ist schon mal komplett outdated

54:36.340 --> 54:38.340
Overrated out debated

54:43.420 --> 54:45.420
Zdx 0 outplayed

54:51.600 --> 55:14.770
Doppelpunkt aber das hier funktioniert auch nicht

55:29.470 --> 55:40.470
Ich checke nicht wie man das benutzt wie funktioniert das moment

55:41.430 --> 55:47.670
Und und jetzt sage ich hier kontext to do oder also das ist bis sie ist nicht also

55:48.710 --> 55:50.710
komisch zu benutzen

55:52.230 --> 56:02.070
Seconds ja das funst jetzt okay sondern das timeout jetzt nach fünf sekunden gucken wir doch mal 1 2 3 4 5 bär

56:03.050 --> 56:07.990
hey tatsächlich

56:07.990 --> 56:12.690
funst und was und was macht kontext background

56:17.230 --> 56:22.510
Returns it is never canceled has no valid has no deadline

56:23.710 --> 56:29.310
Okay, das wollen wir schon mal nicht

56:29.310 --> 56:37.150
Okay, anscheinend funktioniert das was ich hier gemacht habe wir haben den timeout und müssen jetzt keinen standard tcp timeout oder sowas abwarten

56:37.230 --> 56:40.550
Es bringt aber immer noch nix weil das connecten nicht funktioniert

56:41.270 --> 56:48.790
Kann man jetzt diesen kontext eigentlich bei den anderen auch einfach funktionieren benutzen oder spackt es dann rum

56:49.110 --> 56:51.550
Weil man den kontext mehrfach verwendet hat

56:53.630 --> 56:55.870
Werden wir wie gleich gleich sehen

57:07.310 --> 57:08.830
okay

57:08.830 --> 57:14.750
Also wie connectet man den jetzt mit einem anderen protokoll gibt es da auch irgendwas auf der seite drauf

57:21.680 --> 57:23.680
ja konst

57:24.360 --> 57:26.640
If proto id what

57:27.560 --> 57:35.380
Er ist das ding

57:35.420 --> 57:37.420
Vielleicht sollten wir mal in die richtige gucken ja

57:41.190 --> 57:43.190
Source code lesen

57:43.590 --> 57:45.590
Weil ich es nicht checke sondern

57:47.390 --> 57:52.270
Wo ist das drinne kann man kann man irgendwie hier anklicken und kommt dann zum so guck mal da

57:53.870 --> 57:55.870
Got it

57:55.950 --> 58:01.180
Opts

58:01.180 --> 58:04.460
Opts

58:04.460 --> 58:06.460
cp opts if

58:07.700 --> 58:12.860
Er cp ist connection up connection options obviously cp

58:14.020 --> 58:16.020
hostname new connection

58:17.020 --> 58:22.130
Und in dem moment anhand

58:25.170 --> 58:29.010
Ne man kann was man kann nur am qp

58:31.010 --> 58:33.010
Oder

58:33.170 --> 58:36.690
Am qp plus ssl benutzen

58:47.570 --> 58:50.610
Was will er jetzt denn von mir mit der fehler meldung

58:52.330 --> 58:54.330
Was hat er denn für schmerzen

58:55.330 --> 58:57.330
Also wir haben ein

58:57.370 --> 59:01.370
Unexpected protocoll header und wenn man hier guckt hat man ja gerade gesehen

59:02.810 --> 59:04.810
Das 0x

59:05.450 --> 59:07.090
0x3

59:07.090 --> 59:12.000
ist

59:12.000 --> 59:19.920
Ich weiß gar nicht sagt mein server dass er 0x3 meint oder oder meint mein client es müsste

59:21.520 --> 59:25.240
Ist das eine fehler meldung vom server was soll die fehler so bescheuert

59:25.240 --> 59:28.950
Aber

59:28.950 --> 59:30.950
Okay kann man das irgendwie umstellen

59:31.710 --> 59:39.780
Ja also ich meine ich habe nur zwei varianten am qp s

59:40.460 --> 59:43.780
oder am qp so beides funst net

59:46.230 --> 59:48.230
heißt im endeffekt ich muss

59:48.550 --> 59:56.450
Ach muss ich username passwort und so noch eingeben dass es funst ist dann anders aus

59:58.290 --> 01:00:00.290
Okay

01:00:01.090 --> 01:00:03.090
Wie jetzt

01:00:06.880 --> 01:00:08.880
Wie geht man überhaupt in username

01:00:10.840 --> 01:00:17.740
Sassel type geht man hier jetzt

01:00:28.490 --> 01:00:31.250
Server sagt er will authentifizierung ja dann

01:00:32.290 --> 01:00:34.290
muss ich das hier jetzt sagen

01:00:34.450 --> 01:00:35.930
sassel type

01:00:35.930 --> 01:00:37.930
Okay, was passiert damit jetzt

01:00:40.010 --> 01:00:43.690
Unauthorized access unable to validate user username 0 okay

01:00:44.690 --> 01:00:47.010
Okay das sieht schon mal das sieht schon mal besser aus

01:00:48.370 --> 01:00:50.370
Also da müssen wir jetzt was sagen

01:00:51.010 --> 01:00:54.300
plaintext

01:00:54.300 --> 01:00:56.580
Okay, soll mir recht sein plaintext user

01:00:57.700 --> 01:00:59.700
artemis passwort

01:01:00.580 --> 01:01:02.060
artemis

01:01:02.060 --> 01:01:04.860
Tag kak wait hat funktioniert

01:01:06.140 --> 01:01:07.420
Nice

01:01:07.420 --> 01:01:10.900
okay, und jetzt haben wir im web interface ein

01:01:15.310 --> 01:01:17.310
Nichts mehr okay, das ist auch nicht schlecht

01:01:19.110 --> 01:01:24.070
Das ist auch nicht schlecht weil die connection ist jetzt auch abgebaut queues

01:01:26.190 --> 01:01:28.190
Addresses ach guck mal hier

01:01:28.710 --> 01:01:30.150
hier keckel

01:01:30.150 --> 01:01:42.420
Queue count ich bin ich habe von diesem produkt keine ahnung aber ich ich vermute mal es hat halbwegs funktioniert

01:01:43.620 --> 01:01:53.100
Was ist das runtime bei der c-sharp library heißt es übrigens connection factory ja das ist ja auch nicht schlimm

01:01:56.670 --> 01:02:01.900
addresses queues

01:02:02.260 --> 01:02:07.640
LQ ach hier guck mal keckel da ist es doch

01:02:10.120 --> 01:02:17.380
Ich bin mir nicht so ganz ich also okay das ist der queue name

01:02:19.140 --> 01:02:24.740
Moment wie haben die das hier vorhin genannt addresses punkt oder

01:02:26.500 --> 01:02:27.940
Addresses

01:02:27.940 --> 01:02:36.160
Punkt wie ist das hello world die hat noch irgendwo so ein beispiel vorhin wo war das denn

01:02:37.160 --> 01:02:43.740
Wo habe ich das eben gesehen mit dem hello world example

01:02:44.260 --> 01:02:57.170
Ja, habe ich das gesehen

01:02:57.330 --> 01:03:02.970
Address hello world okay, da muss man address wahrscheinlich sagen target address keckel

01:03:03.690 --> 01:03:05.410
okay, run

01:03:05.410 --> 01:03:09.090
Und jetzt ich reime das auch nur ganz wild zusammen gerade

01:03:10.050 --> 01:03:12.050
Okay, address keckel

01:03:14.290 --> 01:03:16.290
Was

01:03:16.410 --> 01:03:18.410
Naja das irgendwas anderes

01:03:18.410 --> 01:03:30.770
Also ich vermute mal das hat jetzt funktioniert ehrlich gesagt wir brauchen jetzt noch was was listen da dran wobei ich eigentlich auch

01:03:31.930 --> 01:03:45.220
Vermuten würde das hier eine message queue jetzt

01:03:46.700 --> 01:03:50.780
Dass man irgendwo die die messages sehen kann die da drin sind hier im web interface

01:03:54.250 --> 01:04:02.880
Dlq

01:04:02.880 --> 01:04:10.540
Okay, so wirklich checken tue ich es nicht aber allein schon dass das auftaucht

01:04:11.500 --> 01:04:13.500
Würde ich mal sagen hat es funktioniert

01:04:14.060 --> 01:04:20.580
Diagnostics wo was zum was ist das

01:04:33.870 --> 01:04:35.870
recordet das jetzt

01:04:36.030 --> 01:04:43.380
Das macht einfach gar nichts

01:04:44.540 --> 01:04:46.940
Wir hängen uns mal da dran und lauschen aber

01:04:57.150 --> 01:04:58.350
addresses

01:04:58.350 --> 01:05:03.990
Okay, kann ich was zu dlq schicken ich weiß nicht was dlq sein soll aber wir schicken es einfach mal dahin

01:05:04.590 --> 01:05:06.590
Ja

01:05:06.910 --> 01:05:12.130
Message count 0 das ist was anderes

01:05:15.450 --> 01:05:17.450
Message count 1

01:05:17.490 --> 01:05:24.020
Ja das web interface ist schrott aber

01:05:26.930 --> 01:05:29.250
Data hello da ist es doch

01:05:30.170 --> 01:05:34.770
Okay, das hat funktioniert also wenn man an dlq schickt dann dann ist alles gut

01:05:38.180 --> 01:05:39.700
dlq

01:05:39.700 --> 01:05:41.700
Ich weiß nicht was das ist aber

01:05:42.260 --> 01:05:54.850
Das funktioniert okay, das heißt das war im prinzip schon das message senden das ist doch gar nicht so sonderlich kompliziert

01:05:55.210 --> 01:05:57.410
Musst du vorher ein topic einrichten

01:05:58.290 --> 01:06:05.770
Eventuell ich habe davon echt keine ahnung also im web interface machen wir es nicht wir gucken uns mal weiter die die docs an von der

01:06:07.090 --> 01:06:09.570
Von der library was die sonst noch so schreiben

01:06:12.080 --> 01:06:14.080
Okay name of peers receiving

01:06:14.720 --> 01:06:16.720
Terminus was auch immer das ist

01:06:21.840 --> 01:06:23.840
Send message create a new receiver

01:06:24.840 --> 01:06:29.360
Ja kann ich jetzt

01:06:30.840 --> 01:06:35.780
Okay, das heißt doch ich

01:06:36.940 --> 01:06:38.940
Hängt das jetzt

01:06:39.140 --> 01:06:41.140
Hängt das jetzt

01:06:41.180 --> 01:06:53.230
Unendlich lang bis oder für irgendeinen timeout bis das ja das hängt jetzt okay

01:06:54.750 --> 01:06:59.070
Dann machen wir das doch mal in der eigenen go go routine

01:07:03.050 --> 01:07:06.770
Moment jetzt jetzt jetzt wird's advance go multithreading gedönnt

01:07:09.010 --> 01:07:13.570
Session also hier go wie war das jetzt function so

01:07:15.770 --> 01:07:17.770
Und jetzt kommt das hier rein

01:07:17.810 --> 01:07:21.120
wir listen an kecke

01:07:26.810 --> 01:07:32.450
Und senden oder die dlq will es wir listen an dlq und dann senden wir was an dlq

01:07:39.350 --> 01:07:41.350
das scheint funktioniert zu haben

01:07:43.660 --> 01:07:45.660
Wir sind mal

01:07:51.380 --> 01:07:54.460
Nummer auf nummer sicher okay das funktioniert das funktioniert

01:07:55.340 --> 01:07:58.660
das klappt echt

01:07:59.220 --> 01:08:02.850
Fmt

01:08:03.250 --> 01:08:07.850
Fmt was print das groß geschrieben ja das funktioniert

01:08:09.210 --> 01:08:15.230
Der bekommt jetzt eine message und dann kann man sich die message anzeigen lassen data als bytes okay

01:08:16.230 --> 01:08:25.120
Auch gut so jetzt kommt jetzt kommt bytes to string in go was war das drill konf

01:08:25.880 --> 01:08:27.880
nee

01:08:28.120 --> 01:08:30.480
Iota nee scheiße

01:08:33.540 --> 01:08:35.540
Oder einfach nur string

01:08:35.660 --> 01:08:37.180
ist es so

01:08:37.180 --> 01:08:40.540
Nee nee ist nicht wir sind nicht in python das ist nicht

01:08:46.630 --> 01:08:51.220
Moment das ist ein ein

01:08:52.580 --> 01:08:55.740
Moment ist das ein mehrdimensionales was ist das

01:08:58.820 --> 01:09:00.820
data section contains

01:09:02.100 --> 01:09:04.100
Muss ich da jetzt sowas hier machen

01:09:04.340 --> 01:09:09.860
Ja, alter ist das wir wer hat sich das ausgedacht

01:09:11.180 --> 01:09:13.180
Handling des todesmann

01:09:16.940 --> 01:09:23.380
Okay aber scheint zu funktionieren leute es scheint es scheint zu funktionieren ich mache noch mal kurz ein sleep hier dazwischen

01:09:23.780 --> 01:09:25.780
auch wenn es liebst immer unschön sind aber

01:09:25.780 --> 01:09:32.160
Okay

01:09:32.880 --> 01:09:38.720
Target keckel und hier auch mal gucken ob das dann funktioniert das funktioniert doch

01:09:41.280 --> 01:09:43.280
Funs okay

01:09:43.560 --> 01:09:47.200
Das kann man anscheinend anscheinend taucht das nur hier richtig auf

01:09:47.720 --> 01:09:51.200
Sobald man wo ist es denn hier atem ist

01:09:52.000 --> 01:09:58.160
So okay das sind keine message queues anscheinend

01:09:58.960 --> 01:10:02.480
Das hier sind anscheinend keine message queues das sind irgendwelche

01:10:03.400 --> 01:10:09.680
Channels oder sowas wo die nur funktionieren also die ist nicht speichern sondern die nur

01:10:11.160 --> 01:10:12.720
Quasi

01:10:12.720 --> 01:10:16.040
Wenn einer attached ist um die zu lesen dann geht's

01:10:16.520 --> 01:10:24.680
Was auch immer für wäre es zeug interessiert mich nicht wichtig ist wie man eine nachricht schickt der recht es geht das ist die einzige

01:10:24.680 --> 01:10:26.680
library des gibt

01:10:26.720 --> 01:10:30.040
Okay, dass das funst

01:10:30.200 --> 01:10:34.480
Okay, dann würde ich sagen wird es zeit daraus jetzt ein command line tool zu bauen

01:10:37.300 --> 01:10:39.860
Ich war mal die schrift die schrift mal kurz ein bisschen kleiner

01:10:41.620 --> 01:10:44.300
Ja da brauchen wir ein command line tool draus

01:10:45.820 --> 01:10:52.500
So das mit dem das mit dem receiver das können wir uns eigentlich sparen das brauchen wir nicht mehr einmal getestet gut ist

01:10:54.840 --> 01:11:04.360
Session ja das ist eigentlich okay so gut dann müssen wir jetzt da müssen wir es okay ich meine es ist eigentlich super

01:11:04.360 --> 01:11:11.400
Simpel was wir als command line tool brauchen wir brauchen wir brauchen eine option wie waren kommands hier oder so

01:11:12.000 --> 01:11:14.000
wir brauchen eine option

01:11:14.440 --> 01:11:19.080
Minus minus server und wir brauchen eine option minus minus user

01:11:19.800 --> 01:11:26.360
Minus minus minus passwort oder wisst ihr was noch viel besser wäre nicht minus minus passwort

01:11:26.680 --> 01:11:29.560
Sondern dass man das aus einem pfeil lesen kann

01:11:30.000 --> 01:11:34.920
Wisst ihr auch warum das besser wäre wobei ich mir gar nicht so sicher bin ob das besser ist

01:11:35.880 --> 01:11:41.480
Weil dann kann man das als kubernetes secret

01:11:42.040 --> 01:11:45.320
Mounten also man kann das secret als pfeil mounten

01:11:45.840 --> 01:11:50.960
Braucht es nicht als environment variable was heißt man könnte es

01:11:51.880 --> 01:11:57.120
Reloaden ohne dass man den pott neu starten muss und die chance

01:11:57.640 --> 01:12:02.960
Dass es in irgendeinem debug output drinnen steht das passwort ist geringer

01:12:04.040 --> 01:12:05.920
also vielleicht

01:12:05.920 --> 01:12:12.880
Sollten wir das einlesen von user und passwort aus einer aus einem secret unterstützen beziehungsweise halt

01:12:13.720 --> 01:12:18.160
Letztendlich aus oder aus einer konfig map besser gesagt oder aus dem konfig pfeil

01:12:19.640 --> 01:12:26.520
Ja wir machen erst mal wir machen erst mal command line arguments ja also mehr brauchen wir ja nicht wenn ich das richtig sehe wir

01:12:26.520 --> 01:12:29.240
Brauchen minus minus server da geben wir das hier an

01:12:30.720 --> 01:12:37.680
Und wir brauchen username und passwort ich glaube das war moment wir brauchen noch wir brauchen noch minus minus message

01:12:38.680 --> 01:12:40.680
Wir wollen ja auch irgendwas übergeben können

01:12:45.120 --> 01:12:52.000
Es gibt auch eine ganz gute command line parser library für go die haben wir hier schon mal verwendet im stream da kannst du da kannst du

01:12:52.000 --> 01:12:54.000
auswählen ob

01:12:54.880 --> 01:12:59.520
Command line wenn nicht command line gesetzt dann aus environment variable

01:13:00.920 --> 01:13:03.280
Alles cobra ich weiß es nicht mehr genau

01:13:04.040 --> 01:13:13.610
Wie macht man den command line parsing mit der schmitter mit der mit der standard library

01:13:14.250 --> 01:13:22.120
Kong ist sehr nun ja

01:13:23.040 --> 01:13:37.970
dass da da fehlt noch der restliche satz ist

01:13:39.050 --> 01:13:45.510
Ist ist was es ist existiert oder was

01:13:48.450 --> 01:13:54.450
Aber rapid mq bringt mir nix das ist nämlich nur am qp 0.9.1

01:13:55.850 --> 01:13:59.250
Okay, wie von uns das mit der standard library im port flag

01:13:59.770 --> 01:14:06.720
Flag in held message for flag okay das sieht tatsächlich relativ

01:14:07.640 --> 01:14:11.470
simpel aus

01:14:11.510 --> 01:14:16.530
Also würden wir jetzt sagen hier flag war

01:14:18.210 --> 01:14:21.490
Nee war also mama server

01:14:22.490 --> 01:14:24.490
Gleich flag string

01:14:25.570 --> 01:14:28.890
Was ist der unterschied zwischen string string war

01:14:29.610 --> 01:14:48.280
Wenn wir wollen er immer ist das check jetzt den unterschied nicht

01:14:48.680 --> 01:14:57.460
Ach so hier ist es der return werden hier schreibt das in der variable rein das reicht schon okay name server

01:14:58.820 --> 01:15:05.580
Value das ist die fault value wahrscheinlich wir wollen keinen default value haben er soll er soll abkacken wenn es nicht funktioniert

01:15:06.220 --> 01:15:10.360
Ist nicht erlaubt okay

01:15:11.280 --> 01:15:22.240
Okay für mir unschlüssig

01:15:27.220 --> 01:15:34.310
What

01:15:35.590 --> 01:16:05.730
Okay kacke schon mal so ist das schon mal falsch

01:16:18.160 --> 01:16:20.160
Ach man muss noch sagen

01:16:20.440 --> 01:16:23.840
Ach so für hier dann brauchen wir hier oben wahrscheinlich args

01:16:24.560 --> 01:16:27.560
Wie geht das sternchen args args?

01:16:29.840 --> 01:16:37.000
Main go

01:16:37.040 --> 01:16:44.840
Was ist das us args ach nee einfach nur us args

01:16:51.670 --> 01:17:00.160
Einfach nur pass okay geht trotzdem nicht okay dann bin ich da bin ich zu pp dafür wie das funktioniert

01:17:00.880 --> 01:17:07.720
flex go lang der zeichen ist ja aber

01:17:10.280 --> 01:17:12.280
Irgendwas anzeigen

01:17:12.560 --> 01:17:15.040
How to is flex flex package genau

01:17:15.920 --> 01:17:17.320
Weird flex

01:17:17.320 --> 01:17:41.370
Okay, wir können es auf jeden fall schon mal so machen okay wir gehen man default value an 1 2 3 das funst

01:17:41.890 --> 01:17:46.030
Es ist minus server und dann einfach so

01:17:46.950 --> 01:17:58.320
nee

01:18:06.600 --> 01:18:16.320
Das ist mit dem zweiten minus was gibt doch gar keinen sinn

01:18:17.000 --> 01:18:20.920
Ich will jetzt auch keine parametern go run übergeben sondern an mein programm

01:18:21.520 --> 01:18:22.560
Hey

01:18:22.560 --> 01:18:34.970
Okay, go wir hinterfragen das einfach mal nicht das ist so und gut ist ja so und jetzt und jetzt können wir checken

01:18:36.610 --> 01:18:38.610
Okay ist okay da brauchen wir noch mehrfach jetzt

01:18:39.010 --> 01:18:46.370
Wollen jetzt auch für message ihr moment momente mal wo wir gerade dabei sind ja wo wir gerade dabei sind geht auch so was

01:18:47.370 --> 01:18:48.930
Geht auch

01:18:48.930 --> 01:18:52.130
Und das geht auch okay es geht jegliche schreibweise

01:18:54.330 --> 01:18:56.330
Alles gut dann kann man es auch so machen

01:18:57.410 --> 01:19:01.360
message

01:19:05.090 --> 01:19:07.970
M p server

01:19:13.190 --> 01:19:15.190
Message to send

01:19:15.590 --> 01:19:23.700
Super high iq hilfe message hilfe messages user password user

01:19:25.900 --> 01:19:27.900
Passwort zack

01:19:28.900 --> 01:19:30.900
Okay nice likes pass

01:19:31.900 --> 01:19:33.900
Da war gut so

01:19:34.380 --> 01:19:40.700
Heißt im endeffekt auch das schmeißen wir raus jetzt müssen wir noch checken gibt es gibt es in go irgendwas schönes

01:19:42.500 --> 01:19:47.300
Ah ja die target queue fehlt mir noch stimmt du hast recht ja ja ja ja hast recht

01:19:49.860 --> 01:19:57.200
Das ist halt schön an go dass man es nicht mal kompilieren kann wenn das hier nicht benutzt wird

01:20:12.930 --> 01:20:14.490
gibt es in go

01:20:14.490 --> 01:20:20.810
Eine schöne möglichkeit jetzt zu checken ob eines hier von null ist wahrscheinlich muss man das ganz

01:20:21.970 --> 01:20:24.210
explizit mit einem if machen also if

01:20:25.850 --> 01:20:27.410
If

01:20:27.410 --> 01:20:30.660
user

01:20:30.660 --> 01:20:33.650
ist

01:20:33.650 --> 01:20:41.730
so

01:20:41.730 --> 01:20:48.040
keck weh

01:20:48.040 --> 01:20:50.720
Das ist das finde ich halt mega nervig an go

01:20:51.080 --> 01:20:54.640
Jetzt muss ich das hier löschen dass ich das überhaupt kompilieren kann zum ausprobieren

01:21:00.560 --> 01:21:02.560
Moment es kann ja nicht null sein

01:21:02.600 --> 01:21:09.120
Warum ist das überhaupt ein pointer?

01:21:11.000 --> 01:21:16.360
Das kann doch niemals null sein oder ach doch na klar kann das null sein wenn es nicht nee

01:21:16.880 --> 01:21:24.590
Hä warum warum ist das ein pointer das macht doch an der stelle keinen sinn oder

01:21:25.110 --> 01:21:31.180
Ach das ist nur wenn ich es nicht passe

01:21:41.060 --> 01:21:43.420
Okay, ja macht sinn macht sinn

01:21:44.020 --> 01:21:49.660
Ja, okay, ja macht sinn aber jetzt muss ich auch sternchen user machen weil es ansonsten geht

01:21:56.990 --> 01:22:04.070
Go go warum ist das jetzt?

01:22:04.070 --> 01:22:07.110
Achso, weil ich es nie ausgetauscht hab hier hinten

01:22:08.390 --> 01:22:21.710
Flagg provided but not defined. Okay, das hat zumindest schon mal gescheide

01:22:23.150 --> 01:22:25.150
Okay, jetzt funzt das

01:22:25.350 --> 01:22:37.630
Okay, flagg provided, das ist das ist okay. Das ist okay. So, wenn ich jetzt nach user

01:22:38.350 --> 01:22:40.350
Okay, und dann dann dann geht es nicht

01:22:45.910 --> 01:22:59.550
Leuchtet leuchtet leuchtet ein okay. So jetzt haben wir den ganzen krempel übrigens soll ich das vielleicht mal ordentlich

01:22:59.550 --> 01:23:11.880
So if user leer empty gibt es da irgendwas schöneres außer

01:23:12.760 --> 01:23:14.160
so

01:23:14.160 --> 01:23:21.090
Wenn das ist doch das doch highly highly pepega, oder?

01:23:22.530 --> 01:23:37.200
All options must be set

01:23:38.640 --> 01:23:42.640
Heck wait all options must be said kegway und

01:23:47.480 --> 01:23:50.120
Generiert das jetzt eigentlich auch ein minus help. Oh

01:23:50.240 --> 01:23:55.640
Kann man das minus help vielleicht auch so aufrufen help print print print

01:23:56.640 --> 01:23:58.640
Hey nice

01:23:59.120 --> 01:24:13.800
Moment das hat es vorher auch schon vorher auch schon funktioniert. Achso kann man das

01:24:14.680 --> 01:24:17.600
programmatisch irgendwie ausgeben dass man

01:24:32.560 --> 01:24:34.960
So all flags must be said und dann

01:24:35.760 --> 01:24:37.760
Usage ah usage

01:24:38.640 --> 01:24:41.240
So all flags must be said und dann

01:24:43.690 --> 01:24:45.690
Usage ah usage

01:24:45.890 --> 01:24:58.600
Usage vielleicht was ist jetzt verschmerzen ist not

01:25:06.680 --> 01:25:14.540
Okay, gut gut gut gut gut und und und jetzt return ich gehe mal davon aus dass es nicht abbrecht

01:25:17.140 --> 01:25:24.600
Nice, okay, funktioniert all options all options must be set. Heck wait haben wir nun ein new line hinten dran

01:25:24.600 --> 01:25:27.600
All options must be set, calculate.

01:25:27.600 --> 01:25:30.600
Here. Usage of bla bla bla. Message. Stimmt.

01:25:30.600 --> 01:25:32.600
Okay. Damit bin ich fine.

01:25:32.600 --> 01:25:34.600
Da brauche ich keine Zusatzlibrary.

01:25:34.600 --> 01:25:36.600
Was hat der hier für Schmerzen?

01:25:36.600 --> 01:25:39.600
Last argument of println ends with a redundant newline.

01:25:39.600 --> 01:25:42.600
Ne. Stimmt doch überhaupt nicht.

01:25:42.600 --> 01:25:44.600
Ich will noch einen extra newline.

01:25:44.600 --> 01:25:45.600
Machen wir nochmal.

01:25:45.600 --> 01:25:47.600
Noch einen zweiten newline.

01:25:47.600 --> 01:25:52.000
Ppga. Message.

01:25:52.000 --> 01:25:54.000
Output.

01:25:54.000 --> 01:26:06.870
Erwie.

01:26:06.870 --> 01:26:10.870
Würde ich anstatt backslash n jetzt einfach nochmal

01:26:10.870 --> 01:26:13.870
ein leeres println dahinter machen oder wie?

01:26:13.870 --> 01:26:21.770
Okay, das ist also die coolere Variante in Go.

01:26:21.770 --> 01:26:32.820
Stimmt, man könnte auch einen print machen.

01:26:32.820 --> 01:26:34.820
Ja, stimmt eigentlich.

01:26:34.820 --> 01:26:36.820
Dann sagt man zweimal backslash.

01:26:36.820 --> 01:26:38.820
Ja, das ist auch eine Möglichkeit.

01:26:38.820 --> 01:26:40.820
Ja. Okay, gut.

01:26:40.820 --> 01:26:42.820
Nice.

01:26:42.820 --> 01:26:44.820
Was war das hier nochmal, was da zurückkommt?

01:26:44.820 --> 01:26:46.820
Cancel function. Braucht man nicht.

01:26:46.820 --> 01:26:50.260
Da wird nichts gecancelt hier.

01:26:50.260 --> 01:26:59.290
Heißt im Endeffekt, wir können das hier jetzt verwenden.

01:26:59.290 --> 01:27:01.290
Server usage.

01:27:01.290 --> 01:27:04.290
Wir können uns sicher sein, an der Stelle ist es alles gesetzt.

01:27:04.290 --> 01:27:08.980
Minus minus Server kommt hier hin.

01:27:08.980 --> 01:27:13.510
Sternchen. Server.

01:27:13.510 --> 01:27:18.510
Dann als Sternchen user.

01:27:18.510 --> 01:27:22.020
Sternchen password.

01:27:22.020 --> 01:27:27.610
Session und so. Lass mal weg.

01:27:27.610 --> 01:27:33.820
Target name ist Sternchen queue.

01:27:34.820 --> 01:27:41.050
Was kann man hier eigentlich für Options setzen?

01:27:41.050 --> 01:27:46.190
Oh, ganz viel abgedrehtes Zeug, was wir weglassen.

01:27:46.190 --> 01:27:48.190
Könntest du es nicht so anhaben?

01:27:48.190 --> 01:27:51.190
Traue ich mich das anzuklicken?

01:27:51.190 --> 01:27:57.380
Ja, sieht nicht schlimm aus.

01:27:57.380 --> 01:28:04.150
Wie? Ach so.

01:28:04.150 --> 01:28:08.460
Ja, das ist auch keine schlechte Idee.

01:28:08.460 --> 01:28:10.460
Was aber?

01:28:10.460 --> 01:28:12.460
Has empty field config.

01:28:12.460 --> 01:28:15.460
Das finde ich gut.

01:28:15.460 --> 01:28:19.800
Ah, Moment.

01:28:19.800 --> 01:28:21.800
Das ist irgendwas Selbstgebautes.

01:28:21.800 --> 01:28:23.800
Ich dachte, so was wäre in der Standard Library dabei.

01:28:23.800 --> 01:28:25.800
Das wäre sehr praktisch.

01:28:25.800 --> 01:28:36.000
Das ist Overkill hierfür jetzt.

01:28:36.000 --> 01:28:38.000
Wo sind wir stehen geblieben?

01:28:38.000 --> 01:28:40.000
Queue message.

01:28:40.000 --> 01:28:42.000
Ah ja, hier kommt die Message.

01:28:42.000 --> 01:28:44.000
Okay, byte message.

01:28:44.000 --> 01:28:51.180
Okay.

01:28:51.180 --> 01:28:53.180
Ähm.

01:28:53.180 --> 01:28:55.180
Oh.

01:28:55.180 --> 01:28:57.180
Was jetzt?

01:28:57.180 --> 01:29:00.180
Y löscht die Zeile und macht nicht redo.

01:29:00.180 --> 01:29:03.690
Was ist das?

01:29:03.690 --> 01:29:07.320
Podcasts.

01:29:07.320 --> 01:29:09.320
Wie heißt das?

01:29:09.320 --> 01:29:11.320
Podkeys.

01:29:11.320 --> 01:29:13.320
Ach, wie heißt der Keyboard?

01:29:13.320 --> 01:29:26.620
Keymap.

01:29:26.620 --> 01:29:29.930
Androids control redo.

01:29:29.930 --> 01:29:31.930
Ach so.

01:29:31.930 --> 01:29:33.930
Ja, nee, nee, nee, nee.

01:29:33.930 --> 01:29:35.930
Redo ist Y.

01:29:35.930 --> 01:29:42.390
Mir egal, ob das irgendwas anderes war.

01:29:42.390 --> 01:29:46.390
So, und dann will ich move line noch haben.

01:29:46.390 --> 01:29:50.390
Oder weiß jetzt gar nicht, wie der Crample heißt.

01:29:50.390 --> 01:29:54.340
Move line.

01:29:54.340 --> 01:29:56.340
Start line.

01:29:56.340 --> 01:30:00.340
Das ist bestimmt nicht richtig drin.

01:30:00.340 --> 01:30:02.340
Ach doch, ist. Okay.

01:30:02.340 --> 01:30:04.340
Dann habe ich nichts gesagt.

01:30:04.340 --> 01:30:06.340
So, warum funsten das hier jetzt nicht?

01:30:06.340 --> 01:30:08.340
Hello.

01:30:08.340 --> 01:30:10.340
Sternchen. Message.

01:30:10.340 --> 01:30:12.340
Ach, geht doch. Ich habe nur zu viel gelöscht.

01:30:12.340 --> 01:30:14.340
Okay, heißt im Endeffekt.

01:30:14.340 --> 01:30:16.340
Probieren wir doch mal aus, ob es funktioniert.

01:30:16.340 --> 01:30:18.340
Minus, minus User. Okay, machen wir mal anders.

01:30:18.340 --> 01:30:22.340
Minus, minus Server. Gleich.

01:30:22.340 --> 01:30:24.340
AMQP, Doppel Punkt, Doppel Slash.

01:30:24.340 --> 01:30:28.340
Localhost, Doppel Punkt, 61616.

01:30:28.340 --> 01:30:30.340
Ich glaube, das war so.

01:30:30.340 --> 01:30:32.340
Minus, minus User. Artemis.

01:30:32.340 --> 01:30:34.340
Minus, minus Passwort. Gleich.

01:30:34.340 --> 01:30:36.340
Artemis.

01:30:36.340 --> 01:30:40.340
Minus, minus Message. Gleich.

01:30:40.340 --> 01:30:42.340
Packweight.

01:30:42.340 --> 01:30:44.340
Und was brauchen wir jetzt noch?

01:30:44.340 --> 01:30:46.340
Minus, minus Queue.

01:30:46.340 --> 01:30:48.340
Minus, minus Queue. Gleich.

01:30:48.340 --> 01:30:52.550
Ähm.

01:30:52.550 --> 01:30:54.550
Hat funktioniert.

01:30:54.550 --> 01:30:56.550
Würde ich mal behaupten.

01:30:56.550 --> 01:30:58.550
Ne, wir senden das an

01:30:58.550 --> 01:31:00.550
DLQ. Ups.

01:31:00.550 --> 01:31:02.550
Wir senden das an DLQ, weil da kommt es auch auf jeden Fall an.

01:31:04.550 --> 01:31:06.550
DLQ, Message Count 9.

01:31:06.550 --> 01:31:08.550
Und jetzt, bam.

01:31:08.550 --> 01:31:10.550
Message Count

01:31:10.550 --> 01:31:16.100
10.

01:31:16.100 --> 01:31:18.100
Dieses Webinterface ist extrem pp-iger.

01:31:18.100 --> 01:31:20.100
Hallo.

01:31:20.100 --> 01:31:22.100
Ne, das ist nicht das Richtige.

01:31:22.100 --> 01:31:25.990
Kann man das Netz sortieren?

01:31:25.990 --> 01:31:27.990
Message ID. Ach, unten. Unten ist die Neueste.

01:31:27.990 --> 01:31:29.990
Okay. Packweight. Ja, hat funktioniert.

01:31:29.990 --> 01:31:35.030
Ja.

01:31:35.030 --> 01:31:37.030
Chat, jetzt brauche ich eure 5Head-Ideen.

01:31:37.030 --> 01:31:39.030
Was kann man da noch Sinnvolles einbauen?

01:31:39.030 --> 01:31:41.030
Ich meine, für meine Funktionalität

01:31:41.030 --> 01:31:43.030
reicht das eigentlich.

01:31:43.030 --> 01:31:45.030
Ja.

01:31:45.030 --> 01:31:47.030
Wir könnten auch, wir können auch schreiben.

01:31:47.030 --> 01:31:49.030
Print.

01:31:49.030 --> 01:31:51.030
Ähm.

01:31:51.030 --> 01:32:01.830
Message Send.

01:32:01.830 --> 01:32:03.830
Wir könnten auch ein bisschen Debug.

01:32:03.830 --> 01:32:05.830
Ausgabe. Komm, wir machen noch eine Debug-Ausgabe.

01:32:05.830 --> 01:32:07.830
Ich schreibe noch rein.

01:32:07.830 --> 01:32:11.660
FMT.

01:32:11.660 --> 01:32:13.660
Print.

01:32:13.660 --> 01:32:15.660
Wie ging das jetzt nochmal hier?

01:32:15.660 --> 01:32:17.660
Server.

01:32:17.660 --> 01:32:19.660
Server. Doppelpunkt.

01:32:19.660 --> 01:32:21.660
Und jetzt?

01:32:21.660 --> 01:32:29.100
So?

01:32:29.100 --> 01:32:36.660
Ne.

01:32:36.660 --> 01:32:43.690
Ah, Print F.

01:32:43.690 --> 01:32:49.500
Fast.

01:32:49.500 --> 01:32:55.750
Weglassen? Ne.

01:32:55.750 --> 01:32:59.640
Was? Prozent V?

01:32:59.640 --> 01:33:05.130
Ach, ohne die.

01:33:05.130 --> 01:33:14.260
Okay, nice. Das will ich haben.

01:33:14.260 --> 01:33:18.150
Kann ich mal schreiben.

01:33:18.150 --> 01:33:22.170
User-Name und Passwort.

01:33:22.170 --> 01:33:24.170
Das faken wir jetzt.

01:33:24.170 --> 01:33:28.120
Pass mal auf.

01:33:28.120 --> 01:33:30.120
Debated.

01:33:30.120 --> 01:33:32.120
Debated.

01:33:32.120 --> 01:33:34.120
Das ist Hardcoded-Sternchen einfach immer.

01:33:34.120 --> 01:33:36.120
So.

01:33:36.120 --> 01:33:38.120
Passwort und Message.

01:33:38.120 --> 01:33:44.180
Message sollten wir noch ausgeben.

01:33:44.180 --> 01:33:46.180
Etwas.

01:33:46.180 --> 01:33:48.180
User. User. User vielleicht noch.

01:33:48.180 --> 01:33:57.000
Okay.

01:33:57.000 --> 01:34:06.460
Das sieht doch schon mal ganz brauchbar aus jetzt.

01:34:06.460 --> 01:34:08.460
So. FMT.

01:34:08.460 --> 01:34:10.460
Print. Neue Zeile.

01:34:10.460 --> 01:34:12.460
Dann schreiben wir jetzt hier noch rein.

01:34:12.460 --> 01:34:20.060
Wollen wir noch eine Debug-Ausgabe machen?

01:34:20.060 --> 01:34:22.060
Wir könnten noch

01:34:22.060 --> 01:34:24.060
Minus Minus Verbose oder Verbis

01:34:24.060 --> 01:34:26.060
einfügen und dann

01:34:26.060 --> 01:34:28.060
noch ein bisschen sinnloses Zeug ausgeben.

01:34:28.060 --> 01:34:30.060
So.

01:34:30.060 --> 01:34:32.060
Aber wenn es nicht geht, dann kackt es eh ab

01:34:32.060 --> 01:34:34.060
und gibt eine Fehlermeldung aus.

01:34:34.060 --> 01:34:38.390
Schleife für eine Message.

01:34:38.390 --> 01:34:40.390
Das ist tatsächlich eine ganz gute Idee.

01:34:40.390 --> 01:34:42.390
Repeat. Könnten wir

01:34:42.390 --> 01:34:45.770
machen. Passwort aus

01:34:45.770 --> 01:34:47.770
Env war einlesen.

01:34:47.770 --> 01:34:49.770
Ja, Moment, Moment.

01:34:49.770 --> 01:34:51.770
Das muss ich noch mal kurz aufschreiben.

01:34:51.770 --> 01:34:53.770
Repeat. Repeat finde ich tatsächlich

01:34:53.770 --> 01:34:58.100
ganz sinnig.

01:34:58.100 --> 01:35:00.100
Wir brauchen Env

01:35:00.100 --> 01:35:02.100
und wahrscheinlich auch File.

01:35:02.100 --> 01:35:04.100
Weil ehrlich gesagt, also

01:35:04.100 --> 01:35:06.100
ganz ehrlich, wir müssen es nicht übertreiben.

01:35:06.100 --> 01:35:08.100
Eine Sache reicht.

01:35:08.100 --> 01:35:13.340
Also entweder.

01:35:13.340 --> 01:35:15.340
Also wenn File supported ist, dann kann man das als

01:35:15.340 --> 01:35:22.170
Config-Map reinmachen.

01:35:22.170 --> 01:35:24.170
Sag mal, kann ich nicht den Default-Value

01:35:24.170 --> 01:35:26.170
so setzen?

01:35:26.170 --> 01:35:28.170
Genau. Kann ich nicht sowas wie

01:35:28.170 --> 01:35:32.570
get Env und dann sagen

01:35:32.570 --> 01:35:37.800
ja, ähm

01:35:37.800 --> 01:35:39.800
Kackle

01:35:39.800 --> 01:35:41.800
Server oder sowas?

01:35:41.800 --> 01:35:48.180
Was macht der jetzt?

01:35:48.180 --> 01:35:50.180
Was macht der denn jetzt, wenn jetzt

01:35:50.180 --> 01:35:52.180
Kackle Server gesetzt ist?

01:35:52.180 --> 01:35:54.180
Er nimmt das nur als Default, oder?

01:35:54.180 --> 01:36:04.410
Die Frage ist

01:36:04.410 --> 01:36:06.410
Okay, dann nimmt er es da.

01:36:06.410 --> 01:36:11.320
Und wenn ich jetzt Server weglasse,

01:36:11.320 --> 01:36:16.170
dann nimmt er Plop.

01:36:16.170 --> 01:36:18.170
Okay, so und wenn jetzt

01:36:18.170 --> 01:36:20.170
das hier nicht gesetzt ist,

01:36:20.170 --> 01:36:22.170
dann sagt er

01:36:22.170 --> 01:36:24.170
All must be set.

01:36:24.170 --> 01:36:26.170
Ja, klingt

01:36:26.170 --> 01:36:30.820
doch eigentlich ganz

01:36:30.820 --> 01:36:35.740
sinnvoll, oder?

01:36:35.740 --> 01:36:37.740
Muss die Server-Flag löschen.

01:36:37.740 --> 01:36:41.240
Warum?

01:36:41.240 --> 01:36:43.240
Das scheint doch so zu funktionieren, oder?

01:36:43.240 --> 01:36:45.240
Bin ich ja jetzt...

01:36:45.240 --> 01:36:49.320
Scheint doch zu gehen.

01:36:49.320 --> 01:36:51.320
Message, Champ, Server.

01:36:51.320 --> 01:37:04.810
Ja, und wenn

01:37:04.810 --> 01:37:06.810
das nicht gefunden wird, dann Empty String.

01:37:06.810 --> 01:37:08.810
Und dann catcht es das hier.

01:37:08.810 --> 01:37:10.810
Das ist doch eigentlich ganz gut.

01:37:10.810 --> 01:37:12.810
Da machen wir jetzt User

01:37:12.810 --> 01:37:16.760
noch rein.

01:37:16.760 --> 01:37:18.760
User

01:37:18.760 --> 01:37:22.390
Ah, haben wir hier noch

01:37:22.390 --> 01:37:26.600
das Passwort.

01:37:26.600 --> 01:37:28.600
Nein, die Message per Env

01:37:28.600 --> 01:37:32.550
Das war bestimmt nicht.

01:37:32.550 --> 01:37:34.550
Das ist unsinnig.

01:37:34.550 --> 01:37:36.550
Die...

01:37:36.550 --> 01:37:38.550
Ja, wie übergibt man das jetzt überhaupt?

01:37:38.550 --> 01:37:40.550
Na gut, man müsste das

01:37:40.550 --> 01:37:43.860
ins Container-Image einbauen.

01:37:43.860 --> 01:37:45.860
Aber wenn man das doch eh ins Container...

01:37:45.860 --> 01:37:47.860
Aber das Passwort bauen wir nicht ins Container-Image.

01:37:47.860 --> 01:37:54.060
Also die Message ist okay.

01:37:54.060 --> 01:37:57.560
Müssen wir mal gucken.

01:37:57.560 --> 01:38:13.990
Also ich glaube, so ist das okay.

01:38:13.990 --> 01:38:20.570
Ja, ja.

01:38:20.570 --> 01:38:34.950
Q kann auch über Env...

01:38:34.950 --> 01:38:40.500
Ja, ist der Funs noch.

01:38:40.500 --> 01:38:42.500
Ja, okay.

01:38:42.500 --> 01:38:44.500
So, jetzt könnte man

01:38:44.500 --> 01:38:46.500
mal noch ein bisschen hier

01:38:46.500 --> 01:38:48.500
Zeug reinschreiben.

01:38:48.500 --> 01:38:54.380
Vielleicht sollten wir noch

01:38:54.380 --> 01:38:56.380
ein Minusminus-Timeout

01:38:56.380 --> 01:39:11.590
noch dabei hinzufügen.

01:39:11.590 --> 01:39:13.590
Ich glaube ein Timeout-Flag

01:39:13.590 --> 01:39:15.590
wäre vielleicht gar nicht schlecht.

01:39:15.590 --> 01:39:17.590
Falls das zu lahm ist.

01:39:17.590 --> 01:39:21.220
Timeout...

01:39:21.220 --> 01:39:23.220
Moment, get Int

01:39:23.220 --> 01:39:25.220
jetzt.

01:39:25.220 --> 01:39:28.860
Get Env

01:39:28.860 --> 01:39:30.860
Timeout

01:39:30.860 --> 01:39:32.860
Ah, das geht nicht, weil es ein String ist.

01:39:34.860 --> 01:39:41.240
Timeout in

01:39:41.240 --> 01:39:52.300
Seconds

01:39:52.300 --> 01:39:54.300
Wie bekomme ich den...

01:39:54.300 --> 01:39:56.300
Oh, das...

01:39:56.300 --> 01:39:58.300
Jetzt wird's goldchampig.

01:39:58.300 --> 01:40:00.300
Wie bekomme ich denn das jetzt zu einem Int?

01:40:00.300 --> 01:40:02.300
Was?

01:40:02.300 --> 01:40:04.300
Strl, Conf, Ar...

01:40:04.300 --> 01:40:06.300
Nee.

01:40:06.300 --> 01:40:12.040
Artoy

01:40:12.040 --> 01:40:15.540
Aber das funktioniert so nicht.

01:40:15.540 --> 01:40:17.540
Das Error-Handling

01:40:17.540 --> 01:40:19.540
in Go, man. Das mach ich mal fertig.

01:40:19.540 --> 01:40:22.980
Wir ignorieren das einfach

01:40:22.980 --> 01:40:32.120
jetzt. Easy.

01:40:32.120 --> 01:40:35.560
Moment, wenn das...

01:40:35.560 --> 01:40:37.560
Wir brauchen das doch.

01:40:37.560 --> 01:40:42.790
Weil dann ist Num

01:40:42.790 --> 01:40:44.790
doch nicht gesetzt, oder? Wenn Error.

01:40:44.790 --> 01:40:46.790
Also müssen wir jetzt gucken.

01:40:46.790 --> 01:40:52.090
If Error

01:40:52.090 --> 01:40:54.090
dann ist Num

01:40:54.090 --> 01:40:56.090
gleich 5.

01:40:56.090 --> 01:40:58.090
Ja?

01:40:58.090 --> 01:41:00.090
Okay, Num.

01:41:00.090 --> 01:41:02.090
Ja, sowas.

01:41:02.090 --> 01:41:04.090
Sowas brauchen wir da.

01:41:04.090 --> 01:41:06.090
Und Timeout

01:41:06.090 --> 01:41:08.090
wird verwendet an der Stelle

01:41:08.090 --> 01:41:11.850
hier.

01:41:11.850 --> 01:41:27.580
Wäre es jetzt nicht sinnvoller,

01:41:27.580 --> 01:41:29.580
wenn ich sag Int war

01:41:29.580 --> 01:41:36.860
und dann

01:41:36.860 --> 01:41:38.860
hier und Num oder so

01:41:38.860 --> 01:41:40.860
mache?

01:41:40.860 --> 01:41:47.820
Wie funzt das jetzt?

01:41:47.820 --> 01:41:49.820
Ah, hier als erstes.

01:41:49.820 --> 01:42:00.070
Und

01:42:00.070 --> 01:42:02.070
so? Nee.

01:42:02.070 --> 01:42:07.370
Einfach nur Num?

01:42:07.370 --> 01:42:09.370
Ach nee, das ist ja kein Pointer. Deswegen funzt das nicht.

01:42:09.370 --> 01:42:17.800
Ich bin... Jetzt hat mich

01:42:17.800 --> 01:42:19.800
Go komplett verwirrt.

01:42:19.800 --> 01:42:35.050
Was ist das Problem?

01:42:35.050 --> 01:42:37.050
Und wie kann ich mir jetzt die Optionen

01:42:37.050 --> 01:42:44.780
anzeigen lassen da vorne?

01:42:44.780 --> 01:42:48.150
Name, String, Value. Ist doch richtig.

01:42:48.150 --> 01:42:50.150
Ah, da fehlt ein Komma.

01:42:50.150 --> 01:42:52.150
Okay, aber

01:42:52.150 --> 01:42:55.780
jetzt ist falsch.

01:42:55.780 --> 01:42:57.780
But it returns nothing. Achso, ja.

01:42:57.780 --> 01:42:59.780
Okay.

01:42:59.780 --> 01:43:01.780
Okay, okay, gut.

01:43:01.780 --> 01:43:03.780
Nehmen wir das

01:43:03.780 --> 01:43:10.810
Timeout. Moment, da kann ich

01:43:10.810 --> 01:43:12.810
mir das doch mit dem

01:43:12.810 --> 01:43:14.810
Error komplett sparen an der Stelle.

01:43:14.810 --> 01:43:16.810
Oder?

01:43:16.810 --> 01:43:23.640
Nee.

01:43:23.640 --> 01:43:25.640
Wenn das hier ein Error ist,

01:43:25.640 --> 01:43:27.640
dann ist das Timeout...

01:43:27.640 --> 01:43:29.640
Da muss ich überhaupt kein Default

01:43:29.640 --> 01:43:34.620
jemals setzen, oder?

01:43:34.620 --> 01:43:38.380
So. Das funktioniert jetzt?

01:43:38.380 --> 01:43:42.390
Nee. Warum?

01:43:42.390 --> 01:43:44.390
Weil?

01:43:44.390 --> 01:43:46.390
Ah, weil es ein Pointer

01:43:46.390 --> 01:43:52.330
ste... Nee.

01:43:52.330 --> 01:43:59.800
Was will er denn von mir?

01:43:59.800 --> 01:44:04.390
Ist doch ein Int. Warum geht das nicht?

01:44:04.390 --> 01:44:12.310
Und das geht?

01:44:12.310 --> 01:44:16.970
Äh. Was hat er denn jetzt

01:44:16.970 --> 01:44:20.790
für Schmerzen?

01:44:20.790 --> 01:44:22.790
Cannot use Timeout?

01:44:22.790 --> 01:44:24.790
Mal TimeSeconds type int?

01:44:24.790 --> 01:44:36.170
Was will er denn von mir?

01:44:36.170 --> 01:44:38.170
Ich kann an der Stelle eine 5 schreiben. Warum kann ich

01:44:38.170 --> 01:44:43.140
da keine Int hinschreiben?

01:44:43.140 --> 01:44:51.380
Und jetzt? Was machen wir jetzt?

01:44:51.380 --> 01:44:53.380
String, Conf, Pass, Int.

01:44:53.380 --> 01:44:55.380
Infer, Base,

01:44:55.380 --> 01:44:57.380
From, Size, Fits.

01:44:57.380 --> 01:45:02.870
Verstehe ich nicht, was mir das sagen soll.

01:45:02.870 --> 01:45:04.870
Muss man sagen TimeDuration oder

01:45:04.870 --> 01:45:11.580
sowas hier? Und jetzt?

01:45:11.580 --> 01:45:15.140
Timeout? Nee.

01:45:15.140 --> 01:45:28.790
Ach, das... Hä?

01:45:28.790 --> 01:45:30.790
Natürlich macht das... Natürlich macht

01:45:30.790 --> 01:45:40.760
das ein Int.

01:45:40.760 --> 01:45:42.760
PassInt? Das ist doch eindeutig

01:45:42.760 --> 01:45:47.290
ein Int. Steht doch sogar dran.

01:45:47.290 --> 01:45:49.290
Was will es denn jetzt von mir, Mann?

01:45:49.290 --> 01:45:57.980
Checkt das irgendjemand?

01:45:57.980 --> 01:45:59.980
Was will das denn?

01:45:59.980 --> 01:46:01.980
Ich kann an der Stelle ein Int schreiben. Warum kann ich

01:46:01.980 --> 01:46:06.950
ein Int-Variable da hinschreiben?

01:46:06.950 --> 01:46:08.950
Moment, einfach nur TimeSecond?

01:46:08.950 --> 01:46:10.950
Geht's vielleicht umgedreht?

01:46:10.950 --> 01:46:12.950
Okay.

01:46:12.950 --> 01:46:14.950
Was soll das vielleicht?

01:46:14.950 --> 01:46:16.950
Irgendwie klammern?

01:46:16.950 --> 01:46:18.950
Dereferenzieren?

01:46:18.950 --> 01:46:20.950
Ich hab absolut

01:46:20.950 --> 01:46:22.950
keine Ahnung, warum das nicht funktioniert.

01:46:22.950 --> 01:46:24.950
Okay.

01:46:24.950 --> 01:46:26.950
Golang, Time

01:46:26.950 --> 01:46:28.950
Seconds mal

01:46:28.950 --> 01:46:30.950
Int.

01:46:30.950 --> 01:46:36.250
Ja, hier.

01:46:36.250 --> 01:46:46.090
Moment.

01:46:46.090 --> 01:46:48.090
Int31n?

01:46:48.090 --> 01:47:01.770
What?

01:47:01.770 --> 01:47:03.770
Will der mir ernsthaft erzählen, ich muss

01:47:03.770 --> 01:47:23.080
sowas machen? Alles klar,

01:47:23.080 --> 01:47:25.080
Go. Perfekt.

01:47:25.080 --> 01:47:27.080
Ey, es funzt.

01:47:27.080 --> 01:47:29.080
Okay, das ist echt...

01:47:29.080 --> 01:47:31.080
Das ist hochgradig.

01:47:31.080 --> 01:47:33.080
Das ist ja oben, finde ich,

01:47:33.080 --> 01:47:35.080
übrigens viel zu kompliziert.

01:47:35.080 --> 01:47:37.080
Für

01:47:37.080 --> 01:47:39.080
das kurze, was ich hier machen will.

01:47:39.080 --> 01:47:50.840
Das geht bestimmt noch deutlich schöner.

01:47:50.840 --> 01:47:52.840
Ergibt das überhaupt Sinn?

01:47:52.840 --> 01:47:54.840
Er benutzt das und...

01:47:54.840 --> 01:47:56.840
Ja doch, ich glaube, das passt hier.

01:47:56.840 --> 01:48:00.340
Doch, ich glaube,

01:48:00.340 --> 01:48:02.340
das ergibt Sinn.

01:48:02.340 --> 01:48:04.340
Das geht bestimmt schöner, wie ich das hier oben gebaut hab,

01:48:04.340 --> 01:48:06.340
aber es funzt.

01:48:06.340 --> 01:48:08.340
Jetzt können wir das Timeout...

01:48:08.340 --> 01:48:10.340
Wenn Timeout nicht übergeben ist,

01:48:10.340 --> 01:48:12.340
dann ist es 5.

01:48:12.340 --> 01:48:14.340
Dann lass uns das auch grad mal ausgeben hier.

01:48:14.340 --> 01:48:16.340
Timeout.

01:48:16.340 --> 01:48:20.870
Timeout.

01:48:20.870 --> 01:48:22.870
5 Seconds.

01:48:22.870 --> 01:48:27.720
Ah, das ist gut.

01:48:27.720 --> 01:48:29.720
Timeout 5 Seconds.

01:48:29.720 --> 01:48:34.890
Dann kann man

01:48:34.890 --> 01:48:36.890
ein Default Value

01:48:36.890 --> 01:48:38.890
hier in den Hilfetext

01:48:38.890 --> 01:48:40.890
irgendwie schreiben.

01:48:40.890 --> 01:48:42.890
Ich glaub nicht, da muss man wahrscheinlich sagen,

01:48:42.890 --> 01:48:44.890
Default 5 Seconds oder sowas.

01:48:44.890 --> 01:48:46.890
Minus, minus Help.

01:48:46.890 --> 01:48:50.330
Ja.

01:48:50.330 --> 01:48:52.330
Ah ne, ach guck mal.

01:48:52.330 --> 01:48:54.330
Das macht...

01:48:54.330 --> 01:49:09.540
Okay, das ist nicht schlecht.

01:49:09.540 --> 01:49:12.980
Sobald aber eine Umgebungsvariable...

01:49:12.980 --> 01:49:14.980
Egal, scheiß drauf.

01:49:14.980 --> 01:49:16.980
Wir müssen es jetzt nicht übertreiben.

01:49:16.980 --> 01:49:18.980
Also das funzt.

01:49:18.980 --> 01:49:20.980
Message. Message sent.

01:49:20.980 --> 01:49:22.980
Okay, jetzt schreiben wir hier oben noch ein bisschen

01:49:22.980 --> 01:49:24.980
hin, was passiert.

01:49:24.980 --> 01:49:26.980
Wir sind ja mal super ordentlich.

01:49:26.980 --> 01:49:33.370
Ja. Connecting.

01:49:33.370 --> 01:49:42.150
Beste.

01:49:42.150 --> 01:49:44.150
It.

01:49:44.150 --> 01:49:48.740
Session.

01:49:48.740 --> 01:49:50.740
Dass wir wissen, was er grad so treibt.

01:49:50.740 --> 01:49:52.740
Falls er abkackt.

01:49:52.740 --> 01:49:54.740
Oder hängt oder keine Ahnung.

01:49:54.740 --> 01:49:56.740
Create Session.

01:49:56.740 --> 01:49:58.740
Create Sender.

01:49:58.740 --> 01:50:00.740
Äh.

01:50:00.740 --> 01:50:04.380
Sending. Message.

01:50:04.380 --> 01:50:06.380
Die Message

01:50:06.380 --> 01:50:08.380
gebe ich ja hier oben schon Debug-mäßig aus.

01:50:08.380 --> 01:50:12.840
Okay.

01:50:12.840 --> 01:50:14.840
Gut.

01:50:14.840 --> 01:50:16.840
Jetzt wissen wir wahrscheinlich... Oh, Leute.

01:50:16.840 --> 01:50:18.840
Ich hab das Wichtigste ver... Chat.

01:50:18.840 --> 01:50:20.840
Ich hab das Wichtigste vergessen.

01:50:20.840 --> 01:50:22.840
Und ihr wisst auch insgeheim,

01:50:22.840 --> 01:50:24.840
was es ist. Wer weiß es, Chat.

01:50:24.840 --> 01:50:26.840
Was hab ich vergessen? Ganz, ganz,

01:50:26.840 --> 01:50:28.840
ganz. Also ohne ist es

01:50:28.840 --> 01:50:30.840
eigentlich gar nicht möglich.

01:50:30.840 --> 01:50:32.840
Was hab ich vergessen, Leute?

01:50:32.840 --> 01:50:34.840
Wer drauf

01:50:34.840 --> 01:50:41.990
kommt, bekommt ein Sub.

01:50:41.990 --> 01:50:43.990
Emojis. Korrekt.

01:50:43.990 --> 01:50:45.990
Du hast gewonnen.

01:50:45.990 --> 01:50:47.990
Die Rakete, ja.

01:50:47.990 --> 01:50:54.890
Agreement.

01:50:54.890 --> 01:50:59.540
Payment Processing. So.

01:50:59.540 --> 01:51:02.980
Pog.

01:51:02.980 --> 01:51:04.980
Emojis fehlen.

01:51:04.980 --> 01:51:06.980
Das ist das, also

01:51:06.980 --> 01:51:08.980
absolut essential.

01:51:08.980 --> 01:51:12.620
So.

01:51:12.620 --> 01:51:14.620
Jetzt ist es viel gleich.

01:51:14.620 --> 01:51:16.620
Einfach um Längen besser

01:51:16.620 --> 01:51:18.620
schon. Um Längen besser.

01:51:18.620 --> 01:51:23.850
Komm. Send Message

01:51:23.850 --> 01:51:28.180
können wir uns sparen.

01:51:28.180 --> 01:51:32.780
Da kommt jetzt einfach dann.

01:51:32.780 --> 01:51:36.280
Checkmark.

01:51:36.280 --> 01:51:39.910
Check. Oh, beautiful.

01:51:39.910 --> 01:51:43.800
Ähm.

01:51:43.800 --> 01:51:45.800
Create Sender.

01:51:45.800 --> 01:51:47.800
Das interessiert doch keiner. Niemand weiß,

01:51:47.800 --> 01:51:49.800
was ein Sender überhaupt ist.

01:51:49.800 --> 01:51:51.800
Das lassen wir weg.

01:51:51.800 --> 01:51:53.800
Create Session. Was gibt es denn da?

01:51:53.800 --> 01:51:58.010
Was gibt es denn da für ein

01:51:58.010 --> 01:52:00.010
Und die Ausgaben rappen. Was?

01:52:00.010 --> 01:52:08.760
Ähm. Session.

01:52:08.760 --> 01:52:10.760
Was könnte man da für ein Emoji

01:52:10.760 --> 01:52:14.260
für nehmen? Für Session.

01:52:14.260 --> 01:52:16.260
Keine Ahnung. Fällt mir jetzt echt

01:52:16.260 --> 01:52:18.260
nichts ein für

01:52:18.260 --> 01:52:22.860
äh. Kent.

01:52:22.860 --> 01:52:26.620
Warum auch immer.

01:52:26.620 --> 01:52:28.620
Ähm. Connecting.

01:52:28.620 --> 01:52:32.630
Ein Baugrad.

01:52:32.630 --> 01:52:34.630
Das ist gut.

01:52:34.630 --> 01:52:36.630
Connecting is Network.

01:52:36.630 --> 01:52:38.630
Nee. Internet.

01:52:38.630 --> 01:52:40.630
Es gibt doch Cloud.

01:52:40.630 --> 01:52:42.630
Okay. Besser.

01:52:42.630 --> 01:52:44.630
Cloud mit Sonne.

01:52:44.630 --> 01:52:48.010
Oder so ein

01:52:48.010 --> 01:52:50.010
Blitz. Oder so ein Blitz.

01:52:50.010 --> 01:52:56.230
Ähm.

01:52:56.230 --> 01:53:02.940
High Voltage.

01:53:02.940 --> 01:53:15.270
Oh. Siehe.

01:53:15.270 --> 01:53:17.270
Wollen wir kurz aufs Handy gucken.

01:53:17.270 --> 01:53:27.110
Nee. Nix für mich.

01:53:27.110 --> 01:53:38.100
Der Baugrad.

01:53:38.100 --> 01:53:51.400
Wie heißt denn das auf.

01:53:51.400 --> 01:53:53.400
Kran kann ich nicht suchen.

01:53:53.400 --> 01:53:55.400
Da findet man die ukrainische Fahne.

01:53:55.400 --> 01:53:57.400
Ähm.

01:53:57.400 --> 01:54:01.610
Emoji Kran.

01:54:01.610 --> 01:54:03.610
Das da. Genau.

01:54:03.610 --> 01:54:10.570
Nee. Das erkennt man nicht.

01:54:10.570 --> 01:54:12.570
Das erkennt man nicht richtig.

01:54:12.570 --> 01:54:14.570
Bei Darksteam.

01:54:14.570 --> 01:54:18.970
Mehr Emoji.

01:54:18.970 --> 01:54:20.970
Mehr Emoji Gedanken als Rest.

01:54:20.970 --> 01:54:22.970
So. Perfekt. Oder?

01:54:22.970 --> 01:54:24.970
So ist top.

01:54:24.970 --> 01:54:26.970
Ey. Zarex. Das finde ich gut.

01:54:26.970 --> 01:54:28.970
Zarex. Das ist gut.

01:54:28.970 --> 01:54:30.970
Das ist mal für Connecting. Oder?

01:54:30.970 --> 01:54:32.970
Für Connecting machen wir das.

01:54:32.970 --> 01:54:34.970
Sehr schön. Sehr. Also.

01:54:34.970 --> 01:54:36.970
Also. Jetzt ist das Web

01:54:36.970 --> 01:54:38.970
5.0 ready. Würde ich sagen.

01:54:38.970 --> 01:54:40.970
Okay.

01:54:40.970 --> 01:54:42.970
Zack. Führst du aus. Bam.

01:54:42.970 --> 01:54:44.970
Na.

01:54:44.970 --> 01:54:46.970
Trify. Ja. Würde ich sofort

01:54:46.970 --> 01:54:48.970
nehmen als Emote. Wenn es funktioniert.

01:54:48.970 --> 01:54:50.970
So. Was hatten wir sonst noch gesagt?

01:54:50.970 --> 01:54:52.970
Nein. Übrigens Chat. Wir bauen kein

01:54:52.970 --> 01:54:54.970
Web Interface. Falls das jetzt irgendwie kommt.

01:54:54.970 --> 01:54:56.970
Ah. Repeat. Repeat ist tatsächlich

01:54:56.970 --> 01:54:58.970
eine ganz gute Idee.

01:54:58.970 --> 01:55:00.970
Das ist tatsächlich gar keine schlechte Idee.

01:55:00.970 --> 01:55:04.600
Dann Repeat einzubauen.

01:55:04.600 --> 01:55:06.600
Env und File

01:55:06.600 --> 01:55:08.600
ist eigentlich egal.

01:55:08.600 --> 01:55:10.600
Hauptsache steht nicht im Klartext

01:55:10.600 --> 01:55:22.100
drinne. Wofür brauche ich das?

01:55:22.100 --> 01:55:24.100
Dass wir nachts auf der Arbeit.

01:55:24.100 --> 01:55:26.100
Nächtlich.

01:55:26.100 --> 01:55:28.100
Messages schicken können.

01:55:28.100 --> 01:55:30.100
An ein armen Coupé Server.

01:55:30.100 --> 01:55:32.100
Das läuft in einem Kubanetes.

01:55:32.100 --> 01:55:34.100
Wird per

01:55:34.100 --> 01:55:36.100
Kubanetes Cronjob gestartet. Einmal nachts.

01:55:36.100 --> 01:55:38.100
Und dann macht es halt einfach nur das.

01:55:38.100 --> 01:55:41.480
Und dann fliegt es wieder weg.

01:55:41.480 --> 01:55:43.480
So. Ähm. Repeat.

01:55:43.480 --> 01:55:45.480
Repeat finde ich tatsächlich ganz gut.

01:55:45.480 --> 01:55:47.480
Kann man das Ding gleich 5 mal schicken.

01:55:47.480 --> 01:55:57.450
Komm wir machen den

01:55:57.450 --> 01:55:59.450
Standard Timeout mal auf 15.

01:55:59.450 --> 01:56:04.740
Wollen wir mal nicht so sein.

01:56:04.740 --> 01:56:16.570
Brauchen wir noch Repeat.

01:56:16.570 --> 01:56:18.570
Chat.

01:56:18.570 --> 01:56:20.570
Ich hab ne Idee. Können wir das nicht deutlich

01:56:20.570 --> 01:56:22.570
einfacher hier machen.

01:56:22.570 --> 01:56:24.570
Indem ich einfach sage.

01:56:24.570 --> 01:56:28.330
Hier.

01:56:28.330 --> 01:56:30.330
Lass mich mal kurz probieren.

01:56:30.330 --> 01:56:32.330
Ob das so funktioniert.

01:56:32.330 --> 01:56:34.330
Könnte ich nicht einfach sagen.

01:56:34.330 --> 01:56:36.330
Timeout. Also das hier mir einfach

01:56:36.330 --> 01:56:40.790
sparen.

01:56:40.790 --> 01:56:42.790
Timeout int.

01:56:42.790 --> 01:56:44.790
Das hier lassen

01:56:44.790 --> 01:56:46.790
wir weg.

01:56:46.790 --> 01:56:48.790
Name Timeout. Default ist

01:56:48.790 --> 01:56:50.790
15.

01:56:50.790 --> 01:56:52.790
So.

01:56:52.790 --> 01:56:54.790
Value muss ich wahrscheinlich sowas hier dann machen.

01:56:54.790 --> 01:56:56.790
Dass das funktioniert.

01:56:56.790 --> 01:56:58.790
String.

01:56:58.790 --> 01:57:00.790
15.

01:57:00.790 --> 01:57:02.790
Timeout int. 15.

01:57:02.790 --> 01:57:04.790
Und jetzt sag ich hier unten einfach.

01:57:04.790 --> 01:57:06.790
Äh Quatsch nicht 15.

01:57:06.790 --> 01:57:08.790
Ähm.

01:57:08.790 --> 01:57:13.190
Achso. Ja ne.

01:57:13.190 --> 01:57:22.070
Ich bräuchte jetzt sowas hier.

01:57:22.070 --> 01:57:24.070
Aber das gibt es ja nicht.

01:57:24.070 --> 01:57:26.070
Gibt es sowas?

01:57:26.070 --> 01:57:33.540
Sowas gibt es bestimmt nicht in Go. Oder?

01:57:35.540 --> 01:57:42.570
Ok. Dann lass ich das so wie es war.

01:57:42.570 --> 01:57:44.570
Ok. Dann bleibt das jetzt so.

01:57:44.570 --> 01:57:49.220
Aber hier können wir

01:57:49.220 --> 01:57:51.220
hier können wir noch machen.

01:57:51.220 --> 01:57:57.290
Wie wollte ich es denn? Repeat.

01:57:57.290 --> 01:57:59.290
Gibt es nicht.

01:57:59.290 --> 01:58:17.700
Repeat. Doch das müsste

01:58:17.700 --> 01:58:19.700
doch. Guck mal. Ich könnte jetzt.

01:58:19.700 --> 01:58:23.020
Ja.

01:58:23.020 --> 01:58:25.020
Ich könnte jetzt gucken.

01:58:25.020 --> 01:58:30.310
Wenn Repeat quasi

01:58:30.310 --> 01:58:32.310
0 ist.

01:58:32.310 --> 01:58:34.310
Dann.

01:58:34.310 --> 01:58:37.750
Setze ich es.

01:58:37.750 --> 01:58:39.750
Ähm. Sternchen.

01:58:39.750 --> 01:58:41.750
Dann setze ich es

01:58:41.750 --> 01:58:45.190
auf.

01:58:45.190 --> 01:58:47.190
Das ist aber auch 15.

01:58:47.190 --> 01:58:49.190
Will ich ja gar nicht.

01:58:49.190 --> 01:58:51.190
Ich will es ja eigentlich alles insetzen.

01:58:51.190 --> 01:58:53.190
Ok. Das ist dumm.

01:58:53.190 --> 01:58:55.190
Das ist richtig dumm.

01:58:55.190 --> 01:58:58.570
Da muss ich das.

01:58:58.570 --> 01:59:00.570
Das ist aber schon echt durch die Brust ins Auge.

01:59:00.570 --> 01:59:03.880
Jetzt oder?

01:59:03.880 --> 01:59:05.880
Das muss doch

01:59:05.880 --> 01:59:11.240
schöner gehen als sowas.

01:59:11.240 --> 01:59:13.240
So. Das Repeat ist.

01:59:13.240 --> 01:59:15.240
Standardmäßig ist 0.

01:59:15.240 --> 01:59:17.240
Wenn er nichts findet.

01:59:17.240 --> 01:59:22.540
0. Und das da.

01:59:22.540 --> 01:59:24.540
Das ist im Prinzip.

01:59:24.540 --> 01:59:26.540
So. Hier. Nur mit.

01:59:26.540 --> 01:59:30.360
Nur nicht mit Timeout.

01:59:30.360 --> 01:59:41.930
Sondern mit.

01:59:41.930 --> 01:59:46.140
Und jetzt. Help.

01:59:46.140 --> 01:59:51.240
Was ist jetzt drin?

01:59:51.240 --> 01:59:53.240
Ja. Default.

01:59:53.240 --> 02:00:01.740
Default ist halt 0.

02:00:01.740 --> 02:00:03.740
Ähm. Was ist das denn jetzt?

02:00:03.740 --> 02:00:19.530
Überhaupt.

02:00:19.530 --> 02:00:21.530
Nee. Repeat kannst du auch mehrfach eingeben.

02:00:21.530 --> 02:00:25.420
Was ist denn das jetzt überhaupt?

02:00:25.420 --> 02:00:27.420
Was steht denn da jetzt drin?

02:00:27.420 --> 02:00:29.420
Was ist denn das jetzt für eine Zahl?

02:00:29.420 --> 02:00:31.420
0. Das ist doch gut.

02:00:31.420 --> 02:00:35.820
Und warum weiß der da nicht, dass

02:00:35.820 --> 02:00:41.690
Default 0 ist?

02:00:41.690 --> 02:00:43.690
Warum erkennt er nicht, dass hier

02:00:43.690 --> 02:00:47.450
Default 0?

02:00:47.450 --> 02:00:49.450
Das verstehe ich jetzt nicht.

02:00:49.450 --> 02:00:51.450
Was ist, wenn ich hier 1 angebe?

02:00:51.450 --> 02:00:53.450
Hä?

02:00:53.450 --> 02:00:57.910
Wait a minute.

02:00:57.910 --> 02:00:59.910
Wenn 0 drin steht, zeigt er das

02:00:59.910 --> 02:01:01.910
nicht als Default an?

02:01:01.910 --> 02:01:03.910
Das ist ekliger, inkonsistenter

02:01:03.910 --> 02:01:05.910
Kram. Ich will ja, dass

02:01:05.910 --> 02:01:07.910
das Repeat Default 0 ist.

02:01:07.910 --> 02:01:19.480
Dann nenn ich es nicht Repeat.

02:01:19.480 --> 02:01:21.480
So. Ich nenn es nicht Repeat. Ich nenn es

02:01:21.480 --> 02:01:23.480
Count.

02:01:23.480 --> 02:01:25.480
Dann weiß man nämlich gleich, was das ist.

02:01:25.480 --> 02:01:27.480
Aber Refactor. Rename.

02:01:27.480 --> 02:01:29.480
Und.

02:01:29.480 --> 02:01:33.240
Wow. Was bin ich?

02:01:33.240 --> 02:01:36.680
Okay.

02:01:36.680 --> 02:01:44.340
Okay. So ist es in Ordnung.

02:01:44.340 --> 02:01:46.340
Alles klar. So lassen wir das.

02:01:46.340 --> 02:01:48.340
So. Wunderbar.

02:01:48.340 --> 02:01:50.340
Ähm. Default 1.

02:01:50.340 --> 02:01:52.340
Dann kann man jetzt

02:01:52.340 --> 02:01:54.340
Minus Minus Count angeben.

02:01:54.340 --> 02:01:56.340
Und gut ist.

02:01:56.340 --> 02:02:01.260
Oh. Wunderbar.

02:02:01.260 --> 02:02:03.260
Perfektes Tool. Beste.

02:02:03.260 --> 02:02:09.960
Moment.

02:02:09.960 --> 02:02:11.960
Eine Second. Nein.

02:02:11.960 --> 02:02:13.960
On.

02:02:13.960 --> 02:02:15.960
Ja. Sehr schön.

02:02:15.960 --> 02:02:17.960
Wisst ihr, was auch noch cool wäre?

02:02:17.960 --> 02:02:19.960
Wenn man die Message

02:02:19.960 --> 02:02:21.960
aus Standard inlesen könnte.

02:02:21.960 --> 02:02:23.960
Aber das wird mir jetzt langsam zu

02:02:23.960 --> 02:02:25.960
kompliziert.

02:02:25.960 --> 02:02:27.960
Ich...

02:02:27.960 --> 02:02:29.960
Das ist schon äußerst

02:02:29.960 --> 02:02:31.960
bloated eigentlich für das, was es

02:02:31.960 --> 02:02:35.590
machen soll. Aber Message

02:02:35.590 --> 02:02:37.590
aus Standard in wäre tatsächlich ganz praktisch.

02:02:37.590 --> 02:02:46.280
Oder? Ja. Wie liest

02:02:46.280 --> 02:02:48.280
man aus? Okay. Golang.

02:02:48.280 --> 02:02:50.280
Read. Standard in.

02:02:50.280 --> 02:02:53.590
How can I read from Standard

02:02:53.590 --> 02:02:55.590
in? Input. In Console.

02:02:55.590 --> 02:02:57.590
Ne. Nicht in Console. Ich will

02:02:57.590 --> 02:02:59.590
Standard in.

02:02:59.590 --> 02:03:03.220
Reading input

02:03:03.220 --> 02:03:05.220
from Standard in. Ja.

02:03:05.220 --> 02:03:07.220
New Reader.

02:03:07.220 --> 02:03:19.690
IO Reader.

02:03:19.690 --> 02:03:23.190
US. Okay.

02:03:23.190 --> 02:03:25.190
Das ist outdated Antwort.

02:03:25.190 --> 02:03:36.120
Ne. Doch nicht.

02:03:36.120 --> 02:03:38.120
Buff IO. New Scanner.

02:03:38.120 --> 02:03:40.120
Standard in.

02:03:40.120 --> 02:03:42.120
Moment. Ich will nicht scannen. Ich will

02:03:42.120 --> 02:03:44.120
einfach komplett in Standard in readen.

02:03:44.120 --> 02:03:46.120
Geht das?

02:03:46.120 --> 02:03:48.120
Geht das nicht einfach auch so?

02:03:48.120 --> 02:03:50.120
Read.

02:03:50.120 --> 02:03:53.750
So read.

02:03:53.750 --> 02:03:55.750
Read to end oder so was.

02:03:55.750 --> 02:03:57.750
Golang.

02:03:57.750 --> 02:03:59.750
Read all Standard in.

02:03:59.750 --> 02:04:03.580
Ja.

02:04:03.580 --> 02:04:05.580
Bis EOF.

02:04:05.580 --> 02:04:07.580
Korrekt.

02:04:07.580 --> 02:04:09.580
Ah hier.

02:04:09.580 --> 02:04:11.580
IO. Read all.

02:04:11.580 --> 02:04:13.580
Standard in. Perfekt.

02:04:13.580 --> 02:04:19.320
Echt?

02:04:19.320 --> 02:04:21.320
Im Digital Ocean

02:04:21.320 --> 02:04:23.320
gab es...

02:04:23.320 --> 02:04:28.170
Moment. Aber das hat doch mit

02:04:28.170 --> 02:04:30.170
den Flex gar nichts zu tun.

02:04:30.170 --> 02:04:34.760
Ach ne. Das ist woher

02:04:34.760 --> 02:04:36.760
er das lesen soll.

02:04:36.760 --> 02:04:38.760
Ich will ja gar

02:04:38.760 --> 02:04:40.760
keine... Achso Moment. Doch.

02:04:40.760 --> 02:04:42.760
Will ich. Entweder ist es ein Flag

02:04:42.760 --> 02:04:44.760
oder...

02:04:44.760 --> 02:04:46.760
Was? If filename, file

02:04:46.760 --> 02:04:48.760
args, file... Hä?

02:04:48.760 --> 02:04:52.200
Ich hätte mir das Leben jetzt

02:04:52.200 --> 02:04:54.200
eigentlich ganz einfach gemacht ehrlich gesagt.

02:04:54.200 --> 02:05:00.140
Also ich hätte

02:05:00.140 --> 02:05:02.140
mir das Leben jetzt super einfach

02:05:02.140 --> 02:05:05.450
gemacht. Wenn...

02:05:05.450 --> 02:05:09.270
Wenn Message...

02:05:09.270 --> 02:05:11.270
Wenn Message leer ist,

02:05:11.270 --> 02:05:13.270
dann reade ich das hier einfach

02:05:13.270 --> 02:05:15.270
in Message. Fertig.

02:05:15.270 --> 02:05:17.270
Oder habe ich da irgendeinen

02:05:17.270 --> 02:05:19.270
Denkfehler drin?

02:05:19.270 --> 02:05:21.270
Ähm.

02:05:21.270 --> 02:05:31.820
Im Moment wird sich das komische

02:05:31.820 --> 02:05:38.580
Errorhandling wieder machen.

02:05:38.580 --> 02:05:40.580
Error.

02:05:40.580 --> 02:05:42.580
Und jetzt sagen wir einfach Message

02:05:42.580 --> 02:05:44.580
gleich

02:05:44.580 --> 02:05:46.580
Standard in. Fertig.

02:05:46.580 --> 02:05:48.580
Ne geht nicht, weil...

02:05:48.580 --> 02:05:50.580
Ah. Type bytes.

02:05:50.580 --> 02:05:52.580
Ok. Ich muss

02:05:52.580 --> 02:05:54.580
sagen... Wie war das?

02:05:54.580 --> 02:06:06.150
String? Das ist doch eigentlich...

02:06:06.150 --> 02:06:08.150
Das ist doch eigentlich ok so, oder?

02:06:10.150 --> 02:06:12.150
Weil wenn ich jetzt die Message

02:06:12.150 --> 02:06:14.150
rausschmeiße,

02:06:14.150 --> 02:06:16.150
dann versucht der Standard

02:06:16.150 --> 02:06:18.150
ihn zu readen. Ok. Was nicht funktioniert

02:06:18.150 --> 02:06:20.150
das machen wir Echo 1, 2, 3.

02:06:20.150 --> 02:06:22.150
So. Fertig. Hat funktioniert.

02:06:22.150 --> 02:06:26.940
Also im Prinzip

02:06:26.940 --> 02:06:33.450
ist das... Wenn du es einfach

02:06:33.450 --> 02:06:35.450
nur aufrufst, gar nicht. Das ist dann so ähnlich wie bei

02:06:35.450 --> 02:06:42.470
Crap. Wenn du einfach nur Crap

02:06:42.470 --> 02:06:44.470
aufrufst... Oder auch nicht.

02:06:44.470 --> 02:06:55.530
Ich finde das kann man durchaus

02:06:55.530 --> 02:06:57.530
so lassen, wie es ist.

02:06:57.530 --> 02:06:59.530
Das steht sogar...

02:06:59.530 --> 02:07:01.530
Weil jetzt könnte man tatsächlich...

02:07:01.530 --> 02:07:03.530
Guckt mal. Jetzt könnte man sowas

02:07:03.530 --> 02:07:05.530
hier machen. JQ

02:07:05.530 --> 02:07:09.030
Berlin Haus. Perfekt.

02:07:09.030 --> 02:07:11.030
Das wollte ich schon immer.

02:07:11.030 --> 02:07:13.030
Wollte ich schon immer queuen hier.

02:07:15.030 --> 02:07:17.030
Ja.

02:07:17.030 --> 02:07:19.030
JQ.

02:07:19.030 --> 02:07:21.030
Mal gucken ob das jetzt... Mal gucken ob das

02:07:21.030 --> 02:07:29.400
funktioniert.

02:07:29.400 --> 02:07:31.400
Easy. Guck.

02:07:31.400 --> 02:07:33.400
Jason Message gesendet. Berlin Hauptbahnhof.

02:07:33.400 --> 02:07:38.440
Ah Max, wo ist denn

02:07:38.440 --> 02:07:40.440
der Unterschied zu Message?

02:07:40.440 --> 02:07:42.440
Ja, dass man Standard In lesen kann.

02:07:42.440 --> 02:07:44.440
Dass es deutlich angenehmer ist

02:07:44.440 --> 02:07:46.440
sowas hier in Standard In rein

02:07:46.440 --> 02:07:48.440
zu pipen dynamisch, als

02:07:48.440 --> 02:07:50.440
Minus Minus Message

02:07:50.440 --> 02:07:52.440
Curl

02:07:52.440 --> 02:07:54.440
Bla Bla.

02:07:56.440 --> 02:07:58.440
Und wenn das hier länger wird,

02:07:58.440 --> 02:08:00.440
dann willst du es auch lieber mit einem Echo

02:08:00.440 --> 02:08:10.280
in Standard In reinhauen.

02:08:10.280 --> 02:08:12.280
Doch. Ich kann ja auch Minus...

02:08:12.280 --> 02:08:14.280
Ich kann auch Minus Minus Count 2

02:08:14.280 --> 02:08:16.280
angeben. Dann schickt das zweimal.

02:08:16.280 --> 02:08:18.280
Also, jetzt noch nicht.

02:08:18.280 --> 02:08:20.280
Aber das...

02:08:20.280 --> 02:08:22.280
Ich meine, das ist doch echt in Ordnung so.

02:08:22.280 --> 02:08:24.280
Das kann man so lassen. Standard In.

02:08:24.280 --> 02:08:31.240
Weil es ist eigentlich total

02:08:31.240 --> 02:08:33.240
Overkill.

02:08:35.240 --> 02:08:37.240
Du hast keinen interaktiven

02:08:37.240 --> 02:08:39.240
Modus. Ne, das habe ich nicht.

02:08:39.240 --> 02:08:45.370
Kann man das irgendwie erkennen?

02:08:45.370 --> 02:08:47.370
Kann man irgendwie

02:08:47.370 --> 02:08:49.370
erkennen,

02:08:49.370 --> 02:08:51.370
ob da ein Standard

02:08:51.370 --> 02:08:53.370
in Attached

02:08:53.370 --> 02:08:55.370
hat oder sowas?

02:08:55.370 --> 02:08:57.370
Da weiß ich nämlich auch gar nicht, wie man

02:08:57.370 --> 02:08:59.370
das unter Leidungsgescheit macht.

02:08:59.370 --> 02:09:01.370
Also quasi,

02:09:01.370 --> 02:09:03.370
ob ich erkennen kann,

02:09:03.370 --> 02:09:05.370
ob was reingepiped wird oder nicht.

02:09:07.370 --> 02:09:09.370
Also, dass ich unterscheiden kann zwischen so,

02:09:09.370 --> 02:09:11.370
ich gebe hier von Hand was ein.

02:09:11.370 --> 02:09:13.370
Ne, wahrscheinlich nicht, oder?

02:09:13.370 --> 02:09:22.120
Ja, das ist, weil er sagt

02:09:22.120 --> 02:09:24.120
hier Read All.

02:09:24.120 --> 02:09:30.500
Detect Standard In

02:09:30.500 --> 02:09:32.500
from Command.

02:09:32.500 --> 02:09:34.500
Ach ja.

02:09:34.500 --> 02:09:44.410
Ach ja, hier, guck mal.

02:09:44.410 --> 02:09:49.770
Ach ja, nice.

02:09:49.770 --> 02:09:51.770
Genau das habe ich gesucht.

02:09:51.770 --> 02:09:53.770
Ups.

02:09:53.770 --> 02:10:00.980
Data is being piped.

02:10:02.980 --> 02:10:04.980
Data is read from Terminal.

02:10:04.980 --> 02:10:06.980
Ja, genau das wollte ich haben.

02:10:06.980 --> 02:10:08.980
Weil da kann man nämlich sagen,

02:10:08.980 --> 02:10:10.980
nur wenn Stat...

02:10:10.980 --> 02:10:14.940
Okay, das ist ein bisschen weird,

02:10:14.940 --> 02:10:21.830
aber okay.

02:10:21.830 --> 02:10:33.020
Wenn das...

02:10:33.020 --> 02:10:40.460
Ja, genau.

02:10:40.460 --> 02:10:42.460
Jetzt sagt er, all options

02:10:42.460 --> 02:10:44.460
must be set.

02:10:44.460 --> 02:10:46.460
Und wenn ich was reinpipe,

02:10:46.460 --> 02:10:48.460
dann funzt es. Ja, so ist das

02:10:48.460 --> 02:10:52.660
noch viel, viel nicer.

02:10:52.660 --> 02:10:54.660
Jetzt checkt er das nämlich einfach so.

02:10:54.660 --> 02:10:56.660
Und da können wir uns jetzt, ganz ehrlich,

02:10:56.660 --> 02:10:58.660
das Errorhandling an der Stelle,

02:10:58.660 --> 02:11:00.660
können wir uns wahrscheinlich

02:11:00.660 --> 02:11:02.660
sparen, oder? Ach komm,

02:11:02.660 --> 02:11:04.660
da ist was drin.

02:11:04.660 --> 02:11:06.660
Wenn wir jetzt mal hier sagen, wir echoen

02:11:06.660 --> 02:11:08.660
mal nichts, dann geht das auch,

02:11:08.660 --> 02:11:10.660
weil dann ist in dem Echo...

02:11:10.660 --> 02:11:12.660
Dann ist noch ein new line drin, da müssen wir echo minus n machen.

02:11:12.660 --> 02:11:14.660
Und dann sagt er, all options

02:11:14.660 --> 02:11:16.660
must be set.

02:11:16.660 --> 02:11:18.660
Genau, weil jetzt Message leer ist.

02:11:18.660 --> 02:11:27.740
Ja, nice.

02:11:27.740 --> 02:11:29.740
Können wir so lassen. Gut, so bleibt es jetzt.

02:11:29.740 --> 02:11:35.160
Easy.

02:11:35.160 --> 02:11:37.160
Heckel. Ich glaube, ganz ehrlich,

02:11:37.160 --> 02:11:39.160
das reicht für unsere Zwecke

02:11:39.160 --> 02:11:41.160
voll und ganz aus, was wir hier

02:11:41.160 --> 02:11:43.160
gebaut haben. Achso, Moment,

02:11:43.160 --> 02:11:45.160
der count, countet noch gar nicht.

02:11:45.160 --> 02:11:48.600
Send Message,

02:11:48.600 --> 02:11:50.600
hier.

02:11:50.600 --> 02:11:54.620
Ist das, ist das der,

02:11:54.620 --> 02:11:56.620
der Standardweg in Go,

02:11:56.620 --> 02:11:58.620
ordentlich ne Vorschleife zu machen?

02:11:58.620 --> 02:12:00.620
Oder gibt's da auch irgendwelche

02:12:00.620 --> 02:12:02.620
Sachen, die,

02:12:02.620 --> 02:12:04.620
ist es verpönt,

02:12:04.620 --> 02:12:06.620
das so zu machen?

02:12:06.620 --> 02:12:08.620
Man weiß es in Go manchmal ja nicht so genau.

02:12:08.620 --> 02:12:10.620
Kleiner count.

02:12:10.620 --> 02:12:15.530
Was macht denn, was ist

02:12:15.530 --> 02:12:17.530
eigentlich hier mit range?

02:12:17.530 --> 02:12:19.530
Das ist doch eher,

02:12:19.530 --> 02:12:21.530
wenn ich

02:12:21.530 --> 02:12:23.530
irgendwie loopen will durch ein Array oder so was.

02:12:23.530 --> 02:12:26.970
Kleiner count.

02:12:26.970 --> 02:12:31.370
Und das kommt jetzt

02:12:31.370 --> 02:12:33.370
da rein.

02:12:33.370 --> 02:12:35.370
So, fertig.

02:12:35.370 --> 02:12:37.370
So, count to, zack.

02:12:37.370 --> 02:12:50.410
Jetzt hat er es zweimal geschickt.

02:12:50.410 --> 02:12:53.780
Wir können auch das so machen.

02:12:53.780 --> 02:12:55.780
Sending Message.

02:12:55.780 --> 02:12:57.780
Ja, jetzt schreibt er das zweimal.

02:12:57.780 --> 02:12:59.780
Und

02:12:59.780 --> 02:13:01.780
hier machen wir, was muss man machen?

02:13:01.780 --> 02:13:03.780
%v?

02:13:03.780 --> 02:13:05.780
Oder jetzt hier i?

02:13:05.780 --> 02:13:09.670
Ne.

02:13:09.670 --> 02:13:11.670
Ach ne.

02:13:11.670 --> 02:13:13.670
Gibt's sowas wie printf?

02:13:13.670 --> 02:13:15.670
Ne, printf.

02:13:15.670 --> 02:13:17.670
Muss man selbst

02:13:17.670 --> 02:13:23.740
Newline machen.

02:13:23.740 --> 02:13:25.740
Okay, komm, machen wir eins, gleich,

02:13:25.740 --> 02:13:29.560
kleiner count.

02:13:29.560 --> 02:13:31.560
Parallelsenden, jetzt wird's aber advanced.

02:13:31.560 --> 02:13:37.370
Dann ist er,

02:13:37.370 --> 02:13:39.370
ne, ne, ne, dann ist er im Zweifelsfall

02:13:39.370 --> 02:13:41.370
dann, bevor Send Message

02:13:41.370 --> 02:13:43.370
alle durch sind.

02:13:43.370 --> 02:13:45.370
Das ist schon okay so, das ist fein so.

02:13:45.370 --> 02:13:47.370
Ich glaub, das können wir so lassen.

02:13:47.370 --> 02:13:49.370
Komm mal, Sending Message, 1, 2.

02:13:49.370 --> 02:13:53.380
Funst.

02:13:53.380 --> 02:13:55.380
Waitgroup, ne, ne, ne, das machen wir jetzt nicht.

02:13:55.380 --> 02:14:01.510
Das machen wir nicht.

02:14:01.510 --> 02:14:03.510
Aber das gefällt mir, das ist tatsächlich echt super,

02:14:03.510 --> 02:14:05.510
super easy jetzt gewesen.

02:14:05.510 --> 02:14:07.510
Ich mein, das sind,

02:14:07.510 --> 02:14:09.510
sind am Ende, sind am Ende

02:14:09.510 --> 02:14:11.510
108 Zeilen und davon kannst du die

02:14:11.510 --> 02:14:13.510
meisten Sachen eigentlich rausschmeißen,

02:14:13.510 --> 02:14:15.510
weil es Bonus ist, den wir wahrscheinlich

02:14:15.510 --> 02:14:19.400
nicht brauchen werden.

02:14:19.400 --> 02:14:21.400
Weil, jetzt mal ernsthaft, wir brauchen auch

02:14:21.400 --> 02:14:23.400
kein Config-File, hab ich mir gerade überlegt,

02:14:23.400 --> 02:14:25.400
weil entweder

02:14:25.400 --> 02:14:27.400
übergebt man das Ganze per Environment-Variablen,

02:14:27.400 --> 02:14:29.400
außer die Message, die Message muss man

02:14:29.400 --> 02:14:31.400
irgendwie sich anders überlegen, wie man die reinkriegt.

02:14:31.400 --> 02:14:37.210
Oder per Commandline-Arguments.

02:14:37.210 --> 02:14:43.980
Und das ist

02:14:43.980 --> 02:14:45.980
Kubernetes-technisch vollkommen egal.

02:14:45.980 --> 02:14:47.980
Ich kann eine Config-Map

02:14:47.980 --> 02:14:49.980
mounten, ich kann Secrets

02:14:49.980 --> 02:14:51.980
Environment-mäßig mounten,

02:14:51.980 --> 02:14:53.980
das ist eigentlich egal, wichtig ist nur,

02:14:53.980 --> 02:14:55.980
dass es nicht zufällig in irgendwelchen Logs

02:14:55.980 --> 02:15:01.270
erscheint oder so.

02:15:01.270 --> 02:15:03.270
Denk an die Verbosity-Flag, wenn du dein

02:15:03.270 --> 02:15:05.270
JSON da reinnimmst, willst du es nicht immer sehen.

02:15:05.270 --> 02:15:08.650
Doch.

02:15:10.650 --> 02:15:12.650
Einfach immer voll, voll Verbis.

02:15:12.650 --> 02:15:25.690
Ich mein,

02:15:25.690 --> 02:15:27.690
wir haben noch 10 Minuten Zeit, wollen wir mal nicht so sein.

02:15:27.690 --> 02:15:34.010
Verbose.

02:15:34.010 --> 02:15:37.960
Wie würden wir das jetzt machen?

02:15:37.960 --> 02:15:39.960
Bool wahrscheinlich.

02:15:39.960 --> 02:15:41.960
Bool.

02:15:41.960 --> 02:15:46.170
Verbose.

02:15:46.170 --> 02:15:48.170
Default ist

02:15:48.170 --> 02:15:50.170
false, das brauchen wir nicht über, oder?

02:15:50.170 --> 02:15:52.170
Na doch, doch, doch, das wollen wir auch gesetzt

02:15:52.170 --> 02:15:54.170
haben über Environment-Variablen.

02:15:54.170 --> 02:16:02.470
Nee, das wollen wir,

02:16:02.470 --> 02:16:04.470
das kann man auch ins Container-Image einbauen,

02:16:04.470 --> 02:16:06.470
ob es jetzt,

02:16:06.470 --> 02:16:10.740
komm, nee.

02:16:10.740 --> 02:16:12.740
Ach ja, jetzt funzt das ja wieder nicht.

02:16:12.740 --> 02:16:14.740
Weil das hier ja ein String ist.

02:16:14.740 --> 02:16:18.950
Kann man getenv

02:16:18.950 --> 02:16:20.950
nicht sagen, dass er das umwandeln soll

02:16:20.950 --> 02:16:22.950
in irgendwas gleich?

02:16:22.950 --> 02:16:27.800
Äh, geht nicht.

02:16:27.800 --> 02:16:42.380
Ich mein,

02:16:42.380 --> 02:16:44.380
ich muss jetzt wieder sowas Hässliches machen,

02:16:44.380 --> 02:16:46.380
wie hier oben.

02:16:46.380 --> 02:16:48.380
Das ist so, äh.

02:16:48.380 --> 02:16:50.380
Wir brauchen jetzt eigentlich

02:16:50.380 --> 02:16:52.380
sowas hier.

02:16:52.380 --> 02:16:56.460
Wieder, wieder oben.

02:16:56.460 --> 02:16:58.460
Nur jetzt brauchen wir Bool.

02:16:58.460 --> 02:17:05.160
Pass Bool.

02:17:05.160 --> 02:17:07.160
If Error.

02:17:07.160 --> 02:17:09.160
Verbose gleich,

02:17:09.160 --> 02:17:11.160
ja,

02:17:11.160 --> 02:17:13.160
Moment, wann gibt es dann

02:17:13.160 --> 02:17:15.160
einen Error?

02:17:15.160 --> 02:17:18.540
Wann gibt es da jemals

02:17:18.540 --> 02:17:20.540
einen Error?

02:17:20.540 --> 02:17:22.540
Okay, ja, doch.

02:17:22.540 --> 02:17:24.540
Wenn da irgendein Shit drin steht, so blub, blub, blub, blub

02:17:24.540 --> 02:17:26.540
oder so, dann ist es

02:17:26.540 --> 02:17:32.410
fals, ja, okay.

02:17:32.410 --> 02:17:34.410
Dann ist es so, und dann ist das hier und

02:17:34.410 --> 02:17:38.300
Bool

02:17:38.300 --> 02:17:40.300
wahr.

02:17:40.300 --> 02:17:42.300
Okay, nice.

02:17:42.300 --> 02:17:44.300
Ich hoffe, das passt.

02:17:44.300 --> 02:17:46.300
Ich hoffe, das passt so.

02:17:46.300 --> 02:17:48.300
Man könnte jetzt theoretisch auch sagen,

02:17:48.300 --> 02:17:50.300
wenn wir hier schon

02:17:50.300 --> 02:17:52.300
das haben,

02:17:52.300 --> 02:17:54.300
Mann, das brauchen wir nicht hier.

02:17:54.300 --> 02:17:56.300
Message, nee, das ist alles gut.

02:17:56.300 --> 02:17:58.300
Wir können jetzt zum Beispiel hier noch ein If sagen.

02:17:58.300 --> 02:18:02.630
Wir können sagen, if,

02:18:02.630 --> 02:18:21.210
hab ich das nicht?

02:18:21.210 --> 02:18:25.420
Äh, if,

02:18:25.420 --> 02:18:27.420
if das, nur dann

02:18:27.420 --> 02:18:29.420
geben wir diesen Krempel hier aus.

02:18:29.420 --> 02:18:31.420
Ja, das ist schon mal nett verkehrt.

02:18:31.420 --> 02:18:33.420
Also jetzt sollte er das alles

02:18:33.420 --> 02:18:35.420
nicht ausgeben. Wenn ich da

02:18:35.420 --> 02:18:37.420
Minus, Minus, Ver, Ver,

02:18:37.420 --> 02:18:39.420
Verbose, dann gibt er alles

02:18:39.420 --> 02:18:49.830
aus. Newline

02:18:49.830 --> 02:18:51.830
vor dem Erot, macht man das nicht so? Schreibt man das

02:18:51.830 --> 02:18:53.830
alles super

02:18:53.830 --> 02:19:15.830
kompakt, oder?

02:19:15.830 --> 02:19:21.580
Was? Newline?

02:19:21.580 --> 02:19:23.580
Äh.

02:19:23.580 --> 02:19:27.980
Ich weiß nicht, was ihr meint.

02:19:27.980 --> 02:19:29.980
Ach, du meinst das hier, oder wie?

02:19:29.980 --> 02:19:31.980
Hä?

02:19:31.980 --> 02:19:38.360
Nee, oder?

02:19:38.360 --> 02:19:47.110
Zeile 49?

02:19:47.110 --> 02:19:49.110
Also wirklich so?

02:19:49.110 --> 02:19:51.110
Das sieht doch so gequetscht aus, hä?

02:19:51.110 --> 02:19:53.110
Ich find das so schicker.

02:19:53.110 --> 02:19:55.110
Aber das ist wahrscheinlich nicht

02:19:55.110 --> 02:19:57.110
der Go-Way, das so zu machen.

02:19:57.110 --> 02:20:00.620
Leute, wenn wir

02:20:00.620 --> 02:20:02.620
Verbose anhaben, ja?

02:20:02.620 --> 02:20:06.120
Soll er dann das hier auch noch ausgeben?

02:20:06.120 --> 02:20:08.120
Also, nee, umgedreht.

02:20:08.120 --> 02:20:10.120
Wenn wir Verbose aushaben, soll er das hier dann auch noch ausgeben?

02:20:10.120 --> 02:20:12.120
Ich glaube, das ist eine Ausgabe,

02:20:12.120 --> 02:20:15.820
die können wir echt immer drinnen lassen.

02:20:15.820 --> 02:20:17.820
Ja, ich denke auch.

02:20:17.820 --> 02:20:19.820
Wenn man das hier angebt,

02:20:19.820 --> 02:20:21.820
dann gibt er halt noch den anderen Müll mit aus.

02:20:21.820 --> 02:20:23.820
Minus, Minus,

02:20:23.820 --> 02:20:25.820
Silent auch noch!

02:20:25.820 --> 02:20:27.820
Minus, Minus,

02:20:27.820 --> 02:20:29.820
Komm, jetzt lass mal nicht übertreiben.

02:20:29.820 --> 02:20:31.820
Jetzt lass uns mal nicht übertreiben.

02:20:31.820 --> 02:20:38.900
Wir müssen es nicht übertreiben, man.

02:20:38.900 --> 02:20:43.370
Ne.

02:20:43.370 --> 02:20:45.370
Minus, Minus, Silent mach ich nicht.

02:20:45.370 --> 02:20:47.370
Man muss das hier

02:20:47.370 --> 02:20:49.370
noch in irgendwelchen Ifs rappen,

02:20:49.370 --> 02:20:51.370
alles und so.

02:20:51.370 --> 02:20:55.380
Version Flag?

02:20:55.380 --> 02:20:57.380
Ja.

02:20:57.380 --> 02:20:59.380
Das hat mir jetzt,

02:20:59.380 --> 02:21:01.380
okay, komm, Version Flag ist easy.

02:21:01.380 --> 02:21:03.380
Version, Version Flag.

02:21:03.380 --> 02:21:05.380
Also, ähm.

02:21:05.380 --> 02:21:07.380
Wobei.

02:21:07.380 --> 02:21:15.750
Ja doch, Version Flag.

02:21:15.750 --> 02:21:22.780
Version Flag ist easy.

02:21:22.780 --> 02:21:24.780
Version Flag mit Commit Hash Output.

02:21:24.780 --> 02:21:26.780
Leute, jetzt

02:21:26.780 --> 02:21:30.150
wird es aber übertrieben.

02:21:30.150 --> 02:21:32.150
Dann brauchen wir noch einen GitHub Actions

02:21:32.150 --> 02:21:34.150
Buildstep als nächstes,

02:21:34.150 --> 02:21:36.150
der uns immer automatisch

02:21:36.150 --> 02:21:38.150
vor dem Erzeugen

02:21:38.150 --> 02:21:40.150
des Binaries und Bereitstellen

02:21:40.150 --> 02:21:42.150
noch den aktuellen Hash mit

02:21:42.150 --> 02:21:45.850
reinbaut.

02:21:45.850 --> 02:21:47.850
Ja, klar.

02:21:47.850 --> 02:21:49.850
Ne, ne, ne, ne. Das ist okay so.

02:21:49.850 --> 02:21:51.850
Das kann so, das kann

02:21:51.850 --> 02:21:55.930
so bleiben. Das ist echt

02:21:55.930 --> 02:21:57.930
einfach, ja? Echt?

02:21:57.930 --> 02:21:59.930
Okay,

02:21:59.930 --> 02:22:06.180
zeig her. Also, machen wir

02:22:06.180 --> 02:22:08.180
jetzt hier

02:22:08.180 --> 02:22:11.620
noch ein

02:22:11.620 --> 02:22:13.620
Flag Bool

02:22:13.620 --> 02:22:15.620
Version.

02:22:15.620 --> 02:22:19.640
Die Version ist was?

02:22:19.640 --> 02:22:27.050
Keckel?

02:22:27.050 --> 02:22:29.050
Habt ihr euch vorgestellt, wie das funktioniert?

02:22:29.050 --> 02:22:31.050
Äh, was?

02:22:31.050 --> 02:22:33.050
Achso.

02:22:33.050 --> 02:22:35.050
Okay.

02:22:35.050 --> 02:22:37.050
Und es ist auch nicht Bool, sondern es ist,

02:22:37.050 --> 02:22:50.920
ja, was ist es denn überhaupt?

02:22:50.920 --> 02:22:55.380
Ist es ein Bool Flag?

02:22:55.380 --> 02:22:57.380
Ja gut, es ist ein Bool Flag, logisch.

02:22:57.380 --> 02:22:59.380
An der Stelle.

02:22:59.380 --> 02:23:03.980
Es ist ein Bool Flag.

02:23:03.980 --> 02:23:05.980
Und dann,

02:23:05.980 --> 02:23:07.980
das ist das Erste, was ich gucke hier.

02:23:07.980 --> 02:23:09.980
If, if

02:23:09.980 --> 02:23:17.130
Version, Moment, was?

02:23:17.130 --> 02:23:19.130
Build-ldflags

02:23:28.070 --> 02:23:30.070
Full Package Path

02:23:30.070 --> 02:23:32.070
Moment.

02:23:32.070 --> 02:23:34.070
What? Jetzt wird es

02:23:34.070 --> 02:23:36.070
abgedreht. Go Build!

02:23:36.070 --> 02:23:39.640
Jaja.

02:23:39.640 --> 02:23:41.640
Full Package Path?

02:23:41.640 --> 02:23:43.640
Also Main?

02:23:43.640 --> 02:23:49.320
Oder was?

02:23:49.320 --> 02:23:57.500
Ähm.

02:23:57.500 --> 02:24:01.130
Mir fällt jetzt grad nichts anderes ein.

02:24:01.130 --> 02:24:03.130
Value?

02:24:03.130 --> 02:24:05.130
If Version, und jetzt

02:24:05.130 --> 02:24:07.130
kann ich halt einfach sagen,

02:24:07.130 --> 02:24:11.400
Rind? Ja?

02:24:11.400 --> 02:24:22.740
Nee.

02:24:22.740 --> 02:24:24.740
Version ist mein,

02:24:24.740 --> 02:24:26.740
mein

02:24:26.740 --> 02:24:28.740
Flag, ob ich das ausgeben will.

02:24:28.740 --> 02:24:45.940
Ja, okay.

02:24:45.940 --> 02:25:02.500
Hab ich jetzt ja, aber das,

02:25:02.500 --> 02:25:04.500
achso, das macht er nicht automatisch.

02:25:04.500 --> 02:25:06.500
Also muss ich hier sowas,

02:25:06.500 --> 02:25:22.230
sowas machen.

02:25:22.230 --> 02:25:24.230
Ach nee, da muss ich jetzt ja noch hinter,

02:25:24.230 --> 02:25:26.230
was es ist. Es ist ein

02:25:26.230 --> 02:25:28.230
Int, nee, Moment, es ist Go.

02:25:28.230 --> 02:25:30.230
Int?

02:25:30.230 --> 02:25:32.230
Hm, äh, ähm.

02:25:32.230 --> 02:25:34.230
Wie rum jetzt?

02:25:34.230 --> 02:25:36.230
Int? Nee, shit.

02:25:36.230 --> 02:25:46.970
Int?

02:25:46.970 --> 02:25:48.970
Ach, ohne Doppelpunkt.

02:25:48.970 --> 02:25:50.970
Okay.

02:25:50.970 --> 02:25:55.620
String. Was?

02:25:55.620 --> 02:25:57.620
Non-Boolean Condition in If Statement.

02:25:57.620 --> 02:26:22.860
Okay.

02:26:22.860 --> 02:26:24.860
Ach, da steht's ja. 1.0.

02:26:24.860 --> 02:26:29.260
Okay, nice.

02:26:29.260 --> 02:26:38.970
Ähm, warum sagt er jetzt

02:26:38.970 --> 02:26:40.970
all, achso, ach, Moment.

02:26:40.970 --> 02:26:48.700
Ich muss ja, ich muss ja neu bilden.

02:26:48.700 --> 02:26:50.700
Okay, das ist tatsächlich ganz cool.

02:26:50.700 --> 02:26:52.700
Aber, jetzt was

02:26:52.700 --> 02:26:54.700
anderes.

02:26:54.700 --> 02:26:56.700
Woher krieg ich das jetzt?

02:26:56.700 --> 02:26:58.700
Muss ich mir das jetzt über irgendein Shell-Skript holen

02:26:58.700 --> 02:27:00.700
oder wie? Also quasi

02:27:00.700 --> 02:27:02.700
Git, äh, Head,

02:27:02.700 --> 02:27:04.700
Comet oder was auch immer und dann

02:27:04.700 --> 02:27:06.700
das hinten dransetzen?

02:27:06.700 --> 02:27:10.460
Ja, okay.

02:27:10.460 --> 02:27:12.460
Oh, das ist wirklich,

02:27:12.460 --> 02:27:14.460
das ist echt gar nicht so übel, muss ich sagen.

02:27:14.460 --> 02:27:16.460
Äh?

02:27:16.460 --> 02:27:18.460
Nö, find ich,

02:27:18.460 --> 02:27:20.460
find ich eigentlich

02:27:20.460 --> 02:27:25.750
ganz gut so. Ich mein,

02:27:25.750 --> 02:27:27.750
korrekterweise müsste man das ja eigentlich Version

02:27:27.750 --> 02:27:29.750
Option nennen und dann, ähm,

02:27:29.750 --> 02:27:33.770
wir nennen das hier Release.

02:27:33.770 --> 02:27:35.770
Wir nennen das hier Release.

02:27:35.770 --> 02:27:37.770
Dann heißt es nicht so dumm.

02:27:37.770 --> 02:27:39.770
Okay. Oh, und das

02:27:39.770 --> 02:27:41.770
hier nennen wir

02:27:41.770 --> 02:27:43.770
Release.

02:27:43.770 --> 02:27:45.770
Dann liest sich das

02:27:45.770 --> 02:27:52.730
vielleicht ein bisschen schöner.

02:27:52.730 --> 02:27:54.730
Ah ja, es wird aus irgendwelchen Gründen großgeschrieben.

02:27:54.730 --> 02:27:58.300
Jo.

02:27:58.300 --> 02:28:00.300
Und jetzt, letzte Minute,

02:28:00.300 --> 02:28:02.300
wenn man

02:28:02.300 --> 02:28:04.300
jetzt noch "--help!" angibt,

02:28:04.300 --> 02:28:10.620
kann ich in den Usage

02:28:10.620 --> 02:28:12.620
Output direkt die Version

02:28:12.620 --> 02:28:14.620
noch reinhauen?

02:28:14.620 --> 02:28:16.620
Kann man dem irgendwie sagen,

02:28:16.620 --> 02:28:18.620
Custom Output oder sowas?

02:28:18.620 --> 02:28:26.730
Usage? Oder Help

02:28:26.730 --> 02:28:41.500
Text? Äh,

02:28:41.500 --> 02:28:43.500
Flag?

02:28:43.500 --> 02:28:47.320
Golang?

02:28:47.320 --> 02:28:49.320
Help Message?

02:28:49.320 --> 02:28:51.320
Was, Default?

02:28:51.320 --> 02:28:53.320
Ne.

02:28:53.320 --> 02:28:55.320
Ach hier, Print?

02:28:55.320 --> 02:28:57.320
Ne, Print Default ist wieder was anderes.

02:28:57.320 --> 02:29:06.390
Ne, ich glaub das,

02:29:06.390 --> 02:29:12.460
ich glaub das funzt.

02:29:12.460 --> 02:29:15.830
Der sagt dann einfach,

02:29:15.830 --> 02:29:17.830
der sagt dann einfach Usage.

02:29:17.830 --> 02:29:55.990
Scheinbar kann man,

02:29:55.990 --> 02:29:57.990
ne, wir machen jetzt auch Schluss. Reicht schon.

02:29:57.990 --> 02:29:59.990
So. Perfekt.

02:29:59.990 --> 02:30:01.990
Funzt alles.

02:30:01.990 --> 02:30:07.030
Na, fertig.

02:30:07.030 --> 02:30:09.030
Aber wir brauchen das Tool wahrscheinlich gar nicht.

02:30:09.030 --> 02:30:15.930
Bin ich, bin ich noch auf

02:30:15.930 --> 02:30:17.930
Shit? Shit hab eingeloggt.

02:30:17.930 --> 02:30:19.930
Ne.

02:30:19.930 --> 02:30:21.930
Okay, zack, abbrechen.

02:30:21.930 --> 02:30:36.380
Alles klar, sehr schön.

02:30:36.380 --> 02:30:38.380
Haben wir doch heute mal wieder was Sinnvolles gemacht.

02:30:40.380 --> 02:30:42.380
Jetzt ist Badge-Time, Leute.

02:30:42.380 --> 02:30:44.380
Wollen wir heute zur Abwechslung mal wieder Outro-Musik?

02:30:44.380 --> 02:30:46.380
Falls wir das überhaupt noch

02:30:46.380 --> 02:30:52.060
irgendwo haben.

02:30:52.060 --> 02:30:54.060
Nein, das ist nicht das richtige Outro.

02:30:54.060 --> 02:31:00.630
Nicht das richtige Outro.

02:31:00.630 --> 02:31:02.630
Das ist

02:31:02.630 --> 02:31:04.630
besser.

02:31:04.630 --> 02:31:06.630
Jawoll, das

02:31:06.630 --> 02:31:11.420
Outro-Musik.

02:31:11.420 --> 02:31:13.420
Also Leute, bis denn, macht's gut.

02:31:13.420 --> 02:31:15.420
See you.

{"text": "Das war's f\u00fcr heute und wir sehen uns beim n\u00e4chsten Mal wieder! Das war's f\u00fcr heute und wir sehen uns beim n\u00e4chsten Mal wieder! So, exzellent! Da is er! So, \u00e4hm... H\u00f6rt sich ein schlimmer an als das andere. Das kannst du mir nicht geben, das ist ja eklig. Das ist ja einschlimmer als das andere. Ja, meinetwegen. Moin, Leute! Jetzt sind wieder viele am Start. Ist quasi das Gegenst\u00fcck zum Subbox-K\u00e4mpfer auf YouTube. Wir machen heute mal ein bisschen was anderes. Wir programmieren mal wieder was. Ich will n\u00e4mlich was ausprobieren und zwar... Was ist das hier auf Domain-Check? Magenta.Gay! Stimmt, das hab ich ja ganz vergessen. Ich hab Magenta.Gay \u00fcbrigens nicht registriert. So, ich muss mal kurz hier eine Runde Updates machen. Weil ich wei\u00df nicht, ob ich die aktuelle.NET Core-Version hab. Danke sch\u00f6n f\u00fcr die Zaps! Wer gibt's? KlokxHD! 13 Monate! Massive! 13 Monate, das ist ja quasi schon. Exzellent! So, dann haben wir noch den Jatz... Ach nee, JET SQL. Ich hab doch irgendeinen Flag! Nee, doch nicht SQL. Ich hab n\u00e4mlich genau an der Stelle einen Flag auf dem Monitor. Ich seh jetzt nicht, ob das ein I, sondern ein L ist. Ich muss mal kurz scrollen. Nee, das ist doch Jatz-Key eher. Nicht JET SQL oder so. So, danke sch\u00f6n f\u00fcr den Sub. Der Taser ist 16 Monate am Start. Jetzt wird's langsam echt schon hier. Unangenehm langsam. Wobei eigentlich... Also f\u00fcrs Geld, ja. Danke sch\u00f6n f\u00fcr die ganzen 16 Monate. Massive! Big Brain Subscription. So, das soll man updaten hier. Machen wir mal auf. Ich zeig euch mal, was ich gefunden habe heute. Ich guck ab und zu mal bei GitHub, was so trendet, was so neu ist, was ihr nicht gesehen habt. Und ihr wisst ja, ich interessier mich f\u00fcr... Oder ich bastel schon eine Weile an einer Video-Streaming-Software f\u00fcr \u00dcberwachungskameras. Allerdings rein f\u00fcr den Heimbereich. Also sprich, die soll komplett im Browser funktionieren. Ich hab ja auch schon was gebastelt. Wir haben auch schon im Stream was gebastelt. Die aktuelle Version, die ich laufen hab, ist mit.NET und mit Go. Go f\u00fcr die Video-Streaming-Geschichte, weil es da f\u00fcr.NET nichts Gescheites gibt bis jetzt. Und ich hab jetzt was gefunden. So, haben wir jetzt einmal ordentlich geupdatet? Erstmal eine Runde... Oh, was ist denn hier alles drinne? Ja, komm, update mal, update mal, alles gut. So, machen wir mal kurz unsere Idee auf und ich zeig euch das jetzt mal. Ups. Ah! Placer! Was ist denn hier los? Was ist denn hier los? \u00c4h, oh, 2019, das ist ja uralt. Ok, ich muss mal kurz... Ihr d\u00fcrft jetzt nicht hingucken. Ich muss mal kurz die Idee kaufen. Ups, nein, ich will nicht Plant aufmachen. Geh weg. Ich hatte Plant noch nicht einmal auf. Ich wei\u00df gar nicht, was ich mit dem M\u00fcll machen soll. Geh weg, Plant. Yes. So. Evaluation Feedback, no thanks. So, wir machen jetzt erstmal ein Update. Hab mich die Chatbrains Toolbox... Komm, wir machen erstmal ein Update. Will it Plant? Ey, die Typen machen wieder Videos. Die machen wieder Videos. Die haben vier Jahre keine Videos gemacht, der Dude. Und hat letztens wieder eins hochgeladen. Vor einer Woche. Guck mal, die haben ewig... Der macht so wenig Videos wie ich. Und die sind wieder am Start. \u00c4h, ja, komm, mach Update. Auf geht's. Einmal Toolbox starten. Toolbox startet nicht. Exzellent. Hallo Mom, startet meine Chatbrains... Ach, die update gerade, deswegen startet die net. Das ist ja okay, das ist logisch. Ja, \u00e4h, w\u00e4hrend das Update kann ich euch ja mal erkl\u00e4ren, um was es geht. Und zwar, \u00e4h, wie gesagt, ich verwende ja gerade, oder ich bin ja schon seit langer Zeit dabei, so eine Webcam, also Security-Kamera-\u00dcberwachungssoftware zu programmieren. Allerdings nichts gro\u00dfartig ausgefallenes, jetzt nicht sowas wie Blue Iris oder sowas, sondern im Prinzip einfach nur aus der Notlage heraus, weil ich nichts Gescheites gefunden habe, was das macht, was ich, was ich machen will. Und ich, Problem ist, ich kann's euch jetzt nicht wirklich zeigen, weil da die Kameras von mir drin sind. \u00c4hm, guckt grad mal. Ob man das vielleicht sieht. \u00c4h, ne, dann soll ich nicht zeigen. Ne, egal, also ihr m\u00fcsst mir, ihr m\u00fcsst mir das jetzt glauben, wobei doch, ich kann euch, ich kann euch den, kann euch den oberen Teil zeigen, ne. Also wenn man hier im Browser draufgeht auf die Webseite, dann, \u00e4hm, kriegt man halt Kameras angezeigt, wenn's l\u00e4dt. Also, oh. Okay, das ist jetzt, das ist schlecht. Ah, sieht man das Hoftor, sieht man hier hinten das Zimmer von der Katz, sieht man hier unten den, den B\u00fcrgersteig ein bisschen und da unten sieht man die Treppe, aber das ist jetzt... \u00c4hm, genau, und da, wie gesagt, das kann auch ein bisschen was aufnehmen und zumindest ist es aus der Notlage herausgeboren, weil ich nichts anderes gefunden hab und meine Anforderung ist, dass ich das im Browser verwenden kann. Face League, ja, genau, also das nat\u00fcrlich, ich hab hier keine Kamera drin, aber definitiv Face League. So, und das Problem ist halt, es gibt nichts Gescheites, was im Browser funktioniert. Zumindest nichts, was im Browser Low Latency funktioniert. Ich hab das vor einer ganzen Weile schon mal hier, wir haben sogar im Stream schon mal ein bisschen rumgebastelt. Hast du Dezember wieder frei? Ja, ich hab kompletten, kompletten Dezember frei. So, und, \u00e4hm, die Sache ist die, wie ich das jetzt aktuell gemacht hab, ist folgendes, dass das Late, also Latency-Frei bedeutet bei mir, ich will im Browser, sag mal so, nicht wirklich mehr als eine Sekunde durch Verarbeitung drauf kriegen, was bei Security-Kameras irgendwo ein wichtiger, oder generell bei Kameras generell ein wichtiger Aspekt ist. Dezember-Frei, das gibt's doch, klar, wenn man sich Urlaub nimmt, gibt's das. Und, so, genau, also, \u00e4hm, es gibt verschiedene Varianten, wie man Video-Streams im Browser kriegt. So, die bekannteste ist, glaub ich, \u00e4h, hier MJPEG, aber das suckt. Das kann so gut wie jede Kamera in irgendeiner Art und Weise, und das sind einfach Snapshots, also der macht einfach Bilder, einzelne Bilder, und \u00fcbertr\u00e4gt die dann. Das ist erstens ziemlich gro\u00df, von der Bandbreite, das ist lokal nicht so schlimm, das ist sehr ressourcenintensiv, und es ist lahm, und es suckt, also, MJPEG ist \u00fcbelster Crap. So, das n\u00e4chste, was es gibt, um Sachen in Browser zu streamen, ist HTS. Das ist das, was Twitch fr\u00fcher gemacht hat. Mittlerweile macht Twitch da moderneres HTS. Das, \u00e4h, ne, genau, das ist, hat Sache, die urspr\u00fcnglich sich Apple ausgedacht hat, HTS-Live-Streaming, das ist eigentlich was total Simples. Das besteht aus einer Playlist und aus kleinen Schnipseln Video. Und man kriegt einfach immer eine aktualisierte Playlist geschickt, mit so zwei bis drei Sekunden Videoschnipsel. Vielleicht habt ihr euch schon mal gefragt, warum, wenn ihr Twitch reloadet, die Seite, ihr manchmal ein bisschen hinten dran seid und das noch mal seht, was ihr gerade schon gesehen habt. Und das liegt an diesen kleinen Schnipseln von HTS. Also sprich, ihr bekommt eine Playlist, da ist ein 3-Sekunden-Schnipsel drin, oder ein 4-, oder ein 5-Sekunden-, oder ein 0-, oder ein 0-, 500-millisekunden-Schnipsel, das kann man sich aussuchen. Und, \u00e4hm, sagen wir mal, ihr bekommt einen 3-Sekunden-Videoschnipsel geschickt, und ihr, \u00e4h, nicht HTS, ich meine HLS, ich komme nicht auf HTS, Schwachsinn. So, und ihr kriegt einen Videoschnipsel geschickt, so, und dann guckt ihr den Videoschnipsel, zwei Sekunden, refreshed, und dann bekommt ihr, weil das noch kein neues Videoschnipsel ist, weil das gerade noch aktuell ist, bekommt ihr das gleiche noch mal, und dann guckt ihr euch die zwei Sekunden, die ihr schon gesehen habt, noch mal an. So, \u00e4h, so, das ist eine Sache, die funktioniert \u00e4u\u00dferst zuverl\u00e4ssig mittlerweile, das ist ziemlich gut. \u00c4hm, allerdings, sagt das, auch, weil es hat Latency, ihr m\u00fcsst euch \u00fcberlegen, so eine Playlist hat vielleicht 5 Eintr\u00e4ge, und jeweils 2-Sekunden-Schnipsel, und selbst wenn man das runterdreht auf 500-millisekunden-Schnipsel, sehen wir noch mal 5, man hat ordentlich Latency. So, das Beste, was man machen kann, ist, also, Neba, Neba HTTP 2 Live-Streaming und Gesch\u00fctz, was Twitch mittlerweile macht, das Beste, das Beste, was man machen kann, ist WebRTC. Und, \u00e4h, meine aktuelle Software, das war ich euch gerade gezeigt im Browser, die macht das Ganze auch per WebRTC, die ist, \u00e4h, funktioniert ungef\u00e4hr so, ich habe einen FFmpeg laufen, also, FFmpeg als Library, kein Kommando-Zeilen-Programm. Und, \u00e4h, \u00fcbrigens, weil ich im Chat jetzt ein paar Mal WebRTC gelesen habe, WebRTC ist ziemlich beliebt f\u00fcr so Videokonferenz-Calls, die meisten Videokonferenz-Sachen werden \u00fcber WebRTC gehen, WebRTC ist auch ziemlich easy, wenn man von Browser zu Browser das Ganze machen will, weil die Implementierung gut ist. Wenn man von einem Server-Backend zu einem Browser streamen will, ist das schon ein bisschen komplizierter, und glaubt mir, ich spreche aus Erfahrung, ich habe den Gramm selbst programmiert. Also, ich, das ist nicht so sch\u00f6n. So, es gibt auch nicht so viele Libraries zur Auswahl. Weil die urspr\u00fcnglichen WebRTC-Bindings von Chrome, das ist irgendwie, fragt mich nicht, 50 Milliarden Zeilen C++-Code, und das gebe ich mir nicht. Aber WebRTC ist so ziemlich die beste \u00dcbertragungssache, wenn man Low-Latency im Browser haben will. So, und, \u00e4hm, aktuell verwende ich diese WebRTC-Library, das ist in Go programmiert. Allerdings ist meine Anwendung in sich in.NET Core, und, \u00e4hm, deswegen suche ich die ganze Zeit schon nach einer.NET Core-Library, die das Ganze machen kann. Aber das ist so ziemlich die beste WebRTC-Library, die ich kenne, \u00e4h, deswegen habe ich die halt verwendet. Aber muss halt sagen, dass es ein bisschen eklig ist, Go und.NET zusammen zu bringen. Das geht nur \u00fcber den Umweg von irgendwelchen C-Export-Geschichten und so. Es geht, ich meine, sonst h\u00e4ttet ihr das Video eben im Browser nicht gesehen, aber sch\u00f6n ist das Ganze nicht. Deswegen war ich die ganze Zeit auf einer Suche nach einer.NET-Library, die das kann, und ich habe vorhin, \u00e4h, was entdeckt auf GitHub, das muss ich unbedingt mal ausprobieren, n\u00e4mlich den ganzen Kram hier, Moment, den da. ZIP-Sorcery hei\u00dft ZIP, kann ZIP, interessiert mich aber nicht, kann auch WebRTC, und WebRTC ist eigentlich das Interessante. So, und wie das aktuell funktioniert, wie ich das mache mit der aktuellen Software, ist folgenderma\u00dfen, ich nehme FFmpeg als Library, ruf RTSP von den Kameras ab, das machen wir jetzt auch gleich im Stream. Insgesamt wird das heute vielleicht 1-200 Zeilen, das wird nicht viel. Einfach so mal testen, ob's geht, wenn's geht, ist gut, wenn's nicht geht, hab ich Pech. Das ruft den Stream von den Webcams ab und decoded den Stream aber nicht. Das ist grad der Witz an dem, was ich gebastelt hab. Die ganzen anderen Video-Streaming-L\u00f6sungen, die machen erstens nix \u00fcber WebRTC oder die wenigsten, und die decoden und encoden den ganzen schei\u00df Bild rum. Was hei\u00dft, du kannst da gar nicht mal wirklich viele Kameras auf so was wie einen Raspberry Pi laufen lassen. Sondern was ich mache ist, ich nehm den Stream von der Kamera, empfange den mit FFmpeg, aber ich decode den Stream nicht. Ich kopiere mir einfach nur die einzelnen Pakete und schreib die dann quasi \u00fcber WebRTC in den Browser rein. Das setzt nat\u00fcrlich zwei Dinger voraus, dass die Kamera einen Codec verwendet, den der Browser versteht. Und umgedreht, dass der Browser einen Codec unterst\u00fctzt, den die Kamera verwendet. Okay, so war's, wie es aktuell funktioniert. Und mir geht's halt auf den Keks, dass ich so eine \u00fcbelste Hybridgeschichte hab aus relativ viel Go und.NET Core, ASP.NET f\u00fcr die Web-Anwendung. Das ist nicht sch\u00f6n, macht auch ab und zu mal irgendwelche MemoryLeak-Probleme. Ich glaube, ich hab bei dieser Geschichte mehr MemoryLeaks gesucht, als die letzten zehn Jahre zusammen. Weil gerade Go an sich ist ja kein Problem,.NET an sich ist auch kein Problem. Aber wenn man da in Top macht, gibt's ein paar Problemchen ab und zu mal. Manchmal crasht's auch random und man wei\u00df nicht warum. Das hab ich jetzt soweit alles hingekriegt, das l\u00e4uft jetzt ziemlich stabil. Aber es w\u00e4r nat\u00fcrlich sch\u00f6n, wenn ich.NET Library verwende. So, was ist eigentlich der Unterschied zwischen WebRTC und WebSockets? Das sind zwei komplett unterschiedliche Paar Schuhe. WebSockets ist... ist quasi... da muss ich jetzt erstmal... Also normalerweise ist HTTP ist ja Response. Also du schickst was hin und kriegst eine Antwort, fertig. Also HTTP ist nicht... hat kein State in dem Sinn. So, und da haben sie sich gedacht, okay, es w\u00e4re ja auch nicht schlecht, wenn man quasi eine konstante Verbindung vom Server zum Client haben k\u00f6nnte. Nicht nur Client Request Server antwortet, sondern auch, dass der Server den Client benachrichtigen k\u00f6nnte, wenn sich was \u00e4ndert. So, irgendwelche Live-Notifications oder sowas. So, und daf\u00fcr ist WebSocket da. WebSocket ist eigentlich nur so ein Message-Protokoll, was \u00fcber lang laufende TCP-Sessions unter der Haube, die quasi erm\u00f6glicht, dass du vom Server den Client benachrichtigen kannst, wenn sich was getan hat. Das erm\u00f6glicht... das geht HTTP nicht. Hat Max seinen WebSock schon geh\u00f6rt? Nee, was? Das funktioniert... das ist so nicht gedacht mit HTTP. Und mit WebSockets geht das Ganze. So, und WebRTC ist noch was anderes. WebRTC ist in der Hauptsache ein Protokoll f\u00fcr Audio-Video-\u00dcbertragung mit relativ geringer Latenz vom Browser zu einem anderen Browser. Oder von einem Client zum anderen Client. WebRTC kann zwar auch Messages \u00fcbertragen, das ist aber ziemlich gro\u00dfe \u00dcberschneidung mit WebSockets, wenn man da einfach nur Data-Channel-Text \u00fcbertr\u00e4gt. Daf\u00fcr w\u00fcrde ich auch kein WebRTC verwenden. WebRTC ist eigentlich haupts\u00e4chlich f\u00fcr Audio-Video-Kram. DollyJoker, f\u00fcnf Monate. Dankesch\u00f6n. Excellent Subscription. Hast du schon mal was mit XMPP? Das ist Dings, wie hei\u00dft es? Jabber, ne? XMPP. Nee, habe ich schon nichts gemacht. Also, ich habe schon welche benutzt, aber nicht verwendet. Genau, und das ist die Library, die ich aktuell benutze f\u00fcr WebRTC-Kram. Das, was ich euch gerade im Browser gezeigt habe. F\u00fcr die Kameras. Und Interop sagt halt go.net. Deswegen habe ich mich sehr gefreut, vorhin, als ich diesen Kollege hier entdeckt habe. N\u00e4mlich, die Library scheint es noch gar nicht so lange zu geben, ehrlich gesagt. Zumindest nicht mit WebRTC-Support, weil die ganzen Beispiele sind doch erst ein paar Tage alt. So, und das ist wieder so ein komischer Livestream an Musik, der sich nicht entscheiden kann, wie laut was ist. Ich mache jetzt irgendwie mal sowas da an. Okay, das w\u00e4re fast ein bisschen viel gechillert. Okay, guck mal, ob das was taugt. Deswegen habe ich mich echt gefreut, als ich vorhin die Library gefunden habe. Die hat seit noch nicht allzu langer Zeit, w\u00fcrde ich sagen, WebRTC-Support. Das sieht man n\u00e4mlich daran, dass, wenn man sich die Beispiele anguckt, die sind teilweise nur 5 oder 4 Tage alt. So, und es gibt wirklich nur ziemlich wenig WebRTC-Libraries, mit denen man das machen kann. Die besten sind im Browser eingebaut. Die funktioniert n\u00e4mlich auch. So, dann gibt es die eigentliche Chrome WebRTC-Implementierung. Das ist, was wei\u00df ich, eine Millionenzeile C++ oder sowas. Dann gibt es noch das hier. Es gibt irgendeine Python-Implementierung, die aber total viele Probleme hat mit H.264-encoded-Videos. Und es gibt das hier. Ansonsten gibt es nicht allzu viel. Also das ist wirklich nice. Wenn ihr mal was anderes kennt, sagt Pride, ich kenne nur diese paar. Und das hier ist mit Abstand die beste Implementierung. Diese haben auch am einfachsten zu benutzen. Aber wenn man nicht komplett alles in Go macht, ist es ein bisschen eklig. Dazu kommt, dass man f\u00fcr Audio-Video-Zeug sich Go an sich gar nicht so sehr anbietet, weil Go ziemlich mies ist, wenn es um Zusammenarbeit mit C-Libraries geht. Und wenn man Audio-Video-Zeug macht, gibt es zwei Sachen. Es gibt G-Streamer und es gibt FFmpeg. Und das ist beides in C. Das hei\u00dft, wenn ich Go benutze f\u00fcr Audio-Video, muss ich permanent VLC... Ja, VLC ist was eigenes, aber mit FFmpeg dabei. Also die haben FFmpeg noch zus\u00e4tzlich dabei f\u00fcr das, was sie nicht selbst k\u00f6nnen. Aber haupts\u00e4chlich ist es G-Streamer und FFmpeg. Ich glaube mir, au\u00dfer VLC f\u00e4llt mir ehrlich gesagt keine Software an, die VLC als Library verwendet. G-Streamer ist tats\u00e4chlich im Profi-Umfeld recht beliebt, habe ich mir sagen lassen. Keine Ahnung, kann ich weder best\u00e4tigen noch was dagegen sagen. Aber FFmpeg ist ansonsten in so ziemlich jeder Software, die Videos abspielt und die nicht unter Only-Windows l\u00e4uft, ist FFmpeg am Werk f\u00fcr Videos. Oder G-Streamer. Genau, und der Interop zwischen Go und C ist halt ein bisschen lahm und auch eklig. Deswegen ist Audio-Video in Go halt doof, weil die gr\u00f6\u00dften Libraries eben in C sind. Excellent, aber bevor ich jetzt lange labere, wir fangen jetzt mal an. Da wird es glaube ich relativ klar, was ich mache. Ich brauche wieder mal ein Test-Video. Wo ist das Test-RTSP hier, den da? Den verwenden wir wieder zum Testen, den Stream. RTSP-Stream. Huge-Quali-Stream, aber ist egal, wenn das Video l\u00e4uft, dann l\u00e4uft es. Also, Go ist eine super Sprache im 079. Also, bis auf ein paar Sachen, die mir echt auf den Keks gehen. Aber sicher ist Go cool. Wenn man aber Interop zu anderen Sprachen braucht, ist Go nicht so gut. Also, wenn man in Go Libraries verwenden will, die es eben nicht in Go gibt, dann ist es nicht so sch\u00f6n. Dann ist es sogar in Python theoretisch schneller, wenn du C-Interop machen willst. Daf\u00fcr ist der Rest nicht sonderlich gespint. So, also. Ach nee, Moment, ich wollte ja noch die IDEs aktualisieren. Coolbox. Oh, excellent. Excellent. 1KS, was ist das jetzt? Warum startet meine Jetplanes Toolbox nicht? Was ist denn das? Hallo? Toolbox starten, please. Ich bin verwirrt, warum geht das nicht? Ich will einfach nur mein Zeug updaten. Weil ich, what? Und, ah, ich habe bestimmt Kernel updaten. Ich reboote mal. Reboot hilft immer. Excellent, Reboot. Das ist fast schon Windows-Taktik. Geht es nicht dran, Rebooten f\u00fcr eine Runde? Ich glaube, ich habe ein Kernel-Update gemacht, ja. Deswegen meckert er auch wegen irgendwelchen Modulen. Also, ich muss dir ehrlich sagen, also das, was ich, ich muss mal den Chat aufmachen, dass ich dann zwischenzeitlich mal ein paar Sachen besprechen kann. Also, das, was der Imp schreibt, ist auch eine Sache, da steht man \u00f6fters mal davor. Wenn man eine Weile aktiv ist, hat man sich so die einzelnen Sachen schon zusammengescriptet, die man \u00f6fters braucht. Da steht man auch \u00f6fters mal davor und muss sich \u00fcberlegen, programmiert man das irgendwie mal ordentlich neu in einer anderen Programmiersprache. Und ich bin f\u00fcr mich bisher zu dem Schluss gekommen, nee, ich lasse alles, wie es ist. Weil ich habe schon viele Sachen versucht, neu zu basteln und bis die neu gebastelten Sachen so gut sind wie die alten Sachen, der Aufwand lohnt sich meistens nicht. Deswegen lasse ich meine eklichen, gehackten Sachen auch ekliche, alte, gehackte Sachen sein und mache manche Sachen vielleicht mal neu, aber nur, wenn mir neue Ans\u00e4tze zu einfallen, sonst lasse ich es dann. Au\u00dferdem ist das sch\u00f6ne an Bash, du kannst halt \u00fcberall drauf ausf\u00fchren. Alles Geschmackssache. So, mal gucken, ob jetzt das mit der Toolbox geht, ob ich jetzt updaten kann. Ah, jetzt, jetzt. Java, geht. So. Die k\u00f6nnen sich nicht entscheiden, wie laut der Stream ist hier. Ich lasse es jetzt einfach mal so. Browser Extension, nein. Also wir aktualisieren mal die ganzen Ideen. Und dann legen wir los, weil es ist schon 22 und 22. Aber wie gesagt, es gibt nicht viel. Also es gibt nicht viel Code da. Ich denke mal, es gibt am Ende vielleicht, was wei\u00df ich, 50 Zeilen HTML und irgendwie 200 Zeilen.NET. Mal gucken, mal gucken. Schauen wir mal. Guck mal bitte im Discord unter Memes, da hat hier mal ein Beat unter einen Soundschwipsel von dir gepackt. Okay, das gucken wir gerade nochmal kurz. Aber Chat, ich muss euch schnell ausmachen, nicht, dass ich im falschen Channel bin. Man wei\u00df ja nie. Und Discord geht ja immer in den Channel. Nicht, dass ich da oft gucken w\u00fcrde oder so, aber ja, man wei\u00df nie. Man wei\u00df nie. Okay, also ich bin im richtigen Channel. What the fuck ist denn das hier? Warum ist hier Pok\u00e9mon am Start? So, wo muss ich hin? Das mache ich mal kurz zu hier. Wie kann man das nicht zu machen? Wo muss ich hin? Memes? Memes? Das hier? What the fuck ist das? So schnell? Oh Gott. Ein wahres Meisterwerk. Oh Mann, kommt da noch was anderes? Kommt da noch was anderes? Ja, das ist ja nice. Ein wahres Meisterwerk. So, wir haben geupdated. Gut, jetzt k\u00f6nnen wir loslegen. Oh, das ist doch so bescheuert. Evaluate, wir evaluieren. Zum Gl\u00fcck, zum Gl\u00fcck kann ich meine, meine Trial fortsetzen. Okay, also, what? What?.NET Core Web Application. Eine Web API Application. Die nennen wir, wie nennen wir die jetzt? Monac-S. Oh, komm wursch, wieder Kram-HR-Store, bla, bla, bla, bla, noch Authentification, alles gut, alles richtig. Anlegen, Terminal mal aufmachen, hier ohnehin schieben. So, zack. Warum ist der Schrift so klein? Das ist ja, da sieht es ja gar nichts. Hat er meine, hat er meine Settings vergessen oder so? Font? Wo ging das nochmal? Font, Appearance, Font Size? Ich finde das voll versteckt. Editor Font? Font? Ah ja, hier. Ich finde das \u00fcbelst versteckt bei diesen JetBrains Sachen, immer die f\u00fcr Farben und Schriftgr\u00f6\u00dfe und so. Hack brauchen wir. Hack 16. Hack 18? Hack 18, Hack 18, ist gut. Ja, okay. Warte mal, bitte. Ja, exzellent. Wir k\u00f6nnen es nochmal, wir k\u00f6nnen es nochmal eine Stufe gr\u00f6\u00dfer machen. Und mal 19. Ja, okay, ja, jetzt erkennt man es doch eigentlich ganz gut. So, Rider Projects Monarchs.net Watch Run. Ach so. So, jetzt machen wir mal hier einen Browser auf. Ich mache mal einen Chrome auf und gucke, ob die Seite da ist. Local Host 5000. Ach, das hat Redirect auf, hat SSL. Okay, das m\u00fcssen wir erstmal alles abstellen. Also, Authorization weg, KTPS Redirection weg. Brauche ich keinen Mensch. Dann legen wir noch einen Ordner f\u00fcr die Webseite an und machen schon mal eine leere Webseite rein. Dann k\u00f6nnen wir loslegen. Directory www root. So, dass der die Fileserver, dass er die Webseite ausliefert, aus dem, statische Webseite aus dem Ordner ausliefert. Gibt es denn was zu den Grafikkarten von AMD? Ich wei\u00df nicht, ob sich, ich meine, soll ich? Ich meine, kann ich machen. Ich wei\u00df nicht, ob das so spannend wird, ehrlich gesagt. Kann ich, ich meine, kann ich machen. Wann ist denn das? Donner, Mittwoch? Der Stream? AMD? AMD? AMD gerade ein bisschen blablabla. Radiant Reveal. Da, 28.10. Um wie viel Uhr? 17 Uhr. Ja, k\u00f6nnen wir machen, aber ich wei\u00df nicht, ob es so spannend ist. Ich habe da nicht so gro\u00dfe Hoffnung, ehrlich gesagt, drin, dass die bei AMD da was vorstellen, was Nvidia Konkurrenz macht. Aber man wei\u00df ja nicht. So, legen wir erstmal eine Webseite an. Irgendwas. Index html. Und da schreiben wir jetzt drauf. Test 0w. So, und gucken, ob das funktioniert. Live Server starten. Da ist er. Eine Runde 0w. Beste h\u00fcbscheste Seite aller Zeiten. So, da k\u00f6nnen wir einmal anfangen. Ich w\u00fcrde sagen, als erstes m\u00fcssen wir die Library einbinden, dass wir das ausprobieren k\u00f6nnen. Also wir brauchen als Library einmal das da. Das brauchen wir n\u00e4mlich f\u00fcr WebRTC und wir brauchen FFmpeg f\u00fcr die Webcam Videos. Exzellent. Da. Jawoll. Aktuelle Testversion. Von was lesen die? Testversion? Releases? Wo stehen Releases? Manchmal finde ich mich auf GitHub irgendwie nicht zurecht. Sollten nicht die Releases drunter stehen? Hier, guck mal. Also die sind wohl gerade ganz aktuell dabei, was das angeht. Wenn es die letzte Testversion vor 5 Tagen gegeben hat, dann ist auch der WebRTC Support noch relativ neu. Ich bin auch \u00fcbelst verwirrt. Wisst ihr, was mich bei GitHub, bei dem GitHub, die es sein am meisten verwirrt? Das Releases manchmal rechts stehen und manchmal unten. Fr\u00fcher war das relativ einfach, da hast du Releases immer hier oben in der Leiste gehabt. Musstest du fr\u00fcher noch auf Code klicken? Ich wei\u00df, du hast die Releases immer in der Leiste gehabt. Die hast du einfacher gefunden. So, also installieren wir mal die Library. Install. Das ist die, die ich ausprobieren will. So, und dann brauchen wir noch FFmpeg. Ohne FFmpeg geht nichts, was Video, Audio und Webcam angeht. Zack, FFmpeg. Gut, da haben wir unsere Abh\u00e4ngigkeiten dabei. Die Murke ist gut, na dann. Ich habe die mal auf gut Gl\u00fcck angemacht, das ist hier der Stream. Ich hoffe, ich komme jetzt nicht gleich hier DMC, Dingsbums, Takedowns oder so, weil ich irgendeinen Stream laufen habe. Aber ich glaube, das ist Musik, die ist nicht so im Fokus der Stonks anw\u00e4ltend. So, also wir machen jetzt erstmal die Webseite, soweit, dass ich was sehen w\u00fcrde. Also wir brauchen einen Videoplayer ohne Stonks, weil die Stonks setzen wir sp\u00e4ter aus dem JavaScript raus. Da kann ich wieder meine Huge Massive JavaScript Skills walten lassen. \u00dcbrigens, das hier wird sich wahrscheinlich jeder JavaScript Mensch, wird sich sagen, Max, was macht er da? Aber ich kenne keinen besseren Weg, wie ich in JavaScript, in meinem Script Tag eine Assungfunktion verwenden kann. Wenn da einer von euch eine Ahnung hat, dann sagt mir Bescheid, ich wei\u00df nix besseres. Ich wei\u00df, dass das nicht sonderlich JavaScript Style ist. So, also, wir haben einen Videoplayer, der macht Autoplay, der kriegt Controls und ist standardm\u00e4\u00dfig Muted. Wenn ihr mal eine Anwendung, oder wenn ihr mal was programmieren solltet, mit dem Videoplayer Element, und ihr wundert euch, dass ihr, par auf, Leute, jetzt kommt Massive Tip, das Problem hatte ich n\u00e4mlich auch schon \u00f6fters. Und ihr wundert euch, dass auf mobilen Ger\u00e4ten euer Video nicht funktioniert, dann liegt das daran, dass ihr es nicht gemuted habt. Weil die ganz alle Mobile Browser, oder mir f\u00e4llt jetzt kein Mobile Browser an und weder Android noch IOS macht das so. Die spielen nur Videos ab, wenn sie gemuted sind. Wenn Videos nicht, also wenn Video Element nicht gemuted ist, spielt es weder Android noch IOS ab. Also wenn ihr mal was bastelt und ihr fragt euch, warum irgendwelche Sachen nicht abgespielt werden, dann weil ihr es nicht gemuted habt. Ansonsten funktioniert's, aber ist ja auch verst\u00e4ndlich, weil keiner will auf eine Webseite gehen, erst mal angeschrien werden von 30 Werbesachen. SQL WebSockets Lego, was soll denn SQL WebSockets sein? Also SQL ja, WebSockets ja, aber WebSockets haben doch mit SQL gar nichts zu tun. Wie gesagt, wenn ihr keine Library findet, um direkt auf eure Datenbank zugreifen zu kommen, macht GraphQL davor, das ist das einfachste, was du machen kannst mit Webrequests. Aber WebSockets ist f\u00fcr Kommunikation vom Server zum Client gedacht, um dass der Server den Client benachrichtigen kann. Inwieweit das jetzt was bringt bei eurer Datenbank, kann ich schlecht beurteilen. Oh, der Tanzer hat BigBrain. Leute, ich hab mir \u00fcbrigens was \u00fcberlegt f\u00fcr den Chat. Wir haben ja manchmal schon richtig krasse BigBrain Antworten im Chat gehabt. Und ich werd das jetzt so machen, wenn es irgendwelche exquisite BigBrain Antworten gibt. Es gibt jetzt so einen VIP-Tag, hab ich gesehen, auf Twitch. Da hab ich mir \u00fcberlegt, dass ich f\u00fcr einen Monat einfach den BigBrain Antwort Leuten einen VIP-Tag gebe. Man hat da nix von, aber es sieht cool aus. Und vielleicht hat man ja Gl\u00fcck und man kann diesen VIP-Tag sogar customisieren, dann kriegen die einen BigBrain Emote. So, also Moment, der Chat hat gerade Folgendes geschrieben, ich soll das hier machen. Ok, das klingt logisch, dass das funktioniert. Das klingt, es sieht zwar ein bisschen h\u00e4sslich aus, aber das sollte funktionieren. Guck mal mal in die Konsole rein, ob das, ja das funktioniert. Also ich versuch jetzt mal zu erkl\u00e4ren, was das macht und dann sagt ihr mir, ob ich richtig liege. Also das da ist einfach nur ein Block quasi in JavaScript, der keine tiefere Funktion hat. Also wahrscheinlich brauch ich das, um das zu gruppieren irgendwie, oder geht das auch so? Nee, das geht nicht. Also das ist irgendwie so eine Blockgeschichte in JavaScript oder sowas, was auch immer. So, das hier ist der Async-Keyword. Das da ist, dass das eine Funktion ist, die keine Parameter kriegt. Das hier ist ganz normales Lambda-Arrow-Dingsged\u00f6ns. Das ist der Body von der Funktion. Und der macht Log 1, 2, 3, Kappa 1, 2, 3 in Chat auf die Konsole. Und das hier ist, dass die Anonyme Funktion direkt ausgef\u00fchrt wird, wenn ich das richtig verstehe. Wenn ich das richtig verstehe. Es sieht aber nicht gerade sch\u00f6n aus, muss man sagen. Ist korrekt. Nice. Liko, daf\u00fcr ist WebSockets das Beste, was ihr machen k\u00f6nnt. Ich kann dir noch was, je nachdem, was ihr als Backend verwendet. Solltet ihr mal.NET verwenden als Backend, w\u00fcrde ich euch empfehlen, anstatt WebSockets gleich das dazu verwenden. Das ist quasi der Microsoft-Aufsatz auf WebSockets. Die ein paar Sachen abnimmt. Aber ansonsten ist WebSockets absolut Standard und funktioniert wunderbar. Unsere Webseite ist sch\u00f6n h\u00e4sslich und funktioniert. Eine Sache machen wir nochmal. Style f\u00fcr das Videotag. H\u00f6he 100, Breite 100. Das reicht. Das reicht. Exzellent. Fullscreen Video-Player. Vielleicht soll ich die H\u00f6he mal weg, gleich mal nur die Breite. Nee, das geht gar nicht. Die H\u00f6he. Nur die H\u00f6he. Na ja, was auch immer. Das wird schon passen. Was? WV habe ich doch. Ah, VW. Jaja, richtig. Ah ja, jetzt passt es. Jetzt ist es auch nicht breiter. Okay, exzellent. Jetzt haben wir unsere Videoplayer da. Ja, also mit Blazer, da bin ich ja mal gespannt. Wir haben das mal ausprobiert vor einem Jahr oder so. Da gab es noch richtig viele Probleme. So mit JavaScript aufrufen und sonst was. Mittlerweile gibt es weniger Probleme. Ich habe letztens erst einen Webcast dr\u00fcber gesehen. Aber die haben immer noch das Problem, dass halt die.NET Runtime runtergeladen werden muss. Und das ist halt irgendwie 8 MB. Und wenn du 8 MB runterladen willst, dann ist es ja schon quasi wie als letzter Halb Facebook inklusive einem JavaScript runter. Was m\u00f6chtest du programmieren? Also ich habe ja aktuell so eine Video\u00fcberwachungssoftware gebastelt mit WebRTC,.NET und Go zusammen. Go, weil die einzig sinnvolle WebRTC Library, die gut funktioniert hat, in Go programmiert ist..NET und Go Interop suckt allerdings. Und ich habe heute eine Library entdeckt, die WebRTC in.NET macht. Und da bin ich aber echt gespannt drauf. So, jetzt m\u00fcssen wir folgendes machen. Als erstes machen wir mal den FFmpeg-Teil, weil der FFmpeg-Teil ist easy. Den FFmpeg-Teil habe ich schon oft gemacht, da wei\u00df ich, wie es funktioniert. Wir brauchen unseren RTSP-Teststream, den da. Normalerweise, by the way, macht man das nicht so. Ich sage es gleich. Normalerweise macht man nicht hier in diesem Startup-File von der Web-Anwendung irgendwelche gro\u00dfartigen Background-Io-Audio-Video-Geschichten. Da machst du normalerweise einen eigenen Background-Dienst, den du hier nur startest. Kann ich auf die Test-Seite? Das k\u00f6nnen wir tats\u00e4chlich machen. Ich habe doch noch irgendwo einen Hetzner-Server rumstehen, da kann ich das mal draufpushen. Da k\u00f6nnt ihr dann drauf gehen und gucken, wie toll Latency-Free das funktioniert. So, also. Wir machen mal eine Funktion hier f\u00fcr FFmpeg. Wieso ist Kappa Gold? Oh, das ist ein ganz schlechter Chebat. Ich glaube, das ist eine FFZ-Geschichte, oder? Dass Kappa Gold ist. Mein Kappa ist wirklich Gold. Warum ist... Warum ist der... Also, es gibt ja manchmal einen goldenen Kappa, aber ich glaube nicht, dass ich den abkriege. Es gibt ja manchmal goldenen Kappa, random in irgendwelchen Channels, aber ich glaube nicht, dass der bei mir gerade im Channel wirklich ist. Golden Kappa. Der ist gerade \u00fcberall, ja. What? Okay, wir m\u00fcssen jetzt mal hier loslegen. Okay, also wir machen jetzt erstmal den FFmpeg-Part. Den FFmpeg-Part wei\u00df ich, wie es halbwegs funktioniert. Ich sage halt nur dabei, normalerweise macht man einen Background-Service. Ich mache es jetzt testweise hier einfach mal im Start-up. Also, wir starten den Hintergrund-Thread, weil diese Audio-Video-Geschichte, die muss nat\u00fcrlich im Hintergrund laufen. Ich kann jetzt nicht einfach hier in meinem Programm nebenbei Webcams abrufen. Also, wir starten jetzt hier mit irgendwas. Wobei, nee, wir machen es ganz anders. Wir machen hier unten irgendeine Funktion. Public... Public... Cube. Bester Name aller Zeiten. Loop. So, und dann starten wir das hier in einem eigenen Thread und gut ist Loop. Bester Name. Also, wenn das nicht mal hier Expressive hoch 10 ist, dann wei\u00df ich auch nicht. Was? Enter Completed Insert Newline. Ja, okay, was auch immer. Also, ich finde Loop ist ein sehr guter Name daf\u00fcr. Excellent. Exquisite Name. So, und den m\u00fcssen wir den mal mal Private und den mal mal Unsave, weil... Unsave. Wir m\u00fcssen das Ganze Unsave machen, weil das ist C-Code und C-Code aufrufen ist Unsave. Und damit das Ganze funktioniert, m\u00fcssen wir dem hier sagen, irgendwo hier... Oh, wo ist das denn Rider versteckt? Hier Allow Unsave Code. Excellent. Normalerweise erlaubt das C-Sharp nicht, weil da kann es ja alles M\u00f6gliche machen und Sachen kaputt machen und Speicher kaputt machen und sonst was machen im Hintergrund. Aber das muss halt einschalten. Normalerweise ist es so gedacht, dass man Unsave nicht in seinem Hauptprogramm verwendet, sondern dass man Unsave quasi in der eigenen Library rappt. Aber gut, wir m\u00fcssen FFmpeg verwenden, da bleibt einem nichts anderes \u00fcbrig. Also, jetzt legen wir... Das ist die Adresse zum Stream. Wie ich es noch im Clipboard-Manager habe. So, also das ist die Uhr von unserer Testwebcam. Ich sag mal stellvertretend Webcam. Es ist zwar ein Video-Stream, aber es ist ein RTSP-Video-Stream. Das ist das, worauf es ankommt. Ich hab doch irgendwo was, wo ich ein bisschen abgucken kann. Da muss ich den Kram nicht neu machen, weil FFmpeg hab ich schon \u00f6fters gemacht. Genau, ha, ich hab was, ich hab was gefunden. Exquisite, da kann ich jetzt abkopieren. Nice. Ich cheat jetzt, ich kopiere was aus einem anderen Projekt. Bam. Da wei\u00df ich n\u00e4mlich, dass es funktioniert mit Video-Abrufen. So, also das Ganze m\u00fcssen wir starten, das haben wir gestartet. FFmpeg, Context. So, also ich erkl\u00e4r auch gleich, was es macht. Also, FFmpeg kennen die meisten von euch wahrscheinlich. Das kennen die meisten von euch wahrscheinlich als Kommando-Zeilen-Tool, FFmpeg. Alternativ kennen vielleicht manche auch FFplay oder FFprobe, aber das ist alles FFmpeg. Und viele Formate, die VLC abspielen kann, kann VLC auch nur wegen FFmpeg. \u00c4h, \u00fcbrigens, ich muss die Einr\u00fcckung \u00e4ndern, das ist viel zu viel Einr\u00fcckung hier. Wie macht man das im Rider nochmal? Tabs? Tabs? Nee. Indent? Hier? Nee. Unten rechts? Ah, exellent, exellent. Hier, also. Indent, Intent, in zwei und zwei. Zack. Und jetzt sagen wir Reformat. Haha. Gleich, oh, das ist doch schon ein FFmpeg. Und jetzt sagen wir Reformat. Haha. Gleich, oh, das ist doch schon viel besser. Wie ist bei euch? Vier Spaces oder zwei Spaces? Aber unabh\u00e4ngig von der Sprache, was ist euch lieber? Vier? Zwei? Vier? Okay, viel mehr machen vier, h\u00e4tte ich jetzt gar nicht gedacht. Aber gerade in so Sprachen wie C-Sharp, wo halt auch \u00f6fters mal mit Curly Braces um sich geschmissen wird, dann spart das unglaublich Einr\u00fcckungstiefe. Also ich finde zwei viel praktischer. F\u00fcnf? Okay, f\u00fcnf ist exotisch. Oder vielleicht war es auch G-Bait. Oder wir machen einfach alles in eine Zeile. Genau, keine Zeile. So, also was das hier macht, ist Folgendes. Das ist die Uhrl zu unserer Webcam. Zu unserem Testvideo in dem Fall. Das hier setzt ein Timeout. Wenn f\u00fcnf Sekunden lang keine Antwort mehr kommt, dann bricht er das Ganze ab, weil sonst haben wir, bleiben wir h\u00e4ngen. Sackt. So, das ist FFmpeg-Intent. Das braucht man nicht. Und das hier startet den Stream von dieser Uhrl. AV-Format Open Input, da \u00fcbergibt man einen Kontext. Das ist so ein internes FFmpeg-Ding und die Uhrl f\u00fcr den Stream. Und das war es im Endeffekt, was man in FFmpeg machen muss, um Stream zu \u00f6ffnen. Jetzt muss man, das war nat\u00fcrlich jetzt ein bisschen zu sp\u00e4t. Man muss nat\u00fcrlich den Stream noch auslesen. Brauchst du noch Rainbow-Prakets? Gibt es das f\u00fcr Ryder? Also in Visual Studio Code habe ich Rainbow-Prakets. Ich habe keine Ahnung, ob es hier Rainbow-Prakets gibt, aber wahrscheinlich als Addon. Aber brauche ich nicht unbedingt. So, okay. Was der macht, ist, der guckt, ob er den Stream \u00f6ffnen kann. Wenn er den Stream \u00f6ffnen kann, dann kann er den Stream \u00f6ffnen. Wenn er den Stream nicht \u00f6ffnen kann, dann wirft er einen Fehler. So, next. Jetzt gucken wir erstmal, ob das ein g\u00fcltiger Stream ist. Ich copy-paste, das ist nicht so, dass ich hier der ultra-mega-schnell-Hackster bin. Ich copy-paste das gerade aus einem anderen Projekt, weil ich bilde mir ein, das hat funktioniert. So, weiter. Jetzt gucken wir erstmal, ob der irgendwelche Metadaten vom Stream lesen kann. Wunderbar, ich glaube, das brauchen wir gar nicht. So, und jetzt kommt was, was ich immer gerne vergesse, wenn ich das neu bastle. Und zwar, man muss schauen, ob es einen Videostream \u00fcberhaupt gibt. Weil es gibt ja durchaus RTSP-Streams, die audio-only sind. Deswegen muss man gucken, ob es einen Videostream gibt. Und das hier guckt, ob es einen Videostream gibt. Der loopt alle Streams durch, die es gibt, und guckt, ob der Media-Type Video ist. Und wenn es einen Videostream gefunden hat, dann setzt den, und ansonsten sagt er, no Videostream-Forten geht raus. Was wird das? Ich probiere eine Web-RTC-Library aus, die ich heute auf GitHub gefunden habe, mit der man zum Beispiel Webcams oder \u00dcberwachungskameras sich mit ziemlich niedriger Latenz in den Browser streamen kann. Ich habe sowas schon mal gebaut, allerdings in.NET und das Web-RTC-Zeugs in Go. Und nachdem der Interop zwischen Go und.NET nicht so sch\u00f6n ist, wollte ich mal so eine.NET-only-L\u00f6sung ausprobieren. Mal gucken, wie gut das funktioniert. Ok, also Videostream haben wir. Jetzt muss man das da machen. Alles klar. Also wir gucken jetzt, ob es in dem RTSP-Stream einen Videostream gibt. Wenn es einen Videostream gibt, machen wir weiter. FFPlay, ich glaube, das kann man sich an der Stelle auch sparen, wenn man Open gemacht hat, aber machen wir mal. So, und jetzt sagt er mir Connected zur URL von der Webcam oder zum Videostream. Und jetzt kommt das eigentliche Auslesen dran. Da braucht man n\u00e4mlich eine... Ups, ich habe etwas vergessen. Und hier unten muss ich noch Unref machen, dass es wieder weg ist. Und hier ist dann Zeug machen mit Videoframes. So, genau, also hier \u00f6ffnet er den Stream und sucht sich den Videostream raus aus dem RTSP-Stream. Und hier macht er eine Endlosschleife, die immer wieder ein neues Paket anlegt. Das kann man \u00fcbrigens auch optimierter machen, man muss das gar nicht immer neu initialisieren, kann es dar\u00fcber schreiben. Und hier liest er jetzt quasi ein Frame nach dem anderen von der Quelle. Ist es eigentlich irgendwie m\u00f6glich Twitch-Streams als RTC oder \u00e4hnliches zu bekommen? Direkt wahrscheinlich nicht, aber ich meine, du kannst... Kann FFmpeg Twitch? M\u00fcssen wir mal schauen. Kann FFmpeg Twitch? Wahrscheinlich nicht. Ich meine, Twitch war mal HLS, aber ich glaube mittlerweile ist Twitch irgendein HTTP2-Streaming. Nein, okay, FFplay kann kein Twitch. Wenn FFmpeg das gekonnt h\u00e4tte, dann h\u00e4tte es das umwandeln k\u00f6nnen. So, und der liest jetzt endlos lang diesen Input hier von diesem Stream, von diesem Test-Video. Und liest quasi ein Frame nach dem anderen aus und wirft ihn wieder weg. Und hier kann ich dann sp\u00e4ter den Kram... Guck mal, es funktioniert! Habt ihr das gesehen? Ganz nebenbei, das Connecten zum Stream funktioniert schon mal. Ich kann euch ja sogar mal beweisen, dass es funktioniert. Wir lesen jetzt mal ein paar Sachen aus den einzelnen Video-Frames aus. Zum Beispiel... PTS. \u00dcbrigens, Audio-Video-Sachen ist wirklich eine richtige Wissenschaft f\u00fcr sich. WTF? PTS sollten niemals negativ sein? Und wie geht das? Ich guck doch, ob es kleiner Null ist und wenn es... Ach nee, oder muss ich hier machen. Das ist ja schon erst ein Bug gefunden. Aber der Timestamp sollte immer positiv sein. WTF? Okay, der buggt einfach nur am Anfang ein bisschen rum, glaube ich. Aber... Also, um immer ein bisschen Licht ins Dunkel zu bringen, wie das unter der Haube mit Videos funktioniert. Jeder Video-Frame hat zwei Timestamps drin. Es ist jetzt Big Brain und muss man wahrscheinlich eigentlich gar nicht wissen, es sei denn, man macht was mit Audio-Video-Kram. Jeder Frame von einem Video hat zwei Timestamps. PTS, DTS. Meine Frage an den Big Brain Chat, hat irgendjemand eine Ahnung, was der Unterschied ist? Ich werde es auch gleich erz\u00e4hlen. Aber nur, man w\u00fcrde mich interessieren, ob vielleicht irgendwelche Leute haben, die das zuf\u00e4lligerweise wissen. Also, wenn du Audio- und Video-Coding studierst, dann musst du das wissen. Oder sollte man das wissen? M\u00fcsstest du das wissen, was der Unterschied ist zwischen PTS und DTS? Also, P steht f\u00fcr Presentation Timestamp und DTS steht f\u00fcr Decoding Timestamp. Das bedeutet, es kann sein, dass Frames decoded werden, zu einer Zeit, wo sie noch nicht angezeigt werden sollen. Wenn das der Fall ist, muss man irgendwie einen eigenen Buffer konstruieren. Von, sagen wir mal, 2-30 Sekunden oder von, was wei\u00df ich, 100 Frames oder was auch immer, wie viel man braucht. Und dann muss man quasi decoden. Also, DTS muss eigentlich immer fortlaufen sein. Aber es kann durchaus sein, dass man Frames decoded, bevor sie angezeigt werden sollen, in der unterschiedlichen Reihenfolge. Das hei\u00dft, man muss dann quasi erstmal ein bisschen buffern und gucken, dass man quasi die Timestamps bekommt f\u00fcr die Presentation-Time. Also, PTS-Presentation-Timestamps ist das, was der Videoplayer anzeigen soll und DTS ist, was der Decoder decoden muss. So, und meistens ist das das Gleiche, aber das muss nicht so sein. Wieso hei\u00dft das Projekt Startup? Nein, das Projekt hei\u00dft nicht Startup. Das ist das Standard ASP.NET Core-Template. Die Datei hei\u00dft halt einfach so. Und wir k\u00f6nnen mal gucken, ob die hier bei dem Video immer gleich sind. Wir machen mal tolles Printline-Debugging. Und schauen wir mal, ob die Presentation-Decoding-Timestamps immer gleich sind hier. Ja, guck, hier sind die immer gleich. Aber das muss nicht so sein. Das hier hei\u00dft im Prinzip nur, dass sobald ich den Frame decoden bekomme, kann ich ihn auch weiter schicken, weil der ist dann schon in der richtigen Reihenfolge. Sollte Decoding-Timestamp und Presentation-Timestamp abweichen, dann muss ich erstmal ein bisschen sammeln, bis ich alles beisammen habe, was ich brauche, um es in der richtigen Reihenfolge anzuzeigen. Aber das soll heute nicht unser Problem sein. Ich mach das auch mal wieder raus. So, also Video Decoding funktioniert schon nochmal. Jetzt kommt das n\u00e4chste. Muss ich mal kurz abgucken, wie man so einen komischen ASP.NET Controller genau macht. Also, jetzt m\u00fcssen wir eine WebRTC-Verbindung aufbauen vom Browser zu meinem Backend hier. Was macht eigentlich deine Heizungssteuerung? Der geht's gut. Ich wei\u00df, ich hab euch auch noch nichts von meiner Heizungssteuerung erz\u00e4hlt, aber versprochen, das mach ich n\u00e4chstes Mal. So, lass mal \u00fcberlegen, was brauchen wir denn sonst noch? Wir machen mal eine Sache. Ich will mal gucken, ob ich Memory Leaks hab. Leute, verwendet jemand von euch Rider und hat irgendeine Ahnung, wie man dort anzeigen lassen kann, w\u00e4hrend man hier ein Programm dr\u00fcber laufen l\u00e4sst, wie viel Speicher das gerade verwendet? In Virtual Studio ist das immer rechts oben. In Rider hab ich keine Ahnung, wo das steht. Wenn ich hier zum Beispiel Debuggen anmache, ich bin zu doof f\u00fcr den Speicherverbrauch zu sehen. Keine Ahnung, wo der ist. Deswegen machen wir einfach mal was anderes. Ich mach mir einfach nen Task, der mir alle 5 Sekunden den Speicherverbrauch ausgibt. Aber das ist bestimmt nicht Sinn und Zweck, da sag ich, ich bin blo\u00df einfach zu dumm, zu wissen, wo das im Rider ist. \u00dcbrigens kann ich das auch mal rauskopieren, das hab ich ja auch schon zuf\u00e4lligerweise. Ach nee, Mist. Wunderbar. Was macht der Rider? Memory? Ja, der zeigt, wenn du Breakpoints hast, zeigt der Variablen an. So, jetzt krieg ich alle 5 Sekunden mein, okay, Programm braucht 149 MB. Das ist f\u00fcr ne Web-Anwendung backend okay. Stand da nicht rechts beim Debug-Fenster? Was? Echt? Moment, wo? Hier, das? Nee, also da ist nix drin. Ich seh, also ich seh hier wirklich, in Visual Studio ist es hier rechts oben immer, aber in Rider, keine Ahnung. Letztendlich ist auch wurscht, ich lass es einfach hier unten ausgeben. Printline, also wir haben jetzt hier 148 MB. Ist ein extra Plugin, den sich dottrace, ernsthaft, er braucht ein extra Plugin f\u00fcr? Aber das reicht jetzt erst mal. So, gut, jetzt kommen wir n\u00e4mlich mal zur eigentlichen Geschichte. Wir m\u00fcssen eine WebRTC-Verbindung aufbauen, um das Video zu \u00fcbertragen. Ich \u00fcberleg grad, ich glaube, wir haben alles, was wir brauchen, erst mal eingerichtet. Ach nee, eine Sache, ich sehs hier n\u00e4mlich grad in meinem, in meinem anderen Projekt, das ist ne Sache, die mach ich immer gerne. Die haben es ja so gemacht, fr\u00fcher haben die f\u00fcr ASP.NET immer diese Newtonsoft-JSON Library verwendet, die haben sie nicht mehr drinne, sie haben jetzt ne eigene, die schneller ist, aber irgendwie verwende ich die trotzdem noch lieber, deswegen f\u00fcg ich die jetzt einfach mal wieder hinzu. Da kann ich auch einstellen, dass E-Names keine Zahlen sind, sondern richtige Namen und sowas, das mach ich immer gerne. Und ich glaub, die Performance, da kommt's jetzt echt nicht drauf an. Oh, was hat er f\u00fcr Schmerzen? Ach genau, ich muss ja erst mal adden. \u00c4h, Moment. Ja, auf JSON. Nee, Moment, was, was muss ich adden? \u00c4h, \u00e4hm, MVC, JSON, das da muss ich glaub ich adden, aber keine Testversion, sondern ne echte. Ne echte. Okay, exellent. Gut, jetzt k\u00f6nnen wir loslegen. Also, wir missbrauchen mal diesen Standard-Wetter-Vorhersage-Controller und benennen den um. Den nennen wir mal ein Signal-Controller und machen diesen ganzen anderen Schmodder hier unten weg. Wetter-Vorhersage l\u00f6schen wir auch, braucht kein Mensch. So, und das machen wir auch leer. So. Also, das funktioniert folgenderma\u00dfen, eine WebRTC-Verbindung aufzubauen. Das ist ja was, da kenn ich mich ein bisschen mit aus, weil das hab ich jetzt schon ein paar Mal gemacht. Also, ich krieg das ungef\u00e4hr gebacken, wie man eine WebRTC-Verbindung aufbaut aus dem Browser. Das erste, was man machen muss, ist, das hier ist quasi unser Main in die AVA-Skript. Also, unser Ziel ist jetzt, wir bauen eine Verbindung zum Backend auf. \u00c4hm, und das Backend schickt uns dann die Videoframes von der Kamera, die es hier unten abruft, in den Browser. Soweit die Theorie, wenn alles funktioniert. Ich, ich hab ja meine Zweifel, weil ich wei\u00df noch, was es f\u00fcr ein unglaublich ekliges Rumgefuddel war, bis ich das das erste Mal zum Laufen gebracht habe. Aber ein Vorteil hat's, ich wei\u00df jetzt, was man machen muss, so ungef\u00e4hr. Vielleicht krieg ich das hier besser, krieg ich das besser hin. Aber krieg ich das besser hin. So, was ist der Unterschied, was ist der Unterschied in AVA-Skript, ob ich var, let oder gar nichts verwende oder const. Mein const kann ich mir vorstellen, const kann ich nicht mehr \u00e4ndern. Let und var. Das eine ist lokal, das andere ist irgendwie global. Aber guck mal, ich kann den AVA-Skript, ich kann die Variablen so anlegen. Ich kann sagen l gleich das da. Ich kann sagen let l gleich das da. Ich kann sagen var l gleich das da oder ich kann sagen const l gleich das da. Warum gibt's in AVA-Skript denn eigentlich vier Varianten, wie ich Variablen anlegen kann? Man kann's auch kompliziert machen. Allerdings, wenn man's richtig kompliziert machen will, macht man's in C++. Dann versteht's keiner mehr. Selbst die Standardersteller verstehen's da nicht mehr. Okay, also um eine WebRTC-Verbindung aufzubauen, muss man Folgendes machen. Als erstes brauch ich auf der Gegenstelle irgendeine M\u00f6glichkeit Informationen mit meinem Client auszutauschen. Das mach ich \u00fcber normale HTTP-Requests, machen wir das einfach. Weil WebRTC ist zwar ein Protokoll, das geht in beide Richtungen. Ich kann Videos von einem Client zum anderen schicken und der Client zu mir. Das ist beidseitig. Aber f\u00fcr den Verbindungsaufbau brauche ich irgendeinen anderen Kommunikationskanal, weil die bidirektionale Verbindung gibt's ja noch nicht. Deswegen muss ich das einmalig von Hand machen. Das hei\u00dft, ich mach jetzt einen Request, so stelle ich mir das so vor, nach Slash Signal. Dieser Controller hei\u00dft der so. Und wenn der Controller so hei\u00dft, dann registriert ASP.NET Core automatisch eine Uhrl, die Slash Signal signaligen oder wie auch immer hei\u00dft. Also mach ich mal einen Fetch da drauf. Await, wie es sallt oder so. So, das gibt's ja noch nicht. Achso, Moment, Moment mal. Ich bin ja auch ganz falsch. Ich muss ja, das ist ja der Proxy, \u00e4h, Sekunde. Local Host 5000. Okay. Die Sound-Lautst\u00e4rke kann sich auch nicht entscheiden, oder? Ob's jetzt mal laut oder leise wird. Jetzt wieder leise. Let ist Block Scope nicht kompatibel mit allem ECMAScript 6. Ah. Ha. Ich hab nix verstanden. Also ECMAScript sind die JavaScript-Standardisierungsleute. Was, es leckt? Oh, Vodafone wieder am Start. N\u00f6, leckt nix. Ah, leckt nix. Okay, also, \u00e4hm, ich schick jetzt dort nen, wie mach ich denn das jetzt am besten? Ich muss jetzt ne WebRTC-Verbindung aufbauen. Genau, ich muss erst mal, ich muss erst mal ne WebRTC-Connection anlegen. Also, so, das Ding ist gleich RTC Peer, irgendwas Peer-Connection. So, und dann, wie ging das jetzt nochmal weiter? Genau, jetzt muss ich mir, genau, jetzt muss ich mir vom Server abholen, was der Server f\u00fcr Video-Formate unterst\u00fctzt. Genau, das muss ich hier dr\u00fcber machen, das muss ich jetzt hier auf dem Server programmieren. Also, lock, await, result, JSON. Kommt noch kein JSON zur\u00fcck, aber das programmieren wir jetzt. Warum reloadet das nicht mehr? Warum reloadet das nicht mehr? Ah, weil ich den Proxy nicht drin hab, ich hab die Erweiterung nicht. Beste Browser-Erweiterung, beste Visual Studio Code-Extension. Weil, wenn man das installiert hat, ich zeig's euch mal, ist Massive Brained. Your Server Address ist Local Host. H\u00e4, warum wird das nicht angezeigt? Und Live Server Address ist ja Standard. Geht das jetzt schon? The Live Server Address is 52. \u00c4h, wohl auch nicht. Was hab ich verkehrt gemacht? Was hab ich verkehrt gemacht? Warum reloadet das nicht? Hab ich irgendwas falsch gemacht? \u00c4h, nee, warte, das hat mit SIP nichts zu tun, das hei\u00dft nur so. Hab ich was vergessen? Ach, ich hab Live Reload nicht angemacht, null. So, jetzt funktioniert's. So, und jetzt ist der Vorteil, guck mal, wenn ich das angeschaltet hab, wenn ich jetzt hier was reinschreibe und speichere, b\u00e4m, reloadet der automatisch die Seite. Das ist exzellent. Ich hab Live Reload vergessen. \u00c4h, gute Frage im Chat kommt \u00f6fters. Und zwar, wo ist es? Wo ist es? Kannst du mir helfen? Was kann ich f\u00fcr einen Anf\u00e4nger lernen? Also mit welcher Programmiersprache man anfangen kann? Hast du irgendwelche Videos oder kennst du einen YouTube, der echt gut erz\u00e4hlt? \u00c4h, gut, da gibt's jede Menge, aber es ist halt die Frage, was du verwenden willst. Ja, \u00e4h, dankesch\u00f6n, Kid Ivar, Twitch Prime, huge sub, dankesch\u00f6n, nice. Also wenn du dich, wie hei\u00dft das Plugin-Live-Server? Also wenn du dich in irgendeiner Art und Weise f\u00fcr Web-Entwicklung begeistern kannst, also sprich Webseiten erstellen und Backends f\u00fcr Webseiten, finde ich, ist das der beste Einstieg, weil man visuell sieht, was passiert. Wenn das nicht so dein Fall ist, ist halt die Frage, wo so deine Interessen liegen. M\u00f6chtest du Windows-Anwendung machen, vielleicht sogar Windows-Desktop-Anwendung, da kommst du an.NET nicht vorbei, C-Sharp.net. Willst du vielleicht ein bisschen in Richtung so Cloud-Geschichten gehen, da ist viel in Go programmiert. Und ansonsten, was auch recht hip ist, wenn's Richtung Machine Learning und irgendwelche wissenschaftlichen Sachen gehen soll, dann ist Python \u00fcbelst angesagt. Also, ist halt die Frage, wo so deine Interessen liegen. Da kann ich dir da auch besser was sagen. Cobol, Cobol geht immer, Cobol geht immer. Okay, also, wir fragen den Server, was er alles f\u00fcr Video-Formate unterst\u00fctzt. Das m\u00fcssen wir jetzt dem Server erstmal beibringen, dass der da drauf antwortet. \u00c4hm, erstmal \u00fcberlegen. Tja, da muss ich jetzt in die Hilfe gucken, da muss ich jetzt in die Hilfe gucken von diesem, von dieser Library, oder? W\u00fcrde ich mal sagen, da muss ich in die Hilfe von der Library gucken, wie das funktioniert. Machine oder Web, aber mehr f\u00fcr Maschine. Was verstehst du unter Maschine? Meinst du irgendwelche Low-Level-Geschichten? Oder meinst du Microcontroller? Also, wenn du irgendwelche, wenn du gerne Microcontroller-Sachen machst, dann nimm deine ESP32 mit Platform-IO. Beste Kombination. Also, wenn du so ein bisschen Microcontroller basteln willst, irgendwie so ein bisschen Elektronik-Gramm machen willst, dann ist eine ESP32 mit Arduino-Platform-IO das beste, was du machen kannst. Oder meinst du mit Maschine f\u00fcr Desktop? Also Desktop-Anwendung. Also sprich, irgendwelche grafischen Desktop-Anwendungen. Also, wenn du grafische Desktop-Anwendungen machen willst, dann ist die n\u00e4chste Frage, f\u00fcr welches Betriebssystem? Windows only, Windows Mac Linux, Cross-Platform. Das ist tats\u00e4chlich ein ziemlich kompliziertes Feld, wenn man Cross-Platform-Anwendungen machen will. Allerdings, wenn du ein bisschen Web gelernt hast, gibt es M\u00f6glichkeiten, dass du das auch auf Desktop \u00fcbertr\u00e4gst. Deswegen gibt es in letzter Zeit so viele Elektron-Anwendungen und Browser in einem eigenen Fenster, die viel RAM fressen, weil das alles Web-Entwickler sind, die jetzt meinen, sie machen Desktop-Anwendungen. Hab ich doch eigentlich ganz treffend beschrieben, oder? So, FFmpeg2-WebRTC. Gucken wir jetzt mal, was die hier machen. Programmen. Das m\u00fcssen wir jetzt nachbauen. Also, was machen die hier? WebSocket interessiert uns gar nicht. WebSocket brauchen wir nicht. Machen wir das ohne WebSockets. WebSockets, alles egal. WebSockets juckt uns nicht. FFmpeg. FFmpeg. Ja, das jetzt kommt das Interessante. Also, was? Was? Okay, keine Ahnung. Ah, hier. Create. Das ist interessant. Das kenne ich. Das kenne ich. Das sind so die Standard-WebRTC-Geschichten. Okay, Create Offer. Sehr sch\u00f6n. Also, was muss ich machen? RTC Peer Connection. Die scheinen sich ziemlich gut an der Web-ARP zu orientieren, was gut ist, weil die Web-ARP kann ich. Die SIP Sorcery-ARP kann ich n\u00e4mlich nicht. Also, dann machen wir das doch mal. Also, ja. War PC gleich New. New. Hallo. Import New RTC Connection. Configuration. Brauchen wir da eine Configuration? Was machen die hier? Null. Okay, exellent. Null. Ich wei\u00df jetzt nicht genau, was ich da gerade mache, aber mal gucken, ob es funktioniert. By the way, ich nehme mal kurz hier aus dem Startup den Start von der Webcam raus, weil sonst blocken die mich noch, wenn ich laufend auf ihren Stream zugreife. Das will ich nicht, dass wenn ich dann testen will, dass die auf einmal mich irgendwie IP-Band haben oder sowas. Mein Domain-Anbieter hat mich ja schon IP-Band. Will ich noch mehr IP-Band werden? Electron ist das Docker der Frontend-Entwickler. Ich entdecke gewisse Parallelen. Ist beides was, wo jeder meint, das ist das Ding schlechthin, was man benutzen muss. Geht Node Share nicht auch mit TypeScript? Doch, doch, klar. Also, ich habe es noch nie verwendet, aber es m\u00fcsste gehen. Ansonsten geht Deno. Ich brauche NordExpressVPN, ganz genau. Okay, also Per Connection RTC. So, wie geht es weiter? Ich muss mich ein bisschen beeilen hier. Also, Create Offer. Okay, das kenne ich. Das macht man im Browser ganz genauso. Create Offer. Zack. So, das generiert mir jetzt eine Liste mit Codecs, die mein Backend unterst\u00fctzt. Jetzt muss ich dem irgendwie noch sagen, dass ich nur H264 unterst\u00fctzen will. H264 ist so der Codec, der zu 99% verwendet wird. Also, wenn ihr Videos anguckt, ist das zu... na, wobei, kann man gar nicht sagen. YouTube ist mittlerweile, wenn es nicht geforst wird, nicht mehr H264. Aber zu 90% wenn ihr Videos anguckt, ist das H264. Und die meisten Kameras liefern ihr Videos auch in H264 aus. Deswegen muss ich sagen, hallo Browser, ich unterst\u00fctze nur H264. Das ist nat\u00fcrlich die Frage, wie mache ich denn das? Create Offer. Track, gibt es hier was mit Track? Ah, Videotrack. Exzellent, das brauche ich. Das brauche ich. Also, Create Offer. Okay, das machen wir jetzt mal. Also Videotrack, ich Copy Paste mir das einfach mal, ohne dass ich wei\u00df, was ich mache. Track, Videotrack. Types, Video, Remote, was auch immer. Das ist False. Und hier muss ich jetzt reintragen, was f\u00fcr Videoformate unterst\u00fctzt werden anscheinend. Okay, machen wir das mal. Wir programmieren das einfach nach, wie die das gebastelt haben. Und dann sage ich Add Videotrack. So, ich muss ihm jetzt sagen, ich unterst\u00fctze nur H264. Hat Max eine Lizenz? Nat\u00fcrlich. Was meinst du denn? Meinst du, ich w\u00fcrde dir was ohne Lizenz verwenden? Das glaubst du doch nicht wirklich. Meinst du jetzt den Codec? Meinst du jetzt den Codec oder meinst du jetzt die IDE? By the way, ich sollte das mal umbenennen vom Default Namen. Signal Controller. Das ist hier der. Wo ist denn hier? Rename immer versteckt. Da. Bam. Exzellent. Also. Okay, was? Wie sage ich denn jetzt, dass ich nur H264 Video machen will? Aha, Videoformat. Videoformat, Videoformat. Okay, was gibt es denn Videoformat? Videoformat. Videoformat. Mal gucken, ob man hier. Weil ich wei\u00df, welche Daten ich angeben muss. Das kann ich aus der anderen Software, die ich ja schon gebastelt habe, abgucken. Ich muss nur gucken, wie ich das hier mit der Library mache. Moin, da Twinkos auch am Start. Poggers. So, also. Damit kann ich sogar jetzt was anfangen. Was wird gebaut? Ich habe ja vor einer Weile schon mal f\u00fcr meine \u00dcberwachungskameras was gebaut, was die RTSP Streams von den \u00dcberwachungskameras abruft mit FFMPEG. Und dann \u00fcber WebRTC in den Browser schickt. Das habe ich aus der Not heraus gemacht, weil ich keine ordentliche Video\u00fcberwachungssoftware gefunden habe, die erstens gescheit auf dem Raspberry Pi l\u00e4uft, zweitens wenig Latenz hat und drittens nicht alles reencoded. So, das habe ich gebastelt. Die allererste Variante war eine Mischung aus C und Go. C, weil FFMPEG und Go, weil die einzig sinnvolle WebRTC Library, die man benutzen kann, das hier war. Und dann habe ich das irgendwann nochmal neu gebaut in.NET mit Go, weil ich am liebsten.NET programmiere. Allerdings ist Interop zwischen.NET und Go abgrundtief kacke. Deswegen habe ich mich heute gefreut, dass ich eine Library gefunden habe, die WebRTC angeblich in.NET macht. Das wollte ich jetzt gerade mal ausprobieren. Also das Ziel ist, dass ich in 45 Minuten irgendwie es hingekriegt habe, dass ich ein Video, ein Testvideo in den Browser \u00fcber WebRTC \u00fcbertrage. Mal gucken, ob das funktioniert. Ich habe n\u00e4mlich nicht mal allzu viel Zeit. So, also. Video Format. Gut, da kann ich hier kann ich ja was mit anfangen. Da wei\u00df ich ja, was da rein muss. So, also das Video Codex hat 264. Hat eigentlich derjenige geantwortet mit den mit den Einsteiger, Programmier, Geschichten nochmal? Nee, das letzte Mal Maschine oder Web. Auf die andere Sachen nicht. Da kann ich auch nicht mehr sozusagen. Ist das Website Backend eigentlich der direkte Quellcode? Ist das Source auf GitHub? Nee. Ich habe, ich habe mal eine Testversion hier im Stream. Wir haben das hier im Stream mal ein bisschen gebastelt. Ich habe meine Testversion irgendwo auf frag mich nicht auf Pastebin oder so hochgeladen vor zwei Jahren oder einem Jahr. Nee, ist nicht. Okay, also wir wollen nur 264 Video unterst\u00fctzen. Format. Da wei\u00df ich gl\u00fccklicherweise, was man eintragen muss, weil das kann ich jetzt aus meinem anderen abgucken. 102. Frag mich bitte nicht, warum 102. Ich habe keine Ahnung, warum 102. Ich wei\u00df nur, dass es mit 102 funktioniert, weil beim anderen steht 102 drinne und das geht. Ansonsten habe ich keine Ahnung, warum die Format ID 102 ist. Wahrscheinlich steht das im Standard irgendwo drin. Keine Ahnung. Ich tippe das einfach nur ab, was ich bei der anderen Geschichte drin stehen habe. 102. Weil klar, 264 sieht auch so nach 102 aus. Okay, Format. Was, was, was braucht man jetzt noch? Warte mal, das hier hat doch einfach in Format gefressen noch, oder? Format. Okay, das funktioniert. Exzellent. Sehr gut, sehr gut. So, und jetzt k\u00f6nnen wir sagen Create Offer. Und nun gucken wir mal, ob ich im Browser, jetzt ist der Moment der Wahrheit, ob ich im Browser was ordentliches zur\u00fcckkriege. Moment hier, was? Null, oder? Nochmal. Ja. Ja. So. Also ich muss keinen Lizenzcode, ich muss keinen Lizenz f\u00fcr H264 bezahlen, wenn ich das verwende. Irgendwelche Hardware Hersteller m\u00fcssen das bezahlen oder so. So ist das gemeint mit, dass das nicht Lizenz war. Ich muss da nichts f\u00fcr bezahlen. Ich kann das, es kann ja auch jeder ein Video encoden in H264 mit FFmpeg. Das ist kein Ding. Aber wenn du eine Hardware verkaufst, die das benutzt, da musst du Lizenzgeb\u00fchren irgendwie bezahlen. So. Also. H264 gleich 2 plus 6, 2 plus 6 plus 4 gleich 2 plus 10 gleich 102. Ach so. Ja, deshalb gibt das alles Sinn. Exzellenter Chat ist mal wieder Next Level angekommen. So und jetzt schicke ich das hier zur\u00fcck. Return. Ja Offer. Und jetzt gucken wir, ob es im Browser ankommt und ob der Browser das frisst. Das ist ja noch viel. Ach so. Moment, was geben wir hier zur\u00fcck? Ich mache es jetzt wirklich eklig. Object. Schei\u00df drauf. Hauptsache es geht. Kommt was zur\u00fcck. So. Browser. Await. Console. Ok, wir kriegen was zur\u00fcck. Das schaut mal gut. Jetzt m\u00fcssen wir nur gucken, ob der Browser das ganze frisst. Wie machen wir das jetzt irgendwie? Set Remote. Also man muss dem jetzt sagen, ok, das sind die Sachen, die der Server unterst\u00fctzt. Und dann muss ich quasi noch eine Antwort generieren, wo drinne steht, das sind die Videoformate, die der Client unterst\u00fctzt. Und wenn die sich beide einig w\u00e4ren, dann kann ich Video \u00fcbertragen. Ok, Set Remote Description. Geht das einfach so jetzt? Ach, das funktioniert jetzt? Das h\u00e4tte ich jetzt gar nicht gedacht. Exzellent. So. Set Remote Description und jetzt muss ich den Antwort generieren, den ich an den Server zur\u00fcckschicke, wo drinne steht, was mein Browser f\u00fcr Videos unterst\u00fctzt. Also, wir nennen das mal ein kleines bisschen ordentlicher. Wir nennen das mal irgendwie. Die Confidence Jason ist schon. Ok, das mach ich irgendwie. Und \u00e4h. Tja. Passt schon. So, und jetzt muss ich ne Antwort generieren, was der Browser f\u00fcr Videos, Formate unterst\u00fctzt. So, das geht so. Dann sagt man Create Answer. Das sagt, ok, das sind meine lokalen Videoformate. Ach so. Let Await. Irgendwie so. Wird doch eh kein Sch\u00f6ner als Preis gewinnen. So. Also, das passt. Jetzt geb ich das mal aus und schau mal, ob der Browser irgendwie was Sinnvolles da generiert \u00fcberhaupt. Ja, ich hab keine Ahnung, ob das sinnvoll ist, aber das sieht so aus, als kackt das zumindest nicht ab. Ich hab Traffic verwenden f\u00fcr den Docker Reboot as Proxy. Ja. So. Das muss ich jetzt zur\u00fcck an Server schicken, dass das funktioniert. Await. Fetch. An. Ach so. Ha. Ok, ich brauch auf dem Server ne zweite Funktion, die Sachen annimmt. Also. Atttp. Post. Und das wird Bigpray Name. Das hei\u00dft jetzt einfach nur Post. Und \u00e4hm. Brauch jetzt. Ach so. Oh. Oh. \u00c4h. Jetzt gibt's ein kleines Problem. Hier. Oh, da hab ich jetzt gar nicht dran gedacht. Hier erstelle ich quasi die Server-seitige, \u00e4h, Server-seitige Ende dieser Verbindung und f\u00fcge auch den Videotrack hinzu und schicke das dem Client. Das Problem ist aber, \u00e4h, wenn ich jetzt dem Server schicken m\u00f6chte, was mein Browser alles unterst\u00fctzt, dann wei\u00df ich nicht mehr, zu welcher Verbindung das Ganze geh\u00f6rt. Also, deswegen machen wir mal ein Private Static, \u00e4h, \u00e4h, Private Static, was wei\u00df ich, \u00e4h, Dictionary aus irgendeiner ID und einer, \u00e4h, Connection. Dass ich das irgendwie zuordnen kann. Das ist jetzt quasi so, irgendwie so ein bisschen Brain Dump. Keine Ahnung, ob das dann tut. So. Connections. Jetzt brauchen wir noch irgendeine ID, die ich hochz\u00e4hle. Private. \u00c4h, ID. Ja, Uint-ID. So, jeder Client kriegt quasi eine neue ID zugewiesen. Das k\u00f6nnte, das k\u00f6nnte tats\u00e4chlich funktionieren. Okay, \u00e4h, mal kurz nebenbei abgucken, ob man welche anonymen Dinger returnen kann. Also, das hei\u00dft, neuer Client connectet sich, wir z\u00e4hlen die ID eins hoch. So, und jetzt darf ich nicht, jetzt, okay, okay, ich wei\u00df, was ich mache. Ich darf jetzt dem Client nicht einfach nur die Information zur\u00fcckgeben, welche Videokodex ich unterst\u00fctze, sondern ich muss dem Client noch zur\u00fcckgeben die ID. Genau, ID, die eine einzigartige ID durch den Client wieder erkenne. So, das, das muss, und jetzt hier Offer. Okay, und hier \u00fcbergebe ich ihm jetzt, mal gucken was, wei\u00df ich auch nicht genau. Jetzt muss ich das hier neu basteln, dass das klappt. Jason Offer, dann machen wir hier die ID. Die ID m\u00fcsste jetzt hier drin stehen. Ja, oh, oh, ach so. Aha, okay, okay, es scheint, es scheint noch zu funktionieren. Okay, jetzt schicken wir die Information an den Server zur\u00fcck, was der Browser f\u00fcr Videokodex unterst\u00fctzt. Also, das schicken wir wieder an Signal zur\u00fcck. Allerdings, diesmal mit einem Postrequest, irgendwie Method gleich Post, Body gleich hier meine, meine Antwort. Exzellent. Wie das funktioniert? Ernsthaft? Einfach so? Okay. Ach so, wie kriege ich das jetzt rein? Komm, Dynamic. Hauptsache es geht. Kommt da jetzt irgendeine Antwort? Klappt das jetzt? Kommt da jetzt irgendwas auf dem Server an? Oh, Unsupported Media Type. Ach so, ich muss ihm noch sagen, dass es Jason ist. Fetch API, wie macht man das? Fetch API Post Jason, wie geht das? Das kann sich doch kein Mensch aus dem Kopf merken. Header. Exzellent. Das brauchen wir. Header. Ich gebe dir einen Header, Alter. So, wunderbar. Bad Request. Warum? Warum ist das ein Bad Request? Also, ich finde nicht, dass der schlecht ist. Chat wollen wir abstimmen, ist der Request wirklich schlecht? Also, ich finde den eigentlich ganz gut. Warum ist das? Ah, ich wei\u00df, ich wei\u00df. Weil ich ja kein JavaScript Objekt an den Server schicken kann, sondern. Ah, viel besser. Okay. Also, ich kriege jetzt schon mal die Antwort vom Browser, was der unterst\u00fctzt. Sehr gut. So. Okay, da ist Type drinne. Ach nee, ich muss die ID noch mit zur\u00fcckschicken, dass ich wei\u00df, welcher Klein sich connectet. Also schicke ich nicht die Antwort zur\u00fcck, sondern schicke eine ID zur\u00fcck. Das ist die ID und dann schicke ich die Antwort zur\u00fcck. Okay, das scheint zu funktionieren. Ich kriege die ID wieder zur\u00fcck. Das hei\u00dft, ich mache hier sowas wie int id oder client id gleich Antwort id. Und was haben wir dann sonst noch? String oder nennen wir es, nennen wir es irgendwie. Antwort gleich. Ah nee, das habe ich ja schon belegt. Temp, immer besser Name, wenn einem sonst nix einf\u00e4llt. Antwort. Antwort. Ach du gro\u00dfe Geil. Stimmt das jetzt, was ich hier mache? Ich muss das mal kurz ausgeben, ob da \u00fcberhaupt was sinnvolles ankommt, was ich hier schicke. Ich schicke. So, zack. Oh, internal. Okay, nein, das hat schon mal nicht funktioniert. Warum? Aha. Ah, deswegen vielleicht. ToString? ToString gibt es bestimmt auch. Das sieht besser aus. Excellent. Okay, Antwort. Antwort. Ach du gro\u00dfe Schei\u00dfe. Nee, StPetus. Ich brauche hier nur die SessionDescription, das reicht. So, okay. Gibt es hier SessionDescription? Jawoll. New SessionDescription. Keine Parameter. \u00c4h, Session, was haben wir denn sonst noch? SessionDescription? Init? Was ist Session? Ah, ich kenne die API von dem Zeug nicht. Wie machen die das denn hier? SessionDescription. New? Ah, hier, guckt mal. New Session. Okay, das brauche ich. Das, das muss ich machen. Excellent. Das da. Das, das brauche ich jetzt. Das und sonst nichts. Okay. So, jetzt muss ich mir erstmal die Connections zum Client hier oben wieder aus meinem Dictionary rausholen, weil das ist ja Stateless und das lasse ich mal Temp. Temp ist prinzipiell immer der beste Name f\u00fcr alles. So, Connections und zwar die ID. So. Und jetzt da. Was hat er f\u00fcr Schmerzen? Int is not assignable to par uint. Ach so. Ja, das ist richtig. Dann ist es einfach hier oben jetzt mal ein uint. Ansonsten, wenn es kein unsite int ist, dann crash es einfach und gut ist. So, also PC, Set, Set, Set. Hab ich hier die Create Offer? Und muss ich noch einstellen, dass der sich das merkt, welche Videoformate er selbst unterst\u00fctzt? Okay. Und jetzt muss ich ihm sagen, welche Videoformate der an die andere Seite unterst\u00fctzt. Schon mal GRPC ausprobiert. Nein, habe ich nicht. So, es ist gleich Temp. Ich hoffe, das funktioniert jetzt. Okay, es kackt schon mal nicht ab. Das ist schon mal nice. So, ich muss mich jetzt ein bisschen beeilen, dass ich das bis 22.00 Uhr alles hinkriege. So, Set, Remote Description. Blablabla. Temp. Gucken wir mal, ob es nicht crash, selbst wenn ich hier... The given key 1 was not present in the dictionary. Was? 1? \u00c4h, warum nicht? Ach so, ich kack nur, ich f\u00fcge das gar nicht hinzu da oben. Ja, dann kann es ja auch da nicht drinstehen. All die... Das ist \u00fcbrigens wahnsinnig multithreaded safe, was ich hier alles mache. Also das wird nie kaputt gehen. Die connection. Okay, mal gucken, ob es jetzt funktioniert. Ah, ja. Okay, okay, okay. Gut, gut, gut, gut, gut. Set Remote Description. Ich w\u00fcrde sagen, das ist alles, was wir brauchen. Und jetzt k\u00f6nnen wir ein Video senden. Oder? Die settings sind richtig hier, diese Dinger. Die kenne ich von dem anderen Programm, also das passt. So, und jetzt kann ich ein Video senden. Kann ich jetzt... Muss ich noch irgendwas machen? Ich setze das hier. Set Description. Also Leute, wenn das klappt, gifte ich 5 subs. Aber ich kann es mir nicht vorstellen, dass es einfach so geht. So. Eigentlich... Also mir f\u00e4llt jetzt erstmal nichts mehr ein, was ich zum Verbindungsaufbau machen muss. Doch, nat\u00fcrlich. Die wichtigste Sache habe ich wieder vergessen, Chat. Die wichtigste Sache habe ich vergessen. Also ich habe zwei Sachen vergessen. Erstens m\u00fcssen wir den empfangenen Stream noch an den Videoplayer \u00fcbergeben, also dem Videoplayer sagen, dass er das abspielen soll. Und zweitens muss ich den Videostream senden. Den Videostream sende ich ja noch gar nicht. Das machen wir jetzt hier. Zeug machen mit den Videoframes. Wir machen jetzt Zeug mit den Videoframes. Und zwar Signal... Das ist \u00fcbrigens absolut nicht best practice oder sonst was, bevor mir jetzt hier irgendjemand eine ankommt. Also man greift normalerweise... Also man macht sowas im Startup schon mal gar nicht. Man greift im Startup nicht auf jeden Fall Static-Controller-m\u00e4\u00dfiges zu. Was \u00fcbrigens gar nicht Static ist. Und man hat auch nicht unsafe code direkt im Startup. Aber who cares. Wir gucken einfach, dass das jetzt geht. So, Public. Man macht auch nicht Sachen zwischendrin. Einfach mal Public, weil man woanders drauf zugreifen will. Aber hier bleibt jetzt gar nichts anderes \u00fcbrig. So, Connections. Bar. Und dann hier alle Values. Alle WebITC Connections. Prime1994. Dankesch\u00f6n. Big Brain. Massive Sub. So, und PC. Things Connection. Ach nee, ich brauch den Track. Ich brauch den... Nee, guck mal, was ist das? Send JPEG Frame. Oh, das ist ja cool. Ey, das ist nice. Ich wusste gar nicht, dass man \u00fcber WebRTC JPEG Frames \u00fcbertragen kann. Das ist richtig nice, wenn das funktioniert. Weil dann kann ich auch Motion JPEG unterst\u00fctzen. Das ist nice. So, Send Audio Video. Was haben wir denn? Send H264 Frame. Duration Payload. Keine Ahnung. Duration RTP Units. Was sind Duration RTP Units? Sind das Timestamps? Sind das einfach nur Timestamps? Duration Add. Oder ist das wie lang ein einzelnes Schnipsel ist? Was ja im Endeffekt... Letzter Timestamp minus aktueller Timestamp. Ich hab keine Ahnung. Ich \u00fcbergebe da einfach mal den Timestamp und hoffe, dass es funktioniert. Und zwar den Presentation Timestamp. Pts. Vielleicht w\u00e4re es besser, wenn ich den DTS nehme. \u00c4h, warum geht das nicht? Was ist das? Ein Long? Long. Ah, komm, easy. Uint. Wir casten das einfach mal ein gutes. So, Bites. Ok. Jetzt wird es kriminell. Wie mein Opa gesagt h\u00e4tte. Der \u00fcbrigens nicht kriminell war. Aber das war so eine Standardredewendung von ihm. Dann immer gesagt, jetzt wird es kriminell. \u00c4hm. Data. Ich kann jetzt ja nicht einfach einen Raw-C-Pointer an diese Funktion \u00fcbergeben. Das funktioniert ja nicht. \u00c4hm. Ich muss dieses Raw-Pointer-Ding... War mein Opa auch Programmierer? Nein. Mein Opa war Elektrotechniker. Also der h\u00e4tte das hier mit Steckdosen garantiert besser hingekriegt, wie ich daheim. Wir m\u00fcssen dieses Raw-Bite-Array in ein.NET-Array konvertieren. Wir haben hier, es gibt hier die Size davon. Wir k\u00f6nnen, wir k\u00f6nnen ein neues.NET, wir k\u00f6nnen ein neues.NET-Feature verwenden. Und zwar, die haben jetzt in einer letzten, letzten.NET-Version sowas hier eingef\u00fchrt. Das ist quasi ein Managed, so eine Art, wenn ich das richtig verstanden habe, so eine Art Managed-Pointer auf Raw-Memory. Ich hab's noch in keinem Projekt bisher verwendet. Aber dem kann man, ach guck mal, dem kann man einen Pointer \u00fcbergeben und eine Size. Wunderbar. Genau das brauchen wir. Pointer-Size. \u00c4hm. Mem. Wie auch immer, ich's anders nennen soll. So, und kann man daraus jetzt ein Byte-Array machen? Jawoll. Da. Manchmal lohnt sich Webcasts angucken. Excellent. So. Jetzt ist die Frage, ob es crashed. Gucken wir mal. Gucken wir mal, ob es crashed. \u00c4hm. Ich muss gucken, dass es noch l\u00e4uft. Wie guck ich denn, dass es l\u00e4uft am besten? Ich, ich geb einfach, ich geb, okay, wir machen hier irgendwie mal sowas wie, so keine Ahnung. Und die, br\u00f6h, geht sofort. Wir machen irgendwie Cent oder so, schreiben wir mal rein. Moment, was ja nicht funktionieren wird, weil, okay. Cent eins und Cent zwei. Okay. Weil die Schleife l\u00e4uft ja erst, wenn ich mich mit dem Browser registriert hab. Okay. Cent eins funktioniert. \u00c4h, wir, wir, okay, wir geben nicht Cent aus, wir geben den Presentation Timestamp aus. Excellent Logging. Ja, richtig. Das ist Next Level Logging hier, was man hier sieht. Ah, yes. \u00c4hm, choose my name. Deswegen finde ich, ist C-Sharp eines der besten Sprachen \u00fcberhaupt. Nicht nur, weil ich die Sprache an sich gut finde, sondern weil die es konstant schaffen seit 15 Jahren, nicht so eine Schei\u00dfe zu bauen, wie der C++ Standard, sondern neue Sachen auch zu verbessern und nicht einfach zu sagen, ah ja gut, wir haben jetzt 30 Mal das Gleiche drin. Neue Sachen zu verbessern und die, die schaffen seit 15 Jahren sinnvolle Sachen in die Sprache einzubauen, die gut zu der Sprache passen und die Sprache erg\u00e4nzen. Also da m\u00fcsste sich das C++ Gremium echt mal eine Scheibe von abschneiden. Aber wisst ihr was das Gute ist? Noch crasht nichts. Noch crasht nichts. Aber noch hab ich ja auch den Browser nicht aktualisiert. Also von der Idee her, ich aktualisiere jetzt den Browser. Wenn ich den Browser aktualisiere, registriert er eine neue Verbindung und er sollte was an diese Verbindung schicken, was aber noch nicht funktionieren kann. Okay, okay, aber er sendet schon mal, er sendet schon mal Sachen theoretisch an den Browser. Der Browser empf\u00e4ngt aber noch nichts. Auch nicht, weil ich hab das noch nicht verkn\u00fcpft. Aber er kriegt das zumindest schon mal mit. Okay, das hei\u00dft jetzt muss ich doch eigentlich nur noch den Videoplayer mit dem Stream verkn\u00fcpfen. Geht der RAM-Verbrauch hoch? Das ist eine gute Frage, das sieht man nicht so ohne weiteres, weil ich mich voll spamme mit. Wo ist der RAM-Verbrauch? Wo ist der RAM-Verbrauch? Wo ist der RAM-Verbrauch? Da! Nee, der RAM-Verbrauch scheint konstant zu bleiben. Okay, schauen wir mal. Also, jetzt verkn\u00fcpfe ich mal den Videoplayer mit meinem WebRTC-Backend. Also, wenn das gehen w\u00fcrde, erstens verschenke ich ein paar Subs, weil ich nicht davon ausgehe. Und zweitens w\u00e4re das richtig geil, weil das hier ist mega \u00fcbersichtlicher kurzer Code f\u00fcr das ganze WebRTC-Zeug. Ich hab allein 400 Zeilen Go f\u00fcr den ganzen WebRTC-Krempel. Okay, das macht auch noch ein bisschen mehr, das Go-Ged\u00f6ns. Aber allein schon das Handling f\u00fcr Verbindungsaufbau und hin und her schicken sind schon wahrscheinlich 200 Zeilen. So, also, jetzt muss ich ihm noch sagen, dass er den Videostream an den Videoplayer attachen soll. Also, das ging, wenn ich das... Das machen wir ganz hier oben. Man musste dem in Callback einstellen, und zwar Track, irgendwas mit Track. On Track, genau. \u00c4h, \u00e4h, im Moment, wie ging das Track so? Nee, im Moment, wie macht man das in JavaScript? Event, sagt man, event. Oder das ist wahrscheinlich schon gleich der Track. Wir gucken mal, ob da \u00fcberhaupt irgendwas ankommt. Ja, Track-Event. Okay, Track-Event. Source-Element, Stream. \u00c4h, das muss ich jetzt mal kurz abgucken, wie man das, wie man das, \u00e4h, attacht. So, okay, also, wir brauchen, wir brauchen auf jeden Fall schon mal das Player-Element. Also, Document, Get-Element, Player. So, und jetzt wei\u00df ich nicht, wie ich dort irgendwas attache. Player, sowas wie Source, \u00e4h, nee, url, url bringt nichts, \u00e4hm, wie, wie \u00fcbergebe ich einem HTML, wie \u00fcbergebe ich einem HTML-Player-Element das Source? Ich k\u00f6nnte nachgucken, wie ich das bei dem anderen gemacht hab. Aber ich glaube, Google ist schneller. Video, HTML, \u00e4h, Source, irgendwie so. Okay, gibt's da ein Beispiel? Video, Player, Player, Source, nee, das Kackseite. What? Source-Object, Stream. Okay, Player, Source, Ob, gibt's net. Naja, einfach mal dran zur, und jetzt einfach minus Track oder Streams? Genau, das kenn ich noch. Genau, Streams Null musste man machen. Jaja, genau. So. WTF? Loll, das kam jetzt unerwartet. Das kam jetzt unerwartet. Das funktioniert. Easy, easy as fuck. Easy as fuck? Ich wusste von Anfang an, dass das klappt. Mir war das direkt klar, dass das direkt funktioniert. Das geht einfach. Wisst ihr, wie lang ich mich abgem\u00fcht habe mit dieser Go-L\u00f6sung bis, bis ein einfaches, ihr k\u00f6nnt euch vielleicht an den Stream erinnern, bis ein einfaches Test, oh, es ruckelt. Es ruckelt, Leute, es ruckelt. Das Video freest. Oh, oh je, MonkaS. Das Video freest zwischendurch. Ja, gut, schei\u00df drauf, man kann nicht alles haben. Was sagt denn der RAM-Verbrauch? \u00c4h, da sind bestimmt, schau mal das Memory, ich w\u00fcrd mir das Memory gerne anschauen, aber \u00e4h, ja, ich hab zu viel D-Bank-Ausgabe. Wo ist das Memory? Warte, wo ist das Memory, easy? Wo ist das Memory, wo ist die Memory aus? Ich mach mal die D-Bank-Ausgabe kurz aus, das ist ein bisschen viel. \u00c4h, beste Antwort, ihr wollt, ich mach den ganzen Krams mal aus. \u00c4hm, Moment, wo sind wir denn hier, da? Ah, es kommt, es kommt mal alles weg, alles weg. Alles weg, alles weg. Oh, ich starten. Neko Rock, 14 Monate, Dankesch\u00f6n. Die Subs gibt's \u00fcbrigens gleich, Leute. Neko Rock. Big Brain Subscription. Gleich gibt's die Subs. So, 149 MB Verbrauch. Jetzt erst mal neu laden, das Video. Das funktioniert einfach, ich fass es nicht. Ich fass es nicht. Das funktioniert einfach, das Videostream. \u00c4h, aber wir k\u00f6nnen auch gar nicht so viel Memory leaken, das ist ein, keine Ahnung, 360 x 240 Video oder so, das kann, selbst wenn das Memory leakt, merk ich das erst in einer halben Stunde wirklich nennenswert. Nennenswert. So, ja nice, nice, nice, nice, nice, das funktioniert. Extrem poggers ist das. Da reicht poggers, da muss der franz\u00f6sische poggers ran. First Mal 4K Videos anmachen. Ihr hat einen RTSP Test Stream? Meine Kameras will ich nicht reinmachen. Erstens liege ich dann vielleicht was. Doch, ich wei\u00df, was ich mach. Die iPhone Kamera. Ich mach die iPhone Kamera an. \u00c4h, oh Moment, wo hab ich mein iPhone? iPhone? Wo hab ich mein iPhone? Ah, hier. Ich mach die iPhone Kamera an, die ich immer oben rechts in der Ecke hab. Die guck mal, Moment, das mach ich jetzt mal schnell. iPhone Kamera oben, iPhone Kamera einschalten. Mal gucken, ob das das frisst. Kamera, zack. Okay. Also wenn jetzt alles funktioniert, m\u00fcsstet ihr gleich mal den Raspberry Pi sehen. Gucken wir mal. \u00c4h, aber da brauchen wir eine andere, andere Ural RTSP. Mein iPhone ist 122161.110. 554 ist die Fallport RTSP. So, mal gucken. Oh, aber Connected, Connected ist das schonmal. So, das ist die iPhone Kamera. Da ist einfach, da ist einfach der Raspberry Pi. Oh, einfach, zwar \u00fcbel schlechte Beleuchtung und in der letzten Ecke wieder, wo die Kamera h\u00e4ngt, aber da ist einfach mal der Raspberry Pi da. \u00c4h, wir gucken mal, wie viel Verz\u00f6gerung das Ganze hat. \u00dcbrigens, ich wei\u00df auch, ich hab's hochgekannt, ist egal. Moment, ich mach mal kurz die Hand hin und her. Was ist denn das? Was ist denn das? Oh, \u00e4h, was ist das? Das sieht nicht gut aus, aber nachdem ich schon ein bisschen was mit Audio und Video gemacht hab, sieht das f\u00fcr mich so aus. Das ist nicht so viel f\u00fcr die VF1. Es werden nur die Keyframes angezeigt. Das sieht f\u00fcr mich aus, als w\u00e4ren es nur die Keyframes, die angezeigt werden und die dazwischen nicht. Wisst ihr, was das ist? Wisst ihr, was das ist? Das ist genau das, was ich vorhin erz\u00e4hlt hab. Wollen wir mal wetten, das ist genau das. Wollen wir mal wetten, das ist genau das. Okay Leute, noch mal, also f\u00fcnf Gifted-Sub sind schon mal sicher f\u00fcr die ganze Geschichte, die ich hier jetzt, \u00e4h, dass es einfach so funktioniert hat. Aber ich gifte noch mal, ich gifte noch mal ein paar, wenn das jetzt stimmt, weil ich vermute, n\u00e4mlich, ich glaube, jetzt kommt genau das klei, jetzt ist wirklich genau das Problem, was ich vorher angesprochen habe, das ist gut, dass ich das drin gelassen hab, in wei\u00dfer Voraussicht schon. Ich glaube, die Frames kommen in der falschen Reihenfolge. Also was hei\u00dft in der falschen Reihenfolge? Die Frames, wie sie decoded werden und wie ich sie anzeigen muss, kommen, also die muss ich erst noch selbst in die richtige Reihenfolge sortieren, wahrscheinlich, weil die iPhone-Kamera-App schei\u00dfe ist. Gucken wir mal, ob das stimmt. Was? Ja, guckt. Die, die Coding und Presentation Timestamps sind anders. Manchmal, manchmal sind sie gleich, das ist wahrscheinlich ein Keyframe oder so, wenn die gleich sind. Das hei\u00dft, ich m\u00fcsste diese sortieren. Oh nee, da habe ich jetzt keinen Bock drauf. Da habe ich jetzt, da habe ich jetzt keinen Bock drauf. Oder ich nehme die Coding, ich nehme einfach die Coding Timestamps und gucke mal, ob es dann funktioniert. DTS. Betr\u00e4gst du das \u00fcber W-Lan? Klar. Mit DTS k\u00f6nnte es sogar sein, dass es schon funktioniert, weil die sind ja immer aufsteigend. Ey, das ruckelt immer noch, Leute, das ruckelt immer noch. Guck mal hier. Es ruckelt immer noch. Okay, nee, da bin ich zu low-brain heute Abend daf\u00fcr, das zu fixen. Also das Problem ist tats\u00e4chlich, dass die Coding Timestamps und die Presentation Timestamps, die stimmen nicht \u00fcberein. Das hei\u00dft, also von der Theorie her, was ich machen m\u00fcsste, w\u00e4re, ich m\u00fcsste mir so einen Buffer, ich m\u00fcsste mir einen Buffer anlegen, indem ich die Frames speichere f\u00fcr, sagen wir mal, 2 Sekunden. Und solange warte ich halt, bis ich den n\u00e4chsten passenden Presentation Frame habe oder so. Mach doch ein einfaches If, wo du die gr\u00f6\u00dferen ausgibst. Okay, dann ruckelt es aber wahrscheinlich immer noch. Hast du das auf GitHub? Nee, das habe ich gerade hier im Stream erstellt. Dann habe ich Delay, doch, doch, doch. Nee, das mache ich jetzt, ich kann das, wir machen im n\u00e4chsten Stream da mal ein bisschen weiter dran, dann kann ich es auf GitHub pushen. Oder, oder, Kengin, willst du jetzt irgendwie da dran mitwursten? Ich mache es nicht auf GitHub, weil das komplett random zusammengewurstet ist, ich kann es dir auf Pastebin machen. So, das ist eine gute Idee, probieren wir jetzt mal kurz aus, was hier jemand vorgeschlagen hat, und zwar. Also ich kann es, nee, ich w\u00fcrde es sogar auf GitHub machen, aber ich kann es nicht auf GitHub von hier pushen. Ich bin ja gar nicht eingeloggt auf GitHub. So, aber wir k\u00f6nnen die Billig-Variante wirklich mal ausprobieren, irgendwie. Was machen wir da? Last TS oder so, Null. So, und jetzt sagen wir, wenn, was machen wir da jetzt, was machen wir da jetzt, also wenn, PTS, if, if, Moment, Package, PTS kleiner, gleich dem, ups, dem letzten ist. Dann machen wir nicht weiter. So. So, und jetzt m\u00fcssen wir noch das setzen. Sagt mir, wenn ich Mist bastle. So. Ah nee, das muss ein Uint sein. Aber das wird auch nicht dazu f\u00fchren, dass es besser funktioniert, weil er \u00fcberspringt ja immer noch Frames. Ah nee, long muss das sein. So, ergibt das hier irgendwie Sinn? Wollen wir hier nochmal abbrechen? Wo habe ich denn diese Ausgabe mit den Timestamps? Moment. Oh, wo habe ich es denn hier? Da. Brauche ich noch mal. Jetzt gucken wir mal. Stimmt, ich k\u00f6nnte es nochmal als Release kompilieren. Ich glaube nicht, dass es einen gro\u00dfen Unterschied macht. So, jetzt stimmt der Kram zwar immer noch nicht miteinander, aber es sind nur die gr\u00f6\u00dferen. Nee, ich glaube nicht, dass es einen Unterschied macht, weil das ist ja kein Performance Problem. Das ist ja ein Problem, dass die Frames in der unterschiedlichen Reihenfolge geschickt werden. Wenn es schneller ist, ist es vielleicht sogar noch mehr kaputt. Das war eine sehr gute Idee, Chat. Das war eine sehr gute Idee. Es ist immer noch nicht ganz fl\u00fcssig, es fehlen immer noch Frames. Nee, nee, es fehlen immer noch Frames. Aber, okay, wir gucken mal, wie die Verz\u00f6gerung ist. Moment. Es ist wirklich verdammt wenig Verz\u00f6gerung. Ich muss euch, wie zeige ich euch am besten, wie die Verz\u00f6gerung ist. Ich mache mal irgendein Ger\u00e4usch, ich mache mal irgendein Ger\u00e4usch, so hier. Irgendwie, so, Moment. Ich lege euch mal kurz das Handy neben dran, das Mikrofon hier so neben dran. So. Und jetzt mal muss ich mal irgendwie krach machen, so, keine Ahnung. Na, kaum Verz\u00f6gerung, Leute. Habt ihr es geh\u00f6rt? Ja, wenigstens 200 Millisekunden. Leute, wollt ihr mich verarschen? Was interessieren mich 200 Millisekunden? 200 Millisekunden ist nichts f\u00fcr den \u00dcbertragungsweg, den das Ganze nimmt. 200 Millisekunden ist Pock. Ihr werdet kein Video schneller jemals im Browser gesehen haben wie das. Ach so, weniger als, ach ja, sorry. Ich hab mich verguckt. Ich hab so gelesen, wie ja, wenigstens 200 Millisekunden, so als w\u00e4re das jetzt viel gewesen. Dabei ist das \u00fcberhaupt nicht viel, aber das ist richtig, richtig nice. Ja, also, \u00e4h, Elsa hab ich falsch gelesen. Aber exzellent, wie gut das funktioniert. Jetzt mal ordentlich in Go. Nee, warum ich es nicht in Go mache, unter anderem liegt daran, weil C und Go Interop nicht so dolle ist. Gerade mit Callbacks aus C raus, das ist richtig eklig. Und, \u00e4hm, weil ich Web-Anwendungen am einfachsten in ASP.NET mit dem Backend machen kann, weil ich mich damit am besten auskenne. Ich bau da mal was. Mach, mach du mal. Vielleicht, also, vielleicht haben wir ja Gl\u00fcck. Vielleicht krieg ich ja diesmal wirklich was lauff\u00e4higes raus, was ich, \u00e4hm, auch mal auf Githa pushen kann. Und vielleicht haben wir dann Gl\u00fcck und die ein oder andere Leute aus dem Chat beteiligen sich daran, dort was ordentliches dran zu bauen. Also, zusammen, so. Okay, ich gucke mal, wie ich das jetzt, ich bin, ich bin hier nicht, bin ich hier irgendwie auf Github eingeloggt? Ich glaube nicht. Kein Github login. Bin ich hier auf Github eingeloggt? Kein Github login. Okay, wie krieg ich denn das jetzt auf Github? Ich bin auch am zweiten Rechner in Github eingeloggt. Github Sealer, ich hab doch keinen Account hier drauf. Okay, wir machen erstmal einen Commit. Es ist aber halt so eklig, Alter. Eigentlich will ich das gar nicht pushen. Hast du den Key hinterlegt? Nee, nee, wahrscheinlich nicht. Ich hab auf dem Streaming-Rechner nix drauf, weil ich nicht aus Versehen irgendwelche Sachen leaken will oder so. Okay, ich gucke mal, wie ich das auf Github irgendwie kriege. Hast du einen lokalen Git-Server? Ja, hab ich. Okay, aber ist aber so, ich hab jetzt hier auf jeden Fall nichts geleaktes in irgendeiner Art und Weise drinne. Ich mach mal, ich mach erstmal einen Git-Commit. Ja, Twinker, ist klar. Erstmal sch\u00f6n alle private Keys raushauen. Git-Init, Git-Status, wir machen mal ein sch\u00f6nes Git-Commit. Achso, Moment. Gap's da nicht ne coole Seite f\u00fcr Git-Ignore? Da gab's doch so nen Web-Service, wo man Git-Ignore Sachen... Nee, nee, ich mach nicht Minus-A. Ich will mal ein Projektfolder raus und die Binaries raus und sowas. Git-Ignore.io, was? Git-Ignore.io. \u00c4h, C-Sharp. Nee, Moment. Was? Was macht das? Ah. Ah ja. Nee, das ist f\u00fcr Rider nicht... Ich mach's mal kurz von Hand. Also, Git-Ignore. Also, \u00e4hm, der da kommt raus. Ups. \u00c4h. Wenn man es im richtigen... Git-Ignore, so. Der da kommt raus und, \u00e4hm, und der Bildordner kommt raus. Monarch-S, Bin und Objects k\u00f6nnen wir noch raus machen, ne? Bin und Objects raus. So, ich glaub, das reicht. Ja, ja, ja. \u00c4h. So, ich hoffe, das ist jetzt richtig, dass ich nicht zu viel einchecke. Also, Git-Add, Git-Status, was hat er jetzt alles einge... Genau, ok, der hat den ganzen M\u00fcll rausgelassen. Alles klar, sehr gut. Git-Commit, A-M-Init, Git-Git-Log. Ok, ich versuche mal nebenbei, \u00e4h, ich leg mal bei GitHub ein neues Projekt an. Hoffentlich bin ich hier noch eingeloggt. Auf dem anderen Pro... Oh fuck, ich bin hier auch nicht eingeloggt. \u00c4h. \u00c4hm. Ok. Hab ich GitHub, zwei Faktor-Authentifizierung? Dann log ich mich jetzt hier mal ein. Ich guck mal kurz nebenbei in mein Keypass, was mein GitHub f\u00fcr einen Account hat. Git-Hoop. Also. Wir haben Wubblons. At gmx.de. Das ist keine geheime Adresse, die steht sogar im Profil. Ach ne, Moment, \u00e4h, \u00e4h, Sign-In. \u00c4h, Passwort. Kacke. Chat, ich mach euch mal kurz aus, da muss ich nicht so viel gucken, ob ich jetzt irgendwas leake oder nicht. Ich glaube, ich hab mittlerweile eh zwei Faktor-Authentifizierung. Ja, two Factor-Authentifizierung. Das hei\u00dft, es ist eh egal, ob ich was leake. Lul. Verify. Ok. Alles klar. Mal die Vice-Capture wieder an. Gut, \u00e4h, Create. New repo. So, wie nennen wir's? Monarch-S passt wunderbar. Description. Check-W-Tests. Nur gepusht, weil mich der Chat sonst geflamed h\u00e4tte. So. Ai, ai, ai. So, \u00e4hm, Public. Read me. Alles klar. Choose. Create. So, das da. \u00c4h, Moment, hier, da sind wir. Get add. \u00c4h, Main. Geh mal fort. Zu, Lul. Nein, nein, nein, nein. Das Ding, also, Inclusiveness hin oder her. Das Ding hei\u00dft bei mir weiter Master. Nicht Main. Nein, nein, nein. Master. Ok, also. Bobloids. Add gmx.de. Passwort. Wollen mal kurz ins Fullscreen machen wieder. Fuck. Was? Bei mir verschrieben. H\u00e4? Ist das ohne Adresse? Moment, ist, ist Username? Ach nee, ist das, ah, Moment. Ah, es ist ohne E-Mail-Adresse. Es ist ohne E-Mail-Adresse. Siehst du mal, wie oft ich mich da einlogge? Ich logge mich eigentlich so gut wie nie ein \u00fcber, \u00fcber HTTP-Authentifizierung. Bobloids ist es. Genau. Das ist richtig. Genau. What the fuck? \u00c4h. Geht das nicht wegen Zwei-Faktor-Authentifizierung? Kann das sein, dass es wegen Zwei-Faktor-Authentifizierung nicht geht? Mit, mit Login hier. Muss ich \u00fcber SSH Key machen? Ok, Moment. Ich adde mal mein SSH Key von AVM. Dann mach ich euch mal kurz aus, weil ich nicht aus Versehen irgendwelche Sachen leaken will. \u00c4h, your profile? \u00c4h, SSH, Moment. Wo waren die Edit Profiles? Nee, wo waren nochmal die SSH Keys versteckt? Settings irgendwo, ne? Settings, SSH Keys, genau. Ich hab den Key sogar schon hinterlegt. Passt. Ich hab den Key schon hinterlegt. Was im Endeffekt hei\u00dft, ich m\u00fcsste das eigentlich pushen k\u00f6nnen, aber ich hab das falsche Remote daf\u00fcr drinne. \u00c4hm, gut, dann \u00e4ndern wir das Remote nochmal. Rider ONAK-S. Remote. Ok, Git, Remote. \u00c4h, konnte man das irgendwie umbenennen? Rename Z-Ul. Genau. Nee, da muss man Remote Z-Ul und da muss man glaub ich den Name machen. Origin und dann die neue Ul. \u00c4hm, die neue Ul ist Git-Doppelpunkter. Ah, hier guck mal da. So. Ok, push. Yes. Ah, yes. Exzellent. Da sind wir. Leute, also, nur gepusht, weil mich sonst der Chat geflamed h\u00e4tte. Ah, ja, ja. Da ist es. Exquisite high quality HTML und \u00e4h, state of the art best practice, \u00e4hm, ASP.NET Core Anwendung mit unsafe code und \u00e4hm, irgendwelchen komischen Background-Tasks im Startup. Beste. So, so solltet ihr das machen. Ist da Tommy K. eigentlich da? Wie lief's da mit der Bewerbung? Ich hab irgendwas im Discord gesehen, aber ich w\u00fcrde mir interessieren, was da rausgekommen ist. So, Chat. Also, wir haben noch einen Bug. Also, vielleicht ist ja einer Big Brain von euch und kann hier irgendwie das Reordering programmieren. Also, hier an der Stelle, man, wie konnte man, konnte man so kommentieren oder konnte man nur mit einem Issue kommentieren? Nee, einfach so kommentieren geht nicht, ne? \u00c4hm, Frames sind in falscher Reihenfolge. ETS, PTS. So. Wenn, wir machen's mal auf Deutsch. Genau. So. Excellent. Da ist es. Okay, \u00e4hm, ja, vielleicht, vielleicht hat ja einer Zeit und Mu\u00dfe, sich da Sachen mal zu widmen. Der beste Projektname \u00fcbrigens hier wieder, ne? Erstmal, Monarch S. Ich kenn mich, ich werd das nie umbenennen. Also, Chat, vielleicht kriegen wir's echt gebacken. Also, wenn, wenn von euch ein paar Leute Interesse haben, daran mitzubasteln, das Ziel der ganzen Sache ist, erstens, dass man, relativ Latency-free, ich k\u00f6nnte hier, also, wenn wirklich ein paar mitmachen, weil ich kann da ne ReadMe erstellen, also, \u00e4hm, das soll Latency-free Video in Browser kriegen und auf lange Sicht will ich damit halt mal ne halbwegs benutzbare Video-, also, \u00dcberwachungskamera-Software basteln. Ja, ne, es ist 2114, ich geh jetzt gleich ins Bett. Also sprich, \u00e4hm, Recorden ins File, das kann meine andere schon, \u00e4h, und eine der wichtigsten Sachen ist kein Re-encoding. Kein Re-encoding. Schau mal in GRPC rein, ich wei\u00df, was es ist, ich w\u00fcsste jetzt nicht, was es mir hier bringt. \u00c4hm, kein Re-encoding, also sprich, ich will den Stream von der Kamera nehmen, in den Browser pumpen oder vielleicht in ein File schreiben. Kein Re-encoding. Re-encoding ist so ein optionales Ding, da w\u00fcrde ich dr\u00fcber nachdenken, wenn wir mal irgendwas haben, was stabil funktioniert. Weil eines der Features, die ich hier haben will, ist, ich will nichts re-encoden. Ich will einfach nur den Stream nehmen, von der Kamera und in den Browser packen. Das hat den Vorteil, man braucht \u00fcberhaupt keine Leistung, ich mein, guckt euch das mal an. \u00c4hm, ich, ich, ich starte das Kart noch mal, hier, Run. Ich starte das Kart noch mal. So, Run, hier, anmachen. Ups, ah. Ja, gut, \u00e4hm. Das bringt jetzt nicht viel, zu gucken. \u00c4hm, aber, wenn ich jetzt, ah, warte. Das braucht nix. Ups, drottnet. Boah, das ist, das braucht, das braucht nichts an CPU-Leistung. Um das zu streamen. W\u00fcrde der re-encoden, w\u00e4re das ein bisschen mehr. Und das ist grad der Sinn und der Zweck der Sache, der re-encoded nix. \u00c4hm, was dann richtig pro w\u00e4re, wenn wir irgendwann es schaffen w\u00fcrden. Das habe ich ja schon \u00fcberlegt und auch schon mal angefangen vor einer Weile so was zu bauen. \u00c4hm, man k\u00f6nnte, wenn man eben m\u00f6chte, der Vorteil davon, wenn man nicht re-encoded ist, du kannst auf dem Raspberry Pi das laufen lassen, auf dem Raspberry Pi mit, keine Ahnung, 30 Videokameras. \u00dcberhaupt kein Problem, weil es eben nicht re-encoded. Wenn ihr Software verwendet, die die Sachen decoded, encoded, da ist mit 2, 3 Kameras auf dem Raspberry Pi sp\u00e4testens Schluss. Selbst wenn man die Raspberry Pi Hardware-encoding, Decoding-Geschichte verwendet. So, was man noch machen k\u00f6nnte ist, man k\u00f6nnte hergehen und wenn man sagt, okay, man m\u00f6chte ein bisschen Leistung opfern, man k\u00f6nnte jeden Keyframe decoden, so alle 2 Sekunden an ein Frame, schadet nix, jeden Keyframe decoden und dort drauf dann Object-Erkennung machen oder sowas. Aber das ist Zukunftsmusik. Also wer sich dazu berufen f\u00fchlt, ein bisschen mit rumzubasteln, \u00e4h, w\u00e4re nice, jetzt wo ich schon hochgeladen habe, denn vielleicht ist das ja f\u00fcr mich die Motivation, diese Software endlich mal ordentlich fertig nutzbar zu bauen, \u00fcber den Status hinaus, dass ich sie bei mir einfach, also wisst ihr, ich benutze bei mir lokal auch unfertiges Zeug, was genauso viel enth\u00e4lt, wie was ich brauche. Aber f\u00fcr jemand anderes benutzbar ist es nicht. Bestes Beispiel ist hier mein Memboard f\u00fcr Bildchen und sowas, das funktioniert f\u00fcr mich wunderbar, aber in die Version k\u00f6nnte niemand anderes ordentlich bedienen. So und vielleicht, vielleicht wenn die ein oder andere mitmachen, habe ich die Motivation, endlich mal was Gescheites draus zu basteln. Mal gucken. Also Chat, machen wir Schluss, ich gehe ins Bett, ein nicer Stream heute, richtig viele da gewesen, f\u00fcr Programmer Stream, sehr nice. \u00c4hm, wir sehen uns. Gifts, ach ne, wir sehen uns nicht, ich muss Saps giften, ich muss Saps giften, stimmt, Leute, das h\u00e4tte ich ja fast vergessen. Ich gifte Saps, easy, wie ging das nochmal? \u00c4h, Abos verschenken. So, hier 5 St\u00fcck, bam. Zwar, ich \u00fcberweise quasi 12 Euro an Amazon, wenn man so will. So, mal Chat, mal Chat, mal gucken wer Gl\u00fcck hat. Aber ich bin der Meinung, Moment, fuck, aber ich bin der Meinung, das h\u00e4tte sogar noch ein paar Prime Saps verdient heute. Any Primers, das hat so gut funktioniert und es ist echt ein Thema, wo es so gut wie nichts an Beispielprojekten gibt. Und das ist auch ein BigBrain Thema. Da k\u00f6nnte man schon mal den einen oder anderen Prime Sub noch dalassen, wenn man noch einen Prime Sub \u00fcbrig hat. Nur mal so zur Information f\u00fcr alle, die es noch nicht mitgekriegt haben, wenn ihr einen Amazon Prime Account habt, k\u00f6nnt ihr das mit eurem Twitch-Account verkn\u00fcpfen und dann k\u00f6nnt ihr einen Streamer einer Wahl einmal im Monat kostenlos mit einem Prime Sub unterst\u00fctzen. So, wer hat denn was gekriegt? Captain Falcon, Ponky, MB-Dealer, Robot Town und Business Raster, exquisite. Wer hat schon Amazon Prime? Wahrscheinlich 90% der Leute, die zugucken am Amazon Prime. Sehr sch\u00f6n, sehr sch\u00f6n. \u00c4h, Moment, was wollte ich jetzt nachgucken? Irgendetwas wollte ich gerade nachgucken. Achso. Achso. Hier. Hier ist es. Monarch S. Exzellent. Gut, wunderbar. Ah, nee, das ist, ich hab mich schon gefreut, das ist das Projekt-File. Ja klar, das braucht man. Man muss sich mal \u00fcberlegen, das ist echt nicht \u00fcbel. Wir haben hier insgesamt, das ist alles M\u00fcll, das braucht man nicht. Guck mal, wir haben 60 Zeilen HTML, 150 Zeilen C-Sharp. Das ist alles. Ach, nee. Und, okay, f\u00fcr 200 Zeilen C-Sharp, 60 Zeilen HTML. Also das ist wirklich top, da kann man echt nichts sagen. Also die Library scheint ihre Sache gut zu machen. Chat, wir sehen uns, n\u00e4chster Stream, machts gut, bis dann, wir sehen uns, CU.", "segments": [{"id": 1, "start": 0.0, "end": 22.56, "text": "Das war's f\u00fcr heute und wir sehen uns beim n\u00e4chsten Mal wieder!"}, {"id": 2, "start": 30.0, "end": 38.0, "text": "Das war's f\u00fcr heute und wir sehen uns beim n\u00e4chsten Mal wieder!"}, {"id": 3, "start": 60.0, "end": 68.0, "text": "So, exzellent! Da is er!"}, {"id": 4, "start": 72.0, "end": 76.0, "text": "So, \u00e4hm..."}, {"id": 5, "start": 77.0, "end": 80.0, "text": "H\u00f6rt sich ein schlimmer an als das andere."}, {"id": 6, "start": 80.0, "end": 90.0, "text": "Das kannst du mir nicht geben, das ist ja eklig."}, {"id": 7, "start": 91.0, "end": 103.0, "text": "Das ist ja einschlimmer als das andere."}, {"id": 8, "start": 104.0, "end": 107.0, "text": "Ja, meinetwegen."}, {"id": 9, "start": 107.0, "end": 111.0, "text": "Moin, Leute! Jetzt sind wieder viele am Start."}, {"id": 10, "start": 112.0, "end": 116.0, "text": "Ist quasi das Gegenst\u00fcck zum Subbox-K\u00e4mpfer auf YouTube."}, {"id": 11, "start": 117.0, "end": 120.0, "text": "Wir machen heute mal ein bisschen was anderes."}, {"id": 12, "start": 121.0, "end": 122.0, "text": "Wir programmieren mal wieder was."}, {"id": 13, "start": 123.0, "end": 126.0, "text": "Ich will n\u00e4mlich was ausprobieren und zwar..."}, {"id": 14, "start": 127.0, "end": 129.0, "text": "Was ist das hier auf Domain-Check?"}, {"id": 15, "start": 130.0, "end": 133.0, "text": "Magenta.Gay! Stimmt, das hab ich ja ganz vergessen."}, {"id": 16, "start": 133.0, "end": 137.0, "text": "Ich hab Magenta.Gay \u00fcbrigens nicht registriert."}, {"id": 17, "start": 138.0, "end": 142.0, "text": "So, ich muss mal kurz hier eine Runde Updates machen."}, {"id": 18, "start": 143.0, "end": 145.0, "text": "Weil ich wei\u00df nicht, ob ich die aktuelle.NET Core-Version hab."}, {"id": 19, "start": 146.0, "end": 147.0, "text": "Danke sch\u00f6n f\u00fcr die Zaps! Wer gibt's?"}, {"id": 20, "start": 148.0, "end": 149.0, "text": "KlokxHD! 13 Monate!"}, {"id": 21, "start": 150.0, "end": 152.0, "text": "Massive! 13 Monate, das ist ja quasi schon."}, {"id": 22, "start": 157.0, "end": 158.0, "text": "Exzellent!"}, {"id": 23, "start": 159.0, "end": 160.0, "text": "So, dann haben wir noch den Jatz..."}, {"id": 24, "start": 160.0, "end": 163.0, "text": "Ach nee, JET SQL."}, {"id": 25, "start": 164.0, "end": 165.0, "text": "Ich hab doch irgendeinen Flag!"}, {"id": 26, "start": 166.0, "end": 167.0, "text": "Nee, doch nicht SQL."}, {"id": 27, "start": 168.0, "end": 170.0, "text": "Ich hab n\u00e4mlich genau an der Stelle einen Flag auf dem Monitor."}, {"id": 28, "start": 171.0, "end": 173.0, "text": "Ich seh jetzt nicht, ob das ein I, sondern ein L ist."}, {"id": 29, "start": 174.0, "end": 175.0, "text": "Ich muss mal kurz scrollen."}, {"id": 30, "start": 176.0, "end": 177.0, "text": "Nee, das ist doch Jatz-Key eher."}, {"id": 31, "start": 178.0, "end": 180.0, "text": "Nicht JET SQL oder so."}, {"id": 32, "start": 181.0, "end": 183.0, "text": "So, danke sch\u00f6n f\u00fcr den Sub."}, {"id": 33, "start": 184.0, "end": 185.0, "text": "Der Taser ist 16 Monate am Start."}, {"id": 34, "start": 186.0, "end": 188.0, "text": "Jetzt wird's langsam echt schon hier."}, {"id": 35, "start": 188.0, "end": 191.0, "text": "Unangenehm langsam."}, {"id": 36, "start": 192.0, "end": 193.0, "text": "Wobei eigentlich..."}, {"id": 37, "start": 194.0, "end": 196.0, "text": "Also f\u00fcrs Geld, ja."}, {"id": 38, "start": 197.0, "end": 199.0, "text": "Danke sch\u00f6n f\u00fcr die ganzen 16 Monate."}, {"id": 39, "start": 200.0, "end": 202.0, "text": "Massive! Big Brain Subscription."}, {"id": 40, "start": 203.0, "end": 205.0, "text": "So, das soll man updaten hier."}, {"id": 41, "start": 206.0, "end": 207.0, "text": "Machen wir mal auf."}, {"id": 42, "start": 208.0, "end": 210.0, "text": "Ich zeig euch mal, was ich gefunden habe heute."}, {"id": 43, "start": 211.0, "end": 213.0, "text": "Ich guck ab und zu mal bei GitHub, was so trendet, was so neu ist, was ihr nicht gesehen habt."}, {"id": 44, "start": 214.0, "end": 216.0, "text": "Und ihr wisst ja, ich interessier mich f\u00fcr..."}, {"id": 45, "start": 216.0, "end": 224.0, "text": "Oder ich bastel schon eine Weile an einer Video-Streaming-Software f\u00fcr \u00dcberwachungskameras."}, {"id": 46, "start": 225.0, "end": 226.0, "text": "Allerdings rein f\u00fcr den Heimbereich."}, {"id": 47, "start": 227.0, "end": 229.0, "text": "Also sprich, die soll komplett im Browser funktionieren."}, {"id": 48, "start": 230.0, "end": 231.0, "text": "Ich hab ja auch schon was gebastelt."}, {"id": 49, "start": 232.0, "end": 233.0, "text": "Wir haben auch schon im Stream was gebastelt."}, {"id": 50, "start": 234.0, "end": 237.0, "text": "Die aktuelle Version, die ich laufen hab, ist mit.NET und mit Go."}, {"id": 51, "start": 238.0, "end": 243.0, "text": "Go f\u00fcr die Video-Streaming-Geschichte, weil es da f\u00fcr.NET nichts Gescheites gibt bis jetzt."}, {"id": 52, "start": 243.0, "end": 245.0, "text": "Und ich hab jetzt was gefunden."}, {"id": 53, "start": 246.0, "end": 248.0, "text": "So, haben wir jetzt einmal ordentlich geupdatet?"}, {"id": 54, "start": 249.0, "end": 250.0, "text": "Erstmal eine Runde..."}, {"id": 55, "start": 251.0, "end": 252.0, "text": "Oh, was ist denn hier alles drinne?"}, {"id": 56, "start": 253.0, "end": 254.0, "text": "Ja, komm, update mal, update mal, alles gut."}, {"id": 57, "start": 255.0, "end": 258.0, "text": "So, machen wir mal kurz unsere Idee auf und ich zeig euch das jetzt mal."}, {"id": 58, "start": 260.0, "end": 260.0, "text": "Ups."}, {"id": 59, "start": 261.0, "end": 262.0, "text": "Ah!"}, {"id": 60, "start": 266.0, "end": 267.0, "text": "Placer!"}, {"id": 61, "start": 268.0, "end": 269.0, "text": "Was ist denn hier los?"}, {"id": 62, "start": 270.0, "end": 271.0, "text": "Was ist denn hier los?"}, {"id": 63, "start": 271.0, "end": 274.0, "text": "\u00c4h, oh, 2019, das ist ja uralt."}, {"id": 64, "start": 275.0, "end": 277.0, "text": "Ok, ich muss mal kurz..."}, {"id": 65, "start": 278.0, "end": 279.0, "text": "Ihr d\u00fcrft jetzt nicht hingucken."}, {"id": 66, "start": 280.0, "end": 282.0, "text": "Ich muss mal kurz die Idee kaufen."}, {"id": 67, "start": 288.0, "end": 290.0, "text": "Ups, nein, ich will nicht Plant aufmachen."}, {"id": 68, "start": 291.0, "end": 292.0, "text": "Geh weg."}, {"id": 69, "start": 293.0, "end": 294.0, "text": "Ich hatte Plant noch nicht einmal auf."}, {"id": 70, "start": 295.0, "end": 296.0, "text": "Ich wei\u00df gar nicht, was ich mit dem M\u00fcll machen soll."}, {"id": 71, "start": 297.0, "end": 298.0, "text": "Geh weg, Plant."}, {"id": 72, "start": 298.0, "end": 300.0, "text": "Yes."}, {"id": 73, "start": 301.0, "end": 302.0, "text": "So."}, {"id": 74, "start": 303.0, "end": 305.0, "text": "Evaluation Feedback, no thanks."}, {"id": 75, "start": 306.0, "end": 307.0, "text": "So, wir machen jetzt erstmal ein Update."}, {"id": 76, "start": 308.0, "end": 309.0, "text": "Hab mich die Chatbrains Toolbox..."}, {"id": 77, "start": 310.0, "end": 311.0, "text": "Komm, wir machen erstmal ein Update."}, {"id": 78, "start": 312.0, "end": 313.0, "text": "Will it Plant?"}, {"id": 79, "start": 314.0, "end": 315.0, "text": "Ey, die Typen machen wieder Videos."}, {"id": 80, "start": 316.0, "end": 317.0, "text": "Die machen wieder Videos."}, {"id": 81, "start": 318.0, "end": 319.0, "text": "Die haben vier Jahre keine Videos gemacht, der Dude."}, {"id": 82, "start": 320.0, "end": 321.0, "text": "Und hat letztens wieder eins hochgeladen."}, {"id": 83, "start": 322.0, "end": 323.0, "text": "Vor einer Woche."}, {"id": 84, "start": 324.0, "end": 325.0, "text": "Guck mal, die haben ewig..."}, {"id": 85, "start": 325.0, "end": 327.0, "text": "Der macht so wenig Videos wie ich."}, {"id": 86, "start": 328.0, "end": 329.0, "text": "Und die sind wieder am Start."}, {"id": 87, "start": 336.0, "end": 337.0, "text": "\u00c4h, ja, komm, mach Update."}, {"id": 88, "start": 338.0, "end": 339.0, "text": "Auf geht's."}, {"id": 89, "start": 340.0, "end": 341.0, "text": "Einmal Toolbox starten."}, {"id": 90, "start": 344.0, "end": 345.0, "text": "Toolbox startet nicht."}, {"id": 91, "start": 346.0, "end": 347.0, "text": "Exzellent."}, {"id": 92, "start": 350.0, "end": 351.0, "text": "Hallo Mom, startet meine Chatbrains..."}, {"id": 93, "start": 352.0, "end": 353.0, "text": "Ach, die update gerade, deswegen startet die net."}, {"id": 94, "start": 353.0, "end": 354.0, "text": "Das ist ja okay, das ist logisch."}, {"id": 95, "start": 355.0, "end": 359.0, "text": "Ja, \u00e4h, w\u00e4hrend das Update kann ich euch ja mal erkl\u00e4ren, um was es geht."}, {"id": 96, "start": 360.0, "end": 365.0, "text": "Und zwar, \u00e4h, wie gesagt, ich verwende ja gerade, oder ich bin ja schon seit langer Zeit dabei,"}, {"id": 97, "start": 366.0, "end": 371.0, "text": "so eine Webcam, also Security-Kamera-\u00dcberwachungssoftware zu programmieren."}, {"id": 98, "start": 372.0, "end": 375.0, "text": "Allerdings nichts gro\u00dfartig ausgefallenes, jetzt nicht sowas wie Blue Iris oder sowas,"}, {"id": 99, "start": 376.0, "end": 381.0, "text": "sondern im Prinzip einfach nur aus der Notlage heraus,"}, {"id": 100, "start": 381.0, "end": 386.0, "text": "weil ich nichts Gescheites gefunden habe, was das macht, was ich, was ich machen will."}, {"id": 101, "start": 387.0, "end": 391.0, "text": "Und ich, Problem ist, ich kann's euch jetzt nicht wirklich zeigen, weil da die Kameras von mir drin sind."}, {"id": 102, "start": 392.0, "end": 395.0, "text": "\u00c4hm, guckt grad mal."}, {"id": 103, "start": 398.0, "end": 399.0, "text": "Ob man das vielleicht sieht."}, {"id": 104, "start": 402.0, "end": 405.0, "text": "\u00c4h, ne, dann soll ich nicht zeigen."}, {"id": 105, "start": 405.0, "end": 410.0, "text": "Ne, egal, also ihr m\u00fcsst mir, ihr m\u00fcsst mir das jetzt glauben, wobei doch, ich kann euch, ich kann euch den,"}, {"id": 106, "start": 411.0, "end": 413.0, "text": "kann euch den oberen Teil zeigen, ne."}, {"id": 107, "start": 414.0, "end": 421.0, "text": "Also wenn man hier im Browser draufgeht auf die Webseite, dann, \u00e4hm, kriegt man halt Kameras angezeigt, wenn's l\u00e4dt."}, {"id": 108, "start": 422.0, "end": 423.0, "text": "Also, oh."}, {"id": 109, "start": 424.0, "end": 425.0, "text": "Okay, das ist jetzt, das ist schlecht."}, {"id": 110, "start": 426.0, "end": 431.0, "text": "Ah, sieht man das Hoftor, sieht man hier hinten das Zimmer von der Katz, sieht man hier unten den, den B\u00fcrgersteig ein bisschen"}, {"id": 111, "start": 432.0, "end": 433.0, "text": "und da unten sieht man die Treppe, aber das ist jetzt..."}, {"id": 112, "start": 433.0, "end": 440.0, "text": "\u00c4hm, genau, und da, wie gesagt, das kann auch ein bisschen was aufnehmen und zumindest ist es aus der Notlage herausgeboren,"}, {"id": 113, "start": 441.0, "end": 449.0, "text": "weil ich nichts anderes gefunden hab und meine Anforderung ist, dass ich das im Browser verwenden kann."}, {"id": 114, "start": 451.0, "end": 456.0, "text": "Face League, ja, genau, also das nat\u00fcrlich, ich hab hier keine Kamera drin, aber definitiv Face League."}, {"id": 115, "start": 457.0, "end": 461.0, "text": "So, und das Problem ist halt, es gibt nichts Gescheites, was im Browser funktioniert."}, {"id": 116, "start": 461.0, "end": 464.0, "text": "Zumindest nichts, was im Browser Low Latency funktioniert."}, {"id": 117, "start": 465.0, "end": 469.0, "text": "Ich hab das vor einer ganzen Weile schon mal hier, wir haben sogar im Stream schon mal ein bisschen rumgebastelt."}, {"id": 118, "start": 470.0, "end": 474.0, "text": "Hast du Dezember wieder frei? Ja, ich hab kompletten, kompletten Dezember frei."}, {"id": 119, "start": 475.0, "end": 480.0, "text": "So, und, \u00e4hm, die Sache ist die, wie ich das jetzt aktuell gemacht hab, ist folgendes,"}, {"id": 120, "start": 480.0, "end": 491.0, "text": "dass das Late, also Latency-Frei bedeutet bei mir, ich will im Browser, sag mal so, nicht wirklich mehr als eine Sekunde durch Verarbeitung drauf kriegen,"}, {"id": 121, "start": 492.0, "end": 499.0, "text": "was bei Security-Kameras irgendwo ein wichtiger, oder generell bei Kameras generell ein wichtiger Aspekt ist."}, {"id": 122, "start": 500.0, "end": 502.0, "text": "Dezember-Frei, das gibt's doch, klar, wenn man sich Urlaub nimmt, gibt's das."}, {"id": 123, "start": 502.0, "end": 509.0, "text": "Und, so, genau, also, \u00e4hm, es gibt verschiedene Varianten, wie man Video-Streams im Browser kriegt."}, {"id": 124, "start": 510.0, "end": 514.0, "text": "So, die bekannteste ist, glaub ich, \u00e4h, hier MJPEG, aber das suckt."}, {"id": 125, "start": 515.0, "end": 519.0, "text": "Das kann so gut wie jede Kamera in irgendeiner Art und Weise, und das sind einfach Snapshots,"}, {"id": 126, "start": 520.0, "end": 523.0, "text": "also der macht einfach Bilder, einzelne Bilder, und \u00fcbertr\u00e4gt die dann."}, {"id": 127, "start": 524.0, "end": 528.0, "text": "Das ist erstens ziemlich gro\u00df, von der Bandbreite, das ist lokal nicht so schlimm,"}, {"id": 128, "start": 528.0, "end": 534.0, "text": "das ist sehr ressourcenintensiv, und es ist lahm, und es suckt, also, MJPEG ist \u00fcbelster Crap."}, {"id": 129, "start": 535.0, "end": 538.0, "text": "So, das n\u00e4chste, was es gibt, um Sachen in Browser zu streamen, ist HTS."}, {"id": 130, "start": 539.0, "end": 542.0, "text": "Das ist das, was Twitch fr\u00fcher gemacht hat."}, {"id": 131, "start": 543.0, "end": 546.0, "text": "Mittlerweile macht Twitch da moderneres HTS."}, {"id": 132, "start": 547.0, "end": 551.0, "text": "Das, \u00e4h, ne, genau, das ist, hat Sache, die urspr\u00fcnglich sich Apple ausgedacht hat,"}, {"id": 133, "start": 551.0, "end": 558.0, "text": "HTS-Live-Streaming, das ist eigentlich was total Simples."}, {"id": 134, "start": 559.0, "end": 563.0, "text": "Das besteht aus einer Playlist und aus kleinen Schnipseln Video."}, {"id": 135, "start": 564.0, "end": 567.0, "text": "Und man kriegt einfach immer eine aktualisierte Playlist geschickt,"}, {"id": 136, "start": 568.0, "end": 570.0, "text": "mit so zwei bis drei Sekunden Videoschnipsel."}, {"id": 137, "start": 571.0, "end": 575.0, "text": "Vielleicht habt ihr euch schon mal gefragt, warum, wenn ihr Twitch reloadet, die Seite,"}, {"id": 138, "start": 575.0, "end": 581.0, "text": "ihr manchmal ein bisschen hinten dran seid und das noch mal seht, was ihr gerade schon gesehen habt."}, {"id": 139, "start": 582.0, "end": 585.0, "text": "Und das liegt an diesen kleinen Schnipseln von HTS."}, {"id": 140, "start": 586.0, "end": 589.0, "text": "Also sprich, ihr bekommt eine Playlist, da ist ein 3-Sekunden-Schnipsel drin,"}, {"id": 141, "start": 590.0, "end": 593.0, "text": "oder ein 4-, oder ein 5-Sekunden-, oder ein 0-, oder ein 0-, 500-millisekunden-Schnipsel,"}, {"id": 142, "start": 594.0, "end": 595.0, "text": "das kann man sich aussuchen."}, {"id": 143, "start": 596.0, "end": 599.0, "text": "Und, \u00e4hm, sagen wir mal, ihr bekommt einen 3-Sekunden-Videoschnipsel geschickt,"}, {"id": 144, "start": 599.0, "end": 604.0, "text": "und ihr, \u00e4h, nicht HTS, ich meine HLS, ich komme nicht auf HTS, Schwachsinn."}, {"id": 145, "start": 605.0, "end": 607.0, "text": "So, und ihr kriegt einen Videoschnipsel geschickt,"}, {"id": 146, "start": 608.0, "end": 611.0, "text": "so, und dann guckt ihr den Videoschnipsel, zwei Sekunden, refreshed,"}, {"id": 147, "start": 612.0, "end": 614.0, "text": "und dann bekommt ihr, weil das noch kein neues Videoschnipsel ist,"}, {"id": 148, "start": 615.0, "end": 616.0, "text": "weil das gerade noch aktuell ist, bekommt ihr das gleiche noch mal,"}, {"id": 149, "start": 617.0, "end": 619.0, "text": "und dann guckt ihr euch die zwei Sekunden, die ihr schon gesehen habt, noch mal an."}, {"id": 150, "start": 620.0, "end": 624.0, "text": "So, \u00e4h, so, das ist eine Sache, die funktioniert \u00e4u\u00dferst zuverl\u00e4ssig mittlerweile,"}, {"id": 151, "start": 625.0, "end": 626.0, "text": "das ist ziemlich gut."}, {"id": 152, "start": 626.0, "end": 631.0, "text": "\u00c4hm, allerdings, sagt das, auch, weil es hat Latency,"}, {"id": 153, "start": 632.0, "end": 634.0, "text": "ihr m\u00fcsst euch \u00fcberlegen, so eine Playlist hat vielleicht 5 Eintr\u00e4ge,"}, {"id": 154, "start": 635.0, "end": 636.0, "text": "und jeweils 2-Sekunden-Schnipsel,"}, {"id": 155, "start": 637.0, "end": 639.0, "text": "und selbst wenn man das runterdreht auf 500-millisekunden-Schnipsel,"}, {"id": 156, "start": 640.0, "end": 643.0, "text": "sehen wir noch mal 5, man hat ordentlich Latency."}, {"id": 157, "start": 644.0, "end": 645.0, "text": "So, das Beste, was man machen kann, ist,"}, {"id": 158, "start": 646.0, "end": 650.0, "text": "also, Neba, Neba HTTP 2 Live-Streaming und Gesch\u00fctz, was Twitch mittlerweile macht,"}, {"id": 159, "start": 651.0, "end": 653.0, "text": "das Beste, das Beste, was man machen kann, ist WebRTC."}, {"id": 160, "start": 653.0, "end": 658.0, "text": "Und, \u00e4h, meine aktuelle Software, das war ich euch gerade gezeigt im Browser,"}, {"id": 161, "start": 659.0, "end": 660.0, "text": "die macht das Ganze auch per WebRTC,"}, {"id": 162, "start": 661.0, "end": 663.0, "text": "die ist, \u00e4h, funktioniert ungef\u00e4hr so,"}, {"id": 163, "start": 664.0, "end": 665.0, "text": "ich habe einen FFmpeg laufen, also,"}, {"id": 164, "start": 666.0, "end": 669.0, "text": "FFmpeg als Library, kein Kommando-Zeilen-Programm."}, {"id": 165, "start": 670.0, "end": 674.0, "text": "Und, \u00e4h, \u00fcbrigens, weil ich im Chat jetzt ein paar Mal WebRTC gelesen habe,"}, {"id": 166, "start": 675.0, "end": 677.0, "text": "WebRTC ist ziemlich beliebt f\u00fcr so Videokonferenz-Calls,"}, {"id": 167, "start": 678.0, "end": 679.0, "text": "die meisten Videokonferenz-Sachen werden \u00fcber WebRTC gehen,"}, {"id": 168, "start": 679.0, "end": 683.0, "text": "WebRTC ist auch ziemlich easy, wenn man von Browser zu Browser das Ganze machen will,"}, {"id": 169, "start": 684.0, "end": 685.0, "text": "weil die Implementierung gut ist."}, {"id": 170, "start": 686.0, "end": 688.0, "text": "Wenn man von einem Server-Backend zu einem Browser streamen will,"}, {"id": 171, "start": 689.0, "end": 690.0, "text": "ist das schon ein bisschen komplizierter,"}, {"id": 172, "start": 691.0, "end": 693.0, "text": "und glaubt mir, ich spreche aus Erfahrung, ich habe den Gramm selbst programmiert."}, {"id": 173, "start": 694.0, "end": 696.0, "text": "Also, ich, das ist nicht so sch\u00f6n."}, {"id": 174, "start": 697.0, "end": 699.0, "text": "So, es gibt auch nicht so viele Libraries zur Auswahl."}, {"id": 175, "start": 700.0, "end": 703.0, "text": "Weil die urspr\u00fcnglichen WebRTC-Bindings von Chrome,"}, {"id": 176, "start": 704.0, "end": 707.0, "text": "das ist irgendwie, fragt mich nicht, 50 Milliarden Zeilen C++-Code,"}, {"id": 177, "start": 707.0, "end": 708.0, "text": "und das gebe ich mir nicht."}, {"id": 178, "start": 709.0, "end": 711.0, "text": "Aber WebRTC ist so ziemlich die beste \u00dcbertragungssache,"}, {"id": 179, "start": 712.0, "end": 713.0, "text": "wenn man Low-Latency im Browser haben will."}, {"id": 180, "start": 714.0, "end": 717.0, "text": "So, und, \u00e4hm, aktuell verwende ich"}, {"id": 181, "start": 719.0, "end": 722.0, "text": "diese WebRTC-Library, das ist in Go programmiert."}, {"id": 182, "start": 723.0, "end": 724.0, "text": "Allerdings ist meine Anwendung in sich in.NET Core,"}, {"id": 183, "start": 725.0, "end": 728.0, "text": "und, \u00e4hm, deswegen suche ich die ganze Zeit schon nach einer.NET Core-Library,"}, {"id": 184, "start": 729.0, "end": 730.0, "text": "die das Ganze machen kann."}, {"id": 185, "start": 731.0, "end": 734.0, "text": "Aber das ist so ziemlich die beste WebRTC-Library, die ich kenne,"}, {"id": 186, "start": 734.0, "end": 736.0, "text": "\u00e4h, deswegen habe ich die halt verwendet."}, {"id": 187, "start": 737.0, "end": 741.0, "text": "Aber muss halt sagen, dass es ein bisschen eklig ist,"}, {"id": 188, "start": 742.0, "end": 746.0, "text": "Go und.NET zusammen zu bringen."}, {"id": 189, "start": 747.0, "end": 751.0, "text": "Das geht nur \u00fcber den Umweg von irgendwelchen C-Export-Geschichten und so."}, {"id": 190, "start": 752.0, "end": 754.0, "text": "Es geht, ich meine, sonst h\u00e4ttet ihr das Video eben im Browser nicht gesehen,"}, {"id": 191, "start": 755.0, "end": 756.0, "text": "aber sch\u00f6n ist das Ganze nicht."}, {"id": 192, "start": 757.0, "end": 759.0, "text": "Deswegen war ich die ganze Zeit auf einer Suche nach einer.NET-Library,"}, {"id": 193, "start": 760.0, "end": 762.0, "text": "die das kann, und ich habe vorhin, \u00e4h,"}, {"id": 194, "start": 762.0, "end": 766.0, "text": "was entdeckt auf GitHub, das muss ich unbedingt mal ausprobieren,"}, {"id": 195, "start": 767.0, "end": 770.0, "text": "n\u00e4mlich den ganzen Kram hier, Moment, den da."}, {"id": 196, "start": 771.0, "end": 775.0, "text": "ZIP-Sorcery hei\u00dft ZIP, kann ZIP, interessiert mich aber nicht,"}, {"id": 197, "start": 776.0, "end": 778.0, "text": "kann auch WebRTC, und WebRTC ist eigentlich das Interessante."}, {"id": 198, "start": 779.0, "end": 783.0, "text": "So, und wie das aktuell funktioniert, wie ich das mache mit der aktuellen Software,"}, {"id": 199, "start": 784.0, "end": 787.0, "text": "ist folgenderma\u00dfen, ich nehme FFmpeg als Library,"}, {"id": 200, "start": 787.0, "end": 792.0, "text": "ruf RTSP von den Kameras ab, das machen wir jetzt auch gleich im Stream."}, {"id": 201, "start": 793.0, "end": 795.0, "text": "Insgesamt wird das heute vielleicht 1-200 Zeilen, das wird nicht viel."}, {"id": 202, "start": 796.0, "end": 799.0, "text": "Einfach so mal testen, ob's geht, wenn's geht, ist gut, wenn's nicht geht, hab ich Pech."}, {"id": 203, "start": 800.0, "end": 806.0, "text": "Das ruft den Stream von den Webcams ab und decoded den Stream aber nicht."}, {"id": 204, "start": 807.0, "end": 809.0, "text": "Das ist grad der Witz an dem, was ich gebastelt hab."}, {"id": 205, "start": 810.0, "end": 814.0, "text": "Die ganzen anderen Video-Streaming-L\u00f6sungen, die machen erstens nix \u00fcber WebRTC oder die wenigsten,"}, {"id": 206, "start": 814.0, "end": 818.0, "text": "und die decoden und encoden den ganzen schei\u00df Bild rum."}, {"id": 207, "start": 819.0, "end": 822.0, "text": "Was hei\u00dft, du kannst da gar nicht mal wirklich viele Kameras auf so was wie einen Raspberry Pi laufen lassen."}, {"id": 208, "start": 823.0, "end": 827.0, "text": "Sondern was ich mache ist, ich nehm den Stream von der Kamera,"}, {"id": 209, "start": 828.0, "end": 832.0, "text": "empfange den mit FFmpeg, aber ich decode den Stream nicht."}, {"id": 210, "start": 833.0, "end": 841.0, "text": "Ich kopiere mir einfach nur die einzelnen Pakete und schreib die dann quasi \u00fcber WebRTC in den Browser rein."}, {"id": 211, "start": 841.0, "end": 847.0, "text": "Das setzt nat\u00fcrlich zwei Dinger voraus, dass die Kamera einen Codec verwendet, den der Browser versteht."}, {"id": 212, "start": 848.0, "end": 851.0, "text": "Und umgedreht, dass der Browser einen Codec unterst\u00fctzt, den die Kamera verwendet."}, {"id": 213, "start": 853.0, "end": 856.0, "text": "Okay, so war's, wie es aktuell funktioniert."}, {"id": 214, "start": 857.0, "end": 868.0, "text": "Und mir geht's halt auf den Keks, dass ich so eine \u00fcbelste Hybridgeschichte hab aus relativ viel Go und.NET Core, ASP.NET f\u00fcr die Web-Anwendung."}, {"id": 215, "start": 868.0, "end": 871.0, "text": "Das ist nicht sch\u00f6n, macht auch ab und zu mal irgendwelche MemoryLeak-Probleme."}, {"id": 216, "start": 872.0, "end": 876.0, "text": "Ich glaube, ich hab bei dieser Geschichte mehr MemoryLeaks gesucht, als die letzten zehn Jahre zusammen."}, {"id": 217, "start": 878.0, "end": 882.0, "text": "Weil gerade Go an sich ist ja kein Problem,.NET an sich ist auch kein Problem."}, {"id": 218, "start": 883.0, "end": 887.0, "text": "Aber wenn man da in Top macht, gibt's ein paar Problemchen ab und zu mal."}, {"id": 219, "start": 888.0, "end": 891.0, "text": "Manchmal crasht's auch random und man wei\u00df nicht warum."}, {"id": 220, "start": 892.0, "end": 894.0, "text": "Das hab ich jetzt soweit alles hingekriegt, das l\u00e4uft jetzt ziemlich stabil."}, {"id": 221, "start": 894.0, "end": 897.0, "text": "Aber es w\u00e4r nat\u00fcrlich sch\u00f6n, wenn ich.NET Library verwende."}, {"id": 222, "start": 898.0, "end": 901.0, "text": "So, was ist eigentlich der Unterschied zwischen WebRTC und WebSockets?"}, {"id": 223, "start": 902.0, "end": 904.0, "text": "Das sind zwei komplett unterschiedliche Paar Schuhe."}, {"id": 224, "start": 905.0, "end": 910.0, "text": "WebSockets ist... ist quasi... da muss ich jetzt erstmal..."}, {"id": 225, "start": 911.0, "end": 914.0, "text": "Also normalerweise ist HTTP ist ja Response."}, {"id": 226, "start": 915.0, "end": 917.0, "text": "Also du schickst was hin und kriegst eine Antwort, fertig."}, {"id": 227, "start": 918.0, "end": 920.0, "text": "Also HTTP ist nicht... hat kein State in dem Sinn."}, {"id": 228, "start": 920.0, "end": 923.0, "text": "So, und da haben sie sich gedacht, okay, es w\u00e4re ja auch nicht schlecht,"}, {"id": 229, "start": 924.0, "end": 928.0, "text": "wenn man quasi eine konstante Verbindung vom Server zum Client haben k\u00f6nnte."}, {"id": 230, "start": 929.0, "end": 931.0, "text": "Nicht nur Client Request Server antwortet, sondern auch,"}, {"id": 231, "start": 932.0, "end": 936.0, "text": "dass der Server den Client benachrichtigen k\u00f6nnte, wenn sich was \u00e4ndert."}, {"id": 232, "start": 937.0, "end": 939.0, "text": "So, irgendwelche Live-Notifications oder sowas."}, {"id": 233, "start": 940.0, "end": 943.0, "text": "So, und daf\u00fcr ist WebSocket da. WebSocket ist eigentlich nur so ein Message-Protokoll,"}, {"id": 234, "start": 943.0, "end": 949.0, "text": "was \u00fcber lang laufende TCP-Sessions unter der Haube, die quasi erm\u00f6glicht,"}, {"id": 235, "start": 950.0, "end": 953.0, "text": "dass du vom Server den Client benachrichtigen kannst, wenn sich was getan hat."}, {"id": 236, "start": 954.0, "end": 956.0, "text": "Das erm\u00f6glicht... das geht HTTP nicht."}, {"id": 237, "start": 957.0, "end": 960.0, "text": "Hat Max seinen WebSock schon geh\u00f6rt? Nee, was?"}, {"id": 238, "start": 961.0, "end": 964.0, "text": "Das funktioniert... das ist so nicht gedacht mit HTTP."}, {"id": 239, "start": 965.0, "end": 967.0, "text": "Und mit WebSockets geht das Ganze."}, {"id": 240, "start": 967.0, "end": 973.0, "text": "So, und WebRTC ist noch was anderes. WebRTC ist in der Hauptsache"}, {"id": 241, "start": 974.0, "end": 981.0, "text": "ein Protokoll f\u00fcr Audio-Video-\u00dcbertragung mit relativ geringer Latenz"}, {"id": 242, "start": 982.0, "end": 985.0, "text": "vom Browser zu einem anderen Browser. Oder von einem Client zum anderen Client."}, {"id": 243, "start": 986.0, "end": 990.0, "text": "WebRTC kann zwar auch Messages \u00fcbertragen,"}, {"id": 244, "start": 991.0, "end": 993.0, "text": "das ist aber ziemlich gro\u00dfe \u00dcberschneidung mit WebSockets,"}, {"id": 245, "start": 993.0, "end": 996.0, "text": "wenn man da einfach nur Data-Channel-Text \u00fcbertr\u00e4gt."}, {"id": 246, "start": 997.0, "end": 1002.0, "text": "Daf\u00fcr w\u00fcrde ich auch kein WebRTC verwenden. WebRTC ist eigentlich haupts\u00e4chlich f\u00fcr Audio-Video-Kram."}, {"id": 247, "start": 1005.0, "end": 1009.0, "text": "DollyJoker, f\u00fcnf Monate. Dankesch\u00f6n. Excellent Subscription."}, {"id": 248, "start": 1014.0, "end": 1018.0, "text": "Hast du schon mal was mit XMPP? Das ist Dings, wie hei\u00dft es?"}, {"id": 249, "start": 1019.0, "end": 1021.0, "text": "Jabber, ne? XMPP. Nee, habe ich schon nichts gemacht."}, {"id": 250, "start": 1021.0, "end": 1024.0, "text": "Also, ich habe schon welche benutzt, aber nicht verwendet."}, {"id": 251, "start": 1025.0, "end": 1028.0, "text": "Genau, und das ist die Library, die ich aktuell benutze f\u00fcr WebRTC-Kram."}, {"id": 252, "start": 1029.0, "end": 1032.0, "text": "Das, was ich euch gerade im Browser gezeigt habe. F\u00fcr die Kameras."}, {"id": 253, "start": 1033.0, "end": 1038.0, "text": "Und Interop sagt halt go.net. Deswegen habe ich mich sehr gefreut,"}, {"id": 254, "start": 1039.0, "end": 1041.0, "text": "vorhin, als ich diesen Kollege hier entdeckt habe."}, {"id": 255, "start": 1042.0, "end": 1045.0, "text": "N\u00e4mlich, die Library scheint es noch gar nicht so lange zu geben, ehrlich gesagt."}, {"id": 256, "start": 1045.0, "end": 1050.0, "text": "Zumindest nicht mit WebRTC-Support, weil die ganzen Beispiele sind doch erst ein paar Tage alt."}, {"id": 257, "start": 1051.0, "end": 1056.0, "text": "So, und das ist wieder so ein komischer Livestream an Musik,"}, {"id": 258, "start": 1057.0, "end": 1059.0, "text": "der sich nicht entscheiden kann, wie laut was ist."}, {"id": 259, "start": 1060.0, "end": 1062.0, "text": "Ich mache jetzt irgendwie mal sowas da an."}, {"id": 260, "start": 1062.0, "end": 1071.0, "text": "Okay, das w\u00e4re fast ein bisschen viel gechillert."}, {"id": 261, "start": 1072.0, "end": 1077.0, "text": "Okay, guck mal, ob das was taugt."}, {"id": 262, "start": 1078.0, "end": 1080.0, "text": "Deswegen habe ich mich echt gefreut, als ich vorhin die Library gefunden habe."}, {"id": 263, "start": 1081.0, "end": 1084.0, "text": "Die hat seit noch nicht allzu langer Zeit, w\u00fcrde ich sagen, WebRTC-Support."}, {"id": 264, "start": 1085.0, "end": 1088.0, "text": "Das sieht man n\u00e4mlich daran, dass, wenn man sich die Beispiele anguckt,"}, {"id": 265, "start": 1089.0, "end": 1090.0, "text": "die sind teilweise nur 5 oder 4 Tage alt."}, {"id": 266, "start": 1090.0, "end": 1096.0, "text": "So, und es gibt wirklich nur ziemlich wenig WebRTC-Libraries, mit denen man das machen kann."}, {"id": 267, "start": 1097.0, "end": 1100.0, "text": "Die besten sind im Browser eingebaut. Die funktioniert n\u00e4mlich auch."}, {"id": 268, "start": 1101.0, "end": 1104.0, "text": "So, dann gibt es die eigentliche Chrome WebRTC-Implementierung."}, {"id": 269, "start": 1105.0, "end": 1108.0, "text": "Das ist, was wei\u00df ich, eine Millionenzeile C++ oder sowas."}, {"id": 270, "start": 1109.0, "end": 1110.0, "text": "Dann gibt es noch das hier."}, {"id": 271, "start": 1111.0, "end": 1117.0, "text": "Es gibt irgendeine Python-Implementierung, die aber total viele Probleme hat mit H.264-encoded-Videos."}, {"id": 272, "start": 1117.0, "end": 1120.0, "text": "Und es gibt das hier. Ansonsten gibt es nicht allzu viel."}, {"id": 273, "start": 1121.0, "end": 1122.0, "text": "Also das ist wirklich nice."}, {"id": 274, "start": 1123.0, "end": 1125.0, "text": "Wenn ihr mal was anderes kennt, sagt Pride, ich kenne nur diese paar."}, {"id": 275, "start": 1126.0, "end": 1128.0, "text": "Und das hier ist mit Abstand die beste Implementierung."}, {"id": 276, "start": 1129.0, "end": 1130.0, "text": "Diese haben auch am einfachsten zu benutzen."}, {"id": 277, "start": 1131.0, "end": 1134.0, "text": "Aber wenn man nicht komplett alles in Go macht, ist es ein bisschen eklig."}, {"id": 278, "start": 1135.0, "end": 1141.0, "text": "Dazu kommt, dass man f\u00fcr Audio-Video-Zeug sich Go an sich gar nicht so sehr anbietet,"}, {"id": 279, "start": 1141.0, "end": 1151.0, "text": "weil Go ziemlich mies ist, wenn es um Zusammenarbeit mit C-Libraries geht."}, {"id": 280, "start": 1152.0, "end": 1155.0, "text": "Und wenn man Audio-Video-Zeug macht, gibt es zwei Sachen."}, {"id": 281, "start": 1156.0, "end": 1159.0, "text": "Es gibt G-Streamer und es gibt FFmpeg. Und das ist beides in C."}, {"id": 282, "start": 1159.0, "end": 1171.0, "text": "Das hei\u00dft, wenn ich Go benutze f\u00fcr Audio-Video, muss ich permanent VLC..."}, {"id": 283, "start": 1172.0, "end": 1174.0, "text": "Ja, VLC ist was eigenes, aber mit FFmpeg dabei."}, {"id": 284, "start": 1175.0, "end": 1179.0, "text": "Also die haben FFmpeg noch zus\u00e4tzlich dabei f\u00fcr das, was sie nicht selbst k\u00f6nnen."}, {"id": 285, "start": 1180.0, "end": 1182.0, "text": "Aber haupts\u00e4chlich ist es G-Streamer und FFmpeg."}, {"id": 286, "start": 1183.0, "end": 1187.0, "text": "Ich glaube mir, au\u00dfer VLC f\u00e4llt mir ehrlich gesagt keine Software an, die VLC als Library verwendet."}, {"id": 287, "start": 1187.0, "end": 1193.0, "text": "G-Streamer ist tats\u00e4chlich im Profi-Umfeld recht beliebt, habe ich mir sagen lassen."}, {"id": 288, "start": 1194.0, "end": 1196.0, "text": "Keine Ahnung, kann ich weder best\u00e4tigen noch was dagegen sagen."}, {"id": 289, "start": 1197.0, "end": 1200.0, "text": "Aber FFmpeg ist ansonsten in so ziemlich jeder Software, die Videos abspielt"}, {"id": 290, "start": 1201.0, "end": 1204.0, "text": "und die nicht unter Only-Windows l\u00e4uft, ist FFmpeg am Werk f\u00fcr Videos."}, {"id": 291, "start": 1205.0, "end": 1207.0, "text": "Oder G-Streamer."}, {"id": 292, "start": 1208.0, "end": 1213.0, "text": "Genau, und der Interop zwischen Go und C ist halt ein bisschen lahm und auch eklig."}, {"id": 293, "start": 1213.0, "end": 1220.0, "text": "Deswegen ist Audio-Video in Go halt doof, weil die gr\u00f6\u00dften Libraries eben in C sind."}, {"id": 294, "start": 1221.0, "end": 1225.0, "text": "Excellent, aber bevor ich jetzt lange labere, wir fangen jetzt mal an."}, {"id": 295, "start": 1226.0, "end": 1228.0, "text": "Da wird es glaube ich relativ klar, was ich mache."}, {"id": 296, "start": 1229.0, "end": 1232.0, "text": "Ich brauche wieder mal ein Test-Video."}, {"id": 297, "start": 1234.0, "end": 1236.0, "text": "Wo ist das Test-RTSP hier, den da?"}, {"id": 298, "start": 1236.0, "end": 1242.0, "text": "Den verwenden wir wieder zum Testen, den Stream."}, {"id": 299, "start": 1243.0, "end": 1245.0, "text": "RTSP-Stream."}, {"id": 300, "start": 1246.0, "end": 1251.0, "text": "Huge-Quali-Stream, aber ist egal, wenn das Video l\u00e4uft, dann l\u00e4uft es."}, {"id": 301, "start": 1252.0, "end": 1255.0, "text": "Also, Go ist eine super Sprache im 079."}, {"id": 302, "start": 1256.0, "end": 1258.0, "text": "Also, bis auf ein paar Sachen, die mir echt auf den Keks gehen."}, {"id": 303, "start": 1259.0, "end": 1260.0, "text": "Aber sicher ist Go cool."}, {"id": 304, "start": 1261.0, "end": 1263.0, "text": "Wenn man aber Interop zu anderen Sprachen braucht, ist Go nicht so gut."}, {"id": 305, "start": 1263.0, "end": 1268.0, "text": "Also, wenn man in Go Libraries verwenden will, die es eben nicht in Go gibt, dann ist es nicht so sch\u00f6n."}, {"id": 306, "start": 1269.0, "end": 1273.0, "text": "Dann ist es sogar in Python theoretisch schneller, wenn du C-Interop machen willst."}, {"id": 307, "start": 1274.0, "end": 1276.0, "text": "Daf\u00fcr ist der Rest nicht sonderlich gespint."}, {"id": 308, "start": 1278.0, "end": 1279.0, "text": "So, also."}, {"id": 309, "start": 1280.0, "end": 1285.0, "text": "Ach nee, Moment, ich wollte ja noch die IDEs aktualisieren."}, {"id": 310, "start": 1286.0, "end": 1287.0, "text": "Coolbox."}, {"id": 311, "start": 1288.0, "end": 1290.0, "text": "Oh, excellent."}, {"id": 312, "start": 1290.0, "end": 1292.0, "text": "Excellent. 1KS, was ist das jetzt?"}, {"id": 313, "start": 1296.0, "end": 1299.0, "text": "Warum startet meine Jetplanes Toolbox nicht? Was ist denn das?"}, {"id": 314, "start": 1301.0, "end": 1303.0, "text": "Hallo? Toolbox starten, please."}, {"id": 315, "start": 1305.0, "end": 1307.0, "text": "Ich bin verwirrt, warum geht das nicht?"}, {"id": 316, "start": 1311.0, "end": 1313.0, "text": "Ich will einfach nur mein Zeug updaten."}, {"id": 317, "start": 1316.0, "end": 1318.0, "text": "Weil ich, what?"}, {"id": 318, "start": 1318.0, "end": 1322.0, "text": "Und, ah, ich habe bestimmt Kernel updaten. Ich reboote mal. Reboot hilft immer."}, {"id": 319, "start": 1323.0, "end": 1324.0, "text": "Excellent, Reboot."}, {"id": 320, "start": 1327.0, "end": 1330.0, "text": "Das ist fast schon Windows-Taktik. Geht es nicht dran, Rebooten f\u00fcr eine Runde?"}, {"id": 321, "start": 1331.0, "end": 1333.0, "text": "Ich glaube, ich habe ein Kernel-Update gemacht, ja."}, {"id": 322, "start": 1334.0, "end": 1336.0, "text": "Deswegen meckert er auch wegen irgendwelchen Modulen."}, {"id": 323, "start": 1341.0, "end": 1345.0, "text": "Also, ich muss dir ehrlich sagen, also das, was ich, ich muss mal den Chat aufmachen,"}, {"id": 324, "start": 1345.0, "end": 1347.0, "text": "dass ich dann zwischenzeitlich mal ein paar Sachen besprechen kann."}, {"id": 325, "start": 1348.0, "end": 1352.0, "text": "Also, das, was der Imp schreibt, ist auch eine Sache, da steht man \u00f6fters mal davor."}, {"id": 326, "start": 1353.0, "end": 1357.0, "text": "Wenn man eine Weile aktiv ist, hat man sich so die einzelnen Sachen schon zusammengescriptet,"}, {"id": 327, "start": 1358.0, "end": 1362.0, "text": "die man \u00f6fters braucht. Da steht man auch \u00f6fters mal davor und muss sich \u00fcberlegen,"}, {"id": 328, "start": 1363.0, "end": 1366.0, "text": "programmiert man das irgendwie mal ordentlich neu in einer anderen Programmiersprache."}, {"id": 329, "start": 1367.0, "end": 1370.0, "text": "Und ich bin f\u00fcr mich bisher zu dem Schluss gekommen, nee, ich lasse alles, wie es ist."}, {"id": 330, "start": 1370.0, "end": 1377.0, "text": "Weil ich habe schon viele Sachen versucht, neu zu basteln und bis die neu gebastelten Sachen so gut sind wie die alten Sachen,"}, {"id": 331, "start": 1378.0, "end": 1380.0, "text": "der Aufwand lohnt sich meistens nicht."}, {"id": 332, "start": 1381.0, "end": 1386.0, "text": "Deswegen lasse ich meine eklichen, gehackten Sachen auch ekliche, alte, gehackte Sachen sein"}, {"id": 333, "start": 1387.0, "end": 1393.0, "text": "und mache manche Sachen vielleicht mal neu, aber nur, wenn mir neue Ans\u00e4tze zu einfallen, sonst lasse ich es dann."}, {"id": 334, "start": 1394.0, "end": 1397.0, "text": "Au\u00dferdem ist das sch\u00f6ne an Bash, du kannst halt \u00fcberall drauf ausf\u00fchren."}, {"id": 335, "start": 1397.0, "end": 1400.0, "text": "Alles Geschmackssache. So, mal gucken, ob jetzt das mit der Toolbox geht,"}, {"id": 336, "start": 1401.0, "end": 1406.0, "text": "ob ich jetzt updaten kann. Ah, jetzt, jetzt. Java, geht."}, {"id": 337, "start": 1413.0, "end": 1419.0, "text": "So. Die k\u00f6nnen sich nicht entscheiden, wie laut der Stream ist hier."}, {"id": 338, "start": 1421.0, "end": 1423.0, "text": "Ich lasse es jetzt einfach mal so."}, {"id": 339, "start": 1423.0, "end": 1427.0, "text": "Browser Extension, nein. Also wir aktualisieren mal die ganzen Ideen."}, {"id": 340, "start": 1429.0, "end": 1432.0, "text": "Und dann legen wir los, weil es ist schon 22 und 22."}, {"id": 341, "start": 1433.0, "end": 1438.0, "text": "Aber wie gesagt, es gibt nicht viel. Also es gibt nicht viel Code da."}, {"id": 342, "start": 1439.0, "end": 1445.0, "text": "Ich denke mal, es gibt am Ende vielleicht, was wei\u00df ich, 50 Zeilen HTML und irgendwie 200 Zeilen.NET."}, {"id": 343, "start": 1446.0, "end": 1448.0, "text": "Mal gucken, mal gucken. Schauen wir mal."}, {"id": 344, "start": 1448.0, "end": 1454.0, "text": "Guck mal bitte im Discord unter Memes, da hat hier mal ein Beat unter einen Soundschwipsel von dir gepackt."}, {"id": 345, "start": 1455.0, "end": 1456.0, "text": "Okay, das gucken wir gerade nochmal kurz."}, {"id": 346, "start": 1457.0, "end": 1461.0, "text": "Aber Chat, ich muss euch schnell ausmachen, nicht, dass ich im falschen Channel bin."}, {"id": 347, "start": 1464.0, "end": 1468.0, "text": "Man wei\u00df ja nie. Und Discord geht ja immer in den Channel."}, {"id": 348, "start": 1469.0, "end": 1473.0, "text": "Nicht, dass ich da oft gucken w\u00fcrde oder so, aber ja, man wei\u00df nie."}, {"id": 349, "start": 1473.0, "end": 1479.0, "text": "Man wei\u00df nie. Okay, also ich bin im richtigen Channel."}, {"id": 350, "start": 1480.0, "end": 1483.0, "text": "What the fuck ist denn das hier? Warum ist hier Pok\u00e9mon am Start?"}, {"id": 351, "start": 1484.0, "end": 1485.0, "text": "So, wo muss ich hin?"}, {"id": 352, "start": 1488.0, "end": 1491.0, "text": "Das mache ich mal kurz zu hier. Wie kann man das nicht zu machen?"}, {"id": 353, "start": 1494.0, "end": 1495.0, "text": "Wo muss ich hin? Memes?"}, {"id": 354, "start": 1495.0, "end": 1496.0, "text": "Memes?"}, {"id": 355, "start": 1502.0, "end": 1503.0, "text": "Das hier?"}, {"id": 356, "start": 1503.0, "end": 1518.0, "text": "What the fuck ist das?"}, {"id": 357, "start": 1518.0, "end": 1533.0, "text": "So schnell? Oh Gott."}, {"id": 358, "start": 1549.0, "end": 1553.0, "text": "Ein wahres Meisterwerk."}, {"id": 359, "start": 1563.0, "end": 1565.0, "text": "Oh Mann, kommt da noch was anderes?"}, {"id": 360, "start": 1565.0, "end": 1581.0, "text": "Kommt da noch was anderes? Ja, das ist ja nice. Ein wahres Meisterwerk."}, {"id": 361, "start": 1583.0, "end": 1586.0, "text": "So, wir haben geupdated. Gut, jetzt k\u00f6nnen wir loslegen."}, {"id": 362, "start": 1586.0, "end": 1592.0, "text": "Oh, das ist doch so bescheuert. Evaluate, wir evaluieren."}, {"id": 363, "start": 1593.0, "end": 1597.0, "text": "Zum Gl\u00fcck, zum Gl\u00fcck kann ich meine, meine Trial fortsetzen."}, {"id": 364, "start": 1599.0, "end": 1601.0, "text": "Okay, also, what?"}, {"id": 365, "start": 1601.0, "end": 1615.0, "text": "What?.NET Core Web Application. Eine Web API Application. Die nennen wir, wie nennen wir die jetzt? Monac-S."}, {"id": 366, "start": 1618.0, "end": 1623.0, "text": "Oh, komm wursch, wieder Kram-HR-Store, bla, bla, bla, bla, noch Authentification, alles gut, alles richtig."}, {"id": 367, "start": 1623.0, "end": 1631.0, "text": "Anlegen, Terminal mal aufmachen, hier ohnehin schieben. So, zack."}, {"id": 368, "start": 1632.0, "end": 1642.0, "text": "Warum ist der Schrift so klein? Das ist ja, da sieht es ja gar nichts. Hat er meine, hat er meine Settings vergessen oder so?"}, {"id": 369, "start": 1642.0, "end": 1652.0, "text": "Font? Wo ging das nochmal? Font, Appearance, Font Size?"}, {"id": 370, "start": 1653.0, "end": 1660.0, "text": "Ich finde das voll versteckt. Editor Font?"}, {"id": 371, "start": 1660.0, "end": 1673.0, "text": "Font? Ah ja, hier. Ich finde das \u00fcbelst versteckt bei diesen JetBrains Sachen, immer die f\u00fcr Farben und Schriftgr\u00f6\u00dfe und so."}, {"id": 372, "start": 1674.0, "end": 1681.0, "text": "Hack brauchen wir. Hack 16. Hack 18? Hack 18, Hack 18, ist gut. Ja, okay."}, {"id": 373, "start": 1681.0, "end": 1695.0, "text": "Warte mal, bitte. Ja, exzellent. Wir k\u00f6nnen es nochmal, wir k\u00f6nnen es nochmal eine Stufe gr\u00f6\u00dfer machen."}, {"id": 374, "start": 1695.0, "end": 1710.0, "text": "Und mal 19. Ja, okay, ja, jetzt erkennt man es doch eigentlich ganz gut. So, Rider Projects Monarchs.net Watch Run."}, {"id": 375, "start": 1710.0, "end": 1724.0, "text": "Ach so. So, jetzt machen wir mal hier einen Browser auf. Ich mache mal einen Chrome auf und gucke, ob die Seite da ist."}, {"id": 376, "start": 1724.0, "end": 1739.0, "text": "Local Host 5000. Ach, das hat Redirect auf, hat SSL. Okay, das m\u00fcssen wir erstmal alles abstellen. Also, Authorization weg, KTPS Redirection weg. Brauche ich keinen Mensch."}, {"id": 377, "start": 1740.0, "end": 1747.0, "text": "Dann legen wir noch einen Ordner f\u00fcr die Webseite an und machen schon mal eine leere Webseite rein. Dann k\u00f6nnen wir loslegen."}, {"id": 378, "start": 1747.0, "end": 1761.0, "text": "Directory www root. So, dass der die Fileserver, dass er die Webseite ausliefert, aus dem, statische Webseite aus dem Ordner ausliefert."}, {"id": 379, "start": 1762.0, "end": 1768.0, "text": "Gibt es denn was zu den Grafikkarten von AMD? Ich wei\u00df nicht, ob sich, ich meine, soll ich? Ich meine, kann ich machen."}, {"id": 380, "start": 1768.0, "end": 1788.0, "text": "Ich wei\u00df nicht, ob das so spannend wird, ehrlich gesagt. Kann ich, ich meine, kann ich machen. Wann ist denn das? Donner, Mittwoch? Der Stream? AMD?"}, {"id": 381, "start": 1788.0, "end": 1810.0, "text": "AMD? AMD gerade ein bisschen blablabla. Radiant Reveal. Da, 28.10. Um wie viel Uhr? 17 Uhr. Ja, k\u00f6nnen wir machen, aber ich wei\u00df nicht, ob es so spannend ist."}, {"id": 382, "start": 1810.0, "end": 1819.0, "text": "Ich habe da nicht so gro\u00dfe Hoffnung, ehrlich gesagt, drin, dass die bei AMD da was vorstellen, was Nvidia Konkurrenz macht. Aber man wei\u00df ja nicht."}, {"id": 383, "start": 1820.0, "end": 1833.0, "text": "So, legen wir erstmal eine Webseite an. Irgendwas. Index html. Und da schreiben wir jetzt drauf. Test 0w. So, und gucken, ob das funktioniert."}, {"id": 384, "start": 1833.0, "end": 1846.0, "text": "Live Server starten. Da ist er. Eine Runde 0w. Beste h\u00fcbscheste Seite aller Zeiten. So, da k\u00f6nnen wir einmal anfangen."}, {"id": 385, "start": 1846.0, "end": 1862.0, "text": "Ich w\u00fcrde sagen, als erstes m\u00fcssen wir die Library einbinden, dass wir das ausprobieren k\u00f6nnen. Also wir brauchen als Library einmal das da. Das brauchen wir n\u00e4mlich f\u00fcr WebRTC und wir brauchen FFmpeg f\u00fcr die Webcam Videos."}, {"id": 386, "start": 1862.0, "end": 1879.0, "text": "Exzellent. Da. Jawoll. Aktuelle Testversion. Von was lesen die? Testversion? Releases? Wo stehen Releases? Manchmal finde ich mich auf GitHub irgendwie nicht zurecht."}, {"id": 387, "start": 1879.0, "end": 1893.0, "text": "Sollten nicht die Releases drunter stehen? Hier, guck mal. Also die sind wohl gerade ganz aktuell dabei, was das angeht. Wenn es die letzte Testversion vor 5 Tagen gegeben hat, dann ist auch der WebRTC Support noch relativ neu."}, {"id": 388, "start": 1894.0, "end": 1901.0, "text": "Ich bin auch \u00fcbelst verwirrt. Wisst ihr, was mich bei GitHub, bei dem GitHub, die es sein am meisten verwirrt? Das Releases manchmal rechts stehen und manchmal unten."}, {"id": 389, "start": 1901.0, "end": 1912.0, "text": "Fr\u00fcher war das relativ einfach, da hast du Releases immer hier oben in der Leiste gehabt. Musstest du fr\u00fcher noch auf Code klicken? Ich wei\u00df, du hast die Releases immer in der Leiste gehabt. Die hast du einfacher gefunden."}, {"id": 390, "start": 1913.0, "end": 1928.0, "text": "So, also installieren wir mal die Library. Install. Das ist die, die ich ausprobieren will. So, und dann brauchen wir noch FFmpeg. Ohne FFmpeg geht nichts, was Video, Audio und Webcam angeht."}, {"id": 391, "start": 1928.0, "end": 1939.0, "text": "Zack, FFmpeg. Gut, da haben wir unsere Abh\u00e4ngigkeiten dabei. Die Murke ist gut, na dann. Ich habe die mal auf gut Gl\u00fcck angemacht, das ist hier der Stream."}, {"id": 392, "start": 1939.0, "end": 1958.0, "text": "Ich hoffe, ich komme jetzt nicht gleich hier DMC, Dingsbums, Takedowns oder so, weil ich irgendeinen Stream laufen habe. Aber ich glaube, das ist Musik, die ist nicht so im Fokus der Stonks anw\u00e4ltend."}, {"id": 393, "start": 1958.0, "end": 1970.0, "text": "So, also wir machen jetzt erstmal die Webseite, soweit, dass ich was sehen w\u00fcrde. Also wir brauchen einen Videoplayer ohne Stonks, weil die Stonks setzen wir sp\u00e4ter aus dem JavaScript raus."}, {"id": 394, "start": 1970.0, "end": 1990.0, "text": "Da kann ich wieder meine Huge Massive JavaScript Skills walten lassen. \u00dcbrigens, das hier wird sich wahrscheinlich jeder JavaScript Mensch, wird sich sagen, Max, was macht er da? Aber ich kenne keinen besseren Weg, wie ich in JavaScript, in meinem Script Tag eine Assungfunktion verwenden kann."}, {"id": 395, "start": 1990.0, "end": 2000.0, "text": "Wenn da einer von euch eine Ahnung hat, dann sagt mir Bescheid, ich wei\u00df nix besseres. Ich wei\u00df, dass das nicht sonderlich JavaScript Style ist."}, {"id": 396, "start": 2000.0, "end": 2026.0, "text": "So, also, wir haben einen Videoplayer, der macht Autoplay, der kriegt Controls und ist standardm\u00e4\u00dfig Muted. Wenn ihr mal eine Anwendung, oder wenn ihr mal was programmieren solltet, mit dem Videoplayer Element, und ihr wundert euch, dass ihr, par auf, Leute, jetzt kommt Massive Tip, das Problem hatte ich n\u00e4mlich auch schon \u00f6fters."}, {"id": 397, "start": 2026.0, "end": 2033.0, "text": "Und ihr wundert euch, dass auf mobilen Ger\u00e4ten euer Video nicht funktioniert, dann liegt das daran, dass ihr es nicht gemuted habt."}, {"id": 398, "start": 2033.0, "end": 2059.0, "text": "Weil die ganz alle Mobile Browser, oder mir f\u00e4llt jetzt kein Mobile Browser an und weder Android noch IOS macht das so. Die spielen nur Videos ab, wenn sie gemuted sind. Wenn Videos nicht, also wenn Video Element nicht gemuted ist, spielt es weder Android noch IOS ab. Also wenn ihr mal was bastelt und ihr fragt euch, warum irgendwelche Sachen nicht abgespielt werden, dann weil ihr es nicht gemuted habt."}, {"id": 399, "start": 2059.0, "end": 2069.0, "text": "Ansonsten funktioniert's, aber ist ja auch verst\u00e4ndlich, weil keiner will auf eine Webseite gehen, erst mal angeschrien werden von 30 Werbesachen."}, {"id": 400, "start": 2069.0, "end": 2088.0, "text": "SQL WebSockets Lego, was soll denn SQL WebSockets sein? Also SQL ja, WebSockets ja, aber WebSockets haben doch mit SQL gar nichts zu tun."}, {"id": 401, "start": 2088.0, "end": 2100.0, "text": "Wie gesagt, wenn ihr keine Library findet, um direkt auf eure Datenbank zugreifen zu kommen, macht GraphQL davor, das ist das einfachste, was du machen kannst mit Webrequests."}, {"id": 402, "start": 2100.0, "end": 2117.0, "text": "Aber WebSockets ist f\u00fcr Kommunikation vom Server zum Client gedacht, um dass der Server den Client benachrichtigen kann. Inwieweit das jetzt was bringt bei eurer Datenbank, kann ich schlecht beurteilen."}, {"id": 403, "start": 2117.0, "end": 2129.0, "text": "Oh, der Tanzer hat BigBrain. Leute, ich hab mir \u00fcbrigens was \u00fcberlegt f\u00fcr den Chat. Wir haben ja manchmal schon richtig krasse BigBrain Antworten im Chat gehabt."}, {"id": 404, "start": 2130.0, "end": 2141.0, "text": "Und ich werd das jetzt so machen, wenn es irgendwelche exquisite BigBrain Antworten gibt. Es gibt jetzt so einen VIP-Tag, hab ich gesehen, auf Twitch."}, {"id": 405, "start": 2141.0, "end": 2150.0, "text": "Da hab ich mir \u00fcberlegt, dass ich f\u00fcr einen Monat einfach den BigBrain Antwort Leuten einen VIP-Tag gebe. Man hat da nix von, aber es sieht cool aus."}, {"id": 406, "start": 2151.0, "end": 2160.0, "text": "Und vielleicht hat man ja Gl\u00fcck und man kann diesen VIP-Tag sogar customisieren, dann kriegen die einen BigBrain Emote."}, {"id": 407, "start": 2160.0, "end": 2171.0, "text": "So, also Moment, der Chat hat gerade Folgendes geschrieben, ich soll das hier machen."}, {"id": 408, "start": 2172.0, "end": 2188.0, "text": "Ok, das klingt logisch, dass das funktioniert. Das klingt, es sieht zwar ein bisschen h\u00e4sslich aus, aber das sollte funktionieren. Guck mal mal in die Konsole rein, ob das, ja das funktioniert."}, {"id": 409, "start": 2188.0, "end": 2195.0, "text": "Also ich versuch jetzt mal zu erkl\u00e4ren, was das macht und dann sagt ihr mir, ob ich richtig liege."}, {"id": 410, "start": 2196.0, "end": 2202.0, "text": "Also das da ist einfach nur ein Block quasi in JavaScript, der keine tiefere Funktion hat."}, {"id": 411, "start": 2203.0, "end": 2209.0, "text": "Also wahrscheinlich brauch ich das, um das zu gruppieren irgendwie, oder geht das auch so? Nee, das geht nicht."}, {"id": 412, "start": 2210.0, "end": 2214.0, "text": "Also das ist irgendwie so eine Blockgeschichte in JavaScript oder sowas, was auch immer."}, {"id": 413, "start": 2214.0, "end": 2219.0, "text": "So, das hier ist der Async-Keyword. Das da ist, dass das eine Funktion ist, die keine Parameter kriegt."}, {"id": 414, "start": 2220.0, "end": 2226.0, "text": "Das hier ist ganz normales Lambda-Arrow-Dingsged\u00f6ns. Das ist der Body von der Funktion."}, {"id": 415, "start": 2227.0, "end": 2237.0, "text": "Und der macht Log 1, 2, 3, Kappa 1, 2, 3 in Chat auf die Konsole. Und das hier ist, dass die Anonyme Funktion direkt ausgef\u00fchrt wird, wenn ich das richtig verstehe."}, {"id": 416, "start": 2237.0, "end": 2239.0, "text": "Wenn ich das richtig verstehe."}, {"id": 417, "start": 2242.0, "end": 2246.0, "text": "Es sieht aber nicht gerade sch\u00f6n aus, muss man sagen."}, {"id": 418, "start": 2248.0, "end": 2250.0, "text": "Ist korrekt."}, {"id": 419, "start": 2251.0, "end": 2253.0, "text": "Nice."}, {"id": 420, "start": 2253.0, "end": 2264.0, "text": "Liko, daf\u00fcr ist WebSockets das Beste, was ihr machen k\u00f6nnt. Ich kann dir noch was, je nachdem, was ihr als Backend verwendet."}, {"id": 421, "start": 2265.0, "end": 2274.0, "text": "Solltet ihr mal.NET verwenden als Backend, w\u00fcrde ich euch empfehlen, anstatt WebSockets gleich das dazu verwenden."}, {"id": 422, "start": 2274.0, "end": 2288.0, "text": "Das ist quasi der Microsoft-Aufsatz auf WebSockets. Die ein paar Sachen abnimmt. Aber ansonsten ist WebSockets absolut Standard und funktioniert wunderbar."}, {"id": 423, "start": 2288.0, "end": 2306.0, "text": "Unsere Webseite ist sch\u00f6n h\u00e4sslich und funktioniert. Eine Sache machen wir nochmal. Style f\u00fcr das Videotag. H\u00f6he 100, Breite 100. Das reicht."}, {"id": 424, "start": 2306.0, "end": 2317.0, "text": "Das reicht. Exzellent. Fullscreen Video-Player. Vielleicht soll ich die H\u00f6he mal weg, gleich mal nur die Breite. Nee, das geht gar nicht. Die H\u00f6he. Nur die H\u00f6he."}, {"id": 425, "start": 2322.0, "end": 2324.0, "text": "Na ja, was auch immer."}, {"id": 426, "start": 2324.0, "end": 2349.0, "text": "Das wird schon passen. Was? WV habe ich doch. Ah, VW. Jaja, richtig."}, {"id": 427, "start": 2349.0, "end": 2357.0, "text": "Ah ja, jetzt passt es. Jetzt ist es auch nicht breiter. Okay, exzellent. Jetzt haben wir unsere Videoplayer da."}, {"id": 428, "start": 2358.0, "end": 2365.0, "text": "Ja, also mit Blazer, da bin ich ja mal gespannt. Wir haben das mal ausprobiert vor einem Jahr oder so. Da gab es noch richtig viele Probleme."}, {"id": 429, "start": 2366.0, "end": 2372.0, "text": "So mit JavaScript aufrufen und sonst was. Mittlerweile gibt es weniger Probleme. Ich habe letztens erst einen Webcast dr\u00fcber gesehen."}, {"id": 430, "start": 2372.0, "end": 2378.0, "text": "Aber die haben immer noch das Problem, dass halt die.NET Runtime runtergeladen werden muss. Und das ist halt irgendwie 8 MB."}, {"id": 431, "start": 2379.0, "end": 2384.0, "text": "Und wenn du 8 MB runterladen willst, dann ist es ja schon quasi wie als letzter Halb Facebook inklusive einem JavaScript runter."}, {"id": 432, "start": 2385.0, "end": 2394.0, "text": "Was m\u00f6chtest du programmieren? Also ich habe ja aktuell so eine Video\u00fcberwachungssoftware gebastelt mit WebRTC,.NET und Go zusammen."}, {"id": 433, "start": 2394.0, "end": 2402.0, "text": "Go, weil die einzig sinnvolle WebRTC Library, die gut funktioniert hat, in Go programmiert ist..NET und Go Interop suckt allerdings."}, {"id": 434, "start": 2403.0, "end": 2409.0, "text": "Und ich habe heute eine Library entdeckt, die WebRTC in.NET macht. Und da bin ich aber echt gespannt drauf."}, {"id": 435, "start": 2410.0, "end": 2417.0, "text": "So, jetzt m\u00fcssen wir folgendes machen. Als erstes machen wir mal den FFmpeg-Teil, weil der FFmpeg-Teil ist easy."}, {"id": 436, "start": 2417.0, "end": 2425.0, "text": "Den FFmpeg-Teil habe ich schon oft gemacht, da wei\u00df ich, wie es funktioniert. Wir brauchen unseren RTSP-Teststream, den da."}, {"id": 437, "start": 2430.0, "end": 2445.0, "text": "Normalerweise, by the way, macht man das nicht so. Ich sage es gleich. Normalerweise macht man nicht hier in diesem Startup-File von der Web-Anwendung irgendwelche gro\u00dfartigen Background-Io-Audio-Video-Geschichten."}, {"id": 438, "start": 2445.0, "end": 2449.0, "text": "Da machst du normalerweise einen eigenen Background-Dienst, den du hier nur startest."}, {"id": 439, "start": 2451.0, "end": 2459.0, "text": "Kann ich auf die Test-Seite? Das k\u00f6nnen wir tats\u00e4chlich machen. Ich habe doch noch irgendwo einen Hetzner-Server rumstehen, da kann ich das mal draufpushen."}, {"id": 440, "start": 2460.0, "end": 2463.0, "text": "Da k\u00f6nnt ihr dann drauf gehen und gucken, wie toll Latency-Free das funktioniert."}, {"id": 441, "start": 2464.0, "end": 2469.0, "text": "So, also. Wir machen mal eine Funktion hier f\u00fcr FFmpeg."}, {"id": 442, "start": 2469.0, "end": 2474.0, "text": "Wieso ist Kappa Gold? Oh, das ist ein ganz schlechter Chebat."}, {"id": 443, "start": 2486.0, "end": 2489.0, "text": "Ich glaube, das ist eine FFZ-Geschichte, oder?"}, {"id": 444, "start": 2489.0, "end": 2496.0, "text": "Dass Kappa Gold ist."}, {"id": 445, "start": 2503.0, "end": 2509.0, "text": "Mein Kappa ist wirklich Gold. Warum ist... Warum ist der..."}, {"id": 446, "start": 2510.0, "end": 2515.0, "text": "Also, es gibt ja manchmal einen goldenen Kappa, aber ich glaube nicht, dass ich den abkriege."}, {"id": 447, "start": 2515.0, "end": 2526.0, "text": "Es gibt ja manchmal goldenen Kappa, random in irgendwelchen Channels, aber ich glaube nicht, dass der bei mir gerade im Channel wirklich ist."}, {"id": 448, "start": 2531.0, "end": 2533.0, "text": "Golden Kappa."}, {"id": 449, "start": 2536.0, "end": 2540.0, "text": "Der ist gerade \u00fcberall, ja. What? Okay, wir m\u00fcssen jetzt mal hier loslegen."}, {"id": 450, "start": 2540.0, "end": 2545.0, "text": "Okay, also wir machen jetzt erstmal den FFmpeg-Part. Den FFmpeg-Part wei\u00df ich, wie es halbwegs funktioniert."}, {"id": 451, "start": 2546.0, "end": 2551.0, "text": "Ich sage halt nur dabei, normalerweise macht man einen Background-Service. Ich mache es jetzt testweise hier einfach mal im Start-up."}, {"id": 452, "start": 2552.0, "end": 2560.0, "text": "Also, wir starten den Hintergrund-Thread, weil diese Audio-Video-Geschichte, die muss nat\u00fcrlich im Hintergrund laufen."}, {"id": 453, "start": 2561.0, "end": 2565.0, "text": "Ich kann jetzt nicht einfach hier in meinem Programm nebenbei Webcams abrufen."}, {"id": 454, "start": 2565.0, "end": 2573.0, "text": "Also, wir starten jetzt hier mit irgendwas. Wobei, nee, wir machen es ganz anders."}, {"id": 455, "start": 2574.0, "end": 2579.0, "text": "Wir machen hier unten irgendeine Funktion. Public... Public..."}, {"id": 456, "start": 2584.0, "end": 2587.0, "text": "Cube. Bester Name aller Zeiten."}, {"id": 457, "start": 2587.0, "end": 2594.0, "text": "Loop. So, und dann starten wir das hier in einem eigenen Thread und gut ist Loop. Bester Name."}, {"id": 458, "start": 2595.0, "end": 2599.0, "text": "Also, wenn das nicht mal hier Expressive hoch 10 ist, dann wei\u00df ich auch nicht."}, {"id": 459, "start": 2600.0, "end": 2602.0, "text": "Was? Enter Completed Insert Newline."}, {"id": 460, "start": 2607.0, "end": 2611.0, "text": "Ja, okay, was auch immer. Also, ich finde Loop ist ein sehr guter Name daf\u00fcr."}, {"id": 461, "start": 2611.0, "end": 2619.0, "text": "Excellent. Exquisite Name. So, und den m\u00fcssen wir den mal mal Private und den mal mal Unsave, weil..."}, {"id": 462, "start": 2620.0, "end": 2631.0, "text": "Unsave. Wir m\u00fcssen das Ganze Unsave machen, weil das ist C-Code und C-Code aufrufen ist Unsave."}, {"id": 463, "start": 2632.0, "end": 2638.0, "text": "Und damit das Ganze funktioniert, m\u00fcssen wir dem hier sagen, irgendwo hier... Oh, wo ist das denn Rider versteckt?"}, {"id": 464, "start": 2638.0, "end": 2641.0, "text": "Hier Allow Unsave Code. Excellent."}, {"id": 465, "start": 2642.0, "end": 2651.0, "text": "Normalerweise erlaubt das C-Sharp nicht, weil da kann es ja alles M\u00f6gliche machen und Sachen kaputt machen und Speicher kaputt machen und sonst was machen im Hintergrund."}, {"id": 466, "start": 2652.0, "end": 2664.0, "text": "Aber das muss halt einschalten. Normalerweise ist es so gedacht, dass man Unsave nicht in seinem Hauptprogramm verwendet, sondern dass man Unsave quasi in der eigenen Library rappt."}, {"id": 467, "start": 2664.0, "end": 2668.0, "text": "Aber gut, wir m\u00fcssen FFmpeg verwenden, da bleibt einem nichts anderes \u00fcbrig."}, {"id": 468, "start": 2669.0, "end": 2673.0, "text": "Also, jetzt legen wir... Das ist die Adresse zum Stream."}, {"id": 469, "start": 2680.0, "end": 2682.0, "text": "Wie ich es noch im Clipboard-Manager habe."}, {"id": 470, "start": 2682.0, "end": 2694.0, "text": "So, also das ist die Uhr von unserer Testwebcam. Ich sag mal stellvertretend Webcam. Es ist zwar ein Video-Stream, aber es ist ein RTSP-Video-Stream. Das ist das, worauf es ankommt."}, {"id": 471, "start": 2697.0, "end": 2703.0, "text": "Ich hab doch irgendwo was, wo ich ein bisschen abgucken kann. Da muss ich den Kram nicht neu machen, weil FFmpeg hab ich schon \u00f6fters gemacht."}, {"id": 472, "start": 2703.0, "end": 2711.0, "text": "Genau, ha, ich hab was, ich hab was gefunden. Exquisite, da kann ich jetzt abkopieren. Nice."}, {"id": 473, "start": 2712.0, "end": 2715.0, "text": "Ich cheat jetzt, ich kopiere was aus einem anderen Projekt. Bam."}, {"id": 474, "start": 2717.0, "end": 2720.0, "text": "Da wei\u00df ich n\u00e4mlich, dass es funktioniert mit Video-Abrufen."}, {"id": 475, "start": 2724.0, "end": 2727.0, "text": "So, also das Ganze m\u00fcssen wir starten, das haben wir gestartet."}, {"id": 476, "start": 2727.0, "end": 2733.0, "text": "FFmpeg, Context. So, also ich erkl\u00e4r auch gleich, was es macht."}, {"id": 477, "start": 2735.0, "end": 2738.0, "text": "Also, FFmpeg kennen die meisten von euch wahrscheinlich."}, {"id": 478, "start": 2740.0, "end": 2744.0, "text": "Das kennen die meisten von euch wahrscheinlich als Kommando-Zeilen-Tool, FFmpeg."}, {"id": 479, "start": 2745.0, "end": 2749.0, "text": "Alternativ kennen vielleicht manche auch FFplay oder FFprobe, aber das ist alles FFmpeg."}, {"id": 480, "start": 2749.0, "end": 2756.0, "text": "Und viele Formate, die VLC abspielen kann, kann VLC auch nur wegen FFmpeg."}, {"id": 481, "start": 2759.0, "end": 2763.0, "text": "\u00c4h, \u00fcbrigens, ich muss die Einr\u00fcckung \u00e4ndern, das ist viel zu viel Einr\u00fcckung hier."}, {"id": 482, "start": 2764.0, "end": 2770.0, "text": "Wie macht man das im Rider nochmal? Tabs? Tabs? Nee."}, {"id": 483, "start": 2770.0, "end": 2777.0, "text": "Indent? Hier? Nee."}, {"id": 484, "start": 2778.0, "end": 2780.0, "text": "Unten rechts? Ah, exellent, exellent."}, {"id": 485, "start": 2781.0, "end": 2786.0, "text": "Hier, also. Indent, Intent, in zwei und zwei. Zack."}, {"id": 486, "start": 2787.0, "end": 2791.0, "text": "Und jetzt sagen wir Reformat. Haha."}, {"id": 487, "start": 2792.0, "end": 2794.0, "text": "Gleich, oh, das ist doch schon ein FFmpeg."}, {"id": 488, "start": 2794.0, "end": 2800.0, "text": "Und jetzt sagen wir Reformat. Haha. Gleich, oh, das ist doch schon viel besser."}, {"id": 489, "start": 2801.0, "end": 2805.0, "text": "Wie ist bei euch? Vier Spaces oder zwei Spaces?"}, {"id": 490, "start": 2806.0, "end": 2808.0, "text": "Aber unabh\u00e4ngig von der Sprache, was ist euch lieber?"}, {"id": 491, "start": 2815.0, "end": 2819.0, "text": "Vier? Zwei? Vier? Okay, viel mehr machen vier, h\u00e4tte ich jetzt gar nicht gedacht."}, {"id": 492, "start": 2819.0, "end": 2827.0, "text": "Aber gerade in so Sprachen wie C-Sharp, wo halt auch \u00f6fters mal mit Curly Braces um sich geschmissen wird,"}, {"id": 493, "start": 2828.0, "end": 2831.0, "text": "dann spart das unglaublich Einr\u00fcckungstiefe. Also ich finde zwei viel praktischer."}, {"id": 494, "start": 2832.0, "end": 2836.0, "text": "F\u00fcnf? Okay, f\u00fcnf ist exotisch. Oder vielleicht war es auch G-Bait."}, {"id": 495, "start": 2837.0, "end": 2839.0, "text": "Oder wir machen einfach alles in eine Zeile."}, {"id": 496, "start": 2839.0, "end": 2842.0, "text": "Genau, keine Zeile. So, also was das hier macht, ist Folgendes."}, {"id": 497, "start": 2843.0, "end": 2846.0, "text": "Das ist die Uhrl zu unserer Webcam. Zu unserem Testvideo in dem Fall."}, {"id": 498, "start": 2848.0, "end": 2854.0, "text": "Das hier setzt ein Timeout. Wenn f\u00fcnf Sekunden lang keine Antwort mehr kommt,"}, {"id": 499, "start": 2855.0, "end": 2857.0, "text": "dann bricht er das Ganze ab, weil sonst haben wir, bleiben wir h\u00e4ngen."}, {"id": 500, "start": 2858.0, "end": 2861.0, "text": "Sackt. So, das ist FFmpeg-Intent."}, {"id": 501, "start": 2861.0, "end": 2868.0, "text": "Das braucht man nicht. Und das hier startet den Stream von dieser Uhrl."}, {"id": 502, "start": 2869.0, "end": 2871.0, "text": "AV-Format Open Input, da \u00fcbergibt man einen Kontext."}, {"id": 503, "start": 2872.0, "end": 2876.0, "text": "Das ist so ein internes FFmpeg-Ding und die Uhrl f\u00fcr den Stream."}, {"id": 504, "start": 2877.0, "end": 2881.0, "text": "Und das war es im Endeffekt, was man in FFmpeg machen muss, um Stream zu \u00f6ffnen."}, {"id": 505, "start": 2882.0, "end": 2884.0, "text": "Jetzt muss man, das war nat\u00fcrlich jetzt ein bisschen zu sp\u00e4t."}, {"id": 506, "start": 2884.0, "end": 2890.0, "text": "Man muss nat\u00fcrlich den Stream noch auslesen."}, {"id": 507, "start": 2891.0, "end": 2893.0, "text": "Brauchst du noch Rainbow-Prakets? Gibt es das f\u00fcr Ryder?"}, {"id": 508, "start": 2894.0, "end": 2899.0, "text": "Also in Visual Studio Code habe ich Rainbow-Prakets."}, {"id": 509, "start": 2900.0, "end": 2903.0, "text": "Ich habe keine Ahnung, ob es hier Rainbow-Prakets gibt, aber wahrscheinlich als Addon."}, {"id": 510, "start": 2904.0, "end": 2905.0, "text": "Aber brauche ich nicht unbedingt."}, {"id": 511, "start": 2906.0, "end": 2909.0, "text": "So, okay. Was der macht, ist, der guckt, ob er den Stream \u00f6ffnen kann."}, {"id": 512, "start": 2910.0, "end": 2912.0, "text": "Wenn er den Stream \u00f6ffnen kann, dann kann er den Stream \u00f6ffnen."}, {"id": 513, "start": 2912.0, "end": 2916.0, "text": "Wenn er den Stream nicht \u00f6ffnen kann, dann wirft er einen Fehler."}, {"id": 514, "start": 2917.0, "end": 2918.0, "text": "So, next."}, {"id": 515, "start": 2919.0, "end": 2921.0, "text": "Jetzt gucken wir erstmal, ob das ein g\u00fcltiger Stream ist."}, {"id": 516, "start": 2922.0, "end": 2926.0, "text": "Ich copy-paste, das ist nicht so, dass ich hier der ultra-mega-schnell-Hackster bin."}, {"id": 517, "start": 2927.0, "end": 2932.0, "text": "Ich copy-paste das gerade aus einem anderen Projekt, weil ich bilde mir ein, das hat funktioniert."}, {"id": 518, "start": 2933.0, "end": 2934.0, "text": "So, weiter."}, {"id": 519, "start": 2935.0, "end": 2939.0, "text": "Jetzt gucken wir erstmal, ob der irgendwelche Metadaten vom Stream lesen kann."}, {"id": 520, "start": 2939.0, "end": 2941.0, "text": "Wunderbar, ich glaube, das brauchen wir gar nicht."}, {"id": 521, "start": 2942.0, "end": 2946.0, "text": "So, und jetzt kommt was, was ich immer gerne vergesse, wenn ich das neu bastle."}, {"id": 522, "start": 2947.0, "end": 2960.0, "text": "Und zwar, man muss schauen, ob es einen Videostream \u00fcberhaupt gibt."}, {"id": 523, "start": 2961.0, "end": 2964.0, "text": "Weil es gibt ja durchaus RTSP-Streams, die audio-only sind."}, {"id": 524, "start": 2965.0, "end": 2966.0, "text": "Deswegen muss man gucken, ob es einen Videostream gibt."}, {"id": 525, "start": 2966.0, "end": 2968.0, "text": "Und das hier guckt, ob es einen Videostream gibt."}, {"id": 526, "start": 2969.0, "end": 2975.0, "text": "Der loopt alle Streams durch, die es gibt, und guckt, ob der Media-Type Video ist."}, {"id": 527, "start": 2976.0, "end": 2982.0, "text": "Und wenn es einen Videostream gefunden hat, dann setzt den, und ansonsten sagt er, no Videostream-Forten geht raus."}, {"id": 528, "start": 2983.0, "end": 2984.0, "text": "Was wird das?"}, {"id": 529, "start": 2985.0, "end": 2988.0, "text": "Ich probiere eine Web-RTC-Library aus, die ich heute auf GitHub gefunden habe,"}, {"id": 530, "start": 2988.0, "end": 2995.0, "text": "mit der man zum Beispiel Webcams oder \u00dcberwachungskameras sich mit ziemlich niedriger Latenz in den Browser streamen kann."}, {"id": 531, "start": 2996.0, "end": 3001.0, "text": "Ich habe sowas schon mal gebaut, allerdings in.NET und das Web-RTC-Zeugs in Go."}, {"id": 532, "start": 3002.0, "end": 3007.0, "text": "Und nachdem der Interop zwischen Go und.NET nicht so sch\u00f6n ist, wollte ich mal so eine.NET-only-L\u00f6sung ausprobieren."}, {"id": 533, "start": 3008.0, "end": 3009.0, "text": "Mal gucken, wie gut das funktioniert."}, {"id": 534, "start": 3010.0, "end": 3014.0, "text": "Ok, also Videostream haben wir. Jetzt muss man das da machen."}, {"id": 535, "start": 3014.0, "end": 3018.0, "text": "Alles klar. Also wir gucken jetzt, ob es in dem RTSP-Stream einen Videostream gibt."}, {"id": 536, "start": 3019.0, "end": 3021.0, "text": "Wenn es einen Videostream gibt, machen wir weiter."}, {"id": 537, "start": 3022.0, "end": 3026.0, "text": "FFPlay, ich glaube, das kann man sich an der Stelle auch sparen, wenn man Open gemacht hat, aber machen wir mal."}, {"id": 538, "start": 3027.0, "end": 3032.0, "text": "So, und jetzt sagt er mir Connected zur URL von der Webcam oder zum Videostream."}, {"id": 539, "start": 3033.0, "end": 3036.0, "text": "Und jetzt kommt das eigentliche Auslesen dran."}, {"id": 540, "start": 3036.0, "end": 3046.0, "text": "Da braucht man n\u00e4mlich eine... Ups, ich habe etwas vergessen."}, {"id": 541, "start": 3047.0, "end": 3051.0, "text": "Und hier unten muss ich noch Unref machen, dass es wieder weg ist."}, {"id": 542, "start": 3052.0, "end": 3057.0, "text": "Und hier ist dann Zeug machen mit Videoframes."}, {"id": 543, "start": 3057.0, "end": 3065.0, "text": "So, genau, also hier \u00f6ffnet er den Stream und sucht sich den Videostream raus aus dem RTSP-Stream."}, {"id": 544, "start": 3066.0, "end": 3071.0, "text": "Und hier macht er eine Endlosschleife, die immer wieder ein neues Paket anlegt."}, {"id": 545, "start": 3072.0, "end": 3075.0, "text": "Das kann man \u00fcbrigens auch optimierter machen, man muss das gar nicht immer neu initialisieren, kann es dar\u00fcber schreiben."}, {"id": 546, "start": 3076.0, "end": 3079.0, "text": "Und hier liest er jetzt quasi ein Frame nach dem anderen von der Quelle."}, {"id": 547, "start": 3079.0, "end": 3086.0, "text": "Ist es eigentlich irgendwie m\u00f6glich Twitch-Streams als RTC oder \u00e4hnliches zu bekommen?"}, {"id": 548, "start": 3087.0, "end": 3093.0, "text": "Direkt wahrscheinlich nicht, aber ich meine, du kannst... Kann FFmpeg Twitch?"}, {"id": 549, "start": 3094.0, "end": 3099.0, "text": "M\u00fcssen wir mal schauen. Kann FFmpeg Twitch? Wahrscheinlich nicht."}, {"id": 550, "start": 3099.0, "end": 3116.0, "text": "Ich meine, Twitch war mal HLS, aber ich glaube mittlerweile ist Twitch irgendein HTTP2-Streaming."}, {"id": 551, "start": 3117.0, "end": 3124.0, "text": "Nein, okay, FFplay kann kein Twitch. Wenn FFmpeg das gekonnt h\u00e4tte, dann h\u00e4tte es das umwandeln k\u00f6nnen."}, {"id": 552, "start": 3124.0, "end": 3135.0, "text": "So, und der liest jetzt endlos lang diesen Input hier von diesem Stream, von diesem Test-Video."}, {"id": 553, "start": 3136.0, "end": 3139.0, "text": "Und liest quasi ein Frame nach dem anderen aus und wirft ihn wieder weg."}, {"id": 554, "start": 3140.0, "end": 3143.0, "text": "Und hier kann ich dann sp\u00e4ter den Kram... Guck mal, es funktioniert! Habt ihr das gesehen?"}, {"id": 555, "start": 3144.0, "end": 3148.0, "text": "Ganz nebenbei, das Connecten zum Stream funktioniert schon mal."}, {"id": 556, "start": 3149.0, "end": 3151.0, "text": "Ich kann euch ja sogar mal beweisen, dass es funktioniert."}, {"id": 557, "start": 3151.0, "end": 3155.0, "text": "Wir lesen jetzt mal ein paar Sachen aus den einzelnen Video-Frames aus."}, {"id": 558, "start": 3156.0, "end": 3160.0, "text": "Zum Beispiel... PTS."}, {"id": 559, "start": 3161.0, "end": 3166.0, "text": "\u00dcbrigens, Audio-Video-Sachen ist wirklich eine richtige Wissenschaft f\u00fcr sich."}, {"id": 560, "start": 3166.0, "end": 3185.0, "text": "WTF? PTS sollten niemals negativ sein?"}, {"id": 561, "start": 3185.0, "end": 3196.0, "text": "Und wie geht das? Ich guck doch, ob es kleiner Null ist und wenn es... Ach nee, oder muss ich hier machen."}, {"id": 562, "start": 3197.0, "end": 3201.0, "text": "Das ist ja schon erst ein Bug gefunden."}, {"id": 563, "start": 3202.0, "end": 3208.0, "text": "Aber der Timestamp sollte immer positiv sein. WTF?"}, {"id": 564, "start": 3209.0, "end": 3212.0, "text": "Okay, der buggt einfach nur am Anfang ein bisschen rum, glaube ich."}, {"id": 565, "start": 3212.0, "end": 3219.0, "text": "Aber... Also, um immer ein bisschen Licht ins Dunkel zu bringen, wie das unter der Haube mit Videos funktioniert."}, {"id": 566, "start": 3220.0, "end": 3224.0, "text": "Jeder Video-Frame hat zwei Timestamps drin."}, {"id": 567, "start": 3225.0, "end": 3229.0, "text": "Es ist jetzt Big Brain und muss man wahrscheinlich eigentlich gar nicht wissen, es sei denn, man macht was mit Audio-Video-Kram."}, {"id": 568, "start": 3230.0, "end": 3234.0, "text": "Jeder Frame von einem Video hat zwei Timestamps. PTS, DTS."}, {"id": 569, "start": 3235.0, "end": 3238.0, "text": "Meine Frage an den Big Brain Chat, hat irgendjemand eine Ahnung, was der Unterschied ist?"}, {"id": 570, "start": 3238.0, "end": 3246.0, "text": "Ich werde es auch gleich erz\u00e4hlen. Aber nur, man w\u00fcrde mich interessieren, ob vielleicht irgendwelche Leute haben, die das zuf\u00e4lligerweise wissen."}, {"id": 571, "start": 3247.0, "end": 3254.0, "text": "Also, wenn du Audio- und Video-Coding studierst, dann musst du das wissen."}, {"id": 572, "start": 3255.0, "end": 3260.0, "text": "Oder sollte man das wissen? M\u00fcsstest du das wissen, was der Unterschied ist zwischen PTS und DTS?"}, {"id": 573, "start": 3260.0, "end": 3267.0, "text": "Also, P steht f\u00fcr Presentation Timestamp und DTS steht f\u00fcr Decoding Timestamp."}, {"id": 574, "start": 3268.0, "end": 3278.0, "text": "Das bedeutet, es kann sein, dass Frames decoded werden, zu einer Zeit, wo sie noch nicht angezeigt werden sollen."}, {"id": 575, "start": 3279.0, "end": 3283.0, "text": "Wenn das der Fall ist, muss man irgendwie einen eigenen Buffer konstruieren."}, {"id": 576, "start": 3283.0, "end": 3289.0, "text": "Von, sagen wir mal, 2-30 Sekunden oder von, was wei\u00df ich, 100 Frames oder was auch immer, wie viel man braucht."}, {"id": 577, "start": 3290.0, "end": 3294.0, "text": "Und dann muss man quasi decoden. Also, DTS muss eigentlich immer fortlaufen sein."}, {"id": 578, "start": 3295.0, "end": 3302.0, "text": "Aber es kann durchaus sein, dass man Frames decoded, bevor sie angezeigt werden sollen, in der unterschiedlichen Reihenfolge."}, {"id": 579, "start": 3303.0, "end": 3311.0, "text": "Das hei\u00dft, man muss dann quasi erstmal ein bisschen buffern und gucken, dass man quasi die Timestamps bekommt f\u00fcr die Presentation-Time."}, {"id": 580, "start": 3311.0, "end": 3319.0, "text": "Also, PTS-Presentation-Timestamps ist das, was der Videoplayer anzeigen soll und DTS ist, was der Decoder decoden muss."}, {"id": 581, "start": 3320.0, "end": 3325.0, "text": "So, und meistens ist das das Gleiche, aber das muss nicht so sein."}, {"id": 582, "start": 3328.0, "end": 3330.0, "text": "Wieso hei\u00dft das Projekt Startup? Nein, das Projekt hei\u00dft nicht Startup."}, {"id": 583, "start": 3331.0, "end": 3334.0, "text": "Das ist das Standard ASP.NET Core-Template. Die Datei hei\u00dft halt einfach so."}, {"id": 584, "start": 3334.0, "end": 3341.0, "text": "Und wir k\u00f6nnen mal gucken, ob die hier bei dem Video immer gleich sind. Wir machen mal tolles Printline-Debugging."}, {"id": 585, "start": 3342.0, "end": 3347.0, "text": "Und schauen wir mal, ob die Presentation-Decoding-Timestamps immer gleich sind hier."}, {"id": 586, "start": 3348.0, "end": 3351.0, "text": "Ja, guck, hier sind die immer gleich."}, {"id": 587, "start": 3351.0, "end": 3363.0, "text": "Aber das muss nicht so sein. Das hier hei\u00dft im Prinzip nur, dass sobald ich den Frame decoden bekomme, kann ich ihn auch weiter schicken, weil der ist dann schon in der richtigen Reihenfolge."}, {"id": 588, "start": 3364.0, "end": 3375.0, "text": "Sollte Decoding-Timestamp und Presentation-Timestamp abweichen, dann muss ich erstmal ein bisschen sammeln, bis ich alles beisammen habe, was ich brauche, um es in der richtigen Reihenfolge anzuzeigen."}, {"id": 589, "start": 3375.0, "end": 3382.0, "text": "Aber das soll heute nicht unser Problem sein. Ich mach das auch mal wieder raus."}, {"id": 590, "start": 3383.0, "end": 3389.0, "text": "So, also Video Decoding funktioniert schon nochmal. Jetzt kommt das n\u00e4chste."}, {"id": 591, "start": 3390.0, "end": 3396.0, "text": "Muss ich mal kurz abgucken, wie man so einen komischen ASP.NET Controller genau macht."}, {"id": 592, "start": 3397.0, "end": 3403.0, "text": "Also, jetzt m\u00fcssen wir eine WebRTC-Verbindung aufbauen vom Browser zu meinem Backend hier."}, {"id": 593, "start": 3403.0, "end": 3408.0, "text": "Was macht eigentlich deine Heizungssteuerung? Der geht's gut."}, {"id": 594, "start": 3416.0, "end": 3421.0, "text": "Ich wei\u00df, ich hab euch auch noch nichts von meiner Heizungssteuerung erz\u00e4hlt, aber versprochen, das mach ich n\u00e4chstes Mal."}, {"id": 595, "start": 3422.0, "end": 3425.0, "text": "So, lass mal \u00fcberlegen, was brauchen wir denn sonst noch?"}, {"id": 596, "start": 3425.0, "end": 3439.0, "text": "Wir machen mal eine Sache. Ich will mal gucken, ob ich Memory Leaks hab. Leute, verwendet jemand von euch Rider und hat irgendeine Ahnung, wie man dort anzeigen lassen kann, w\u00e4hrend man hier ein Programm dr\u00fcber laufen l\u00e4sst, wie viel Speicher das gerade verwendet?"}, {"id": 597, "start": 3440.0, "end": 3444.0, "text": "In Virtual Studio ist das immer rechts oben. In Rider hab ich keine Ahnung, wo das steht."}, {"id": 598, "start": 3445.0, "end": 3451.0, "text": "Wenn ich hier zum Beispiel Debuggen anmache, ich bin zu doof f\u00fcr den Speicherverbrauch zu sehen."}, {"id": 599, "start": 3451.0, "end": 3460.0, "text": "Keine Ahnung, wo der ist. Deswegen machen wir einfach mal was anderes."}, {"id": 600, "start": 3461.0, "end": 3465.0, "text": "Ich mach mir einfach nen Task, der mir alle 5 Sekunden den Speicherverbrauch ausgibt."}, {"id": 601, "start": 3466.0, "end": 3470.0, "text": "Aber das ist bestimmt nicht Sinn und Zweck, da sag ich, ich bin blo\u00df einfach zu dumm, zu wissen, wo das im Rider ist."}, {"id": 602, "start": 3471.0, "end": 3474.0, "text": "\u00dcbrigens kann ich das auch mal rauskopieren, das hab ich ja auch schon zuf\u00e4lligerweise."}, {"id": 603, "start": 3474.0, "end": 3480.0, "text": "Ach nee, Mist. Wunderbar."}, {"id": 604, "start": 3481.0, "end": 3487.0, "text": "Was macht der Rider? Memory? Ja, der zeigt, wenn du Breakpoints hast, zeigt der Variablen an."}, {"id": 605, "start": 3488.0, "end": 3495.0, "text": "So, jetzt krieg ich alle 5 Sekunden mein, okay, Programm braucht 149 MB. Das ist f\u00fcr ne Web-Anwendung backend okay."}, {"id": 606, "start": 3496.0, "end": 3501.0, "text": "Stand da nicht rechts beim Debug-Fenster? Was? Echt? Moment, wo?"}, {"id": 607, "start": 3501.0, "end": 3516.0, "text": "Hier, das? Nee, also da ist nix drin."}, {"id": 608, "start": 3517.0, "end": 3523.0, "text": "Ich seh, also ich seh hier wirklich, in Visual Studio ist es hier rechts oben immer, aber in Rider, keine Ahnung."}, {"id": 609, "start": 3523.0, "end": 3536.0, "text": "Letztendlich ist auch wurscht, ich lass es einfach hier unten ausgeben. Printline, also wir haben jetzt hier 148 MB."}, {"id": 610, "start": 3537.0, "end": 3545.0, "text": "Ist ein extra Plugin, den sich dottrace, ernsthaft, er braucht ein extra Plugin f\u00fcr? Aber das reicht jetzt erst mal."}, {"id": 611, "start": 3545.0, "end": 3552.0, "text": "So, gut, jetzt kommen wir n\u00e4mlich mal zur eigentlichen Geschichte. Wir m\u00fcssen eine WebRTC-Verbindung aufbauen, um das Video zu \u00fcbertragen."}, {"id": 612, "start": 3553.0, "end": 3563.0, "text": "Ich \u00fcberleg grad, ich glaube, wir haben alles, was wir brauchen, erst mal eingerichtet. Ach nee, eine Sache, ich sehs hier n\u00e4mlich grad in meinem, in meinem anderen Projekt, das ist ne Sache, die mach ich immer gerne."}, {"id": 613, "start": 3563.0, "end": 3583.0, "text": "Die haben es ja so gemacht, fr\u00fcher haben die f\u00fcr ASP.NET immer diese Newtonsoft-JSON Library verwendet, die haben sie nicht mehr drinne, sie haben jetzt ne eigene, die schneller ist, aber irgendwie verwende ich die trotzdem noch lieber, deswegen f\u00fcg ich die jetzt einfach mal wieder hinzu."}, {"id": 614, "start": 3583.0, "end": 3596.0, "text": "Da kann ich auch einstellen, dass E-Names keine Zahlen sind, sondern richtige Namen und sowas, das mach ich immer gerne. Und ich glaub, die Performance, da kommt's jetzt echt nicht drauf an."}, {"id": 615, "start": 3597.0, "end": 3603.0, "text": "Oh, was hat er f\u00fcr Schmerzen? Ach genau, ich muss ja erst mal adden. \u00c4h, Moment."}, {"id": 616, "start": 3603.0, "end": 3622.0, "text": "Ja, auf JSON. Nee, Moment, was, was muss ich adden? \u00c4h, \u00e4hm, MVC, JSON, das da muss ich glaub ich adden, aber keine Testversion, sondern ne echte."}, {"id": 617, "start": 3622.0, "end": 3640.0, "text": "Ne echte. Okay, exellent. Gut, jetzt k\u00f6nnen wir loslegen. Also, wir missbrauchen mal diesen Standard-Wetter-Vorhersage-Controller und benennen den um."}, {"id": 618, "start": 3640.0, "end": 3653.0, "text": "Den nennen wir mal ein Signal-Controller und machen diesen ganzen anderen Schmodder hier unten weg. Wetter-Vorhersage l\u00f6schen wir auch, braucht kein Mensch. So, und das machen wir auch leer."}, {"id": 619, "start": 3653.0, "end": 3669.0, "text": "So. Also, das funktioniert folgenderma\u00dfen, eine WebRTC-Verbindung aufzubauen. Das ist ja was, da kenn ich mich ein bisschen mit aus, weil das hab ich jetzt schon ein paar Mal gemacht."}, {"id": 620, "start": 3670.0, "end": 3675.0, "text": "Also, ich krieg das ungef\u00e4hr gebacken, wie man eine WebRTC-Verbindung aufbaut aus dem Browser."}, {"id": 621, "start": 3675.0, "end": 3684.0, "text": "Das erste, was man machen muss, ist, das hier ist quasi unser Main in die AVA-Skript. Also, unser Ziel ist jetzt, wir bauen eine Verbindung zum Backend auf."}, {"id": 622, "start": 3685.0, "end": 3696.0, "text": "\u00c4hm, und das Backend schickt uns dann die Videoframes von der Kamera, die es hier unten abruft, in den Browser. Soweit die Theorie, wenn alles funktioniert."}, {"id": 623, "start": 3696.0, "end": 3705.0, "text": "Ich, ich hab ja meine Zweifel, weil ich wei\u00df noch, was es f\u00fcr ein unglaublich ekliges Rumgefuddel war, bis ich das das erste Mal zum Laufen gebracht habe."}, {"id": 624, "start": 3706.0, "end": 3714.0, "text": "Aber ein Vorteil hat's, ich wei\u00df jetzt, was man machen muss, so ungef\u00e4hr. Vielleicht krieg ich das hier besser, krieg ich das besser hin."}, {"id": 625, "start": 3714.0, "end": 3725.0, "text": "Aber krieg ich das besser hin. So, was ist der Unterschied, was ist der Unterschied in AVA-Skript, ob ich var, let oder gar nichts verwende oder const."}, {"id": 626, "start": 3726.0, "end": 3733.0, "text": "Mein const kann ich mir vorstellen, const kann ich nicht mehr \u00e4ndern. Let und var. Das eine ist lokal, das andere ist irgendwie global."}, {"id": 627, "start": 3733.0, "end": 3743.0, "text": "Aber guck mal, ich kann den AVA-Skript, ich kann die Variablen so anlegen. Ich kann sagen l gleich das da. Ich kann sagen let l gleich das da."}, {"id": 628, "start": 3744.0, "end": 3751.0, "text": "Ich kann sagen var l gleich das da oder ich kann sagen const l gleich das da. Warum gibt's in AVA-Skript denn eigentlich vier Varianten, wie ich Variablen anlegen kann?"}, {"id": 629, "start": 3751.0, "end": 3768.0, "text": "Man kann's auch kompliziert machen. Allerdings, wenn man's richtig kompliziert machen will, macht man's in C++. Dann versteht's keiner mehr. Selbst die Standardersteller verstehen's da nicht mehr."}, {"id": 630, "start": 3768.0, "end": 3782.0, "text": "Okay, also um eine WebRTC-Verbindung aufzubauen, muss man Folgendes machen. Als erstes brauch ich auf der Gegenstelle irgendeine M\u00f6glichkeit Informationen mit meinem Client auszutauschen."}, {"id": 631, "start": 3783.0, "end": 3795.0, "text": "Das mach ich \u00fcber normale HTTP-Requests, machen wir das einfach. Weil WebRTC ist zwar ein Protokoll, das geht in beide Richtungen."}, {"id": 632, "start": 3795.0, "end": 3809.0, "text": "Ich kann Videos von einem Client zum anderen schicken und der Client zu mir. Das ist beidseitig. Aber f\u00fcr den Verbindungsaufbau brauche ich irgendeinen anderen Kommunikationskanal, weil die bidirektionale Verbindung gibt's ja noch nicht."}, {"id": 633, "start": 3809.0, "end": 3832.0, "text": "Deswegen muss ich das einmalig von Hand machen. Das hei\u00dft, ich mach jetzt einen Request, so stelle ich mir das so vor, nach Slash Signal. Dieser Controller hei\u00dft der so. Und wenn der Controller so hei\u00dft, dann registriert ASP.NET Core automatisch eine Uhrl, die Slash Signal signaligen oder wie auch immer hei\u00dft."}, {"id": 634, "start": 3832.0, "end": 3847.0, "text": "Also mach ich mal einen Fetch da drauf. Await, wie es sallt oder so. So, das gibt's ja noch nicht. Achso, Moment, Moment mal. Ich bin ja auch ganz falsch. Ich muss ja, das ist ja der Proxy, \u00e4h, Sekunde."}, {"id": 635, "start": 3847.0, "end": 3861.0, "text": "Local Host 5000. Okay. Die Sound-Lautst\u00e4rke kann sich auch nicht entscheiden, oder? Ob's jetzt mal laut oder leise wird."}, {"id": 636, "start": 3861.0, "end": 3881.0, "text": "Jetzt wieder leise. Let ist Block Scope nicht kompatibel mit allem ECMAScript 6. Ah. Ha. Ich hab nix verstanden. Also ECMAScript sind die JavaScript-Standardisierungsleute."}, {"id": 637, "start": 3881.0, "end": 3900.0, "text": "Was, es leckt? Oh, Vodafone wieder am Start. N\u00f6, leckt nix. Ah, leckt nix. Okay, also, \u00e4hm, ich schick jetzt dort nen, wie mach ich denn das jetzt am besten?"}, {"id": 638, "start": 3900.0, "end": 3920.0, "text": "Ich muss jetzt ne WebRTC-Verbindung aufbauen. Genau, ich muss erst mal, ich muss erst mal ne WebRTC-Connection anlegen. Also, so, das Ding ist gleich RTC Peer, irgendwas Peer-Connection."}, {"id": 639, "start": 3920.0, "end": 3939.0, "text": "So, und dann, wie ging das jetzt nochmal weiter? Genau, jetzt muss ich mir, genau, jetzt muss ich mir vom Server abholen, was der Server f\u00fcr Video-Formate unterst\u00fctzt."}, {"id": 640, "start": 3939.0, "end": 3953.0, "text": "Genau, das muss ich hier dr\u00fcber machen, das muss ich jetzt hier auf dem Server programmieren. Also, lock, await, result, JSON. Kommt noch kein JSON zur\u00fcck, aber das programmieren wir jetzt."}, {"id": 641, "start": 3953.0, "end": 3970.0, "text": "Warum reloadet das nicht mehr? Warum reloadet das nicht mehr? Ah, weil ich den Proxy nicht drin hab, ich hab die Erweiterung nicht. Beste Browser-Erweiterung, beste Visual Studio Code-Extension."}, {"id": 642, "start": 3970.0, "end": 3989.0, "text": "Weil, wenn man das installiert hat, ich zeig's euch mal, ist Massive Brained. Your Server Address ist Local Host. H\u00e4, warum wird das nicht angezeigt? Und Live Server Address ist ja Standard. Geht das jetzt schon?"}, {"id": 643, "start": 3989.0, "end": 4016.0, "text": "The Live Server Address is 52. \u00c4h, wohl auch nicht. Was hab ich verkehrt gemacht? Was hab ich verkehrt gemacht?"}, {"id": 644, "start": 4016.0, "end": 4031.0, "text": "Warum reloadet das nicht? Hab ich irgendwas falsch gemacht?"}, {"id": 645, "start": 4031.0, "end": 4051.0, "text": "\u00c4h, nee, warte, das hat mit SIP nichts zu tun, das hei\u00dft nur so. Hab ich was vergessen? Ach, ich hab Live Reload nicht angemacht, null. So, jetzt funktioniert's. So, und jetzt ist der Vorteil, guck mal, wenn ich das angeschaltet hab, wenn ich jetzt hier was reinschreibe und speichere, b\u00e4m, reloadet der automatisch die Seite. Das ist exzellent."}, {"id": 646, "start": 4051.0, "end": 4063.0, "text": "Ich hab Live Reload vergessen. \u00c4h, gute Frage im Chat kommt \u00f6fters. Und zwar, wo ist es? Wo ist es?"}, {"id": 647, "start": 4063.0, "end": 4080.0, "text": "Kannst du mir helfen? Was kann ich f\u00fcr einen Anf\u00e4nger lernen? Also mit welcher Programmiersprache man anfangen kann? Hast du irgendwelche Videos oder kennst du einen YouTube, der echt gut erz\u00e4hlt? \u00c4h, gut, da gibt's jede Menge, aber es ist halt die Frage, was du verwenden willst."}, {"id": 648, "start": 4080.0, "end": 4105.0, "text": "Ja, \u00e4h, dankesch\u00f6n, Kid Ivar, Twitch Prime, huge sub, dankesch\u00f6n, nice. Also wenn du dich, wie hei\u00dft das Plugin-Live-Server? Also wenn du dich in irgendeiner Art und Weise f\u00fcr Web-Entwicklung begeistern kannst, also sprich Webseiten erstellen und Backends f\u00fcr Webseiten, finde ich, ist das der beste Einstieg, weil man visuell sieht, was passiert."}, {"id": 649, "start": 4105.0, "end": 4119.0, "text": "Wenn das nicht so dein Fall ist, ist halt die Frage, wo so deine Interessen liegen. M\u00f6chtest du Windows-Anwendung machen, vielleicht sogar Windows-Desktop-Anwendung, da kommst du an.NET nicht vorbei, C-Sharp.net."}, {"id": 650, "start": 4119.0, "end": 4141.0, "text": "Willst du vielleicht ein bisschen in Richtung so Cloud-Geschichten gehen, da ist viel in Go programmiert. Und ansonsten, was auch recht hip ist, wenn's Richtung Machine Learning und irgendwelche wissenschaftlichen Sachen gehen soll, dann ist Python \u00fcbelst angesagt."}, {"id": 651, "start": 4141.0, "end": 4149.0, "text": "Also, ist halt die Frage, wo so deine Interessen liegen. Da kann ich dir da auch besser was sagen."}, {"id": 652, "start": 4149.0, "end": 4171.0, "text": "Cobol, Cobol geht immer, Cobol geht immer. Okay, also, wir fragen den Server, was er alles f\u00fcr Video-Formate unterst\u00fctzt. Das m\u00fcssen wir jetzt dem Server erstmal beibringen, dass der da drauf antwortet. \u00c4hm, erstmal \u00fcberlegen."}, {"id": 653, "start": 4171.0, "end": 4186.0, "text": "Tja, da muss ich jetzt in die Hilfe gucken, da muss ich jetzt in die Hilfe gucken von diesem, von dieser Library, oder?"}, {"id": 654, "start": 4187.0, "end": 4193.0, "text": "W\u00fcrde ich mal sagen, da muss ich in die Hilfe von der Library gucken, wie das funktioniert."}, {"id": 655, "start": 4193.0, "end": 4207.0, "text": "Machine oder Web, aber mehr f\u00fcr Maschine. Was verstehst du unter Maschine?"}, {"id": 656, "start": 4208.0, "end": 4213.0, "text": "Meinst du irgendwelche Low-Level-Geschichten? Oder meinst du Microcontroller?"}, {"id": 657, "start": 4213.0, "end": 4222.0, "text": "Also, wenn du irgendwelche, wenn du gerne Microcontroller-Sachen machst, dann nimm deine ESP32 mit Platform-IO. Beste Kombination."}, {"id": 658, "start": 4223.0, "end": 4234.0, "text": "Also, wenn du so ein bisschen Microcontroller basteln willst, irgendwie so ein bisschen Elektronik-Gramm machen willst, dann ist eine ESP32 mit Arduino-Platform-IO das beste, was du machen kannst."}, {"id": 659, "start": 4234.0, "end": 4243.0, "text": "Oder meinst du mit Maschine f\u00fcr Desktop? Also Desktop-Anwendung. Also sprich, irgendwelche grafischen Desktop-Anwendungen."}, {"id": 660, "start": 4244.0, "end": 4249.0, "text": "Also, wenn du grafische Desktop-Anwendungen machen willst, dann ist die n\u00e4chste Frage, f\u00fcr welches Betriebssystem?"}, {"id": 661, "start": 4250.0, "end": 4261.0, "text": "Windows only, Windows Mac Linux, Cross-Platform. Das ist tats\u00e4chlich ein ziemlich kompliziertes Feld, wenn man Cross-Platform-Anwendungen machen will."}, {"id": 662, "start": 4261.0, "end": 4267.0, "text": "Allerdings, wenn du ein bisschen Web gelernt hast, gibt es M\u00f6glichkeiten, dass du das auch auf Desktop \u00fcbertr\u00e4gst."}, {"id": 663, "start": 4268.0, "end": 4276.0, "text": "Deswegen gibt es in letzter Zeit so viele Elektron-Anwendungen und Browser in einem eigenen Fenster, die viel RAM fressen, weil das alles Web-Entwickler sind, die jetzt meinen, sie machen Desktop-Anwendungen."}, {"id": 664, "start": 4279.0, "end": 4286.0, "text": "Hab ich doch eigentlich ganz treffend beschrieben, oder? So, FFmpeg2-WebRTC. Gucken wir jetzt mal, was die hier machen."}, {"id": 665, "start": 4286.0, "end": 4296.0, "text": "Programmen. Das m\u00fcssen wir jetzt nachbauen. Also, was machen die hier? WebSocket interessiert uns gar nicht. WebSocket brauchen wir nicht. Machen wir das ohne WebSockets."}, {"id": 666, "start": 4301.0, "end": 4307.0, "text": "WebSockets, alles egal. WebSockets juckt uns nicht. FFmpeg."}, {"id": 667, "start": 4307.0, "end": 4315.0, "text": "FFmpeg. Ja, das jetzt kommt das Interessante. Also, was?"}, {"id": 668, "start": 4316.0, "end": 4318.0, "text": "Was?"}, {"id": 669, "start": 4324.0, "end": 4326.0, "text": "Okay, keine Ahnung."}, {"id": 670, "start": 4327.0, "end": 4334.0, "text": "Ah, hier. Create. Das ist interessant. Das kenne ich. Das kenne ich. Das sind so die Standard-WebRTC-Geschichten. Okay, Create Offer. Sehr sch\u00f6n."}, {"id": 671, "start": 4334.0, "end": 4346.0, "text": "Also, was muss ich machen? RTC Peer Connection. Die scheinen sich ziemlich gut an der Web-ARP zu orientieren, was gut ist, weil die Web-ARP kann ich. Die SIP Sorcery-ARP kann ich n\u00e4mlich nicht."}, {"id": 672, "start": 4346.0, "end": 4365.0, "text": "Also, dann machen wir das doch mal. Also, ja. War PC gleich New. New. Hallo. Import New RTC Connection. Configuration. Brauchen wir da eine Configuration? Was machen die hier?"}, {"id": 673, "start": 4365.0, "end": 4377.0, "text": "Null. Okay, exellent. Null. Ich wei\u00df jetzt nicht genau, was ich da gerade mache, aber mal gucken, ob es funktioniert."}, {"id": 674, "start": 4378.0, "end": 4388.0, "text": "By the way, ich nehme mal kurz hier aus dem Startup den Start von der Webcam raus, weil sonst blocken die mich noch, wenn ich laufend auf ihren Stream zugreife."}, {"id": 675, "start": 4388.0, "end": 4398.0, "text": "Das will ich nicht, dass wenn ich dann testen will, dass die auf einmal mich irgendwie IP-Band haben oder sowas. Mein Domain-Anbieter hat mich ja schon IP-Band. Will ich noch mehr IP-Band werden?"}, {"id": 676, "start": 4398.0, "end": 4414.0, "text": "Electron ist das Docker der Frontend-Entwickler. Ich entdecke gewisse Parallelen. Ist beides was, wo jeder meint, das ist das Ding schlechthin, was man benutzen muss."}, {"id": 677, "start": 4415.0, "end": 4421.0, "text": "Geht Node Share nicht auch mit TypeScript? Doch, doch, klar."}, {"id": 678, "start": 4421.0, "end": 4431.0, "text": "Also, ich habe es noch nie verwendet, aber es m\u00fcsste gehen. Ansonsten geht Deno."}, {"id": 679, "start": 4432.0, "end": 4443.0, "text": "Ich brauche NordExpressVPN, ganz genau. Okay, also Per Connection RTC. So, wie geht es weiter? Ich muss mich ein bisschen beeilen hier."}, {"id": 680, "start": 4443.0, "end": 4457.0, "text": "Also, Create Offer. Okay, das kenne ich. Das macht man im Browser ganz genauso. Create Offer. Zack. So, das generiert mir jetzt eine Liste mit Codecs, die mein Backend unterst\u00fctzt."}, {"id": 681, "start": 4458.0, "end": 4469.0, "text": "Jetzt muss ich dem irgendwie noch sagen, dass ich nur H264 unterst\u00fctzen will. H264 ist so der Codec, der zu 99% verwendet wird."}, {"id": 682, "start": 4469.0, "end": 4479.0, "text": "Also, wenn ihr Videos anguckt, ist das zu... na, wobei, kann man gar nicht sagen. YouTube ist mittlerweile, wenn es nicht geforst wird, nicht mehr H264."}, {"id": 683, "start": 4480.0, "end": 4491.0, "text": "Aber zu 90% wenn ihr Videos anguckt, ist das H264. Und die meisten Kameras liefern ihr Videos auch in H264 aus. Deswegen muss ich sagen, hallo Browser, ich unterst\u00fctze nur H264."}, {"id": 684, "start": 4491.0, "end": 4510.0, "text": "Das ist nat\u00fcrlich die Frage, wie mache ich denn das? Create Offer. Track, gibt es hier was mit Track? Ah, Videotrack. Exzellent, das brauche ich."}, {"id": 685, "start": 4510.0, "end": 4525.0, "text": "Das brauche ich. Also, Create Offer. Okay, das machen wir jetzt mal. Also Videotrack, ich Copy Paste mir das einfach mal, ohne dass ich wei\u00df, was ich mache."}, {"id": 686, "start": 4525.0, "end": 4540.0, "text": "Track, Videotrack. Types, Video, Remote, was auch immer. Das ist False. Und hier muss ich jetzt reintragen, was f\u00fcr Videoformate unterst\u00fctzt werden anscheinend. Okay, machen wir das mal. Wir programmieren das einfach nach, wie die das gebastelt haben."}, {"id": 687, "start": 4540.0, "end": 4555.0, "text": "Und dann sage ich Add Videotrack. So, ich muss ihm jetzt sagen, ich unterst\u00fctze nur H264. Hat Max eine Lizenz? Nat\u00fcrlich. Was meinst du denn?"}, {"id": 688, "start": 4555.0, "end": 4571.0, "text": "Meinst du, ich w\u00fcrde dir was ohne Lizenz verwenden? Das glaubst du doch nicht wirklich. Meinst du jetzt den Codec? Meinst du jetzt den Codec oder meinst du jetzt die IDE?"}, {"id": 689, "start": 4571.0, "end": 4585.0, "text": "By the way, ich sollte das mal umbenennen vom Default Namen. Signal Controller. Das ist hier der. Wo ist denn hier? Rename immer versteckt. Da. Bam. Exzellent."}, {"id": 690, "start": 4585.0, "end": 4601.0, "text": "Also. Okay, was? Wie sage ich denn jetzt, dass ich nur H264 Video machen will? Aha, Videoformat. Videoformat, Videoformat. Okay, was gibt es denn Videoformat?"}, {"id": 691, "start": 4601.0, "end": 4614.0, "text": "Videoformat. Videoformat. Mal gucken, ob man hier. Weil ich wei\u00df, welche Daten ich angeben muss. Das kann ich aus der anderen Software, die ich ja schon gebastelt habe, abgucken. Ich muss nur gucken, wie ich das hier mit der Library mache."}, {"id": 692, "start": 4614.0, "end": 4642.0, "text": "Moin, da Twinkos auch am Start. Poggers. So, also. Damit kann ich sogar jetzt was anfangen. Was wird gebaut? Ich habe ja vor einer Weile schon mal f\u00fcr meine \u00dcberwachungskameras was gebaut, was die RTSP Streams von den \u00dcberwachungskameras abruft mit FFMPEG."}, {"id": 693, "start": 4642.0, "end": 4658.0, "text": "Und dann \u00fcber WebRTC in den Browser schickt. Das habe ich aus der Not heraus gemacht, weil ich keine ordentliche Video\u00fcberwachungssoftware gefunden habe, die erstens gescheit auf dem Raspberry Pi l\u00e4uft, zweitens wenig Latenz hat und drittens nicht alles reencoded."}, {"id": 694, "start": 4658.0, "end": 4672.0, "text": "So, das habe ich gebastelt. Die allererste Variante war eine Mischung aus C und Go. C, weil FFMPEG und Go, weil die einzig sinnvolle WebRTC Library, die man benutzen kann, das hier war."}, {"id": 695, "start": 4672.0, "end": 4689.0, "text": "Und dann habe ich das irgendwann nochmal neu gebaut in.NET mit Go, weil ich am liebsten.NET programmiere. Allerdings ist Interop zwischen.NET und Go abgrundtief kacke. Deswegen habe ich mich heute gefreut, dass ich eine Library gefunden habe, die WebRTC angeblich in.NET macht."}, {"id": 696, "start": 4689.0, "end": 4701.0, "text": "Das wollte ich jetzt gerade mal ausprobieren. Also das Ziel ist, dass ich in 45 Minuten irgendwie es hingekriegt habe, dass ich ein Video, ein Testvideo in den Browser \u00fcber WebRTC \u00fcbertrage. Mal gucken, ob das funktioniert. Ich habe n\u00e4mlich nicht mal allzu viel Zeit."}, {"id": 697, "start": 4703.0, "end": 4705.0, "text": "So, also."}, {"id": 698, "start": 4705.0, "end": 4721.0, "text": "Video Format. Gut, da kann ich hier kann ich ja was mit anfangen. Da wei\u00df ich ja, was da rein muss. So, also das Video Codex hat 264. Hat eigentlich derjenige geantwortet mit den mit den Einsteiger, Programmier, Geschichten nochmal?"}, {"id": 699, "start": 4721.0, "end": 4735.0, "text": "Nee, das letzte Mal Maschine oder Web. Auf die andere Sachen nicht. Da kann ich auch nicht mehr sozusagen. Ist das Website Backend eigentlich der direkte Quellcode? Ist das Source auf GitHub? Nee."}, {"id": 700, "start": 4735.0, "end": 4751.0, "text": "Ich habe, ich habe mal eine Testversion hier im Stream. Wir haben das hier im Stream mal ein bisschen gebastelt. Ich habe meine Testversion irgendwo auf frag mich nicht auf Pastebin oder so hochgeladen vor zwei Jahren oder einem Jahr."}, {"id": 701, "start": 4751.0, "end": 4767.0, "text": "Nee, ist nicht. Okay, also wir wollen nur 264 Video unterst\u00fctzen. Format. Da wei\u00df ich gl\u00fccklicherweise, was man eintragen muss, weil das kann ich jetzt aus meinem anderen abgucken. 102."}, {"id": 702, "start": 4767.0, "end": 4780.0, "text": "Frag mich bitte nicht, warum 102. Ich habe keine Ahnung, warum 102. Ich wei\u00df nur, dass es mit 102 funktioniert, weil beim anderen steht 102 drinne und das geht."}, {"id": 703, "start": 4780.0, "end": 4797.0, "text": "Ansonsten habe ich keine Ahnung, warum die Format ID 102 ist. Wahrscheinlich steht das im Standard irgendwo drin. Keine Ahnung. Ich tippe das einfach nur ab, was ich bei der anderen Geschichte drin stehen habe. 102. Weil klar, 264 sieht auch so nach 102 aus."}, {"id": 704, "start": 4797.0, "end": 4811.0, "text": "Okay, Format. Was, was, was braucht man jetzt noch? Warte mal, das hier hat doch einfach in Format gefressen noch, oder? Format. Okay, das funktioniert. Exzellent. Sehr gut, sehr gut."}, {"id": 705, "start": 4811.0, "end": 4829.0, "text": "So, und jetzt k\u00f6nnen wir sagen Create Offer. Und nun gucken wir mal, ob ich im Browser, jetzt ist der Moment der Wahrheit, ob ich im Browser was ordentliches zur\u00fcckkriege. Moment hier, was? Null, oder? Nochmal. Ja."}, {"id": 706, "start": 4829.0, "end": 4856.0, "text": "Ja. So. Also ich muss keinen Lizenzcode, ich muss keinen Lizenz f\u00fcr H264 bezahlen, wenn ich das verwende. Irgendwelche Hardware Hersteller m\u00fcssen das bezahlen oder so. So ist das gemeint mit, dass das nicht Lizenz war. Ich muss da nichts f\u00fcr bezahlen. Ich kann das, es kann ja auch jeder ein Video encoden in H264 mit FFmpeg. Das ist kein Ding."}, {"id": 707, "start": 4856.0, "end": 4880.0, "text": "Aber wenn du eine Hardware verkaufst, die das benutzt, da musst du Lizenzgeb\u00fchren irgendwie bezahlen. So. Also. H264 gleich 2 plus 6, 2 plus 6 plus 4 gleich 2 plus 10 gleich 102. Ach so. Ja, deshalb gibt das alles Sinn."}, {"id": 708, "start": 4880.0, "end": 4896.0, "text": "Exzellenter Chat ist mal wieder Next Level angekommen. So und jetzt schicke ich das hier zur\u00fcck. Return. Ja Offer. Und jetzt gucken wir, ob es im Browser ankommt und ob der Browser das frisst. Das ist ja noch viel. Ach so. Moment, was geben wir hier zur\u00fcck?"}, {"id": 709, "start": 4896.0, "end": 4910.0, "text": "Ich mache es jetzt wirklich eklig. Object. Schei\u00df drauf. Hauptsache es geht. Kommt was zur\u00fcck. So. Browser. Await. Console. Ok, wir kriegen was zur\u00fcck. Das schaut mal gut. Jetzt m\u00fcssen wir nur gucken, ob der Browser das ganze frisst."}, {"id": 710, "start": 4910.0, "end": 4938.0, "text": "Wie machen wir das jetzt irgendwie? Set Remote. Also man muss dem jetzt sagen, ok, das sind die Sachen, die der Server unterst\u00fctzt. Und dann muss ich quasi noch eine Antwort generieren, wo drinne steht, das sind die Videoformate, die der Client unterst\u00fctzt. Und wenn die sich beide einig w\u00e4ren, dann kann ich Video \u00fcbertragen."}, {"id": 711, "start": 4938.0, "end": 4967.0, "text": "Ok, Set Remote Description. Geht das einfach so jetzt? Ach, das funktioniert jetzt? Das h\u00e4tte ich jetzt gar nicht gedacht. Exzellent. So. Set Remote Description und jetzt muss ich den Antwort generieren, den ich an den Server zur\u00fcckschicke, wo drinne steht, was mein Browser f\u00fcr Videos unterst\u00fctzt."}, {"id": 712, "start": 4968.0, "end": 4981.0, "text": "Also, wir nennen das mal ein kleines bisschen ordentlicher. Wir nennen das mal irgendwie."}, {"id": 713, "start": 4981.0, "end": 5003.0, "text": "Die Confidence Jason ist schon. Ok, das mach ich irgendwie. Und \u00e4h. Tja. Passt schon. So, und jetzt muss ich ne Antwort generieren, was der Browser f\u00fcr Videos, Formate unterst\u00fctzt. So, das geht so."}, {"id": 714, "start": 5003.0, "end": 5028.0, "text": "Dann sagt man Create Answer. Das sagt, ok, das sind meine lokalen Videoformate. Ach so. Let Await. Irgendwie so. Wird doch eh kein Sch\u00f6ner als Preis gewinnen. So. Also, das passt. Jetzt geb ich das mal aus und schau mal, ob der Browser irgendwie was Sinnvolles da generiert \u00fcberhaupt."}, {"id": 715, "start": 5028.0, "end": 5049.0, "text": "Ja, ich hab keine Ahnung, ob das sinnvoll ist, aber das sieht so aus, als kackt das zumindest nicht ab. Ich hab Traffic verwenden f\u00fcr den Docker Reboot as Proxy. Ja. So. Das muss ich jetzt zur\u00fcck an Server schicken, dass das funktioniert. Await. Fetch."}, {"id": 716, "start": 5049.0, "end": 5075.0, "text": "An. Ach so. Ha. Ok, ich brauch auf dem Server ne zweite Funktion, die Sachen annimmt. Also. Atttp. Post. Und das wird Bigpray Name. Das hei\u00dft jetzt einfach nur Post. Und \u00e4hm. Brauch jetzt. Ach so. Oh. Oh. \u00c4h. Jetzt gibt's ein kleines Problem."}, {"id": 717, "start": 5075.0, "end": 5102.0, "text": "Hier. Oh, da hab ich jetzt gar nicht dran gedacht. Hier erstelle ich quasi die Server-seitige, \u00e4h, Server-seitige Ende dieser Verbindung und f\u00fcge auch den Videotrack hinzu und schicke das dem Client. Das Problem ist aber, \u00e4h, wenn ich jetzt dem Server schicken m\u00f6chte, was mein Browser alles unterst\u00fctzt, dann wei\u00df ich nicht mehr, zu welcher Verbindung das Ganze geh\u00f6rt."}, {"id": 718, "start": 5102.0, "end": 5129.0, "text": "Also, deswegen machen wir mal ein Private Static, \u00e4h, \u00e4h, Private Static, was wei\u00df ich, \u00e4h, Dictionary aus irgendeiner ID und einer, \u00e4h, Connection. Dass ich das irgendwie zuordnen kann. Das ist jetzt quasi so, irgendwie so ein bisschen Brain Dump. Keine Ahnung, ob das dann tut. So."}, {"id": 719, "start": 5129.0, "end": 5153.0, "text": "Connections. Jetzt brauchen wir noch irgendeine ID, die ich hochz\u00e4hle. Private. \u00c4h, ID. Ja, Uint-ID. So, jeder Client kriegt quasi eine neue ID zugewiesen. Das k\u00f6nnte, das k\u00f6nnte tats\u00e4chlich funktionieren."}, {"id": 720, "start": 5153.0, "end": 5175.0, "text": "Okay, \u00e4h, mal kurz nebenbei abgucken, ob man welche anonymen Dinger returnen kann. Also, das hei\u00dft, neuer Client connectet sich, wir z\u00e4hlen die ID eins hoch. So, und jetzt darf ich nicht, jetzt, okay, okay, ich wei\u00df, was ich mache."}, {"id": 721, "start": 5175.0, "end": 5186.0, "text": "Ich darf jetzt dem Client nicht einfach nur die Information zur\u00fcckgeben, welche Videokodex ich unterst\u00fctze, sondern ich muss dem Client noch zur\u00fcckgeben die ID."}, {"id": 722, "start": 5186.0, "end": 5206.0, "text": "Genau, ID, die eine einzigartige ID durch den Client wieder erkenne. So, das, das muss, und jetzt hier Offer. Okay, und hier \u00fcbergebe ich ihm jetzt, mal gucken was, wei\u00df ich auch nicht genau."}, {"id": 723, "start": 5206.0, "end": 5218.0, "text": "Jetzt muss ich das hier neu basteln, dass das klappt. Jason Offer, dann machen wir hier die ID. Die ID m\u00fcsste jetzt hier drin stehen."}, {"id": 724, "start": 5218.0, "end": 5240.0, "text": "Ja, oh, oh, ach so. Aha, okay, okay, es scheint, es scheint noch zu funktionieren. Okay, jetzt schicken wir die Information an den Server zur\u00fcck, was der Browser f\u00fcr Videokodex unterst\u00fctzt."}, {"id": 725, "start": 5240.0, "end": 5258.0, "text": "Also, das schicken wir wieder an Signal zur\u00fcck. Allerdings, diesmal mit einem Postrequest, irgendwie Method gleich Post, Body gleich hier meine, meine Antwort."}, {"id": 726, "start": 5258.0, "end": 5280.0, "text": "Exzellent. Wie das funktioniert? Ernsthaft? Einfach so? Okay. Ach so, wie kriege ich das jetzt rein? Komm, Dynamic. Hauptsache es geht."}, {"id": 727, "start": 5280.0, "end": 5293.0, "text": "Kommt da jetzt irgendeine Antwort? Klappt das jetzt? Kommt da jetzt irgendwas auf dem Server an? Oh, Unsupported Media Type."}, {"id": 728, "start": 5293.0, "end": 5311.0, "text": "Ach so, ich muss ihm noch sagen, dass es Jason ist. Fetch API, wie macht man das? Fetch API Post Jason, wie geht das? Das kann sich doch kein Mensch aus dem Kopf merken."}, {"id": 729, "start": 5311.0, "end": 5330.0, "text": "Header. Exzellent. Das brauchen wir. Header. Ich gebe dir einen Header, Alter. So, wunderbar. Bad Request. Warum? Warum ist das ein Bad Request?"}, {"id": 730, "start": 5330.0, "end": 5340.0, "text": "Also, ich finde nicht, dass der schlecht ist. Chat wollen wir abstimmen, ist der Request wirklich schlecht? Also, ich finde den eigentlich ganz gut."}, {"id": 731, "start": 5340.0, "end": 5361.0, "text": "Warum ist das? Ah, ich wei\u00df, ich wei\u00df. Weil ich ja kein JavaScript Objekt an den Server schicken kann, sondern. Ah, viel besser. Okay. Also, ich kriege jetzt schon mal die Antwort vom Browser, was der unterst\u00fctzt."}, {"id": 732, "start": 5361.0, "end": 5374.0, "text": "Sehr gut. So. Okay, da ist Type drinne. Ach nee, ich muss die ID noch mit zur\u00fcckschicken, dass ich wei\u00df, welcher Klein sich connectet."}, {"id": 733, "start": 5375.0, "end": 5385.0, "text": "Also schicke ich nicht die Antwort zur\u00fcck, sondern schicke eine ID zur\u00fcck. Das ist die ID und dann schicke ich die Antwort zur\u00fcck."}, {"id": 734, "start": 5385.0, "end": 5400.0, "text": "Okay, das scheint zu funktionieren. Ich kriege die ID wieder zur\u00fcck. Das hei\u00dft, ich mache hier sowas wie int id oder client id gleich Antwort id."}, {"id": 735, "start": 5400.0, "end": 5414.0, "text": "Und was haben wir dann sonst noch? String oder nennen wir es, nennen wir es irgendwie. Antwort gleich. Ah nee, das habe ich ja schon belegt."}, {"id": 736, "start": 5414.0, "end": 5433.0, "text": "Temp, immer besser Name, wenn einem sonst nix einf\u00e4llt. Antwort. Antwort. Ach du gro\u00dfe Geil. Stimmt das jetzt, was ich hier mache? Ich muss das mal kurz ausgeben, ob da \u00fcberhaupt was sinnvolles ankommt, was ich hier schicke."}, {"id": 737, "start": 5433.0, "end": 5455.0, "text": "Ich schicke. So, zack. Oh, internal. Okay, nein, das hat schon mal nicht funktioniert. Warum? Aha."}, {"id": 738, "start": 5464.0, "end": 5481.0, "text": "Ah, deswegen vielleicht. ToString? ToString gibt es bestimmt auch. Das sieht besser aus. Excellent. Okay, Antwort. Antwort. Ach du gro\u00dfe Schei\u00dfe."}, {"id": 739, "start": 5481.0, "end": 5501.0, "text": "Nee, StPetus. Ich brauche hier nur die SessionDescription, das reicht. So, okay. Gibt es hier SessionDescription? Jawoll. New SessionDescription. Keine Parameter."}, {"id": 740, "start": 5501.0, "end": 5519.0, "text": "\u00c4h, Session, was haben wir denn sonst noch? SessionDescription? Init? Was ist Session? Ah, ich kenne die API von dem Zeug nicht. Wie machen die das denn hier? SessionDescription. New? Ah, hier, guckt mal. New Session."}, {"id": 741, "start": 5519.0, "end": 5533.0, "text": "Okay, das brauche ich. Das, das muss ich machen. Excellent. Das da. Das, das brauche ich jetzt. Das und sonst nichts."}, {"id": 742, "start": 5533.0, "end": 5548.0, "text": "Okay. So, jetzt muss ich mir erstmal die Connections zum Client hier oben wieder aus meinem Dictionary rausholen, weil das ist ja Stateless und das lasse ich mal Temp. Temp ist prinzipiell immer der beste Name f\u00fcr alles."}, {"id": 743, "start": 5548.0, "end": 5567.0, "text": "So, Connections und zwar die ID. So. Und jetzt da. Was hat er f\u00fcr Schmerzen? Int is not assignable to par uint. Ach so. Ja, das ist richtig. Dann ist es einfach hier oben jetzt mal ein uint."}, {"id": 744, "start": 5567.0, "end": 5587.0, "text": "Ansonsten, wenn es kein unsite int ist, dann crash es einfach und gut ist. So, also PC, Set, Set, Set. Hab ich hier die Create Offer? Und muss ich noch einstellen, dass der sich das merkt, welche Videoformate er selbst unterst\u00fctzt?"}, {"id": 745, "start": 5587.0, "end": 5599.0, "text": "Okay. Und jetzt muss ich ihm sagen, welche Videoformate der an die andere Seite unterst\u00fctzt."}, {"id": 746, "start": 5600.0, "end": 5612.0, "text": "Schon mal GRPC ausprobiert. Nein, habe ich nicht. So, es ist gleich Temp. Ich hoffe, das funktioniert jetzt. Okay, es kackt schon mal nicht ab. Das ist schon mal nice."}, {"id": 747, "start": 5612.0, "end": 5621.0, "text": "So, ich muss mich jetzt ein bisschen beeilen, dass ich das bis 22.00 Uhr alles hinkriege. So, Set, Remote Description. Blablabla. Temp. Gucken wir mal, ob es nicht crash, selbst wenn ich hier..."}, {"id": 748, "start": 5621.0, "end": 5641.0, "text": "The given key 1 was not present in the dictionary. Was? 1? \u00c4h, warum nicht? Ach so, ich kack nur, ich f\u00fcge das gar nicht hinzu da oben."}, {"id": 749, "start": 5641.0, "end": 5652.0, "text": "Ja, dann kann es ja auch da nicht drinstehen. All die... Das ist \u00fcbrigens wahnsinnig multithreaded safe, was ich hier alles mache. Also das wird nie kaputt gehen."}, {"id": 750, "start": 5652.0, "end": 5673.0, "text": "Die connection. Okay, mal gucken, ob es jetzt funktioniert. Ah, ja. Okay, okay, okay. Gut, gut, gut, gut, gut. Set Remote Description. Ich w\u00fcrde sagen, das ist alles, was wir brauchen. Und jetzt k\u00f6nnen wir ein Video senden."}, {"id": 751, "start": 5673.0, "end": 5687.0, "text": "Oder? Die settings sind richtig hier, diese Dinger. Die kenne ich von dem anderen Programm, also das passt. So, und jetzt kann ich ein Video senden. Kann ich jetzt... Muss ich noch irgendwas machen?"}, {"id": 752, "start": 5687.0, "end": 5702.0, "text": "Ich setze das hier. Set Description. Also Leute, wenn das klappt, gifte ich 5 subs. Aber ich kann es mir nicht vorstellen, dass es einfach so geht."}, {"id": 753, "start": 5702.0, "end": 5717.0, "text": "So. Eigentlich... Also mir f\u00e4llt jetzt erstmal nichts mehr ein, was ich zum Verbindungsaufbau machen muss. Doch, nat\u00fcrlich. Die wichtigste Sache habe ich wieder vergessen, Chat. Die wichtigste Sache habe ich vergessen."}, {"id": 754, "start": 5717.0, "end": 5731.0, "text": "Also ich habe zwei Sachen vergessen. Erstens m\u00fcssen wir den empfangenen Stream noch an den Videoplayer \u00fcbergeben, also dem Videoplayer sagen, dass er das abspielen soll. Und zweitens muss ich den Videostream senden."}, {"id": 755, "start": 5731.0, "end": 5747.0, "text": "Den Videostream sende ich ja noch gar nicht. Das machen wir jetzt hier. Zeug machen mit den Videoframes. Wir machen jetzt Zeug mit den Videoframes. Und zwar Signal... Das ist \u00fcbrigens absolut nicht best practice oder sonst was, bevor mir jetzt hier irgendjemand eine ankommt."}, {"id": 756, "start": 5747.0, "end": 5763.0, "text": "Also man greift normalerweise... Also man macht sowas im Startup schon mal gar nicht. Man greift im Startup nicht auf jeden Fall Static-Controller-m\u00e4\u00dfiges zu. Was \u00fcbrigens gar nicht Static ist. Und man hat auch nicht unsafe code direkt im Startup. Aber who cares. Wir gucken einfach, dass das jetzt geht."}, {"id": 757, "start": 5763.0, "end": 5778.0, "text": "So, Public. Man macht auch nicht Sachen zwischendrin. Einfach mal Public, weil man woanders drauf zugreifen will. Aber hier bleibt jetzt gar nichts anderes \u00fcbrig. So, Connections. Bar. Und dann hier alle Values. Alle WebITC Connections."}, {"id": 758, "start": 5778.0, "end": 5795.0, "text": "Prime1994. Dankesch\u00f6n. Big Brain. Massive Sub. So, und PC. Things Connection. Ach nee, ich brauch den Track. Ich brauch den... Nee, guck mal, was ist das? Send JPEG Frame."}, {"id": 759, "start": 5795.0, "end": 5815.0, "text": "Oh, das ist ja cool. Ey, das ist nice. Ich wusste gar nicht, dass man \u00fcber WebRTC JPEG Frames \u00fcbertragen kann. Das ist richtig nice, wenn das funktioniert. Weil dann kann ich auch Motion JPEG unterst\u00fctzen. Das ist nice."}, {"id": 760, "start": 5815.0, "end": 5838.0, "text": "So, Send Audio Video. Was haben wir denn? Send H264 Frame. Duration Payload. Keine Ahnung. Duration RTP Units. Was sind Duration RTP Units?"}, {"id": 761, "start": 5838.0, "end": 5853.0, "text": "Sind das Timestamps? Sind das einfach nur Timestamps? Duration Add. Oder ist das wie lang ein einzelnes Schnipsel ist?"}, {"id": 762, "start": 5853.0, "end": 5871.0, "text": "Was ja im Endeffekt... Letzter Timestamp minus aktueller Timestamp. Ich hab keine Ahnung. Ich \u00fcbergebe da einfach mal den Timestamp und hoffe, dass es funktioniert. Und zwar den Presentation Timestamp."}, {"id": 763, "start": 5871.0, "end": 5890.0, "text": "Pts. Vielleicht w\u00e4re es besser, wenn ich den DTS nehme. \u00c4h, warum geht das nicht? Was ist das? Ein Long? Long. Ah, komm, easy. Uint. Wir casten das einfach mal ein gutes."}, {"id": 764, "start": 5890.0, "end": 5902.0, "text": "So, Bites. Ok. Jetzt wird es kriminell. Wie mein Opa gesagt h\u00e4tte. Der \u00fcbrigens nicht kriminell war. Aber das war so eine Standardredewendung von ihm. Dann immer gesagt, jetzt wird es kriminell."}, {"id": 765, "start": 5902.0, "end": 5923.0, "text": "\u00c4hm. Data. Ich kann jetzt ja nicht einfach einen Raw-C-Pointer an diese Funktion \u00fcbergeben. Das funktioniert ja nicht. \u00c4hm. Ich muss dieses Raw-Pointer-Ding... War mein Opa auch Programmierer? Nein. Mein Opa war Elektrotechniker."}, {"id": 766, "start": 5923.0, "end": 5936.0, "text": "Also der h\u00e4tte das hier mit Steckdosen garantiert besser hingekriegt, wie ich daheim. Wir m\u00fcssen dieses Raw-Bite-Array in ein.NET-Array konvertieren."}, {"id": 767, "start": 5936.0, "end": 5958.0, "text": "Wir haben hier, es gibt hier die Size davon. Wir k\u00f6nnen, wir k\u00f6nnen ein neues.NET, wir k\u00f6nnen ein neues.NET-Feature verwenden. Und zwar, die haben jetzt in einer letzten, letzten.NET-Version sowas hier eingef\u00fchrt. Das ist quasi ein Managed, so eine Art, wenn ich das richtig verstanden habe, so eine Art Managed-Pointer auf Raw-Memory."}, {"id": 768, "start": 5958.0, "end": 5980.0, "text": "Ich hab's noch in keinem Projekt bisher verwendet. Aber dem kann man, ach guck mal, dem kann man einen Pointer \u00fcbergeben und eine Size. Wunderbar. Genau das brauchen wir. Pointer-Size. \u00c4hm. Mem. Wie auch immer, ich's anders nennen soll."}, {"id": 769, "start": 5980.0, "end": 6000.0, "text": "So, und kann man daraus jetzt ein Byte-Array machen? Jawoll. Da. Manchmal lohnt sich Webcasts angucken. Excellent. So. Jetzt ist die Frage, ob es crashed. Gucken wir mal. Gucken wir mal, ob es crashed."}, {"id": 770, "start": 6000.0, "end": 6017.0, "text": "\u00c4hm. Ich muss gucken, dass es noch l\u00e4uft. Wie guck ich denn, dass es l\u00e4uft am besten? Ich, ich geb einfach, ich geb, okay, wir machen hier irgendwie mal sowas wie, so keine Ahnung. Und die, br\u00f6h, geht sofort. Wir machen irgendwie Cent oder so, schreiben wir mal rein."}, {"id": 771, "start": 6017.0, "end": 6036.0, "text": "Moment, was ja nicht funktionieren wird, weil, okay. Cent eins und Cent zwei. Okay. Weil die Schleife l\u00e4uft ja erst, wenn ich mich mit dem Browser registriert hab. Okay. Cent eins funktioniert."}, {"id": 772, "start": 6036.0, "end": 6046.0, "text": "\u00c4h, wir, wir, okay, wir geben nicht Cent aus, wir geben den Presentation Timestamp aus. Excellent Logging. Ja, richtig. Das ist Next Level Logging hier, was man hier sieht."}, {"id": 773, "start": 6046.0, "end": 6074.0, "text": "Ah, yes. \u00c4hm, choose my name. Deswegen finde ich, ist C-Sharp eines der besten Sprachen \u00fcberhaupt. Nicht nur, weil ich die Sprache an sich gut finde, sondern weil die es konstant schaffen seit 15 Jahren, nicht so eine Schei\u00dfe zu bauen, wie der C++ Standard, sondern neue Sachen auch zu verbessern und nicht einfach zu sagen, ah ja gut, wir haben jetzt 30 Mal das Gleiche drin."}, {"id": 774, "start": 6074.0, "end": 6089.0, "text": "Neue Sachen zu verbessern und die, die schaffen seit 15 Jahren sinnvolle Sachen in die Sprache einzubauen, die gut zu der Sprache passen und die Sprache erg\u00e4nzen. Also da m\u00fcsste sich das C++ Gremium echt mal eine Scheibe von abschneiden."}, {"id": 775, "start": 6089.0, "end": 6109.0, "text": "Aber wisst ihr was das Gute ist? Noch crasht nichts. Noch crasht nichts. Aber noch hab ich ja auch den Browser nicht aktualisiert. Also von der Idee her, ich aktualisiere jetzt den Browser. Wenn ich den Browser aktualisiere, registriert er eine neue Verbindung und er sollte was an diese Verbindung schicken, was aber noch nicht funktionieren kann."}, {"id": 776, "start": 6109.0, "end": 6132.0, "text": "Okay, okay, aber er sendet schon mal, er sendet schon mal Sachen theoretisch an den Browser. Der Browser empf\u00e4ngt aber noch nichts. Auch nicht, weil ich hab das noch nicht verkn\u00fcpft. Aber er kriegt das zumindest schon mal mit."}, {"id": 777, "start": 6132.0, "end": 6152.0, "text": "Okay, das hei\u00dft jetzt muss ich doch eigentlich nur noch den Videoplayer mit dem Stream verkn\u00fcpfen. Geht der RAM-Verbrauch hoch? Das ist eine gute Frage, das sieht man nicht so ohne weiteres, weil ich mich voll spamme mit. Wo ist der RAM-Verbrauch?"}, {"id": 778, "start": 6152.0, "end": 6171.0, "text": "Wo ist der RAM-Verbrauch? Wo ist der RAM-Verbrauch? Da! Nee, der RAM-Verbrauch scheint konstant zu bleiben. Okay, schauen wir mal. Also, jetzt verkn\u00fcpfe ich mal den Videoplayer mit meinem WebRTC-Backend."}, {"id": 779, "start": 6171.0, "end": 6193.0, "text": "Also, wenn das gehen w\u00fcrde, erstens verschenke ich ein paar Subs, weil ich nicht davon ausgehe. Und zweitens w\u00e4re das richtig geil, weil das hier ist mega \u00fcbersichtlicher kurzer Code f\u00fcr das ganze WebRTC-Zeug. Ich hab allein 400 Zeilen Go f\u00fcr den ganzen WebRTC-Krempel."}, {"id": 780, "start": 6193.0, "end": 6208.0, "text": "Okay, das macht auch noch ein bisschen mehr, das Go-Ged\u00f6ns. Aber allein schon das Handling f\u00fcr Verbindungsaufbau und hin und her schicken sind schon wahrscheinlich 200 Zeilen."}, {"id": 781, "start": 6208.0, "end": 6223.0, "text": "So, also, jetzt muss ich ihm noch sagen, dass er den Videostream an den Videoplayer attachen soll. Also, das ging, wenn ich das..."}, {"id": 782, "start": 6223.0, "end": 6239.0, "text": "Das machen wir ganz hier oben. Man musste dem in Callback einstellen, und zwar Track, irgendwas mit Track. On Track, genau."}, {"id": 783, "start": 6239.0, "end": 6254.0, "text": "\u00c4h, \u00e4h, im Moment, wie ging das Track so? Nee, im Moment, wie macht man das in JavaScript? Event, sagt man, event. Oder das ist wahrscheinlich schon gleich der Track. Wir gucken mal, ob da \u00fcberhaupt irgendwas ankommt."}, {"id": 784, "start": 6254.0, "end": 6268.0, "text": "Ja, Track-Event. Okay, Track-Event. Source-Element, Stream."}, {"id": 785, "start": 6268.0, "end": 6284.0, "text": "\u00c4h, das muss ich jetzt mal kurz abgucken, wie man das, wie man das, \u00e4h, attacht. So, okay, also, wir brauchen, wir brauchen auf jeden Fall schon mal das Player-Element. Also, Document, Get-Element, Player."}, {"id": 786, "start": 6284.0, "end": 6306.0, "text": "So, und jetzt wei\u00df ich nicht, wie ich dort irgendwas attache. Player, sowas wie Source, \u00e4h, nee, url, url bringt nichts, \u00e4hm, wie, wie \u00fcbergebe ich einem HTML, wie \u00fcbergebe ich einem HTML-Player-Element das Source?"}, {"id": 787, "start": 6306.0, "end": 6318.0, "text": "Ich k\u00f6nnte nachgucken, wie ich das bei dem anderen gemacht hab. Aber ich glaube, Google ist schneller. Video, HTML, \u00e4h, Source, irgendwie so."}, {"id": 788, "start": 6318.0, "end": 6336.0, "text": "Okay, gibt's da ein Beispiel? Video, Player, Player, Source, nee, das Kackseite."}, {"id": 789, "start": 6336.0, "end": 6364.0, "text": "What? Source-Object, Stream. Okay, Player, Source, Ob, gibt's net. Naja, einfach mal dran zur, und jetzt einfach minus Track oder Streams?"}, {"id": 790, "start": 6364.0, "end": 6369.0, "text": "Genau, das kenn ich noch. Genau, Streams Null musste man machen. Jaja, genau. So."}, {"id": 791, "start": 6376.0, "end": 6392.0, "text": "WTF? Loll, das kam jetzt unerwartet. Das kam jetzt unerwartet. Das funktioniert. Easy, easy as fuck."}, {"id": 792, "start": 6392.0, "end": 6398.0, "text": "Easy as fuck? Ich wusste von Anfang an, dass das klappt. Mir war das direkt klar, dass das direkt funktioniert."}, {"id": 793, "start": 6398.0, "end": 6421.0, "text": "Das geht einfach. Wisst ihr, wie lang ich mich abgem\u00fcht habe mit dieser Go-L\u00f6sung bis, bis ein einfaches, ihr k\u00f6nnt euch vielleicht an den Stream erinnern, bis ein einfaches Test, oh, es ruckelt."}, {"id": 794, "start": 6421.0, "end": 6435.0, "text": "Es ruckelt, Leute, es ruckelt. Das Video freest. Oh, oh je, MonkaS. Das Video freest zwischendurch. Ja, gut, schei\u00df drauf, man kann nicht alles haben."}, {"id": 795, "start": 6436.0, "end": 6448.0, "text": "Was sagt denn der RAM-Verbrauch? \u00c4h, da sind bestimmt, schau mal das Memory, ich w\u00fcrd mir das Memory gerne anschauen, aber \u00e4h, ja, ich hab zu viel D-Bank-Ausgabe."}, {"id": 796, "start": 6448.0, "end": 6457.0, "text": "Wo ist das Memory? Warte, wo ist das Memory, easy? Wo ist das Memory, wo ist die Memory aus? Ich mach mal die D-Bank-Ausgabe kurz aus, das ist ein bisschen viel."}, {"id": 797, "start": 6459.0, "end": 6470.0, "text": "\u00c4h, beste Antwort, ihr wollt, ich mach den ganzen Krams mal aus. \u00c4hm, Moment, wo sind wir denn hier, da? Ah, es kommt, es kommt mal alles weg, alles weg."}, {"id": 798, "start": 6470.0, "end": 6478.0, "text": "Alles weg, alles weg. Oh, ich starten. Neko Rock, 14 Monate, Dankesch\u00f6n. Die Subs gibt's \u00fcbrigens gleich, Leute."}, {"id": 799, "start": 6479.0, "end": 6494.0, "text": "Neko Rock. Big Brain Subscription. Gleich gibt's die Subs. So, 149 MB Verbrauch. Jetzt erst mal neu laden, das Video. Das funktioniert einfach, ich fass es nicht."}, {"id": 800, "start": 6494.0, "end": 6516.0, "text": "Ich fass es nicht. Das funktioniert einfach, das Videostream. \u00c4h, aber wir k\u00f6nnen auch gar nicht so viel Memory leaken, das ist ein, keine Ahnung, 360 x 240 Video oder so, das kann, selbst wenn das Memory leakt, merk ich das erst in einer halben Stunde wirklich nennenswert."}, {"id": 801, "start": 6516.0, "end": 6528.0, "text": "Nennenswert. So, ja nice, nice, nice, nice, nice, das funktioniert. Extrem poggers ist das. Da reicht poggers, da muss der franz\u00f6sische poggers ran."}, {"id": 802, "start": 6528.0, "end": 6544.0, "text": "First Mal 4K Videos anmachen. Ihr hat einen RTSP Test Stream? Meine Kameras will ich nicht reinmachen. Erstens liege ich dann vielleicht was. Doch, ich wei\u00df, was ich mach. Die iPhone Kamera. Ich mach die iPhone Kamera an."}, {"id": 803, "start": 6544.0, "end": 6561.0, "text": "\u00c4h, oh Moment, wo hab ich mein iPhone? iPhone? Wo hab ich mein iPhone? Ah, hier. Ich mach die iPhone Kamera an, die ich immer oben rechts in der Ecke hab. Die guck mal, Moment, das mach ich jetzt mal schnell."}, {"id": 804, "start": 6561.0, "end": 6573.0, "text": "iPhone Kamera oben, iPhone Kamera einschalten. Mal gucken, ob das das frisst. Kamera, zack."}, {"id": 805, "start": 6573.0, "end": 6601.0, "text": "Okay. Also wenn jetzt alles funktioniert, m\u00fcsstet ihr gleich mal den Raspberry Pi sehen. Gucken wir mal. \u00c4h, aber da brauchen wir eine andere, andere Ural RTSP."}, {"id": 806, "start": 6601.0, "end": 6618.0, "text": "Mein iPhone ist 122161.110. 554 ist die Fallport RTSP. So, mal gucken."}, {"id": 807, "start": 6618.0, "end": 6638.0, "text": "Oh, aber Connected, Connected ist das schonmal. So, das ist die iPhone Kamera. Da ist einfach, da ist einfach der Raspberry Pi. Oh, einfach, zwar \u00fcbel schlechte Beleuchtung und in der letzten Ecke wieder, wo die Kamera h\u00e4ngt, aber da ist einfach mal der Raspberry Pi da."}, {"id": 808, "start": 6638.0, "end": 6654.0, "text": "\u00c4h, wir gucken mal, wie viel Verz\u00f6gerung das Ganze hat. \u00dcbrigens, ich wei\u00df auch, ich hab's hochgekannt, ist egal. Moment, ich mach mal kurz die Hand hin und her. Was ist denn das?"}, {"id": 809, "start": 6654.0, "end": 6663.0, "text": "Was ist denn das? Oh, \u00e4h, was ist das?"}, {"id": 810, "start": 6663.0, "end": 6690.0, "text": "Das sieht nicht gut aus, aber nachdem ich schon ein bisschen was mit Audio und Video gemacht hab, sieht das f\u00fcr mich so aus. Das ist nicht so viel f\u00fcr die VF1. Es werden nur die Keyframes angezeigt."}, {"id": 811, "start": 6690.0, "end": 6704.0, "text": "Das sieht f\u00fcr mich aus, als w\u00e4ren es nur die Keyframes, die angezeigt werden und die dazwischen nicht. Wisst ihr, was das ist? Wisst ihr, was das ist? Das ist genau das, was ich vorhin erz\u00e4hlt hab. Wollen wir mal wetten, das ist genau das."}, {"id": 812, "start": 6704.0, "end": 6731.0, "text": "Wollen wir mal wetten, das ist genau das. Okay Leute, noch mal, also f\u00fcnf Gifted-Sub sind schon mal sicher f\u00fcr die ganze Geschichte, die ich hier jetzt, \u00e4h, dass es einfach so funktioniert hat. Aber ich gifte noch mal, ich gifte noch mal ein paar, wenn das jetzt stimmt, weil ich vermute, n\u00e4mlich, ich glaube, jetzt kommt genau das klei, jetzt ist wirklich genau das Problem, was ich vorher angesprochen habe, das ist gut, dass ich das drin gelassen hab, in wei\u00dfer Voraussicht schon."}, {"id": 813, "start": 6731.0, "end": 6753.0, "text": "Ich glaube, die Frames kommen in der falschen Reihenfolge. Also was hei\u00dft in der falschen Reihenfolge? Die Frames, wie sie decoded werden und wie ich sie anzeigen muss, kommen, also die muss ich erst noch selbst in die richtige Reihenfolge sortieren, wahrscheinlich, weil die iPhone-Kamera-App schei\u00dfe ist. Gucken wir mal, ob das stimmt."}, {"id": 814, "start": 6753.0, "end": 6780.0, "text": "Was? Ja, guckt. Die, die Coding und Presentation Timestamps sind anders. Manchmal, manchmal sind sie gleich, das ist wahrscheinlich ein Keyframe oder so, wenn die gleich sind. Das hei\u00dft, ich m\u00fcsste diese"}, {"id": 815, "start": 6780.0, "end": 6794.0, "text": "sortieren. Oh nee, da habe ich jetzt keinen Bock drauf. Da habe ich jetzt, da habe ich jetzt keinen Bock drauf. Oder ich nehme die Coding, ich nehme einfach die Coding Timestamps und gucke mal, ob es dann funktioniert. DTS."}, {"id": 816, "start": 6794.0, "end": 6809.0, "text": "Betr\u00e4gst du das \u00fcber W-Lan? Klar. Mit DTS k\u00f6nnte es sogar sein, dass es schon funktioniert, weil die sind ja immer aufsteigend."}, {"id": 817, "start": 6809.0, "end": 6828.0, "text": "Ey, das ruckelt immer noch, Leute, das ruckelt immer noch. Guck mal hier."}, {"id": 818, "start": 6828.0, "end": 6842.0, "text": "Es ruckelt immer noch. Okay, nee, da bin ich zu low-brain heute Abend daf\u00fcr, das zu fixen."}, {"id": 819, "start": 6843.0, "end": 6856.0, "text": "Also das Problem ist tats\u00e4chlich, dass die Coding Timestamps und die Presentation Timestamps, die stimmen nicht \u00fcberein. Das hei\u00dft, also von der Theorie her, was ich machen m\u00fcsste, w\u00e4re, ich m\u00fcsste mir so einen"}, {"id": 820, "start": 6856.0, "end": 6871.0, "text": "Buffer, ich m\u00fcsste mir einen Buffer anlegen, indem ich die Frames speichere f\u00fcr, sagen wir mal, 2 Sekunden. Und solange warte ich halt, bis ich den n\u00e4chsten passenden Presentation Frame habe oder so."}, {"id": 821, "start": 6871.0, "end": 6890.0, "text": "Mach doch ein einfaches If, wo du die gr\u00f6\u00dferen ausgibst. Okay, dann ruckelt es aber wahrscheinlich immer noch. Hast du das auf GitHub? Nee, das habe ich gerade hier im Stream erstellt."}, {"id": 822, "start": 6890.0, "end": 6902.0, "text": "Dann habe ich Delay, doch, doch, doch. Nee, das mache ich jetzt, ich kann das, wir machen im n\u00e4chsten Stream da mal ein bisschen weiter dran, dann kann ich es auf GitHub pushen."}, {"id": 823, "start": 6903.0, "end": 6915.0, "text": "Oder, oder, Kengin, willst du jetzt irgendwie da dran mitwursten? Ich mache es nicht auf GitHub, weil das komplett random zusammengewurstet ist, ich kann es dir auf Pastebin machen."}, {"id": 824, "start": 6915.0, "end": 6921.0, "text": "So, das ist eine gute Idee, probieren wir jetzt mal kurz aus, was hier jemand vorgeschlagen hat, und zwar."}, {"id": 825, "start": 6932.0, "end": 6938.0, "text": "Also ich kann es, nee, ich w\u00fcrde es sogar auf GitHub machen, aber ich kann es nicht auf GitHub von hier pushen. Ich bin ja gar nicht eingeloggt auf GitHub."}, {"id": 826, "start": 6938.0, "end": 6948.0, "text": "So, aber wir k\u00f6nnen die Billig-Variante wirklich mal ausprobieren, irgendwie. Was machen wir da? Last TS oder so, Null."}, {"id": 827, "start": 6948.0, "end": 6977.0, "text": "So, und jetzt sagen wir, wenn, was machen wir da jetzt, was machen wir da jetzt, also wenn, PTS, if, if, Moment, Package, PTS kleiner, gleich dem, ups, dem letzten ist."}, {"id": 828, "start": 6978.0, "end": 7005.0, "text": "Dann machen wir nicht weiter. So. So, und jetzt m\u00fcssen wir noch das setzen. Sagt mir, wenn ich Mist bastle. So. Ah nee, das muss ein Uint sein."}, {"id": 829, "start": 7005.0, "end": 7020.0, "text": "Aber das wird auch nicht dazu f\u00fchren, dass es besser funktioniert, weil er \u00fcberspringt ja immer noch Frames. Ah nee, long muss das sein. So, ergibt das hier irgendwie Sinn?"}, {"id": 830, "start": 7020.0, "end": 7041.0, "text": "Wollen wir hier nochmal abbrechen? Wo habe ich denn diese Ausgabe mit den Timestamps? Moment. Oh, wo habe ich es denn hier? Da. Brauche ich noch mal."}, {"id": 831, "start": 7041.0, "end": 7058.0, "text": "Jetzt gucken wir mal. Stimmt, ich k\u00f6nnte es nochmal als Release kompilieren. Ich glaube nicht, dass es einen gro\u00dfen Unterschied macht."}, {"id": 832, "start": 7058.0, "end": 7077.0, "text": "So, jetzt stimmt der Kram zwar immer noch nicht miteinander, aber es sind nur die gr\u00f6\u00dferen. Nee, ich glaube nicht, dass es einen Unterschied macht, weil das ist ja kein Performance Problem."}, {"id": 833, "start": 7077.0, "end": 7094.0, "text": "Das ist ja ein Problem, dass die Frames in der unterschiedlichen Reihenfolge geschickt werden. Wenn es schneller ist, ist es vielleicht sogar noch mehr kaputt."}, {"id": 834, "start": 7094.0, "end": 7106.0, "text": "Das war eine sehr gute Idee, Chat. Das war eine sehr gute Idee. Es ist immer noch nicht ganz fl\u00fcssig, es fehlen immer noch Frames. Nee, nee, es fehlen immer noch Frames."}, {"id": 835, "start": 7107.0, "end": 7118.0, "text": "Aber, okay, wir gucken mal, wie die Verz\u00f6gerung ist. Moment. Es ist wirklich verdammt wenig Verz\u00f6gerung. Ich muss euch, wie zeige ich euch am besten, wie die Verz\u00f6gerung ist."}, {"id": 836, "start": 7118.0, "end": 7130.0, "text": "Ich mache mal irgendein Ger\u00e4usch, ich mache mal irgendein Ger\u00e4usch, so hier. Irgendwie, so, Moment. Ich lege euch mal kurz das Handy neben dran, das Mikrofon hier so neben dran."}, {"id": 837, "start": 7130.0, "end": 7159.0, "text": "So. Und jetzt mal muss ich mal irgendwie krach machen, so, keine Ahnung. Na, kaum Verz\u00f6gerung, Leute. Habt ihr es geh\u00f6rt?"}, {"id": 838, "start": 7160.0, "end": 7171.0, "text": "Ja, wenigstens 200 Millisekunden. Leute, wollt ihr mich verarschen? Was interessieren mich 200 Millisekunden? 200 Millisekunden ist nichts f\u00fcr den \u00dcbertragungsweg, den das Ganze nimmt."}, {"id": 839, "start": 7172.0, "end": 7184.0, "text": "200 Millisekunden ist Pock. Ihr werdet kein Video schneller jemals im Browser gesehen haben wie das. Ach so, weniger als, ach ja, sorry. Ich hab mich verguckt."}, {"id": 840, "start": 7184.0, "end": 7199.0, "text": "Ich hab so gelesen, wie ja, wenigstens 200 Millisekunden, so als w\u00e4re das jetzt viel gewesen. Dabei ist das \u00fcberhaupt nicht viel, aber das ist richtig, richtig nice. Ja, also, \u00e4h, Elsa hab ich falsch gelesen."}, {"id": 841, "start": 7199.0, "end": 7217.0, "text": "Aber exzellent, wie gut das funktioniert. Jetzt mal ordentlich in Go. Nee, warum ich es nicht in Go mache, unter anderem liegt daran, weil C und Go Interop nicht so dolle ist."}, {"id": 842, "start": 7217.0, "end": 7229.0, "text": "Gerade mit Callbacks aus C raus, das ist richtig eklig. Und, \u00e4hm, weil ich Web-Anwendungen am einfachsten in ASP.NET mit dem Backend machen kann, weil ich mich damit am besten auskenne."}, {"id": 843, "start": 7229.0, "end": 7247.0, "text": "Ich bau da mal was. Mach, mach du mal. Vielleicht, also, vielleicht haben wir ja Gl\u00fcck. Vielleicht krieg ich ja diesmal wirklich was lauff\u00e4higes raus, was ich, \u00e4hm, auch mal auf Githa pushen kann."}, {"id": 844, "start": 7247.0, "end": 7262.0, "text": "Und vielleicht haben wir dann Gl\u00fcck und die ein oder andere Leute aus dem Chat beteiligen sich daran, dort was ordentliches dran zu bauen. Also, zusammen, so."}, {"id": 845, "start": 7262.0, "end": 7276.0, "text": "Okay, ich gucke mal, wie ich das jetzt, ich bin, ich bin hier nicht, bin ich hier irgendwie auf Github eingeloggt? Ich glaube nicht. Kein Github login. Bin ich hier auf Github eingeloggt?"}, {"id": 846, "start": 7276.0, "end": 7300.0, "text": "Kein Github login. Okay, wie krieg ich denn das jetzt auf Github? Ich bin auch am zweiten Rechner in Github eingeloggt. Github Sealer, ich hab doch keinen Account hier drauf."}, {"id": 847, "start": 7300.0, "end": 7316.0, "text": "Okay, wir machen erstmal einen Commit. Es ist aber halt so eklig, Alter. Eigentlich will ich das gar nicht pushen. Hast du den Key hinterlegt?"}, {"id": 848, "start": 7316.0, "end": 7329.0, "text": "Nee, nee, wahrscheinlich nicht. Ich hab auf dem Streaming-Rechner nix drauf, weil ich nicht aus Versehen irgendwelche Sachen leaken will oder so."}, {"id": 849, "start": 7330.0, "end": 7333.0, "text": "Okay, ich gucke mal, wie ich das auf Github irgendwie kriege."}, {"id": 850, "start": 7333.0, "end": 7348.0, "text": "Hast du einen lokalen Git-Server? Ja, hab ich. Okay, aber ist aber so, ich hab jetzt hier auf jeden Fall nichts geleaktes in irgendeiner Art und Weise drinne. Ich mach mal, ich mach erstmal einen Git-Commit."}, {"id": 851, "start": 7348.0, "end": 7368.0, "text": "Ja, Twinker, ist klar. Erstmal sch\u00f6n alle private Keys raushauen. Git-Init, Git-Status, wir machen mal ein sch\u00f6nes Git-Commit. Achso, Moment."}, {"id": 852, "start": 7368.0, "end": 7385.0, "text": "Gap's da nicht ne coole Seite f\u00fcr Git-Ignore? Da gab's doch so nen Web-Service, wo man Git-Ignore Sachen... Nee, nee, ich mach nicht Minus-A. Ich will mal ein Projektfolder raus und die Binaries raus und sowas."}, {"id": 853, "start": 7385.0, "end": 7400.0, "text": "Git-Ignore.io, was? Git-Ignore.io. \u00c4h, C-Sharp. Nee, Moment."}, {"id": 854, "start": 7400.0, "end": 7426.0, "text": "Was? Was macht das? Ah. Ah ja. Nee, das ist f\u00fcr Rider nicht... Ich mach's mal kurz von Hand. Also, Git-Ignore. Also, \u00e4hm, der da kommt raus. Ups."}, {"id": 855, "start": 7426.0, "end": 7430.0, "text": "\u00c4h."}, {"id": 856, "start": 7430.0, "end": 7456.0, "text": "Wenn man es im richtigen... Git-Ignore, so. Der da kommt raus und, \u00e4hm, und der Bildordner kommt raus. Monarch-S, Bin und Objects k\u00f6nnen wir noch raus machen, ne?"}, {"id": 857, "start": 7456.0, "end": 7472.0, "text": "Bin und Objects raus. So, ich glaub, das reicht."}, {"id": 858, "start": 7472.0, "end": 7486.0, "text": "Ja, ja, ja. \u00c4h."}, {"id": 859, "start": 7486.0, "end": 7502.0, "text": "So, ich hoffe, das ist jetzt richtig, dass ich nicht zu viel einchecke. Also, Git-Add, Git-Status, was hat er jetzt alles einge... Genau, ok, der hat den ganzen M\u00fcll rausgelassen. Alles klar, sehr gut."}, {"id": 860, "start": 7502.0, "end": 7518.0, "text": "Git-Commit, A-M-Init, Git-Git-Log. Ok, ich versuche mal nebenbei, \u00e4h, ich leg mal bei GitHub ein neues Projekt an. Hoffentlich bin ich hier noch eingeloggt. Auf dem anderen Pro... Oh fuck, ich bin hier auch nicht eingeloggt."}, {"id": 861, "start": 7518.0, "end": 7537.0, "text": "\u00c4h. \u00c4hm. Ok. Hab ich GitHub, zwei Faktor-Authentifizierung? Dann log ich mich jetzt hier mal ein. Ich guck mal kurz nebenbei in mein Keypass, was mein GitHub f\u00fcr einen Account hat."}, {"id": 862, "start": 7537.0, "end": 7552.0, "text": "Git-Hoop. Also. Wir haben Wubblons."}, {"id": 863, "start": 7552.0, "end": 7567.0, "text": "At gmx.de. Das ist keine geheime Adresse, die steht sogar im Profil. Ach ne, Moment, \u00e4h, \u00e4h, Sign-In."}, {"id": 864, "start": 7567.0, "end": 7595.0, "text": "\u00c4h, Passwort. Kacke. Chat, ich mach euch mal kurz aus, da muss ich nicht so viel gucken, ob ich jetzt irgendwas leake oder nicht."}, {"id": 865, "start": 7595.0, "end": 7609.0, "text": "Ich glaube, ich hab mittlerweile eh zwei Faktor-Authentifizierung. Ja, two Factor-Authentifizierung. Das hei\u00dft, es ist eh egal, ob ich was leake. Lul."}, {"id": 866, "start": 7610.0, "end": 7622.0, "text": "Verify. Ok. Alles klar."}, {"id": 867, "start": 7622.0, "end": 7637.0, "text": "Mal die Vice-Capture wieder an. Gut, \u00e4h, Create. New repo. So, wie nennen wir's? Monarch-S passt wunderbar. Description."}, {"id": 868, "start": 7637.0, "end": 7652.0, "text": "Check-W-Tests. Nur gepusht, weil mich der Chat sonst geflamed h\u00e4tte. So. Ai, ai, ai."}, {"id": 869, "start": 7652.0, "end": 7669.0, "text": "So, \u00e4hm, Public. Read me. Alles klar. Choose. Create. So, das da. \u00c4h, Moment, hier, da sind wir."}, {"id": 870, "start": 7669.0, "end": 7685.0, "text": "Get add. \u00c4h, Main. Geh mal fort. Zu, Lul. Nein, nein, nein, nein. Das Ding, also, Inclusiveness hin oder her. Das Ding hei\u00dft bei mir weiter Master."}, {"id": 871, "start": 7685.0, "end": 7702.0, "text": "Nicht Main. Nein, nein, nein. Master. Ok, also."}, {"id": 872, "start": 7702.0, "end": 7725.0, "text": "Bobloids. Add gmx.de. Passwort. Wollen mal kurz ins Fullscreen machen wieder."}, {"id": 873, "start": 7725.0, "end": 7751.0, "text": "Fuck. Was? Bei mir verschrieben. H\u00e4?"}, {"id": 874, "start": 7751.0, "end": 7767.0, "text": "Ist das ohne Adresse? Moment, ist, ist Username? Ach nee, ist das, ah, Moment. Ah, es ist ohne E-Mail-Adresse."}, {"id": 875, "start": 7767.0, "end": 7782.0, "text": "Es ist ohne E-Mail-Adresse. Siehst du mal, wie oft ich mich da einlogge? Ich logge mich eigentlich so gut wie nie ein \u00fcber, \u00fcber HTTP-Authentifizierung. Bobloids ist es. Genau. Das ist richtig. Genau."}, {"id": 876, "start": 7782.0, "end": 7804.0, "text": "What the fuck? \u00c4h. Geht das nicht wegen Zwei-Faktor-Authentifizierung?"}, {"id": 877, "start": 7804.0, "end": 7820.0, "text": "Kann das sein, dass es wegen Zwei-Faktor-Authentifizierung nicht geht? Mit, mit Login hier. Muss ich \u00fcber SSH Key machen?"}, {"id": 878, "start": 7820.0, "end": 7834.0, "text": "Ok, Moment. Ich adde mal mein SSH Key von AVM. Dann mach ich euch mal kurz aus, weil ich nicht aus Versehen irgendwelche Sachen leaken will."}, {"id": 879, "start": 7834.0, "end": 7851.0, "text": "\u00c4h, your profile? \u00c4h, SSH, Moment. Wo waren die Edit Profiles? Nee, wo waren nochmal die SSH Keys versteckt? Settings irgendwo, ne? Settings, SSH Keys, genau."}, {"id": 880, "start": 7851.0, "end": 7871.0, "text": "Ich hab den Key sogar schon hinterlegt. Passt. Ich hab den Key schon hinterlegt. Was im Endeffekt hei\u00dft, ich m\u00fcsste das eigentlich pushen k\u00f6nnen, aber ich hab das falsche Remote daf\u00fcr drinne."}, {"id": 881, "start": 7871.0, "end": 7891.0, "text": "\u00c4hm, gut, dann \u00e4ndern wir das Remote nochmal. Rider ONAK-S. Remote. Ok, Git, Remote. \u00c4h, konnte man das irgendwie umbenennen?"}, {"id": 882, "start": 7891.0, "end": 7911.0, "text": "Rename Z-Ul. Genau. Nee, da muss man Remote Z-Ul und da muss man glaub ich den Name machen. Origin und dann die neue Ul. \u00c4hm, die neue Ul ist Git-Doppelpunkter."}, {"id": 883, "start": 7911.0, "end": 7935.0, "text": "Ah, hier guck mal da. So. Ok, push. Yes. Ah, yes. Exzellent. Da sind wir. Leute, also, nur gepusht, weil mich sonst der Chat geflamed h\u00e4tte. Ah, ja, ja."}, {"id": 884, "start": 7935.0, "end": 7955.0, "text": "Da ist es. Exquisite high quality HTML und \u00e4h, state of the art best practice, \u00e4hm, ASP.NET Core Anwendung mit unsafe code und \u00e4hm,"}, {"id": 885, "start": 7955.0, "end": 7967.0, "text": "irgendwelchen komischen Background-Tasks im Startup. Beste. So, so solltet ihr das machen. Ist da Tommy K. eigentlich da? Wie lief's da mit der Bewerbung?"}, {"id": 886, "start": 7968.0, "end": 7978.0, "text": "Ich hab irgendwas im Discord gesehen, aber ich w\u00fcrde mir interessieren, was da rausgekommen ist. So, Chat. Also, wir haben noch einen Bug."}, {"id": 887, "start": 7978.0, "end": 7988.0, "text": "Also, vielleicht ist ja einer Big Brain von euch und kann hier irgendwie das Reordering programmieren. Also, hier an der Stelle,"}, {"id": 888, "start": 7988.0, "end": 8010.0, "text": "man, wie konnte man, konnte man so kommentieren oder konnte man nur mit einem Issue kommentieren? Nee, einfach so kommentieren geht nicht, ne?"}, {"id": 889, "start": 8010.0, "end": 8032.0, "text": "\u00c4hm, Frames sind in falscher Reihenfolge. ETS, PTS. So. Wenn, wir machen's mal auf Deutsch."}, {"id": 890, "start": 8032.0, "end": 8060.0, "text": "Genau. So. Excellent. Da ist es. Okay, \u00e4hm, ja, vielleicht, vielleicht hat ja einer Zeit"}, {"id": 891, "start": 8060.0, "end": 8071.0, "text": "und Mu\u00dfe, sich da Sachen mal zu widmen. Der beste Projektname \u00fcbrigens hier wieder, ne?"}, {"id": 892, "start": 8072.0, "end": 8081.0, "text": "Erstmal, Monarch S. Ich kenn mich, ich werd das nie umbenennen. Also, Chat, vielleicht kriegen wir's echt gebacken."}, {"id": 893, "start": 8081.0, "end": 8091.0, "text": "Also, wenn, wenn von euch ein paar Leute Interesse haben, daran mitzubasteln, das Ziel der ganzen Sache ist, erstens, dass man,"}, {"id": 894, "start": 8092.0, "end": 8097.0, "text": "relativ Latency-free, ich k\u00f6nnte hier, also, wenn wirklich ein paar mitmachen, weil ich kann da ne ReadMe erstellen,"}, {"id": 895, "start": 8098.0, "end": 8105.0, "text": "also, \u00e4hm, das soll Latency-free Video in Browser kriegen und auf lange Sicht will ich damit halt mal ne halbwegs benutzbare"}, {"id": 896, "start": 8105.0, "end": 8113.0, "text": "Video-, also, \u00dcberwachungskamera-Software basteln. Ja, ne, es ist 2114, ich geh jetzt gleich ins Bett."}, {"id": 897, "start": 8114.0, "end": 8123.0, "text": "Also sprich, \u00e4hm, Recorden ins File, das kann meine andere schon, \u00e4h, und eine der wichtigsten Sachen ist kein Re-encoding."}, {"id": 898, "start": 8124.0, "end": 8129.0, "text": "Kein Re-encoding. Schau mal in GRPC rein, ich wei\u00df, was es ist, ich w\u00fcsste jetzt nicht, was es mir hier bringt."}, {"id": 899, "start": 8129.0, "end": 8138.0, "text": "\u00c4hm, kein Re-encoding, also sprich, ich will den Stream von der Kamera nehmen, in den Browser pumpen oder vielleicht in ein File schreiben."}, {"id": 900, "start": 8139.0, "end": 8145.0, "text": "Kein Re-encoding. Re-encoding ist so ein optionales Ding, da w\u00fcrde ich dr\u00fcber nachdenken, wenn wir mal irgendwas haben, was stabil funktioniert."}, {"id": 901, "start": 8146.0, "end": 8149.0, "text": "Weil eines der Features, die ich hier haben will, ist, ich will nichts re-encoden."}, {"id": 902, "start": 8150.0, "end": 8154.0, "text": "Ich will einfach nur den Stream nehmen, von der Kamera und in den Browser packen."}, {"id": 903, "start": 8154.0, "end": 8159.0, "text": "Das hat den Vorteil, man braucht \u00fcberhaupt keine Leistung, ich mein, guckt euch das mal an."}, {"id": 904, "start": 8160.0, "end": 8164.0, "text": "\u00c4hm, ich, ich, ich starte das Kart noch mal, hier, Run."}, {"id": 905, "start": 8169.0, "end": 8171.0, "text": "Ich starte das Kart noch mal."}, {"id": 906, "start": 8173.0, "end": 8175.0, "text": "So, Run, hier, anmachen."}, {"id": 907, "start": 8179.0, "end": 8181.0, "text": "Ups, ah."}, {"id": 908, "start": 8181.0, "end": 8183.0, "text": "Ja, gut, \u00e4hm."}, {"id": 909, "start": 8185.0, "end": 8187.0, "text": "Das bringt jetzt nicht viel, zu gucken."}, {"id": 910, "start": 8187.0, "end": 8190.0, "text": "\u00c4hm, aber, wenn ich jetzt, ah, warte."}, {"id": 911, "start": 8192.0, "end": 8194.0, "text": "Das braucht nix."}, {"id": 912, "start": 8199.0, "end": 8201.0, "text": "Ups, drottnet."}, {"id": 913, "start": 8202.0, "end": 8205.0, "text": "Boah, das ist, das braucht, das braucht nichts an CPU-Leistung."}, {"id": 914, "start": 8206.0, "end": 8207.0, "text": "Um das zu streamen."}, {"id": 915, "start": 8207.0, "end": 8211.0, "text": "W\u00fcrde der re-encoden, w\u00e4re das ein bisschen mehr."}, {"id": 916, "start": 8212.0, "end": 8215.0, "text": "Und das ist grad der Sinn und der Zweck der Sache, der re-encoded nix."}, {"id": 917, "start": 8216.0, "end": 8220.0, "text": "\u00c4hm, was dann richtig pro w\u00e4re, wenn wir irgendwann es schaffen w\u00fcrden."}, {"id": 918, "start": 8221.0, "end": 8225.0, "text": "Das habe ich ja schon \u00fcberlegt und auch schon mal angefangen vor einer Weile so was zu bauen."}, {"id": 919, "start": 8226.0, "end": 8232.0, "text": "\u00c4hm, man k\u00f6nnte, wenn man eben m\u00f6chte, der Vorteil davon, wenn man nicht re-encoded ist,"}, {"id": 920, "start": 8232.0, "end": 8240.0, "text": "du kannst auf dem Raspberry Pi das laufen lassen, auf dem Raspberry Pi mit, keine Ahnung, 30 Videokameras."}, {"id": 921, "start": 8241.0, "end": 8243.0, "text": "\u00dcberhaupt kein Problem, weil es eben nicht re-encoded."}, {"id": 922, "start": 8244.0, "end": 8252.0, "text": "Wenn ihr Software verwendet, die die Sachen decoded, encoded, da ist mit 2, 3 Kameras auf dem Raspberry Pi sp\u00e4testens Schluss."}, {"id": 923, "start": 8253.0, "end": 8257.0, "text": "Selbst wenn man die Raspberry Pi Hardware-encoding, Decoding-Geschichte verwendet."}, {"id": 924, "start": 8257.0, "end": 8263.0, "text": "So, was man noch machen k\u00f6nnte ist, man k\u00f6nnte hergehen und wenn man sagt, okay, man m\u00f6chte ein bisschen Leistung opfern,"}, {"id": 925, "start": 8264.0, "end": 8271.0, "text": "man k\u00f6nnte jeden Keyframe decoden, so alle 2 Sekunden an ein Frame, schadet nix, jeden Keyframe decoden"}, {"id": 926, "start": 8272.0, "end": 8276.0, "text": "und dort drauf dann Object-Erkennung machen oder sowas."}, {"id": 927, "start": 8277.0, "end": 8278.0, "text": "Aber das ist Zukunftsmusik."}, {"id": 928, "start": 8279.0, "end": 8284.0, "text": "Also wer sich dazu berufen f\u00fchlt, ein bisschen mit rumzubasteln, \u00e4h, w\u00e4re nice, jetzt wo ich schon hochgeladen habe,"}, {"id": 929, "start": 8284.0, "end": 8293.0, "text": "denn vielleicht ist das ja f\u00fcr mich die Motivation, diese Software endlich mal ordentlich fertig nutzbar zu bauen,"}, {"id": 930, "start": 8294.0, "end": 8300.0, "text": "\u00fcber den Status hinaus, dass ich sie bei mir einfach, also wisst ihr, ich benutze bei mir lokal auch unfertiges Zeug,"}, {"id": 931, "start": 8301.0, "end": 8302.0, "text": "was genauso viel enth\u00e4lt, wie was ich brauche."}, {"id": 932, "start": 8303.0, "end": 8304.0, "text": "Aber f\u00fcr jemand anderes benutzbar ist es nicht."}, {"id": 933, "start": 8305.0, "end": 8310.0, "text": "Bestes Beispiel ist hier mein Memboard f\u00fcr Bildchen und sowas, das funktioniert f\u00fcr mich wunderbar,"}, {"id": 934, "start": 8310.0, "end": 8313.0, "text": "aber in die Version k\u00f6nnte niemand anderes ordentlich bedienen."}, {"id": 935, "start": 8314.0, "end": 8321.0, "text": "So und vielleicht, vielleicht wenn die ein oder andere mitmachen, habe ich die Motivation, endlich mal was Gescheites draus zu basteln."}, {"id": 936, "start": 8323.0, "end": 8324.0, "text": "Mal gucken."}, {"id": 937, "start": 8325.0, "end": 8335.0, "text": "Also Chat, machen wir Schluss, ich gehe ins Bett, ein nicer Stream heute, richtig viele da gewesen, f\u00fcr Programmer Stream, sehr nice."}, {"id": 938, "start": 8335.0, "end": 8339.0, "text": "\u00c4hm, wir sehen uns."}, {"id": 939, "start": 8341.0, "end": 8347.0, "text": "Gifts, ach ne, wir sehen uns nicht, ich muss Saps giften, ich muss Saps giften, stimmt, Leute, das h\u00e4tte ich ja fast vergessen."}, {"id": 940, "start": 8348.0, "end": 8350.0, "text": "Ich gifte Saps, easy, wie ging das nochmal?"}, {"id": 941, "start": 8351.0, "end": 8353.0, "text": "\u00c4h, Abos verschenken."}, {"id": 942, "start": 8357.0, "end": 8359.0, "text": "So, hier 5 St\u00fcck, bam."}, {"id": 943, "start": 8359.0, "end": 8364.0, "text": "Zwar, ich \u00fcberweise quasi 12 Euro an Amazon, wenn man so will."}, {"id": 944, "start": 8365.0, "end": 8368.0, "text": "So, mal Chat, mal Chat, mal gucken wer Gl\u00fcck hat."}, {"id": 945, "start": 8369.0, "end": 8380.0, "text": "Aber ich bin der Meinung, Moment, fuck, aber ich bin der Meinung, das h\u00e4tte sogar noch ein paar Prime Saps verdient heute."}, {"id": 946, "start": 8380.0, "end": 8392.0, "text": "Any Primers, das hat so gut funktioniert und es ist echt ein Thema, wo es so gut wie nichts an Beispielprojekten gibt."}, {"id": 947, "start": 8393.0, "end": 8395.0, "text": "Und das ist auch ein BigBrain Thema."}, {"id": 948, "start": 8396.0, "end": 8401.0, "text": "Da k\u00f6nnte man schon mal den einen oder anderen Prime Sub noch dalassen, wenn man noch einen Prime Sub \u00fcbrig hat."}, {"id": 949, "start": 8402.0, "end": 8406.0, "text": "Nur mal so zur Information f\u00fcr alle, die es noch nicht mitgekriegt haben, wenn ihr einen Amazon Prime Account habt,"}, {"id": 950, "start": 8406.0, "end": 8414.0, "text": "k\u00f6nnt ihr das mit eurem Twitch-Account verkn\u00fcpfen und dann k\u00f6nnt ihr einen Streamer einer Wahl einmal im Monat kostenlos mit einem Prime Sub unterst\u00fctzen."}, {"id": 951, "start": 8417.0, "end": 8419.0, "text": "So, wer hat denn was gekriegt?"}, {"id": 952, "start": 8420.0, "end": 8428.0, "text": "Captain Falcon, Ponky, MB-Dealer, Robot Town und Business Raster, exquisite."}, {"id": 953, "start": 8428.0, "end": 8435.0, "text": "Wer hat schon Amazon Prime? Wahrscheinlich 90% der Leute, die zugucken am Amazon Prime."}, {"id": 954, "start": 8438.0, "end": 8440.0, "text": "Sehr sch\u00f6n, sehr sch\u00f6n."}, {"id": 955, "start": 8440.0, "end": 8452.0, "text": "\u00c4h, Moment, was wollte ich jetzt nachgucken? Irgendetwas wollte ich gerade nachgucken. Achso."}, {"id": 956, "start": 8452.0, "end": 8471.0, "text": "Achso. Hier. Hier ist es. Monarch S. Exzellent. Gut, wunderbar."}, {"id": 957, "start": 8471.0, "end": 8482.0, "text": "Ah, nee, das ist, ich hab mich schon gefreut, das ist das Projekt-File. Ja klar, das braucht man."}, {"id": 958, "start": 8483.0, "end": 8490.0, "text": "Man muss sich mal \u00fcberlegen, das ist echt nicht \u00fcbel. Wir haben hier insgesamt, das ist alles M\u00fcll, das braucht man nicht."}, {"id": 959, "start": 8490.0, "end": 8506.0, "text": "Guck mal, wir haben 60 Zeilen HTML, 150 Zeilen C-Sharp. Das ist alles. Ach, nee. Und, okay, f\u00fcr 200 Zeilen C-Sharp, 60 Zeilen HTML."}, {"id": 960, "start": 8507.0, "end": 8513.0, "text": "Also das ist wirklich top, da kann man echt nichts sagen. Also die Library scheint ihre Sache gut zu machen."}, {"id": 961, "start": 8513.0, "end": 8519.0, "text": "Chat, wir sehen uns, n\u00e4chster Stream, machts gut, bis dann, wir sehen uns, CU."}]}
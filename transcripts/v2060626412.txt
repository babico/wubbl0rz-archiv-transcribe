Hallo.
Und Leute,
was geht?
13.17 Uhr, vielleicht nicht die günstigste
Uhrzeit zum Stream, sondern
aber was willst du machen?
Oh, stimmt, es ist Fasching. Morgen KS.
Ich muss morgen nach Frankfurt.
Das wird was.
Wobei, morgen ist es nicht mehr ganz so schlimm.
Ich glaube, also, ja, es ist ja
Montag heute. Ich glaube, Montag
ist es am schlimmsten, oder?
Fasching ist immer so ätzend.
Ich meine, soll jeder machen, wenn er Bock drauf hat, ja?
Ich will ja da keinem
vorschreiben, was ihm
zu gefallen hat.
Ich kann bloß sagen,
für mich ist es nix.
Ich mach da immer einen großen Bogen drum.
Ich weiß,
in Hanau ist irgendwie morgen, glaube ich,
und so, wenn ich vom Bahnhof komme,
ich werde den Weg gehen, dass ich möglichst
wenig Faschings
Besuchern da über den Weg laufe.
Zum Glück
war das
vor ein paar Wochen schon.
Ich musste, also,
letztendlich bin ich nicht mitgefahren, aber es war geplant,
dass ich von der Arbeit
aus nach
Düsseldorf
muss.
Und, also, wir haben es dann aber anders
geregelt, weil ich wüsste ja, dass ich prinzipiell
keinen Bock habe auf irgendwie so komisches
Rumgefahre da.
Und nach Düsseldorf
ist halt kacke, da musst du durch Köln durch.
Und ich glaube, wenn du das jetzt machst, diese zwei Tage,
hast du halt komplett,
hast du halt komplett gelitten.
Und das Emote ist auch extrem
underused. Das war früher
laufend, wurde das gespammt,
aber mittlerweile ist das nicht.
Aber ich glaube, wenn du in diesen paar Tagen diese Strecke
fahren willst, Köln, Düsseldorf,
hast du
echt gelitten.
So in der Zeit, wo Fasching ist.
Haben wir noch irgendwas, irgendwas anderes?
Ja, was haben wir denn? Mario Kart.
Ah.
Das ist immer schön
im Hintergrund. Wow, ein bisschen laut.
Pepe, please.
Hast du schon ein neues Fahrrad? Nein, hab ich nicht.
Gibt ja keins in meiner Größe.
Guck schon immer bei Rose,
aber es sind ja zwei Sachen, die mich aktuell
davon abhalten.
Einmal,
dass es in meiner Größe nichts gibt.
Und das zweite, weil ich eine elektronische
1x12 Schaltung haben will.
Und die gibt's grad auch nicht.
Und das in Kombination
hat mich
dazu geführt, mir noch
kein Fahrrad zu kaufen.
Aber ich werde schon
auch irgendwas finden in nächster Zeit.
Ich würde mir gerne wieder
eine Rose Backroad
kaufen,
weil
fand das eigentlich von
der Geometrie her sehr passend
für mich. Nein, ich bin
nicht in Köln.
Gott sei Dank
bin ich nicht in Köln.
Philo hat
subscribet gestern, hab ich gar nicht gesehen.
Dankeschön.
Die anderen habe ich gesehen, aber den habe ich irgendwie übersehen.
Kannst du schon wieder auf deinem Trainer fahren?
Klar, ich fahre die ganze Zeit schon auf meinem Trainer.
Ich fahre die ganze Zeit schon.
Wobei, die ganze Zeit ist gut.
Ich glaube, ich war da fast eine Woche nicht mehr drauf jetzt.
Aber ja, ja, das ging schon.
Also ich hab mir ja nicht viel getan bei dem Unfall,
glücklicherweise. Das war ja schon zwei, drei Tage.
So, sagen wir mal, drei, vier Tage.
War eigentlich schon wieder gut.
Ja.
Also für mein Fahrrad nicht, aber ich hab mir ja nicht viel getan.
Also für mein Fahrrad nicht.
Aber für mich.
Mein Fahrrad selbst funktioniert ja auch,
aber halt nicht mehr straßentauglich.
Auf dem Trainer geht's aber.
Das Einzige, was ich an dem Fahrrad gemacht habe,
ist nach dem Unfall,
ich hab mir bei Rose ein Schaltauge bestellt.
Ich wusste bis zu dem Zeitpunkt gar nicht,
dass es sowas gibt.
Das ist hinten
so ein Zwischenstück
zwischen Rahmen und dem eigentlichen Schaltwerk,
was als Sollbruchstelle
und Biegestelle gedacht ist.
Und es hat es tatsächlich auch gemacht.
Das war verbogen.
Die Schaltung selber war glücklicherweise gar nicht so sehr verbogen.
Ich hab das Schaltauge getauscht
für irgendwie 12 Euro oder sowas Neues bestellt.
Gleich zwei, man weiß ja nie.
War glaube ich zwei für zwölf.
Hab ich getauscht.
Ja, ja. Das war verbogen.
Aber es war glücklicherweise
nicht so viel an der Schaltung selbst,
sondern nur die Halterung am Rahmen.
Die hab ich ausgetauscht. Die gibt's billig zu kaufen bei Rose.
Und jetzt kann ich zumindest wieder halbwegs schalten.
Und dann hab ich das einmal ordentlich kalibriert.
Jetzt überspringt das nicht drei Gänge.
Und sowas.
SebiDev, danke schön für den Sub.
Ja, das ist ein bisschen kacke.
Übrigens, die Versicherung hat immer noch nicht bezahlt.
By the way.
Mein Unfall war im, wann ist es? November oder so?
Das war der letzte Tag im Jahr,
wo man schönes Wetter hatte und Fahrrad fahren konnte.
Da hat sie mich über den Haufen gefahren.
Und ich glaub,
ich glaub, ich hab's euch erzählt.
Ich bin mir selbst gar nicht mehr genau sicher,
wann das war. Irgendwann Mitte November, Anfang November.
Anfang November wahrscheinlich.
Wie gesagt, das war der letzte schöne Tag im Jahr.
Hab ich damals schon gedacht,
dass das bestimmt der letzte, und war's dann auch.
Deswegen ist das nicht ganz so schlimm.
Ich hätte eh nicht so viel fahren können.
Zumindest, die Versicherung hat bis heute nicht bezahlt.
Ich hab glücklicherweise direkt einen Anwalt beauftragt damit.
Und der schreibt den regelmäßig
und die Versicherung kriegt's einfach nicht gebacken.
Aber das Gute ist,
weshalb die irgendwie selbst ziemlich dumm sind,
dass die so lange warten damit.
Es gibt, glaub ich, 15 Euro oder 8 Euro.
Ich weiß nicht.
Ich hab doch irgendwo, wartet mal,
Gutachten. Moment, Moment, ich les euch mal.
Moment, Moment, passt mal auf, Gutachten.
Äh, GMX.
Nein, nicht GMX, Google Mail.
Lass mal kurz gucken.
Gutachten, Gutachten.
In der Zwischenzeit mach ich mal kurz Package Update, ne?
Boah, die Musik ist mir zu anstrengend.
Wonka S.
Ah, viel besser.
Ähm, Gutachten.
Gutachten, Gutachten.
Ihr Gutachter.
Äh, Gutachten zum Fahrzeug.
Wisst ihr, Leute, in Deutschland sind wir schon teilweise echt,
ähm, sehr
autozentriert, gell?
Wisst ihr, wisst ihr, wie die,
wisst ihr, wie die E-Mail vom Gutachter mit dem Gutachten anfängt?
Gutachten zum Fahrzeug mit dem Kennzeichen Fahrrad.
Das heißt, er hat nur Vorlagen für Autos.
Und nachdem es halt kein Auto ist,
steht dann Kennzeichen Fahrrad jetzt.
Wir sind schon ziemlich autozentriert hier, oder?
Okay, Moment.
Ähm, so.
Gut, warte mal, was wollte ich euch jetzt eigentlich sagen aus dem Gutachten?
Ich hab's schon wieder voll verdrängt.
Ach so, wann das war.
Kann man ja nachgucken, wann das, wann das war.
Okay, das Gutachten ist von Mitte November.
Also muss das, das hat ja bestimmt eine Woche gedauert oder zwei.
Also muss das Anfang November gewesen sein.
Ach nee, jetzt weiß ich, was ich euch erzählen wollte, genau.
Und zwar, in dem Gutachten steht auch drinnen,
dass er empfiehlt eine,
eine Ausfall, oder wie hoch er die, die, die, die Ausfallschäden schätzt oder sowas.
Und ich finde es jetzt nicht.
Honorar?
War da was geschrieben?
Ach hier.
Gutachten.
Gutachten.
Gutachten.
Gutachten.
Gutachten.
Gutachten.
Gutachten.
Ich finde es, wo, wo steht das denn jetzt?
Das ist auch geil.
Mein Fahrrad.
Das ist wirklich, das ist wirklich komplett ausgelegt für Autos.
Da, da steht drinnen.
Antriebsart, Heckantrieb.
Das ist wirklich alles für Autos gemacht, diese Formulare hier.
Meine Güte.
Ist diese süße kleine Katze unten rechts
deine süße kleine Katze?
Die ist gar nicht so klein und die ist ziemlich alt.
Und jetzt Sadketime.
Und jetzt, that good time, die lebt nicht mehr.
Aber das ist meine gewesen, ja.
Ja, ja, mach dir keine Gnade, du kannst das ja nicht wissen.
Ich finde es, ich suche die ganze Zeit hier in dem Gutachten, was da reingeschrieben hat, weil das interessiert mich sehr.
Also worauf ich eigentlich raus wollte ist, dass das die extra kostet, weil das so lange ausfällt.
Das heißt, sie sind selbst dran schuld.
Und hier, jetzt, jetzt, jetzt habe ich es, jetzt habe ich es hier.
Nutzungsausfallentschädigung pro Kalendertag, 15 Euro.
Das ist halt mega, wenn du dir überlegst.
Ich bin mir nicht sicher, ob er das alles geltend gemacht hat, ehrlich gesagt.
Aber 15 Euro pro Tag heißt im Endeffekt.
Die hat mich Anfang November umgefahren.
November, Dezember, Januar und bestimmt noch Februar.
Das sind dann quasi, sagen wir mal, 4 mal 30 mal 15 sind nochmal 1800 Euro Aufwandsnutzungspau-Dingsbums, wie auch immer es jetzt hieß.
Das heißt, umso länger die warten, umso mehr Kohle kriege ich.
Was eigentlich auch ganz nice ist.
Da müsste ich, da kommt...
Da kommt in die Gruppe passives Einkommen, Leute.
Passives Einkommen.
Aber ihr müsst euch einmal kurz vom Auto anfahren lassen, aber dann passives Einkommen.
Das Ding ist halt, wisst ihr, wisst ihr, dass das viele Leute auch noch machen würden?
Lass dich einmal vom Auto anfahren und dann passives Einkommen.
Es ist ja Schwachsinn, ne?
Es gibt es jetzt, bis die bezahlen, dann ist das auch nicht passiv.
Aber.
Es ist schon, es ist schon ziemlich kacke, wenn du dir überlegst, dass die sich einfach 4 Monate Zeit lassen können mit dem Bezahlen.
Ich hab da drüber gestern gesprochen, ich werde mir wahrscheinlich erstmal, also so in unmittelbarer Nähe, jetzt hier, also so in sehr naher Zukunft, keine neue Katze holen.
Äh, meine ab und zu Dosis Katze streicheln, mach ich gerade so.
Wir haben hier so ne...
Kein Tierheim, das weiß ich, wie ist das irgendwie?
Äh, Kleintierhilfeverein, ne, oder irgendwas, sowas.
Äh, so ein Tierschutz, Tierschutz, ähm, ne, wie heißt das?
Ich hab's keine Ahnung, wie die, wie die genau heißen.
Es gibt so einen Verein hier in der Nähe, die vermitteln auch Katzen und die haben aber auch nicht nur Katzen, die haben auch, äh, ja alles mögliche, so bei Wohnungsräumung, wenn da irgendwelche Hamster gefunden werden, so alle mögliches Zeug.
Und die geben sich sehr, sehr viel Mühe.
Ich bin da mal vorbeigefahren, hab mir das angeguckt und die waren alle so nett.
Die haben sich so viel Mühe gegeben, dass ich denen jetzt zweimal Geld gespendet hab und, äh, jedes Mal, wenn ich hingefahren...
Ich bin dann, ich bin dann zweimal hingefahren, mir die Quittung abholen für die Spende und da hab ich mich immer ne halbe Stunde zu den Katzen gesetzt, die vermittelt werden sollen.
Die haben da so sechs Räume, so Abteilungen für unterschiedliche Katzen, so.
Und manche sitzen da zu zweit drin, manche waren sogar zu dritt drin, aber die waren wohl vorher schon immer zusammen.
Und da hab ich mich dann jetzt...
Und da hab ich mich dann jetzt jeweils mal ne halbe Stunde dabei gesetzt, bisschen, bisschen Action gemacht, mit den Katzen bisschen gestreichelt.
Da hab ich so, da kann ich so einmal im Monat ne halbe Stunde, ich mein, könnte öfters hin, aber das ist ja auch, ist ja nicht direkt um die Ecke.
Da geh ich dann einmal im Monat hin und streichel mal so ne halbe Stunde Katze.
Das ist dann erstmal ganz gute Überbrückung, bis ich mir überlegt hab, ob ich mir ne neue holen will oder nicht.
Steuererleichterung durch Spende.
Ich glaube nicht, dass ich durch weniger Steuern bezahlen...
Tatsächlich insgesamt, also durch das, durch die Steuererleichterung, die es eventuell dadurch gibt, mehr Geld spare, als dass ich da gespendet hab.
Und wenn, soll mir das auch recht sein, aber das ist nicht so, geb ich ganz stark von außen, wenn, soll mir das recht sein, kann mein Steuerberater alles machen.
Irgendwofür muss ich das ja auch lohnen.
Alter, was geht mit der Musik ab, das hört sich ja fast schon nach Fasching an, Alter.
Das muss ja heute echt nicht sein.
Ja, Tierschutzverein, genau, das mein ich.
Ja.
Hm.
Und...
Und da kommt die Kohle auf jeden Fall bei den richtigen Leuten an.
Es läuft immer, ihr wisst ja, ich hab's, ich hab's ja mit anderen Menschen nicht so, ich spende lieber fürs Tierheim oder für den Tierschutz oder sowas, anstatt für, keine Ahnung, irgendwelche sozialen Bauprojekte oder...
Was gibt's denn da sonst noch?
Äh, irgendwie Kinderdörfer und...
Und alles mögliche, da spende ich, ich spende lieber fürs Tierheim.
Es kommt im Radio, kommt immer so eine Werbung, äh, nee, das ist nicht Kinderdorf, das ist irgendwie so eine, so eine Werbung, da schreien die immer rum, so, oh, Kinder haben auch Rechte und das Rumschreien von den Kindern im Radio geht mir schon immer so auf den Sack, dass ich mir denke, äh, da spende ich bestimmt nicht hin.
Ich spende lieber fürs Tierheim.
Kinder sind eh nervig.
So ein Gentle Frog, danke für den Sub.
Ich denke, jeder kann mit seiner...
Mit seiner Kohle machen, was er will.
Und da weiß ich, dass er auf jeden Fall bei den Richtigen ankommt.
Bei irgendwie so größeren Organisationen, also ich würde gar nicht mal unbedingt ausschließen, auch für irgendwelche sozialen Zwecke was zu spenden, aber gerade, also man ist ja, Tierschutz ist ja auch ein sozialer Zweck, nee, aber so für Menschen würde ich mal gar nicht ausschließen, aber ich hab immer bei so großen Organisationen, da will ich irgendwie nicht, da denke ich mir so, okay, denen gibst du Geld, das wird sicherlich zum größten...
Das ist ja auch kontrolliert, schon zum größten.
... für soziale Sachen verwenden, aber du weißt nicht, wo es genau landet und letztendlich interessiert dich die meisten Projekte dann eh nicht.
Deswegen, dann spende ich es lieber lokal hier an Tierschutz, ans Tierheim, da kommt es auf jeden Fall bei den richtigen Leuten an.
Was geht, Leute?
Ja, wir bauen heute unser Notification-Command-Line-Tool für den...
Das ist jetzt bescheuert, aber...
... für den Notification-Service weiter...
Nee, das ist bescheuert, also ich muss das, ich muss das nochmal erklären, also folgendermaßen.
Wir haben auf der Arbeit einen...
Ich mach das einfach mal auf.
Auf der Arbeit bei mir haben sie sich einen mir bis dahin komplett unbekannten Anbieter rausgesucht.
Für Push-Notifications.
Der Sack Signal 4.
Und glücklicherweise stehen wir hier nicht drin, sonst hätte ich meinen Arbeitgeber geleakt, beziehungsweise mich geleakt irgendwie.
So, die haben sich einen Nachricht...
Die haben sich so einen Push-Nachrichtendienst rausgesucht, den hier.
Und darüber werden beispielsweise Monitoring-Alarmmeldungen geschickt, wenn es Critical Warnings für Systeme gibt.
Das Schöne ist, die haben eine relativ gute, die haben eine relativ gute API, sogar eine Open-API-Spezifikation.
Hier kannst du ein Swagger-JSON runterladen.
So, hier hast du eine API-Dokumentation.
Und das Ding ist, die haben verschiedene...
Also ich kann, ich kenne diesen Anbieter nicht.
Muss ich sagen.
Ich kannte den nicht.
Bis zu dem Zeitpunkt, wo den, ja, wo mein Arbeitgeber sich da Push-Notifications vorgekauft hat.
Ich kannte den nicht.
Man kennt ja so die üblichen Verdächtigen.
Was hast du da sonst so?
So Push-Over, Twillo und wie heißt der andere?
Da hast du hier Fonjira, hast du irgendwie Ops-Genie.
Wie heißt dieser, der ganz große, bekannte...
Push...
Pager, Pager-Duty.
Pager-Duty, meine ich noch.
Ja, genau.
Die gibt es auch noch.
Und die kenne ich, aber den hier kenne ich nicht.
Aber ich muss sagen, bis jetzt macht der einen ganz brauchbaren Eindruck.
Das Einzige ist, die Webseite ist ziemlich, ziemlich cringe.
Die Webseite basiert auf jQuery 3.6.
Also die sind nicht so, nicht so wirklich ganz up-to-date.
Letztendlich ist aber für mich als Anwender ist das ja egal, in was die Webseite programmiert ist, solange es funktioniert.
So, zumindest, ich mache mal hier meine IDE auf.
Zumindest gibt es ein Problem bei der ganzen Sache und zwar die Use-Case-Pricing.
Mein Arbeitgeber war der Meinung, jQuery 4 ist komplett neu, ja.
So, mein Arbeitgeber war der Meinung, es ist eine gute...
Übrigens, es ist ultra teuer aus meiner Sicht für den Push-Notification-Service.
Wo es nicht mal um SMS und sowas geht, sondern im Prinzip um Web-Push-Notifications.
Und eine Mobile, egal, wie auch immer, mein Arbeitgeber ist der Meinung, es ist eine gute Idee, das zu kaufen.
So einen schlechten Eindruck machen die hier ja auch gar nicht.
Allerdings waren sie dann doch ein bisschen zu geizig und haben nur, das vermute ich zumindest,
vielleicht haben die mit denen auch eine Spezialabmachung, das weiß ich nicht.
Sie waren aber dann doch ein bisschen zu faul, beziehungsweise zu geizig und haben nur dieses Package gekauft.
Das Problem bei diesem Package ist, dass du keine, das steht hier nicht drin, glaube ich.
Was?
Ziemlich doofes.
Ja, doch, hier steht's.
Hier ist kein, kein Scheduling drin.
Also du kannst nicht hinterlegen, wer wann Rufbereitschaft hat und notificated werden soll.
Das kannst du nur bei dem größeren Pack.
Als ich zum ersten Mal, als sie den Dienst vorgestellt haben, habe ich zum ersten Mal das Icon gesehen für Schichtplan hinterlegen.
Da dachte ich mir, nice, dann uploaden wir da in irgendeinem JSON-Format unseren Schichtplan und alles ist gut.
Aber nein, es ist nicht.
Weil wir müssen irgendwie...
Fünf Euro pro User sparen, sechs Euro pro User im Monat sparen und haben dieses Feature, Duty und Shift Scheduling, natürlich nicht gekauft.
Logischerweise, obviously.
Man gibt Kohle aus, aber das, das nicht.
Was macht der Pusher am Ende?
Der schickt dir eine Nachricht, da steht dann zum Beispiel sowas drin wie...
Critical Alert auf System XY oder in Service XY und dann guckst du in die Nachricht rein, da siehst du dann auch auf Server A ist die Festplatte.
Critical weil Füllstand über 90 Prozent oder Free unter 10 Prozent.
Sowas steht da.
Ganz normale Monitoring & Alerting, wobei nicht nur das dafür benutzt wird, aber unter anderem so.
Das muss ja irgendwie halt an die Leute die Nachtschicht haben, da geht es hauptsächlich darum, tagsüber ist abends es ist nicht so wenig wenn Nachtschicht haben,
muss sie die Nachricht irgendwie...
Also halbwegs Reliable Notification erfolgen.
Und das machen die aktuell hier über die App.
Zumindest kannst du nicht automatisch...
hinterlegen wer schicht hat also das wichtigste feature für so einen service haben sie natürlich
nicht mit eingekauft und deswegen habe ich mir jetzt überlegt wir sind einfach mal extrem pfeif
hat und nachdem ihr auch keiner sagen kann sagen können soll wie ich das zu machen habe habe ich
gedacht ich mache das in meiner freizeit wir programmieren einen ein cli tool für den ihre
api was das können soll ist folgendes ich kann es ja mal kurz zeigen ich kann einfach mal kurz
pullen und euch live zeigen wie kann ich nicht weil ich kein api mehr habe ich habe letztens
den api gelöscht okay leute ich muss mich erst mal ihr müsst ihr müsst weg gucken jetzt gleich
ich muss mich einloggen und ein api generieren den dürfte nicht wissen für mein test account
ich glaube mich natürlich nicht mit der arbeit ein also er wird darauf darauf spekuliert ich
liege hier irgendwas
liegt falsch habe ich eigentlich package updates gemacht repos ich zeige euch ich zeige euch mal
was das macht ja habe ich das genannt signal wo ist es denn okay wie dem auch sei ich finde ich
finde mein eigenes repo nicht mehr und warum ist warum ist gitter heute ist brauchen da war
wieder einer der
der microsoft css experten am start okay
jetzt funktioniert wird clown mach da was es ist und was das macht es kommt am ende 1 c l
ay toulros was folgende optionen bietet über die arch Soldat
die app von rumhan gewagt heute habe ich Panik
programmiert
müssen wir gleich parrotsten Salben
wir gewneten ersten wagen fixen
was ist mit meiner idee
ja da ist eine gute Möglichkeit
ich kann noch einen nhấtf fit meticce
Meine IDE ab, Mann.
Okay, der CSS-Experte hat es gefixt.
Was ist denn das Problem hier eigentlich?
Config, combine.
Ah, ich bin ja auch dumm.
Ich lese eine Config ein, die es gar nicht gibt.
Ja.
Moment, die ist optional.
Warum will der die überhaupt?
Wenn man auch das Falsche da reinschreibt, dann ist kein Wunder, dass es nicht funktioniert.
Die ist optional, die Config.
Omega-Keg.
So, und das CLI-Tool kann folgen, das ich hoffe jetzt läuft.
Genau.
Das kann sich die Info anzeigen lassen für den aktuellen User.
Das kann dich einstechen, wenn deine Schicht startet.
Und das kann dich, ja, ausstechen, wenn deine Schicht endet.
Als Zusatzoption hast du noch, wenn du zum Beispiel das hier machst.
Ups.
Ja, als Zusatzoption hast du noch, du kannst theoretisch einen User angeben, wenn du willst.
Und du kannst angeben, bis wann das dich automatisch auslöst.
Ausstechen soll.
Du benutzt für CLI-Tools Spectre-Konsole.
Das ist nice.
Guck mal, was ich benutze für CLI.
Kommt dir das bekannt vor?
Was könnte das sein, was ich benutze?
Ja, das ist schon das Gleiche.
So, also.
Der Sinn davon ist, warum ich das, also ich mache das hauptsächlich erstmal für mich selbst.
Weil was ich machen können möchte ist, wenn ich mich morgens beispielsweise, wenn ich morgens anfange und ich weiß,
ich habe jetzt...
Irgendwie heute Rufbereitschaft, tagsüber zum Beispiel, ja, ich fange morgens an.
Ich weiß, ich habe irgendwie Rufbereitschaft bis, keine Ahnung, 17.30 Uhr oder so, je nachdem, was da drinnen steht.
Dann sage ich hier, punch in, minus, minus, bis, brauchen wir nicht mal, 17.30 Uhr.
Und das geht jetzt nicht, weil ich kein APK gesetzt habe.
Ich sage es euch nur gleich, ja, also nicht wundern.
Das ist jetzt abkackt.
Und dann sticht mich das ein.
Bleibt im Hintergrund User Max not found.
Ja, ach.
Und dann sticht mich das ein.
Und um 17.30 Uhr wieder aus.
Das funktioniert auch.
Das habe ich schon ausprobiert.
Alternativ kann man das weglassen.
Dann aktiviert es einen im Notification System oder man kann sich so wieder ausstechen.
Oder man gibt Info ein, was auch nicht funktioniert, weil ich kein APK hinterlegt habe.
Und dann kriegst du angezeigt, was gerade Sache ist.
Und jetzt will ich noch was anderes einbauen.
Also als erstes muss ich mal ein APK generieren.
Jetzt will ich noch was anderes einbauen.
Und zwar, dass man auch Notifications angezeigt kriegt.
Also aktuell ist es so, der wartet einfach an der Stelle, wenn ich, wenn ich das hier so ausführe, ja, punch in bis 17.30 Uhr.
Dann wartet der im Hintergrund bis 17.30 Uhr.
Dann lockt er dich aus.
Es wäre doch aber viel sinnvoller, gleich noch Desktop Notifications anzuzeigen, wenn es denn eine Notification gibt.
Und das ist glücklicherweise unter Linux relativ easy.
Du sagst einfach notify send keckel und ihr seht, du kriegst eine Notification geschickt.
Ja, unter Windows geht das bestimmt ähnlich.
Und wenn man schon Notifications kriegt, dann kann das Programm, während es wartet auf das Schichtende, auch gleich noch unter Linux Notifications anzeigen.
Wenn welche reinkommen.
Falls man gerade das Handy nicht neben sich liegen hat oder so.
Außerdem ist es praktisch, da kann man am Ende irgendwie so eine Summary machen.
So in deiner Schicht gab es fünf Notifications oder sowas.
Und eine davon wurde noch nicht acknowledged oder irgendwas.
Kann man sich dann, kann man sich überlegen.
Zumindest, die haben eine ganz gute API.
Was mich echt erstaunt hat, weil so unbekannte Anbieter haben ja oftmals einen, wie soll man sagen, einen so einschlagkräftiges Argument von ihrer Sales Abteilung.
Warum deutsche Unternehmen das kaufen sollen.
Und zwar, weil sie DSGVO konform sind.
Weiß ich nicht, wie das bei denen ist.
Ich gehe davon aus, sie sind auch DSGVO konform.
Und das ist oftmals für deutsche Unternehmen irgendwie so ein großer Pluspunkt.
Deswegen neigen die dazu, so kleine, nicht relativ unbekannte Anbieter zu nehmen.
Und ich habe da bisher auch keine gute Erfahrung mitgemacht.
Weil oftmals diese kleinen Anbieter, vielleicht DSGVO konform sind, aber eklig zu benutzen.
Ich habe euch ja schon mal die Story erzählt vom Spam-Filter-Anbieter, der keine API hat, um E-Mails freizugeben.
Und die dann immer zu mir gesagt haben.
Diese Anfrage ist ganz toll.
Wir haben dazu bereits einen internen Feature-Request.
Das war ihre Standardantwort auf, warum habt ihr keine gescheite APIs, worüber ich E-Mails, Spam-E-Mails freigeben kann.
Deswegen habe ich keine guten Erfahrungen mitgemacht.
Aber die hier, der Sack, die haben mich positiv überrascht.
Denn die haben eine rechtsumfangreiche und auch ganz gut bedienbare API tatsächlich.
Also zum Beispiel, wenn man sich hier Alerts anzeigen lassen will, kann man beispielsweise, hier habe ich vorhin schon mal nachgeguckt.
Gehst du einfach hier auf diesen Endpunkt, gibst die User-ID ein, wie viele Alerts du abfragen willst.
Und da kriegst du dann eine Zusammenfassung an Alerts.
Also eigentlich ganz nice gemacht.
Viel weniger umständlich gedacht haben.
Und ja, man kann sogar, weil ihr gerade sagt, Swagger.
Man kann sogar sich die komplette Swagger-JSON runterladen.
Und das irgendwie automatisch generieren lassen.
Habe ich nicht gemacht.
Ich habe meinen ganzen Krempel von Hand, wo sieht man es hier, ist ja nicht viel drin.
Warum ist eigentlich meine Schriftgröße so ultra groß hier?
Ich mache die gerade mal ein bisschen kleiner, okay.
Ich will es ja nicht übertreiben.
Also meine ganzen Datentypen, die sind ja nicht so, es gibt ja nicht so viele hier.
Das da, im Prinzip sind es nur diese vier Sachen hier.
Die habe ich schnell von Hand zusammengewurschtelt.
Da brauche ich keine Swagger-Generation für, wenn ich 99% der AP gar nicht benutze.
So, und ich zeige euch jetzt mal, wie dieses Tool in Action aussieht.
Dazu muss ich mich aber einmal einloggen.
Und da müsst ihr weggucken.
Ach nee, ha, guck mal da.
Nice, ich habe mein Passwort gespeichert.
Ich muss das jetzt gar nicht copy-pasten.
Das ist schon mal äußerst nice.
Und bevor jetzt einer mit E-Mail-Adresse Leak ankommt.
Ja, aber Fake E-Mail.
Ja, aber Fake E-Mail.
Ja, aber Fake E-Mail.
Juckt mich nicht.
Okay.
So, so sieht das Ganze aus.
Es gibt genau einen User.
Das ist Peter Aguilé.
Und es gab genau ein Signal in letzter Zeit.
Die sich Critical in Keck W nannten.
Und wir haben auch genau ein Team.
Das ist das Keckle Team.
Das reicht zum Testen voll und ganz aus.
Das reicht zum Testen voll und ganz aus.
Und jetzt muss man hier irgendwie unter Integrations,
Und jetzt muss man hier irgendwie unter Integrations,
Api-Keys.
Aha, es gibt einen Lul-Api-Key.
Und jetzt müsst ihr kurz weggucken, Leute.
Weil jetzt muss ich, jetzt muss ich erstmal kurz mein Clipboard ausschalten.
Und jetzt müsst ihr kurz weggucken.
Weil ich muss mir einen neuen Api-Key generaten.
Weil ich muss mir einen neuen Api-Key generaten.
Und den dürft ihr nicht mitbekommen.
Expired in einem Monat, ja meinetwegen.
So, create.
Jawoll.
Okay, export.
Ich hoffe, ich setz das jetzt richtig.
Oh shit.
In meiner History steht das jetzt immer noch drin.
Was mach ich denn jetzt?
Warum steht das noch in meiner History drin?
Warum steht das noch in meiner History drin?
Was ist das für ein Mist?
Chatge, Moment, Moment, Moment.
Das müssen wir nochmal machen.
Ich bin, delete den Api-Key.
Ich schalt euch wieder ein.
Ich bin verwirrt.
Warum?
Was hab ich denn da eingestellt?
Normalerweise, ja?
Normalerweise sollte man,
das war übrigens der Api-Key.
Das ist egal, den hab ich grad wieder gelöscht.
Normalerweise
sollte doch,
wenn ich ein Leerzeichen mach,
in der Shell das nicht in der History auftauchen.
Macht es aber.
Die Frage ist, warum?
Das muss halt mal in der ZSH-Config liegen.
ZSH,
Space, Command,
not in History.
Das müssen wir jetzt.
How to prevent the command from being saved.
Okay, ja.
Use ignore space option.
Excellent.
Stackoverflow weiß wieder Bescheid.
Ist ignore space.
Remove command lines from the history
when the first character
on the line is a space
or when one of the expanded aliases
is a leading space.
Note that the command in the internal history
until the next command is
entered before.
Ah, ja, ja, okay.
Okay, das muss ich mal ausprobieren.
Lasst uns das
grad mal testen.
Set.
Wo mach ich denn das jetzt am besten hin?
Da. Da hab ich's doch.
Ist ignore space. Hab ich doch schon drin.
Vielleicht war das genau mal.
Jetzt ist es auch weg.
Oder? Wart mal, hier Echo.
Jetzt ist es auch weg.
Ah, man muss das nächste Command eingeben.
Okay, das ist eigentlich ganz cool.
Guck mal, man macht Leerzeichen.
Qt Chat. Ah, ja, ja.
Oder wie auch immer.
Jetzt ist es noch in der History drin.
Aber sobald ich das nächste
Kommando ausführe,
jetzt ist es weg.
Das ist nice. Das find ich
sehr schick.
Das gefällt mir.
So.
Also, das waren wir doch mal.
Was?
Ich erzähl's dir gleich noch mal.
Ich muss jetzt erst noch meinen Api-Key setzen.
Wo ich vergessen hab, wie die Variable heißen muss.
Geil.
Ich glaub, die Variable muss einfach nur
Key heißen, gell?
Key.
Key. Gleich. So.
Jetzt müsst ihr doch noch mal weggucken.
Weil, jetzt muss ich einen neuen Api-Key generaten,
den ihr nicht sehen dürft.
Lul.
Ich weiß, der ganze Stream geilt jetzt wieder drauf.
Und liegt da was? Liegt da was?
Okay.
Sehr gut. Jetzt ist es auch nicht mehr in der History drin.
Ich bin begeistert.
Ich
bin begeistert. Das hat funktioniert.
Liegt. Oh shit.
So.
Macht doch ne JSON, wo da Key drin
steht. Hab ich.
Bringt aber nix, weil ich da nachher noch mehr Optionen
eintragen muss. Die muss ich nachher auch im Stream öffnen.
Ich muss das per environment Variable machen.
So.
Jetzt steht nix mehr in der History drin. Nein, da steht
nichts mehr in der History drin. Sehr schön.
So. Und wenn ich das jetzt ausführe,
sagen wir mal Info beispielsweise.
Und nehmen wir mal
mich als User hinten dran. Ich hoffe,
ich hab das jetzt richtig gemacht. Guck.
User Peter Aguilé ist punched.
Punched out ist der ähnliche Begriff
für eingestochen, ausgestochen bei
der Stechuhr. Warum auch immer das so
heißt, das kommt bestimmt noch aus Zeiten, wo man da so wirklich
Karten reingesteckt hat und dann
wurde dann das gelocht oder so.
So. Jetzt funktioniert das.
So. Und jetzt
kommt das Nächste, was ich eingebaut hab im Vergleich
zum letzten Stream. Und dann
zeige ich euch, was wir heute machen.
Dann behandle ich das kurz
nochmal von MyTown. Also wir bauen ein
Kommandozeilentool,
womit man sich über die API von
diesem Service hier
ein- und ausloggen kann,
ob man gerade
Rufbereitschaft hat oder nicht. Hintergrund
ist folgender. Ich kannte diesen Service nicht
bis vor ein paar Tagen.
Aber mein Arbeitgeber war der Meinung,
sie entscheiden sich für Push
Notification Service.
Push, Push
Alarmierung Service. Wegen einem unbekannten
deutschen Anbieter. Wahrscheinlich wegen DSGVO.
Keine Ahnung warum.
Und sie waren aber ein bisschen
zu geizig, um sich
die
ja, das bisschen teurere
Produkt von denen zu kaufen. Denn
aktuell ist es so, dass
wir zwar Push Notifications darüber machen
können, aber wir können keine
Schichtpläne hinterlegen.
Weil man die 6 Euro
im Monat sparen möchte.
Und da habe ich mir gedacht,
scheiß drauf, wenn man da keine Schichtpläne hinterlegen kann,
baue ich ein Kommandozeilentool, wo du
beispielsweise sagen kannst,
ich möchte User
sowieso einstechen.
Da sagst du zum Beispiel,
ich zeige euch das jetzt mal. Guck mal hier,
das ist mein User. User ist hier am Start.
Das ist übrigens ein Demo-Account.
Sieht man ja auch hier, läuft noch.
Also hier ist mein
Admin-User
am Start.
Man sieht auch, der ist aktuell nicht
on Duty.
Wenn ich jetzt sage,
punch in
meinen User und sag zum Beispiel
bis, machen wir mal
13 Uhr
59, ich hoffe das funktioniert jetzt alles.
Dann sagt der dir hier,
guck mal, habe ich das nicht nice gemacht?
Mit der Statusanzeige hier unten.
So, jetzt seht ihr,
unser User ist now punched in,
der holt sich auch den Namen raus,
Schicht ist gestartet um
13 Uhr 57, 17 Sekunden
am 12.02.2024.
Wenn ich jetzt hier das ganze refreshe und gucke,
sehe ich, okay,
der Dude hier ist jetzt on Duty
und jetzt warten wir mal
1 Minute 17 Sekunden ab
und dann wird er automatisch auch wieder ausgestochen.
Aber das ist
ein schicker
Progress-Ladebalken, oder?
Sogar mit dynamischer Anzeige, wie viel Zeit
noch left ist
für die jeweilige Schicht.
So, wir müssen jetzt
58 Sekunden warten, dann sehen wir mal,
was passiert ist.
Und das ganze
ist übrigens mit .NET,
was ist das aktuelle? .NET 8, gell?
Das ist mit .NET 8
programmiert, man kann Options,
ich zeige euch das gleich,
man kann Optionen setzen über
environment-Variable
und über
eine config-Datei.
Diese Datei liegt dann unter
config-punchchamp,
da könnte man
die JSON-Datei hinlegen.
Was würde passieren,
wenn die Verbindung vom CLI unterbrochen wird?
Erst einmal gar nichts,
weil das bis zum Zeitpunkt des Ablaufens
ja nichts weitermacht.
Also das muss nicht wirklich permanent
connected sein, das ist nicht, dass da irgendwie eine aktive
Websocket-Verbindung oder sowas ist.
Wenn die Verbindung jetzt unterbrochen wäre,
dann würde er versuchen auszustechen,
es vielleicht, das könnten wir
könnten tatsächlich nochmal einen retry
einbauen.
Das könnte man tatsächlich nochmal ausprobieren.
So und guck, jetzt
ist die Schicht fertig,
die ganze Schicht
ging 1 Minute 43 Sekunden und
jetzt ist der User wieder ausgetragen.
Wenn wir jetzt ins Webinterface gehen, das Webinterface
ist, naja,
da müssen sie noch ein bisschen was dran machen.
Und
jetzt bin ich auch nicht mehr on duty.
Also man wird gleich wieder ausgetragen.
Ich werde das für zwei Sachen benutzen,
und zwar einmal,
wenn ich morgens anfange
und mich, ich mach das oftmals so,
ich aktiviere mich einfach in dem Programm,
dass ich
Notifications krieg.
Das Webinterface ist noch
jQuery 3.6.
Ob das mit jQuery 4 besser wird, wahrscheinlich auch nicht.
Ich benutze das
entweder so, wie ich es eben gezeigt habe,
so keine Ahnung, meine Schicht geht dann bis 17.30 Uhr,
also Schicht ist bei uns ja auch
zu viel gesagt, ja.
Im Endeffekt, wenn es Notifications
gibt, dass halt jemand da ist,
der kurz reingucken kann. Du hast auch eine Reaktionszeit
von bis einer Stunde, das ist alles
halb so wild. Und es wird richtig fett bezahlt,
gerade nachts und am Wochenende.
Also ich werde mich hüten,
da irgendwas zu sagen.
Ohne Scheiß, bei uns die Rufbereitschaft,
die Rufbereitschaft,
die wir haben mit
der Vergütung, die es dafür
gibt, für zu 99%
nichts machen, ist das nächste
an Geld drucken, wie man rankommt.
Ja, also ich habe
noch nichts erlebt, wo man näher an Geld drucken rankommt,
als mit dem. Du musst zu 99%
der Fälle nichts machen
und kriegst Fettkohle für einfach nur innerhalb
von einer Stunde am Handy sein.
Das ist mega, das ist super nice.
Auf der anderen
Seite hat sich das halt auch mal irgendein
BWL-Typ ausgerechnet.
Der hat gesagt, ey,
ein Ausfall von unserem Service von 3-4 Stunden
kostet uns 5 Millionen Euro.
Ich mach jetzt, ich weiß nicht,
ob das stimmt. Ich denke mir einfach
random Sachen aus.
Die haben sich gedacht, ey,
Ausfall kostet uns 5 Millionen
so irgendwie für ein paar Stunden oder keine Ahnung,
kostet uns eine Million pro Stunde, sagen wir mal.
Irgendwie und
warum ist das so laut auf einmal?
Und wenn wir aber Leute
dahinsitzen haben
und die das ganze Jahr über bezahlen und es ist nie was,
aber es ist innerhalb, was weiß ich, es ist irgendwie
einmal im Jahr ist was oder einmal
alle 5 Jahre ist was
und es ist innerhalb von einer halben
Stunde behoben, anstatt, dass es 5 Stunden dauert,
weil es mitten in der Nacht ist, dann hat
sich das alles schon wieder gerechnet.
Die könnten theoretisch uns einfach nur
dahinsetzen und nichts machen lassen. Es würde sich
irgendwann nach ein paar Jahren automatisch
schon gelohnt haben. Deswegen,
ich werde mich da nicht beschweren so nach dem Motto,
oh, warum muss ich nachts Ruf bereiten?
Ich bin happy, dass es das gibt. Es gibt
mega Fettkohle für kaum
ja, kaum
was, was du machen musst.
Also ist schon, ist schon okay.
So.
Und ich werde das wahrscheinlich zum größten Teil
so benutzen, wie ich euch eben gezeigt habe.
Ja, wenn ich morgens anfange, irgendwann so
8 Uhr rum, mache ich einfach hier
punch in bis 17.30 Uhr oder keine Ahnung
an dem Tag, keine Ahnung, wenn ich denke, ich denke, okay,
an dem Tag haue ich 15 Uhr ab.
Habe ich 15.30 Uhr
und dann ist gut, übrigens man kann das
mehrfach starten, ja. Wenn ich sage,
ey, ich heute, heute bin ich
15.30 Uhr weg und ich
lasse das laufen, dann wird der User eingestochen
und das ganze läuft dann noch bis 15.30 Uhr.
Aber wenn ich mir dann denke, ey, weißt du was, Max,
lass mal abbrechen, du hast doch keinen Bock.
Du haust
heute schon um 14.30 Uhr ab, kann ich das
einfach ändern. Dann guckt er auch
nach, dass der User schon eingestochen ist
und dann sind es noch 27 Minuten.
Und wenn ich der Meinung bin, alter, ich habe ja gar
keinen Bock mehr, ja,
ich will, ich will gar nicht mehr,
dann kann ich auch einfach sagen, direkt
punch out, Schicht beenden, ich will keine Messages
mehr kriegen.
Dann bist du, bist du wieder weg.
So. Das ist das,
was wir letztens im Stream
schon so grob
programmiert haben. Ich habe es jetzt ein bisschen ordentlicher
gemacht.
Ich habe zum Beispiel noch eingebaut,
dass man jetzt, alter, was ist mit der Musiklust,
die ist gerade sehr, ah ne,
besser.
Die ist, also,
das letzte Mal war das, was wir im Stream gebaut haben, noch
relativ rudimentär. Du konntest
dich einstechen, ausstechen und das war's.
Ich habe das jetzt noch ein bisschen erweitert.
Ist das die Zeit,
wo, wie weit du eingeloggt warst? Ja.
Ja, ja, guck, ich habe das hier oben gestartet
und da habe ich wieder ausgeloggt, genau.
Ich war 26 Sekunden
eingeloggt, richtig.
Also quasi, zwischen hier,
zwischen hier und meinem Gelaber
und hier waren 26 Sekunden.
Ja.
Was ich jetzt noch eingebaut habe, ist folgendes,
man kann
Optionen setzen
über Environment-Variablen
und über
Config-Dateien.
Also ich kann zum Beispiel
den User hier,
also wenn ich jetzt sage,
Punch-Out-User, mit dem Username,
bin ich zwar gar nicht,
kann ich jetzt entweder per
Command-Line angeben,
übrigens, ich könnte damit, wenn ich gemein wäre,
sogar Leute im Team ein-
und ausstechen, ob die wollen oder nicht.
Und ich kann
entweder hier per Command-Line übergeben, den User,
oder
ich kann
den per Environment-Variable
übergeben, ich zeige euch das mal.
Ich kann sowas machen wie Export,
Punch-Champ
und dann User gleich.
Zack.
Und wenn ich das jetzt ausführe
ohne User, dann weiß er trotzdem,
welchen er nehmen soll. Guck.
Also man kann das per Environment-Variable
setzen.
Das kann man als Zeiterfassung nutzen.
Naja, ich glaube nicht, dass es
dafür die Anforderung erfüllt.
Äh,
fehlt nur noch die Integration als Bot in Teams.
Sowas in der Richtung machen wir
heute, zumindest die Grundlage dafür.
Aber
ich glaube nicht, dass es so,
soll man sagen, ähm,
ausgefeilt wird, dass man sich da
in den Team-Bots drauf
verlassen sollte.
Zumal die bestimmt eine offizielle
Teams-Integration haben, gehe ich mal von aus.
Also ihr seht, jetzt kann ich auch
ohne User anzugeben, die Kommandos
verwenden, weil das Ganze
in
dieser Variable drinsteht.
Jetzt werde ich das mal wieder
unsetten, dass ihr auch seht,
dass das nicht irgendwie hardcoded ist oder so.
Äh, achso,
unset, und wenn ich
es jetzt ausführe, dann kackt er
ab, weil es den User nicht gibt.
Vielleicht, vielleicht sollte ich
eine sinnvolle
Fehlermeldung machen.
By the way,
warum
ist er der Meinung,
dass es der User Max ist?
Der sollte
eigentlich eine Exception schmeißen,
dass der User
0 ist. Warum ist der User
Max? Checkt
das irgendjemand?
Ich habe noch gar keine Config.
Ne, ne, Max
ist mein lokaler Linux-User,
aber wie kommt der hier rein?
Als,
weil Environment-Variablen sind eindeutig.
Der nimmt
das vom OS, ja, aber warum?
Aus der
Config-Datei kann es nicht kommen und
Environment-Variablen müssen
prefixed sein mit punchchamp.
Warum kommt User?
Jetzt bin ich
verwirrt.
Jetzt bin ich verwirrt.
Okay, das, das muss ich, das muss ich
jetzt mal, das muss ich mal
ausprobieren.
Ja, punchout.
Mal kurz hier,
kurz debugprinten.
Geben wir mal hier den User aus.
Kommt der hiervon? Kommt das hiervon?
Das kommt hiervon.
Wie um alles
in der Welt kommt da mein System-
User rein?
Das macht ja überhaupt keinen Sinn.
Der ist hier nicht gesetzt.
Ist das ein Bug?
Ist, ist das ein
.NET-Bug oder?
Es kommt eindeutig aus Environment-Variablen.
Aber die
müssen prefixed sein.
Das verstehe ich nicht.
Nimmt, nimmt der beides, wenn das
Ah, vielleicht liegt es
an configuration get.
Vielleicht ist das hier, vielleicht ist das hier ein Ding.
Configuration get?
Dachte ich, eigentlich nimmt
der nur, Moment, Moment, Moment, Moment.
Ernsthaft?
Ja,
wie macht man das dann richtig?
Moment, das muss ich mal, muss ich mal suchen.
.NET
Ich glaube
iConfiguration.
User
System. Warum macht der das?
Weiß ich jetzt nicht, aber was ich suche.
Der macht da
auf jeden Fall Magic, die ich nicht erwartet hätte.
Das kann man bestimmt
ausschalten. Das ist bestimmt irgendein
dummes Default-Verhalten
von...
Okay, lass mal ausprobieren.
Also wir wissen jetzt auf jeden Fall, es kommt
daher. Wenn ich
addEnvironment-Variables rausmache,
dann
ist es nicht mehr drin. Ne, hä?
Es kommt nicht aus
den Environment-Variables? Ja, von
wo kommt das denn?
Sind das, sind das
so Standard-Configs, die immer
da sind? So wie aktuelle
User und sowas?
Ich mach mal alles weg, okay?
Alles weg.
An Configuration.
Ja, das sind so
Standard-Dinger. Okay, dann ist es doch keine
so gute Idee, das Ding User zu nennen wahrscheinlich.
Frage ist, ob man das irgendwie
ausschalten kann.
Other Secret Connections.
Nö, das kann man anscheinend nicht ausschalten.
Iconfiguration
Default-Variants.
Anscheinend ist das
irgendwelches.
Das ist ja sehr weird, das ist mir noch nie aufgefallen.
Hä?
Gut, das ist jetzt ein kleineres Problem, aber
das irritiert mich schon
sehr stark, Jens.
Dann darf ich es auf jeden Fall nicht User nennen.
Was aber dumm ist, dass ich es nicht User nennen darf.
Wie nenne ich das denn dann?
Kann er
potenziell mit allem irgendwie konflikten?
Wir lassen es jetzt erstmal offen.
Gibt schlimmere
Probleme. Zumindest
wenn ich noch richtig schreiben könnte.
Alter.
Ja,
genau. Also
keine Ahnung, warum er das macht.
Gut,
wo bin ich stehen geblieben?
Genau, also was ich noch eingebaut habe ist,
man kann jetzt Konfigurationen aus
Environment-Variablen laden und aus der
Config-Datei laden.
So, ihr seht, ich habe das jetzt eben unsettet.
Und jetzt crasht das Ganze,
weil der User nicht mehr gesetzt ist.
Ich kann den User auch setzen
in
der Config-Datei, nämlich in
config
.json
Da kann ich sowas machen hier
wie
User. Und dann kann ich das
reinschreiben. Und das sollte
theoretisch auch funktionieren,
hoffe ich.
Ja, CodeCard funktioniert. Es ist in der Config-Datei
gesetzt. Und was noch besser ist,
wenn ihr jetzt auf die Idee kommt
und sagt, ey, ich würde das aber gerne
überschreiben, ohne
dass ich die Config-Datei editieren
muss, dann
könnt ihr einfach die Environment-Variable zusätzlich
setzen, weil
Environment-Variable, ihr seht's,
Environment-Variable überschreibt Config-Datei.
Ich denke, das ist relativ intuitiv.
Oder? Findet ihr auch?
Also ich bin der Meinung,
die Priorität sollte sein,
niedrigste Priorität, Config-File,
danach Environment-Variable
und danach direkt angegebene
Commandline-Parameter.
Oder was denkt ihr? Ich muss mal kurz
was zu trinken holen.
Excellent.
Group Policy Integration, ja ganz
bestimmt.
Environment-Variablen
sind
teilweise
praktischer als
Konfigurations-Dateien,
gerade im Cloud-Umfeld.
Das ist jetzt für mein Tool ziemlich irrelevant,
ja, aber wenn du irgendeine Anwendung hast,
die beispielsweise in einem Container läuft,
in einem Kubernetes-Cluster,
da ist es tausendmal einfacher,
naja,
eigentlich nicht, aber
ein bisschen einfacher,
mit Environment-Variablen
was zu überschreiben, als mit Config-Dateien.
Du machst ja nicht wirklich Config-Dateien in Kubernetes,
du machst eine Config-Map, die du reinmountest,
das ist dann auch nicht
so wirklich viel schwieriger.
Aber trotzdem ist es mit
Environment-Variablen oftmals einfacher.
Was ganz cool ist,
wenn Software beides unterstützt,
das begrüße ich ja immer,
das ist im Cloud-Umfeld auch ganz nice,
weil dann kannst du eine Base-Config nehmen
und die beispielsweise mit
Environment-Variablen überschreiben,
je nach Environment.
Entwickelst du Backend-Service oder auch mit Frontend?
Ja, machen auch Frontend-JavaScript-Zeug
manchmal.
Da mache ich zwar meist einen großen Bogen drum,
aber manchmal kommt man nicht drum herum.
Also ich benutze gerne Svelte
als JavaScript-Framework
und Tailwind für
grafische CSS-Geschichten.
Ich bin aber weit davon entfernt,
irgendwie der super krasse
Frontend-Profi zu sein.
Ich bin immer da begeistert,
wenn man ein neues Projekt erstellt
und minimal was hinzugefügt hat,
npm install macht,
wenn man erstmal, keine Ahnung,
15 Gigabyte JavaScript-Zeug
bei sich liegen hat.
Oder irgendwie 100.
Haben wir das letzte Mal nicht nachgeguckt?
Wir hatten 840
npm-Packages, oder?
War das nicht so?
Wir hatten das letzte Mal ein ziemlich minimales
ziemlich
minimales
Tests.
Ja, ist es keck wie lull?
Alter, meine Benahmung ist halt einfach zu geil.
Da weißt du sofort Bescheid.
Keck wie lull?
Bild? Bin?
Ne, das ist es schon mal nett.
Keck wie champ lull?
Keck wie champ lull?
Ah, ja, ja, okay, alles klar.
Ah, das sieht gut aus, okay.
Ähm, ja,
ls-la-node-modules.
190.
190, also so ein barebone
Ding, 190.
Paketabhängigkeiten.
Natürlich, was sonst?
Obviously.
Okay.
Da sind wir stehen geblieben.
Ich bin gerade am überlegen,
ob ich
irgendwas vergessen habe.
Ja, also ich denke, man hat jetzt eigentlich
verstanden, was es machen soll. Es ist wirklich sehr übersichtlich.
Ich meine, man darf es jetzt nicht komplizierter
machen, als es ist. Es sind aktuell
211 Zeilen .net, also
nicht .net, C-Sharp. Das ist wirklich
weit davon entfernt, soll nicht komplex zu sein.
Das ist eine Datei, wo alles drin ist.
Ich weiß, die
Ordnungs-, C-Sharp-Ordnungs-,
das Ordnungs-, C-Sharp-Ordnungsamt
wird wahrscheinlich sagen,
Max, du kannst doch nicht deine ganzen Typen hier
alles in eine Datei schreiben. Das geht doch nicht.
Das muss eine Klasse,
ein Typ pro Datei.
Jaja, wir lassen es jetzt
erstmal so. Wir müssen es nicht
übertreiben. Ich meine, was gewinnen wir dadurch,
wenn dieser Inam in der eigenen Datei
ist? Macht es das so viel ordentlicher?
Vielleicht ein bisschen, ja.
Aber es hält sich noch in Grenzen.
Also, ich denke mal,
man hat jetzt verstanden, was es machen soll und
heute bauen wir folgendes noch
ein. Bin ich mal gespannt, wie gut
das funktioniert, denn ich kann mich
einstechen. Ich kann jetzt übrigens
das hier auch weglassen
und sagen, ich, äh,
meine Schicht geht bis 17.30 Uhr.
Ja, meine Schicht geht bis 17.30 Uhr.
Und jetzt wäre natürlich noch
mega nice,
wenn es mir anzeigen würde, wenn es
auch wirklich Alerts gäbe.
Und das werden wir heute mal ausprobieren.
Wir machen jetzt ein neues Command.
Vielleicht gehen wir vorher nochmal ganz kurz drüber,
wie es eigentlich funktioniert, was es macht.
Ich bin mir gerade bei dem Config Zeug hier
nicht so sicher, ob das der beste Weg ist,
das unter .NET zu machen.
Aber es funktioniert recht gut.
Ähm, der
guckt erstmal nach, ob es eine Config Datei gibt,
beziehungsweise legt das Verzeichnis an,
wo die Config Datei rein muss, falls es das noch nicht gibt.
Dann, ähm,
checkt er, ob es
Environment Variablen gibt mit Option
Alternativ liest er das.
Oder er macht beides.
Er zieht sich Optionen aus Environment Variablen,
beziehungsweise aus dem Config File
und parst
diese ganze, ups,
die ganzen Sachen in
eine Klasse AppConfig.
Die besteht im Endeffekt aus zwei Properties.
Einmal den API Key und einmal den User.
Die ich vielleicht umbenennen sollte,
weil ich habe schon gemerkt, mit User gibt es irgendwie Konflikte.
Dann gibt es
eine API Klasse.
So als Abstraktion zur
eigentlichen Rest-API
von dem Anbieter.
Zu der Sache hier.
Die macht zur Zeit nicht sonderlich viel.
Die hat
einen, die legt einen HTTP
Client an und setzt dort den
API Key Header.
Das ist der API Key, den ihr nicht sehen dürft.
Den ich per Environment Variable
exportiert habe.
Dann kannst du einmal dir User Data abholen.
User Data
besteht wiederum aus der
Team ID, in dem der User drin ist.
Ob er aktuell Schicht hat oder nicht.
Wann der Status zuletzt sich geändert hat
und der Name vom User.
Und dann kannst du dich einstechen und du kannst
dich ausstechen. Das ist alles.
Mehr kann das zur Zeit noch nicht.
Und viel mehr muss es wahrscheinlich auch nicht können.
Aber was ich jetzt gerne hätte ist noch
ein Command, zum Beispiel
wie, nennen wir es mal
watch.
Und dann soll der einfach
nachgucken, ob es neue
Alerts gibt. Und wenn es neue Alerts
gibt, dann eine schöne Meldung auf der
Kommandozeile ausgeben, plus eventuell
Send Notify für Linux machen,
dass dann oben was aufploppt, so nach dem Motto
Disk Space ist unter
5% und solche Geschichten.
Das werden wir jetzt mal machen.
Und zwar, ich kopiere mir das einfach mal,
weil das brauche ich wahrscheinlich wieder.
Ich habe gerade das gelesen auf dem zweiten Bildschirm.
So, das nennen wir jetzt nicht Info, sondern erst mal wirklich
watch.
Übrigens ist das ganz nice gemacht hier.
Für Kommandozeilen-Packages.
Und zwar, du kannst dir das Kommando angeben,
was du haben willst und hier hinter quasi
die Option,
was übergeben werden soll per
per
Command Line Option.
Es ist aber
natürlich ein bisschen Magic wieder mit dabei,
weil ihr seht vielleicht, dass
das hier und das hier
beides nichts ist, was per
Kommandozeile übergeben wird. Also, ich lasse es
jetzt mal so. Zumindest das coole ist,
wenn man ein neues Command anlegt, der
legt automatisch einen Hilfetext
dafür an. Du kannst jetzt beispielsweise
sagen watch-help.
Dann kriegst du angezeigt, okay, du kannst
den User angeben oder eben die Hilfemessage anzeigen.
Ihr seht, es steht hier nichts von
Signal vorab hier und ab
App-Config und sowas. Das liegt daran,
dass
diese zwei Sachen über
Dependency Injection reinkommen. Die sind hier oben
registriert und ein bisschen
Magic macht .NET,
weil es .NET ist.
Für alle Typen, die hier aus Dependency Injection
kommen, wird
keine
automatische Kommandozeilen-Hilfe generiert.
Weil Magic.
Ich habe die IT-Betreuung meiner
Feuerwehr übernommen. Ein 10 Jahre
altes Netz auf einer uralten
ESX-Basis mit Windows 2012.
ESX hat aber
kein OS unten drunter.
Du meinst, der Windows
2012 Server läuft auf
ESX, nicht ESX
in Windows. Weil ESX
in Windows geht ja nicht.
2012er?
Die sind doch gar nicht mehr im Support, oder?
Ich glaube, der älteste Windows
Server, der Support ist, ist 2018.
Das einzige, was ich weiß
von Windows Servern, ist ungefähr
bis wann die supported sind.
Ansonsten habe ich null Ahnung von Windows
und Windows Servern. So gar nicht.
Machst du das ehrenamtlich, oder kriegst du was dafür?
Wenn du das ehrenamtlich machst, dann
machst du es halt so gut, wie geht. Und wenn du keinen
Bock mehr hast, sag ja, kümmert euch selbst drum.
Aber wenn du das natürlich geerbt hast,
sag mal mal, mit irgendeinem
Dienstleistungsvertrag und so,
da musst du gucken, dass du das updatest.
Sekunde, meine Tastatur
muss umgestöpselt werden,
weil mein RGB nicht funktioniert.
Wie wir alle wissen, programmieren ohne RGB
ist nicht möglich.
Was gibt es für moderne Virtualisierungssoftware?
Es gibt jede Menge.
Also ich würde sagen, dass im Business Umfeld
verbreitet ist eindeutig ESX.
Was glaube ich schon seit Jahren
tatsächlich ESX-i heißt.
ESX ist mit Abstand im Enterprise
Feld, mit Abstand
das verbreitetste.
Was auch noch sehr verbreitet ist,
allerdings nicht so sehr
unter diesem Namen ist
Xen. Wobei Xen
eigentlich
selbst so gut wie kaum noch installiert
wird. Die meisten Leute verwenden halt Shitrix.
Und Shitrix ist
halt auf Xen Basis
so Desktop-Virtualisierungs-VDI
mäßig. Aber für
Server-Virtualisierung ist es
im Enterprise Umfeld zum
größten Teil ESX.
Es gibt aber noch mehr.
Es ist nicht, dass es das einzige gibt.
Es gibt noch Hyper-V von Microsoft.
Wo ich nicht weiß, in welcher geistigen Umnachtung
man sich befinden muss, damit man ernsthaft
größere Installationen mit Hyper...
Aber gut, wie auch immer. Kann ja jeder machen, wie er will.
Ich persönlich habe Hyper-V
noch nie in freier Wildbahn
gesehen im Einsatz.
Und...
Ich weiß nicht, wie es bei euch aussieht.
Hat irgendjemand von euch Hyper-V am Start?
Ja, aber das ist insgesamt nicht sonderlich
groß, glaube ich.
Ein kleiner Kollege von mir
aus der Berufsschule arbeitet
da.
Leider ja.
Also Hyper-V haben wir noch.
Und...
Jetzt kommen wir zur ganzen Sache,
wo das halbe Internet drauf läuft.
KVM.
Das ist die Linux-Virtualisierung.
Also wenn du dir bei irgendeinem
Hosting-Anbieter eine VM kaufst,
geh davon aus, dass es KVM ist.
Proxmox ist KVM.
Proxmox ist KVM.
Proxmox ist KVM.
Nur mit schöner Oberfläche.
Man kann das auf
jedem x-beliebigen Linux...
Ich kann meinen Wirtmanager aufmachen,
das ist auch KVM.
Unter der Haube verwenden die beide das gleiche,
egal ob Proxmox oder ich hier mit
meinem Virtualisierungs-GUI.
Ich habe übrigens gar nichts,
gar keins laufen, oder doch?
Unter der Haube ist KVM.
Und wenn ihr bei irgendeinem Hosting-Anbieter
unterwegs seid und euch da irgendeine
VM kauft, sagen wir mal,
beispielsweise hier Hetzner Cloud
Pricing, wenn ihr sagt, ey,
ich will
mir jetzt eine
Triple-Core-Kiste kaufen
für
Share-CPU,
Triple-Core-Kiste kaufen
für 9 Euro im Monat,
ihr könnt davon ausgehen,
sowas ist eigentlich nahezu
immer KVM.
Es gibt
ein paar verrückte Anbieter,
da ist es kein VM,
da ist es komplett
Shared.
Kann sich noch einer an die Zeiten erinnern,
früher, wo manche Hosting-Anbieter
gerne...
Oh, wie hieß das?
Open...
V...
Oh, wie hieß das?
OpenVZ?
Ja, das meine ich glaube ich.
Ich glaube
OpenVZ meine ich, genau.
Das war so
Vorgänger von Linux-Containern.
Könnte man das umschreiben.
Das war komplett Shared.
Das war quasi noch Shared.
Das war komplett Shared.
Das war quasi noch weniger isoliert
wie eine VM, also eher wie ein Container.
Und damals haben die quasi
zig Leute damit auf den gleichen Server gepackt.
Also, ich bin mir
nicht sicher, ob das noch ernsthaft irgendjemand verwendet,
aber du kannst davon ausgehen,
zu 99%,
wenn du dir VMs irgendwo kaufst
bei einem Hoster, sind das KVM.
Ich habe bei Hetzner
ehrlich gesagt nie nachgeguckt,
was es ist, glaube ich.
Aber ich bin mir auch zu 99%
sicher, es ist KVM.
Ja.
Und bestimmt gibt es
mittlerweile auch so ganz super
Low-Budget-Dinger, die dir
mit virtualisierten, in Anführungsstrichen,
Containern um die Ecke kommen oder sowas.
Garantiert wird es das geben,
gerade wenn es besonders billig sein soll.
Aber zu 99%,
es ist KVM.
Also KVM, würde ich sagen,
ist vielleicht sogar das
weltweit verbreitetste Virtualisierungssystem.
Im Enterprise-Sektor
eindeutig ESX.
So, wenn du guckst,
wie beispielsweise bei einer Bank oder bei einer
Versicherung oder bei irgendeinem größeren Laden,
wie dort virtualisiert wird, da ist es
eigentlich nahezu ausschließlich,
wenn die selbst virtualisieren, ESX.
Und bei kleineren
Läden mag das durchaus auch mal sowas wie
Proxmox sein oder irgendwie
Synology, NAS,
was da rumsteht,
wo dann aber letztendlich auch
KVM drauf läuft.
Aber alle, die ein bisschen
Geld und Budget haben
für ihre IT und
die mir bekannt sind,
machen das eigentlich mit
ESX, wenn sie selbst virtualisieren wollen.
Das ist natürlich nix, was
du einfach mal so machst. Da brauchst du schon Leute,
die sich damit auskennen.
Das habe ich noch nie gesehen.
In the wild. Wie gesagt,
ich kenne einen ehemaligen Kollegen von mir,
mit dem ich in der Berufsschule war, der arbeitet da.
Scheint jetzt nicht ganz so schlecht zu sein.
Wir entwickeln ja auch.
Gerade schwätze ich über Server-Virtualisierung
oder generell über Virtualisierung.
Also ESX ist eigentlich mit das
Verbreiteste, um das jetzt hier abzuschließen.
Das waren, glaube ich,
jetzt fällt noch irgendjemand was ein,
weil die Frage war, was es noch so für Virtualisierungslösungen gibt.
Also ich glaube, da haben wir die verbreitetsten Sachen durch.
Du hast natürlich noch
verschiedene Ausprägungen
davon. Ja, also das hier, was
ihr hier seht, beispielsweise meine
Linungskiste.
Die sieht zwar so aus wie ein eigenes
System, ist es aber nicht.
Das ist ein KVM,
äh, kein KVM.
Das ist ein VMA Workstation, man sieht es hier.
Das ist ein VMA Workstation, was bei mir unter Windows im Fullscreen
einfach läuft, die ganze Zeit auf dem zweiten Desktop.
Wenn nicht das KVM.
Oh ne, Dings hier, VirtualBox meinst du?
Ja, VirtualBox gibt es noch für
Desktop.
Aber im Prinzip gibt es
die großen Dinger sind
KVM und
ESX und
für
welche die es unbedingt brauchen,
Chitrix, beziehungsweise Xen.
Das sind eigentlich die großen und ja,
eventuell noch Hyper-V.
Das war es dann aber auch.
Okay, machen wir mal weiter.
Wie mache ich denn das jetzt gescheit?
Also mein Ziel ist,
ich möchte gucken, ob es neue Notifications
gibt. Oder neue Alerts.
Alerts heißt es ja hier.
So, das müsste über diesen
API-Endpunkt gehen, denke ich.
V2 Alerts Paged.
Man braucht eine
User-ID, die haben wir.
Max Results,
da reicht mir ehrlich gesagt eins,
nämlich der letzte Alert.
Und dann kann man anscheinend
noch einen Filter
definieren.
Also man kann Filtern nach Team-IDs,
Alert-IDs, wie auch immer ich nach Alert-IDs filtern will,
wenn ich die Alert-ID noch nicht weiß.
After-ID, Gachibas,
Kategorie-IDs,
Token, was auch immer.
Ach hier, und wann die
erstellt wurde, zwischen diesem
Datum und so.
Die Frage ist jetzt, kann man das leer lassen
oder zeigt mir einfach alles an?
Das wäre ja mit Abstand das
einfachste, ja.
Das probieren wir mal. Ich versuche mal Alerts abzufragen.
Also,
dann gehen wir mal in die API-Klasse hier.
Nein.
Nein.
Gehen wir mal in die API-Klasse
und legen mal was Neues an.
So sinngemäß
Get Alerts vielleicht
einfach nur.
Oder nennen wir es doch
am besten so Get Latest Alert.
Da kann ich
da drin auch schon gleich filtern.
Also, wie ich mir das vorstelle ist folgendes.
Wir machen jetzt
ein Command, so hier, Watch.
Und dann
bleibt er einfach hängen und gibt so lange neue Notifikationen.
aus, bis man es halt beendet.
Das heißt, wir brauchen auf jeden Fall hier schon mal eine Schleife
drinne.
Wo wir gestern gelernt, Leute,
was wir jetzt machen, ist
Undefined Behaviour in C++.
Achtung.
Ganz böse, ganz böse. Endlosschleife.
While
Undefined Behaviour
incoming. Glücklicherweise nur in
Schrott-Sprachen wie C++.
Endlosschleife. Wobei, stimmt gar nicht.
Wir haben eine Endlosschleife mit Abbruchbedingungen.
Das ist auch in C++ okay.
Muss man nebenbei ein bisschen flamen.
Ich will jetzt,
ich fange jetzt nicht wieder von vorne damit an.
Dann bin ich jetzt eine halbe Stunde am C++ bleiben.
Wir machen einfach weiter, okay.
So, User.
Kann man angeben.
Userdata werden wir garantiert
hier auch brauchen.
Also, wir holen uns den aktuellen User,
für den das Ganze gelten soll.
Wenn der User 0 ist, kacken wir ab.
Danach holen wir uns die aktuellen Infos
für diesen User.
Und dann lassen wir eine Schleife laufen.
Und
rufen da drinnen
die Alerts ab.
Also.
Nennen wir das Ganze mal
Get Latest Alerts.
Wir brauchen auf jeden Fall die User-ID.
Und wir brauchen, so wie es hier aussieht,
anscheinend auch
die Team-ID.
Bitte mit Sleep. Ja, du hast Recht.
Da muss auf jeden Fall noch ein Sleep rein.
Sonst haben wir ein Problem.
Await.
Pass. Delay.
Eine Sekunde.
Übrigens, Microsoft
selbst sagt, so macht man
das nicht.
Eine Endlosschleife mit Wait.
Das sagen die, das ist
böse, das soll man nicht machen.
Oh nein, Splatoon-Musik.
Sekunde. Ich muss kurz skippen.
Ich mag Splatoon-Musik nicht.
Okay, viel angenehmer.
Aber Microsoft sagt,
das ist ganz böse, das darf man nicht machen.
Das Problem, was ich damit habe, ist,
dass die Alternative von Microsoft
naja,
auch nicht
geiler ist.
Deswegen mache ich einfach weiter eine Endlosschleife.
Die offizielle Alternative von Microsoft
dazu, also, ne, Plan ist
jetzt, so nach dem Motto hier, ähm,
ja, Latest Alerts
und dann gibt es das jede Sekunde aus.
Ich gehe da mal kurz rein, dann führen wir es aus.
Wir müssen nach CD,
Endlos,
ähm, Watch.
Und wenn ich das jetzt ausführe,
dann gibt es eine Endlosschleife.
Ah! Ich kann noob!
Hier habe ich ja die Environment-Variable
nicht exportiert mit meinem API-Key drinnen.
Dann müssen wir halt hier das so machen.
Und hier machen wir ein neues Terminal auf, okay.
So, Watch.
Okay, Latest Alert.
So, das ist der Sinn davon.
Da soll er natürlich nicht
Latest Alerts hinstellen, sondern sobald es Alerts gibt,
soll er eine ausgeben.
So, also Microsoft sagt, das macht man so nicht.
Endlosschleife ist,
oder generell so Schleife hier,
das ist ganz uns lieb und so, das ist doof.
Microsoft sagt, man soll dafür jetzt
eine Timer-Klasse verwenden.
Und wie man das so kennt von .NET,
es gibt halt
250 verschiedene
Timer-Klassen.
Also mindestens 5, mindestens 5.
Okay, Rider meint, es sind nur 3,
aber ich weiß, es sind mindestens 5.
Ich glaube, es liegt daran, weil es eine Konsolen-Anwendung ist.
Wenn wir in Windows 4
Forms-Anwendungen hätten, hätten wir mindestens 5.
Und ich glaube, in WPF hätten wir sogar noch mehr.
Es gibt Timer.
Also es gibt System-Threading-Timer.
Es gibt System-Timers.
Und es gibt Periodic-Timer.
Microsoft ist der Meinung,
so eine Schleife, die eigentlich ganz gut lesbar ist,
mit einem Sleep drinnen,
ist nicht gut genug.
Wir sollen jetzt gefälligst Periodic-Timer benutzen.
Und da kann man jetzt
sagen, Timespan
from
seconds, eine Sekunde.
Und
Timer.
Timer.
Wait for next.
Da darf man jetzt irgendwie nur eine Schleife
drum machen, glaube ich.
Oder?
Darf man so machen?
Ich weiß gar nicht, wie man den Krempel verwendet.
Ah ne, wait muss davor.
Wait.
So, das darf man irgendwie machen.
Das ist aus
Microsofts Sicht besser als meins.
Ja,
es ist besser, aber für den Fall
vollkommen egal. Und ich finde das hier besser lesbar.
Weil ich müsste jetzt sagen quasi,
oder
is cancellation
requested?
Oder, Moment, kann man den
Cancellation-Token auch hier rein?
Ah, kann man auch rein? Ne.
Kann man nicht.
Doch kann man.
Okay, ich gebe zu, das ist doch gar nicht so mies.
Kann man denn zum Beispiel,
könnte man das hier so
reinschreiben?
Ja, aber das sieht halt abartig
eklig aus.
Tja, kann man sich jetzt drüber streiten.
Also,
beide Sachen machen fast das gleiche.
Chatke,
was findet ihr angenehmer
zu programmieren? Das hier
versus das hier?
Das hier versus
das hier?
Ich weiß nicht so recht.
Also, mir unten, mir gefällt das nicht.
Das untere immer noch besser.
Ich finde, das ist einfach klarer,
was passiert.
Weiß nicht, wie ihr das seht.
Das obere hat tatsächlich einen Vorteil,
den der untere nicht hat.
Aber ich warte jetzt erstmal noch, dass ich vielleicht
der ein oder andere vom Chat dazu äußern kann.
Weiß nicht, was euch, was ihr angenehmer
empfindet. Also, mir persönlich
gefällt das untere besser.
Der Unterschied ist,
zwischen dem oberen, also das macht
mehr oder weniger zu,
ja,
zu nahezu 100%,
zu 99, ganz viel, macht das
exakt das gleiche. Du wirst zwischen beiden Sachen
keinen großen Unterschied merken.
Der Unterschied kommt erst zum Tragen,
wenn ein Schleifendurchlauf
lange braucht.
Weil,
diese Schleife hier unten verhältst, also mal
angenommen,
das Abrufen der Alerts würde
jetzt sagen wir mal
0,5 Sekunden dauern.
Da wäre
mein Schleifendurchlauf ja nicht immer
exakt eine Sekunde,
sondern es wäre
eine halbe Sekunde hier
und dann ein Sleep von einer Sekunde.
Das heißt, so ein Schleifendurchlauf würde ungefähr
1,5 Sekunden dauern, obwohl ich es eigentlich
alle Sekunden haben will.
Und dieser Periodic Timer,
der kann das ausgleichen.
Also sprich, der misst,
wie lange der Schleifendurchlauf
gebraucht hat, wobei,
nicht wirklich den Schleifendurchlauf misst, sondern
halt wann das hier das letzte Mal aufgerufen wurde
und kann das abziehen
von dem
Timer.
Also sprich, wenn hier der Schleifendurchlauf
0,5 Sekunden dauert,
dann
waitet das hier nicht für eine Sekunde,
wie hier oben eingestellt, sondern nur für eine halbe Sekunde,
weil der weiß,
der letzte Durchlauf,
der brauchte halt irgendwie
0,5 und damit ich auf einen
immer gleichbleibenden Takt
von einer Sekunde komme, muss ich also
schon den 0,5 Sekunden auslösen.
Anstatt in einer.
Dafür ist das gut, also wenn du solche Schwankungen
ausgleichen willst, dafür ist das gut.
Wenn du einfach nur was haben willst,
was loopt,
mit ein bisschen Delay drin,
dann finde ich, ehrlich gesagt, das untere
schicker
und besser zu lesen.
Aber Microsoft sagt, das ist böse.
Das darf man nicht machen.
Naja, was tatsächlich blöd wäre,
die alte Variante
von Microsoft, Thread.sleep
wäre ja
auch eine Möglichkeit.
Die ist aber an der Stelle wirklich blöd,
weil das lockt den Thread komplett.
Also diesen einen Thread,
der kann für nichts anderes mehr verwendet werden.
Das ist natürlich doof.
Ja.
Also wenn ich aus dem
Threadpool irgendwas
mir hole und den dann locke mit einem
Sleep eine Sekunde, ist es
blöd. Da ist das mit Await
deutlich besser, weil Await
an der Stelle
gibt's, also wir haben uns das
ja mal angeguckt, wie das eigentlich aussieht,
returnt an der Stelle, packt den
Thread wieder in den Threadpool zurück
und der könnte theoretisch was anderes machen in der
Zwischenzeit, solange der hier
waitet. Daher kommt ja auch
das, was viele Leute sagen, man soll
sagen, Configure Await False,
weil wenn man das macht,
dann wird nicht bei der
Ausführung hier unten drunter der gleiche
Thread aus dem Threadpool geholt,
der es ursprünglich bearbeitet hat, sondern ein anderer.
Das ist normalerweise kein Ding.
Problematisch ist es nur bei UI-Anwendungen,
wo nur der Main-Thread auf UI-Sachen
zugreifen darf.
Aber das finde ich ganz okay.
Okay, also weiter im Text.
Wie können wir das hier jetzt verwenden?
Wir brauchen diesen API-Endpunkt
alert-paged.
Dann rufen wir nochmal hier unser
API-Zeug auf, get-latest-alert.
var alert gleich
und wir übergeben
user-data-id,
haben wir überhaupt team-data?
Und team-id.
Das macht jetzt natürlich noch nichts, weil wir
das noch nicht programmiert haben, was das machen soll.
Dann awaiten wir das
und sagen dann alert
naja, das
returnt ja auch noch gar nichts.
Das soll returnen
ein alert
records
alert, nennen wir es mal so,
weil wir irgendwie aus irgendwelchen Gründen überall
Data hinten dran gemacht haben.
alert hat jetzt was?
Wie sieht so ein alert aus als
Antwort?
return
result
Das ist gerappt in irgendeinem
result drinnen, okay.
Die Musik ist mir gerade
zu anstrengend. Sekunde, ich brauche ein bisschen was entspannendes.
Ah, yes, excellent.
Viel entspannender.
Okay.
So, wie sieht so ein alert aus?
Also,
man kriegt als Antwort hier irgendwie
so ein Krempel results
und da drinnen ist dann
event-id, category-id,
name-id
ja, id ist glaube ich das interessante.
id
severity, auch nicht verkehrt.
Also, kopieren wir das mal. id
severity
text
title
Ja, das sind so Sachen, die nehmen wir mal.
Die sind glaube ich ganz sinnvoll bei einem alert.
Also, alert.
Was habe ich jetzt gesagt? id
hab ich ja noch kopiert.
id
text
severity
und
titel
Ja, den machen wir da vorne hin.
string title
So, dann versuchen wir das ganze doch mal
jetzt
irgendwie raus zu bekommen. So, und als task
geben wir den letzten, den aktuellsten
alert aus. Das kommt
hier alles raus, weil das brauchen wir nicht.
Das ist von dem anderen Krempel.
So, http client
post jason
wir brauchen
einmal die user-id
ok
user-id als was?
als query
string oder
oder im jason drin?
Ich bin verwirrt, wie muss das denn aussehen jetzt?
Im query string
muss das rein, ok.
Also, alerts
paged wollen wir haben.
alerts paged?
Ja, empty string.
Ich weiß nicht genau, was wir da übergeben
sollen.
Ich will erstmal gar nichts filtern.
Ich hoffe, wenn ich keinen Filter übergebe, dann ist es leer.
Max Results 100
das machen wir auch weg.
Äh, Moment.
Äh, Moment.
Fragezeichen, user-id
gleich
user-id
und
Max Results gleich
1. Reicht mir.
Der letzte. Fertig, aus.
Muss ja nicht mehr abrufen, als notwendig ist.
Gut, und da kriege ich jetzt
wir returnen einfach mal irgendwas leeres.
Ah, geht nicht. Mist.
Ach.
Die return null. Lull.
Genauso muss ich es nicht machen, aber ich will, dass es läuft.
So, Result. Was haben wir da jetzt?
Result
Content read
as string
Ok, schauen wir mal, was da ist.
Wie kann ich da zurückkommen, wenn ich das aufrufe?
Bin ich mal gespannt.
A non-empty request body is required.
The filter field is required.
Ok, also leerer Filter
ist nicht. Wäre ja auch
zu naheliegend, wenn leerer Filter
einfach gehen würde, ne?
Wir machen uns jetzt mal das Leben ein bisschen einfacher.
Quick, ups.
Moment, warum durfte
ich das dann löschen?
Wir lassen uns
jetzt aus dem
aus dem JSON
lassen wir uns jetzt
einen C-Sharp-Typ generieren.
Just types.
Ja. Ach komm,
das brauchen wir doch im Leben nicht alles, oder?
Da gucken
wir mal.
Alert Filter.
Ist auf jeden Fall nicht. Das da auf jeden Fall
raus. Das werde ich nie benutzen.
Die Seite ist wirklich nice, ja.
So, show personal.
Ok.
Dann übergebe ich das jetzt
einfach mal mit Default-Werten
und gucke, was passiert.
Also haben wir hier
var Filter gleich
new Alert Filter.
Es wird wahrscheinlich
crashen, weil er irgendeinen Mist serialisiert.
Aber gucken wir mal.
Ne, Projekt haben wir gerade nichts dargestellt.
Ich kann dir erklären, was wir machen.
Ok, watch.
Und?
Error. Ok.
Error getting alerts.
The remote server
returned 400. Bad request.
Ja geil.
Da weiß ich jetzt voll Bescheid,
warum das nicht funktioniert hat.
Weil Bad Request. Ok.
Wir übergeben mal
ein leeres JSON-Objekt, ok?
Ich checke nämlich nicht genau,
was die von mir wollen.
Wie das funktioniert.
Ach, da muss wirklich was drin stehen.
Hast du dir das hier angesehen?
Ja.
Das ist mein Fiat.
Vehicle Service
Records and
Maintenance Tracker.
Was muss ich da tracken?
Ich meine, ich gehe mit meinem Fiat
irgendwie, keine Ahnung, einmal im Jahr
dahin und... Passwort 1, 2, 3, 4.
Also so viele Autos,
dass ich das tracken muss, habe ich nicht.
Ich glaube,
das ist fast schon ein bisschen übertrieben
für
Alter. Wow.
Jetzt wollen sie es aber wissen.
Ein Kanban-Board für mein Auto.
Ja, ich muss es nicht übertreiben.
Ich weiß nicht.
Ich glaube, das ist nicht...
Ich bin auch nicht ordentlich
genug, sowas zu pflegen und außerdem weiß ich
gar nicht, was ich davon habe.
Sicherlich cooles Projekt, wenn man mehr
als ein Auto hat. Aber ich glaube, für mich
ist das Overkill. Ok.
Gut, Verbrauch ist
bei mir relativ easy zu sehen.
Weil ich lade das Auto
quasi ausschließlich daheim
an meiner Ladestation.
Und die Ladestation,
die trackt den Verbrauch.
Die kann man per MQTT oder
Rest-API integrieren in Home Assistant.
Habe ich auch drinnen.
Da habe ich sogar eine History über die letzten Lader.
Also ich glaube, das ist wirklich notwendig.
Bei mir ist das nicht.
Ich behalte es mal im Hinterkopf.
Es ist ja immer gut, dass es solche Projekte gibt.
Muss mal gerade hier über meine
Home Automation
Licht einschalten.
Jawohl.
Es ist schön, wenn man nicht vor dem Rechner aufstehen muss, um Licht
einzuschalten. Wisst ihr, früher in den
alten Filmen, da hatten die Leute,
die super reich waren, immer so das mit
Klatschen am Starten. Und ich dachte
mir immer in den Filmen, wo ich das gesehen habe,
dachte ich mir immer, so ein Scheiß.
Ich klatsch doch nicht, damit das Licht angeht.
Ihr kennt das vielleicht aus
alten Filmen. Da lagen die
immer im Schlafzimmer und haben dann geklatscht.
Dann ging das Licht aus. Richtig
total dummes Feature.
Wie das ist in der heutigen Zeit,
finde ich das viel angenehmer.
Ich kann beispielsweise einfach hier auf meinem
Home Assistant Dashboard das Licht
anklicken im Arbeitszimmer. Und dann geht das
Licht an. Das ist mir viel lieber als Klatschen
und noch viel lieber als
Hallo,
setze x-beliebigen Namen des Sprachassistenten
ein, bitte Licht im Arbeitszimmer einschalten.
Ich will einfach
was klicken. Ich bin mit auf dem Dashboard
klicken oder noch besser
irgendwas tippen in der Kommandozeile
so viel schneller und angenehmer unterwegs,
als Sprachassistenten oder geklatsche.
So, aber was muss ich denn jetzt hier übergeben?
Dieses gesamte Ding hier
wahrscheinlich nicht, oder?
Okay, ich wollte gucken, was ist, wenn man ein
leeres JSON Objekt übergibt.
Das geht nicht, weil
Path.
The Filter
Field is required.
Darf ich da kein String hier übergeben?
New Object.
Hey, das funktioniert.
Okay,
man kann den Filter leer lassen, das ist schon mal nice.
Man kann den Filter
leer lassen.
Da kriegt man, guck mal, hier sehe ich auch mein Alert hier.
Disk Space größer gleich 5.
Das ist aber der Alert von,
ja, das ist der Alert von gestern,
den ich da gestern mal testweise eingestellt habe.
Hat funktioniert.
Du wolltest erklären, was
das Projekt macht. Ja, ich habe das heute schon hundert Mal
erklärt, aber ich kann es nochmal erklären, und zwar
bei mir auf der Arbeit haben
die sich für Monitoring Alert
Messages so, ja, also
zum Beispiel
Achtung, Service XY
kritische
Monitoring Meldung
auf Server A
ist Festplatte nur noch zu 10%
frei, so. Und die wurden bisher
bei mir auf der Arbeit per SMS verschickt,
und jetzt haben die sich so ein
Weißt du eigentlich auch, welches Monitoring?
Ja, weiß ich. Da muss ich oft genug drin rumklicken.
Ein Monitoring,
was mir nicht gefällt persönlich,
verwenden wir. Und nein,
das ist nicht PRTG.
Das würde mir auch nicht gefallen, weil es auf Windows
läuft. Ja.
Und die haben sich jetzt dafür entschieden,
nicht mehr SMS zu verwenden, sondern
die haben sich von diesem
Anbieter, von dem ich noch nie was
gehört habe,
jetzt irgend so ein Abo gekauft,
für Push-Notifications auf die Handys der Leute,
die Rufbereitschaft haben, beispielsweise
nachts.
Und ich habe jetzt ein Tool gebaut, was,
ich kann das ja mal zeigen,
wo du zum Beispiel sagen kannst,
wenn deine
Schicht startet, also Schicht heißt nicht,
dass du was machen musst in 99% der Fälle,
sondern nur, dass du theoretisch, wenn du irgendwo
eine kritische Meldung kriegst, nachts auch
eine Message bekommst, was sehr selten vorkommt.
Da kannst du jetzt zum Beispiel sagen, hier,
Schicht starten,
also Zeiterfassung,
im Endeffekt, das kommt noch aus
Zeiten, also ich habe das
Punch-In genannt, weil das bei dem Anbieter
so heißt. Du kannst sagen, hier,
ich steche mich jetzt ein in die Rufbereitschaft
bis 17.30 Uhr.
Wenn du das ausführst, dann
wirst du angemeldet
und siehst
hier unten im Timer, wie lange du noch
hast, bis deine Rufbereitschaft
zu Ende ist. Und wenn die Rufbereitschaft
zu Ende ist, lockt dich das Tool dann automatisch
wieder aus, dass du keine Nachrichten mehr kriegst.
So, und was ich jetzt probiere ist,
dass das Tool nicht nur anzeigen kann,
deine Schicht ist zu Ende in
3 Stunden, sondern wenn Alerts
reinkommen, die auch
auf der Kommandozeile beziehungsweise
present notify ans System schickt.
Offizielle Quelle
für Notification ist natürlich nach wie vor
die App von denen,
aber sowas auf dem Desktop zu haben ist doch gar nicht
so schlecht.
Funktioniert das auch über Mitternacht hinaus? Ja, ja,
funktioniert. Ach so
meinst du? Ja, ja, das funktioniert auch über
Mitternacht.
Wieso Kommandozeilen UI beste?
Du kannst, wenn du das machen
willst, also sagen wir mal, du willst
jetzt bis heute Nacht um 2 Uhr
das ganze machen. So, da kannst du
eingeben 2 Uhr 30, aber,
dir wird vielleicht was auffallen, jetzt gleich, wenn ich das
ausführe,
der sticht dich gleich wieder aus,
weil 2 Uhr 30 in der Vergangenheit
liegt. Es gibt 2
Möglichkeiten, wie man das fixen kann.
Entweder ich würde den Programm
den Ablauf
ändern, so nach dem Motto, wenn das
Datum in der Vergangenheit ist, dann nimm einfach
morgen
um diese Zeit.
Das habe ich aber absichtlich
nicht gemacht, weil
das führt schnell zu
Fehlern. Stellt euch mal vor, irgend
jemand sagt, hier
ich hätte, würde das gerne 5 Minuten
laufen lassen und geht jetzt
AFK und kommt um
15 Uhr 1 wieder und führt das
aus und dann ist er
eingeloggt bis
morgen um 15 Uhr.
Das ist vielleicht keine allzu
gute Idee. Deswegen
kannst du folgendes machen, wenn du sagen
willst, ja, ich möchte,
morgen nachts
2 Uhr nachts, dann kannst du
einfach sagen,
13.02.
2 Uhr nachts. Ups, da musst du
glaube ich sogar sagen 2024, dass es
funktioniert. Oder vielleicht auch
nicht.
Oder vielleicht
auch. Ich hätte
wetten können, das funktioniert so.
Ich bilde mir ein, ich habe das sogar
schon mal ausprobiert, dass das funktioniert.
Geht das nicht, weil du schon angemeldet bist?
Oder kann das gar nicht parsen?
Okay, ich bin mir nicht sicher, wie man das
gescheit eintippen muss.
Probieren wir das doch mal kurz aus.
Date, Time, Parse.
Vielleicht ist auch das
Format falsch. Ich bin mir da nicht
sicher. Also, was er auf jeden
Fall parsen kann,
ist sowas wie 11 Uhr
11, 11, weil ja gerade die ganzen
Fahrschirmsleute unterwegs sind.
Also das wird auf jeden Fall funktionieren.
So. Das
checkt er.
Warum funktioniert 12.02.
2024 nicht?
Ich bilde
mir eigentlich ein. Das geht doch.
Nein, das ist die Ausgabe
davon.
Ich könnte auch hier sagen,
total seconds oder so.
Ne, ne, ne, das ist die Ausgabe. Hier siehst du was geparst.
Moment, warum geht das da
und bei mir funzt das nicht?
Hä?
Leute, ihr habt doch gerade gesehen, dass es funktioniert
ohne Slashes.
Ich bin, ich bin, ich bin sehr verwirrt
jetzt. Warum?
So, wir machen mal, wir legen mal kurz was
zum Testen an. Moment.
Das Cackle Command, ja?
So. Das kriegt nur
nen Date, Time
mit dem Namen Lul.
Und macht gar nix.
Außer Lul
auszugeben. Okay?
Ah. Cackle
Command Option Lul.
Option Lul requires
Date Time Value. Cannot
be converted. Hä?
Warum?
Jetzt blick ich schnell durch. Warum
funktioniert das hier, wenn ich
von Hand sage, pass?
Warum funktioniert das,
wenn ich's von Hand sage, pass?
Hä?
Hä? Das ging doch eben noch.
Ach.
Ich weiß, woran das liegt.
Weil der Ami Datum benutzt.
Deswegen geht das nicht.
Das hier vorne ist nicht der Tag,
das ist der Monat.
Warum ist das
überhaupt, warum ist das überhaupt default
schon wieder? Ja, es hätte
dir auch mal echt sagen können.
Warum ist so'n bescheuertes, warum ist
das schon wieder so'n dummes Zeug, hä?
Warum macht der Ami, Ami Format?
Okay, wie kann man das, wie kann man
das, wie kann man das dem Pass dann sagen?
Dem kann man doch bestimmt sagen, Location
hier, Culture Information.
Ne, Pass exakt, da musst du sagen,
wie's, wie's aufgebaut ist.
Das will ich ja net.
Ich will schon, dass er
bisschen variabel ist.
Checkt der denn, Moment,
kann der denn auch ohne
Jahreszahl
das Ganze parsen?
Ne, gell? Das, das checkt er net.
Ne, ohne Jahreszahl geht das
nicht, er muss 2024 dann da hinten schreiben.
Ja, okay.
Aber, man kann dem doch
bestimmt sagen, also wenn das jetzt nicht
funktioniert mit 13.2.,
man kann dem
ja schon sagen, hier irgendwie,
ähm, welches davon
ist denn jetzt das richtige?
Culture Info? Moment, es gibt
doch, es gibt doch Environment,
Current, ne, oder
Culture? Ne, oder
ähm,
na, die hab ich wahrscheinlich nicht gesetzt hier.
Culture Info?
Invariant Culture?
Ne, Invariant Culture ist
ist, ist, ist Ami Datums
Format. Ja.
Was ist denn? Was, Moment,
was ist mein, was ist denn meine Current Culture
eigentlich?
Hab ich mir noch nie angeguckt, was steht denn da drinnen?
E-N-U-S, selbstverständlich.
Was sonst?
Okay, Culture Info,
wie benutzt man den Krempel jetzt überhaupt?
String Name, okay, kann man
da sowas machen wie D-E,
D-E-D-E?
Geht das?
Äh, anscheinend?
Sobald du sowas
machen musst, ist das immer eklig.
So, und jetzt? Checkt das jetzt?
Aha!
Guck mal da!
Vom Code auf den nächsten Tag ändern lassen.
Ja, das stimmt. Aber trotzdem ist es halt schlecht,
wenn er das frisst.
Anstatt komisches
Kokona Datums Format.
Warum steht da noch
AM? Weil das die Ausgabe
ist, die ihr seht. Das ist wie
das passt. Wenn ich das
jetzt ausge, also ich kann wahrscheinlich, kann man
eigentlich Current Culture
Info, kann man das irgendwie setzen?
Kann ich sowas hier sagen?
So?
Ja, guck, jetzt macht das auch nach
deutscher Ausgaben
stets. Vielleicht soll ich das
prinzipiell einstellen mal, wenn ich hier mit
Datums Sachen rumhantiere.
Culture Info sollte ein Pflichtparameter
bei der CLI sein. Boah, das ist doch
abfuck, das gibt doch keiner gerne ein.
Also man könnte das,
man könnte das vielleicht überschreibbar machen,
aber Default ist
Deutsch. Ja, das ist schon mal
nicht verkehrt, das wusste ich nicht.
Dass man das damit umstellen kann.
Wartet mal kurz.
Jetzt haben wir uns aber ein bisschen sidetracken lassen,
weil das eigentlich vollkommen
irrelevant ist für das, was wir gerade machen.
Hält mir nur gerade so ein, ja.
Wir sind stehen geblieben bei
Watch. Die Aufgabe
ist neue Notifications abzufragen.
Okay.
Notifications abfragen funktioniert ja
schon mal. Einmal in der Sekunde
werden wir wahrscheinlich relativ schnell geblockt. Vielleicht
machen wir das alle 5 Sekunden oder so.
So, was ich checken wollte noch,
ist, ob man das nicht irgendwie
filtern kann. Und zwar
nicht mit diesem gesamten. Probieren wir
nochmal, ob wir nach
Team-IDs filtern können.
Okay.
String. Also ich übergebe
ja sogar Team-ID. Eigentlich
ganz gut. Hier Team-ID.
New
Team-ID. Jetzt können wir ein neues
Feature verwenden, was ich sehr nice finde
von .NET 8. Und zwar
man darf das hier jetzt weglassen. Guckt mal.
Jetzt sieht das fast ein bisschen aus,
so kann man, also man darf in .NET 8 Arrays
jetzt so schreiben. Das sieht fast
ein bisschen aus wie in Ruby.
Oder in manch anderen
Programmiersprachen.
Wobei das nicht exakt das gleiche
ist, muss man dazu sagen, wie in einem Array.
Weil,
guckt, das funktioniert
nicht.
Das funktioniert nur an Stellen, wo
der weiß,
was für ein Typ erwartet wird.
Also das ist jetzt nicht, dass
der hier checken würde,
ey, der will ein String Array.
Das verstehe ich
nicht ehrlich gesagt, warum er nicht
gesagt hat, ey, Default ist dann halt
ein Array. Aber das
funktioniert für alle möglichen Collections.
Das muss man sagen, da haben
sich die .NET Leute wirklich was
bei gedacht. Gehen wir mal von aus.
Wir haben jetzt hier irgendeine
ja, Void
Blub Funktion.
Die,
nimmt einen String Array.
Null. So. Wenn ich das
jetzt aufrufe,
Blub. So. Und sag
New. Das checkt ja
Rider schon an der Stelle. So, hier
New Cackle. Da sagt Rider,
ah ne, brauchen wir nicht, kannst Collection
Initializers benutzen. So, ne oder
wie heißt der Krempel?
Wie heißt das?
Collection Expression.
Bitteschön. So.
Das kann man machen. Das geht an der Stelle.
Weil .NET weiß, die
Funktion Blub erwartet einen
String Array Parameter.
Es wird aber noch besser. Die sind
relativ schlau, wenn das Ding
eine Liste erwartet aus
String, dann funktioniert
das auch. Dann macht er hier draußen eine Liste.
Wenn das Ding eine,
tja, was auch immer. Denkt
euch irgendwelche komischen Collection Typen aus,
dann funktioniert das. Und selbst
IEnamorable
funktioniert. Das ist
wirklich nice. Du kannst quasi
egal welche Funktion,
irgendwelche Collections
als Parameter haben, kannst
du die mittlerweile abkürzen. So. Das geht
dann nur an Stellen, wo
C-Sharp weiß, bzw. .NET weiß,
welcher Parameter, also welcher Typ
der Parameter haben soll.
Ist eigentlich ganz cool.
Das finde ich persönlich eines der besten Features
in .NET 8. Das erspart ein bisschen
sinnloses Getippe. Ok.
Also übergeben wir mal Filter
an der Stelle und gucken, ob es immer noch funktioniert.
Ok. Zack. Filter.
Und? Tut's? Nein.
Nice. Es tut immer noch. Habe ich da
nicht eben was mit
mit Search Text
sogar gesehen? Wir testen jetzt mal was.
Wir schicken uns mal,
wir schicken uns mal eine Message. Nein, nein.
Wir liegen
ja exakt genau da.
Wo wohne ich denn heute angeblich?
Aha.
Alles klar.
Ok.
Ne, beim Krankenhaus in Hanau wohne ich heute angeblich.
Gut.
Also.
Hast du gegebenfalls das
AP Rate Limit im Auge?
Ne, weil ich keine Ahnung habe, was das
AP Rate Limit ist.
Limit?
Die schreiben mir nichts zum Limit.
Aber ich denke, wenn man eine Abfrage macht,
alle 5 Sekunden ist das ok.
Ok. Wir schicken eine Nachricht
an
Kategorie
IT
emergency
Emergency ist das.
To all team members
Zumindest schreiben wir rein
Subject
Machen wir mal was realistisches.
Wir schreiben rein
ähm
Warning
Service
Tech W
Service
is down
Text
Keine Ahnung. 5 Pings
am Stück
Kaputt.
Ist egal, was wir da reinschreiben sollen.
Das schicken wir uns jetzt mal.
Send
Ok. Das kam jetzt als
Notification rein.
Meine Kategorie hat sich verändert.
Ne, ist mir wurscht.
Ok. Und jetzt gucken wir mal,
ob die hier drinnen auftaucht.
Die Notification.
Ist die das?
5 Pings am Stück kaputt. Ok. Nice.
Heißt im Endeffekt
auch. Moment. Wir gehen mal kurz hoch.
Und zwar
hier kann ich jetzt auch schon mal ein bisschen was ausgeben lassen.
So hier. Alert
Titel
und sagen wir mal Alert
Text. Ja. Geben wir
das mal aus an der Stelle?
Äh. Hä?
Achso. Ich serialisiere das
Ganze ja noch gar nicht.
Ich gebe einfach aktuell im
Display ne Jason Zeug aus.
Ok. Dann geht das noch nicht.
Richtig pfeifert. Na verkaufen tu ich
das denen nicht. Ich verwende das da
einfach. Wenn das jemand anderes auch verwenden will,
kann das ja machen.
So. Ähm. Ich wollte gucken,
ob der Filter funktioniert. Genau.
Weil ich hab gesehen, dass es hier
in dem Filter irgendwas gab
mit Suchtext. Guckt mal.
Hier. Text to search.
Das ist natürlich extrem nice.
Wenn man Beispiel. Stellt euch
mal vor, ihr seid zuständig
für System XY.
Und ihr wollt von Notifications wirklich
nur die für euer System haben.
Da könnt ihr einen Suchtext angeben.
Das wäre doch nice, oder?
So. Machen wir mal hier. String.
Text to search.
Hmm. Severity.
Ja. Ich würde sagen, sobald es ne Meldung gibt,
ist das wichtig. Können wir immer noch.
Könnte man. Kann man immer noch einbauen.
So. Und jetzt.
Moment. Jetzt haben wir
hier. Text to search.
Machen wir nochmal hier.
Text to search. Gehen wir mal testweise.
Machen wir das ein, was nicht drinne steht. Also.
Ähm. Omega 0
Keck W. Steht da zum Beispiel
nicht drinne. Gucken wir mal.
Jetzt müsste es leer sein.
Ja. Keine Results.
Und jetzt geben wir mal ein.
Was haben wir gerade veröffentlicht? Hier.
Keck W
as a Service. Keck W
as a Service.
Und jetzt findet er es. Das ist cool.
Das finde ich nice.
Dann gibt es hier gleich noch. String.
Äh. Search Text.
Der ist standardmäßig leer.
Aber den kann man.
Da kann man nachfiltern. Das finde ich schon mal.
Das finde ich schick. Das gefällt mir.
Standardmäßig ist das leer. Und er gibt jetzt die
Message weiterhin aus. Okay. Gut.
Nice. Nice.
Und jetzt. Jetzt müssen wir das irgendwie
parsen. Das was da zurück kommt.
Da kommt was. Da kommt
Alert Zeug zurück.
Ähm. Sekunde.
Warte mal. Ich muss das mal ordentlich formatieren.
JSON
Object Parse.
Ne.
J-Object.
JSON Object Parse.
Leute. Haben wir immer noch
Newtonsoft JSON Enjoyers?
Ich benutze das immer noch lieber als.
Das ist das jetzt. Das Standard.NET
JSON. Ich benutze das immer noch lieber als das
Standard.NET JSON.
JSON. Sorry.
So. Jetzt haben wir es mal schön. Schön
geprintet. Okay.
Da kommt nicht einfach nur die Alerts
zurück. Sondern da kommt
irgendwie so ein komisches JSON Objekt mit
Results drinnen zurück. Das heißt.
Wir können jetzt hier nicht einfach sagen. Parse mir
das mal. Als Alert.
Sondern. Ist noch ein Result
drin. Das ist ja doof.
Ich glaube man kann.
Read as JSON
Object hier machen. Oder sowas.
Ja. Read from
JSON Async. Achso.
Ja. Ne. Direkt. Direkt in ein.
Kann man hier vielleicht
ein Parameter übergeben?
Wisst ihr. Am liebsten hätte ich gesagt.
Les mir das mal in Alert
Data in ein Alert Data Array ein.
Das wird aber nicht funktionieren.
Weil mein Alert Data Array ist
innerhalb von einem Results Object.
Schade. Dass es
nicht sowas hier gibt. Results.
Dass man dem jetzt sagen kann. Ey.
Les mal alles
unterhalb von diesem Key ein.
In Alert Data.
Gibt jetzt zwei Varianten. Wir machen
eine Extension Method. Oder.
Hast du schon was mit Rust gemacht? Ja.
Sogar im Stream. Noch gar nicht so lange her.
Wisst ihr was.
Ich weiß was wir machen.
Wir machen jetzt Easy Mode.
Alert Data.
Alert Data Array.
Und
das hat eigentlich nur
eine. Ein Feld
was sich Results nennt.
Und darin ist Alert Data. Ok.
Und
das müsste sich jetzt eigentlich
serialisieren lassen.
Wenn ich Glück habe. Nein. Fuck.
Shit.
Das wäre jetzt auch zu einfach gewesen.
Wenn das einfach funktioniert.
Hä? Heißt das Results?
Oder Result?
Results.
Ähm. Warum?
Warum lässt sich
das. Ok. Wir machen das mal weg.
Aber nur die ID. Weil die ID hat das ja
auf jeden Fall.
Ist das Case Sensitive? Ne.
Ich glaube standardmäßig ist
der .NET Serializer so schlau und
checkt das Groß und Kleinschreibung
solange es gleich heißt. Egal.
Alles.
Ach das funktioniert mit ID.
Steht denn da jetzt auch was drinne?
Ja.
Alerts. Gleich.
Zack. Alerts.
First. Ja. Results.
First. Ok.
Da steht auch die ID drinne.
Hä?
Das verstehe ich jetzt nicht. Was hat er
für Schmerzen? Was erzählt
er uns denn?
Jason value could not be converted
to alert data.
Path. Results. Severity.
Line number 0.
Byte position.
Severity.
Wo haben wir denn?
Beispiel
Anzeige.
Severity.
Ach.
Oh Mann. Da soll mal einer drauf
kommen. Alter.
Seht ihr es? Chatge.
Chat. Wer sieht es? Ich glaube zumindest
dass es das Problem ist. Wer sieht es?
Wem fällt
es auf? Warum es nicht funktioniert?
Woran könnte
das liegen?
Severity 0. Na 0 ist nicht das Problem.
Das Problem ist, dass ich
dem sage, dass es
ein String ist. Und das muss natürlich
ein int sein. Wahrscheinlich sogar ein
uint. Wobei das in dem Fall egal ist.
Ich gehe mal davon aus, dass 0
das kleinste ist, was geht.
So. Werden wir jetzt funktioniert?
Eats.
Guck hier.
Ah. Wir müssen noch was anderes machen.
Und zwar
klauen uns das hier unten mal kurz.
Dass das ordentlich
abbricht.
So. Und das machen
wir jetzt. Alle 5 Sekunden
reicht. Ok. Wir wollen mal die API nicht zu sehr
spammen. Ok. Das funktioniert
aber. Jetzt als Desktop
Notification. Ja Moment. Moment.
Erstmal müssen wir checken, ob es überhaupt eine neue
Notification ist. Also.
Ja. Kann schon
sein. Also.
Wir holen uns die Alerts.
Lass mal überlegen. Wie machen wir das denn jetzt gescheit?
Wir holen uns die
Alerts. Dann holen wir uns
hier drinnen nochmal die Alerts.
Und jetzt gucken wir.
Latest Alert. Ok.
Ah Moment. Returne ich das überhaupt schon
hier unten? Ne.
Mach ich gar nicht. Hier.
Return Alerts First.
Zack.
Und selbstverständlich sind wir enorm sicher, dass
das nie 0 ist. Kann nicht 0
sein.
Naja. Wobei. Naja. Doch. Kann halt
schon 0 sein, wenn der Suchtext beispielsweise
nicht.
Ja gut. Dann kann das.
Dann ist es ok, wenn das
0 ist.
Ja. Es ist ok, wenn das 0 ist. Denke
ich. In dem Fall ist es
denke ich vollkommen in Ordnung, wenn das 0 ist.
Da müssen wir nämlich einfach gucken, weil
ja. Ja.
Das macht schon Sinn.
QuickType heißt das.
Ja. QuickType.
I.O.
Du kannst ja noch mehr. Das kann mehrere Sprachen. Du kannst ja noch mehr
generieren lassen. So 100%
geil ist es nicht. Also das würde ich so nicht
schreiben, aber das ist zumindest
mal so zum rein Copy-Pasten ganz ganz nett.
So. Ok. Also.
Wir gucken alle 5 Sekunden
nach, ob
der Latest Alert die
gleiche ID hat
von dem letzten Alert.
Also ID ungleich. Ungleich.
Also wenn die Latest,
wenn die Alert ID vom
Latest Alert
gleich ist, dem
eh. Ungleich.
Ungleich ist
der neuen
Alert ID. Dann weiß ich, dass ein neuer
Alert reingekommen ist.
Und dann gebe ich den ganzen Kram
hier aus. Aber vorher machen wir nochmal
gescheite
gescheite Textausgabe
und zwar Spectre
Console. Wir machen jetzt eine
naja
wir machen jetzt eine Tabelle.
Table, das schicker aussieht.
Guck mal hier. Table.
Jawoll, das will ich haben.
Create
Table. Ok.
Funst
das jetzt?
Ja. Ja. Ok.
Table. Also Add
Column. Äh.
Moment. Wie mache ich denn das jetzt?
Wie will ich das überhaupt haben?
Ja doch. Ich will hier
oben den Titel drin stehen haben.
Hier steht der Titel. Hier
ja.
Hier sieht keiner an. Critical oder sowas.
So. Und dann will ich keine zweite
Column. Und dann will ich hier
einen Text haben mit dem
ja. Also theoretisch will ich hier
Alert Text
und hier
Alert
Title.
Schauen wir mal, ob das jetzt schon funktioniert.
Das ist doch gar nicht
mal so übel, wenn ich mir das so
angucke. Oh ganz wichtig.
Leute, ganz wichtig. Emoji.
Wir brauchen ein
Alert.
Ne wie heißt, wie heißt das rote
oder Police
Police?
Hier. Ja. Ja.
Das
Police Car Light. Das brauchen wir.
Ob ich richtig tippen könnte.
Alter.
Und
jetzt haben wir da ein Alert Symbol davor.
Guck mal.
Das ist doch schick, oder?
Das gefällt mir.
Jetzt hat man
schon mal eine ordentliche Konsolenausgabe.
Warning Service Cag
WS Service ist down. Fünfmerksam
Stück kaputt.
Ich finde, das sieht gar nicht mal übel aus.
Dann noch ein Notiz
Icon für die nächste Zeile.
Okay. Ja. Ja.
Ja.
Kann man den Writer nicht sagen? Macht
er ein
populated Text oder so draus irgendwie?
Wie hast du das
Smile hinbekommen? Du meinst das
Emoji hier oder was?
Oder wie? Ich habe das einfach copy-pasted
gerade. Ich habe einfach
ein Emoji hier rein copy-pasted.
Nur als
Escape Sequence. So.
Was haben wir denn hier bei Emoji? Notes?
Book?
Open Book? Notebook?
Was gibt es denn für schöne
oder Pen vielleicht? Pen?
Memo.
Das ist glaube ich ganz gut.
Das gefällt
mir. Das hat was. Das lassen
wir so. Leute, wie findet ihr das besser?
Mit zweimal einem
Icon oder nur mit der Überschrift
ein Icon? Also was findet ihr besser? So
oder so?
Also erstes oder zweites?
Ich finde, es ist fast ein bisschen schlecht
lesbar, wenn da auch ein Icon davor ist.
Eins.
Okay. Die meisten
ehrlich gesagt eins.
Ich persönlich tendiere auch zu eins.
Eins.
Okay.
Ich finde auch, dass eins schöner ist.
Ja. Einfach
hier, da weißt du, Achtung, da lenkt dich nichts
vom Text ab hier unten. Okay.
So. Dann
müssen wir das nur noch ordentlich bauen. Und
zwar
If
Alert ID
ungleich
Latest Alert ID
dann geben
wir die Tabelle aus.
Was macht er mit sehr langem Text?
Das ist
eine berechtigte Frage.
Ich habe keine Ahnung, wenn ich ehrlich bin.
Lass uns das mal ausprobieren.
Ah, okay. Sind wir
mal ein bisschen realistischer, die Wörter.
Ich facerolle mal ein bisschen.
Okay. Bester Text.
Moment, der hat das nicht in Lorem
Ipsum Generator sogar drinnen?
Der bricht um. Okay, der bricht um.
Der checkt es. Der ist high IQ.
Jetzt sind hier Lorem
oder so.
Hat
IntelliJ bzw. Rider
nicht?
Ne.
Da gibt es so ein Plugin zu, okay.
Ne, doch.
Ja, wie ist Code hat das?
Das weiß ich nicht. Ah ja, WebStorm kann das.
Na gut.
Ich dachte, vielleicht haben die das ja auch drinnen.
So.
Das ist ein
Muss ich jetzt nochmal erklären.
Also, wir haben auf der Arbeit
einen neuen
Push Notification Anbieter.
Also sprich, wenn unser
Monitoring sagt, Server down, dann gibt's
ne Push Notification Nachricht, wenn du beispielsweise
Rufbereitschaft hast
nachts, dass du ne Message kriegst. Die sind jetzt
von SMS auf Push Notification
umgestiegen und die haben sich für diesen Push
Notification Anbieter entschieden.
Ich hab von dem noch nie was gehört vorher.
Zumindest baue ich grad
ein Kommandozeilen-Tool dafür,
damit man, die haben auch tatsächlich ne ganz brauchbare
API, damit man sich
erstens Notifications auf der
Konsole anzeigen lassen kann
und zweitens man
seine Schicht, beziehungsweise seine
Rufbereitschaft automatisch starten und stoppen
kann. Ich kann zum Beispiel
jetzt sagen,
meine Rufbereitschaft
fängt an und die ist
aber morgen
um
keine Ahnung, 6 Uhr fertig,
dann lockt mich das automatisch wieder
aus und ich werd nicht nach 6 Uhr noch
Rufbereitschaft, ohne dass ich selbst
auf dem Handy, sagen wir mal, die
Notifications wieder ausschalten muss.
Dann kann ich einfach weiterpennen.
So, jetzt probier ich gerade auf der Konsole
mir Notifications anzeigen zu lassen.
Ok, also Zeilenumbruch funktioniert,
das haben wir ausprobiert.
Alert Text.
Ok, dann machen wir das doch mal hier rein.
Also, wenn die neue ID
ungleich der alten ID ist, dann heißt das,
es gibt ne neue Notification.
Vorher sollten wir vielleicht noch checken,
ob das 0 ist.
Ja, wir checken,
ob das 0 ist.
Wir gucken einfach irgendwie,
wobei mir das echt nicht gefällt.
If Latest Alert
ähm,
If Latest Alert
0
oder
Alert
Moment,
nee, nee, nee, nee,
das ist ja blödsinnig.
Wenn Latest Alert 0 ist,
dann
machen wir,
boah, das ist das,
deswegen sackt 0 einfach an der Stelle.
Das macht jetzt den kompletten Flow irgendwie
durcheinander.
Also theoretisch müsste ich das,
theoretisch müsste ich das hier drinnen gucken.
If, das ist das
und dann müsste ich quasi vorher gucken,
weil es ist ja durchaus ok,
es ist ja durchaus ok,
wenn Alert 0 ist,
weil wenn Alert 0 ist,
dann,
und das nächste nicht 0,
dann ist es halt eine neue Notification,
weil es die erste ist.
Hier Max zum, was?
Achso!
Also wir haben auf der Arbeit,
ja, das ist gut, gut, gut, dass du das geklippt hast,
das kann ich das nächste Mal vorspielen einfach.
Aber eigentlich wollen wir ja nur gucken,
ob Latest Alert
ungleich 0 ist, ok?
Und das,
ja, das passt so glaube ich.
So.
Oh, da ist der Max-Alert-Titel, by the way.
Dann passt das, dann passt das auch.
Ok, füllen wir es mal aus.
Er sollte eigentlich nichts ausgeben.
Ja, ist auch gut so, dass er nichts ausgibt.
Vielleicht sollten wir noch
eine Notification, einen Spinner
oder so anzeigen.
Das machen wir jetzt auch.
Aber ergibt doch Sinn, oder?
Also sprich, das hier kann 0 sein,
wenn das 0 ist, heißt das, es ist einfach noch keine Nachricht
da gewesen bisher, kann ja sein, beim ersten Mal
oder so, wenn noch keiner Notifications geschickt hat.
Ah ja gut.
Ok.
Also.
Dann können wir das nochmal ausprobieren.
Wir zeigen erst nochmal einen Spinner an.
Nehmen wir das mal.
Wir zeigen einen Spinner an, wenn der
wartet auf
Notifications.
Nehmen wir mal hier die Schleife raus.
Kannst du das Notifications-Abrufen
noch zeitlich limitieren, also alle
nach Punch-In?
Der zeigt eh nur
nach Punch-In an.
Beziehungsweise, der zeigt davor keine an.
Das ist die erste Message,
die sich geändert hat, also eh nur seitdem
du das Kommando ausgeführt hast.
Aktuell zeigt er noch alle an,
auch wenn du nicht Punch-In bist.
Das ist aber auch bei einem Watch-Command sinnvoll.
Wir müssten noch theoretisch
bei Punch-In sowas einbauen
wie "-watch".
Oder sowas, ja.
Sowas müssten wir noch einbauen.
Dass er das dann hier drinnen
macht, im Anschluss.
Ja.
Können wir dann mal Gedanken drüber machen.
Okay, diesen ganzen Krempel,
den schmeißen wir hier raus.
Task selbst brauchen wir auch nicht.
Äh, eine Task
Description.
Könnten wir
sagen wir hier, waiting
for alerts.
Schauen wir da einfach mal rein.
Waiting for alerts.
Okay, das müsste eigentlich funktionieren
jetzt. Watch.
Boah!
Magic! Alter! Magic!
Ist das nicht nice? Guck mal hier!
Jetzt haben wir sogar noch einen Spinner am Start.
Waiting for alerts.
Und jetzt schicken wir uns mal einen Alert
und gucken, ob das funktioniert.
Oh, wir schicken uns jetzt
einen neuen Alert.
Ja, wir schicken uns den gleichen Alert, den wir eben schon mal hatten.
Send. Und fünf Sekunden später...
Da ist er!
Zack!
Äh...
Ah!
Ich weiß warum.
Kack-Noob-Fehler.
Und zwar muss
Alert, Alert am Ende
der Streife gleich Latest Alert gesetzt
werden. Sonst
funzt das nicht. Okay, nochmal
starten.
Senden.
Alert am Start und
jetzt kommt kein neuer
Alert mehr. Excellent!
Ja, sehr schick.
Und jetzt das Ganze noch per System Notifications.
Also System
Notifications heißt im Endeffekt
wir machen jetzt sowas.
Ähm...
Process.
Process.
Ah, da ist kein...Process.
Start.
Start. Ähm...
Und jetzt kann ich mir nicht mehr...Send.
Wie heißt dieser Kempel? Send.
Ich weiß nicht, was das ist, aber das
wollte ich nicht wirklich haben. Send Notify.
Heißt das.
Send Notify.
Kackel.
Nur mal testen, ob es funktioniert.
Ich starte den hier mal am Anfang,
ja, um zu
testen, ob da irgendwas sich tut.
Ja, okay, das hat funktioniert.
Dann
machen wir das jetzt hier rein
und sagen jetzt Notify. Send.
Alert.
Wie hast du den Spinner gemacht?
Ja, der Chat hat es ja schon
halbwegs erklärt. Der Spinner ist
mit Spectra Console gemacht. Das
funktioniert so. Es ist kein
Spinner, es heißt Progress.
Es gibt auch einen Spinner.
Nee, Status heißt es da.
Da kannst du aber nicht so viel mitmachen.
Muss das nicht Latest Alert
sein? Was denn?
Ja, muss es.
Aber das ist ja auch noch nicht fertig.
Du kannst hier sagen,
das ist halt diese
globale Klasse von Spectra Console, wie das
heißt. Punkt Progress.
Autoclear ist wichtig, dass es danach wieder weg geht,
wenn es fertig ist. Columns.
Da kannst du einstellen, wie die Spinner aussehen
sollen. Ist eigentlich ganz cool. Es gibt mal
ganz, ganz nice Optionen.
Guck mal, gibt es hier sogar eine Seite, wo man
sich angucken kann, was es hier alle gibt.
Was es alles für Spinner gibt.
Kannst hier
die unterschiedlichsten Wartedinger
bauen. Hamburger.
Eigentlich ganz nice, oder? Was sie da alles
eingebaut haben. Hier fehlen mir
irgendwelche UTF
Unicode Zeichen.
Bouncing Bar ist auch cool.
Mal gucken, ob es das bei mir gibt.
Schaut mal. Bouncing
Bar. Guck.
Sind die alle so schnell?
Die Geschwindigkeit
kannst du irgendwie auch regeln.
Fragt mich aber nicht, wie.
Ne. Also ich
hab aktuell Dots 12.
Pissed Pump.
Ah, das haben die gar nicht. Okay.
Wir lassen mal das Standard Ding.
Okay. Latest
Alert Send.
Jetzt ist das Ding.
Kann
Notify Send.
Ach, der Text interessiert doch eh keinen, oder?
Wir machen den Titel und wer es dann
genau wissen will, muss halt den Browser öffnen
und sich das angucken.
Also Latest
Alert.
Ups. Titel.
Und davor ganz wichtig,
dass
die Sirene.
Okay. Watch. Jetzt bin ich mal gespannt, ob das funktioniert.
Waiting for Alerts.
Send.
Äh.
Oh.
Oh.
Invalid number of options.
Fuck. Was hab ich falsch gemacht?
Ah.
Ich geh davon aus, wegen dem Leerzeichen hier.
Vielleicht müssen wir das
Quoten.
Quoten wir das?
Wenn wir das Quoten, geht das dann?
Notification.
Ist das nicht nice?
Notification am Start.
0 W.
Send.
5 Sekunden Timeout im Zweifelsfall.
Und jetzt. Warning.
Bam. Sehr nice.
Und jetzt, damit das alle wissen.
0 W. Größer. Keck W.
Warning. 0 W.
Ja, nice.
Aber man konnte mit Notify Send,
es gab doch sowas wie Titel und Text,
oder?
Help. Icon?
Nee. Summary. Body gibt es. Okay.
Also Summary. 0 W.
Und Body. Keck L.
Ach so.
Warum muss man das machen?
Naja.
Man kann auch noch
Urgency Level angeben, wobei ich glaube,
dass das echt keinen Unterschied macht bei mir.
Ach so.
Critical.
Was?
Sieht bei mir genauso aus. Das unterstützt das einfach nicht.
Action.
Ey, das lassen wir so.
Das ist schon okay.
Also das heißt, wir brauchen jetzt zwei Sachen.
Also einmal brauchen wir hier den
Titel.
Und dann...
Und dann brauchen wir den...
Oh, das ist ja Escape.
Hier. Hölle.
Und dann brauchen wir den Text.
Schauen wir mal.
Das ist jetzt Funst.
Es funst.
Es funst.
Warning. 0 W.
Sehr schön. Sehr schön. Sehr schön.
Das finde ich sehr, sehr nice.
Excellent.
Ja, schick, oder?
Das hat doch was.
Das kann man doch jetzt echt gut verwenden.
Geht da auch der Weblink rein?
Gute Frage.
Gehen da Links rein?
Lasst uns das mal ausprobieren.
Äh.
Ja.
Geht das?
Geht da auch ein Link rein?
Das ist eine gute Frage.
Nee.
Einfach nur Text.
Aber man kann bestimmt mit Action
was machen,
wenn ich jetzt wüsste, wie das funktioniert.
Was mich erst noch mal interessieren würde,
ist, was ist denn, wenn...
Was ist denn "-e"?
Was soll das denn jetzt schon mal machen?
Transient.
Genau das gleiche wie nicht "-e".
So. Ähm.
Action.
Moment. Send. Notify.
Open Browser.
Da gibt's bestimmt irgendwie sowas.
Das heißt nicht Send, Notify, Send.
Notify, Send.
Browser.
URL. Browser. Stand auch da irgendwas.
Ach, man kann... Moment.
Wait a minute.
Man kann da ernsthaft
HTML drinne angeben?
Ist das euer Ernst?
Shit.
Man kann...
Ernsthaft?
HTML? Ist das euer Ernst?
Ja?
Nee, ich find das ist nicht nice.
Da kannst du im Zweifelsfall irgendwelche Sachen noch injecten.
Naja, wobei.
Was gibt es denn
bei Send Notifies für Action?
Action.
Specifies
the action to display to the user.
Ach so.
Ist was anderes.
Okay, also im Prinzip brauchen wir da einfach nur
einen Link.
Das Ding ist, ich hab keine Ahnung, was für einen Link
beispielsweise hier zu dieser
Notification jetzt führt.
Ah.
Okay. Ja, das ist ja easy.
Einfach die Alert-ID.
Top. Easy as fuck.
Die Alert-ID haben wir.
Einfach die ID, jaja.
Also
im Prinzip wollen wir jetzt...
Machen wir das mal kurz hier rein. So.
Ähm.
Wir wollen eigentlich das so haben.
Und an der Stelle als Alert-ID
machen wir jetzt hier
Latest
Alert-ID.
Wollen wir, dass das jetzt funzt.
Und dann
brauchen wir an der Stelle
ja, die URL.
Aber
davor brauchen wir
einen Link und danach brauchen wir einen
Closed Link.
Und jetzt geht das. Fragezeichen.
Waiting for Alerts.
Ja, blub, blub, blub, blub.
Send. Schauen wir mal, was jetzt passiert.
Äh.
Ne, das ist kein klickbarer Link.
Was habe ich falsch gemacht, Leute?
Muss da eine
Newline davor, dass das funktioniert?
Wenn da kein Newline davor ist, dann geht
das... äh. Ach.
Href.
Oh ne, muss das esca...
Oh shit.
Äh.
Moment. Fuck, wie oft muss ich das jetzt
escapen? Kann man...
Ist das auch erlaubt? Chat?
Haben wir irgendwelche HTML-Fiveheads,
die wissen, ob Single Quotes
da drin auch erlaubt sind?
Ne. Shit.
Single Quotes sind nicht
erlaubt. Okay, Leute.
Ich bin enorm verwirrt. Wie oft muss ich das jetzt escapen?
Einmal, einmal wird ja...
Bitte nicht
reichen. Zweimal? Dreimal?
Dreimal escapen?
Dass es funktioniert?
Ach, der Link-Text ist genau das
gleiche. Ach so.
Dann geht das vielleicht doch mit Single Quotes.
Äh. Ja, Single Quotes.
Send.
Ja. Mega.
Copy Link Address.
Zack.
Ne, den Text machen wir da oben drüber.
Den Link kommt unten
drunter. Und davor...
Davor kommt
Latest Alert
Text
New Line und unten
drunter... Okay, pass mal auf.
Das jetzt. Excellent Fiveheadshit.
Ja. Das ist
nice. So gefällt mir das.
Aber wir nennen das übrigens...
Einfach nur Klick.
Jetzt geht Chrome auf.
In Chrome bin ich nicht eingeloggt. Deswegen, das funktioniert
nicht. Ich muss das dann... Das nennen wir
nicht Url, sondern wir nennen das einfach nur Klick.
Oder Link. Link.
Oh, das gefällt mir.
Das ist nice.
Und zack, sind wir beim richtigen Alert.
Excellent.
Pogu.
Excellent.
Sehr schick.
Ja, das hat was, oder? Das gefällt mir.
Das ist sehr...
Hyper nice ist das.
Windows hat da kein CLI-Tool dafür.
Nö, ich weiß. Windows interessiert mich auch
überhaupt nicht, ehrlich gesagt.
Ne, die meisten Leute haben
gar kein Linux bei uns auf der Arbeit.
Die haben, so wie ich, eine Linux
4M und Windows auf dem Notebook, weil
Security-Schiss, Geschiss
da. Deswegen sollte
man Notifications
wahrscheinlich optional
machen. System Notifications.
Das sollte auf jeden Fall
optional sein.
Gehen wir mal in...
Bool.
Äh...
Is...
Notify Enabled.
Irgendwie sowas.
So.
Default False.
Ich weiß, standardmäßig Bool ist False, aber
ich schreib's nochmal explizit rein.
Is Notify Enabled False.
Übrigens, ich zeig euch mal was
in .NET, was echt
nicht so intuitiv ist.
Das hier ist ein Optional Bool.
Ja.
Wenn ihr jetzt checken wollt,
ob dieser Optional Bool
True oder False ist, falls er einen Wert
drinne hat, dann...
denkt man ja,
man müsste sowas machen hier.
Is Notify Enabled.
Has Value.
Wenn es ein Value hat,
dann machst du...
Das ist übrigens falsch.
Is Notify Enabled.
Value.
Und dann guckst du, ob es True ist.
Ja. Oder Not.
Muss man aber gar nicht.
Kannst du nicht einfach checken, ob es das Tool gibt?
Doch.
Aber vielleicht will's ja trotzdem einer ausschalten.
Für Windows bringt mir nix.
Wir können das nicht einfach nachinstallieren
auf den Notebooks.
Also, das ist aber eigentlich gar nicht notwendig,
weil .NET ist mittlerweile
so schlau, dass man einfach sagen kann...
Und jetzt kommt's, wo...
alle...
Warum machst du denn sowas?
Aber jetzt könnt ihr so machen.
Das ist eigentlich was, was ja verpönt ist
zu schreiben.
Aber in dem Fall macht es Sinn,
weil das ein Optional Value ist.
Und wenn du ein Optional Bool
vergleichst mit einem Bool,
dann checkt der, ob das 0 ist.
Und wenn es
nicht 0 ist, nimmt es den Wert
da draus. Und wenn es 0 ist,
ist es automatisch False.
Also das ist kein Noob-Code an der Stelle.
Auch wenn es aussieht wie typischer Noob-Code.
Ich bin mir gar nicht sicher, ob man
auch so machen kann.
Das funktioniert auch.
Ich find's ein bisschen blöd,
dass man nicht so machen kann.
Aber dann checkt's der Compiler wahrscheinlich nicht,
was man will.
Weil das hier ist jetzt ein Optional Value.
Ist geht. Wann kommt denn, wenn du...
Ja, das funktioniert. Du kannst sagen
is true.
Das kommt aber...
Das macht jetzt wenig Sinn.
Das is ist eigentlich
die Pattern-Matching-Variante.
Du könntest ja so was sagen wie
is Bool B zum Beispiel.
Oder war B, ist das gleiche.
Dann kannst du auf B
zugreifen in der Variante.
Macht wenig Sinn.
Oder wenn du explizit sagst Bool, dann könntest du auch
checken, dass das
nicht 0 ist.
Also das macht jetzt in der Kombination
relativ wenig Sinn.
Wenn du ein bisschen komplexere Pattern-Matching
Sachen hast, dann schon.
Übrigens, was damit auch ganz
nice ist,
ist, man kann sagen
is true
or false.
Was natürlich immer true ist, weil
Bool ist entweder true or false.
Aber dafür könnte man
mal angenommen du hast ein String,
kekel gleich 1, 2, 3
Ja, du könntest jetzt zum Beispiel checken
if kekel is
war ich mir gar nicht sicher,
ob das funktioniert oder nicht.
Oder 3 oder
4, 5, 6
Das ist cool.
Ich verwende das viel zu selten.
Weil ich immer nicht
dran denke, wenn ich das brauche.
Weil
die Schreibweise früher war ja
is
oder
So, das war die alte Schreibweise.
Ich muss aber sagen,
Disclaimer, ich bin mir nicht sicher
ob das
hier wirklich 100%
äquivalent zu dem
ist.
Doch ist es.
Rider schlägt es einem sogar vor
das zu ändern.
Ja.
Und das finde ich ganz nice.
Wir machen jetzt hier noch
if notify is enabled
Wo ist denn notify send überhaupt?
User bin notify send.
Ich glaube da ist das immer.
Ich glaube wir könnten natürlich auch gucken
exists
user bin notify send
und wenn user bin notify send
existet, dann
das könnte man theoretisch auch machen.
Aber ich finde das hier gar nicht so blöd.
Da könnte man nämlich checken
ob das
falls es nicht eine explicit
ausgeschaltet. Wir können ja sogar sagen
dass es
default mäßig
notificaten soll.
Ja, wir können ja sogar sagen
das ist standardmäßig true.
Jetzt macht es aber auch keinen Sinn mehr
dass das optional ist.
Es ist halt immer gesetzt.
Wir können da sagen ist notify enabled true.
Jetzt brauche ich das auch nicht mehr checken.
Also ist notify enabled
standardmäßig ist es enabled, aber wir können es
explizit ausschalten.
Also sprich alle die nicht Linux nutzen
können das ausschalten.
Wobei ich das nicht ist notify enabled nennen sollte.
Weil diese
environment variable möchte
keiner wirklich
benutzen oder in der config.
Wir nennen das einfach nur
notify.
So und jetzt kann ich sagen
so jetzt wäre es
an und jetzt könnte
ich beispielsweise in meine config
Datei gehen und dort
reinschreiben notify
false.
Und wenn ich das jetzt starte
dann sollte
So und wenn ich das jetzt starte
dann sollte jetzt keine
notification kommen send.
Ja kam auch nicht.
Guck es kam nur in der Console es kam hier nichts.
Und wenn ich
jetzt hier reingehe und sage ich will
notify true haben
und das nochmal
ausführe
senden
dann kommt das. Das ist gut das gefällt mir.
Das hat was.
Übrigens es gibt auch noch eine Sache die wir wahrscheinlich
machen müssten.
Was ganz sinnig wäre.
Vielleicht eine default config hinlegen.
Oh ein Chainlore.
Aber das gefällt mir.
Das hat was.
Sehr sehr nice.
Der IQ heute würde ich sagen ist ziemlich hoch.
Wir können ja trotzdem noch checken
bevor das sinnlose exceptions gibt.
Was passiert denn jetzt?
Ich benenne das mal falsch um.
Ich benenne das mal falsch um so aus send.
Ja ne da kackt das ganze Ding ab.
Ja.
Der Punch Jam ist mehr oder weniger fertig.
Bei Sachen müssen wir da nicht mehr einbauen.
Okay das ist vielleicht dumm.
Wenn bei fehlgeschlagener
Notification das gesamte Ding crasht.
Das ist glaube ich nicht so geil.
Oder?
Ich würde sagen wisst ihr was.
Scheiß drauf ob das da ist oder nicht.
Das kommt einfach in den try catch rein.
Und fertig ist.
Wir ignoren einfach alles.
So und jetzt nochmal ausführen.
Gibt es nicht.
Wir ignorieren alles ohne
Message. Vollkommen egal.
Bam.
Einfach einfach alles ignoren.
Ich meine wir könnten.
Wir könnten wenn wir nett sind
noch sagen.
Ja.
Notify failed
oder so vielleicht.
Wenn wir gut
drauf sind.
Könnte man das vielleicht noch.
Wobei es failed jetzt ja nicht.
Jetzt funktioniert es ja.
Ja das ist glaube ich ganz okay.
Das kann man klar machen.
Wobei scheiß drauf.
Sagen einfach gar nichts.
Bam.
Dann wundern sich die Windows Leute
auch nicht warum das bei ihnen da
auf einmal die ganze Zeit
in der Konsole steht.
Ich könnte so relativ easy ein Windows Build
dafür machen. Da ist ja nichts
Linux spezifisches drinne jetzt zur Zeit.
Also außer halt Notify Send.
Die Config Datei Ordner
ist Windows tauglich.
Der holt sich
den Ordner vom User Profil.
Legt dann einen Ordner
Config Dings drinne an.
Das funktioniert unter Windows genauso.
Jetzt meine ich vielleicht nicht unbedingt
der beste Ort unter Windows sowas abzulegen.
Aber wen juckt Windows?
Und Windows User?
Wir könnten übrigens tatsächlich noch
das in die Config Datei schreiben.
Was die Culture Info ist.
Aber lassen wir erst mal.
Ich glaube das reicht mir für heute.
Haben wir doch echt richtig nice
Progress gemacht oder?
So langsam
wird es echt ein bisschen unübersichtlich.
Was sagt ihr Chat?
Soll ich die Typen doch in eigene
Dateien schieben?
Die wir ja haben.
Ich mein es widerstrebt halt ein bisschen
das in eine eigene Datei
zu schreiben.
Wann Notify Send
Exception?
Sobald wir Clean Architecture machen.
Also nie.
Soll ich mal so machen.
Machen wir das in eine eigene Datei
oder nicht?
Ich bin unschlüssig.
Kürzer mal das Ganze.
Also wir können
auf jeden Fall denke ich die
API Klasse in eine eigene Datei
packen.
Das ist nicht verkehrt.
Da wird es ja schon ein bisschen übersichtlicher drinne.
Wir können
Ja gut das reicht
eigentlich.
Der Rest ist ja Main.
Das ist in Program CS schon ganz gut
aufkommen.
Ich mein das ist voll Overkill.
Warum sollte ich ernsthaft eine eigene Datei
dafür machen?
Ich weiß die C Sharp Ordnungspolizei
die sieht das anders.
Ne das bleibt jetzt so. Das hier in einer eigenen Datei
ist gut.
Ist ja auch ein bisschen was drinne.
Oh.
Wir follow nicht der Naming Convention.
Anzeige direkt.
Und hier auch nicht?
Hä?
Achso der denkt ich hab das falsch.
Was ist hier dran falsch?
Oh Namespace.
Das kommt nicht in eine eigene Datei.
Das brauchen wir nicht.
Wunderbar.
Da haben wir schon einiges niceres eingebaut.
Ich glaub damit kann man jetzt langsam aber sicher echt was anfangen.
Shit.
Status.
Es ist New File und Modified.
Ja wer hätte das gedacht.
Git Add.
Git Div. Staged.
Was haben wir heute gemacht?
Das Json File ist nicht mehr Optional.
Ach Moment.
Wir sollten vorher noch mal tatsächlich
reformat.
Nehmen wir nochmal N.
Ja jetzt ist es auch besser.
Hey.
Tatsächlich hier auch falsch formatiert.
Reformat.
Ok.
Also das haben wir hier.
Dann haben wir unser Command für Watch
hinzugefügt.
Auch sehr sinnvoll.
Alles würde ich sagen.
Ordentlich.
Halbwegs.
Ja auch die 3 Api Connections kann man machen.
Notify in App
Config.
Das haben wir verschoben.
Und das haben wir erweitert.
Ja ich denke das geht
in Ordnung soweit.
Dann haben wir jetzt
Git Commit
A-M
Haben wir ein neues Watch
Watch Feature.
Watch and
Alerts
Watch for Alerts
Git Push
Origin Master
Hä?
Ach ich Noob. Ich habe nicht PSSH geklont.
Kann das sein?
Git Remote
A-M
Git Remote Add
Da habe ich sogar schon. Guck mal.
Noob.
GitHub. Ja.
Da ist es.
Irgendwas haben die anders gemacht. An der
An der Commit History oder?
Ich finde
Irgendwas. Ich kann es nicht genau
sagen was. Ach so
die Box daneben fehlt. Wobei
die Box kommt. Ne.
Irgendwas
Die Box. Irgendwas
kommt mir heute anders vor.
Minimal. Nicht viel. Minimal kommt
irgendwas anders vor an der Commit History.
Naja aber
Kunst
Excellent.
Okay.
Das war das für heute so würde ich sagen.
Progress haben wir gemacht.
Das werde ich
Morgen auf der Arbeit klar ausprobieren.
Wie gut das funzt.
Ja ich muss morgen nach Frankfurt fahren.
Das ist übelst der Sack.
Sogar noch relativ früh.
Weil ich habe mit meinem Chef
Termin Vormittag.
Und
Ich habe ab 7.30 Uhr
...
Das wofür ich den
das Programm hier brauche.
Muss gucken ob es
irgendwelche Monitoring Notifications
gibt.
Also das heißt ich muss um 7.30 Uhr schon
in Frankfurt sein. Boah das wird abfuck ey.
Da habe ich keinen Bock drauf.
Aber das ist nicht schlimm. Da bin ich früher da.
Kann ich früher abhauen. Außerdem habe ich noch so viele
Stunden auf meinem Konto.
Da gehe ich morgen einfach um 14 Uhr.
Frankfurt morgens ist die Hölle.
Wollt ihr mal nicht übertreiben.
Ich habe das Jahre lang gemacht.
Mit dem Zug morgens nach Frankfurt zu fahren.
Und dann jeden Tag.
Und jetzt muss ich es an einem Tag die Woche machen.
Das ist jetzt durchaus vertretbar.
Und so früh morgens ist es.
Geht das finde ich sogar noch halbwegs.
Weil die Leute einfach im Zug selbst noch so müde sind.
Und vor sich hin pennen.
Bin übrigens mal gespannt.
Heute war ja Fasching.
Und da gibt es ja auch wieder zig Reden über irgendwelche
politischen Sachen und sonst was.
Mir geht Fasching und das ganze Zeug
voll am Arsch vorbei.
Worauf ich gespannt bin.
Wie sie wieder alle getriggert sind auf Twitter.
Oh sorry. Sorry nicht Twitter.
Auf X.
Du kannst davon ausgehen heute
sind alle Seiten super krass
getriggert auf Twitter.
Weil irgendeiner auf irgendeiner Faschings
Veranstaltung was gesagt hat zu irgendwas
was ihm nicht passt.
Und anstatt dass man sich wie früher denkt.
Ja ist halt Fasching.
Machen sie halt Sprüche.
Geht man heute auf Twitter und raget erstmal rum.
Wie schrecklich das alles ist.
Das ist bestimmt.
Wahrscheinlich ist es schon in vollem Gange.
Deswegen ich gehe jetzt auch nicht auf Twitter.
Aber das ist ja immer.
Das ist tatsächlich für mich das lustigste immer an Fasching.
Wenn ich mir angucken kann.
Wer wieder durch irgendeinen Scheiß getriggert ist.
Die müssen sich echt mal alle ein bisschen entspannen.
Kannst dich immer durch alles sofort
dich aufregen nur weil irgendwie mal
irgendeiner auf der Welt was anders sieht als du.
Da müsstest du dich ja.
Wenn du das wirklich konsequent durchziehen willst.
Dann wirst du nicht älter als 30.
Da hast du schon Kreislaufprobleme.
Weil du bist ja permanent auf 180.
Das Gefühl habe ich auch teilweise manchmal.
Die haben alle keine Probleme.
Die haben wisst ihr was.
Ich glaube es sind zwei Sachen.
Die haben entweder
keine Probleme.
Oder zu viel Probleme.
Über die sie sich keine Gedanken machen wollen.
Oder sie wissen einfach nicht.
Was sie mit ihrer Zeit
anfangen sollen.
Max guck mal im allgemeinen im Discord.
Da fühlt man sich nicht nur getriggert.
Bei einem Bild von Bob.
Echt?
Boah ich beneide meine Modgis nicht.
Was da teilweise wieder für weird champige Sachen gepostet werden.
Naja.
Alles ist hier ja auch nicht geil.
Ich finde es aber ganz gut hier.
Ne aber.
Da bin ich mal wieder gespannt.
Wer heute wieder alles getriggert ist.
Auf X.
Das ist für mich fast das lustigste an Fasching.
Da nehmen sich ja wirklich
alle gar nichts.
Sind dort alle wieder am aufregen.
So.
Leute.
Ich gehe jetzt auf.
Ich gehe mich jetzt rasieren.
Mich unter die Dusche
stellen.
Damit ich morgen früh sauber bin.
Morgen früh habe ich keine Zeit
um so was zu machen.
Wenn ich so früh in Frankfurt sein muss.
Normalerweise ich rasiere mich am liebsten
ehrlich gesagt morgens.
Irgendwie fühlt es sich komisch an.
Nachmittags und abends sich zu rasieren.
Aber okay.
Ist alles Gewöhnungssache.
Ich mache das am liebsten morgens.
Aber morgen früh habe ich keine Zeit.
Deswegen mache ich das jetzt.
Ja sehe ich auch so.
Sie sollen sich einfach mal ein bisschen entspannen.
Das stimmt.
Du hast recht.
Aber.
Ich rasiere mich heute nicht nass.
Ich nehme heute das.
Dieses One Blade Ding.
Und schnibbel das einfach nur so.
Das es ordentlich aussieht.
Aber auch nur für einen Tag lang.
Ich finde das Ding gut.
Wenn es schnell gehen muss.
Und es reicht für einen Tag oder einen halben Tag
ordentlich auszusehen.
Ist das vollkommen nice.
Das hält bei weitem nicht so lang.
Aber wenn man keinen Bock hat.
Keinen Bock da große Zeremonie zu machen.
Ich will jetzt gleich noch MMO grinden.
Ich muss euch ja ehrlich sagen.
Das war ein super random Thema.
Aber ich muss euch sagen.
Ich bin ja fast 40 mittlerweile.
Also 39 bin ich jetzt.
Ich habe.
37 Jahre.
Oder 38 Jahre gebraucht.
Zu checken.
Das mit einem Rasierhobel rasieren.
Viel angenehmer ist.
Als mit einem elektrischen Rasierhobel.
Also.
Mit einem richtigen Rasierer.
Ich habe früher das erbsichtlich.
Nicht mit einem richtigen Rasierer gemacht.
Weil ich mir immer dachte.
Boah das ist so aufwendig.
Und da kannst du die schneiden.
Und dann sonst was.
Mittlerweile muss ich sagen.
Ich finde das viel viel angenehmer.
Ich meine damit nicht das One Plate.
Ich meine so diese alten klassischen.
Philips Rasierer oder Braun Rasierer.
Diese runden Dinger da.
Die Dinger meine ich.
Das ist so unangenehm.
Versus.
Mit.
Seife und Rasierhobel.
Das habe ich.
Aber früher nicht gecheckt.
Rasierhobelstells ja.
Also seitdem ich mir.
Boah draußen ist gerade ein halber Weltuntergang.
Vom Wetter.
Das wird den Faschings Leuten nicht so gefallen.
Das wollte ich jetzt sagen.
Also ich habe auch 38 Jahre.
Gebraucht zu checken.
Ob das richtig funktioniert.
Also ich habe mir bei Amazon.
So einen.
Rasierhobel.
Ich glaube Mühle.
Irgend so ein Standard Ding gekauft.
Irgend so ein Ding in der Richtung.
Bin mir nicht ganz sicher welcher.
Irgend so ein Teil habe ich mir gekauft.
Von heute auf morgen.
Weil ich mir gedacht habe.
Weißt du was Max.
Du hast dich jetzt 38 Jahre.
Nie so richtig nass rasiert.
Weil du ausprobiert hast.
War mit so einem Systemrasierer.
Wie sich das ja nennt.
Mach das jetzt einfach mal.
Wenn du da im Internet danach suchst.
Hast ja schon die ersten Leute.
So nach dem Motto.
Ah du musst das so machen.
Und da schneidet man sich.
Und bla bla bla.
Leute es ist easy as fuck.
Und man schneidet sich auch nicht.
Ich habe mich.
Ja ich habe mich auch schon ein bisschen gekratzt.
Ja ich habe mich auch schon ein bisschen gekratzt.
Aber es ist nicht so.
Als muss man mega aufpassen.
Dass man sich nicht den Hals aufschneidet oder so.
Ist gar nicht so.
Es ist eigentlich.
Es ist sogar gar nicht so einfach sich damit zu schneiden.
Die meisten Sachen wo du die schneidest ist.
Weil du irgendeinen Pickel hast oder so.
Und da drüber rasierst oder.
Also wo ich beispielsweise Probleme habe.
Wo ich wirklich aufpassen muss.
Und langsam machen muss.
Ganz unten am Hals in der Mitte.
Da muss ich nämlich auch so schräg drüber rasieren.
Da habe ich mich jetzt schon ein paar mal.
Ein bisschen geschnitten.
Aber insgesamt finde ich das so viel angenehmer.
Als mit so einem komischen.
Philips Elektrorasierer.
Also ich habe irgendwelche.
Russischen Kekomrit.
Rasierklingen von Amazon gekauft.
Für keine Ahnung.
8 Euro.
100 Stück oder so.
Da habe ich erstmal genug.
Ne Moment.
Moment ich muss mal gucken.
Moment.
Notifications tailored for you.
Ja ja Amazon. Geh mal nicht auf den Sack.
Äh.
Kann man hier Orders suchen.
Klingen.
Die Amazon Suche ist auch ziemlich räudig schlecht.
Ne.
Findet er nicht.
Rasier.
Ich nach Rasiersuche vielleicht.
Ah Astra.
Das gab es wahrscheinlich mal im Angebot.
Bei Amazon oder so.
Astra Razor Plates.
Kosten 9 Euro. 100 Stück.
Oder ist italienisch.
Dann habe ich mich vertan.
Ich dachte das sind Kekomrits.
Nein made in Italy.
Tatsächlich.
Du hast recht.
So ein Teil.
Habe ich mir irgendwann gekauft.
Das reicht ewig.
Da kannst du dich.
Also du kannst dich mit so einer Rasierklinge.
Schwer zu sagen.
Wie oft kannst du dich damit rasieren.
Ich habe das nie so wirklich mitgezählt.
Ich.
Sobald es anfängt ein bisschen zu ziehen.
Wechsel ich das Ding.
Ah so 6 mal oder so vielleicht.
Wenn du schön beide Seiten benutzt.
Ja.
So irgendwie.
In dem Dreh.
Also das hält.
Das hält auf jeden Fall eine ganze Weile.
So 5-6 mal.
Und wenn du ordentlich beide Seiten benutzt dann.
Ja. Aber echt krass. Ne.
Dass man mit 38 Jahren nochmal.
Anfängt sich sowas anzugucken.
Ich hätte auch einfach immer so weitermachen können.
Aber ich fand elektrisch rasieren.
Irgendwann einfach nur noch so nervig.
Weil es auch immer nicht richtig funktioniert hat.
An manchen Stellen.
Da musstest du dann irgendwie immer gucken.
Welchen Winkel machst du jetzt so.
Und dann hat es dann teilweise gezogen.
Da zieht nix.
Da mal schnipp schnapp. Gut ist.
Also naja.
Eher. Tja was für ein Geräusch.
Macht das eher.
Wie dem auch sei.
Ich weiß nicht wie ich jetzt von.
Fasching getriggerten Leuten.
Aufs rasieren gekommen bin.
Aber random.
Und das aller wichtigste.
Und das aller wichtigste.
Danach wenn man fertig ist.
Braucht man irgendein.
So Balsam.
Ding drauf.
Ansonsten.
Ansonsten.
Da brennen ist das.
Das ist das falsche Wort.
Ansonsten fühlt sich halt.
So.
Rau und äh.
Also nee nee nee.
Rau anfühlen ist falsch.
Es ist glatt.
Ja brennen ist das beste Wort wahrscheinlich.
Keine Ahnung wie ich da jetzt drauf gekommen bin.
Leute.
Ich geh jetzt.
Ich mal rasieren ne Runde.
Und dann.
Wollen wir uns.
Wahrscheinlich morgen nicht.
Ja bis dann machts gut.
See you.

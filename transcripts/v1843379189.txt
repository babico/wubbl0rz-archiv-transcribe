...
...
...
...
...
Guckt mal, der Installer für Visual Studio, Visual Studio Code und solche
Geschichten. Okay, nennen wir mal Visual Studio. Der Installer für Visual Studio war jahrelang und
glaube ich ist es immer noch eine Browser-Anwendung.
Irgendwelche Dinger von Microsoft sucht man nach vergebens, wo man sich halt denkt,
Okay, wenn ihr merkt, dass halt euer Kram viel zu restriktiv ist, selbst für eure eigenen Anwendungen,
dann könnte man auf die Idee kommen, dass vielleicht auch niemand anderes Anwendungen dafür bauen will.
Und die haben dann nen Web-Installer von Visual Studio gebaut und sowas, wo man sich dann denkt,
okay, jetzt hat's schon nen Grund, dass die Leute keinen Bock hatten, UWP-Anwendungen zu bauen.
Weil du dank der Sendbox nix machen kannst, gescheit.
Und das hätte Microsoft eigentlich viel früher kapieren müssen, ja.
Und die benutzen oftmals ihre eigenen Sachen nicht.
Was kein, was kein Aushängeschild ist.
Ich meine, man muss sich mal angucken.
So die großen Dinger, die bekannt geworden sind, so React zum Beispiel, ja.
Das sind, die sind ja alle nicht nur bekannt geworden, weil sie eben ein Problem gut lösen.
Ja genau, das, ja und WinUI 3 hatte, Viagra, take Viagra, die hat, WinUI 3 hatte ja auch
auf lange Zeit das Problem, dass sie diese Package, dieses Packaging von OWP mit übernommen
haben, dass selbst wenn du quasi eine unsendbox der Application bauen wolltest, du trotzdem
ein Codesigning Zertifikat gebrauchst, also ich glaube das ist jetzt seit 1, 1,5, 2 Jahren
höchstens nicht mehr der Fall, dass du unpackaged Apps bauen kannst mit WinUI 3, glaube ich.
Ich habe mir das schon eine ganze Weile nicht mehr angeguckt.
Ja, Microsoft benutzt den eigenen Scheiß nicht.
Ja, was ich sagen wollte ist, guckt euch mal React an.
React ist nicht nur so erfolgreich geworden, weil sie relativ früh am Start waren und
ein Problem gut und halbwegs gut benutzbar gelöst haben, nein, React ist auch mit bekannt
geworden, weil das einen riesen Anwendungsfall hatte, wo die Leute gesehen haben, ey, wenn
das bei Facebook funktioniert, dann wird das auch im großen Stil funktionieren.
Also sprich, es ist immer sinnvoll, wenn du halt nicht nur die Technologie hast, sondern
auch gleichzeitig so ein Aushängeschild dafür hast, dass du sagen kannst, ey, guck mal,
das geht.
Ich bin auch überzeugt davon, dass sich Git als Versionsverwaltungssystem unter anderem
Nicht nur weil es gut ist, so schnell durchgesetzt hat, sondern weil man gesehen hat, ey, wenn das für den Linux-Kernel funktioniert,
dann wird das für alles andere auch irgendwie funktionieren.
Und Git hat ganz viel Zeug drinne, was eben spezifisch für die Linux-Kernel-Entwicklung ist, aber schon sehr daran angelehnt ist.
Zum Beispiel hast du in Git die Möglichkeit, Patches auszutauschen und die dann per E-Mail zu schicken und sowas.
Das macht keiner, der noch halbwegs bei Verstand ist, außer dass es der Linux-Körnel zum damaligen Zeitpunkt gemacht hat.
Die waren ja damals nicht auf GitHub oder sowas, die hatten eine Mailing-Liste, haben in ihrem Git Sachen committed und haben dann ein Patch generiert und den Patch haben sie eine E-Mail dran gehängt und dann in die Mailing-Liste gepostet.
Und der Patch wurde dann aus der Mailing-Liste runtergeladen und dann applied.
So, das sind so ganz komische Dinger, die niemand in Git eigentlich verwendet, die aber
da drin sind, weil das halt damals für die Kernel-Entwicklung sinnvoll gewesen ist.
Aber man hat gesehen, ey guck mal, du kannst damit alles verwalten, weil wenn du den Linux-Kernel
damit verwalten kannst, das gut funktioniert, dann kannst du schlägergreifend alles andere
damit auch verwalten.
Also sprich, ich denke, es ist wirklich sinnvoll, wenn nicht nur neue Technologie rausgehauen
wird, sondern gleichermaßen, die gebackt ist dadurch, oder halt belegt wird dadurch, dass
die was taugen, indem es eben gescheite Anwendungen gibt.
Und deswegen denke ich, hat sich Git relativ schnell durchgesetzt, weil du gesehen hast,
geht mit dem Linux-Kern, da geht's für alles.
Hat sich React so gut durchgesetzt, weil es eben ein sehr spezifisches Problem gut gelöst
hat und quasi so komplette Ära von neuen Anwendungen mit eingeläutet hat.
Und dass man gesehen hat, ey guck mal, das ist von Facebook, die benutzen das auch, das
funktioniert ja.
Ja, und das ist das, was Microsoft lange nicht richtig bei ihren Technologien hinbekommen
hat.
Was man sieht, ah guck mal, die benutzen den Kram ja selbst, ich mein, was gibt es für
ein besseres Aushängeschild für den Windows-UI-Framework, wenn du sagen kannst, Office benutzt das,
Visual Studio benutzt das.
Dann weißt du, ey, das sind große, komplexe Anwendungen, die Millionen Leute benutzen,
Und das scheint was zu taugen, wenn du das damit machen kannst.
Da muss ich mir keine Gedanken machen, das zu benutzen.
Das wird prinzipiell funktionieren.
Und das hat halt Microsoft lange nicht hingekriegt.
Die haben halt den eigenen Scheiß nicht benutzt.
Und dementsprechend waren die Leute nicht nur skeptisch,
weil die Technologie scheiße war, wie bei UWP,
sondern sie waren auch bestätigt dadurch,
dass Microsoft den eigenen Krempel nicht benutzt hat.
Und dementsprechend haben die gesagt, ja gut, also guck mal.
Ich find das scheiße, Microsoft selbst scheint es ja auch scheiße zu finden,
zu finden, deswegen benutzt es es nicht. Und es hat keine richtige Adoption erfahren. Und
viel zu lange. Ja, das ist WinUI, was du hier verlinkt hast. Mittlerweile ist es tatsächlich
sehr sinnig, gebe ich dir recht. Gerade wenn du dir Anwendungen wie Discord anguckst, wenn
Wenn ihr euch mal überlegt, was wollte ich jetzt gerade sagen?
Ich habe gerade auf den zweiten Monitor geguckt, ja mittlerweile ist es tatsächlich auch erforderlich,
denn wenn man sich mal Anwendungen wie Discord anguckt, Discord ist ja im Prinzip eine Webanwendung
in ein eigenes Fenster gepackt und als Desktop-Anwendung getarnt.
Es sieht jetzt mal auf den ersten Blick gar nicht so unterschiedlich aus zur Discord-Web-Version.
Also Discord-Web und Discord-Desktop ist mehr oder weniger die gleiche Anwendung, allerdings
nicht komplett.
Die Desktop-Anwendung von Discord hat ein paar zusätzliche Tricks.
Ja, zum Beispiel haben die eigene Node-Module, die sie laden, native Node-Module, die sie laden dafür und sowas.
Die haben ja schon ein bisschen getrickst.
Aber der riesen Vorteil, den man hat, wenn man einen Browser als Grundlage für seine Anwendung nimmt,
gerade wenn man sowas wie Discord machen will, ist, du kannst dich auf alles verlassen, was in dem Browser drin ist,
dass es auf allen Plattformen funktioniert.
Und gerade für Discord ist das wichtig.
Und jetzt überlegt mal, Discord ist eine Audio-Video-Multimedia-Anwendung.
Du kannst chatten, das ist noch nicht so das Ding.
Du kannst voice callen, du kannst desktop sharen, du kannst wahrscheinlich sogar Video callen mittlerweile.
Bestimmt macht bloß keiner.
Also du kannst Videos übertragen, Audio übertragen.
So, und jetzt überlegt euch mal, Discord läuft auf Android.
Wahrscheinlich gab es mal eine Windows-Phone-Anwendung von Discord.
benutzt eh keiner. Es gibt Android, es gibt iOS Discord, es gibt Windows, Linux, Mac Discord.
Wahrscheinlich funktioniert der Mist sogar auf Android TV und sonstigen Geschichten.
Und jetzt überlegt euch mal, die hätten für alle diese Plattformen ihre Multimedia-Sachen selbst
programmieren müssen. Oder sei es nur, sich irgendein Zwischenframework suchen, was das kann und das
Die wären heute noch nicht bei der ersten Version zum Releasen von ihrer Anwendung.
Die müssten allen Ernstes, die müssten Audio-Video unter Windows, Mac, Linux keckel, ja?
Und Linux ist ja das Schrecklichste, was ich mir vorstellen könnte, Audio-Video-Sachen zu entwickeln.
Da musst du dich mit auseinandersetzen so nach dem Motto, hat der Wayland, hat der X, hat der Puls-Audio, hat der was, hat der...
Also ganz ehrlich, das würde ich im Leben nicht machen, da ist es wahrscheinlich unter Windows noch deutlich einfacher.
Dann musst du das gucken, okay, wie mach ich das unter Android, wie mach ich das unter iOS?
Die würden durchdrehen, die hätten noch nicht mal die erste Version von ihrer App raus, hätten sie diesen ganzen Kram selbst machen müssen.
Und hätten sich nicht auf das verlassen können, was der Browser schon bietet.
Also aus dem Gesichtspunkt für so Sachen wie Discord ist es extrem sinnvoll, einen Browser als Grundlage zu nehmen.
Pipewire, was du nicht alles hast, ja.
Das wäre ein kompletter Abfuck gewesen.
Nein, ich glaube, Alsa ist noch in einer Stufe unten drunter, Phipps, ich glaube, das ist
irgendwas, äh, frag mich, Linux, sowas ist da echt undurchsichtig.
Also, es macht schon Sinn, ja.
Ja, das stimmt, WinUI hat kein Linux-Support, was aber auch der Name schon irgendwie so
erahnen lässt, ja.
Welche VM benutzt du nochmal, Virtualisierungstechnologie, meinst du?
Ich benutze VMware Workstation. Ich habe das mal gekauft bei so einem billigen Key-Seller für 7,20€ oder so den Key.
VMware Workstation Professional.
Das machen wir jetzt nicht.
Es gibt ein Projekt auf Github, das nennt sich so, glaube ich.
Ne.
Ich habe vergessen, wie es heißt.
Nee, ähm, wie heißt denn das, flat?
B-flat!
B-flat!
Genau.
Die versuchen quasi einen alternativen C-Sharp Compiler irgendwie zu bauen.
Dass du native Anwendungen bauen kannst mit C-Sharp, die besonders klein sind.
Und sie sind Go-Inspired.
Habe ich noch nie ausprobiert.
Also ich weiß nicht, was da und wie gut das alles funktioniert.
Man, kennst du GTA und hast du eine Meinung dazu?
Ja, ich hab das selbst bei mir laufen seit ein paar Jahren schon lokal.
Also für einfache Sachen, wenn du einfach bei dir ein lokales Git-Repro brauchst und nicht unbedingt ein Web-Frontend, aber ist doch ganz praktisch, wenn du einfach lokale Repros brauchst, um schnell mal was zu pushen, dann ist das eine super Geschichte.
Ich benutze das zum Beispiel so, wenn ich was für den Stream vorbereite, dann mache ich das ja oftmals nicht sonderlich hübsch und ich habe auch nie vor, das irgendwie zu veröffentlichen.
Ja, ich programme, meinetwegen, zum Beispiel für den Stream gestern.
Ich hab mir ein paar kleine Sachen im Vorfeld schon angeguckt, da ich nicht komplett planlos bin.
Hab da, hab das wild zusammengewurschtelt und hab's dann gepusht
in mein lokales Repo hier, was auch auf GTA Basis läuft
und hab das dann nebenbei hier auf dem zweiten Bildschirm offen, da ich so ein paar Sachen mir abgucken kann.
Ja, benutze ich lang.
Mittlerweile kannst du damit ja auch ein bisschen advancere Sachen machen.
Ich habe gelesen die haben seit der letzten oder seit die letzten versionen noch nicht so lange her haben die sogar die möglichkeit
Github runner also zumindest die github die github
actions syntax
Runner die die github actions syntax unterstützen
auch einzubinden
Weil ich ganz cool finde weil so ein bisschen ci hat dem ganzen tatsächlich noch gefehlt
Ich denke das ist jetzt ein ziemlich gutes Komplettpaket, was sich auch easy hosten lässt.
Wie wäre es mal ein Softwareprojekt für ein Stream, in dem du nach deinen Ansprüchen... Das kann ich nicht, weil ich bin kein hauptberuflicher Softwareentwickler.
Ich habe da keinen Anspruch in dem Sinn. Also ich kann euch... Achso, ach das hier, ja gut.
Das stimmt tatsächlich, das könnte man, das könnte man machen.
Ich hab mich ja jahrelang um unsere Softwareverwaltung und Pull-Requests und Serverautomatisierung und unsere Software-Repos gekümmert im alten Job und hab auch Leute genervt, wenn man beispielsweise ihre Changelog-Sachen nicht verstanden hat und sowas.
Die Sache ist bloß die, ihr kennt mich, nur weil ich das haben möchte, heißt das noch lange nicht, dass ich das selbst gerne mache.
mache ich meine ich habe es natürlich wenn ich denn ich muss sagen ich war da teilweise ein bisschen
ein bisschen ein bisschen drecksack so beim alten job ja also es durfte ja außer mir und meinem
kollege durfte ja keiner beispielsweise direkt pushen nach master so und ich habe zu allen immer
gesagt also nicht zu allen wenn es wirklich kleine sachen waren wie irgendwelche schreibfehler oder
sowas da habe ich auch manchmal gesagt ich weiß was komm mal kurz rüber sagt mir wie es richtig
ist, wir committen das und pushen das direkt, du brauchst kein extra Branchen, Pull-Requests
und so, man kann es auf die Schnelle machen, das war so nach dem Motto, wenn einer, keine
Ahnung, wenn einer Amster geschrieben hat anstatt Master und sowas, dann, dann ist das
okay.
Und dann haben wir das gemacht, aber normalerweise hab ich halt immer, hab ich dann immer gesagt,
hier guck mal, Branche nicht richtig benannt, weiß ich nicht von wem das kommt, der Commit-Message
ist nicht richtig, jetzt mach mal, wenn ich manchmal mich vertippt habe oder, oder wenn
ich vielleicht zu früh was committet hab und aus Versehen, ich hab immer direkt den Master
Ich hab die Dinger immer direkt den Master gepusht
Aber das liegt ja auch daran, weil wir haben es ja hier gelernt im Stream Leute
Wir programmieren ja ohne Fehler, das heißt man kann das auch direkt den Master pushen
Also insofern war das eigentlich vollkommen gerechtfertigt
Hast du mitbekommen, dass Reddit seine Preise, ja das hab ich mitbekommen, schon lange mitbekommen
und mich damals schon gefragt, also Twitter, Twitter hat das ja auch gemacht, aber Reddit habe ich auch mitbekommen
die haben mich damals schon gefragt, wie das Apps wie Apollo und so machen wollen
und jetzt kam halt raus, ja ne, die wird es dann einfach nicht mehr geben
was ich scheiße finde, richtig scheiße finde, das kann man auch nicht anders nennen
was ich mega beschissen finde, weil die offizielle Reddit App, die ist besser geworden die letzten Jahre
aber ich finde die Handhabung immer noch, öh
Apollo ist auch nicht dabei, ist halt letzter Schluss irgendwie, ja?
Also die, besser integriert ist die offizielle Reddit-App schon.
Aber allein schon, allein schon, dass es keinen gescheiten Vor- und Zurück-Button gibt und sowas,
das ist so ganz weird, die offizielle Reddit-App.
Die ist besser als noch vor ein paar Jahren.
Vor ein paar Jahren war die komplett unusable.
Keine Ahnung, was die sich dabei gedacht haben.
Ich meine, ich benutze auch mittlerweile hauptsächlich die offizielle Reddit-App und reg mich jedes
Mal auf, wenn irgendwas mal wieder nicht so ist, wie ich mir das gerne gewünscht hätte,
aber ich kann jeden verstehen, der Apollo verwendet.
Und wenn du jetzt noch nicht mal mehr auf die API gescheit zugreifen kannst, dann ist
Das ist halt RIP alle Third-Party-Apps.
Ja, das find ich kacke.
Es wollen ja ab morgen einige Subreddits streiken,
hab ich gelesen auf Reddit, so nach dem Motto,
das Subreddit wird geschlossen für irgendwie paar Tage, Wochen, was auch immer.
Ich denke nicht, dass das irgendwie Erfolg hat.
Diese Versuche gab es ja schon an anderen Stellen.
Beispielsweise, beispielsweise gab es ja,
es gab ja auch,
Ich glaube ich glaube die die letzte variante
Was war was war das letzte wo die leute so blackout sachen probiert haben war das nicht zu hogwarts legacy
So nach dem motto wir blockieren wie wir streamen einen tag nicht oder sowas
Das hat meistens nichts gebracht
Man muss ehrlich sagen der aufschrei ist groß und der aufschrei ist berechtigt aber
Aber, wahrscheinlich tangiert es 95% der Reddit-User nicht und die werden sich einfach nur wundern,
also am Endeffekt schaden sich die Subreddits wahrscheinlich sogar selbst, weil die Leute
eventuell woanders hingehen und dann da hängen bleiben.
Das ist in Reddit nicht so schlimm, du kannst ja mehrere Sachen abonnieren und dir angucken.
Also, ja da gibt es bald ein neues, also ich glaube nicht, dass das irgendeinen Effekt erzielt, ich fände es gut, weil ich es bescheuert finde, dass dort Party-Apps ausgesperrt werden und die Reddit-App halt in vielen Belangen immer noch sackt, aber ich glaube nicht, dass es irgendwas ändern wird.
Naja. Gut. Chetke. So hab ich eigentlich meine trending Repos schon durchgeguckt. Nehmen wir mal ganz schnell AI, AI, AI, AI, AI, AI, AI, AI, AI. Das ist das schlimmste AI-Programm, Leute. Kennt das jemand?
Nein, das hat mit dem Ei überhaupt nichts zu tun.
Das ist eher was für Weep-Musik.
Was ist Godpotato?
Hat das nicht letzte Woche schon gesehen?
Hat keine Beschreibung.
Ah, Security-Kram.
Ja Leute, osu! ist kein AI-Programm, das ist irgend so ein Rhythmus-Game, wo die meisten irgendwelche Anime-Musik drin spielen und da...
Ja, das ist quasi Aim-Training für Anime-Musik-Fans, Osu.
So, was empfiehlt uns YouTube denn heute?
Ich hab schon ein paar Sachen aufgemacht, falls uns YouTube nichts Gescheites empfiehlt.
Äh, nope.
Debian 12 Tutorial für Einsteiger? Ne, das gucken wir jetzt nicht.
Keine 22 Minuten, außerdem Chat, wir sind ja hier keine Einsteiger, wir sind ja alle way too high IQ für Einsteiger.
Was soll an einem Debian einsteigermäßig anders sein als jedem x-beliebigen anderen Linux?
Okay, ja, die Installation und sowas, aber danach macht es auch keinen großen Unterschied.
Ach, mit vierfacher Beschleunigung angucken.
Kann YouTube überhaupt vierfach beschleunigt?
Die Debian 12, Isus? Debian 12 kam doch gestern raus, dachte ich.
Okay, ich krieg wieder irgendwelche Grills empfohlen.
Microsoft is decrypting your files in the cloud. Ja, und wohlgemerkt nicht nur Microsoft.
Achso, ne ne, doch, in dem Fall, in dem Fall wahrscheinlich nicht nur Microsoft.
Hier geht es wahrscheinlich um die Geschichte, dass Microsoft Zip-Passwörter extrahiert.
Also Microsoft ist da wirklich clever.
Also wenn ihr ein Zip verschickt, ein verschlüsseltes Zip über Microsoft Services,
dann machen die folgendes.
Die extrahieren aus den Chat-Nachrichten und aus den E-Mails das Passwort, falls es da drin steht.
Und da bin ich mir jetzt aber nicht sicher, ob das stimmt.
Ich glaube, die probieren sogar eine Liste aus Default-Kennwörtern durch, um das zu entschlüsseln.
Und das natürlich alles unter der Flagge von Sicherheit.
Weil Virenscanner und ähm...
Tja, was wird denn da sonst noch immer gerne als Beispiel genannt?
Ja gut, der Klassiker schleicht hin, wenn es um Security-Themen geht, ist natürlich...
Kinderpornos finden und Terroristen finden und Morde aufklären und sowas in der Richtung.
Das wird ja immer in den Ring geworfen.
Jedes Mal, ist euch das eigentlich mal aufgefallen?
Jedes Mal, wenn es um irgendwelche mehr oder weniger stark ausgeprägten Einschneidungen in der Privatsphäre geht,
kommt als erstes Terroristen, Kinderpornos, Morde.
Das kannst du theoretisch, sobald so ein Thema aufkommt,
kannst du eigentlich schon so eine Stopp-Uhr stellen oder irgendwie so einen Countdown machen,
wann der Erste mit einem dieser drei Sachen um die Ecke kommt, um die Ecken kommt, ja.
So, nix spannendes dabei.
Also die Seite ist an sich schon sehr sus, da weißt du halt nie ob der Key am Ende funktioniert
oder nicht.
Ich mein ich hab mein Key damals auch billig bei so ner Keyshop Seite gekauft.
Chat, wir posten aber, ich sag euch gleich, wir posten hier im Chat keine Links zu irgendwelchen Serial Keys.
Weil das ist wahrscheinlich nicht erlaubt.
Aber ich bin mir, ich bin zuversichtlich, dass ihr in der Lage seid euch selbst zu helfen.
Und im Zweifelsfall die Software einfach auch kauft, wenn euch nichts einfällt.
Da werde ich sie wirklich viel benutzt.
Oh, Chainlore, warum?
Mordges.
Oh man, ich sag's noch, ja?
Alter, ich kann's einfach nicht lassen, ich weiß, ich weiß nicht, ich weiß, es muss
schon einen Grund haben, warum er irgendwie schon den siebten Discord-Account braucht,
da überall immer gebannt ist. Das war jetzt aber echt mit Ansage, das hätte man sich
sparen können. So, in 5 Minuten ist er eh wieder am Start. Die Zukunft ist hier, okay
Also lass mal kurz schauen, was haben wir denn hier schönes?
Warum du in Deckung doch noch...
Was?
Warum du in Deckung doch noch down gehst?
Ah, ja, das wollte ich gucken, weil ich vermute,
dass hier ein bisschen was zu Client-Side-Hit-Detection
und sowas versucht wird, für Noobs zu verpacken.
Da will ich ein bisschen meckern, falls die Erklärungen nicht korrekt sind.
So, was haben wir als nächstes noch?
Advanced Windows Feature you should know
Okay
Das sind immer Gbade Videos, das sind immer Gbade Videos, aber komm neun Minuten, das können wir uns schnell gehen
Windows has a bunch of tools and features built in, some of them that are pretty advanced
That hopefully you never have to use or only every once in a while
But I think it's still good to at least know about them
Ja, wisst ihr, wisst ihr was auch richtig, richtig advanced ist in Windows?
Also, falls ihr euch mal gefragt habt, wie man Custom-Icons vergeben kann für Ordner und sowas,
das geht seit Windows 95 oder wahrscheinlich seit Windows 3.11 oder so.
Und das Problem ist, dass sich der Dialog seit Windows 95 nicht geändert hat.
Guckt euch das mal an. Das wissen, das wissen wenige.
Und das ist super advanced. Passt mal auf, krasse, krasse Windows-Hacks zeige ich euch jetzt.
Ja, guck mal.
Wir gehen jetzt hier drauf, Rechtsklick.
Natürlich, selbstverständlich, Show More Options, Properties, ähm, Customize, Change Icon und jetzt kommt hier halt straight aus Windows 95 der Dialog und die Icons, ne?
Und die wurden, die wurden auch, ohne Scheiß, die wurden 20 Jahre auch nicht, oder, ja, länger, die wurden auch 30 Jahre nicht mehr updatet, hier die Icons.
Ja, vielleicht ein paar. Aber da sind immer noch die richtigen Oldschool-Icons drin.
Wo ich mich ernsthaft frage, warum ist das eigentlich so eine lächerlich kleine und zum größten Teil absolut müllige Sammlung aus Icons?
Ich mein, warum, um alles in der Welt, sollte ich mein Icon so machen?
Ja, hier, pretty advanced Windows. Moment, geht das eigentlich auch hier mit Properties?
Ja, nee. Pretty advanced Feature würde ich sagen.
Guck mal und es gibt hier einen Ordner, es gibt hier einen Ordner, es gibt hier einen Ordner und hier einen Ordner Symbol.
Da blickt doch keiner mal durch.
Noch mehr Ordner.
Noch ein Ordner. Noch ein Ordner.
Noch ein Ordner.
Noch ein Ordner.
Zwei Ordner.
Ja, man weiß es nicht. Keine Ahnung.
Ja, Windows-Logik.
So, okay, jetzt gucken wir uns das mal an.
Die advanceden Features.
In case you do come across a problem that you have no idea how to deal with,
dann könnte einer von diesen eine Glocke klingeln und dir eine mögliche Lösung oder zumindest ein Ort zu beginnen führen.
Und das wird kein detailliertes Tutorial sein,
sondern eher nur ein kurzer Überblick davon.
Und wenn du schon eine Weile auf meinem Kanal geschaut hast,
dann hast du sicher schon von mir erwähnt,
aber es ist immer gut, einen Refresher zu haben.
Also, lasst uns einfach rein.
Zuerst haben wir das Disk-Management-Menü,
was tatsächlich wichtig ist, um zu wissen,
weil wenn du jemals...
Sieht auch nicht umsonst aus wie Windows XP, kommt auch direkt aus Windows XP.
Wenn du einen neuen Harddrive oder einen neuen SSD kaufst, der völlig blank ist,
kannst du ihn einbauen und bemerken, dass er nirgends aufzeigt.
Und das ist, weil du ihn wahrscheinlich mit dem Diskmanagement initialisieren musst.
Also ist es gut zu wissen, dass das ein Ding ist.
Und um das zu tun, ist es eigentlich ziemlich einfach.
Du klickst einfach auf den Drive und drückst auf Initialisieren.
Ich interessiere mich eigentlich nur, was das für Tools sind.
Okay, nächstes.
Etwas stärker.
Der Trade-off ist natürlich...
Leute, ich habe...
Pfeifherder, wir müssen das Video gar nicht gucken.
Der hat seine Vorschau-Dinge ordentlich benannt.
Okay, Diskpart.
Also, wer ernsthaft Diskpart benutzt, hat die Kontrolle über sein Leben verloren.
Bevor ich Diskpart benutze, seriously,
dann würde ich eher Linux booten.
Und dann Gparted oder irgendwas benutzen, bevor ich dieses Ding da benutze.
F-Disk.
Bevor ich das da benutze.
Hostfiles.
Ja.
Host Files halt. Task Scheduler. Keckel. Okay, advanced Feature.
Service Man... Moment. Was für ein Ding?
Ach nee, der meint diese Service Management Konsole oder sowas.
Ja, das ist jetzt auch nix Neues.
Sieht auch aus wie aus Windows XP, weil es direkt aus Windows XP ist, aber das ist...
Also das weiß ja sogar ich und ich bin kein Windows-Admin und ich werde auch nie Windows-Admin, ich will auch nie Windows-Admin werden.
Bei mir auf der Arbeit haben sie letztens schon erzählt, wir sollen uns jetzt um Microsoft-SQL-Sachen unter Windows vielleicht kümmern.
Naja, kümmert euch mal, ich kümmer mich da nicht drum.
Okay, ich meine natürlich würde ich einem helfen, wenn irgendwas wäre und ich wüsste dazu was, aber ich weiß dazu nix und ehrlich gesagt, das ist auch ein Thema, wo ich mich ungern mit beschäftigen will.
event viewer, ja eines der hässlichsten Anwendung ever Leute, kann ich jetzt nicht auf machen da
leake ich bestimmt irgendwas event viewer ist sowohl vom layout her, als auch von der optik her ein
der hässlichsten Anwendungen die ich je gesehen habe memory diagnostics, das brauch ich nicht da
würde ich einfach mein, ach guck mal die haben quasi memtest auch jetzt eingebaut
Würde ich einfach Memtest booten und gut ist.
Okay, Resource Monitor.
Okay, wenn man's braucht.
Performance Metrics
Reliability Monitor.
Who the fuck
braucht denn das?
Okay, nice. Video durch. GG Eats.
Nice.
Siehste? So geht das. Einfach in der Schnelle
durchgeguckt. Warum du... Okay, da
gucken wir, was haben wir sonst noch zu bieten.
Blizzard fällt... Ne, Overwatch 2
fällt auseinander.
Oh ja, das stimmt. Also generell, also Overwatch 2 war schon nicht unerfolgreich.
Konnte einem Riesenhype nicht anknüpfen und ich weiß nicht, was Blizzard da wieder gemacht hat.
Ich mein, Papa Jeff ist weg.
PvE wurde eingestampft.
Was haben wir hier zu bieten?
Highschool student makes react a million times faster.
Okay, wir können uns eine Runde Fireship angucken, kam erst vor 11 Minuten und geht nur 2 Minuten 46.
You're watching the Code Report.
Willst du Diablo 4 anfassen? Ich bin immer noch unschlüssig.
Das stimmt.
Das stimmt wohl.
Und das habe ich auch gestern gesagt, als wir ein bisschen Svelte gebastelt haben, React ist nach wie vor das mit Abstand verbreitetste Framework überhaupt, also für so Frontend-Kleinzeitige Anwendungen und auch für Fullstack-Sachen mit Next.js und sowas, das ist sehr verbreitet.
Ja Svelte hat gar keine, gar keine Virtual DOM mehr.
Aber heute habe ich ein paar gute Nachrichten.
Ein letzter Highschool-Graduate namens Aiden Bai hat Reacts Leistung um 70% verbessert mit Million.js
was eine Hyperaktivierung ermöglicht.
...optimiert VirtualDOM und schlägt den originalen VirtualDOM zum Reader, wo er keine Probleme mehr haben kann.
Als ich das erste Mal sah, war mein erster Gedanke, dass es keinen Weg gibt.
Es gibt keinen Weg, dass ein Teenager ein ganzes Team von Top-Tier-Ingenieuren bei Meta ausrenderen kann.
Aber es gibt Benchmarks, die diese schrecklichen Begriffe zurückgeben.
Wie zum Beispiel auf dem Gold-Standard-Framework-Benchmark.
Es rankt viel höher als React selbst und schlägt sogar über SolidJS.
Und es gibt eine Live-Demo, wo man React und Millionen Seite für Seite vergleichen kann.
Jetzt ist es wichtig, zu sagen, dass Benchmarks nicht wirklich Real-World-Use-Fälle repräsentieren
und die meisten Web-Apps da draußen werden nie zu dem Punkt kommen,
wo sie Probleme mit einem JavaScript-Framework haben.
Trotzdem ist es immer lustig, irgendwie ein bisschen premature zu optimieren.
Aber wenn du ein sehr erfahrener React-Developer bist,
dann fragst du dich vielleicht, was das virtuelle DOM ist.
Ich habe es noch nie gehört.
Naja, um Dinge in der UI zu updaten, macht React eine leichte Kopie des DOMs,
wo es Updates schneller kalkulieren kann und dann alles auf einmal updaten kann.
Es ist so, als ob du deine Veränderungen auf einem Blueprint beendest, bevor du die Wälder in einem Gebäude zerbricht.
Aber all das passiert in der Rundzeit und es ist viel unnötiger Arbeit, um herauszufinden, was sich verändert hat.
Million.js nimmt eine mehr sorgfältige Art, indem es einen Compiler einbringt, der statische Analyse durchführen kann,
um genau herauszufinden, wo das dynamische Datum vorhanden ist.
Es baut einen Edit-Map...
Hä? Wie funktioniert das denn?
App to represent the state of the application, which can then determine what has changed
with far less computation required.
This approach is inspired by other frameworks, such as Python or C++, which can be used to
determine the state of the application.
Okay, okay.
Ich rate jetzt einfach mal, wie das eventuell funktionieren könnte.
Der guckt sich an, wie die Elemente von der Seite aufgebaut sind, dann analysiert er
irgendwie, was interaktiv an der Seite ist und wie sich die Elemente ändern könnten.
Und dafür, was weiß ich, und für die Änderungen, die theoretisch möglich sind, berechnet
er schon mal im Vorfeld quasi die Diffs oder sowas in der Richtung.
Keine Ahnung, ob ich das jetzt richtig kapiert habe, aber sowas in der Richtung wahrscheinlich.
...works like Svelte and Solid, which also rely on a compiler to achieve these surgical
DOM updates, and Million was also inspired by the prior work of a library called BlockDOM.
What's also cool about Million is that it's only 4 kilobytes and extremely easy to use.
All you do is take an existing React component and wrap it inside this block function to
create a higher-order component, which will block out the virtual DOM and let Million
magically take over.
Basically, after the component is mounted, it makes a reference to the underlying DOM
Element, then does all the subsequent rendering and change detection on its own.
In addition, it has a built-in for component, which is used to render a list of blocks.
Pretty simple, but before you get too excited,
Ich will jetzt nicht sagen, dass ich's kapiert hätte.
the creator of this project admits that it's not a silver bullet.
When using blocks, you need to follow a specific set of rules, and if you break those rules,
it'll revert back to React's virtual DOM, and you'll lose all your massive gains.
Overall, Million.js looks like an awesome project, but most importantly, it gives me hope that
Gen Z ist nicht wirklich technisch literativ und könnte tatsächlich ein Tag lang Reaktion fixieren können.
Das war der Code Report, danke fürs Zuschauen und wir sehen uns im nächsten Video.
geworden. React ist jetzt viel schneller. Blazingly fast. Und das ohne written in Rust
zu sein. Gibt's auch nicht alle Tage. Weil eigentlich haben ja die Rust-Leute tatsächlich
für sich schon gepachtet. Nur Rust ist blazingly fast. Alles andere mag auch blazingly fast
dann muss es aber irgendwie anders nennen.
Es hat jemand ernsthaft ein 8-Stunden-Video gemacht,
um die ganzen Half-Life-1-Erweiterungen zu synchronisieren.
Haha, geil. Die Leute haben teilweise echt zu viel Zeit.
Warum sollten wir aufhören, Javascript zu benutzen?
Jojo, die Sache ist bloß die, es gibt halt nix anderes.
Ich mein, es ist ja schön und gut, wenn man sagt, man soll kein Javascript mehr verwenden,
aber es gibt halt keine Alternative zu Javascript, also was willst du machen?
Übrigens ist das nicht.. ist das nicht der Jason-Erfinder?
Der.. der gesagter, das man Jason eigentlich..
Je.. Je.. Je.. Je.. JOSUS aussprechen soll.
Ich glaube schon, dass der das ist.
Okay, es geht nur zwei Minuten, lass uns mal kurz.. lass uns mal auf die schnell gucken.
Warum, warum, warum wir keinen Javascript mehr benutzen sollen?
Das, ey, das hat sich ja im Endeffekt sogar bewahrheitet.
Ich meine, man musste viel an Javascript drehen, das Javascript, der dort angekommen ist, wo es heute steht.
Aber die haben bei Javascript die letzten Jahre tatsächlich genau das Gegenteil geschafft
von C++.
C++ hat die Sprache immer komplizierter und schlechter gemacht, schlechter kann man nicht
sagen aber immer unlogischer, immer komplizierter und im Gesamtpaket dadurch schlechter.
Und Javascript wurde die letzten Jahre über immer besser und sinnvoll erweitert.
Und wenn wir es richtig benutzen, können wir tolle Dinge darüber machen und es kann den Weltwandel verändern.
Und das ist tatsächlich passiert. Aber jetzt ist mein Evangelium, dass wir Javascript nicht mehr benutzen sollten.
Ja und was soll man stattdessen machen?
Alles in WebAssembly.
Das Problem an WebAssembly ist, du kannst halt keine Webseiten mit manipulieren so richtig.
Das stimmt.
Ja, das stimmt.
Aber die Sache ist halt, was willst du sonst machen?
Aber das ist nicht gut genug. Wir sollten in die nächste Generation von Sprachen wechseln.
dass die
Das es gibt halt so viele seiten die sich darauf verlassen dass die dinger sich
Merkwürdig verhalten weil ich schon immer merkwürdig waren in javascript
Aber ich meine anstatt eine komplett neue sprache zu bauen wie wäre es denn beispielsweise mit irgendeinem kompatibilitäts
fleck
Oder sowas ja
Ich meine, eine neue Sprache ist ja im Prinzip auch nichts anderes.
Nur mit dem Unterschied, dass da wieder eine neue Sprache lernen muss und die ganzen,
das ganze JavaScript-Library-Ökosystem weggeschmissen wird.
Wäre nicht das gleiche wie zwei Sprachen?
Ja, nicht ganz, nicht ganz.
Neue Sprache hat halt alles neu.
Hast eine neue Sprache, hast einen neuen Compiler, hast ein neues Format, hast neue Libraries,
die du brauchst.
Wenn du quasi eher so einen Clean-Java-Skript bauen würdest,
dann würden zumindest die großen Libraries nach und nach darauf umsteigen.
Man müsste es halt wirklich gut planen, ja?
Man müsste das in fließenden Übergang machen,
man müsste dann auch erlauben, das pfeilweise einzuschalten und sowas.
Ähnlich wie Python 2 und 3, ja das hat ja auch nicht wirklich gut funktioniert.
Ne, ich weiß nicht, vielleicht hat er auch einfach recht und man sollte wirklich was komplett Neues bauen.
Ich meine es ist immerhin der Jason-Erfinder.
Und auch jemand der bei JavaScript mitbeteiligt war, ich weiß nicht ob es der Java...
Ne, hier steht doch Jason-Erfinder sogar dabei.
Und dann hat es halt so gestoppt. Es gibt immer noch Leute, die Languagen entwickeln, aber niemand ist dafür geschockt.
Eine Person kann eine gute Programming-Sprache schaffen, aber er bekommt keine Adoption dafür.
Es gibt viele schlechte Fehler in der Art und Weise, wie das Web funktioniert, in der Art und Weise, wie unsere Operierungssysteme funktionieren,
und wir bekommen keine neuen. Wir sind einfach immer mit diesem Scheiß verfestigt und sie bieten neue hin und wieder.
Naja, also, ich meine, ich verstehe schon, was er uns sagen will.
Vieles der Dinger ist teilweise entstanden irgendwie in den 70er und 80er Jahren.
Da wusste man über viele Sachen noch nicht so sehr Bescheid.
Das heißt ja aber nicht, dass sich viele Sprachen nicht weiterentwickelt haben,
weil man heute nicht die Sachen besser wüsste als damals.
Und ich gehe mal ganz stark von aus, dass du, ich meine, du kannst ja nicht einfach
das wegschmeißen, was da ist.
Willst du jetzt einfach Linux wegschmeißen und neu entwickeln?
Weil irgendjemand gesagt, sich so denkt, okay, also C ist eigentlich, sind wir so stuck mit
C und wir nehmen jetzt super krasse neue Sprache und machen Linux neu in der, das kannst du
vergessen.
Ich meine, das ist eine Arbeit von Jahrzehnten.
Das wird es so ohne weiteres nicht geben. Ich meine, dass unter Linux sind sie schon ein bisschen...
Mach ich in zwei Streams, easy, ja.
Ja, aber experimentell juckt doch im Endeffekt keinem. Es gibt sehr viele experimentelle Sachen.
Tempel OS zum Beispiel.
Aber das benutzt ja dann keiner.
Also, die Idee, man müsste jetzt 20, 30 Jahre entwickeln, oder sagen wir 20 Jahre, Linux
gibt es ja 1993 oder irgendwie sowas, ne?
First Linux Version.
Oder ja, sagen wir 30 Jahre gibt es den Kram jetzt schon.
Das musst du ja nicht wegschmeißen.
Also, ich bin der Ansicht, dass ein kompletter Rewrite oftmals nicht der richtige Ansatz
ist. Man sollte allerdings nicht... Okay, also kompletter Rewrite finde ich selten einen
guten Ansatz. Was ich aber manchmal nicht verkehrt finde, ist, dass man sagt, hey, alte
Dinger, die eh kaum jemand benutzt, die kann man auch mal rausschmeißen. Das könnte C++
beispielsweise auch mal ruhig machen.
Ja, irgendwann kommt Gnu Hurt raus und dann wird alles besser.
Ich glaube, das sollte kein radikaler Ansatz sein. Ich glaube, das sollte ein normaler, evolutionärer Ansatz sein.
obwohl es im Browser läuft.
Das ist halt der Unterschied zu JavaScript.
JavaScript ist dafür gedacht,
Webseiten zu bauen bzw. Webseiten
interaktiv zu machen.
WebAssembly ist dafür gedacht,
eher im Hintergrund zu agieren
und wenn es dann fertig ist,
die Sachen nach JavaScript
rüber zu schicken.
Also zum Beispiel
kannst du irgendeine C++-Leibe,
du kannst FFmpeg nehmen
und
in WebAssembly
kompilieren und dann FFmpeg im Browser benutzen.
Aber sobald
FFmpeg ein
Frame gerendert hat,
muss es das übergeben nach Javascript
und Javascript
schiebt das dann in irgendein
Canvas-Element.
In den HTML-Canvas-Element rein.
Also wir haben ja
quasi schon eine neue Sprache im Browser, oder
zumindest eine neue Runtime, in der Runtime,
wenn man es so will,
WebAssembly die letzten Jahre über und das hat ja auch ziemlich Fahrt aufgenommen.
Also WebAssembly-Entwicklung, also auch an Technologien, was es dazu gibt, hat sich
die letzten Jahre über einiges getan und wisst ihr was der Witz ist? Das tatsächlich
C++ für WebAssembly in der Tat eines der besten Sprachen ist. Rust ist auch nice,
Aber C++, muss ich ehrlich sagen, ist so eines der Punkte...
C++ und WebAssembly passt tatsächlich ganz gut zusammen.
Dass ich das doch mal sage, aber in dem Fall ist so.
Wir haben ja auch schon im Stream ein bisschen C++ WebAssembly gemacht mit FFmpeg und das
ging neben den üblichen C++ Merkwürdigkeiten ging das erstaunlich gut und es ging erstaunlich
viel auf Anhieb. Ich meine, wir haben einen Videoplayer gebaut in C++, der in WebAssembly
im Browser gelaufen ist, Frames gerendert hat, an Javascript übergeben hat und Javascript
hat es dann gerendert. Kannst du WebAssembly ein bisschen erklären? WebAssembly ist eine
extra Runtime im Browser, also quasi eine Runtime in der Runtime, die nicht dafür
gedacht ist, dass du sie selbst benutzt, also dass du quasi WebAssembly von Hand programmierst,
sondern dass du andere Programmiersprachen nimmst und die kompilierst du dann in WebAssembly.
Also zum Beispiel, du hast ein C++ Programm. Das kannst du kompilieren, entweder in native
Code für ARM-Plattformen, in Native Code für x86-CPUs oder was weiß ich, für IOS oder sonst was.
Du nimmst halt C++-Source-Code, kompilierst das für irgendeine Target-Plattform.
Und WebAssembly ist halt eines dieser Targets.
WebAssembly ist quasi so eine Art Runtime, so eine Art, äh, tja,
Poem. So eine Art JDK im Browse aufs, ne, nicht wirklich, das trifft's vielleicht nicht so genau.
JVM im Browser. Das ist eine Runtime, die du als Compiler-Target benutzen kannst. Du
kannst dein C++-Programm kompilieren in WebAssembly und da kommt dann irgendwelches Binary-Geschwurbel
raus, was die WebAssembly-Runtime im Browser versteht und dass du es ausführen kannst.
Du kannst beispielsweise ein Hello-World-Programm in C++ programmieren und dann nimmst du einen
C++ zu WebAssembly-Compiler. Da gibt es zum Beispiel das Ding. Das ist ein C++ zu WebAssembly-Compiler und dann nimmst du dein Hello World C++, schmeißt es da rein und rauskommt Binary-Code, was die WebAssembly-Runtime im Browser ausführen kann.
Man muss dazu sagen, WebAssembly ist sehr stark
reglementiert, was es darf und was es nicht darf.
Es läuft nach wie vor in einer Sandbox.
Du kannst nicht einfach auf die Platte zugreifen oder sowas.
Ist ja klar, es ist immer noch ein Browser und es ist immer noch
fremder Code, der zum größten Teil ausgeführt wird.
Allerdings kann WebAssembly auch nicht
mit der Webseite interagieren.
In dessen Kontext das vielleicht läuft.
Sondern WebAssembly ist mehr so eine Art
Background-Thread, könnte man sagen.
So ein eigener Prozess, eine eigene Runtime, die im Browser läuft und wenn die irgendwas
an In- und Output braucht, dann muss das über Javascript passieren.
Ne, das ist wieder was anderes.
Also zum Beispiel, wenn du einen FFmpeg-Videoplayer machen willst, so FFmpeg selbst ist eine C-Library
Angenommen du willst einen Videoplayer machen, ich nehm das als Beispiel absichtlich, weil
das haben wir im Stream mal gemacht, also im Angenommen du willst einen Videoplayer
machen, der Formate abspielen kann, die der Browser standardmäßig nicht unterstützt.
Das heißt, du musst das Video runterladen, du musst in FFmpeg die Videoframes einlesen,
du musst in FFmpeg die Videoframes decoden als RGB und dann diesen RGB Frame in die Webseite
in irgendeinem Canvas Element rendern oder mit WebGL in irgendeinem 2D Kontext rendern.
Genau das gleiche haben wir gemacht und das lief folgendermaßen, Javascript ging her,
hat angefangen das Video runterzuladen.
Alle paar, alle, keine Ahnung, alle Megabyte wurde, Parts, also wurde, das Megabyte was
runtergeladen wurde in Javascript, wurde über einen Funktionsaufruf zu WebAssembly quasi
rübergeschickt als ByteArray in die WebAssembly Runtime. Also du musstest vorher erstmal das
ganze initialisieren und sowas, dass dein FFmpeg läuft und alles mögliche. Du hattest dann halt
dort was gestartet, was darauf wartet, dass es Input bekommt. So, also in dein FFmpeg, was du
quasi kompiliert hast zu WebAssembly, das hast du gestartet, das wartete dann auf Input,
das wurde dann von Javascript ausgefüttert mit Raw Video Bytes, die Javascript im Hintergrund
runtergeladen hat, dann ging das Ganze in FFmpeg rein, FFmpeg hat die Sachen decoded,
beispielsweise MPEG2 oder sowas, das kann ja ein Browser nicht abspielen, MPEG2, Sachen
hast du runtergeladen über Javascript, reingepackt in WebAssembly, FFmpeg hat das decoded, dann
Und sobald FFmpeg ein Frame decodet hatte, gab es ein Callback zurück in Javascript.
Es wurden die Bytes, die decodeten Bytes als RGB, glaube ich, oder als, ja, wahrscheinlich
als RGB-Frame, wurden übergeben an Javascript, Javascript hat das Ganze genommen und dann
in einen WebGL-Kontext gerendert für einen Videoplayer und so haben wir im Stream, ich
Ich kann euch das auch mal zeigen.
Archiv
äh
Webass
Okay, man braucht komplette Wörter anscheinend.
Ja
Guck mal, ist 12 Monate her.
So, und da haben wir einen Videoplayer gebaut.
Guckt euch das mal an.
Ah ja.
Wir haben einen Videoplayer gebaut. Ihr seht es hier irgendwo.
Guck, das ist ein Videoplayer.
Ich hab ein Video runtergeladen
in einem Dateiformat, das der Browser normalerweise nicht abspielen kann.
Javascript lädt im Hintergrund das Video runter.
Das wird TS-Video, also MPEG-2-Video.
Das kann das Ganze nicht.
Guck hier, das wird hier runtergegangen.
Javascript lädt das Video runter, schickt es an WebAssembly.
In WebAssembly ist hier C++ irgendwo. Wo haben wir es hier oben?
Ja, hier, da, in der, in der Teil- C++, zu WebAssembly, translated, decoded das Video und schickt es dann an den WebGL-Kontext zum Rendern für das Video.
Das war extremer 5Head-Shit, äh, wir haben, glaub ich, 10 Stunden oder so daran rumgebaut insgesamt, bis das funktioniert hat.
Aber ihr seht, wir haben hier einen Videoplayer, der wirklich auch sehr performant lief, für das, dass es einfach im Browser ist.
Wir haben dort, glaub ich, 4K-Videos. 4K, 60 FPS-Videos haben wir gerendert.
Und die liefen mit ungefähr Hälfte der Geschwindigkeit.
Also man konnte damals auf dem alten Rechner bei mir, also das ist auch sehr performant, muss man sagen,
man konnte damals bei mir auf dem alten Rechner ein 1080p Video, 60 FPS, ruckelfrei abspielen im Browser,
hat natürlich ordentlich CPU gefressen, in einem Videoformat, das der Browser normalerweise nicht unterstützt.
Also WebAssembly, FFmpeg hat das Ganze decoded und dann wurde es per WebGL gerendert.
gerendert
Das wie gesagt das ist echt nicht ohne gewesen
Man sieht auch dass teilweise ein paar kleine slowdowns drin hat und sowas ja das ist echt nicht ohne gewiss aber es hat gut
funktioniert verhältnismäßig gut
Und dafür ist das einfach geil wenn ihr euch überlegt
Wie willst du ordentliches video decoding machen im browser gar nicht es gibt keine es gibt kein javascript gegenstück zu ffmpeg
Hat noch keiner gebaut, wird wahrscheinlich auch keiner bauen.
Also was ist das naheliegendste?
Du nimmst FFmpeg selbst und übersetzt das in irgendein Format, was dein Browser versteht.
Und das bietet sich WebAssembly halt an, weil WebAssembly explizit dafür gedacht ist, quasi
als Compiler-Target zu fungieren.
Also kannst deine C++-Programme, Rust-Programme übersetzen, den WebAssembly dann im Browser
laufen lassen.
Aber wie gesagt, es ist sehr stark reglementiert, du kannst damit nicht so ohne weiteres direkt
aus WebAssembly mit Webseiten interagieren.
Ja und WebGL ist wieder was anderes, WebGL ist zum rendern für, ja sagen wir mal, wenn
du was GPU beschleunigt rendern willst.
Das war richtig high IQ Shit, ich glaube das war eines der kompliziertesten Sachen, die
wir je im Stream gemacht haben, den WebAssembly Videoplayer.
Wo sind wir jetzt eigentlich stehen geblieben?
Ah ne, das Video war fertig, wir sind gar nicht stehen geblieben.
So, next.
Jetzt hab ich gleich, jetzt hab ich gleich erstmal gleich instant 40 Leute verschreckt.
Wir hatten knapp über 200, jetzt haben wir 100, äh, jetzt haben wir 187.
Okay, was haben wir denn sonst wie noch?
Ich mecke jetzt mal ein bisschen über das Video, ihr wisst, ich bin manchmal viel zu kleinlich, was solche Technik-Videos angeht und ich gehe davon aus, hier ist einiges vereinfacht, weil das eben ein Video ist, was sich an alle richtet und nicht Leute, die ein bisschen Netzwerkahnung haben oder ein bisschen Ahnung von Netzwerkprotokollen und sowas. Wir gucken uns das mal an. Ich mecke aber sowas immer gerne, also mal gucken.
Ihr lauft ingame um die Ecke, seid gerade noch so in Deckung, oder zumindest glaubt ihr das?
Ihr bekommt trotzdem noch Hits, obwohl ihr längst in Sicherheit seid.
Das kann an vielen Sachen liegen.
In modernen Games oftmals hauptsächlich Kleinstzeit-Hit-Detection.
Natürlich kann das auch an ganz anderen Sachen noch liegen, aber...
...bei modernen Games wahrscheinlich eher Kleinstzeit-Hit-Detection.
Der Lag hat euch gekillt.
Nicht zwangsläufig.
Okay, wenn ich in dem Tempo weitermache, dann kommen wir durch das Video nie durch.
Lag bedeutet eigentlich in der Regel eher entweder Server-Side-Lag und damit ist eigentlich
in der Regel gemeint, wenn man von Lag spricht, das Server ist schlicht und ergreifend überlastet
und kann nicht alles verarbeiten und muss Sachen droppen oder kann es nur langsamer
verarbeiten und irgendwelche Queues laufen voll oder aber Paketverlust.
Also Sachen werden nicht abgearbeitet. Das ist eigentlich in der Regel lag. Oder halt nur verzögert.
Du wirst um die Ecke getroffen. Ist nicht zwangsläufig lag, sondern eher Client-Side-Hit-Detection mit sehr großzügig eingebauten Zeitfenstern, wie das noch bearbeitet wird.
Früher hattest du das Problem nicht. Da war alles serverseitig. Das Problem war nur, dass du halt das oftmals schlecht spielen konntest.
Weil du halt nicht dorthin geschossen hast, wo du hingeschossen hast, weil es auf dem Server woanders war.
Beziehungsweise auch, ähm, du dann mit nem Ping von 150 halt echt gelitten hast gegen einen mit nem Ping von 20.
Wo ich ja persönlich der Meinung bin, das sollte auch so sein.
Die Leute sollten schlicht und ergreifend einfach auf dem Server bei ihnen in der Nähe spielen. Kann ja nicht sein, dass du
Gegen Leute spielen musst mit einem Trana oder Ping teilweise. Das haben sie in Overwatch ganz gut gelöst. In Overwatch haben sie es, glaube ich, bei 100 Millisekunden gecappt.
Also der Server erlaubt nur noch Sachen, die 100 Millisekunden
zurückliegen als Hits, obwohl das bei ihm
Kleinstseitig ein Hit gewesen ist. Ich muss auch ehrlich sagen im Nachhinein betrachte ich habe ja wirklich ganz ganz lange Overwatch gegrindet. Ich muss sagen
Netzwerktechnisch
Finde ich Overwatch eines der besten Games, Multiplayer Games, die es je gegeben hat.
Also mir fällt kein Game ein in der Geschwindigkeit und in der Genauigkeit
Und wie selten dort Bullshit passiert. Klar du hast in Overwatch auch die üblichen Verdächtigen
Du schießt mit McCree direkt durch den Kopf von irgendeinem Typ durch, aber das passiert
Verhältnismäßig selten
Ich muss sagen, Overwatch Netzwerktechnisch ist eines der besten, technisch saubersten
Sachen die ich je gesehen habe, Multiplayer Gaming mäßig
Auch nicht CSGO
Also ohne Scheiß, Overwatch ist mit das Beste, was ich- Gut, ich muss sagen, ich hab CSGO, also auch CS- CS- CSGO 2, hab ich noch nie angeguckt.
Vielleicht, den haben die ja mittlerweile aufgeholt.
Aber es hat sich noch kein Game so gut netzwerktechnisch für mich angefühlt und so sauber angefühlt wie Overwatch.
Was passieren kann als Spieler. Aber habt ihr schon mal versucht, abgesehen von blindem Hate gegen die Server, zu verstehen, was da wirklich passiert?
Ja, hab ich.
Weil in Wirklichkeit wissen wir doch eigentlich fast alle nicht, was wir da genau haten.
Naja gut.
Hundertprozentig kannst du es ja nicht wissen, weil du nicht weißt, wie das Spiel das handelt.
Gut, es sei denn, du machst extrem krass detaillierte Analyse.
Aber ja, ich hab mir da schon öfters Gedanken drüber gemacht, warum das so passiert.
Ich hab da sogar schon für über 10 Jahre Videos zugemacht,
dass die meisten Leute, die was von lag schreien, eigentlich gar nicht lag meinen.
Black Minen.
Du sitzt ja auch direkt in Frankfurt an der Quelle.
Das stimmt wohl. In Battlefield 3 zu den Servern hatte ich teilweise
einen Fünferping, wenn die Server in Frankfurt oder Köln standen.
Fünferping ist auch schon nice, oder?
Gibt's hier vielleicht sogar bald bessere Lösungen?
Das Problem hinter Deckung getroffen zu werden, passiert aus der...
Bisschen höhere Bitrate für ihr Video hätten sie vielleicht nehmen können.
Hier kommen alle Pakete an, die Infos werden jetzt alle zusammengefasst und dann zurückgeschickt an jeden Spieler.
Hier kommt aber jetzt ein wichtiger Faktor dazu, der alles etwas komplizierter macht.
Der Ping. Der Ping ist die Zeit, die dieses Paket hin zu und zurück vom Server...
Okay, wenigstens das ist schon mal richtig.
Eigentlich ist die Erklärung bis jetzt echt nicht übel.
...braucht. Wenn das Paket...
Ich mecker gerne bei sowas, wisst ihr ja.
...hinten hin und 10 Millisekunden zurück braucht, dann ist der Ping 20.
Wenn ihr ein Paket über Willhaben PayLivery verschickt und es braucht einen Tag zum Empfänger und das Geld dann wieder einen Tag zu euch, habt ihr einen Lag oder Ping von zwei Tagen.
Aber die Pakete der Spieler...
Leute, ich hab mich grad, ich weiß nicht, ob es euch auch so klingt.
Ich hab mich bei diesem Bild grad ein wenig verguckt.
Ich dachte, das hier ist der Kopf, das hier ist der Rücken.
Und dann dachte ich mir so, okay, was ist, okay, das ist der Bau, da dachte ich mir so,
was ist das?
Erkennt ihr das vielleicht, was ich gesehen habe?
Yep.
Moment.
Aber ja, das ist ein Gesicht in der Richtung, dann ergibt das viel eher Sinn.
Zwei Tagen.
Aber die Pakete der Spieler brauchen nicht alle gleich lang zum Server.
Wenn Spieler 1 weiter vom Server entfernt ist als Spieler 2, dann kommt das Paket von Spieler 2 früher an und er bekommt auch früher Informationen vom Server zurück.
Dazu kommt noch, dass diese Pakete meistens nicht direkt vom Spieler zum Server kommen.
Das wäre ja zu schön.
Für die Route von Spieler zum Server ist dann dein Internet Provider zuständig.
Nö.
Die Lieferfirma ist er nicht.
Der ist vielleicht zum Teil dafür zuständig.
Aber nicht für die ganze Route zum Server.
Wahrscheinlich noch nicht mal für einen Drittel der Route zum Server.
Was dein Internetprovider machen kann ist,
dafür zu sorgen, und das ist das, wo die Telekom Richtung YouTube letzten Jahres über Probleme hat.
Was dein Internetprovider machen kann ist,
dass er,
okay, sagen wir es mal umgangssprachlich,
genug Bandbreite hat,
ähm, zu den Netzwerken, über die deine Pakete gehen müssen, dass da nix an die Grenze kommt.
Da hatte die Telekom, und auch Vodafone, gerade am Anfang von Corona, könnt ihr euch noch dran erinnern,
wo am Anfang von Corona die Standardwiedergabequalität bei YouTube standardmäßig auf 480p gesetzt wurde,
wo die Provider Probleme hatten, weil auf einmal, HUCH, die Leute benutzen ja auch ihre Bandbreite daheim,
diese Probleme hatten und so nach dem Motto, Mist, jetzt benutzen die Leute Bandbreite für Videos und die wollen Homeoffice arbeiten, fuck, Alter, das funktioniert ja nicht.
Also die können quasi gucken, sagen wir es mal ganz billig, dass ihr Uplink ordentlich dimensioniert ist.
Das ist natürlich nicht ganz richtig, weil es ist nicht nur ein Uplink, es sind mehrere.
Und ich habe so einen Peering schon mal live gesehen.
Ich hatte ja die Ehre, ich durfte ja schon mal...
Das hat doch YouTube gemacht und nicht der ESP.
Das ist richtig, das ist richtig, das hat nicht der, das, das, ja, das hat YouTube gemacht standardmäßig.
Aber es war aus diesem Grund, weil's Bandbreitenprobleme es fuck gegeben hat
und auch viele Leute nicht mehr richtig im Homeoffice arbeiten konnten.
Das war wahrscheinlich was, was Hand in Hand ging.
Ja, das hat YouTube gemacht, aber das war nicht einfach nur, weil YouTube ihm jetzt,
weil YouTube sich gedacht hat, oh ja, heute wär's mal ein schöner Tag, die Qualität auf 480p zu setzen.
Das hatte externe Umstände, warum YouTube es ausgerechnet dann gemacht hat, ja.
Und ich hatte ja auch Bandbreitenprobleme.
Und...
Was wollte ich denn jetzt sagen?
Ja, ich hatte ja das Glück, ein paar Mal
ins Dezix zu dürfen in Frankfurt,
als ich noch beim Provider gearbeitet habe.
Und ich habe so Peering-Links tatsächlich schon,
Peering-Ports tatsächlich schon gesehen.
Das ist oftmals total unspektakulär.
Wir hatten zum Beispiel
ein Kabel damals, weiß ich noch,
haben wir neu gepatcht zu Freenet.
Da ist man hingegangen,
an seinen Rack im Dezix,
Hat nen Kabel genommen und an den Switch gesteckt
Und in den passenden anderen Port reingesteckt
So und der kam dann auf was weiß ich 3 Racks weiter raus
Bei irgendwas was Freenet gemietet hat
Das war glaube ich noch bevor es alles United Internet war
Und ging bei Freenet dann in den ihren Switch rein
So
So sah so ein Pairing Link aus
Das sah äußerst unspektakulär aus
So, und da können natürlich, das ist das, was die Internet-Provider machen können.
Die können natürlich gucken, dass sie ordentlich vernetzt sind mit anderen Providern.
Aber über die Route entscheiden die nur zum Teil.
Weil, wenn das das Netz des Internet-Providers verlässt,
hat der Internet-Provider da erstmal keinen großen Einfluss drauf,
wohin das Ganze geht.
Er kann nur sagen, hier, da, Exit-Router, was weiß ich, nächstes, nächstes Target ist
autonomes Dings-Netz 573 und da geht's jetzt hin.
Zack, bumm, dann ist das da und dann entscheidet der Nächste, wie er es weiter routet.
Okay, wir brauchen aber viel zu lang für.
Also wie gesagt, das stimmt nicht, der Provider ist nicht für die Route zum Ziel verantwortlich.
Zum Teil, aber bei weitem nicht für die ganze Route.
Wenn hier eine gute Route gewählt wird, mit möglichst wenigen...
Das ist ja auch der Grund, warum so Sachen wie Gaming-VPNs teilweise was bringen können,
wenn der Provider euch über Sibirien routet.
Ja? Also...
Es gibt ja Gaming-VPN-Anbieter, die haben halt ein paar Server weltweit verteilt,
und das muss nicht immer gut sein, ja?
Also zum Beispiel, wenn ich von hier zu einem Server in Köln oder von hier zu einem Server in Frankfurt gehe,
dann werde ich höchstwahrscheinlich hier in meinem Provider-Netz und in meinem Provider-Netz in Frankfurt auch wieder rauskommen.
Aber wenn das ein bisschen weiter weg ist, wenn ich jetzt beispielsweise irgendwelche koreanischen MMOs in Korea spiele,
oder auf dem asiatischen Server, dann ist mein Provider nicht dafür zuständig, das Paket von mir dort hinzubringen,
zumindest nicht die ganze Strecke.
Und da können Gaming-VPN-Anbieter was bringen, weil, mal angenommen, ich werde wirklich mega beschissen geroutet, ja, keine Ahnung,
Ich werde von hier nach New York und von New York dann wieder zurück nach Russland und von Russland über China dann nach Südkorea
Also was auch immer, ja?
Dann ist das natürlich eine ziemlich beschissene Route und dann habe ich einen Ping von 450 oder sowas
Oder von 500 oder sowas
Und das ist halt kacke
Und wenn ich einen Gaming VPN Anbieter benutze, dann kann das anders sein
Dann gehe ich hier zum nächstgelegenen VPN Endpunkt, der vielleicht in Frankfurt steht
Und dann händelt das Routing der Gaming-VPN-Anbieter über seine Server, die er quasi weltweit stehen hat.
Das funktioniert. Das können die machen.
Das ist dann vielleicht eine etwas optimiertere Route zu dem asiatischen MMO-Server.
Aber so macht das ja mein Provider nicht.
Mein Provider schickt das aus seinem Netz raus und danach ist es ihm egal.
Stopps, dann ist der Lag klarerweise geringer, weil die Daten schneller ankommen.
Wenn das Routing vom Internetprovider aber schlecht ist und wir tragische Umwege fahren, dann kann euch das einen ziemlich harten Lag verursachen.
Egal wie gut das Routing aber auch ist, wer weiter weg sitzt vom Server, wird auch immer mehr Lag bzw. einen höheren Ping haben.
Das ist leider ein Problem, das auch die beste Technologie nicht lösen kann, denn wir sind nun mal abhängig von maximalen Geschwindigkeiten der Physik.
Eine Sache darf man aber dabei auch nie vergessen, ob nämlich der Datenpaket-Lieferdienst überhaupt alle Pakete liefert.
Pakete liefert. Manchmal gehen am Weg nämlich Pakete verloren. Kennen wir von der Post. Beim Gaming beziehungsweise beim Server nennt sich das Ganze einfach Packet Loss.
Und die meisten Games haben mittlerweile sogar ein eigenes Symbol, wenn das passiert. Dass solche Pakete am Weg verschwinden, liegt übrigens so gut wie nie am Spiel, beziehungsweise an deren...
Das finde ich gut. Das finde ich wirklich gut, dass er das mal sagt. Die meisten Leute haben übelste Panik, dass bei ihnen daheim irgendwas schief läuft, wenn Pakete verloren gehen.
Und ich habe auch schon jahrelang in Videos immer wieder gesagt, Leute, macht euch ja nicht so viel Gedanken.
Höchstwahrscheinlich liegt das Problem nicht in euren eigenen vier Wänden.
Und wisst ihr, was ich auch immer witzig finde?
Wenn die Leute einen Traceroute machen und sagen, oh, Packet Lost, Traceroute, ich seh's genau, Packet Lost, passt mal auf hier.
Wir machen jetzt mal was.
Das ist immer extrem, extrem...
Keg-Wait-Moment.
Ich leake keine IP bei Traceroot, weil man ja nicht meine Absender-IP sieht.
Und selbst wenn...
Scheiß drauf. Ich zeige euch das jetzt mal. Ein Fehler, den viele
Leute machen, wenn es um Packetloss geht.
So, pass mal auf.
Wir gehen jetzt Traceroute...
Wie?
Hab ich das nicht mal installiert?
Packweight...
Traceroute...
Traceroute zu...
Ähm...
Sagt mir mal irgendeine China-Seite.
Was ist eine schöne
China-Chinesen-Seite, Leute?
Aber Aliexpress ist doch bestimmt nicht nur in China, die haben doch bestimmt mehrere Server weltweit.
Aliexpress.com
Okay, hier haben wir das erste schon.
Das hier ist mein Router.
Das hier ist bei mir im Netz.
Also das ist mein Router.
Und das hier ist wahrscheinlich mein Vodafone-DSL-Modem-Router-Kombi-Gerät, gehe ich mal von aus.
Also soviel ist es easy, das ist noch alles bei mir lokal.
Wir können es ja mal kurz fertig laufen lassen.
Das ist alles noch bei mir lokal, easy.
Der nächste Hop bei Unity Media kommen die Leute jetzt auf die Idee und sagen
auf die Idee und sagen, aha, hier, hier, Packet Loss, Packet Loss, das ist kein Packet Loss, Leute, ich mein,
es kann ja schlicht und ergreifend auch kein Packet Loss so wirklich sein, wenn der nächste Hop dann auf einmal
funktioniert, mein klar könnte man sagen, hier gab es einmal Packet Loss, beim nächsten Paket ging es dann wieder,
ist aber Schwachsinn, das ist nicht das, oh guck mal, das Paket kommt ja angeblich auch nie an, aber witzigerweise,
Wenn, ups, was hab ich jetzt gemacht?
Aber wenn ich, alter!
Ich hab zu viel Coffee pastet.
Aber wenn ich AliExpress pinge, dann funktioniert das Ganze.
Wenn auch mit nem ziemlich...
Okay, das ist erstaunlich schnell.
Also man sieht schon irgendwie,
das kann nicht so wirklich Pack'n'Lost sein
an der Stelle. Und viele Leute gucken sich
das dann an und denken sich, oh nein!
MonkaS!
Ich hab ja ganz schlechtes Internet.
So viel Päckel los und so viel Geld verloren und aiaiai ganz schlimm
Das ist aber überhaupt nicht der Fall
Was man hier wirklich sieht ist
Welcher Zwischenschritt
ICMP Error Packages
Wenn das defaultmäßig noch, ich geh mal davon aus, dass es standardmäßig noch auf ICMP
Dass es standardmäßig noch die ICMP Variante benutzt für
für sowas rute festzustellen was du hier siehst ist welche icmp also welche
knoten icmp packages oder sachen antworten fehler zurückschicken weil
das funktioniert folgendermaßen so eine trace route es wird ein paket los
geschickt gibt es eine anne ja du kannst auch
irgendwelches TCP-basiertes Machen, auch mit Time-to-Live und sowas, das geht irgendwie.
Aber im Prinzip funktioniert es relativ easy.
Es wird ein Paket losgeschickt mit einer Time-to-Live von 1.
So, TimeToLive von 1 bedeutet, also es wird immer, es wird ein Paket losgeschickt hier zu diesem Ziel, zu diesem Ziel, TimeToLive von 1, TimeToLive ist ein Feld, ist ein Header-Feld, fragt mich jetzt bitte nicht genau, ich glaube, im IP-Header, glaube ich, ttl, bin ich mir aus dem Kopf nicht so, wahrscheinlich, wahrscheinlich, IP-Header gibt den größten Sinn, so, du hast im Header ein TimeToLive-Feld, so, und was passiert ist,
Jedes Mal, wenn dieses Paket von einem Router weitergeschickt wird, wird die Time-to-Live 1 abgezogen.
Und wenn die Time-to-Live bei 0 angekommen ist, schickt der Router, also das Paket wird dann verworfen, Time-to-Live 0.
Chat, wer ist high IQ, wer weiß, warum man eine Time-to-Live-Setting überhaupt hat?
Woran könnte das liegen? Für alle, die es nicht wissen, können sich das Emote angucken.
Also eines der Gründe, warum es sinnvoll ist, eine Time-to-Live in einem Paket zu haben. Schleifen, richtig.
Dass falls aus irgendwelchen Gründen im Kreis geroutet wird, dass die Pakete irgendwann
weggeschmissen werden, falls es wirklich mal Koggerskreise gibt.
So, the time to live wird runtergezählt und der Router, der die time to live auf 0 runterzählt,
der verwirft das Paket, aber schickt eine Error-Message zurück an den Absender, irgendeine
ICMP-Error-Messages. Irgendeine ICMP-Error-Message. Ich weiß, ich habe keine Ahnung, ehrlich gesagt. Welche genau. Aber du bekommst...
Destination Unreachable oder so? Nee, ach, keine Ahnung. Du bekommst, du bekommst zumindest ein Fehlerpaket zurückgeschickt, dass dein Paket verworfen wurde.
So, und
das ist dann der Fall hier, wo man sieht, aha, hier wurde mein Paket verworfen.
Und da gibt es natürlich ein paar Informationen zwischendurch, weil normalerweise bekomme ich ja gar nicht mit.
Wie die zwischen hops heißen also ich rute ja nicht explizit von da nach da von da nach da von da nach da
Ich sage ja nur ich will hierhin an die ip adresse von aliexpress damit ich jetzt die zwischenschritte raus bekomme
Muss ich mir die ip angucken
Welcher router hat mir die error message geschickt ja also der router zählt die time to live auf null runter
und schickt in der error message zurück
Und in der Error-Message steht dann die Absender-IP des Routers drinnen, der die Error-Message
generiert hat.
Also, das hier ist ein Paket TimeToLive 1.
Mein Router verwirft das Ganze, schickt mir eine Error-Message zurück und ich sehe, das
ist der Router.
TimeToLive von 2, TimeToLive von 3, TimeToLive von 4, TimeToLive von... und so weiter.
So.
Und ich schicke mir das alles zurück.
So.
Und was das hier jetzt bedeutet, wenn hier nichts zurückkommt, heißt nicht, dass es
diesen Zwischenhop nicht gibt.
Sondern, das bedeutet einfach nur, dass dieser Zwischen-Hop, das dürfte wahrscheinlich der
Unity-Media so, der Eingangs-Router von Unity-Media, also der erste Unity-Media-Hop an der Stelle,
der antwortet schlicht und ergreifend mit keinem Fehler, wenn er das Paket verwirft.
Der verwirft das Paket, schickt mir aber keine Fehlermeldung zurück.
Es ist kein Packet-Loss, das ist einfach nur so konfiguriert, dass dieser Eintrag hier,
dass dieser Router an der Stelle keine Fehlermeldung zurück liefert, wenn er ein Paket verwirft.
Das ist nicht gleich Packet Loss, das ist eine Konfigurationssache des jeweiligen Routers.
Und wie man hier sieht, alle anderen danach machen das auch so.
Und nachdem man keine Antwort jemals wieder bekommt, weiß man auch nicht, wie viele dazwischen
liegen, weil der AliExpress, der letzte Router, das anscheinend auch nicht macht.
Also, easy.
Okay, wir können das theoretisch, glaube ich, sogar noch hochstellen, dass wir dann vielleicht doch irgendwann mal eine Antwort kriegen.
Aber das ist der Sinn von sowas wie Traceroute. Das dient nicht dazu, Packet Loss irgendwie aufzudecken.
Das dient dazu, dass man so grob eine Ahnung hat, wo seine Pakete rumgeroutet werden.
Das kann natürlich sinnvoll sein, um rauszubekommen, ob man zum koreanischen MMO-Server eine schlechte Route nimmt.
Wie gesagt, erst nach New York, dann rüber nach Russland, dann runter nach China und dann nach Korea.
Das könnte man daran, wenn du auf der Strecke Route hast, die Antworten mit Error-Messages, könnte man das halbwegs nachvollziehen.
Das bedeutet nicht Peguelos. So, das muss man an der Stelle nochmal sagen.
Das behaupten sie nicht in dem Video, also ich erzähle das jetzt hier nicht, weil sie das in dem Video gesagt hätten,
sondern nur, weil viele Leute denken, dass das damit was zu tun hat.
Hat aber nix damit zu tun.
Ja. Und es gibt noch ein zweiter Grund für Peguelos.
Der wird auch oftmals missverstanden.
Wobei der bei Spielen jetzt weniger, weniger auftritt.
Man kann auch schlicht und ergreifend mehr Daten verschicken, als auf dem Weg irgendwo durchpassen.
Das ist dann kein Packet Loss in Form von Kabel ist kaputt oder sowas in der Richtung.
Oder irgendwas anderes ist furchtbar kaputt.
Nein, irgendwo auf dem Weg ist schlicht und ergreifend die Bandbreite zu gering, dass Pakete getroppt werden müssen.
Das kann man ganz einfach lokal demonstrieren.
Das mache ich jetzt nicht im Stream, ich erzähle euch das bloß, weil ich keinen Server mit dem ich das hier ausprobieren könnte.
Das kann man ganz einfach lokal demonstrieren.
Man macht beispielsweise mal ein iPerf oder sowas auf, bei sich auf dem Raspberry Pi oder sonst wo,
und schickt dann mal UDP-Messages, also man sagt iPerf, keine Ahnung, man hat einen 1-Gigabit-Netzwerk-Port,
und man sagt iPerf, generiere mal 2 Gigabit die Sekunde an Traffic und versucht es rüber zu schicken.
Dann werdet ihr sehen, ihr habt ungefähr 50% Packet-Loss, wahrscheinlich sind es, realistisch betrachtet, eher sogar 60%.
Warum habt ihr 60% Packetlost?
Naja, weil ihr schlicht und ergreifend viel mehr schickt als durchpasst.
Was soll man sonst haben als Packetlost?
Wo sollen die hin, die Dinger, ja?
Okay, auf geht's. Weiter.
Ein Gameserver am Weg verschwinden liegt übrigens so gut wie nie am Spiel,
beziehungsweise an deren Gameserver, sondern in 99% der Fälle am Weg davor.
Ja, aber nicht bei euch in der Wohnung, meistens zumindest.
Das ist jetzt ein bisschen blöd dargestellt, weil das irgendwie so ein Kabel ist, was die Leute bei sich daheim haben.
Es liegt in der Regel nicht bei euch am Kabel oder bei euch daheim.
Natürlich, es kann immer sein, es kann sein, dass eure Fritzbox-Party den Abgang macht,
aber das äußert sich meistens anders.
Es kann sein, dass ihr irgendwelche ultra alten, kaputten Kabel habt.
Das lässt sich aber meistens relativ schnell ausschließen oder miesen WLAN-Empfang und
wer über WLAN spielt, hat eh die Kontrolle über sein Leben verloren, aber das Problem
lässt sich ja meistens relativ einfach ausschließen, ja?
Man stöpselt sich möglichst direkt mit einem Kabel, was halt funktioniert, an seine Fritzbox
an und guckt, ob das immer noch so ist, so.
Und wenn das dann weg ist, okay, mag es an irgendeiner Verkabelung liegen oder am WLAN
Aber in der Regel liegt es nicht bei euch in den eigenen vier Wänden.
Irgendwo auf dem Weg dazwischen.
Ich meine, je nachdem wie weit das Server weg ist, kann da schon ein bisschen was passieren.
Und außerdem, wenn ihr so krasse Netzwerkprobleme habt,
dass das schon bei Spielen auffällt,
ich meine, Spiele haben wirklich keine allzu hohe Bandbreitenanforderung,
Dann kopiert mal was übers Netzwerk auf irgendein Nass oder so, dann habt ihr, wenn ihr so ein beschissenes Kabel habt, dann habt ihr wahrscheinlich von eurem Gigabit im Endeffekt beim Transfer von einer Datei noch, keine Ahnung, 150 MBit übrig oder sowas.
Also das fällt dann schon auf und das lässt sich auch einfach, aber ansonsten wird es höchstwahrscheinlich nicht bei euch in den eigenen vier Wänden liegen.
So, ok, weiter.
weiter. Das macht auch meistens nix. Also ganz ehrlich, das juckt, also das da, also das da juckt
ein Netzwerkkabel in der Regel mal gar nix. Natürlich sollte man Netzwerkkabel nicht,
nicht krass abknicken und mehrfach hin und her, links knick rechts, links knick rechts. Nee,
das ist klar, da drin sind auch nur Kupfer, Kupfer, äh, Kupfer, Kupferdrähtchen, ja,
Ja, die können auch kaputt gehen, aber so mal so ein kleines, das macht dem Netzwerkkabel eigentlich nicht wirklich viel aus.
Okay, bei Glasfaserkabeln sollte man das natürlich nicht machen, dann kriegst du es relativ schnell kaputt.
Ein Kabel kann einen Schnick haben. Wenn ihr wie Plebs im WLAN zockt, dann ist das immer ein Kabel.
Ja, das ist eine bescheuerte Idee, WLAN.
Oder euer Internetprovider wählt so eine schlechte Route, dass es daran liegt.
Aber der Internetprovider wählt die Route gar nicht.
Der Internetprovider ist nur dafür zuständig,
bis es bei ihm aus dem Netzwerk rausgeht.
Natürlich kann ein Internetprovider
das steuern,
wo es das weiter schickt.
Aber wenn danach Mist
passiert, kann der Provider nicht viel
machen dagegen.
Ihr könnt es ganz woanders
rausschicken und hoffen, dass es dann einen anderen Weg
nimmt. Ja, ein bisschen Einfluss hat der Internetprovider
schon drauf. Aber es ist nicht so, dass euer
Internetprovider zuständig wäre für die komplette Route
euch zum ziel je länger die lieferkette desto mehr geht am weg verloren wenn euer
internet ja okay ja komplett los ist was durchaus mal vorkommen kann da gibt wenn
es wohl davon ist zum beispiel die oftmals in ihrem eigenen netz genug
probleme haben auch noch eine lösung eure packet loss probleme easy in den
griff zu bekommen passend zum thema haben wir uns nämlich für dieses video
den partnern angeholt weil man damit sein routing teilweise selbst besser lösen
kann als der das ist nicht gelogen das stimmt die chancen dass es was bringt in
dem fall würde ich sagen ist recht gering aber ich meine dass das ist nicht
nicht falsch eigene internet provider der ping ist dann natürlich auch andere
vorteile wie das ja auch selbst besser lösen kann als der wir gucken uns das
placement trotzdem an der ping ist dann vielleicht höher das spiel läuft aber
trotzdem besser weil kein packet loss dazu kommen natürlich auch andere
Vorteile, wie dass ihr online Inhalte ansehen könnt, die eigentlich in eurem Land nicht verfügbar sind, was definitiv was für mich der einzige wirklich sinnige
Grund für einen VPN übrigens ist.
Ein Major Win ist bei zum Beispiel Netflix.
Außerdem habt ihr generell einen verbesserten Schutz eurer Daten, auch wenn ihr nicht mal mit einem VPN-Server verbunden seid.
Was? Was haben wir? Warum?
Auch wenn ihr nicht mal mit einem VPN-Server verbunden seid. Warum? Habt ihr generell einen verbesserten Schutz eurer Daten, auch wenn ihr nicht mal mit einem
VPN-Server verbunden sein?" Inwiefern? Ich meine, es ist ja nicht nur, dass meine Daten besser
geschützt werden mit einem VPN. Also insofern... Also das ist ja auch so ein Trugschluss, dass die
Daten besser geschützt werden mit einem VPN. Also der einzige Weg, der vielleicht besser geschützt
ist, ist die Strecke, die eure Daten nehmen, vom Eingang des VPNs bis zum Ausgang des VPNs.
Dafür handelt ihr euch die Probleme ein mit, dass euer VPN-Anbieter vielleicht komische
Dinge macht. Das heißt, ihr müsst eurem VPN-Anbieter trauen. Wer weiß, was die machen,
Ja, also das Problem machst du sonst nicht.
Und das nächste ist, dass jetzt die Daten nennenswert irgendwie auf dem Weg datenschutzrechtlich, bedenklich irgendwie verarbeitet oder gespeichert werden.
Es sei denn, es ist irgendwie der Geheimdienst am Start oder so.
Der kann sich aber auch einfach vorm, äh, da irgendwie anderweitig, wenn ihr wirklich Angst vorm Geheimdienst habt, dann, ja, ähm, dann habt ihr wahrscheinlich auch andere Probleme, weil ihr komische Dinger macht, ja.
Aber ja, okay, sagen wir mal, ihr habt Angst vorm Geheimdienst, ja, okay, dann könnt ihr die Sachen natürlich über den VPN schicken, aber spätestens beim Ausgang des VPNs können die Dinger wieder abgegriffen werden, also da hast du eh keine Chancen.
So, das heißt, die Chance, dass eure Daten irgendwie aufgezeichnet und verarbeitet werden und für irgendwelche, was weiß ich, sagen wir mal, Analysen und Werbeanrufe, keine Ahnung, was auch immer, benutzt werden, ist relativ gering, dass das auf dem Weg, auf dem reinen Netzwerk-Routing-Weg unterwegs passiert.
Wo das eher passiert ist, den Service, den ihr eigentlich benutzen wollt, und der kann
ja eure Daten nach wie vor lesen, ob VPN oder nicht, ich mein, ihr geht rein in euer VPN
und irgendwann muss das auch mal wieder raus.
Und in dem Moment, wo das das VPN verlässt, weil ich mein, das VPN, das ist ja auch mal
irgendwann, also euer VPN terminiert ja nicht direkt auf dem Webserver von Google, sondern
Irgendwo, bei irgendeinem Exit-Ding, Router-Exit von diesem VPN-Provider, spätestens da ist
vorbei mit VPN und der Anbieter bekommt eure Daten so, wie wenn ihr normal drauf zugreifen
würdet und wenn der jetzt der Meinung ist, die Daten speichern zu müssen und verkaufen
zu müssen, dann kann das trotzdem passieren und das ist auch viel eher das, wo irgendwelche
Daten geleaked werden, nämlich von den Anbietern, nicht irgendwie unterwegs oder so.
Also sprich, der einzige Fall, wo das tatsächlich sinnvoll sein könnte, wäre sowas wie, man sitzt im Krankenhaus oder in einem Café und die haben ein offenes WLAN, also mit offen meine ich ein unverschlüsseltes WLAN, oder noch ein WEP-verschlüsseltes WLAN oder sowas.
Also wenn man sich da netzwerktechnisch nicht ganz, dann mag das vielleicht Sinn machen,
wobei man da halt auch sagen muss, wenn man Seiten besucht, die über harte TPS gehen,
also die TLS verschlüsselt sind, was die meisten Seiten sind, dann ist das auch kein Problem.
Aber dann kann man sich tatsächlich überlegen, dann muss es aber auch nicht wirklich NordVPN sein
für diesen Zweck, sondern man kann auch ein VPN aufbauen, beispielsweise zu einer eigenen Kiste
oder zu seiner Fritzbox daheim mit irgendeiner App und das geht auch.
da brauchst du NordVPN. Für die eigentlichen Gefahren, dass Anbieter eure Daten liegen,
da kann NordVPN überhaupt nichts dagegen machen. Weil ihr müsst ja den Service benutzen,
den ihr benutzen wollt. Also mal angenommen, ihr benutzt irgendeinen Service, um eure Termine
zu managen, ja? Irgendeinen Online-Kalender. Dann müssen eure Daten ja zu diesem Anbieter.
Und wenn der Daten- und wenn dieser Anbieter mal irgendwie zufälligerweise seine Datenbank
im Darknet findet, dann sind eure ganzen Daten geleaked, unabhängig davon, ob ihr diese
Daten zum Anbieter über NordVPN geschickt habt oder ob das ganz normal über das Internet
geroutet zum Anbieter ist, das ist egal. NordVPN kann, auch wenn das immer so, oder generell
nicht nur NordVPN, VPNs an sich können, auch wenn das immer so als super krasse Security-Sache
verkauft wird, erstaunlich wenig mehr Sicherheit bieten. Also es wird als viel mehr verkauft
alles letztendlich ist. Also, der Hauptanwendungsfall, den ich in einem VPN sehe, ist tatsächlich,
man möchte auf irgendwelche geobloggten Sachen oder regionloggten Sachen zugreifen. Also
ich möchte jetzt beispielsweise auf irgendwelchen koreanischen Servern spielen, die nur Leute
aus Asien drauflassen oder ich will Netflix gucken in einem anderen Land, ich will Filme
Wir gucken, die in Deutschland noch nicht released sind, und das über irgendeinen VWOT-Service in Indien, was auch immer. Irgendwas, ja?
Dafür ist VPN sinnvoll.
VPN kann auch sinnvoll sein, wenn man so, sagen wir mal, halblegale Sachen macht, weil BitTorrent an sich und P2P-Sharing ist ja an sich nicht illegal.
Wir laden selbstverständlich alle nur, ich muss ehrlich sagen, ich habe es ewig nicht mehr benutzt.
Ich habe noch nicht mal meinen BitTorrent-Client installiert.
Aber wenn überhaupt, laden wir uns natürlich alle nur Linux-ISOs runter, Usenet und so,
auch nur alles Linux-ISOs.
Für sowas kann das sinnvoll sein, ein VPN zu benutzen.
Man handelt sich mit einem VPN aber immer jemand ein, und das muss einem klar sein,
man handelt sich immer jemand ein, der dazwischen sitzt.
Der potenziell selber alles, was ihr übertragt, sofern es nicht nochmal verschlüsselt ist,
Beispielsweise, weil ihr über TLS geht, über HTTPS geht, kann euer VPN-Anbieter alles mitlesen,
was ihr verschickt.
Ob er das macht, ob er daraus irgendwie Kapital schlägt, ob er euch, was auch immer, das
können wir nicht wissen, das ist offen.
So, das ist quasi man in the middle as a service, wenn man das so will, ja genau.
Natürlich ist es dann auch wiederum nicht ganz so einfach, ich meine, je nachdem was
das für eine VPN-Technologie verwendet und wie die Zertifikatsgenerierung alles läuft,
eventuell ist es auch nicht möglich für den VPN-Anbieter das Ganze mitzulesen, aber
ihr wisst ja halt nicht genau, was unter der Haube passiert.
Das heißt, es kommt immer wieder zum gleichen Punkt, ihr müsst diesem VPN-Anbieter komplett
trauen, mit allem was ihr da drüber übertragt.
Und da weiß ich halt nicht, ob man jetzt im NordVPN da wirklich mehr trauen kann, als
irgendwelchen etablierten Service Provider und Carrier Netzwerken und was es nicht alles
gibt, da was komisches zu machen.
Da muss man sich überlegen.
Also es hat seine Daseinsberechtigung VPN, aber diese Sache mit, es macht alles so viel
wahnsinnig sicherer, ist viel Einbildung dabei. Also es macht wenig sicherer. Es macht erstaunlich wenig für die Sicherheit das zu benutzen, im Vergleich zu dem, wie es immer angepriesen wird. So, weiter.
Geht auf nordvpn.com slash hit oder shit und nehmt euch zwei Jahre NordVPN und ihr bekommt
vier Monate extra. Das ganze könnt ihr dann auf bis zu sechs verschiedenen Geräten benutzen.
Ist auch alles absolut risikofrei, falls es euch nämlich nicht gefällt,
bekommt ihr bis zu 30 Tage euer Geld.
Da bin ich immer gespannt, wie sehr sich da wirklich dran gehalten wird,
weil sagen, dass man das macht, ist das eine und das dann wirklich einlösen, keine Ahnung.
Easy wieder zurück. Was hat Peck- Ja, ja klar, Chad, natürlich, wie gesagt, für solche Sachen, wir haben ja gerade angesprochen, warum man vielleicht seine IP verschleiern will, da macht das durchaus Sinn. Anonymer ist man dadurch auch nicht.
Also anonymer in der Form, dass man das euch nicht zuordnen kann.
Weil ich meine, ihr habt ja immer, ihr habt zwar eine andere IP, aber ihr habt immer noch die gleiche IP,
immer in längerer Zeit die gleiche Exit-IP.
Und die Anbieter selbst erkennen euch ja nicht anhand der IP primär,
sondern entweder ihr loggt euch ein, dann ist vollkommen egal, von welcher IP ihr euch einloggt,
die wissen, dass ihr das seid.
Oder aber im Zeitalter von Browser, Fingerprinting und allen möglichen Geschichten findet man
auch recht gut raus, wenn einen User besuchen von unterschiedlichen IPs, ob es die gleichen
User sind.
Und da gibt es echt die abgedrehtesten Sachen, eines der coolsten Sachen, die ich mal gelesen
habe in den letzten Jahren, wie man User identifizieren kann oder zumindest sehr stark eingrenzen
kann, nachdem Browser ja mittlerweile Schutzmechanismen eingebaut haben, dass man nicht mehr so einfach
Schriftarten auslesen kann und sowas, die installiert sind, war folgendes, das kann
ich euch jetzt mal kurz zwei Minuten erzählen, also wenn ein Anbieter feststellen will, welche
User die Seite regelmäßig besuchen und das ohne Account und ohne sich auf die IP zu verlassen
und ohne auf den User Agent, da gibt es verschiedene Varianten und eine Sache, die ich letztens
gelesen habt, die war wirklich, wirklich sehr high IQ und zwar korrekt. Was die machen ist,
die rendern auf ihrer Webseite offscreen oder ganz klein oder nahezu unsichtbar, machen
die, legen die ein Canvas Element an. Canvas Element ist auf HTML Seiten sowas, wo Webseiten
eigene Sachen drinnen malen können. Also sprich, das benutzt man zum Beispiel, also
hier ist zum Beispiel ein Canvas Element. Das ganze Ding hier ist ein Canvas. Also das
hier höchstwahrscheinlich auch drumherum. Was man dann machen kann ist, die rendern
Emojis in dieses Canvas und mal gucken, wer von euch im Chat heute Massive Highest IQ
ist.
Was ist das erste, was euch schon mal ein Emoji verrät über den Anwender, ohne dass
du ins Detail gehen musst?
Was verrät euch erstmal ein Emoji relativ sicher über den Anwender?
Was er für ein Betriebssystem benutzt? Ja.
Ja. Oder sagen wir mal, vielleicht auch ein bisschen was über den Browser.
Aber es verrät euch in der Regel erstmal,
ja, das auch, aber es verrät euch erstmal sowas wie,
was der höchstwahrscheinlich, was der für eine Plattform benutzt.
Weil, Emojis sehen überall unterschiedlich aus.
Also man kann an Emojis relativ einfach erkennen, ob jemand Windows 10, Windows 11,
Gut, Firefox hat was eigenes, Android oder iOS benutzt.
Die sehen alle ein bisschen anders aus.
Und wenn jemand den Twitter-Emoji-Font verwendet, ist höchstwahrscheinlich, dass der Linux benutzt.
Also man erkennt anhand der Optik, wie ein Emoji aussieht, schon relativ easy,
was derjenige für einen OS benutzt.
Eventuell, wenn es die Firefox-Emoji sind, auch was er für einen Browser benutzt.
Das ist ja schon mal nicht schlecht.
Und jetzt geht das ganze noch, man kann auch vielleicht ganz outdated Sachen erkennen, ob die Emojis nur schwarz-weiß gemalt werden oder sowas.
So.
Aber,
weil es mich interessiert und ich denke nicht verkehrt ist, über sowas ein bisschen Bescheid zu wissen, deswegen erzähle ich es euch jetzt ja, Chatge.
Wir wissen, ich meine, wir müssen doch hier immerhin zumindest ein bisschen highest IQ-Chat auf Twitch gerecht werden. Und ihr wisst ja, dass jeder Prime-Sub
den GesamteIQ des Chats steigert.
Das heißt, wenn ihr noch einen Prime-Sub übrig habt, ich freu mich natürlich über jeden Sub, aber ich freu mich auch, dass ihr da seid.
Also auch wenn ihr keinen Prime-Sub habt, ist schön, dass ihr da seid, ja?
Aber ich muss ab und zu mal ein bisschen Sellout machen, so läuft das Twitch-Game einfach.
Und selbst, und jetzt mal ernsthaft, selbst wenn ihr einen Prime-Sub habt und denkt, ey, keine Ahnung, dem Max will ich den Prime-Sub nicht geben,
dann gebt den Prime-Subs zumindest irgendjemand anderem auf Twitch, weil das ist Blödsinn, den Prime-Sub nicht rauszuhauen.
Und das ist quasi geschenkte 4€ für Beso aus dem Monat.
Nein, gut, eigentlich kriegt er... also 2€.
Gestern wieder für... Dankeschön für den Sub.
Ähm, was wollte ich erzählen? Genau, Browser Fingerprinting.
So, als erstes mit Emojis.
Und das Ganze wird noch viel abgedrehter.
Yuzo, Porga Subscription.
Alter, kann ich nur sagen.
Nice, nice, nice, nice.
Sunny auch wieder am Start.
Und hast du die Ausbildungsstelle gekriegt?
So manche Sachen merke ich mir irgendwie im Hinterkopf. So, aber noch mal zurück zu Browser Fingerprinting. Also jetzt haben wir schon mal relativ easy rausgekriegt mit Emojis, was für eine Plattform der jeweilige Anwender benutzt und jetzt wird es abgedreht. Man kann jetzt mit mehr oder weniger detaillierten
Mit mehr oder weniger detaillierten Analysen kann man jetzt auch rausfinden, ungefähr,
was für eine Hardware der jeweilige Client benutzt.
Und da gibt es Tabellen und da gibt es Tests, die haben mit dem Rendern von Emojis oder
generell mit dem mit dem rendern in einem canvas element im browser haben die
gemessen dass du relativ gut beispielsweise sagen kannst an der
geschwindigkeit wie gerendert wird und an irgendwelchen timings wie gerendert
wird und alles mögliche kannst du relativ gut bestimmen was für eine
grafikkarte der jeweilige user benutzt und noch viel mehr also du kannst es
Es gibt wirklich sehr viele Tricks, dass du im Browser feststellen kannst, z.B. welchen
Browser benutzt der Anwender, welches Betriebssystem benutzt der Anwender, welche Hardware hat
der Anwender eingebaut.
Und das alles zusammengefasst, sagen wir mal, du bekommst so 7, 8 verschiedene Merkmale
raus und die in Kombination sind dann, wenn nicht 100%ig eindeutig, aber relativ eindeutig.
Überlegt euch mal, ihr habt 8, 9 verschiedene Merkmale, die auch unterschiedlich sein können,
nicht nur binary.
Und da gibt es sehr viele Kombinationsmöglichkeiten.
Und wenn ihr dann jemanden findet, der zufälligerweise von einer anderen IP kommt, aber exakt die
gleichen Merkmale aufweist, da könnt ihr euch relativ sicher sein, dass das wahrscheinlich
der gleiche User ist.
Also es geht, man kriegt das raus.
Und das ist auch eher das, worauf sich Seiten verlassen, die wirklich User tracken wollen.
Und die verlassen sich nicht auf die Absender-IP, oder nicht nur auf die Absender-IP.
Twitter-Emojis, doch unter Linux sind Twitter-Emojis sehr beliebt, guck hier, ich habe auch Twitter-Emojis
unter
unter linux
Twimoji ist eigentlich wir müssen gerade mal kurz was gucken. Twimoji
der Twimoji fork
Ist der, wie hieß der Twimoji fork?
Ich hab's vergessen.
Es gibt nämlich den neuen Twimoji-Fork.
Hat irgendjemand eine Ahnung? Ja, das hier, da ist er doch.
Twimoji-Fork.
Okay, Unicode 15 ist da immer noch nicht drin. Es gibt nämlich den Twimoji-Fork, der auch die neuesten Unicode-Emojis unterstützen wird.
Warum ist das notwendig?
Weil Twitter alle, die an diesem Emoji-Font gearbeitet haben, entlassen hat.
Dementsprechend gibt es keine Updates mehr für Trimoji und wir haben kein Unicode 15.
Aber, ich mein, die haben immer noch kein Goose-Emoji.
Ich weiß nicht, wie es da aussieht, aber es sieht so aus, als hätten die immer noch
einige Emojis nicht drinnen.
Ist halt blöd, ne, wenn Twitter die alle rausschmeißt.
Guck mal, zuletzt im Januar aktualisiert.
Tja, da wird es keine Updates mehr so geben, ohne weiteres.
AdSupport, Unicode Online, siehst du, gibt nicht mehr.
Also das ist halt auch so ein Ding.
Ja, und damit kann man theoretisch auch Sachen rausbekommen über den User, wo wir gerade
dabei sind.
Du hast einen Denkfehler. Emojis werden auf dem Client gerendert. Ja, das ist ja gerade das Ding.
Deswegen, das ist ja auch der Grund, warum das funktioniert.
Ja, das ist richtig. Das ist richtig.
Aber das ist kein Denkfehler. Das ist Voraussetzung dafür, dass das überhaupt funktioniert, was ich gerade beschrieben habe.
Der Client muss das rendern. Du willst ja auch was über den Client rauskriegen und nicht über deinen Server.
Monopol, danke schön für den Sub.
Ice the Pogger Subscription. Jetzt geht's ja nicht los hier.
Du hast die Ausbildungsstelle gekriegt, exzellent, exzellent.
Das ist, ja, eigentlich auch.
Jetzt gibt es sogar mehr Geld, ja dann, das ist die beste Kombination.
Ja, es gibt noch ein paar andere Möglichkeiten, aber Canvas ist, glaube ich, das beliebteste.
Ja gut, Javascript komplett blocken ist halt nicht praktikabel, weil kaum ne Webseite noch
funktioniert ohne Javascript.
Pacha Oheli wieder am Start, 29 Monate, Dankeschön für den Sub, exzellent Subscription.
Magst ans Trinken erinnern?
Yo.
So, jetzt, ich weiß, ich hab mich jetzt sehr lange sidetracked lassen von diesem Video
hier.
Aber ich hoffe es hat euch trotzdem interessiert, ich denk zwar für die einen oder anderen
was spannendes dabei.
Exzellent, weiter geht's.
Oh, oh, oh, jetzt hier, Sendrix, 5 Subscription.
Hat eine gute Möglichkeit, eine gute Sammlung.
Ja, es gibt einige Seiten, die sowas haben,
aber die kann ich jetzt hier nicht im Stream aufmachen,
weil die dann auch solche Sachen leaken, wie
IP und alle möglichen Dinger,
die ich vielleicht jetzt nicht so unbedingt public haben will.
Ja.
Ja, danke für die Subs. Wir hatten das Glück gehabt.
Und wer hat gedodged?
Lootbeutel. Ja, der hat schon mal... der sackt alles ein, oder?
Der Cartman, Nuxa,
Bex, vor...
Ach, guck mal, hat er Glück gehabt.
Der ist erst seit ein paar Tagen hier im Stream
und gleich schon, gleich schon
den Sub gecatcht.
Phaseron, der ist öfters da. Den kenne ich vom Namen her.
Der stellt es dir öfters rum.
Und die Gartenkralle ist auch am Start. Danke für den Sub.
Exzellent, exzellent.
Ok, gucken wir das Video mal weiter.
Next.
jetzt aber mit lag zu tun. Wenn am Weg zu euch zurück Pakete fehlen bzw. Informationen fehlen, weil sie nie beim Server ankamen,
dann kann euer Spiel das bis zu einem gewissen Grad ausgleichen. Und zwar mit dem sogenannten Buffer.
Bevor nämlich die erhaltenen Infos vom Server in ein tatsächliches Bild umgewandelt werden,
wartet man erstmal bis ein paar Pakete da sind.
Naja, die Informationen vom... Wie gesagt, ich hab schon angehört, ich werde meckern.
Ja, die Informationen vom Server werden natürlich nie direkt in ein Bild umgewandelt.
Ja, Blödsinn. Ist ja nicht so, als würde der Server euer Game rendern.
Aber wir wissen, was gemeint ist.
erhöht das den lag weil er informationen nicht gleich gezeigt bekommt die eigentlich schon verfügbar sind der sinn des ganzen ist aber dass euer
game checken kann ob zwischen den paketen irgendwo etwas fehlt und wenn das der fall ist dann wird es automatisch gefüllt so dass euer game nicht
einfach wild ruckelt sondern smooth weiterläuft obwohl irgendwo ein paket oder eine info fehlt
manche gps lassen euch das einfach verkleinern was natürlich auch automatisch euren lag verkleinert
in counter strike zum beispiel nennt sich das ganze interpolation rate oder interp
Damit könnt ihr die Größe eures Buffers einstellen und euren Lag zwar verkleinern, aber mit dem Risiko, dass euer Game irgendwie...
Spiele laufen auch zum größten Teil über UDP.
Er meint nicht, dass das Paket neu angefordert wird, er meint, dass das Game sich irgendwas ausdenkt, was Sinn macht.
So nach dem Motto, ich hab als letzte Information, der Character läuft gerade mit diesem Speed in diese Richtung,
dann füllt er einfach das hier auf mit, der Character läuft halt einfach weiter in diese Richtung, bis ich die nächste Information kriege.
Wenn das natürlich zu oft passiert, kann man sich vorstellen, dann ruckelt es halt ein bisschen rum.
Oder ruckeln ist ja nicht lag, aber ihr wisst, was ich meine, ja?
Dann kommt das nämlich, dann kommt, dann füllt er das auf,
Charakter läuft weiter in die Richtung, Charakter läuft weiter in die Richtung,
und irgendwann kommt dann wieder ein Package vom Server durch, wo drinsteht,
Moment, der ist gar nicht weiter in die Richtung gelaufen, sondern in die Richtung,
und dann macht es dann auf einmal, oh, läuft weiter, läuft weiter, läuft weiter,
Wupp, jetzt ist er auf einmal da unten.
Also, ja, das stimmt schon, was der hier erzählt, das ist eigentlich ganz gut dargestellt.
irgendwann nicht mehr so smooth läuft.
Ein kleines Problem haben wir aber allgemein noch.
Jetzt kommen alle Pakete zu unterschiedlichen Zeitpunkten
beim Server an und trotzdem müssen die Spieler
immer alle auf dem gleichen Stand sein,
um sinnvoll miteinander spielen zu können.
Jetzt könnte der Server z.B. immer warten,
bis er die Pakete aller Spieler hat, um dann die Daten zurückzuschicken.
Aber das würde sich für Spieler ziemlich komisch anfühlen,
weil jeder Input dann fühlbare Verzögerung hat.
Ist also keine wirkliche Option.
Was getan werden muss, ist das, was Spieler sehen
Und das, was der Server sieht, voneinander getrennt wird.
Das ist halt...
Das ist so ein bisschen was, wo sich das die letzten Jahre über...
Die letzten Jahre ist jetzt übertrieben, ist schon deutlich länger.
Sich ein bisschen verschoben hat, ja?
Früher war Server State das...
Sagen wir mal so...
Das, wie der Server die Dinger gesehen hat,
das einzig Wahre.
Könntest du das Video reinposten? Ja?
Da wurde alles serverseitig gemacht.
So nach dem Motto...
Da wurde hingeschossen, Server guckt, ist der Typ bei meinem State gerade da?
Nö, vorbeigeschossen, obwohl du drauf warst. Man ist jetzt ein bisschen dahin gegangen, das alles etwas großzügiger zu machen.
Nämlich, dass da nicht nur übermittelt wird, so nach dem Motto, ja ich habe da und dahin geschossen, sondern vielleicht auch noch,
ich habe da und dahin geschossen und bei mir habe ich getroffen.
Ja, und da kann der Server dann entscheiden, okay, wie groß ist die Latenz, will ich das noch beachten, will ich das nicht beachten?
Und das war so die Verschiebung, die wir die letzten zehn Jahre über gesehen haben,
auch so ein bisschen von reinem Serverseitigem State zu, ja immer noch Master-Server muss
letztendlich entscheiden, was Sache ist, aber auch mit Client-Side-Hit-Detection immer mehr,
immer präsenter. Was dann schon das Spiel auch für Leute mit bisschen höherer Latenz besser
spielbar gemacht hat, aber es noch mehr dazu geführt hat, zumindest wenn das übertrieben
wurde, wie da noch Sachen akzeptiert wurden, für teilweise, ich bin schon um zwei Ecken
und auf einmal werde ich zurückgeportet und gekillt. Es gab ja zwischenzeitlich, wenn
es übertrieben wurde, sogar mal Spiele, da hattest du einen Vorteil, wenn du mit 400er
Ping spielst und sowas. Das sollte dann nun wirklich nett sein.
Wenn ich also auf wen schieße, dann soll direkt zu sehen sein, was passiert, anstatt dass...
Ja gut, Lag-Switches waren nochmal was ganz was anderes.
Lag-Switches sind eigentlich so Dinger, die sollten eigentlich gar nicht funktionieren.
Also die ursprünglichen Lag-Switches in Call of Duty waren ja wirklich teilweise Hardware-Modifikationen, die...
Das Kabel zum Empfangen von Daten unterbrochen haben und das vom Senden von Daten quasi intakt
gelassen haben.
So nach dem Motto, ich kann senden, wie ich mich bewege und wie ich Damage mache, ich
kann aber keine Damage auf mich mehr empfangen.
Dass sowas überhaupt geht, ist schon eine Fail-Implementierung sonders gleich.
Ja, ja. Zumindest war das in Call of Duty damals so.
Ja.
Also es gab damals zu Xbox-Zeiten tatsächlich reale, reale physische Lag-Switches.
Dass das überhaupt funktioniert, ist halt schon bescheuert.
Ich meine, das funktioniert prinzipiell in ein paar UDP-Packages, aber selbst das könnte
man easy verhindern.
Du könntest zum Beispiel irgendwelche Server-Messages einbauen, auf die dein Client replyen muss.
Und wenn er so und so viele Replies verpasst, dann wird er nicht mal beachtet.
Also man kann da durchaus Sicherheitsmechanismen, aber das hatte Call of Duty halt damals gerade,
dass es halt noch diese ... irgendeine Xbox-hosted-Variante hatte.
Ähm ...
Pfff ...
Du kotzt halt komplett vergessen, ne?
Das waren Zeiten, da waren physische Leg-Switches tatsächlich ein Ding.
... Meldung des Servers warten muss.
Das nennt sich Client-Side Authoritative.
Client-Side sagt's uns schon.
Hier ist relevant, was der Spieler selbst sieht.
Und zwar bevor der Server überhaupt Infos hat.
Das führt zu ganz komischen Situationen,
wie zum Beispiel, dass man weit hinter der Deckung noch stirbt.
Nämlich, wenn dich wer abschießt, der selbst einen höheren Ping hat als du.
Ein Spieler mit einem höheren Ping spielt eigentlich mit alten Informationen.
Das heißt, du bist auf seinem Bildschirm noch deutlich weiter hinten zu sehen.
Je größer der Ping, desto weiter hinten sieht er dich noch.
Wenn ein Spiel Client-Side-Authoritative erlaubt...
Trotzdem solltest du immer, wenn ihr Head-on-Head ballert, ja, gewinnen.
Wenn's gescheit gemacht ist.
...ein Spieler mit hohem Ping dich trifft auf seinem Bildschirm.
Dann wird der Hit registriert. Egal, wo du tatsächlich bist.
Damit das nicht zu heftig wird, haben einige Spiele hier ein Limit.
Ich glaub, Overwatch hat's, glaub ich, ab 100 oder 150 Millisekunden.
...Registriert wird, sondern Server-Side.
Das bedeutet, wenn du in manchen Spielen einen sehr hohen Ping hast
und scheinbar zwar triffst, registrieren deine Schüsse nicht.
Um zu treffen, müsstest du an die tatsächliche Position des Gegners
laut Serverdaten schießen.
Also eigentlich bisschen vor dem ...
Das Video ist wirklich nicht schlecht gemacht, muss ich jetzt mal sagen, wie gesagt, ich habe es schon angekündigt, ich werde ein bisschen meckern, das Video ist nicht schlecht gemacht, kann's nix sagen, also
Die haben sich wirklich Mühe gegeben, das so zu verpacken, ohne jetzt so übertriebenen Blödsinn zu erzählen, um es gar so krass zu vereinfachen, ist vollkommen in Ordnung, also kann man sagen, ist, äh, Woblows Approved
Und wer jetzt glaubt, es ist unfair mit Hoemping zu spielen, weil ja Leute noch...
Ich weiß, Ragman, deswegen hab ich ja gesagt, ich werd jetzt ein bisschen meckern, aber insgesamt ist das echt nicht schlecht gemacht.
Du schon weg bist? Dann denk mal umgekehrt.
Wenn ihr diejenigen seid, die zuerst um eine Ecke kommen, dann seht ihr den High-Ping-Spieler lange bevor er euch sieht.
Ihr könnt den ersten Schuss abgeben, bevor ihr überhaupt am Bildschirm des Gegners erscheint.
In Valorant ist es zum Beispiel tatsächlich so, dass der Spieler mit dem besseren Ping den Kill macht, wenn beide gleichzeitig schießen.
Ja, finde ich aber auch irgendwo sinnig.
Klar, kannst du sie in Overwatch, haben sie es auch ein bisschen gebuffert, alles.
Aber ich finde, es sollte irgendwie so sein.
Weil ganz im Ernst,
die Leute sollen halt auf dem Server spielen, wo sie gescheite Connection zu haben.
Ja, wenn wir hier im Bereich von 50 Millisekunden reden, oder so sage ich nichts dagegen.
Aber wenn er es teilweise dann auf 300 Millisekunden raucht, das kann es nicht sein.
Ja, das fühlt sich scheiße an.
Der eigentlich korrekte Input des Hyping-Spielers wird einfach durch den Ton...
Ich kann gerne mal ein Video machen, das noch tiefer geht.
Nee, kann ich nicht, weil erstens müsste ich mich dann selbst viel zu sehr in der Tiefe
damit zu beschäftigen, damit ich auch keinen Mist erzähle und zweitens sind solche Videos
enorm aufwendig und da bin ich zu faul für, weil solche Videos auch kaum geguckt werden
witzigerweise.
Das ist halt so ein bisschen das Dilemma, was man auch mit Technik-Videos auf YouTube
hat, wenn man wirklich gute, tiefgreifende Erklärvideos macht, die werden oftmals im
Verhältnis von Aufwand zu Leuten, die das gucken, viel weniger geschaut.
Natürlich könnte man jetzt sagen, ich mach das trotzdem, aber ich glaub da bin ich zu
faul für.
Neues Video, ich hab's schon hochgeladen, als nächstes hab ich einen Zusammenschnitt,
anfertigen lassen
über den Half-Life-Speedrun, den wir geguckt haben, den werde ich als nächstes hochladen, geht 38 Minuten
und danach muss ich tatsächlich mal was über Battlefield 6 Season, äh, Battlefield 2042 Season 6, nein
Battlefield 2042 Season 5
und das Season 6, äh, Ankündigung erzählen, meine Güte.
Spielern gekillt werden, die eigentlich schon tot sind.
Auf all den Lag, den wir bisher hatten, kommt aber jetzt noch eine letzte Sache drauf.
Die Geschwindigkeit, in der der Server selbst updatet, beziehungsweise Paketempfänger...
Ah, jetzt will er sowas wie Tickrate oder sowas haben. Ich dachte, es kommt noch Input-Lag oder sowas mit dabei.
Weil dann wäre es echt abgedreht geworden, wenn jetzt noch sowas kommt wie Refresh-Rate vom Bildschirm, Rendering, Maus-Input und sowas.
Weil dann kannst du ja eine komplette Wissenschaft draus machen.
...und wieder schickt. Ihr kennt das vielleicht als Tickrate.
Manche Games geben es aber auch einfach in Herz an.
Das ist die Zeit, die der Server braucht, um alle Pakete zu öffnen,
die Infos zu sammeln beziehungsweise miteinander abzugleichen
und wieder an die Spieler loszuschalten.
Normal sind heutzutage Tickrates von 64 Millisekunden
oder bei manchen Games auch als 60 Hertz bezeichnet.
Das sind 60 Pakete pro Sekunde
und damit 16,66 Millisekunden
zwischen jedem Paket als zusätzlicher Lag.
Das heißt, ihr bekommt nur alle 16,6 Millisekunden
ein Paket geschickt und die Zeit bis zum nächsten Paket
ist zusätzlicher lag denn da passiert nichts neues wird die tickrate weniger zum beispiel 30
herz kommt dementsprechend aber da geht es eigentlich um wenige millisekunden viele
meinen zum beispiel dass ein upgrade von 64 tick auf 128 tick alles besser machen würde und die
Sie haben zwar schon Recht, allerdings halt nur ein wenig Recht.
Naja, das kommt drauf an.
Es hat manchmal auch Auswirkungen darauf, wie das Spiel selbst Sachen interpretiert.
Also ich weiß nicht, ob es in CS immer noch so ist,
aber ich weiß, dass es definitiv in CS mal so war,
dass bestimmte Movement-Tricks gar nicht möglich waren mit der normalen.
Ich hab mal ein Video geguckt von irgendeinem Pro, der das gezeigt hat.
Der hat gezeigt, dass manche Movement-Tricks, irgendwelche Sprünge von irgendeinem Autodach
auf irgendeine Mauer und sowas, dass die mit der normalen Matchmaking-Tickrate gar nicht
möglich sind oder nur sehr unreliable möglich sind, aber mit 128 Tickrates tatsächlich
relativ konsistent ausgeführt werden können.
Also macht schon einen Unterschied.
Also es kommt ein bisschen darauf an, wie das Spiel das am Endeffekt dann sich verhält.
Natürlich auf den ersten Blick macht es jetzt nicht so den krassen Unterschied und ich würde auch sagen je nach Game
Ist es auch nicht wirklich, also zum Beispiel ja ob es ein Battlefield mit 64 Tick oder mit 128 Tickrate läuft
Naja
Das ist wahrscheinlich nicht so der große Unterschied
Battlefield ist ja auch was wo es weniger jetzt dieses
1on1 auf den Kopf geklicke gibt
Das ist wahrscheinlich nicht so das Ding und man hat es bei Venice gesehen, dass es gab 128 Tickrate Surfer, die hatten aber Ultra-CPU Anforderungen wohl.
Es ist immer sinnvoll so viel FPS zu haben wie möglich.
Also erstmal zumindest bis zu deiner Monitor Refresh Rate, aber selbst da drauf macht es noch Sinn.
Also eigentlich ist mehr FPS immer besser.
Und ansonsten FPS und Tickrate, gut, nachdem dein Monitor nicht gesunkt ist mit der Server
Tickrate.
Also umso mehr FPS umso besser.
Warum High Refresh, Max FPS, ja.
Naja, also das liegt und das ist ein ähnlicher Grund, wie das es bei 60 Hertz Monitoren auch
sinnvoll macht, die durchaus die Spiele in höherer Framerate zu rendern.
Also erstens ist das ja nicht gesynkt aneinander, nur weil ein Server mit 60 Mal die Sekunde
refresht und euer Game 60 Mal die Sekunde das Bild neu aufbaut, ist das ja nicht gesynkt.
soll das auch gehen zwischen 32 64 spieler ja und umso schneller jetzt eure
eure lokale fps und sagen wir auch lokale refresh rate vom monitor ist je
früher seht ihr natürlich auch den update weil es kann ja trotzdem sein
dass gerade bei euch der refresh durch ist und jetzt neue informationen vom
server kommen und dann müsst ihr auf den nächsten refresh warten unabhängig
davon. Also wie gesagt, das ist ja nicht direkt gesyncht. Und so ist es auch, wenn ihr euer Game
schneller rendert, als euer Monitor anzeigen kann. Wenn euer Game schneller rendert, als der Monitor
anzeigen kann, dann ist euer Game-State quasi schon aktueller am Zeitpunkt dran, am echten
Zeitpunkt dran, wenn der nächste Monitor-Refresh kommt. Also das macht schon Sinn, dass in der
Regel mit Low Graphics und so viel FPS wie möglich.
Das macht eigentlich fast immer Sinn.
Also gerade in Spielen, die Multiplayer sind, die ein bisschen competitive sind, da würde
ich auch sagen wie Battlefield, darunter zählen, mehr FPS ist in der Regel immer besser, pauschal
kann man das eigentlich so sagen.
Ich recht, denn der Unterschied ist wirklich, wirklich gering.
Ungefähr sieben Millisekunden hätten wir dadurch weniger Lag.
Ob das wirklich viele Probleme löst?
Naja, zumindest ein paar kleine Probleme oder durchschnittliche Probleme.
Dass wir also manchmal hinter der Deckung gekillt werden oder unsere Shots, wo wir eigentlich
drauf waren, nicht zählen, ist einfach notwendig, damit überhaupt online sinnvoll
miteinander gespielt werden kann. Die Verzögerungen sind teilweise
Natur gegeben, wegen der Geschwindigkeit, in der Daten nun mal maximal von A nach B
kommen und teilweise künstlich, damit auch die Spieler Spaß haben können, die
nicht zufällig direkt neben dem Gameserver sitzen. Aber wir haben eine
interessante Idee bekommen durch eine neue Technologie, die momentan nur in
Fighting Games verwendet wird. Dort wird die Zukunft vorhergesagt, um Lag zu
zu eliminieren ja wirklich moment ich dachte ich dachte das geht nur bei
google stadia negativ latency
wie das können andere jetzt auf einmal auch was glaube ich nicht aber solche
prediction sachen also ich würde ich würde mal behaupten dass fighting games
gut in fighting games bietet sich es wahrscheinlich an es ist ganz klar
one-on-one und das moveset ist irgendwie begrenzt und das was passieren kann ist
begrenzt also dieses zukunft prädikten dass es in fighting games
Angewandt wird wundert mich jetzt nicht aber ich würde mal behaupten das ist nicht das einzige wo man zumindest so sachen in der richtung
schon probiert oder probiert hat
Stellt euch mal vor es gibt ein delay auf eine animation eines schlags
Wenn euer gegner dann wirklich die ganze animation erst verspätet sieht wird das ganze unmöglich zu spielen
Aber was, wenn man einfach den Delay vorne von der Animation abschneidet und sie mittendrin
beginnen lässt?
Klingt komisch, sieht man aber im Fullspeed überhaupt nicht.
Dieses System nimmt außerdem vor den Inputs den nächsten wahrscheinlichen Schritt an
und zeigt ihm den Gegner.
Momentan nimmt das System einfach an, dass das, was man gerade macht, auch das nächste
ist, was man macht.
Das heißt, wenn ich gerade stehe, nimmt das Game an, dass ich auch im nächsten Frame
noch stehe.
Klingt sehr simpel, ist aber bei Fighting Games ein Game Changer.
Was wir jetzt in den raum stellen ist das mit der aktuellen entwicklung von ei das auch bei allen anderen games möglich sein könnte
könnte eine ei sinnvoll
Also den zusammenhang würde ich jetzt erst mal nicht sehen so richtig und mit guter trefferquote die nächsten schritte der spieler vorhersagen
könnten wir dann auch wenn es im hintergrund lag gibt in optisch fürs menschliche also
ich sehe den zusammenhang zwischen
einer und
Ich weiß nicht.
Weniger, weniger AI, was wir uns jetzt in Form von Chat-GPT vorstellen.
Was ja immer um Sachen geht, die schon passiert sind.
So dieses Zukunfts-Voraussagen. Klar, ich meine, guckt euch mal an, wie
wie Schach-Computer und Schach-Programme seit Jahrzehnten funktionieren.
Da wird versucht die Zukunft voraus zu sagen.
Also umso mehr die, ich glaub Zugtiefe nennt sich das dort, umso besser ist so ein Schachprogramm.
Ja, das ist theoretisch sicherlich auch in vielen anderen Games möglich, aber das muss
ja immer noch on the fly für den aktuellen State irgendwie berechnet werden.
Du wirst nie eine komplette Partie Battlefield komplett lösen können.
Also komplett lösen würde ja bedeuten
Du hast den State den eine Partie Battlefield haben kann. 32 vs. 32 Caspian Border
Wenn du das, wenn du das komplett lösen würdest, bedeutet das
Sobald das Spiel anfängt, bis zum Ende des Spiels, du hast alle nur erdenklichen Kombinationen
Im Vorfeld ausgerechnet und das geht offensichtlich nicht bei einer Partie Battlefield
Jede, jede, jede kleinste Pixelbewegung von jedem der Spieler,
jeder, jede Aktion, das zieht ein, eine
Trillionenfache
andere Möglichkeiten nach sich. Also das kannst du nicht im Vorfeld komplett durchrechnen. Es gibt Spiele, das geht das. Ich glaube,
ich glaube, Mühle ist komplett gelöst.
Oder, also 4 gewinnt ist auf jeden Fall komplett gelöst, das weiß ich. Ich glaube, Mühle auch.
Also sprich es ist jede nur erdenklich mögliche Spielstate bekannt und analysiert und man
weiß immer wie man 100% perfekt spielt.
D.h. daraus kannst du dann auch z.B. ableiten wie weißer Spieler gewinnt immer.
Aber ich meine zwischen 4 Gewinn und einer Runde 32 vs 32 Battlefield Caspian Border
gibt's halt ein bisschen mehr States oder Möglichkeiten was passieren kann.
Also dass man eine komplette Runde Battlefield im Vorfeld schon komplett prediktet hat ist
eigentlich nahezu unmöglich.
Bei Fighting Games sieht das allerdings schon ein bisschen anders aus.
Fighting Games sind natürlich deutlich weniger, also selbst Fighting Games kannst du nicht komplett prädigen, aber
Fighting Games, es sollte glaube ich offensichtlich sein, dass
die möglichen
Züge, nennen wir es mal
in einem Fighting Game
deutlich geringer sind, die Anzahl, als
beispielsweise
32 vs. 32 Battlefield
Der Auge eliminieren?
Wir glauben ja, aber wann das möglich sein wird,
weiß wohl keiner.
Habt ihr jetzt das Gefühl, gezielter über euren Lag haten zu können?
Sagt's uns in den Kommentaren oder gerne auch mir...
Wie schaut's mit MMOs aus?
Okay, bye!
MMOs ist ein schlechtes Beispiel dafür, weil MMOs in der Regel tatsächlich synchron sind.
Vielleicht mittlerweile nicht mehr so krass wie früher, aber MMOs sind ziemlich synchronisiert.
Also sprich, du hast einen Server, du hast Server-Tics und anhand dieser Server-Tics passieren Dinger.
Ja, natürlich, Clients interpolieren das noch ein bisschen, dass es flüssiger, flüssiger aussieht alles.
Aber in MMOs ist es auch so, dass wenn ich sage, hey, ich baue jetzt hier irgendwie ein bisschen Eisenerz ab,
Dann passiert das einfach nicht, wenn der Server mit dem nächsten Tick nicht sagt,
du baust jetzt Eisenerz ab.
Und das ist ja auch der Grund, warum MMOs jahrelang so träge waren.
Erinnert sich noch einer an die früheren MMOs von Tab-Targeting und einzelne Ziele
auswählen und dann Input drücken und der Spell wird gecastet und so.
MMOs waren und sind, auch immer noch bis auf ein paar Ausnahmen, sehr gemächlich.
Und das liegt daran, weil MMOs mehr oder weniger synchronisiert laufen für alle Spieler.
Es gibt mittlerweile schon ein paar Games, die das trickreicher machen,
oder in den letzten Jahren auch über mehr oder weniger so Echtzeit,
äh, nicht Echtzeit, so interaktive Kampfsysteme haben in MMOs.
Aber insgesamt kann man sagen, sind MMOs immer noch deutlich gemächlicher und träger
als beispielsweise jetzt im Battlefield und das liegt mit daran, weil MMOs ziemlich synchronisiert
laufen.
Aber das ist halt auch eines der Eigenschaften von MMOs.
So, okay, was haben wir denn hier sonst noch interessantes?
Overwatch 2 fällt auseinander, was haben wir sonst noch hier?
Volle Konzentration, Mitternacht, Apple Vision Pro angeschaut.
Bei diesem Ding bin ich ja auch skeptisch, ich mein, es ist halt ne 3D Brille, auch wenn
Apple das irgendwie super krass nicht, die nennen es, ok, Apple nennt das Ding ja nicht
Virtual Reality Brille, sondern, oh wie er, Spatial Reality, irgendwie Apple hat da wieder
so ein ganz geiles Wort dafür empfunden, aber im Endeffekt ist es halt ne VR Brille und
ich weiß nicht, ob das so ein Ding ist, was sich so toll durchsetzt.
Ja, es ist von Apple und viele Leute kaufen Dinger, weil sie von Apple sind, aber es ist abfuck teuer.
Ich weiß nicht, ich bin skeptisch, ob das so ein großer Erfolg wird, das Ding.
Volle Konzentration.
Okay, komm, komm, ich flame noch ein bisschen über Overwatch mal schnell.
Das ist auch so, das ist auch ein Thema.
Also ich flame ganz gerne über C++ und ich flame auch ganz gerne über Overwatch.
Es ist wieder Zeit, über meine Lieblingsvideospielfirma zu reden.
Nachdem Overwatch seit Jahren in einer ziemlichen Abwärtsspirale war, hat man sich gedacht,
man reißt das Ruder rum mit einem zweiten Teil.
Ein komplett neues Spiel, viele Neuerungen und unfassbare...
Komplett neues Spiel, ja, das war wohl nix.
PvE wird es nicht geben und der Multiplayer ist halt erstmal der Overwatch 1 Multiplayer zu 90%,
wo man halt jetzt endlich mal wieder ein paar Erweiterungen bringt,
was man ja jahrelang hat schleifen lassen für Overwatch 1.
Und ja, man hat die Grafik ein bisschen verbessert.
Und der Rest ist, ja, halt mehr Microsoft, äh, Microsoft Transaction heavy.
Der Spielspaß. Nur, dass es kein komplett neues Spiel ist, es auch keine vielen Neuerungen gibt und den Spielspaß können wir vielleicht irgendwie einklammern.
Es ist viel um dieses Sequel passiert und wir schauen uns mal an, wieso die reinste Existenz davon ein ziemliches Mess ist.
Ein ziemliches Mess ist das auch ein geiler Satz, Alter.
Bevor wir anfangen erstmal eine schnelle Brief History zu Overwatch 1.
Als das Spiel 2016 rausgekommen ist, waren alle gehypt und glücklich.
Wie ich wusste, dass er das sagt. Ich auch.
Ein competitive FPS-Multiplayer-Game.
Und ich hab das, glaube ich, so krass gegrindet, wie kaum ein anderes Game die letzten Jahre über.
Ich hab das bestimmt zwei Jahre am Stück einfach nur 24...
Nein, 24,7 nicht. Ich musste immer noch arbeiten gehen.
Aber jede freie Minute gespielt.
Mit Heroes und Abilities gab es in der Form vor allem...
Ich meine, ich war Level, keine Ahnung, 400 oder so, in der Beta allein schon.
so gut noch nie und eine riesige community hat sich angefangen um dieses
spiel zu bilden große persönlichkeiten schossen um dieses spiel herum aus dem
boden und nicht lange nach release hat sich die overwatch league gebildet ein
großer overwatch league ist auch so ein ding ich fand es nie gut von anfang an
nicht das system
ich weiß jetzt nicht ob ich da ausholen soll aber zwei sachen erstens dass es
quasi egal ist, ob du gut oder schlecht warst, weil es keinen Aufstieg und Abstieg gibt und
das geht mit dem nächsten zweiten Punkt einher. Es gibt keine Tier 2 Szene, dadurch dass es
nur Overwatch League und nur den Fokus auf Overwatch League gibt. Ich weiß, dass es eine
Tier 2, Tier 3 Szene gibt, aber niemand interessiert sich dafür. Wer hat schon mal Contenders von
euch geguckt. Und selbst wenn du Contenders gewinnst, heißt das ja nichts. Das heißt
nicht, dass du dann aufsteigst mit deinem Team in die Overwatch League. Du kannst Werbung
für dich machen, dass dein Team auseinandergerissen wird, weil manche Spieler halt von Overwatch
League Teams gekauft werden. Das ist alles. Also ich fand das Overwatch League System
nicht gut, von Anfang an nicht. Und der Fokus darauf, dass du im Prinzip kein Tier 2, Tier
hast und auch keine Competition richtig, so richtig sinnig in dem Game hast, außer eben Overwatch League.
Die haben sehr viel, also gerade was eSport vergeht, die haben unglaublich viel verschenkt, dadurch, dass Overwatch League so
gepusht wurde, gab es dann irgendwann quasi auch, dass das, weiß ich nicht, ob es wirklich das Verbot war, aber es wurde anderen
Anbietern sehr schwer gemacht, Overwatch
Turniere zu bringen und irgendwann hat auch die ESL sogar die Weeklys eingestellt und sowas. Hey,
wir waren immerhin mal ein deutscher Weekly-Gewinner damals. Wir waren im Vergleich zu
internationalen Teams nie wirklich gut, muss man auch Fairness halber sagen. Aber ich würde sagen,
wir haben damals Overwatch schon ganz brauchbar gespielt. Aber es gab auch keine richtige
Competition mehr. Es gab Overwatch League und spätestens seit Overwatch League gab es sonst
nichts anderes mehr
und tier 2 juckt keine saut hier drei gibt es nicht und die haben auch viel
verschenkt in overwatch selbst warum und das frage ich mich bis heute warum hat
man nicht versucht die ich meine overwatch wollte von anfang an ja
irgendwie schon ein bisschen in sport game sein ja warum hat man nicht um
diesen ranking modus war was um was aufgebaut warum gab es nicht automatisch
Erstellte Weekly-Turniere, die promotet wurden intern für die jeweilige Liga, in der du gespielt hast oder warum gab es nicht irgendwelche
Sagen wir automatischen
Top 100
Aufstiegsspiel, irgendwas, du hättest so viel automatisch generierten Content in den Overwatch
in den Overwatch-Ranking-Modus einbauen können, der halt ein gewisses
Competition Level schafft, eben auf allen Bereichen. Weil so war es einfach nur
toxic as fuck. Jeder dachte, er ist nur in der jeweiligen League, weil seine
Teammates scheiße sind, hat die ganze Zeit rum geflamed, hat GG nach zwei
Sekunden, wenn der erste Push nicht funktioniert hat. Es war einfach nur von
Arsch, wie sie das gemacht haben.
Es war auch viel zu roh es gab drumherum auch nix
Es gab das einzige was es gab top 500 batches ja geil da kann ich mir jetzt was davon kaufen
Da ich die season one top 500 batch hab
Oder was das Kaufkauf von kaufen ist das falsche wort das war das einzige die hätten competition auf jedem level
Schaffen müssen
Und auch automatisch generierte Turnierbäume. Du hättest so viel, du hättest so viel machen können mit Competitive Overwatch auf allen Ebenen.
Aber sowas wie FaceIt oder sowas, das ist natürlich undenkbar mit sowas wie ner Overwatch League, wenn das irgendjemand anderes Competition-E-Sport-Sachen machen darf aus Blizzard selbst.
Es ist, es ist scheiße gemanagt worden, also das, das fuckt mich heute auch immer noch richtig ab, das hatte so viel Potential und irgendwann haben sie einfach gar nichts mehr gemacht.
Irgendwann haben sie auch einfach gar nichts mehr gemacht, gab's halt einfach nichts neues mehr, ab und zu gab's noch einen Comic, ja super.
So und eines der größten probleme für leute die jetzt nicht
Da irgendwie den den harten overwatch rank grind gemacht haben wie wir damals sondern die einfach nur overwatch just for fun gespielt haben oder
Ein bisschen rank ab und zu und dann irgendwie was weiß ich mal irgendwie diamond gepiekt sind oder sowas
so
Was für die beschissen war und das muss man sagen das ist heute zum teil immer noch so
overwatch league war nicht
Nicht, wieso sagt man das so unwatchable, das war nicht richtig schaubar einfach, du hast nicht verstanden, was passiert, zumal die auch jahrelang total bescheuerte Metas hatten, erinnert sich noch jemand an Goals oder erinnert sich noch jemand an die Beta, Double Winston, Double Reaper und so ein Geschiss,
Die hatten teilweise monatelang, wenn nicht sogar seasonslang, Metas, die du nicht gucken konntest in der...
Habt ihr mal einen Goalsmatch gesehen in der Overwatch League?
Das war nicht schaubar. Du hast nicht verstanden, was passiert.
Du hast zwei Teams aufeinander rennen sehen mit Tanks, die sich im Prinzip die...
die Köpfe eingeschlagen haben, bis irgendwo die Shields all waren,
bis irgendwie einer mal ein gutes, gutes, äh, Gravity Field,
ich hab vergessen, wie die Saria-Ult heißt, gesetzt haben,
und dann, und selbst, ey, das war nicht, das ...
Das konntest du nicht gucken.
Es ist nicht so, dass die Struktur hinter der Overwatch League,
also, unabhängig davon, dass mir das System nicht gefallen hat,
dass das irgendwie so wahnsinnig schlecht war
oder die Events schlecht organisiert waren oder so was.
Kern, der Kern eines Turniers war scheiße zu gucken und wer guckt sich ein
E-Sport an, wo das vielleicht gut organisiert ist, aber der Kern des
Ganzen, nämlich die Matches, scheiße zu gucken sind. Niemand, niemand guckt sich
das große an. Die ersten paar Overwatch Leaks waren noch recht gut, gut besucht,
ja, auch als das noch neu war und das noch einen richtigen Hype hatte und man
auch noch so ein bisschen dieses Korea vs. NA vs. EU Player und so hatte, ja, aber danach,
das ging rapide runter, das ging wirklich zzzzzppp, das war fast so wie die Zahlen von
New World auf Steam, ging da so runter mit den Viewern von der Overwatch League und ja,
die Overwatch League hat sich vielleicht am Anfang, ist vielleicht sogar besser gestartet
als man das erwartet hat, aber das ging rapide runter und irgendwann sind sie ja dann auch
gewechselt von Twitch auf YouTube und ab dem Zeitpunkt habe ich keine Ahnung mehr wie Overwatch
gelaufen ist ich habe nicht ein match legit leute ich habe ich habe früher ab und zu noch geguckt
aber seit es von twitch auf youtube gegangen ist die overwatch league
nichts nichts ich habe nichts mehr von verfolgen nichts mehr davon mitbekommen nichts mehr geschaut
das war für mich einfach nur dead
so
so viel zum thema overwatch esport
ihr merkt das ist ein thema was mich immer noch ein bisschen aufregt wie verkackt sie das haben obwohl das spiel unglaubliches potenzial gehabt hat
Ich will jetzt nicht weitergehen, warum ich denke, dass es so ist und so, das artet aus.
Moin, Moin, Michael.
50 Jahre.
Pogu.
Raum für Competitive Teams.
Es lief alles also ziemlich gut, bis alles auf einmal nicht mehr ziemlich gut lief und
immer weniger Spieler Bock auf das Game hatten.
Hast du Valorant gespielt?
Nein.
Nein?
Es kamen immer mehr Charakter dazu, die das Game komplett auf den Kopf gestellt haben,
wie Brig, die komplett broken war, als sie rausgekommen ist.
Eine Sache, für die das Overwatch-Team bekannt war...
Das ist auch so ein Ding, ich muss da jetzt einfach noch mal reinkrätschen.
Die neuen Helden, die rausgekommen sind, das muss man...
Okay, ich muss erstmal mal was Positives sagen dazu.
Moin, Hyper Noob.
Nob.
Ähm, ich muss erstmal was Positives dazu sagen.
Die Helden, die released wurden, und die Sachen, die released wurden,
die waren zumindest meistens gut gemacht.
Ich finde nach wie vor,
dass viele Maps in Overwatch
Komplett-Banane-Pepega, wie auch immer man das nennen mag, sind.
Die wurden von Leuten erstellt, die noch nie
Nennen wir es mal, tja, FPS kann man nicht wirklich sagen, nennen wir es mal FPS, die noch nie FPS-Maps erstellt haben.
Die ersten Valorant-Maps, die ich gesehen habe, ich habe Valorant nie gespielt, waren auch
die, okay, die ersten Valorant-Maps, die waren genau das Gegenteil zu den ersten Overwatch-Maps. Die ersten Overwatch-Maps,
Die sahen gut aus, guckt euch sowas wie Kings Row an, finde ich heute immer noch eines der besten Maps, die sahen gut aus, waren aber vom Gameplay her lahm.
So, und die ersten Valorant Maps, kann ich nur sagen aus Zuschauerperspektive, weil ich das Spiel nie gespielt habe, die ersten Valorant Maps waren handwerklich schlecht gemacht von der Optik her und wie die aussahen, aber spielerisch ganz brauchbar.
Das war das komplette Gegenteil.
Und Overwatch Maps sind langweilig.
Das ist auch so ein Punkt, den habe ich damals nicht verstanden, wie die an diesem Map-Konzept immer, immer dran festhalten konnten.
Die sind langweilig.
Overwatch-Maps bestehen in der Regel, in der Regel aus einem Weg.
Mit, wenn's hochkommt mal, einer oder zwei ab und zu flanking Routen, wo sich eine davon gar nicht lohnt.
Es gibt eigentlich in Overwatch immer einen Weg, den man läuft.
Und Overwatch-Maps, gerade die Payload-Maps...
Waren
Und nicht nur die payload alle maps alle maps waren rein auf choke points ausgelegt
Tempel of Anubis du hast den chokepoint nicht gehalten erster punkt war weg
Kingsrow du hast es du hast sie war weg also overwatch maps waren langweilig die waren ein die waren basiert auf einem klaren weg
Voll mit chokepoints wo du durch musstest ich fand das map design noch nie gut in overwatch
Bei neueren maps hat sich ein bisschen ein bisschen gebessert
Und dann kamen noch so Spielmodus wie 2CP dabei, das war nicht nur bei vielen unbeliebt, das war finde ich auch ein richtiger Kack Spielmodus.
Wie kommt man auf die Idee, Temple of Anubis, wie kommt man auf die Idee einen Defender Spawn direkt hinter den letzten Capture Punkt zu setzen?
Da kommen diese komischen Overtime Regeln dabei und das war alles irgendwie nur mäßig gut.
Getragen wurde Overwatch im Endeffekt durch die unterschiedlichen Helden und die Dynamik, die sich daraus ergeben hat.
Problematisch war,
dass du
oftmals mehr oder weniger das gleiche auf beiden Seiten gespielt hast und das auf jeder Map bei jedem Match.
Obwohl es recht viele Helden gab.
Was dazu geführt hat, dass es einfach langweilig war und in Kombination,
dass du es nicht, du konntest es nicht gucken, du konntest, du konntest Overwatch dir einfach, Overwatch eSport konntest du dir nicht angucken, du hast nicht verstanden, was passiert, das hast du bei den Castern gemerkt, die random Bullshit gelabert haben, ich hätte es nicht besser gekonnt, ja, keine Frage, weil ich hätte auch nicht verstanden, was passiert, außer ich hätte mitgespielt, ähm, und die Spectator und so, die waren alle komplett lost, also ich meine, ohne Mist, habt ihr euch mal zu Ghost-Zeiten Overwatch-Matches angeguckt, ja,
Und Kasts. Im Prinzip war das reines, ich hype permanent durch im Kast.
So, oi, was macht der denn jetzt?
Und oi, ein Crafter.
Und oi, der hat überlebt.
Und oi, jetzt kommt wieder was.
Und oi, jetzt ist einer gestorben.
Die sind komplett ausgeflippt die ganze Zeit.
Weil die nichts zu dem Game sagen konnten.
Du konntest zu dem Game nichts sagen.
Vergleich das mal mit nem ordentlichen CSGO-Kast.
Die können dir sinnvoll was zu dem Game sagen.
Erstens ist CS vielleicht auch ein bisschen einfacher zu observen.
Du hast gute Observer, die verstehen wann, wie, wo was passiert.
dass die kaum Engagements verpassen oder kaum Trades verpassen und die können das auch sagen
in CS. Die können ja auch sagen so nach dem Motto hier, was weiß ich, die Position misst
er normalerweise nie, seine Sniper Shots und das hat er jetzt so gespielt, weil irgendwie der dritte
Pixel von rechts von der Smokegranate nicht richtig den Balkon gecovered hat und sozusagen.
Das können die dir in CS erzählen. Das konnte niemand in dieser Tiefe und sonst was zu Overwatch erzählen.
Das war halt einfach nicht schön zu gucken. Und das ging dann bergab.
Und das ist was, was mich heute wirklich noch aufregt, weil ich das Spiel gern gespielt habe.
Und das Spiel so unglaublich großes Potential hat, was man hier ausgeschöpft hat.
Ja, egal. Weiter geht's.
War es auf jeden Fall nicht, ihr Spiel gut zu balancen.
Ja, ja gut, Overwatch-Balance ist typische Blizzard-Balance, typische Blizzard-Balance habe ich euch ja schon ein paar mal erklärt, typische Blizzard-Balance gehen so, ja, also das hier ist OP und das hier ist Sucked, Sucked, so, und Blizzard-Balance war so.
Das ging nicht gescheit, entweder war was OP oder es war scheiße.
Oder oft, ich will nicht sagen immer, aber in diese Falle, in diese Falle sind sie halt
oft getappt.
Ich würde sagen ein Spiel, was man wirklich als gutes Beispiel, und da könnt ihr mir
widersprechen, wenn ihr da richtig voll dabei seid, aber rein wieder aus Beobachterperspektive
und als jemand, der ab und zu ein paar Dota-Streams guckt.
Ich finde ein Spiel, wo man wirklich sagen kann, dass es Balancing technisch halbwegs
auf die Reihe kriegt, ist Dota 2.
Ich gucke immer mal on-off ein bisschen Dota. Ihr wisst, ich spiele eigentlich so gut wie keine MOBAs, ich spiele Dota auch nicht selbst.
Ich gucke mir beispielsweise die jährlichen offiziellen Turniere an, die es dazu gibt.
Und was man bei Dota sagen muss ist, die haben es irgendwie geschafft.
Klar, es gibt Meta-Picks, gibt es immer, aber die sind bei Dota doch relativ vielfältig.
Also wenn man sich beispielsweise mal anguckt
so die hero picks
über so die letzte über die über die
über die letzten turnier monate da wird man feststellen die spielen halt nicht nur irgendwie
ich
zehn hellen oder so
die spielen halt keine ahnung vielleicht lasst es mal 25 hellen sein klar mein dota hat massig hellen viele von denen werden professionell
Aber es ist vielfaches besser, vielfältiger als das, was die Overwatch hinfabriziert haben.
Aber wenn 80 der 120 Heroes OP sind, spricht das doch schon mal für das Game, oder?
Aber selbst im E-Sport-Bereich, ich weiß nicht, wie die Pick-Rates sind, aber ich glaube so um die 30 Heroes oder so wurden gepickt.
Ich hab letztens mal so ne Tabelle gesehen und das ist ja schon, das ist ja schon wirklich sehr vielfältig im Vergleich zu dem was man in Overwatch gesehen hat.
In Overwatch hattest du, hast du die gleichen sechs Helden, wirst die gleichen sechs Helden jede Runde, jedes Match gehabt.
Kam viel zu oft vor, dass es bestimmte Metas gab und wenn man irgendwas außerhalb dieser Meta gespielt hat, wird man komplett gefickt.
Die GOATS Meta war lange ein Bestandteil von Daily Business in Overwatch.
Man hat statt DPS, Healer und Tanks einfach nur noch Healer und Tanks gespielt, weil wer braucht so ein DPS?
Ach ja, ich hab eine Sache noch vergessen zu sagen, da müsst ihr jetzt durch, ich muss jetzt ein bisschen über Overwatch meckern.
Weil ich sagen wollte, ich wollte ja noch was Positives sagen.
Ich fand, neben dem was ich eben gesagt habe, die Helden die sie eingeführt haben, alle immer gut.
Rein von der Idee hinter den Helden.
Das Problem mit den neuen Helden war, die sie eingeführt haben, dass das meistens, nicht immer,
Aber das waren so
Helden, die waren mega stark
mit einfachen Abilities
Also hast du zum Beispiel sowas wie Brigitte
Du musstest, du musstest, du stellst dich vor den Gegner, drückst den Knopf, der ist gestunt
Dazu musstest du nichts machen. Ey bei McCree mit dem Flashbang musst du ja zumindest noch am Schild vorbei werfen
Du bist hin, du hast dein Schild gehabt, du hast den Gegner gestunt
Du musst, du musst einen Knopf drücken, den Gegner zu stunnen. Das war Counter zu nahezu allem, was es in dem Game gab.
Und es war easy als fuck zu spielen.
Du musstest das auch spielen, obwohl es eigentlich gar keinen Bock gemacht hat.
Ich bin ja immer noch der Meinung, hier, bestes Overwatch-Grill und so, aber die Mechanik, das war voll für'n Arsch.
Und es gab einige solche Helden, made to the face, genau. Es gab, es gab einige solche Helden.
Es gab so Sachen wie Doomfist, das ist ein bisschen rausgefallen, das war halt auch lächerlich zwischenzeitlich, ja?
So mit Aufladen und quer durch die Map dashen und alles so wegklatschen, aber das war, um Doomfist gut zu spielen, war schon nicht einfach.
Konnte ich nie.
Ähm, aber so Sachen wie Breathless, das muss einfach nicht sein.
Und das Problem bei Overwatch war halt, das war dann erstmal ein Dreivierteljahr im Game, bis Blizzard auf die Idee gekommen ist, man könnte ja mal was dran ändern.
P.S. Man hatte quasi unendlich Leben und die Tanks und Healer haben schon irgendwie genug
Damage gemacht, weshalb alle PS-Heroes über ein Jahr lang quasi komplett ausgestorben sind.
Wenn irgendetwas in dem Spiel falsch lief, hat das Overwatch-Team erstens viel zu lange
gebraucht um das Problem zu fixen und zweitens bei dem Versuch es zu fixen
gleichzeitig 10 andere Probleme erzeugt. Die Antwort auf die Goats-Meta war beispielsweise
rollenbezogene Ranking-Cues einzufügen.
Was das?
Bin gar nicht mehr so sicher jetzt.
Das kam so in dem Dreh irgendwann, ja?
Vorher war es unmöglich, DPS zu spielen
und jetzt umso mehr,
da man fucking Viertelstunde plus auf ein
Game warten musste. Von solchen
Sachen gab es ab dem Punkt am laufenden
Bande welche in Overwatch, weshalb immer
mehr große Persönlichkeiten zu anderen
Games wechselten, genauso wie die Spieler
es taten. Es hat irgendwann einfach
gar keinen spaß mehr gemacht dieses spiel zu spielen der einzige teil
Overwatch hat keinen spaß mehr gemacht, Overwatch hat nur noch aufgeregt
und das war der zeitpunkt wo ich kein bock hatte. Das ist bei mir oft so egal
egal ob ich games spiele oder ob ich serien gucke oder sonst was manchmal
kommt der moment wo ich sachen einfach nicht mehr nachvollziehen kann einfach
nicht mehr mit mit mitmachen will ja beispielsweise gibt es auch es gibt auch
serien wenn ich die gucke und dann irgendwie staffel 3 ist und ich bedenke
Alter, warum verhalten die sich jetzt alle so komplett entgegengesetzt zu dem, wie es in Staffel 1 und 2 war und Alter, warum ergibt das jetzt alles gar keinen Sinn mehr?
Dann nervt es mich nur noch, dann macht es mir keinen Spaß, mal zu gucken, dann nervt es mich nur noch, dann höre ich auf, die Serie zu gucken.
Ich muss nicht zwangsläufig alles bis zum Schluss gucken.
Und bei Games ist es auch so, wenn mich ein Game nur noch nervt oder nur noch aufregt, dann kann ich es mir einfach nicht mehr geben, ja?
Und das ging nicht nur mir so.
Es gab viele Overwatch-Bros, die ihr Geld damit verdient haben.
Die immer wieder auch in ihren Spielen, in ihren Sachen geflamed haben.
So nach dem Motto, Alter, wenn ich jetzt, wenn ich...
Die haben in ihren Streams dann teilweise CS gespielt und haben halt gesagt,
oh fuck, Alter, ich hab gleich Overwatch-Training.
Seriously, ernsthaft, kein Spaß, ja?
Überleg dir mal, du hast ein Overwatch-Bro, der spielt was anderes on-Stream,
und du sagst, scheiße, Alter, gleich ist wieder Overwatch-Training.
Oder, Alter, ich spiel diesen Kack doch eh nur, weil ich Geld dafür kriege.
ist vorgekommen die anderen auch kein bock drauf
ja nur so gespielt weil es geld bringt gut ist ja nicht verwerflich aber
bezeichnet für das spiel nicht tot ist die pornoindustrie aber rettung war der
einzige teil an overwatch der nicht tot ist die pornoindustrie
wundert mich nicht da geht immer und mich würde nicht wundern wenn das in
valorant genau so aussieht ich will jetzt nicht googeln weil das ist auf
Auf jeden Fall MonkaToss, aber ich wette mit euch bei Valorant ist es genau so.
Das ist klar, das ist genau so.
Aber Rettung Warnsicht.
Overwatch 2 wurde auf der BlizzCon 2019 angekündigt.
Episch großer Trailer.
Und dann war es erstmal irgendwie drei Jahre Funkstille drum und jetzt gibt es nicht mal mehr PvE,
was eigentlich der Seller werden sollte für Overwatch.
Es wurde darüber geredet, wie viel Liebe in das Game geflossen ist.
Ja, und dann ist Jeff weg und sie haben das Game wahrscheinlich noch mal umgeklampelt.
Ich fand die Idee mit dem Skilltree nice. Das war wahrscheinlich nur für PvE gedacht.
Aber die Idee dahinter, dass man Helden nicht nur picken kann, sondern ein bisschen customizen kann, fand ich sehr gut.
Weil ich hatte mich den Overwatch schon damit abgefunden, dass mehr oder weniger die gleichen Helden immer gespielt werden, gegen mehr oder weniger immer die gleichen Helden.
Aber vielleicht hätte man mit Skilltrees schon noch ein bisschen Varianz da reinbringen können, das fand ich eine gute Idee.
Ja, auch wenn es erstmal nur für PvE gedacht war, aber vom Grundansatz her fand ich es eine gute Sache.
Es ist halt leider auch komplett weg jetzt, ne.
...Com, den man mit der Zeit immer weiter aufleveln kann.
Im Zuge der BlizzCon wurde sogar direkt die erste PvE-Mission gezeigt.
Rio de Janeiro wurde das Ganze genannt und es war ein Spektakel,
gemischt aus gut gemachten CGI-Cutscenes und verschiedenen Etappen,
in denen man gegen Wellen an Bots kämpfen musste.
Ich muss ehrlich sagen, ich fand das damals, sah das auch schon nicht sonderlich innovativ und toll aus.
Ich weiß, viele haben das gefeiert, ich fand das da zimper...
Also ehrlich gesagt, ich fand das da damals schon ein bisschen uninspiriert aus.
So nach dem Motto, ja, das spielst du einmal und dann nie wieder.
Wirklich sehr vielversprechend.
Fand ich nicht, fand ich nicht.
Aber es war eine gute Sache.
Also ich, ein PvE-Modus fand ich eine gute Sache, weil ich immer noch der Meinung bin,
dass die Welt von Overwatch durchaus eine gute Singleplayer-Kampagne hergeben würde.
Und das ja auch was ist, was Blizzard eigentlich kann.
Das ist ja das, wo ich so ein bisschen drauf gehofft habe. So eine Horde, so ein competitive PvE, Horde-Modus, schön und gut.
Aber eine Singleplayer-Kampagne wäre wirklich richtig geil gewesen für Overwatch, eine gute.
Also Blizzard, was eine gute Singleplayer-Kampagne machen kann.
Die Welt hätte es hergegeben und die unterschiedlichen Helden und so hätten sicherlich auch eine interessante Story hergegeben.
Hat sich aber Blizzard gedacht, nope, damit lässt sich kein Geld verdienen.
verdient aus außerdem reden wir hier von blizzard auch wenn in den letzten jahren ich sag mal ein
paar unvorteilhafte dinge passiert sind kann man ihnen nicht absprechen wie gut viele von ihnen
sind vor allem aus dem pve segment die können das einfach die jahre nach der ankündigung sind also
vorbeigezogen man hat sich langsam gefragt wo das spiel viel viel gutes hat blizzard ja auch jetzt
ja nicht hinbekommen so wir haben jetzt mal wieder mit diablo 4 endlich was was anscheinend nicht
nicht nur auf den ersten Blick, was taugt,
sondern wohl auch ein bisschen Substanz hat.
Mal gucken, wie's in ein paar Monaten aussieht.
Das Einzige, was sich in den Jahren nach der Ankündigung so getan hat,
ist, dass Overwatch 1 komplett krepiert ist.
Immer weniger Spieler haben es gespürt.
Es gab ja auch kein Content.
Es kam förmlich gar kein Update mehr für das Spiel raus.
Man hat gemerkt, dass das Spiel für Blizzard selbst ein sinkendes Schiff ist.
Man dachte, dass jede Manpower nun zu Overwatch 2 geschickt wird,
um dort den ganzen neuen Content zu entwickeln.
2022 war es endlich soweit und die Beta zur Overwatch 2 ging an den Start.
Twitch-Zuschauerzahlen explodierten, da man als User einen Beta-Key bekommen hat,
wenn man für mehrere Stunden einen Streamer geschaut hat, der die Beta spielt.
Nach 5 Stunden XQC konnte ich selbst auch endlich in die Overwatch 2-Beta reingehen
und ich sag's euch ganz ehrlich, es hat wirklich Spaß gemacht.
Es hat sich so angefühlt, als wäre wieder 2016.
Ich und die Boys einfach ein paar Runden Overwatch grinden.
Ich selbst hab das Spiel seit Jahren halt auch nicht mehr gespielt,
der erste Teil ab einem gewissen Punkt, wie gesagt, wirklich gar keinen Spaß mehr gemacht hat.
Ich hatte keinen Spaß an der Beta, weil es jetzt irgendwie ein krasses Sequel war,
sondern einfach, weil es Overwatch war.
Und Overwatch ist an und für sich halt wirklich kein schlechtes Spiel.
Am 4. Oktober 2022 kam Overwatch 2 endlich für jeden raus und die Leute waren...
Chat, woher kennt man diesen Sound hier?
...Oktober 2000. Overwatch ist an und für sich halt wirklich kein schlechtes...
Ich weiß, das ist nur noch 15 Sound, aber woher kennt man den?
...Spiel?
Am 4. Oktober 2020 kam Overwatch 2 endlich für jeden raus und die Leute waren gehypt.
Beziehungsweise, naja, nicht wirklich gehypt, weil der große Point von Overwatch 2, die PvE-Modi, nicht existent waren.
Man hat also jetzt schon sein Spiel so halbraus gebracht, weil Overwatch 1 halt wirklich...
Könnte man nicht sagen, dass die Hälfte von Overwatch 2 eigentlich Overwatch 1 ist?
...krankverrecktes und naja, Geld ist immer noch Geld.
Aber was sind jetzt wirklich die Unterschiede zwischen den beiden Spielen?
Es gibt drei neue Heroes, sechs neue Maps und einen komplett neuen Modus namens Push.
Ja, die Grafik sieht ein bisschen besser aus, aber das ist nix, wofür man 4 Jahre gebraucht hat, oder?
Ne.
Ja.
Mit ein paar Reworks von Heroes einhergingen.
Ein paar davon sehr subtil, wie ein bisschen mehr Damage, ein paar...
Ja, die mussten, die mussten die Heroes ja reworken, weil es jetzt ein Spieler weniger auf jeder Seite ist.
Das ging ja gar nicht anders.
Mussten sie ja reworken.
Aber auch sehr groß mit Heroes wie Orisa, die sich so ziemlich gar nicht mehr wieder vorgespielt haben.
Der größte Change ist aber der Fakt,
dass nun fünf gegen fünf statt sechs gegen sechs gespielt wird.
Man spielt jetzt nur noch mit einem Tank.
Ich persönlich hab auf jeden Fall gar nix gegen diese Entscheidung,
dass sich jedes Teammitglied nun etwas wichtiger anfühlt.
Man hat das Game jetzt ein bisschen mehr selbst in der Hand
und hat das Gefühl, mehr beeinflussen zu können.
Das war's aber so ziemlich. Ein paar nette Änderungen,
die drei Jahre Wartezeit auf jeden Fall rechtfertigen.
Haltet euch fest, aber ich hab von der größten Neuerung
Nämlich der Shop. Es gibt nun ein Battle Pass, mit dem man zahlreiche Sachen freischalten kann,
wie neue Heroes. Ganz recht. Da das Spiel nun Free2Play ist, hat man nicht mehr alle Charaktere
von Anfang an, sondern muss diese erst freischalten oder, naja, ein paar Euronen investieren.
Außerdem kannst du Skins kaufen. Skins gibt es allgemein so ziemlich jedem Free2Play Online
Game zu kaufen, aber an Fortnite bezahle ich 10 Euro dafür, dass ich Vegeta spielen kann
und mich in einen fucking Super Saiyajin Blue verwandelt,
während ich in Overwatch 2 20 Euro dafür belegt, dass meine Winston rot ist.
Und auch wenn es durchaus ein paar...
Ja, Skin-Preise in Blizzard-Games, ne?
...neue Sachen in Overwatch 2...
In Diablo 4 kostet ja auch irgendwie ein Set irgendwie 28 Euro und sowas.
...2 gibt, wurden auch viele Sachen willkürlich aus dem ersten Teil entfernt.
Das Level-System wurde komplett entfernt.
Ich meine, es gibt ja jetzt den Battle-Pass, den man leveln kann.
Ja.
Aber auch blöd, man sieht nicht, wie lange die Leute das schon grinden.
Man kann nicht mehr sehen, ob Leute Premades sind.
Man kann nicht mehr on Fire sein.
Es gibt keine Zusammenfassung mehr am Ende von Matches,
geschweige denn die Karten und Auszeichnungen.
Man kann seine Waffen nicht ingame auschecken,
obwohl genau das in den Trailern gezeigt wurde.
Die haben das in den Trailern drin, aber nicht im eigentlichen Spiel.
Es gibt jetzt zwar 6 neue Maps,
aber dafür wurden 5 alte komplett...
Ja, 2CP wurde entfernt. 2CP ist auch ultra Schrott, Alter.
Ich hätt's cooler gefunden,
gefunden, sie hätten vielleicht die 2CP-Maps irgendwie zusammengefasst zu einer Push-Map oder irgendwas anderes ganz rauswerfen, ist doof, sie
gehören für mich irgendwie immer noch in Overwatch dazu, aber 2CP war so ein Schrottmodus, Alter.
...entfernt. Man könnte meinen, dass der Re-Release unter Overwatch... 2CP ist wieder drin? What?
Oh, nee.
Schrott, Alter. ...Watch 2 nur Blizzards Entschuldigung dafür ist, das Spiel free-to-play rauszubringen, um so noch mehr Geld aus dem ganzen
abmelken zu können. Außerdem halte ich es für einen Industriestandard, solche Sachen wie neuen
Content oder Balancing in ein Game reinzupatchen, statt direkt ein komplett neues Spiel rauszuhauen.
Die Sachen, die hier dazugekommen sind, rechtfertigen auf gar keinen Fall ein neues Game.
Das einzige, was mich jetzt noch optimistisch stimmt, ist der angekündigte PvE-Story-Modus.
Man merkt, dass wirklich viel Liebe darin geflossen ist und das wäre immerhin eine Begründung für ein
Komplett neues spiel
Der große point an overwatch 2 der grund wieso dieses spiel überhaupt existiert wurde einfach so aus dem nichts gecancelt
Die begründung war dass immer mehr ressourcen weg vom online game gezogen wurden und man den fokus verloren habe
man könne sich nicht um den pve modus kümmern ohne den
Also diese Pressemeldung oder diese Statements sind immer so pepega, alter.
Wisst ihr, was für mich eines der krassesten pepega-Statements in letzter Zeit war, die rausgekommen sind?
Hat jemand von euch das Gollum-Game mitbekommen?
Nur mal so am Rande gefragt.
Also es gab mal wieder ein Game im Herr-der-Ringe-Universum und man hat Gollum gespielt, ich hab's mir nicht gekauft, ich werd's mir auch nicht kaufen.
Zumindest, das Game sah von Anfang an übelst für'n Arsch aus. Das Game ist rausgekommen, war halt uninspiriert und für'n Arsch.
Da wurde quasi schon direkt, paar Tage nach Release, wurde ein Entschuldigungsstatement rausgehauen.
Und dass man jetzt hart daran arbeiten wird, so alle Expectations zu erfüllen und sonst was in der Richtung.
Und es war sofort klar, als man diese Meldung gelesen hat,
dieses Statement, das wurde schon geschrieben während der Entwicklung.
Die wussten, dass das Scheiße ankommt.
Die wussten, dass es ein Kack-Game ist.
Die haben quasi das Statement, das Statement wurde quasi parallel zum Game schon geschrieben.
Anders kannst du es echter wahnsinn so ein ppga kram
Die haben mittlerweile das ist wirklich triple a development heutzutage man schreibt die entschuldigung an die community
Und man gelobt besserung schon bevor das game überhaupt fertig ist das ist schon fertig geschrieben liegt in der schublade
das liegt in der schublade ungefähr so
wie ich habe ich habe eine doku gesehen zur mondlandung
leute
Flache Erde und so, wir lassen es jetzt mal komplett raus, aber ich habe mal eine Doku gesehen zur Mondlandung, von der ich persönlich auch denke, dass sie stattgefunden hat.
Zumindest, jetzt mal Spaß beiseite, und dort wurde erzählt, dass selbst Experten gesagt haben, wenn sie optimistisch sind, sie rechnen mit einer 50-50 Chance, dass das klappt.
Und nicht nur eine 50-50 Chance, dass das klappt, sondern eine 50-50 Chance, dass die Astronauten wieder lebend heimkommen.
Und es wurde damals schon für mehrere Fälle, wurden Reden und Presseerklärungen vorgeschrieben, für den Fall der Fälle, dass das passiert.
So, Rakete explodiert beim Start, sie kommen nicht mehr zurück, es crasht auf den Mond, sie stranden auf dem Mond.
Da wurden im Vorfeld schon Pressemeldungen und Reden geschrieben, die lagen dort in der Schublade.
für den Fall der Fälle. Und so ungefähr stelle ich mir das aktuell bei AAA-Entwicklung vor.
Man schreibt die Entschuldigung schon mal im Voraus, dass man sich ordentlich Gedanken
zumachen kann und sobald es dann eintritt, kann man die rausholen und direkt auf Twitter posten.
So wirkt das für mich mittlerweile. Das ist halt leider mittlerweile so AAA-Game-Development.
VVP-Modus zu vernachlässigen. Wo ich mich frage, wozu zum Fick wurde Overwatch 2 überhaupt
schon veröffentlicht, statt zu warten und sich in Ruhe um den PvE-Mode zu kümmern.
Zu all dem Ganzen muss man aber sagen, dass das Team von Overwatch 1 oder selbst das Team
von Overwatch 2 am Anfang gar nichts mehr mit dem heutigen Overwatch 2 Team zu tun hat.
Super viele Leute haben im Laufe der letzten Monate und Jahre das Team verlassen und ich
Ich kann mir vorstellen, warum.
So wie das alles hier verlaufen ist,
hat sich das bestimmt niemand aus dem Team gewünscht.
Man kann sehen, wie passioniert und talentiert viele in der Crew sind.
Das stimmt.
Die Trailer sehen teilweise so cool aus.
Man weiß, dass die Leute etwas Großes aus dem Spiel machen wollten.
Das stelle ich mir extrem demotivierend vor.
Du steckst da wirklich drei Jahre vollster Energie rein,
und dann wird so was draus gemacht.
Man weiß aber auch, dass die Bosse von oben vor allem eins wollten,
und zwar so schnell wie möglich.
Natürlich.
So sehen wir ein Produkt, das so gut hätte werden können,
komplett unfertig und unter seinem Potenzial rausgeballert wurde.
Einfach nur schade und ein perfektes Sinnbild
für den aktuellen Stand der Gaming-Industrie.
Da hat er recht.
Ja.
Ja, da würd ich ihm recht geben.
Es ist zwölf Uhr, Leute.
Ich hab Hunger.
Ratet mal, was es heute gibt.
Ihr kommt nicht drauf.
Lachs mit Nudeln, korrekt.
Ihr habt es zuschaut,
ihr seht schon, ihr habt das Pattern
erkannt. Auch ohne
Regex.
Ich erinnere dich nicht dran,
aber du hast dich gerade selbst daran erinnert.
Alles klar Leute, so, gibt es irgendjemanden, den wir hosten können?
Mal auf die Schnelle geguckt, wem followe ich denn, der gerade on ist?
Leicht deutschsprachig und nicht so groß, mal gucken...
Bis dann, machts gut, see you!

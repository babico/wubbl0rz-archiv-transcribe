1.
.
.
.
.
.
.
.
.
.
.
.
.
.
was viele Leute halt dazu gebracht hat, auch mal Desktop-Anwendungen erstellen zu können.
Ja, sowas wie Elektron, genau so, genau, das meine ich.
Dass die Dinger automatisch auf so gut wie allen Betriebssystemen und Mobile-Geräten laufen.
Aber, und das war bestimmt eines der großen Vorteile,
man konnte sie auch gut unter Windows laufen lassen, ohne dass man sich zwischen entscheiden musste,
nehme ich was total Outdatedes von Microsoft Supportedes für Windows,
oder nehme ich was Neues, was mich so einschränkt, dass ich nicht alles machen kann, nämlich UWP.
Und deswegen haben ganz viele angefangen Elektron-Anwendungen zu bauen
und wir haben heute Anwendungen, die halt für einfachste Dinger 400 MB RAM brauchen,
weil halt erstmal Node.js, Browser und alles mögliche hiermit gestartet werden muss.
Ich bin mir relativ sicher, dass dieses Vakuum an Windows-UI-Frameworks
mit, also entscheidend mit beigetragen hat dazu, dass Elektron sich so verbreitet hat.
Irgendwann ist das Microsoft auch gedämmert, ich würde mal sagen so im Dreh,
vielleicht von Windows 10, weil Anfang Windows 10 haben die immer noch versucht UWP zu pushen,
aber sagen wir mal so, ungefähr mit Windows 10 ist es, oder ein bisschen später,
sagen wir mal so, Windows 10 und ein paar Patches, ist es dann irgendwann gedämmert,
dass UWP halt wirklich keine Sau haben will und sich das auch nie durchsetzen wird.
Lag wahrscheinlich auch ein bisschen am Wechsel von Microsoft Chef und allem.
Und dann sind sie auf die Idee gekommen, ok, lasst uns doch versuchen, UWP in die Tonne zu hauen
und den UI-Part von UWP, also quasi der UI-Part ist halt unter anderem das,
worauf Calculator hier basiert oder viele Windows-Internet-Tools mittlerweile auch basieren,
lasst uns doch den UI-Part nehmen und das UWP daraus entfernen.
Und das hat Microsoft dann gemacht und da kam dann WinUI bei raus.
Und WinUI ist seit ein paar Jahren der Versuch von Microsoft, endlich mal wieder ein gescheites UI-Framework
für komplette Anwendungen für Windows herzustellen.
Das Problem war nur, dass WinUI in den ersten zwei Versionen noch sehr UWP-fokussiert war
und es dementsprechend, sie haben es sich geschafft, das richtig von UWP zu lösen
und dementsprechend wollte das am Anfang auch keiner haben.
Dann haben sie ewig gebraucht, ich glaube es kam erst vor zwei Jahren oder so,
oder vor einem Jahr oder sowas kam erst WinUI 3 raus.
Und mit WinUI 3 ist es zum ersten Mal seit 10 Jahren vielleicht, oder länger,
sagen wir mal seit 10 Jahren,
es ist zum ersten Mal seit 10 Jahren möglich, wieder komplette, vollständige Windows-Anwendungen zu erstellen.
Ohne Sandbox und ohne Geschiss und ohne Codesigning-Zertifikat und alle möglichen Gedöns.
Also ich glaube man kann mittlerweile, ich bin mir da gar nicht so sicher,
weil das haben sie auch wieder verschoben, man kann mittlerweile ganz normale,
unpackaged Win32 oder sollte man besser sagen Win64 Anwendungen erstellen mit UI unter Windows,
ohne Sandbox, ohne Zertifikate, ohne Geschiss, also das, was die meisten Leute eben für Windows machen wollen.
So, also nachdem es über 10 Jahre kein gescheites UI-Framework für Windows gab,
daher kommt das.
Deswegen hat sich unter anderem, bin mir zumindest relativ sicher,
Elektron soweit durchgesetzt und deswegen ist UI-Entwicklung unter Windows so unglaublich Pains Champ.
Du kannst natürlich Cross-Plattform-Frameworks benutzen, sowas wie Elektron, du kannst vielleicht Qt benutzen.
Aber es wäre halt cool, wenn man eine Windows-Anwendung für Windows machen will,
wenn man dann kein Cross-Plattform-Framework benutzen muss, sondern irgendwas benutzen könnte,
was eben richtig gut funktioniert.
Halt nur Windows-Only, aber halt gescheit und dafür halt komplett alles, was Windows so kann.
Das gab es ja lange Zeit nicht und deswegen ist Windows-UI-Anwendung, Programmieren einfach so Shit.
Und ist es immer noch.
Weil Microsoft es über 10 Jahre nicht hinbekommen hat und versucht hat, eine Technologie zu pushen, die keiner haben wollte.
Ja, aber der beste, jetzt kommen wir mal zur eigentlichen Frage,
der beste Weg Windows-Anwendungen zu erstellen ist, dadurch durch dieses ganze jahrzehntelange Geschäft,
überleg dir halt, was du machen willst.
Willst du hauptsächlich eigene Inhalte rendern, nimm Windows Forms.
Ansonsten, wenn du es einfacher haben willst, nimm trotzdem Windows Forms
und gleichst da halt vielleicht ein bisschen was drüber, dass es moderner aussieht.
Oder schau dir WinUI 3 an.
Dann hast du das Neueste von Microsoft, was der Weg, der gedachte Weg ist,
von Microsoft Windows-Anwendungen zu entwickeln.
Ja.
Und in welcher Sprache du das dann schreibst, ist eigentlich egal.
Ich persönlich würde dir wahrscheinlich empfehlen, das auf .NET-Basis in C-Sharp zu machen,
weil C-Sharp eine deutlich angenehmere und schönere und einfach angenehmere, bessere Sprache ist als C++.
Und das .NET-Framework auch die deutlich bessere Standard-Library ist als die Standard-Lib in C++.
Und es auch einfach viel weniger Gehirnzerbrechen und angenehmer ist und insgesamt einfach besser ist als C++.
Ja.
Und du bekommst mit Visual Studio auch eine gescheite Windows-kostenlose IDE,
die auch nur unter Windows funktioniert, ohne dass du dir Rider kaufen musst.
Also ich würde sagen, mach das auf .NET-Basis und guck dir mal WinUI 3 an.
Und dann kannst du eine halbwegs moderne Anwendung erstellen.
So.
Ja, wie gesagt, es macht ja in manchen Fällen auch Sinn.
Zum Beispiel bei sowas, ja.
Moin.
Ans Trinken erinnern.
Pog.
Moment.
C++ ist nur für High-IQ-Leute.
Okay, das lasse ich mir insofern sogar gefallen.
Ja, das stimmt.
Alle anderen sind hoffnungslos am Verzweifeln.
Aber du musst trotzdem ein bisschen so selbstquälermäßig veranlagt sein, dass du C++ benutzt.
Wenn es andere Möglichkeiten gibt.
Wenn es keine anderen Möglichkeiten gibt als C++, ja gut, da bleibt ja mal nichts anderes übrig.
Also wenn man beispielsweise irgendeinen ESP32 programmieren will,
und Arduino, also mit dem Arduino-Kern dafür,
dann bleibt ja nichts anderes übrig als C++.
Ja, WPF ist auch unglaublich komplex und kompliziert.
Also das liegt aber auch mit daran, weil Microsoft halt ewig nichts richtig dran gemacht hat.
Also man müsste es gar nicht so ultra kompliziert machen.
Das war halt eines der...
Man muss sagen, WPF war damals wirklich weit vorne von den Funktionen, ja.
Die haben beispielsweise als einer der ersten das übernommen,
dass du dein UI in einer Markup-Language machen kannst.
Du kannst deine einzelnen Komponenten themen,
wobei das nicht Themes heißt bei WPF, das heißt Shape.
Wie heißt das? Styles?
Heißt das, glaube ich, bei WPF?
Du hast so zwei verschiedene Sachen bei WPF.
Du hast Styles und du hast...
Layouts?
Ach, ich meine...
Templates! Genau, Templates. Das meine ich, ja.
Ja, das ist halt schon ziemlich kompliziert.
Und man hat ja auch Jahre, Jahrzehnte quasi jetzt daraus lernen können.
Es gibt ja schon fast 20 Jahre oder so.
Ich glaube, WPF kam 2006 oder so raus.
15 Jahre.
Und...
Vieles davon braucht man da standardmäßig gar nicht.
Man könnte es doch besser machen können.
Also WPF ist unglaublich kompliziert.
Und die waren halt damals eine der Ersten,
die vieles neu gemacht haben.
Und auch mit ihrem Two-Way-Data-Binding und sowas.
Was es so in der Form bei den meisten UI-Frameworks gar nicht gegeben hat.
Aber man hat jetzt einiges gelernt mittlerweile daraus.
Was man ja auch daran sieht ist...
Guckt mal, Leute.
Wir haben gestern...
Wir haben gestern Spell Kit programmiert
und ein bisschen Browser UI gemacht.
Man muss sagen, das ist vom Ansatz her
gar nicht mal so viel Unterschied...
Also von den Sprachen, die man benutzt, schon.
Aber von der Design-Idee ist das gar nicht mal so viel anders als WPF.
Aber von der Handhabung her viel angenehmer.
Ist für heute was geplant?
Ja, das Gleiche.
Oh, ich habe den falschen Titel genommen für den Stream.
Fällt mir gerade auf.
Ich habe WhitePepoHappy als Stream genommen.
Das ist ja falsch.
Wir haben Aufwachen-Stream.
Was ist denn da los?
Chat, warum sagt das keiner?
Chatgiz, was ist hier los?
Alle noch sleepge.
Aufwachen-Stream ist ja eigentlich das Richtige.
So.
Excellent.
Jetzt sind wir Aufwachen-Stream.
Ja, das ist auch so ein Ding bei Microsoft.
Jack, danke für den Sub.
Ich glaube, das ist bei Microsoft immer noch so ein bisschen problematisch.
Die haben halt ganz viele unterschiedliche Internet-Teams,
die voneinander nicht viel wissen wollen.
Zumindest hört man das immer wieder.
Moin, Mario.
Und dazu kommt, dass Microsoft dazu neigt,
ihre eigenen Sachen anzupreisen,
allerdings nicht so richtig zu verwenden.
Ich meine, ihr könnt die UWP-Anwendungen,
die großen UWP-Anwendungen von Microsoft in den
– fragt mich nicht –
fast 10 Jahren, wo sie versucht haben,
diese Technologie zu pushen,
ihr könnt die an einer Hand abzielen.
Oder wahrscheinlich sogar an zwei Fingern oder so.
Da gibt es keine.
Ich weiß nicht, was es für große UWP-Anwendungen von Microsoft gibt.
Mir fällt keine ein.
Office ist auch keine richtige UWP-Anwendung.
Es gibt, glaube ich, keine.
Visual Studio ist keine.
Ich glaube, mittlerweile ist Visual Studio, glaube ich,
teilweise WinUI.
Da bin ich mir aber auch nicht sicher.
Es gibt – also Microsoft benutzt selbst ihren Kram nicht.
So, und mal als Beispiel.
Als Beispiel, was Microsoft –
Nee, nee, nee, im Store kannst du mittlerweile
sogar Windows Forms-Sachen veröffentlichen.
Das haben sie ja mittlerweile geöffnet.
Deswegen kannst du ja auch VLC und sowas
über den Store mittlerweile installieren.
So, und woran man sieht,
dass die Microsoft-Idee,
so, und woran man sieht,
dass die Microsoft-Ideen oftmals halt nicht funktionieren,
bei ihren eigenen Sachen schon,
hätte Microsoft –
Der Store ist in UWP, ja, das stimmt.
Der Store selbst, das kann sein.
Die Settings, ja, das kann auch sein.
So, was wollte ich jetzt sagen?
Ja, also, so ein Beispiel für, guckt mal.
Der Installer.
Für Visual Studio.
Visual Studio Code und solche Geschichten.
Okay, nennen wir mal Visual Studio.
Der Installer für Visual Studio war jahrelang,
und glaube ich, ist es immer noch,
eine Browser-Anwendung.
Irgendwelche Dinger von Microsoft
sucht man da vergebens,
wo man sich halt denkt,
okay, wenn ihr merkt,
dass halt euer Kram viel zu restriktiv ist,
selbst für eure eigenen Anwendungen,
dann könnte man auf die Idee kommen,
dass vielleicht auch niemand anderes
Anwendungen dafür bauen will.
Und die haben dann einen Web-Installer
für Visual Studio gebaut und sowas,
wo man sich dann denkt,
okay, jetzt hat es schon einen Grund,
dass die Leute keinen Bock hatten,
UWP-Anwendungen zu bauen.
Weil du dank der Sendbox
nichts machen kannst, gescheit.
Und das hätte Microsoft
eigentlich viel früher kapieren müssen, ja.
Und die benutzen oftmals
ihre eigenen Sachen nicht,
was kein Aushängeschild ist.
Ich meine, man muss sich mal angucken,
so die großen Dinger,
die bekannt geworden sind,
so React,
zum Beispiel, ja.
Die sind ja alle
nicht nur bekannt geworden,
weil sie eben ein Problem gut lösen.
Ja, genau.
Ja, und WinUI 3 hatte,
Viagra, take Viagra, die hat,
WinUI 3 hatte ja auch
auf lange Zeit das Problem,
dass sie dieses Packaging
von UWP mit übernommen haben,
dass selbst wenn du quasi
eine Unsendbox der Application
bauen wolltest,
du trotzdem ein Komponent
der Application bauen wolltest,
du trotzdem ein Code Signing Zertifikat gebraucht hast.
Ich glaube,
das ist jetzt seit 1, 1,5, 2 Jahren
höchstens nicht mehr der Fall,
dass du unpackaged Apps bauen kannst
für,
mit WinUI 3.
Glaube ich.
Ich habe mir das schon eine ganze Weile
nicht mehr angeguckt.
Ja, Microsoft benutzt
den eigenen Scheiß nicht.
Ja, was ich sagen wollte ist,
guckt euch mal React an.
React ist nicht
nur so erfolgreich geworden,
weil sie relativ früh am Start waren
und ein Problem gut und
halbwegs gut benutzbar gelöst haben.
Nein,
React ist auch mit bekannt geworden,
weil das einen riesen Anwendungsfall hatte,
wo die Leute gesehen haben,
ey, wenn das bei Facebook funktioniert,
dann wird das auch im großen Stil funktionieren.
Also sprich,
es ist immer sinnvoll,
wenn du halt
nicht nur die Technologie hast,
sondern auch gleichzeitig
so ein Aushängeschild dafür hast,
dass du sagen kannst,
ey, guck mal,
das geht.
Ich bin auch überzeugt davon,
dass sich Git als Versionsverwaltungssystem
unter anderem
nicht nur, weil es gut ist,
so schnell durchgesetzt hat,
sondern weil man gesehen hat,
ey, wenn das für den Linux-Kernel funktioniert,
dann wird das für alles andere
auch irgendwie funktionieren.
Und Git hat ganz viel Zeug drin,
was eben
man kann nicht sagen spezifisch
für die Linux-Kernel-Entwicklung ist,
aber schon sehr daran angelehnt ist.
Zum Beispiel
hast du in Git
die Möglichkeit,
Patches auszutauschen
und die dann per E-Mail zu schicken und sowas.
Das macht keiner,
der noch halbwegs bei Verstand ist,
außer dass es der Linux-Kernel
zum damaligen Zeitpunkt gemacht hat.
Die waren ja damals
nicht auf GitHub oder sowas.
Die hatten eine Mailing-Liste,
haben in ihrem Git Sachen committed
und haben dann ein Patch generiert
und den Patch haben sie
eine E-Mail dran gehängt
und dann in die Mailing-Liste gepostet.
Und der Patch wurde dann
aus der Mailing-Liste runtergeladen
und dann applied
Das sind so ganz komische Dinge,
die niemand in Git eigentlich verwendet,
die aber da drin sind,
weil das halt damals
für die Kernel-Entwicklung
sinnvoll gewesen ist.
Aber man hat gesehen,
ey guck mal,
du kannst damit alles verwalten,
weil wenn du den Linux-Kernel
damit verwalten kannst,
das gut funktioniert,
dann kannst du schlägergreifend
alles andere damit auch verwalten.
Also sprich, ich denke,
es ist wirklich sinnvoll,
wenn nicht nur neue Technologie
rausgehauen wird,
sondern gleichermaßen
die gebackt ist dadurch
oder halt belegt wird dadurch,
dass die was taugen,
indem es eben gescheite Anwendungen gibt.
Und deswegen denke ich,
hat sich Git relativ schnell durchgesetzt,
weil du gesehen hast,
es geht mit dem Linux-Kernel,
da geht es für alles.
Hat sich React so gut durchgesetzt,
weil es eben ein sehr spezifisches Problem
gut gelöst hat
und quasi so komplette Ära
von neuen Anwendungen mit eingeläutet hat.
Und dass man gesehen hat,
ey guck mal,
das ist von Facebook,
die benutzen das auch,
das funktioniert ja.
Ja und das ist das,
was Microsoft lange nicht richtig
bei ihren Technologien hinbekommen hat.
Dass man sieht,
ah guck mal, die benutzen den Kram ja selbst.
Ich meine,
was gibt es für ein besseres Aushängeschild
für ein Windows-UI-Framework,
wenn du sagen kannst,
Office benutzt das,
Visual Studio benutzt das.
Dann weißt du,
ey, das sind große,
komplexe Anwendungen,
die Millionen Leute benutzen
und das scheint was zu taugen,
wenn du das damit machen kannst.
Da muss ich mir keine Gedanken machen,
das zu benutzen.
Das wird prinzipiell funktionieren.
Und das hat halt Microsoft
lange nicht hingekriegt.
Die haben halt den eigenen Scheiß
nicht benutzt.
Und dementsprechend waren die Leute
nicht nur skeptisch,
weil die Technologie scheiße war,
wie bei UWP,
sondern sie waren auch bestätigt dadurch,
dass Microsoft den eigenen Krempel
nicht benutzt hat.
Und dementsprechend haben die Leute gesagt,
ja gut, also guck mal,
ich finde das scheiße,
Microsoft selbst scheint es ja auch scheiße zu finden,
deswegen benutzen sie es nicht
und es hat keine richtige Adoption erfahren.
Und viel zu lange.
Ja, das ist WinUI,
was du hier verlinkt hast, genau.
Mittlerweile ist es tatsächlich sehr sinnig,
ja, gebe ich dir recht.
Gerade wenn du dir Anwendungen
wie Discord anguckst,
wenn ihr euch mal überlegt,
Okay.
Ähm, was wollte ich jetzt gerade sagen?
Ich hab gerade auf den zweiten Monitor geguckt.
Genau.
Ja, mittlerweile ist es tatsächlich auch erforderlich,
denn wenn man sich mal Anwendungen
wie Discord anguckt,
Discord ist ja im Prinzip eine Webanwendung
in ein eigenes Fenster gepackt
und als Desktopanwendung getarnt.
Es sieht jetzt mal auf den ersten Blick
gar nicht so unterschiedlich aus
zur Discord-Web-Version.
Also Discord-Web und Discord-Desktop
ist mehr oder weniger die gleiche Anwendung,
allerdings nicht komplett.
Die Desktop-Anwendung von Discord
hat ein paar zusätzliche Tricks, ja.
Zum Beispiel haben die eigene Node-Module,
die sie laden,
native Node-Module,
die sie laden dafür und so was.
Die haben ja schon ein bisschen getrickst.
Aber der riesen Vorteil,
den man hat, wenn man einen Browser
als Grundlage für seine Anwendung nimmt,
gerade wenn man sowas wie Discord machen will,
ist, du kannst dich auf alles verlassen,
was in dem Browser drin ist,
dass es auf allen Plattformen funktioniert.
Und gerade für Discord ist das wichtig.
Weil überlegt mal, Discord ist eine,
nennen wir es mal, Audio-Video-Multimedia-Anwendung.
Du kannst chatten,
das ist noch nicht so das Ding,
du kannst voice callen,
du kannst Desktop sharen,
du kannst wahrscheinlich sogar Video callen mittlerweile,
bestimmt macht bloß keiner.
Also du kannst Videos übertragen,
Audio übertragen.
So, und jetzt überlegt euch mal,
Discord läuft auf Android,
wahrscheinlich gab es,
gab es mal eine Windows-Phone-Anwendung von Discord?
Keine Sorge, benutzt eh keiner mehr.
Es gibt Android, es gibt iOS-Discord.
Es gibt Windows, Linux, Mac-Discord.
Wahrscheinlich funktioniert der Mist
sogar auf Android-TV und sonstigen Geschichten.
Und jetzt überlegt euch mal,
die hätten für alle diese Plattformen
ihre Multimedia-Sachen selbst programmieren müssen.
Oder es sei es nur,
sich irgendein Zwischen-Framework suchen,
was das kann und das dann ansprechen.
Die wären heute noch nicht bei der ersten Version
zum Releasen von ihrer Anwendung.
Die müssten allen Ernstes,
die müssten Audio-Video unter Windows, Mac, Linux keckeln.
Ja?
Und Linux ist ja das Schrecklichste,
was ich mir vorstellen könnte,
Audio-Video-Sachen zu entwickeln.
Da musst du dich mit auseinandersetzen,
so nach dem Motto, hat der Wayland, hat der X,
hat der Puls-Audio, hat der was?
Also ganz ehrlich, das würde ich im Leben nicht machen.
Da ist es wahrscheinlich unter Windows noch deutlich einfacher.
Dann musst du das gucken,
okay, wie mache ich das unter Android,
wie mache ich das unter iOS?
Die würden durchdrehen.
Die hätten noch nicht mal die erste Version
von ihrer App raus.
Hätten sie diesen ganzen Kram selbst machen müssen
und hätten sich nicht auf das verlassen können,
was der Browser schon bietet.
Also aus dem Gesichtspunkt,
für so Sachen wie Discord ist es extrem sinnvoll,
einen Browser als Grundlage zu nehmen.
Pipewire, was du nicht alles hast, ja.
Das wäre ein kompletter Abfuck gewesen.
Ich glaube,
Alsa ist noch eine Stufe unten drunter, Fips.
Ich glaube, das ist irgendwas...
Linux, sowas ist da echt undurchsichtig.
Also es macht schon Sinn, ja.
Ja, das stimmt,
WinUI hat kein Linux-Support,
was aber auch der Name schon irgendwie
so erahnen lässt, ja.
Welche VM benutzt du noch mal?
Virtualisierungstechnologie, meinst du?
Das ist...
Ich benutze VMware Workstation.
Ich habe das mal gekauft,
bei so einem billigen Key-Seller
für irgendwie 7,20€ oder so den Key.
Auf VMware Workstation Professional.
Das machen wir jetzt nicht.
Es gibt ein...
ein Projekt auf GitHub,
das nennt sich so, glaube ich.
Nee.
Ähm.
Ich habe vergessen, wie es heißt.
Nee, ähm.
Wie heißt denn das?
Flat...
Wie heißt denn das?
Flat...
B-Flat.
B-Flat, genau.
Die versuchen quasi,
einen alternativen C-Sharp-Compiler
irgendwie zu...
bauen.
Dass du Native-Anwendungen bauen kannst
mit C-Sharp, die besonders klein sind.
Und die sind Go-Inspired.
Habe ich noch nie ausprobiert.
Ich weiß nicht, was da und wie gut
das alles funktioniert.
Moin, kennst du Gither und hast du eine Meinung dazu?
Ja, ich habe das selbst bei mir laufen
in den letzten Jahren schon lokal.
Also für einfache Sachen,
wenn du einfach bei dir ein lokales...
Gut, ich meine, für ein lokales Git-Repro
brauchst du nicht unbedingt ein Webfrontend,
aber ist doch ganz praktisch.
Wenn du einfach lokale Repros brauchst,
um schnell mal was zu pushen,
dann ist das eine super Geschichte.
Ich benutze das zum Beispiel so,
wenn ich was für den Stream vorbereite,
dann mache ich das ja oftmals nicht sonderlich hübsch
und ich habe auch nie vor, das irgendwie zu veröffentlichen.
Meinetwegen zum Beispiel
für den Stream gestern.
Ich habe mir ein paar kleine Sachen im Vorfeld schon angeguckt,
da ich nicht komplett planlos bin.
Habe das wild zusammengewurscht und habe es dann gepusht
in mein lokales Repro hier,
was auch auf Gither-Basis läuft
und habe das dann nebenbei
auf dem zweiten Bildschirm offen,
da ich so ein paar Sachen mir abgucken kann.
Ja, benutze ich lang.
Mittlerweile kannst du damit ja auch
ein bisschen advancere Sachen machen.
Ich habe gelesen, die haben seit der letzten
oder seit den letzten Versionen
haben die sogar die Möglichkeit
Github Runner, also zumindest
die Github
die Github Actions
Syntax
Runner, die
die Github Actions Syntax unterstützen
auch
einzubinden.
Was ich ganz cool finde, weil so ein bisschen
CI hat dem Ganzen tatsächlich noch
gefehlt. Ich denke, das ist jetzt
ein ziemlich gutes Komplettpaket,
was sich auch easy hosten lässt.
Wie wäre es mal ein Softwareprojekt
für ein Stream, in dem du nach deinen Ansprüchen
Das kann ich nicht, weil ich bin
kein hauptberuflicher Softwareentwickler.
Ich habe da keinen
Anspruch in dem Sinn. Also ich kann euch
achso, ach das hier, ja gut.
Das stimmt tatsächlich,
das könnte man machen.
Ich habe mich ja jahrelang um unsere Softwareverwaltung
und Pullrequests und
Serverautomatisierung
und unsere Softwarerepos gekümmert.
Im alten Job.
Und habe auch Leute genervt, wenn man
beispielsweise ihre Changelog-Sachen nicht verstanden hat
und sowas.
Die Sache ist bloß die,
ihr kennt mich,
nur weil ich das haben möchte,
heißt das noch lange nicht,
dass ich das selbst gerne mache.
Ich meine, ich habe es natürlich, wenn ich denn,
okay, ich muss sagen, ich war ja da teilweise
ein bisschen
Drecksack beim alten Job,
ja, also
es durfte ja außer mir und
meinem Kollege durfte ja keiner beispielsweise
direkt pushen nach Master.
Und ich habe zu allen immer gesagt,
also nicht zu allen,
wenn es wirklich kleine Sachen waren,
wie irgendwelche Schreibfehler oder sowas,
da habe ich auch manchmal gesagt, ey, weißt du was,
komm mal kurz rüber, sag mir, wie es richtig ist,
wir committen das und pushen das direkt,
du brauchst keinen extra Branchen, Pullrequests
und man kann es auf die Schnelle machen.
So nach dem Motto, wenn einer,
keine Ahnung, wenn einer
Amster geschrieben hat, anstatt Master
und sowas, dann
ist das okay.
Und dann haben wir das gemacht. Aber normalerweise
habe ich halt immer gesagt, hier, guck mal,
Branchen nicht richtig benannt,
weiß ich nicht, von wem das kommt,
Commit-Message ist nicht richtig,
wenn ich manchmal mich vertippt habe,
oder wenn ich vielleicht zu früh
was committet habe und aus Versehen,
ich habe immer direkt den Master,
ich habe die Dinger immer
direkt den Master gepusht.
Aber das liegt ja auch daran,
weil wir haben es ja hier gelernt im Stream, Leute,
wir programmieren ja ohne Fehler, das heißt,
man kann das auch direkt den Master pushen.
Also insofern war das
eigentlich vollkommen gerechtfertigt.
Hast du mitbekommen,
dass Reddit seine Preise, ja, das habe ich mitbekommen,
schon lange mitbekommen und mich damals schon gefragt,
also Twitter hat das ja auch gemacht,
aber
Reddit habe ich auch mitbekommen,
und mich damals schon gefragt, wie das Apps wie Apollo
und so machen wollen und jetzt kam halt raus,
die wird es dann einfach nicht mehr geben.
Was ich scheiße finde, richtig scheiße finde,
das kann man auch nicht anders nennen,
finde ich mega beschissen finde, weil
die offizielle Reddit-App,
die ist besser geworden die letzten Jahre,
aber ich finde die Handhabung immer noch
Apollo ist auch nicht der Weisheitsletzter Schluss
irgendwie, ja,
also die
besser integriert ist die offizielle Reddit-App
aber allein schon,
dass es keinen gescheiten Vor- und Zurück-Button gibt
und sowas, das ist so ganz weird,
die offizielle Reddit-App, die ist besser als noch
vor ein paar Jahren, vor ein paar Jahren war die komplett
unusable
Keine Ahnung, was die sich dabei gedacht haben.
Ich meine, ich benutze auch mittlerweile
tatsächlich hauptsächlich die offizielle Reddit-App
und reg mich jedes Mal auf,
wenn irgendwas mal wieder nicht so ist, wie ich mir das gerne
gewünscht hätte, aber
ich kann jeden verstehen, der
Apollo verwendet
und wenn du jetzt noch nicht mal mehr auf die
API-Gescheit zugreifen kannst, dann ist halt
RIP alle Third-Party-Apps
Ja, das
finde ich kacke
Es wollen ja ab morgen
einige Subreddits streiken,
habe ich gelesen auf Reddit, so nach dem Motto,
das Subreddit wird geschlossen für irgendwie
paar Tage, Wochen, was auch immer
Ich denke
nicht, dass das irgendwie Erfolg hat
Diese Versuche
gab es ja schon an anderen Stellen
Beispielsweise
gab es ja, es gab ja auch
Ich glaube
die letzte Variante
Was war das Letzte, wo die Leute
so Blackout-Sachen probiert haben?
War das nicht zu Hogwarts Legacy?
So nach dem Motto, wir blockieren,
wir streamen einen Tag nicht oder sowas
Keine Ahnung, das hat
meistens nichts gebracht
Weil man muss ehrlich sagen
der Aufschrei ist
groß und der Aufschrei ist
berechtigt, aber
wahrscheinlich tangiert es 95%
der Reddit-User nicht
und die werden sich einfach
nur wundern, also im Endeffekt schaden sich die
Subreddits wahrscheinlich sogar selbst
weil die Leute
eventuell woanders hingehen und
dann da hängen bleiben
Das ist in Reddit nicht so schlimm
Du kannst ja mehrere Sachen abonnieren
und dir angucken
Also
Ja, da gibt es bald ein neues
Also ich glaube nicht
dass das
irgendeinen Effekt
erzielt, ich fände es gut
weil ich es bescheuert finde, dass
Party-Apps ausgesperrt werden
und die Reddit-App halt in vielen Belangen immer noch
sackt
Aber ich glaube nicht
dass es irgendwas ändern wird
Naja
Gut
Chat-Gil
So, habe ich eigentlich meine
Trending-Repos schon durchgeguckt? Nehmen wir mal ganz schnell
AI AI AI AI AI AI AI AI AI AI
Das ist das
schlimmste AI-Programm Leute, kennt das jemand?
Nein
Nein, das hat mit
der AI überhaupt nichts zu tun
Das ist eher was für Weep-Musik
Was ist
GotPotato?
Hat keine Beschreibung, hat das nicht letzte Woche schon gesehen?
Hat keine Beschreibung
Ah
Security-Kram
Ja Leute, Osu! ist kein
AI
Kein AI-Programm, das ist
irgendein Rhythmus-Game, wo die
meisten irgendwelche Anime-Musik drinnen spielen
Das ist quasi
Aim-Training
für Anime-Musik
Fans
Osu!
So
Was
empfiehlt uns
Youtube denn heute? Ich habe schon ein paar Sachen
aufgemacht, falls uns Youtube nichts Gescheites empfiehlt
Äh, nope
Debian 12 Tutorial
für Einsteiger? Ne
Das gucken wir jetzt nicht
Keine 22 Minuten, außer dem Chat
Wir sind ja hier keine Einsteiger, wir sind ja alle
Way too high IQ
für Einsteiger
Ne, wir gucken
Was soll an einem Debian-Einsteiger
mäßig anders sein, als jedem
x-beliebigen anderen Linux? Okay, ja
Die Installation und sowas, aber danach
macht es auch keinen großen Unterschied
Ach
Mit vierfacher Beschleunigung angucken
Kann Youtube überhaupt vierfach beschleunigt?
Die Debian
12, Isus, Debian 12 kam doch
gestern raus, dachte ich
Okay
Ich kriege wieder irgendwelche Grills
empfohlen
Ja
Und wohlgemerkt, nicht nur Microsoft
Achso, ne, ne, doch, in dem Fall
wahrscheinlich nur Microsoft
Hier geht es wahrscheinlich um die Geschichte, dass Microsoft
Zip-Passwörter
extrahiert
Also Microsoft ist da wirklich clever
Also wenn ihr
Wenn ihr ein Zip verschickt
Ein verschlüsseltes Zip über Microsoft Services
Dann machen die folgendes
Die extrahieren aus den
Chatnachrichten und aus den
E-Mails das Passwort, falls es da drin steht
Und
Da bin ich mir jetzt aber nicht sicher, ob das stimmt
Ich glaube, die probieren sogar
eine Liste aus Default-Kennwörtern
durch, um das zu entschlüsseln
Und das natürlich alles
unter der Flagge
von Sicherheit
Weil Virenscanner und
Tja, was wird denn da sonst
noch immer gerne als Beispiel genannt
Ja gut, der Klassiker
schleicht hin, wenn es um Security-Themen geht
ist natürlich
Kinderpornos finden und
Terroristen finden und
Morde aufklären und sowas in der Richtung
Das wird ja immer in den Ring geworfen
Jedes Mal, ist euch das eigentlich mal aufgefallen?
Jedes Mal, wenn es um irgendwelche
mehr oder wenig
stark ausgeprägten Einschneidungen
in der Privatsphäre geht, kommt als erstes
Terroristen
Kinderpornos, Morde
Das kannst du theoretisch, sobald
so ein Thema aufkommt, kannst du eigentlich
schon so eine Stoppuhr stellen oder irgendwie
so einen Countdown machen, wann der erste
mit einem dieser drei Sachen um die Ecken
kommt, ja
...
So, nix spannendes dabei
...
...
...
Also die Seite ist an sich schon sehr
sus, ja
...
Da weißt du halt nie, ob der Key
am Ende funktioniert oder nicht
...
Ich mein, ich hab mein Key damals auch billig bei so einer
Keyshop-Seite gekauft
Chat, wir
posten aber, ich sag euch gleich
Wir posten hier im Chat keine Links
zu irgendwelchen Serial-Keys
...
Weil das ist wahrscheinlich
nicht erlaubt
Aber ich bin mir
Ich bin zuversichtlich
...
dass ihr in der Lage seid
euch selbst zu
helfen und im Zweifelsfall die Software
einfach auch kauft, wenn euch nix einfällt
oder wenn ihr sie wirklich viel
benutzt
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
einfach nicht lassen ich weiß ich weiß ich weiß wo schon grund warum er irgendwie
schon in den siebten discord account braucht weil er überall immer gebannt ist
das war jetzt aber echt mit ansage das hat man sich sparen können
so in fünf minuten ist er wieder am start
die zukunft ist hier ok also lass mal kurz schauen was haben wir denn hier schönes warum
du in deckung doch noch doch was
warum du in deckung doch noch down ist ja das wollte ich gucken weil ich vermute dass
hier ein bisschen was zu kleinzeit hit detection und sowas versucht wird für
noobs zu verpacken da will ich ein bisschen meckern falls die falls die
erklärung nicht korrekt sind so was haben wir als nächstes noch advanced
windows feature you should know
ok das sind immer gbade videos das sind immer gbade videos aber kommt neun
minuten das können wir uns schnell gehen
was auch richtig richtig advance ist in windows also falls ihr euch mal gefragt
habt wie man custom icons vergeben kann für ordner und sowas das geht seit
windows 95 oder wahrscheinlich seit windows 3 11 oder so und das problem ist
dass sich der dialog seit windows 95 nicht geändert hat guckt euch das mal an
das wissen das wissen wenige und das ist super advance pass mal auf krasse krasse
windows hacks zeige ich euch jetzt ja guck mal wir gehen jetzt hier drauf
rechtsklick natürlich selbstverständlich schau more options
properties customize change icon und jetzt kommt ihr halt straight aus windows
95 der dialog und die icons und die wurden die wurden auch ohne scheiß die
wurden 20 jahre auch nicht oder ja länger die wurden auch 30 jahre nicht
mehr updatet hier die eigens vielleicht ein paar aber das sind immer noch da
sind immer noch die richtigen oldschool eigens drin
wobei sie wo ich mich ernsthaft frage warum ist das eigentlich so eine
lächerlich kleine und zum größten teil absolut müllige sammlung aus
eikens ich meine warum um alles in der welt sollte ich meine eiken so machen
ja hier pretty pretty advances windows moment geht das eigentlich auch hier
mit properties ja nee pretty advances feature würde ich sagen
und es gibt hier den ordner es gibt hier den ordner es gibt hier den ordner und
hier den ordner symbol da blickt doch keiner mal durch noch mehr ordner
noch ein ordner noch ein ordner noch ein ordner noch zwei ordner
ja man weiß es nicht ja windows logik so okay jetzt lassen wir uns das mal
alles gucken wir uns das mal an die advancen features
in case you do come across a problem that you have no idea how to deal with
then one of these might ring a bell and might lead you to a possible solution or
at least a place to start and this is not going to be a detail
wie wir fahren sie ist more of just a quick overview of each and if you have
been channel for a while you may have heard me mention these before but it's
always good to have a refresher so let's just jump in first up we have the disk
management menu which actually is important to know about because if you
ever go to the house windows xp kommt auch straight aus windows xp und buy
a new hard drive or new ssd that's completely blank you may plug it in and
realize wait a minute it's not showing up anywhere and that's because you
probably need to initialize it using the disk management so it's good to know
that that's a thing it's to do that it's actually pretty simple you basically
just right click okay next quite a bit more this part trade off of
loiter ich habe frei verder wir müssen das video gar nicht gucken der hat seine
vorschau dinge ordentlich benannt okay das part also wer ernsthaft ist part
benutzt hat die kontrolle über sein leben verloren bevor ich disk part
benutzte seriously da würde ich eher linux booten g partet oder irgendwas
benutzt bevor ich dieses ding da benutze fdisk bevor ich das da benutze
House Files Ja House Files halt Task Scheduler Keckle advantage Feature
Servicemen What kind of thing.
Ach nee der meint diese Service Management Konsole oder sowas jetzt.
Servicemen
Ja, das ist jetzt auch nix Neues. Sieht auch aus wie aus Windows XP, weil es direkt aus Windows XP ist, aber das ist, also das weiß ja sogar ich und ich bin kein Windows Admin und ich werde auch nie Windows Admin, ich will auch nie Windows Admin werden.
Bei mir auf der Arbeit haben sie letztens schon erzählt, wir sollen uns jetzt um Microsoft SQL Sachen unter Windows vielleicht kümmern.
Naja, kümmert euch mal, aber ich kümmere mich da nicht drum.
Okay, ich meine natürlich würde ich einem helfen bei, wenn irgendwas wäre und ich wüsste dazu was, aber ich weiß dazu nix und ehrlich gesagt, das ist auch ein Thema, wo ich mich ungern mit beschäftigen will.
Okay, Event Viewer, ja, eines der hässlichsten Anwendungen ever, Leute.
Den kann ich jetzt nicht aufmachen, da leake ich bestimmt irgendwas.
Event Viewer, das ist also sowohl vom Layout her, als auch von der Optik, eines der hässlichsten Anwendungen, die ich je gesehen habe.
Memory Diagnostics Tool, ja, das brauche ich nicht, da würde ich einfach meinen, ach guck mal, die haben quasi MemTest auch jetzt eingebaut, würde ich einfach MemTest booten und gut ist.
Okay, Resource Monitor, okay, wenn man es braucht.
Reliability Monitor, who the fuck braucht denn das?
Okay, nice, Video durch, GG Eats, nice, siehste, so geht das, einfach in der Schnelle durchgeguckt.
Warum du, okay, dann gucken wir, was haben wir denn sonst noch zu bieten.
Blizzard fällt, nee, Overwatch 2 fällt auseinander.
Oh ja, das stimmt.
Also generell fällt, also Overwatch 2 war schon nicht unerfolgreich.
Konnte einem Riesenhype nicht anknüpfen und ich weiß nicht, was Blizzard da wieder gemacht hat.
Ich mein, Papa Jeff ist weg.
PvE wurde eingestampft.
Was haben wir hier zu bieten?
Highschool student makes React a million times faster.
Okay, wir können uns eine Runde of Fireship angucken, kam erst vor 11 Minuten, geht nur 2 Minuten 46.
You're watching the Code Report.
Willst du Diablo 4 anfassen? Ich bin immer noch unschlüssig.
Das stimmt.
Das stimmt wohl, das habe ich auch gestern gesagt, als wir ein bisschen das Feld gebastelt haben.
React ist nach wie vor das mit Abstand verbreitetste Framework überhaupt.
Also für so, für Frontend, kleinseitige Anwendungen und auch für Fullstack Sachen mit Next.js und sowas.
Das ist sehr verbreitet.
Ja, das Welt hat gar keine.
Ja, keine virtual DOM mehr.
Okay, nur mal so, dass ich das jetzt verstehe.
Hat der jetzt React geforgt, um es schneller zu machen?
Oder ist das ein Plugin für React?
Okay, nur mal so, da ich das jetzt verstehe. Hat der jetzt React geforkt, um es schneller zu machen, oder ist das ein Plugin für React?
Das ist ein Fork, oder? So was.
Okay, also, um es schneller zu machen, oder? So was.
Hat der jetzt React geforkt, oder? So, das ist ein Fork, oder? So was.
Hat der jetzt React geforkt, oder? So was.
Okay, also, um es schneller zu machen, oder? So etwas.
Updates faster in den update everything all at once it's kind of like finalizing all your changes on a
Ich würde mal interessieren wie er das jetzt gemacht hat blueprint before you go tearing out walls in a building
But all this happens at runtime and there's a lot of unnecessary work trying to figure out what changed million js takes a more surgical
Approach by introducing a compiler that can perform static analysis to figure out exactly where the dynamic data is in advance
It creates an edit. Wie funktioniert das denn app to represent the state of the okay?
Das ist das ist richtig high IQ shit the application which can then determine what has changed with far less computation required
This approach is inspired by other framework. Okay. Okay. Ich rate jetzt einfach mal wie das eventuell funktionieren könnte
Der guckt sich an wie die elemente von der seite aufgebaut sind dann analysiert er irgendwie
Was interaktiv an der seite ist und wie sich die elemente ändern könnten
Und dafür
Was weiß ich
Und für diese also für die änderungen die theoretisch möglich sind recht berechnet er schon mal im vorfeld
quasi die
Die defs oder so was in der richtung
Keine ahnung ob ich das jetzt richtig kapiert aber sowas sowas in der richtung wahrscheinlich
Likes felt and solid which also rely on a compiler to achieve these surgical dom updates and million was also inspired by the prior
Work of a library called blocked on what's also cool about million is that it's only four kilobytes and extremely easy to use
All you do is take an existing react component and wrap it inside this block function to create a higher order component
Which will block out the virtual dom and let million magically take over
Basically after the component is mounted it makes a reference to the underlying dom element then does all the subsequent
Rendering and change detection on its own in addition
It has a built-in for component which is used to render a list of blocks pretty simple
But before you get too excited
Ich will es nicht sagen dass ich es kapiert hätte the creator of this project admits that it's not a silver bullet when using blocks
You need to follow a specific set of rules
And if you break those rules, it'll revert back to reacts virtual dom and you'll lose all your massive gains overall million
Js looks like an awesome project
But most importantly it gives me hope that gen z is not actually tech illiterate and might actually one day be able to fix react
This has been the code report. Thanks for watching and I will see you in the next one
You
Yes, we know further front-end framework
Actually, actually, you can make a video like that every day
That channel I'm not that smart either react is now much faster
Blazingly fast and that without being written in rust
Ist auch nicht alle tage weil eigentlich ist ja place jetzt das haben ja die rast leute tatsächlich für sich schon gepachtet
nur rast ist blazingly fast
Alles andere mag auch blazingly fast sein muss es aber irgendwie anders nennen
Und es hat jemand ernsthaft ein acht stunden video gemacht um die ganzen half-life 1 erweiterung zu synchronisieren
Geil die leute haben teilweise echt zu viel zeit
Geil die leute haben teilweise echt zu viel zeit
Why we should why we should stop using javascript
Jojo die sache ist bloß die
Es gibt halt nichts anderes
Was was willst du was ich meine es ist ja schön und gut wenn man sagt
Man soll kein javascript mehr verwenden aber es gibt halt keine
Keine alternative zu javascript also was willst du machen
Im übrigen ist das nicht ist das nicht der jason erfinder
Der der gesagt hat dass man jason eigentlich
Jason aussprechen soll
Ich glaube schon dass der das ist
Du hast nochmal zwei sekunden
Okay es geht nur 2 minuten lass es mal kurstrassen neu. Kommen warum warum wir keinen javascript meh Benutzen sollen
Das hat sich ja im Endeffekt sogar bewahrheitet.
Ich meine, man musste viel an Javascript drehen, das Javascript, der dort angekommen ist, wo
es heute steht.
Aber die haben bei Javascript die letzten Jahre tatsächlich genau das Gegenteil geschafft
von C++.
C++ hat die Sprache immer komplizierter und schlechter gemacht.
Schlechter kann man nicht sagen, aber immer unlogischer, immer komplizierter und im Gesamtpaket
dadurch schlechter.
Und Javascript wurde die letzten Jahre über immer besser und sinnvoll erweitert.
Und was soll man stattdessen machen?
Alles in WebAssembly.
Das Problem an WebAssembly ist, du kannst halt keine Webseiten mit manipulieren so richtig.
Es hat so viele kongenitive Fehler.
Es ist wirklich eine riechende Sprache.
Es gibt einfach viel Scheiße.
Und es ist vielleicht immer noch für sein Bereich der Anwendung.
Es ist die beste Sprache der Welt für solche Dinge.
Aber das ist nicht genug.
Wir sollten in die nächste Generation von Sprachen wechseln.
Ah ok, er sagt, Javascript sagt, aber wir sollten Javascript durch ein neueres Javascript
ersetzen, was die Probleme nicht hat.
Ich meine, ist es nicht besser vom Ansatz her tatsächlich weiterhin Javascript zu verbessern?
Ok, man könnte jetzt natürlich sagen, du kannst viele Sachen in Javascript nicht verbessern,
weil sie eben schon so lange da sind, dass die, es gibt halt so viele Seiten, die sich
darauf verlassen, dass die Dinger sich merkwürdig verhalten, weil die schon immer merkwürdig
waren in Javascript.
Aber ich meine, anstatt eine komplett neue Sprache zu bauen, wie wäre es denn beispielsweise
mit irgendeinem Kompatibilitätsflag oder sowas.
Ich meine, eine neue Sprache ist ja im Prinzip auch nichts anderes.
Nur mit dem Unterschied, dass da wieder eine neue Sprache lernen muss und das ganze Javascript
Library Ökosystem weggeschmissen wird.
Wäre nicht das gleiche wie zwei Sprachen?
Ja, nicht ganz.
Neue Sprache hat halt alles neu.
Hast eine neue Sprache, hast einen neuen Compiler, hast ein neues Format, hast neue Libraries,
die du brauchst.
Wenn du quasi eher so einen Clean Javascript bauen würdest, dann würden zumindest die
großen Libraries nach und nach darauf umsteigen.
Man müsste es halt wirklich gut planen.
Man müsste das in fließenden Übergang machen, man müsste dann auch erlauben, das feilweise
einzuschalten und sowas.
Ähnlich wie Python 2 und 3.
Ja, das hat ja auch nicht wirklich gut funktioniert.
Ne, ich weiß nicht.
Vielleicht hat er auch einfach recht und man sollte wirklich was komplett Neues bauen.
Ich meine, es ist immerhin der Jason-Erfinder.
Und auch jemand, der bei Javascript mitbeteiligt war.
Ich weiß nicht, ob es der Java...
Ne, hier steht doch Jason-Erfinder sogar dabei.
Ja.
Ja.
Kobold.
Wir sind gerade mit diesem Scheiß verbunden und es gibt immer neue Sachen.
Und ich gehe mal ganz stark davon aus, dass du...
Ich meine, du kannst ja nicht einfach das wegschmeißen, was da ist.
Willst du jetzt einfach Linux wegschmeißen und neu entwickeln?
Weil irgendjemand gesagt, der sich so denkt, okay, also C ist eigentlich...
Sind wir so stuck mit C und wir nehmen jetzt super krasse neue Sprache und machen Linux
neu in der.
Das kannst du vergessen.
Ich meine, das ist eine Arbeit von Jahrzehnten.
Das wird es so ohne weiteres nicht geben.
Ich meine, das unter Linux sind sie schon ein bisschen...
Mache ich in zwei Streams.
Easy.
Ja.
Ja, aber experimentell juckt doch im Endeffekt keinem.
Es gibt sehr viele experimentelle Sachen.
Tempel-OS zum Beispiel.
Aber das benutzt ja dann keiner.
Also die Idee, man müsste jetzt 20, 30 Jahre entwickeln.
Linux gibt es ja 1993 oder irgendwie sowas.
First Linux Version.
30 Jahre gibt es den Kram jetzt schon.
Das musst du ja nicht wegschmeißen.
Ich bin der Ansicht, dass ein kompletter Rewrite oftmals nicht der richtige Ansatz ist.
Man sollte allerdings nicht...
Okay, also ein kompletter Rewrite finde ich selten einen guten Ansatz.
Was ich aber manchmal nicht verkehrt finde, ist, dass man sagt,
hey, alte Dinge, die eh kaum jemand benutzt, die kann man auch mal rausschmeißen.
Das könnte C++ beispielsweise auch mal ruhig machen.
Ja, irgendwann kommt GNU Hurt raus und dann wird alles besser.
Haben wir ja schon halbwegs.
Ich meine, wir haben sowas wie WebAssembly jetzt am Start,
was keine eigene Sprache in dem Sinn ist.
Ich weiß, man kann Low-Level WebAssembly machen,
aber es gibt ja auch schon Sachen, die mehr oder weniger 1 zu 1
sich zu WebAssembly translaten und sowas.
Wir haben ja mit WebAssembly was in der Richtung,
nur, dass WebAssembly nicht dafür gedacht ist, Webseiten zu bauen,
obwohl es im Browser läuft.
Das ist halt der Unterschied zu JavaScript.
JavaScript ist dafür gedacht, Webseiten zu bauen
beziehungsweise Webseiten interaktiv zu machen.
WebAssembly ist dafür gedacht, eher im Hintergrund zu agieren
und wenn es dann fertig ist, die Sachen nach JavaScript rüber zu schicken.
Also zum Beispiel kannst du irgendeine C++-Lei,
du kannst FFmpeg nehmen und in WebAssembly kompilieren
und dann FFmpeg im Browser benutzen.
Aber sobald FFmpeg ein Frame gerendert hat,
muss es das übergeben nach JavaScript
und JavaScript schiebt das dann in irgendein Canvas-Element,
in ein HTML-Canvas-Element rein.
Also wir haben ja quasi schon eine neue Sprache im Browser
oder zumindest eine neue Runtime in der Runtime, wenn man es so will,
mit WebAssembly die letzten Jahre über.
Und das hat ja auch ziemlich Fahrt aufgenommen.
Also WebAssembly-Entwicklung und auch an Technologien, was es dazu gibt,
hat sich in den letzten Jahren über einiges getan.
Und wisst ihr, was der Witz ist?
Dass tatsächlich C++ für WebAssembly in der Tat eines der besten Sprachen ist.
Rust ist auch nice, aber C++, muss ich ehrlich sagen,
ist so eines der Punkte,
C++ und WebAssembly passen tatsächlich ganz gut zusammen.
Dass ich das doch mal sage, aber in dem Fall ist so.
Wir haben ja auch schon im Stream ein bisschen C++ WebAssembly gemacht mit FFmpeg
und neben den üblichen C++-Merkwürdigkeiten ging das erstaunlich gut
und es ging erstaunlich viel auf Anhieb.
Ich meine, wir haben einen Videoplayer gebaut in C++,
der in WebAssembly im Browser gelaufen ist
und Rames gerendert hat, an JavaScript übergeben hat
und JavaScript hat es dann gerendert.
Kannst du WebAssembly ein bisschen erklären?
WebAssembly ist eine extra Runtime im Browser,
also quasi eine Runtime in der Runtime,
die nicht dafür gedacht ist, dass du sie selbst benutzt,
also dass du quasi WebAssembly von Hand programmierst,
sondern dass du andere Programmiersprachen nimmst
und die kompilierst du dann in WebAssembly.
Also zum Beispiel, du hast ein C++-Programm.
Das kannst du kompilieren, entweder in Native-Code für ARM-Plattformen,
in Native-Code für x86-CPUs oder was weiß ich, für iOS oder sonst was.
Du nimmst dann C++-Source-Code,
kompilierst das für irgendeine Target-Plattform
und WebAssembly ist halt eines dieser Targets.
WebAssembly ist quasi so eine Art Runtime,
so eine Art JDK im Browser.
Nee, nicht wirklich. Das trifft es vielleicht nicht so genau.
JVM im Browser.
Das ist eine Runtime, die du als Compiler-Target benutzen kannst.
Du kannst dein C++-Programm kompilieren in WebAssembly
und da kommt dann irgendwelches Binary-Geschwurbel raus,
was die WebAssembly-Runtime im Browser versteht
und dass du es ausführen kannst.
Du kannst beispielsweise ein Hello-World-Programm in C++ programmieren
und dann nimmst du einen C++ zu WebAssembly-Compiler.
Da gibt es zum Beispiel das Ding.
Das ist ein C++ zu WebAssembly-Compiler
und dann nimmst du dein Hello-World-C++,
schmeißt es da rein und rauskommt Binary-Code,
was die WebAssembly-Runtime im Browser ausführen kann.
Man muss dazu sagen, WebAssembly ist sehr stark reglementiert,
was es darf und was es nicht darf.
Es läuft nach wie vor in der Sandbox.
Du kannst nicht einfach auf die Platte zugreifen oder sowas.
Ist ja klar, es ist immer noch ein Browser
und es ist immer noch fremder Code, der zum größten Teil ausgeführt wird.
Allerdings kann WebAssembly auch nicht mit der Webseite interagieren,
in dessen Kontext das vielleicht läuft,
sondern WebAssembly ist mehr so eine Art Background-Thread,
könnte man sagen.
So ein eigener Prozess, eine eigene Runtime, die im Browser läuft
und wenn die irgendwas an In- und Output braucht,
dann muss das über Javascript passieren.
Ne, das ist wieder was anderes.
Also zum Beispiel, wenn du einen FFmpeg-Videoplayer machen willst.
So, FFmpeg selbst ist eine C-Library.
Und im Angenommen, du willst einen Videoplayer machen,
ich nehme das als Beispiel absichtlich,
weil das haben wir im Streamer gemacht.
Also im Angenommen, du willst einen Videoplayer machen,
der Formate abspielen kann,
aber die der Browser standardmäßig nicht unterstützt.
Das heißt, du musst das Video runterladen,
du musst in FFmpeg die Videoframes einlesen,
du musst in FFmpeg die Videoframes decoden als RGB
und dann diesen RGB-Frame in die Webseite,
in irgendein Canvas-Element rendern
oder mit WebGL in irgendein 2D-Kontext rendern.
Genau das gleiche haben wir gemacht und das lief folgendermaßen.
Javascript ging her, hat angefangen das Video runterzuladen.
Alle Megabyte, also das Megabyte, was runtergeladen wurde in Javascript,
wurde über einen Funktionsaufruf zu WebAssembly
quasi rübergeschickt als Byte-Array in die WebAssembly-Runtime.
Also du musstest vorher erstmal das Ganze initialisieren
und sowas, dass dann FFmpeg läuft und alles mögliche.
Du hattest dann halt dort was gestartet,
was darauf wartet, dass es Input bekommt.
Dein FFmpeg, was du quasi kompiliert hast zu WebAssembly,
das hast du gestartet, das wartete dann auf Input,
das wurde dann von Javascript ausgefüttert mit Raw Video Bytes,
die Javascript im Hintergrund runtergeladen hat.
Dann ging das Ganze in FFmpeg rein.
FFmpeg hat die Sachen decoded,
beispielsweise MPEG-2 oder sowas, das kann ja ein Browser nicht abspielen.
MPEG-2, Sachen hast du runtergeladen über Javascript,
reingepackt in WebAssembly, FFmpeg hat das decoded
und sobald FFmpeg ein Frame decoded hatte,
gab es ein Callback zurück in Javascript.
Es wurden die Bytes, die decodeten Bytes als RGB, glaube ich,
oder wahrscheinlich als RGB-Frame, wurden übergeben an Javascript.
Javascript hat das Ganze genommen
und dann in einen WebGL-Kontext gerendert für einen Videoplayer.
Und so haben wir im Stream, ich kann euch das auch mal zeigen,
Archive, WebAssembly,
okay, man braucht komplette Wörter anscheinend,
ja, guck mal, ist 12 Monate her.
So, und da haben wir einen Videoplayer gebaut, guckt euch das mal an.
Ja, wir haben einen Videoplayer gebaut, ihr seht es hier irgendwo, guck,
das ist ein Videoplayer.
Ich habe ein Video runtergeladen in einem Dateiformat,
das der Browser normalerweise nicht abspielen kann.
Javascript lädt im Hintergrund das Video runter, guck,
das wird TS-Video, also MPEG-2-Video, das kann das Ganze nicht.
Und wir haben das, guck hier, das wird hier runtergeladen.
Javascript lädt das Video runter, schickt es an WebAssembly,
in WebAssembly ist hier C++, irgendwo, wo haben wir es, hier oben,
ja, hier, da, in der Teil, C++ zu WebAssembly,
decoded das Video und schickt es dann an einen WebGL-Kontext
zum Rendern für das Video.
Das war extremer 5-Fact-Shit.
Wir haben, glaube ich, 10 Stunden oder so daran rumgebaut insgesamt,
bis das funktioniert hat.
Aber ihr seht, wir haben hier einen Videoplayer,
der wirklich auch sehr performant lief,
dass es einfach im Browser ist.
Wir haben dort, glaube ich, 4K-Videos,
4K-60fps-Videos haben wir gerendert,
und die liefen mit ungefähr Hälfte der Geschwindigkeit.
Also man konnte damals auf dem alten Rechner bei mir,
also das ist auch sehr performant, muss man sagen,
man konnte damals bei mir auf dem alten Rechner
ein 1080p-Video 60fps ruckelfrei abspielen im Browser,
hat natürlich ordentlich CPU gefressen,
in einem Videoformat, das der Browser normalerweise nicht unterstützt.
Also WebAssembly, FFmpeg hat das Ganze decoded,
und dann wurde es per WebGL gerendert.
Das ist, wie gesagt, echt nicht ohne gewesen.
Man sieht auch, dass es teilweise ein paar kleine Slowdowns drin hat und sowas.
Das ist echt nicht ohne gewesen,
aber es hat gut funktioniert, verhältnismäßig gut.
Und dafür ist das einfach geil.
Wenn du dir überlegst,
wie willst du ordentliches Videodecoding machen im Browser?
Gar nicht.
Es gibt kein JavaScript-Gegenstück zu FFmpeg.
Hat noch keiner gebaut.
Wird wahrscheinlich auch keiner bauen.
Also was ist das naheliegendste?
Du nimmst FFmpeg selbst und übersetzt das in irgendein Format,
was dein Browser versteht.
Und das bietet sich WebAssembly halt an,
weil WebAssembly explizit dafür gedacht ist,
quasi als Compiler-Target zu fungieren.
Also du kannst deine C++-Programme, Rust-Programme übersetzen
und den WebAssembly dann im Browser laufen lassen.
Aber wie gesagt, es ist sehr stark reglementiert.
Du kannst damit nicht so ohne weiteres
direkt aus WebAssembly mit Webseiten interagieren.
Ja, und WebGL ist wieder was anderes.
WebGL ist zum Rendern für,
sagen wir mal, wenn du was GPU-beschleunigt rendern willst.
Das war richtig high-IQ-Shit.
Ich glaube, das war eines der kompliziertesten Sachen,
die wir je im Stream gemacht haben,
den WebAssembly-Videoplayer.
Wo sind wir jetzt eigentlich stehen geblieben?
Ach nee, das Video war fertig, gell?
Wir sind gar nicht stehen geblieben.
So, next.
Jetzt habe ich gleich instant 40 Leute verschreckt.
Wir hatten knapp über 200,
jetzt haben wir 187.
Okay, was haben wir denn sonst noch?
Wollen wir uns das mal angucken.
Ich mecker jetzt mal ein bisschen über das Video.
Ihr wisst, ich bin manchmal viel zu kleinlich,
was solche Technik-Videos angeht.
Und ich gehe davon aus, hier ist einiges vereinfacht,
weil das eben ein Video ist,
was sich an alle richtet
und nicht Leute, die ein bisschen Netzwerkahnung haben
oder ein bisschen Ahnung von
Netzwerkprotokollen und sowas.
Wir gucken uns das mal an.
Ich mecke aber sowas immer gerne.
Also mal gucken.
Das kann an vielen Sachen liegen.
In modernen Games
oftmals hauptsächlich
Kleinzeit-Hit-Detection.
Natürlich kann das auch an ganz anderen Sachen liegen.
Aber bei modernen Games
wahrscheinlich eher Kleinzeit-Hit-Detection.
Nicht zwangsläufig.
Okay, wenn ich in dem Tempo weitermache,
dann kommen wir durch das Video nie durch.
Lag bedeutet eigentlich in der Regel eher
entweder Server-Side-Lag
und damit ist eigentlich in der Regel gemeint,
wenn man von Lag spricht,
das Server ist schlicht und ergreifend
überlastet und kann nicht alles verarbeiten
und muss Sachen droppen
oder kann es nur langsamer verarbeiten
und irgendwelche Queues laufen voll
oder aber
Paketverlust.
Also Sachen werden nicht abgearbeitet.
Das ist eigentlich in der Regel Lag
oder halt nur verzögert.
Du wirst um die Ecke getroffen,
ist nicht zwangsläufig Lag,
sondern eher
Kleinzeit-Hit-Detection
mit sehr großzügig
eingebauten Zeitfenstern,
wie das noch bearbeitet wird.
Früher hattest du das Problem nicht.
Da war alles serverseitig.
Das Problem war nur,
dass du halt
das oftmals schlecht spielen konntest,
weil du halt
nicht dorthin geschossen hast, wo du hingeschossen hast,
weil es auf dem Server woanders war
beziehungsweise auch
du dann mit einem Ping von 150
halt echt gelitten hast
gegen einen mit einem Ping von 20, wo ich ja
persönlich der Meinung bin, das sollte auch
so sein. Die Leute sollten
schlicht und ergreifend einfach auf dem Server bei ihnen in der Nähe
spielen. Kann ja nicht sein,
dass du
gegen Leute
spielen musst mit einem Dran oder Ping teilweise.
Das haben sie in Overwatch ganz gut
gelöst. In Overwatch haben sie es glaube ich
bei 100 Millisekunden gecappt.
Also der Server erlaubt nur noch Sachen,
die 100 Millisekunden zurückliegen
als Hits, obwohl das bei ihm
ein kleinseitiger Hit gewesen ist.
Ich muss auch ehrlich sagen, im Nachhinein betrachte,
ich hab ja wirklich ganz ganz lange Overwatch gegrindet,
ich muss sagen,
netzwerktechnisch finde ich
Overwatch eines der besten Games,
Multiplayer Games, die es je gegeben hat.
Also mir fällt kein Game ein
in der Geschwindigkeit
und in der Genauigkeit
und wie selten dort
Bullshit passiert. Klar, du hast
in Overwatch auch die üblichen Verdächtigen.
Du schießt mit McCree
direkt durch den Kopf von irgendeinem Typ durch, aber
das passiert
verhältnismäßig
selten.
Also,
ich muss sagen,
Overwatch netzwerktechnisch ist
eines der besten, technisch
saubersten Sachen, die ich je gesehen habe,
Multiplayer Gaming mäßig.
Es schließt man oft Türen hinter sich
und wird trotzdem noch verzögert getroffen.
Unglaublich mühsam und unverständlich
wie das... Auch nicht CSGO.
Also ohne Scheiß, Overwatch ist
mit das Beste, was ich... Gut, ich muss sagen,
ich hab CSGO, also auch CS...
CS... CSGO 2
hab ich noch nie angeguckt.
Vielleicht, den haben die ja mittlerweile aufgeholt.
Aber es hat sich noch kein Game
so
gut netzwerktechnisch für mich angefühlt
und so sauber angefühlt wie
Overwatch.
Ja, hab ich.
Naja, gut.
Hundertprozentig kannst du's
ja nicht wissen, weil du nicht weißt, wie das Spiel das
handelt. Gut, es sei denn, du machst
extrem krass detaillierte
Analyse. Aber ja, ich hab mir da schon öfters
Gedanken drüber gemacht, warum das so passiert.
Ich hab da sogar schon für über 10 Jahren Videos
zugemacht, dass die meisten Leute,
die was von lag schreien, eigentlich gar nicht
lag meinen.
Du sitzt ja auch direkt in
Frankfurt an der Quelle. Das stimmt wohl,
in Battlefield 3, zu den Servern
hatte ich teilweise einen Fünferping,
wenn die Server in Frankfurt oder Köln standen.
Fünferping ist auch schon nice,
oder?
Also ein bisschen höhere Bitrate
für ihr Video hätten sie vielleicht nehmen können.
Hm.
Okay, wenigstens das ist schon mal richtig.
Eigentlich ist die Erklärung bis jetzt
echt nicht übel.
Bis jetzt. Ich mecker gerne
bei sowas, wisst ihr ja.
Ja.
Leute, ich hab mich grad, ich weiß nicht,
ob es euch auch so geht.
Ich hab mich bei diesem Bild
grad ein wenig
verguckt. Ich dachte,
das hier ist der Kopf,
das hier ist der Rücken
und dann dachte ich mir so, okay, was ist...
Okay, das ist der Bau, da dachte ich mir so,
was ist das?
Erkennt ihr das vielleicht, was ich gesehen habe?
Yep.
Moment.
Aber ja, das ist ein Gesicht
in der Richtung, dann ergibt das viel eher Sinn.
Das soll, wisst ihr was?
Dann soll Spieler 1 halt
auf nem gescheiten Server in seiner Nähe spielen. Easy.
Nö.
Ist er nicht.
Der ist vielleicht
zum Teil dafür zuständig.
Aber nicht für die ganze Route zum Server.
Wahrscheinlich noch nicht mal für
nen Drittel der Route zum Server.
Was sein Internetprovider
machen kann ist, dafür zu sorgen,
und das ist das, wo die Telekom Richtung
YouTube letzten Jahre über Probleme hat,
was sein Internetprovider machen kann ist,
dass er,
okay, sagen wir es mal umgangssprachlich,
genug Bandbreite hat,
zu den Netzwerken,
über die deine Pakete
gehen müssen, dass da nix
an die Grenze kommt. Da hatte
die Telekom, und auch Vodafone,
gerade am Anfang von Corona, könnt ihr euch noch dran
erinnern, wo am Anfang von Corona
die Standardwiedergabequalität
bei YouTube standardmäßig auf 480p
gesetzt wurde, wo die Provider Probleme hatten,
weil auf einmal, huch, die Leute
benutzen ja auch ihre Bandbreite daheim,
diese Probleme hatten, und so
nach dem Motto, Mist, jetzt benutzen die Leute
Bandbreite für Videos, und die wollen
Homeoffice arbeiten, fuck, Alter, das
funktioniert ja nicht.
Also die können quasi gucken, sagen wir es mal ganz billig,
dass ihr Uplink ordentlich
dimensioniert ist. Das ist natürlich nicht ganz
richtig, weil es ist nicht nur ein Uplink, es sind
mehrere, und ich hab so einen Peering
schon mal live gesehen, ich hatte ja
die Ehre, ich durfte ja schon mal,
das hat doch YouTube
gemacht und nicht der ESP, das ist richtig,
das ist richtig, das hat nicht der, das, ja,
das hat YouTube gemacht standardmäßig, aber es war
aus diesem Grund, weil es
Bandbreitenprobleme es fuck gegeben hat, und auch
viele Leute nicht mehr richtig im Homeoffice arbeiten konnten.
Das war wahrscheinlich was, was Hand
in Hand ging, ja, das hat YouTube gemacht,
aber das war nicht einfach
nur, weil YouTube sich
gedacht hat, oh ja, heute wär's mal ein schöner
Tag, die Qualität auf 480p zu setzen.
Das hatte externe Umstände, warum
YouTube es ausgerechnet dann gemacht hat.
Und die hatten ja auch Bandbreitenprobleme,
und
was wollte ich jetzt sagen?
Ja, ich hatte, ich hatte ja
das Glück, ein paar mal ins Dezix zu dürfen
in Frankfurt, als ich noch beim Provider gearbeitet
habe, und ich habe so Peering Links
tatsächlich schon, Peering Ports
tatsächlich schon gesehen. Das ist oftmals
total unspektakulär.
Wir hatten zum Beispiel ein Kabel, damals,
weiß ich noch, haben wir neu gepatcht zu
Freenet. Da ist man hingegangen,
an seinen Rack im
Dezix, hat ein Kabel
genommen und an den Switch gesteckt,
und in den passenden anderen
Port reingesteckt.
So, und der kam dann auf, was weiß ich,
drei Racks weiter
raus, bei irgendwas, was Freenet gemietet
hat, das war glaube ich noch, bevor es
alles United Internet war,
und ging bei Freenet dann in den
ihren Switch rein.
So.
So sah so ein Peering Link aus.
Das sah äußerst unspektakulär aus.
So, und da können natürlich,
das ist das, was die Internet Provider
machen können, die können natürlich
gucken, dass sie
ordentlich vernetzt sind
mit anderen Providern, aber
über die Route entscheiden
die nur zum Teil.
Weil, wenn das
das Netz des Internet Providers verlässt,
hat der Internet Provider da
erstmal keinen großen Einfluss drauf,
wohin das Ganze
geht.
Der kann nur sagen, hier, da,
Exit-Router, was weiß ich,
nächstes, nächstes Target
ist autonomes
Netz 573,
und da geht's
jetzt hin. So, zack, bumm, dann ist
das da, und dann entscheidet der Nächste, wie er es
weiter routet. Okay, wir brauchen aber viel zu lang
für. Also, wie gesagt,
das stimmt nicht, der Provider ist nicht für
die Route zum Ziel verantwortlich. Zum Teil,
aber bei weitem nicht für die ganze Route.
Wenn hier eine gute Route
gewählt wird, mit möglichst wenigen...
Das ist ja auch der Grund, warum so Sachen wie
Gaming-VPNs teilweise
was bringen können, wenn
der Provider euch über
Sibirien routet.
Also,
es gibt ja Gaming-VPN-Anbieter, die haben
halt ein paar Server weltweit verteilt,
und das muss nicht
immer gut sein. Also, zum Beispiel, wenn ich von
hier zu einem Server in Köln oder von hier zu einem Server
in Frankfurt gehe, dann werde ich
höchstwahrscheinlich hier in mein Provider-Netz
und in meinem Provider-Netz in Frankfurt auch wieder rauskommen.
Aber wenn das ein bisschen
weiter weg ist, wenn ich jetzt beispielsweise
irgendwelche koreanischen MMOs in
Korea spiele, oder auf dem
asiatischen Server,
dann ist mein Provider
nicht dafür zuständig, das Paket von
mir dorthin zu bringen, zumindest nicht die ganze
Strecke. Und da können Gaming-VPN-
Anbieter was bringen, weil,
mal angenommen, ich werde wirklich mega beschissen geroutet,
ja, keine Ahnung, ich werde von hier
nach New York und von New York dann
wieder zurück nach Russland und von Russland
über China dann nach Südkorea, so, was auch
immer, ja, dann ist das natürlich eine ziemlich beschissene
Route und dann habe ich einen Ping von 450
oder sowas, oder von 500
oder sowas, und das
ist halt kacke.
Und wenn ich einen Gaming-VPN-Anbieter benutze,
dann kann das anders
sein, dann gehe ich hier zum nächstgelegenen
VPN-Endpunkt, der vielleicht
in Frankfurt steht, und dann händle das
Routing der Gaming-VPN-
Anbieter über seine
Server, die er quasi weltweit stehen hat.
Das funktioniert,
das können die machen.
Das ist dann vielleicht eine etwas optimiertere
Route zu dem asiatischen
MMO-Server.
Ja, aber so
macht das ja mein Provider nicht. Mein Provider schickt das
aus seinem Netz raus, und danach ist es ihm egal.
Höheren Ping.
Ja.
Das stimmt.
Richtig.
Beim Gaming,
beziehungsweise beim Server,
nennt sich das Ganze einfach
Packet-Loss. Und die meisten Games
haben mittlerweile sogar
ein eigenes Symbol, wenn das passiert.
Dass solche Pakete am Weg verschwinden,
liegt übrigens so gut wie nie
am Spiel, beziehungsweise an deren...
Das finde ich gut. Das finde ich
wirklich gut, dass er das mal sagt.
Die meisten Leute haben übelste Panik,
dass bei ihnen daheim irgendwas schiefläuft,
wenn Pakete verloren gehen. Und ich habe auch
schon jahrelang in Videos immer wieder gesagt,
Leute, macht euch ja nicht so viel Gedanken,
höchstwahrscheinlich
liegt das Problem nicht in
euren eigenen vier Wänden.
Und wisst ihr, was ich auch
immer witzig finde?
Wenn die Leute einen Traceroute machen,
und sagen, oh, Packet-Loss!
Traceroute! Ich seh's!
Genau! Packet-Loss! Passt mal auf,
wir machen jetzt mal was.
Das ist immer extrem, extrem
Cack-Wait-Moment.
Ich leake keine IP bei Traceroute,
weil man ja nicht meine Absender-IP sieht.
Und selbst wenn, scheiß drauf.
Aber ich zeige euch das jetzt mal.
Ein Fehler, den
viele Leute machen, wenn's um
Traceroute, wenn's um Packet-Loss geht.
So, passt mal auf.
Wir geben jetzt Traceroute...
Wie?
Hab ich das nicht mal installiert?
Pack-Wait...
Traceroute...
zu...
ähm...
Sagt mir mal irgendeine China-Seite.
Was ist eine schöne
China-Chinesen-Seite, Leute?
Aber AliExpress
ist doch bestimmt nicht nur in China. Die haben doch bestimmt
mehrere Server weltweit. Okay.
AliExpress.com. So.
Okay.
Hier haben wir das erste schon.
So.
Das hier ist mein Router.
So viel ist das einfach.
Das hier ist bei mir im Netz.
Also, das ist mein Router.
Und das hier ist wahrscheinlich
mein
Vodafone-DSL-Modem-Router-
Kombi-Gerät, gehe ich mal von aus.
Also, so viel ist es easy.
Das ist noch alles bei mir lokal.
Wir können's ja mal
kurz fertig laufen lassen.
Okay. So, das ist
alles noch bei mir lokal. Easy.
Der nächste Hop bei Unity Media
kommen die Leute jetzt auf die Idee und sagen
Aha! Hier! Hier! Packet-Loss!
Packet-Loss! Das ist kein Packet-Loss,
Leute. Ich mein,
es kann ja schlicht und ergreifend auch
kein Packet-Loss so wirklich sein,
wenn der nächste Hop dann auf einmal funktioniert.
Klar könnte man sagen, hier gab's einmal
Packet-Loss, beim nächsten Paket ging's...
Das ist aber Schwachsinn. Das ist nicht das...
Guck mal, das Paket kommt ja angeblich auch nie an.
Aber witzigerweise, wenn...
Ups, was hab ich jetzt gemacht? Aber wenn ich...
Alter!
Ich hab zu viel
Koffee gepastet. Aber wenn ich AliExpress
pinge, dann funktioniert das Ganze. Wenn auch
mit einem ziemlich... Okay.
Das ist erstaunlich schnell.
Also, man sieht schon irgendwie, das kann
nicht so wirklich Packet-Loss sein an der Stelle.
Und viele Leute gucken sich das dann an
und denken sich, oh nein!
Mon KS!
Ich hab ja
ganz schlechtes Internet, so viel
Packet-Loss und so viel Geld verloren
und eieiei, ganz schlimm.
Das ist aber überhaupt nicht
der Fall. Was man hier
wirklich sieht, ist,
welcher Zwischenschritt
ICMP-Error-
Packages
verschickt, wenn das defaultmäßig
noch... Ich geh mal davon aus, dass es standardmäßig noch
auf ICMP...
Dass es standardmäßig noch die ICMP-
Variante benutzt,
um Route festzustellen.
Ne, was du hier siehst, ist,
welche ICMP...
Also, welche Knoten ICMP
Packages
oder Sachen antworten,
Fehler zurückschicken.
Weil das funktioniert folgendermaßen,
so eine Traceroute.
Es wird ein Paket-Loss geschickt,
gibt's dann eine andere...
Ja, du kannst doch irgendwelches...
Irgendwelches...
TCP-basiertes...
Machen...
Auch mit
Time-to-Live und sowas, das geht irgendwie.
Aber im Prinzip funktioniert es
relativ easy.
Es wird ein Paket-Loss geschickt, mit
einer Time-to-Live von 1.
Time-to-Live von 1
bedeutet... Also es wird immer ein Paket-Loss geschickt
hier zu diesem Ziel.
Time-to-Live von 1. Time-to-Live ist ein Feld,
ist ein Header-Feld.
Fragt mich jetzt bitte nicht genau,
ich glaube, im IP-Header...
Glaube ich.
TTL.
Bin ich mir aus dem Kopf nicht so... Wahrscheinlich.
IP-Header gibt den größten Sinn.
Du hast im Header
ein Time-to-Live-Feld. Und was passiert ist,
jedes Mal, wenn dieses
Paket von einem Router weitergeschickt
wird, wird die Time-to-Live
1 abgezogen.
Und wenn die Time-to-Live bei 0 angekommen ist,
schickt der Router
auf dem das... Also das Paket wird dann verworfen.
Time-to-Live 0.
Chat, wer ist high IQ? Wer weiß, warum man
eine Time-to-Live-Setting überhaupt hat?
Woran könnte das liegen?
Für alle, die es nicht wissen, können sich das Emote angucken.
Also eines der Gründe,
warum es sinnvoll ist, eine Time-to-Live in einem Paket
zu haben. Schleifen. Richtig. Genau.
Dass, falls aus irgendwelchen Gründen im Kreis
geroutet wird, dass die Pakete
irgendwann weggeschmissen werden.
Falls es wirklich mal
Koggerskreise gibt.
So, die Time-to-Live wird runtergezählt.
Und der Router, der die Time-to-Live auf 0 runterzählt,
der
verwirft das Paket, aber
schickt eine
Error-Message zurück
an den Absender.
Irgendeine ICMP-Error-Message.
Irgendeine ICMP-Error-Message.
Ich weiß, ich hab keine Ahnung, ehrlich gesagt.
Welche genau. Aber du bekommst
Destination Unreachable oder so.
Ach, keine Ahnung. Du bekommst
zumindest ein Fehlerpaket
zurückgeschickt, dass dein Paket verworfen wurde.
So. Und
das ist dann
der Fall hier, wo man sieht,
aha, hier wurde mein Paket verworfen.
Und da gibt es natürlich ein paar Informationen zwischendurch.
Weil normalerweise bekomme ich ja gar nicht mit,
wie die Zwischenhops heißen.
Also ich route ja nicht explizit
von da nach da, von da nach da, von da nach da.
Ich sag ja nur, ich will hierhin.
An die IP-Adresse von AliExpress.
Damit ich jetzt die Zwischenschritte rausbekomme,
muss ich mir
die IP angucken, welcher
Router hat mir die Error-Message
geschickt. Also der Router
zählt die TimeToLive auf 0 runter
und schickt dir eine Error-Message
zurück. Und in der Error-Message
steht dann die Absender-IP des
Routers drin, der die Error-Message
generiert hat. Also das hier ist
ein Paket
TimeToLive 1. Mein Router
verwirft das Ganze, schickt mir eine Error-Message zurück
und ich sehe, das ist der Router.
TimeToLive von 2, TimeToLive von 3, TimeToLive
von 4 und so weiter.
Und ich schicke mir das alles zurück.
Und was das hier jetzt bedeutet, wenn hier nichts zurückkommt,
heißt nicht, dass es diesen Zwischenhop
nicht gibt.
Sondern, das bedeutet einfach nur,
dass dieser Zwischenhop, und das dürfte
wahrscheinlich der Unity-Media,
der Eingangsrouter von Unity-Media,
der erste Unity-Media-Hop an der Stelle,
der antwortet schlicht und ergreifend
mit keinem Fehler, wenn er das Paket
verwirft. Der verwirft das Paket,
schickt mir aber keine Fehlermeldung
zurück. Das ist kein PacketLoss.
Das ist einfach nur
so konfiguriert, dass dieser
Eintrag hier, also dass dieser Router an der
Stelle keine Fehlermeldung
zurückliefert, wenn er ein Paket
verwirft. Das ist nicht
gleich PacketLoss. Das ist eine
Konfigurationssache des jeweiligen
Routers. Und wie man
hier sieht, alle anderen danach machen
das auch so. Und nachdem man
keine Antwort jemals wieder bekommt,
weiß man auch nicht, wie viele
dazwischen liegen. Weil ja AliExpress, der
letzte Router, das anscheinend auch nicht macht.
Also, easy.
Okay, wir können das theoretisch
glaube ich sogar noch hochstellen,
irgendwie.
Dass wir dann vielleicht doch irgendwann mal eine Antwort kriegen.
Aber das ist der Sinn
wie...
Also das ist der Hintergrund
und der Sinn von sowas wie Traceroute.
Das dient nicht dazu, PacketLoss
irgendwie aufzudecken. Das dient dazu, dass man so
grob eine Ahnung hat, wo seine Pakete rumgeroutet
werden. Das kann natürlich sinnvoll
sein,
um rauszubekommen,
ob man zum Server,
zum koreanischen MMO
Server, eine schlechte Route
nimmt. Wie gesagt, erst nach New York,
dann rüber nach Russland, dann runter nach
China und dann nach Korea.
Das könnte man daran, wenn du
auf der Strecke Router hast,
die Antworten mit Error-Messages, könnte man
das halbwegs nachvollziehen. Aber das
bedeutet nicht PacketLoss. So, das
muss man an der Stelle nochmal sagen. Das behaupten
sie nicht in dem Video. Also ich
erzähle das jetzt hier nicht, weil sie das in dem Video gesagt hätten.
Sondern nur, weil viele Leute denken,
dass das damit was zu tun hat.
Hat aber nix damit zu tun.
Und es gibt
noch ein zweiter Grund für PacketLoss.
Der
wird auch oftmals missverstanden.
Wobei
der bei Spielen jetzt weniger
weniger auftritt.
Man kann auch schlicht
und ergreifend mehr Daten verschicken, als auf dem
Weg irgendwo durchpassen.
Das ist dann kein PacketLoss in Form von
Kabel ist kaputt oder sowas in der Richtung.
Oder irgendwas anderes ist furchtbar kaputt.
Nein, irgendwo auf dem Weg
ist schlicht und ergreifend die Bandbreite zu gering,
dass Pakete getroppt werden müssen.
Das kann man ganz einfach lokal
demonstrieren. Das mache ich jetzt nicht im Stream.
Ich erzähle euch das bloß, weil ich keinen
Server mit dem ich das hier ausprobieren könnte.
Das kann man ganz einfach lokal demonstrieren.
Man
macht beispielsweise mal ein
iPerf oder sowas auf.
Bei sich auf dem Raspberry Pi oder sonst wo.
Und schickt dann mal
UDP-Messages.
Also man sagt iPerf,
man hat einen 1 Gigabit
Netzwerkport und man sagt iPerf
generiere mal 2 Gigabit die Sekunde
an Traffic und versucht es rüber zu schicken.
Dann werdet ihr sehen, ihr habt ungefähr 50%
Packet Loss. Wahrscheinlich sind es, realistisch betrachtet,
eher sogar 60%.
Warum habt ihr 60% Packet Loss? Naja,
weil ihr schlicht und ergreifend viel mehr schickt als durchpasst.
Was soll
man sonst haben als Packet Loss?
Wo sollen die hin, die Dinger?
Okay, auf geht's.
Weiter.
Game Server am Weg verschwinden liegt übrigens
so gut wie nie am Spiel
bzw. an deren Game Server, sondern
in 99% der Fälle
am Weg davor.
Ja, aber
nicht bei euch
in der Wohnung, meistens zumindest.
Das ist jetzt ein bisschen blöd dargestellt,
weil das irgendwie so
ein Kabel ist, was die Leute bei sich
daheim haben. Es liegt in der Regel nicht bei euch
am Kabel oder bei euch daheim. Natürlich,
es kann immer sein,
es kann sein, dass eure Fritzbox-Party den Abgang
macht, aber das äußert sich meistens anders.
Es kann sein, dass ihr irgendwelche
ultra alten, kaputten Kabel habt.
Das lässt sich aber meistens
relativ schnell ausschließen
oder miesen
WLAN-Empfang, und wer über WLAN spielt,
hat eh die Kontrolle über sein Leben verloren.
Aber
das Problem lässt sich ja meistens relativ einfach ausschließen.
Man stöpselt sich
möglichst direkt mit einem Kabel,
was halt funktioniert, an
seine Fritzbox an
und guckt, ob das immer noch so ist.
Und wenn es dann weg ist,
mag es an irgendeiner Verkabelung liegen,
oder am WLAN oder sonst was, aber in der
Regel liegt es nicht bei euch in den eigenen
vier Wänden.
Irgendwo auf dem Weg
dazwischen. Ich meine, je nachdem, wie weit
das Server weg ist, kann da schon ein bisschen was passieren.
Und außerdem,
wenn ihr so krasse Netzwerkprobleme habt,
dass das schon bei Spielen auffällt,
ich meine, Spiele haben wirklich
keine allzu hohe Bandbreitenanforderung,
dann kopiert mal was
übers Netzwerk auf irgendeinen NAS oder so.
Wenn ihr so ein beschissenes Kabel habt,
dann habt ihr wahrscheinlich von eurem
Gigabit
im Endeffekt beim Transfer
von der Datei noch, keine Ahnung,
150 MBit übrig
oder sowas. Also das fällt dann schon auf.
Und das lässt sich auch einfach...
Aber ansonsten wird es höchstwahrscheinlich
bei euch in den eigenen vier Wänden liegen.
So, okay, weiter.
Das macht auch
meistens nix.
Also ganz ehrlich, das juckt...
Also das da...
Also das da
juckt ein Netzwerkkabel in der Regel mal gar nix.
Natürlich sollte man Netzwerkkabel
nicht krass abknicken
und mehrfach hin und her
links knick rechts, links knick rechts.
Nee, das ist klar.
Drinnen sind auch nur Kupfer...
Kupfer...
Kupferdrähtchen, ja? Die können auch kaputt gehen.
Aber so mal so ein kleines...
Das macht dem Netzwerkkabel eigentlich nicht wirklich
viel aus.
Okay, bei Glasfaserkabeln sollte man
das natürlich nicht machen. Dann kriegst du es relativ schnell kaputt.
Ja, das ist eine bescheuerte Idee, WLAN.
Aber der Internetprovider wählt die Route
gar nicht. Der Internetprovider ist nur dafür
zuständig, bis es bei ihm aus dem Netzwerk rausgeht.
Natürlich kann ein Internetprovider
das steuern,
wo es das weiter schickt.
Aber wenn danach
Mist passiert, kann der Provider nicht
viel machen dagegen.
Ihr könnt es ganz woanders
rausschicken und hoffen, dass es dann einen anderen
Weg nimmt. Ja, ein bisschen Einfluss hat
der Internetprovider schon drauf. Aber es ist nicht so, dass
euer Internetprovider zuständig wäre für die komplette
Route von euch zum Ziel.
Je länger die Lieferkette, desto
mehr geht am Weg verloren. Wenn
euer Internetprovider
komplett lost ist, was durchaus
mal vorkommen kann, dann gibt es... Aber wenn es
Vodafone ist zum Beispiel, die
oftmals in ihrem eigenen Netz genug Probleme haben.
...auch noch eine Lösung, eure Packet-Lost-
Probleme easy in den Griff zu bekommen.
Passend zum Thema haben wir uns nämlich für dieses Video
den Partner NordVPN geholt, weil
man damit sein Routing teilweise selbst
besser lösen kann als der... Das
ist nicht gelogen, das stimmt.
Die Chancen, dass es
was bringt, in dem Fall, würde ich sagen,
ist recht gering, aber...
Ich meine, das ist nicht
falsch.
...der eigene Internetprovider. Der Ping
ist dann natürlich auch andere Vorteile, wie
dass ihr Online selbst besser lösen kann als
der eigene Internetprovider. Wir gucken uns das Placement trotzdem mal an.
Der Ping ist dann vielleicht höher, das Spiel läuft
aber trotzdem besser, weil kein Packet-Lost.
Dazu kommen natürlich auch andere
Vorteile, wie dass ihr Online-Inhalte ansehen könnt,
die eigentlich in eurem Land nicht verfügbar sind,
was definitiv... Ja, was für mich der einzige
wirklich sinnige Grund für einen VPN
übrigens ist. Ein Major Win
ist bei zum Beispiel Netflix.
Außerdem habt ihr generell einen verbesserten
Schutz eurer Daten, auch wenn ihr nicht mal mit einem
VPN-Server verbunden seid.
Was? Was haben wir?
Warum? Auch wenn ihr nicht mal
mit einem VPN-Server verbunden seid.
Warum? Habt ihr generell einen verbesserten Schutz
eurer Daten, auch wenn ihr nicht mal mit einem VPN-Server
verbunden seid. Inwiefern?
Ich meine, es ist ja nicht mal, dass
meine Daten besser geschützt werden mit einem
VPN.
Also insofern...
Also das ist ja auch so ein Trugschluss, dass die Daten
besser geschützt werden mit einem VPN.
Also der einzige Weg,
der vielleicht besser geschützt ist,
ist
die Strecke, die eure Daten
nehmen, vom Eingang
des VPNs bis zum
Ausgang des VPNs.
Dafür
handelt ihr euch Probleme ein mit,
dass euer VPN-Anbieter
vielleicht komische Dinge
macht. Das heißt, ihr müsst eurem VPN-Anbieter
trauen. Wer weiß, was die machen.
Also das Problem machst du
sonst nicht. Und das nächste ist,
dass jetzt die Daten nennenswert
irgendwie
auf dem Weg
datenschutzrechtlich bedenklich
irgendwie verarbeitet oder
gespeichert werden. Es sei denn,
es ist irgendwie der Geheimdienst am Start oder so.
Der kann sich aber auch einfach
vorm...
da irgendwie
anderweitig...
Wenn ihr wirklich Angst vorm Geheimdienst
habt, dann...
Dann habt ihr wahrscheinlich auch andere Probleme,
weil ihr komische
Dinge macht. Aber ja, okay.
Sagen wir mal, ihr habt Angst vorm Geheimdienst.
Dann könnt ihr die Sachen natürlich
über den VPN schicken.
Aber spätestens beim Ausgang
des VPNs
können die Dinger wieder abgegriffen werden.
Also da hast du eh keine Chancen.
So, das heißt, die Chance, dass eure Daten
irgendwie aufgezeichnet und
verarbeitet werden und für irgendwelche
was weiß ich, sagen wir mal
Analysen
und Werbeanrufe,
keine Ahnung, was auch immer,
ist relativ gering, dass das
auf dem Weg,
auf dem reinen Netzwerkrouting-Weg
unterwegs passiert.
Wo das eher passiert ist,
den Service, den ihr eigentlich benutzen wollt,
und der kann ja eure Daten nach wie vor
lesen, ob VPN
oder nicht. Ich meine,
ihr geht rein in euer VPN
und irgendwann
muss das auch mal wieder raus.
Und in dem Moment
wurde das VPN verlässt, weil ich meine,
euer VPN, das ist ja
auch mal irgendwann, also
euer VPN terminiert ja nicht direkt auf
dem Webserver von Google.
Sondern irgendwo, bei irgendeinem
Exit-Ding, Router-Exit
von diesem VPN-Provider.
Spätestens da ist
vorbei mit VPN und
der Anbieter bekommt eure Daten
so, wie wenn ihr normal drauf zugreifen würdet
und wenn der jetzt der Meinung ist,
die Daten speichern zu müssen und verkaufen zu müssen,
dann kann das trotzdem passieren.
Und das ist auch viel eher das,
wo irgendwelche Daten geleakt werden.
Nämlich von den Anbietern, nicht irgendwie
unterwegs oder so. Also sprich,
der einzige Fall, wo das
tatsächlich sinnvoll sein könnte,
wäre sowas wie,
man sitzt im Krankenhaus
oder in einem Café und die haben ein offenes WLAN
und, also mit offen meine ich ein unverschlüsseltes
WLAN
oder noch ein
WEP-verschlüsseltes WLAN oder sowas.
Also wenn man sich da netzwerktechnisch
nicht ganz, dann mag das vielleicht Sinn
machen, wobei man da halt auch sagen muss,
wenn man Seiten besucht, die über
harte TPS gehen, also die TLS-verschlüsselt sind,
was die meisten Seiten sind,
dann ist das auch kein Problem.
Aber dann kann man sich tatsächlich
überlegen, dann muss es aber auch nicht wirklich NordVPN
sein für diesen Zweck, sondern man kann auch
ein VPN aufbauen, beispielsweise zu einer
eigenen Kiste oder zu seiner
Fritzbox daheim mit irgendeiner App und das geht auch.
Dann braucht es die NordVPN.
Für die eigentlichen
Gefahren, dass Anbieter
eure Daten leaken, da kann
NordVPN überhaupt nichts dagegen
machen, weil ihr müsst ja den
Service benutzen, den ihr benutzen
wollt. Also mal angenommen, ihr benutzt
irgendeinen Service, um eure Termine zu
managen.
Irgendeinen Online-Kalender.
Dann müssen eure Daten ja
zu diesem Anbieter und wenn
dieser Anbieter mal irgendwie zufälligerweise
seine Datenbank im Darknet findet,
dann sind eure ganzen
Daten geleakt. Unabhängig davon,
ob ihr diese Daten zum Anbieter
über NordVPN geschickt habt oder ob
das ganz normal über das Internet geroutet zum Anbieter.
Das ist wurscht. Also NordVPN
kann, auch wenn das immer so, oder generell
nicht nur NordVPN, VPNs an sich
können, auch wenn das immer so als super krasse
Security-Sache verkauft wird,
erstaunlich wenig mehr
Sicherheit bieten. Also es wird
als viel mehr verkauft,
als es letztendlich ist.
Der Hauptanwendungsfall, den ich
bei VPN sehe, ist
tatsächlich, man möchte auf
irgendwelche geoblockten
Sachen oder Region-
lockten Sachen zugreifen.
Also ich möchte jetzt
beispielsweise auf irgendwelchen
koreanischen Servern spielen,
die nur Leute
aus Asien drauflassen oder
ich will Netflix gucken
in einem anderen Land.
Ich will Filme gucken, die in Deutschland
noch nicht released sind und das über irgendeinen
Watch-Service in Indien,
was auch immer, irgendwas.
Dafür ist VPN sinnvoll.
VPN kann auch sinnvoll
sein, wenn man so
halblegale
Sachen macht, weil BitTorrent
an sich und P2P-Sharing
ist ja an sich nicht illegal.
Wir laden selbstverständlich alle nur, ich muss ehrlich
sagen, ich habe es ewig nicht mehr benutzt.
Ich habe noch nicht mal meinen BitTorrent-Client installiert.
Aber wenn überhaupt, laden wir uns natürlich alle nur
Linux-ISOs runter.
Und so auch nur alles Linux-ISOs.
Für sowas
kann das sinnvoll sein, ein VPN zu benutzen.
Man handelt sich mit einem VPN
aber immer jemand ein, und das muss einem klar sein,
man handelt sich immer jemand ein,
der dazwischen sitzt.
Der potenziell selber alles, was
ihr übertragt, sofern es nicht nochmal
verschlüsselt ist,
beispielsweise, weil ihr über
TLS geht, über HTTPS
geht, kann euer VPN-Anbieter
alles mitlesen,
was ihr verschickt.
Ob er das macht,
ob er daraus irgendwie Kapital schlägt,
ob er euch, was auch immer.
Das können wir nicht wissen,
das ist offen.
Das ist quasi man in the middle as a service,
wenn man das so will.
Natürlich ist es dann auch wiederum nicht ganz
so einfach.
Ich meine,
je nachdem, was das für eine VPN-Technologie
verwendet und
wie die Zertifikatsgenerierung
alles läuft, eventuell ist es auch nicht
möglich, für den VPN-Anbieter
das Ganze mitzulesen, aber
ihr wisst ja halt nicht genau,
was unter der Haube passiert.
Es kommt immer wieder zum gleichen Punkt,
ihr müsst diesem VPN-Anbieter komplett
trauen, mit allem, was ihr
darüber übertragt.
Und da weiß ich halt nicht,
ob man jetzt im NordVPN
da wirklich mehr trauen kann,
als irgendwelchen etablierten
Service-Providern und
Carrier-Netzwerken und was es
nicht alles gibt,
da was komisches zu machen.
Da muss man sich überlegen.
Also es hat seine Daseinsberechtigung VPN,
aber diese Sache mit
es macht alles so viel wahnsinnig sicherer,
ist viel Einbildung
dabei. Also es macht wenig sicherer.
Also es macht erstaunlich wenig
für die Sicherheit,
das zu benutzen.
Im Vergleich zu dem, wie es immer angepriesen wird.
So, weiter.
Da bin ich immer gespannt,
wie sehr das sich da wirklich dran gehalten wird,
weil sagen, dass man das macht, ist das eine
und das dann wirklich einlösen, keine Ahnung.
Ja, ja klar, Chad, natürlich, wie gesagt,
für solche Sachen, wir haben ja gerade
angesprochen, warum man vielleicht seine IP
verschleiern will, da macht das durchaus Sinn.
Anonymer ist man dadurch
auch nicht.
Also anonymer
in der Form,
dass man das euch nicht zuordnen kann,
weil ich meine, ihr habt zwar eine andere IP,
aber ihr habt immer noch die gleiche IP,
immer längere Zeit die gleiche Exit-IP
und die Anbieter
selbst erkennen euch ja nicht
anhand der IP primär,
sondern entweder ihr lockt euch ein,
dann ist vollkommen egal, von welcher
IP ihr euch einlockt, die wissen,
dass ihr das seid, oder aber
im Zeitalter von
Browser, Fingerprinting
und alle möglichen Geschichten
findet man
auch recht gut raus,
wenn einen User besuchen von unterschiedlichen
IPs,
ob es die gleichen User sind, und da gibt es echt
die abgedrehtesten Sachen,
eines der coolsten Sachen, die ich mal
gelesen habe in den letzten
Jahren, wie man User
identifizieren kann, oder zumindest
sehr stark eingrenzen kann,
nachdem Browser ja mittlerweile
Schutzmechanismen eingebaut haben,
dass man nicht mehr so einfach Schriftarten
auslesen kann und sowas, die installiert sind,
war
folgendes, das kann ich euch
mal kurz zwei Minuten erzählen, also, wenn ein
Anbieter feststellen will,
welche User die
Seite regelmäßig besuchen, und das ohne Account
und ohne
sich auf die IP zu verlassen
und ohne auf den User Agent,
da gibt es verschiedene Varianten, und
eine Sache, die ich letztens gelesen habe, die war wirklich
sehr high IQ, und zwar
korrekt.
Was die machen ist,
die rendern auf ihrer Webseite
offscreen oder ganz
klein oder nahezu unsichtbar,
legen
die ein Canvas Element
an, Canvas Element ist
auf HTML Seiten sowas, wo
Webseiten eigene Sachen
drinnen malen können, also sprich, das
benutzt man zum Beispiel, also
das hier ist zum Beispiel ein
Canvas Element.
Hier, das ganze Ding hier
ist ein Canvas. Also das hier höchst
wahrscheinlich auch drumherum.
So, und
was
man dann machen kann ist,
die rendern Emojis
in
dieses Canvas.
Und
mal gucken, wer von euch
im Chat
heute massive
highest IQ ist.
Was ist das Erste, was euch
mal ein Emoji verrät
über den Anwender?
Ohne, dass du ins Detail gehen
musst. Was verrät euch erstmal ein Emoji
relativ sicher über den Anwender?
Was
er für ein Betriebssystem benutzt? Ja.
Ja. Oder
sagen wir mal, vielleicht auch ein bisschen was über den
Browser. Aber es verrät
euch in der Regel erstmal
ja, das auch,
aber es verrät euch erstmal sowas wie
was der höchstwahrscheinlich
was er für eine Plattform benutzt.
Weil
Emojis sehen überall unterschiedlich
aus. Also man kann an Emojis relativ
einfach erkennen, ob jemand Windows 10, Windows
11, gut Firefox
hat was eigenes, Android
oder iOS benutzt. Die sehen alle
ein bisschen anders aus. Und wenn jemand
den Twitter Emoji Font
verwendet, ist höchstwahrscheinlich, dass der Linux benutzt.
Also man erkennt anhand des
rein der Optik wie ein Emoji aussieht
schon relativ easy, was
derjenige für einen OS benutzt.
Eventuell, wenn es die Firefox Emojis sind, auch
was er für einen Browser benutzt. Das ist ja schon mal
nicht schlecht. So. Und jetzt geht
das Ganze noch, man kann auch
vielleicht ganz outdated Sachen erkennen, ob die
Emojis nur schwarz-weiß gemalt werden oder sowas.
So.
Aber, weil es
mich interessiert, und ich denke nicht verkehrt
ist, über sowas ein bisschen Bescheid zu wissen. Deswegen
erzähle ich es euch jetzt ja, Chatge.
Wir wissen, ich meine, wir müssen doch hier
immerhin zumindest ein bisschen highest IQ
Chat auf Twitch gerecht werden.
Und ihr wisst ja, dass jeder Prime
Sub den
GesamteIQ des Chats steigert.
Das heißt, wenn ihr noch einen Prime Sub übrig
habt, ich freue mich natürlich über jeden Sub,
aber ich freue mich auch, dass ihr da seid.
Also auch wenn ihr keinen Prime Sub habt, ist schön,
dass ihr da seid, ja.
Aber ich muss ab und zu mal ein bisschen
Sellout machen, so läuft das Twitch Game einfach.
Und selbst, und jetzt mal ernsthaft,
selbst wenn ihr einen Prime Sub habt und denkt, ey,
keine Ahnung, dem Max will ich den Prime Sub nicht geben,
dann gebt den Prime Sub zumindest
irgendjemand anderem auf Twitch, weil
es ist Blödsinn, den Prime Sub nicht rauszuhauen.
Das ist quasi geschenkte
4€ für Beso aus dem Monat.
Nein, gut, eigentlich kriegt der, also 2€.
Gestern wieder für,
Dankeschön für den Sub.
Ähm, was wollte ich erzählen? Genau, Browser Fingerprinting.
So, als erstes mit Emojis,
und das Ganze wird noch viel abgedrehter.
Yuzo, Porga Subscription.
Kann ich nur sagen.
Nice.
Nice.
Sani auch wieder am Start.
Und hast du die Ausbildungsstelle gekriegt?
So manche Sachen merke ich mir irgendwie im Hinterkopf.
So, aber nochmal zurück zu Browser Fingerprinting.
Also jetzt haben wir schon mal relativ easy rausgekriegt
mit Emojis, was für eine Plattform
der jeweilige Anwender benutzt.
Und jetzt wird's abgedreht. Man kann jetzt mit
mehr oder weniger
detaillierten
mit mehr oder weniger
detaillierten
Analysen, kann man jetzt auch
rausfinden, ungefähr
was für eine Hardware
der jeweilige Client
benutzt.
Und
da gibt es
Tabellen und da gibt es Tests,
die haben mit dem Rändern von
Emojis oder generell mit dem Rändern
in einem Canvas Element im Browser
haben die gemessen,
dass du relativ gut
beispielsweise sagen kannst,
an der Geschwindigkeit, wie gerendert
wird und
an irgendwelchen Timings, wie
gerendert wird und alles mögliche,
kannst du relativ gut bestimmen, was für eine
Grafikkarte
der jeweilige User benutzt
und noch viel mehr.
Also du kannst, es gibt wirklich
sehr viele Tricks, dass du
im Browser feststellen kannst,
zum Beispiel, welchen Browser
benutzt der Anwender, welches Betriebssystem
benutzt der Anwender, welche Hardware
hat der Anwender eingebaut.
Und das alles zusammengefasst,
sagen wir mal, du bekommst
so 7, 8 verschiedene
Merkmale raus und die in Kombination
sind
dann, wenn nicht 100%
eindeutig, aber relativ eindeutig.
Überlegt euch mal,
ihr habt 8, 9 verschiedene
Merkmale,
die auch unterschiedlich
sein können, nicht nur binary.
Und da
gibt es sehr viele Kombinationsmöglichkeiten
und wenn ihr dann jemanden findet,
der zufälligerweise von einer anderen IP
kommt, aber exakt die gleichen Merkmale aufweist,
da könnt ihr euch
relativ sicher sein,
dass das wahrscheinlich der gleiche User
ist.
Also es geht,
man kriegt das raus.
Und das ist auch eher das,
worauf sich Seiten verlassen, die wirklich
User tracken wollen.
Und die verlassen sich nicht
auf die Absender-IP oder nicht nur auf die
Absender-IP.
Twitter-Emojis,
doch unter Linux sind Twitter-Emojis sehr beliebt.
Guck hier, ich habe auch Twitter-Emojis unter
unter Linux.
Twimoji
ist eigentlich, wir müssen gerade mal kurz was gucken,
Twimoji,
der Twimoji-Fork
ist der,
wie hieß der Twimoji-Fork?
Ich habe es vergessen.
Es gibt nämlich
den neuen Twimoji-Fork.
Hat irgendjemand eine Ahnung?
Ja, das hier, da ist er doch.
Twimoji-Fork.
2015 ist der immer noch nicht drin.
Es gibt nämlich einen Twimoji-Fork,
der auch die neuesten Unicode-Emojis
unterstützen wird.
Warum ist das notwendig?
Weil Twitter
alle, die an diesem Emoji-Fond gearbeitet haben,
entlassen hat.
Dementsprechend gibt es
keine Updates mehr für
für Twimoji.
Und wir haben kein Unicode-15.
Aber,
ich meine, die haben immer noch
kein Goose-Emoji.
Ich weiß nicht, wie es da aussieht.
Aber es sieht so aus, als hätten die
immer noch einige Emojis nicht drin.
Ja.
Ist halt blöd, ne?
Wenn Twitter die alle
rausschmeißt.
Guck mal, zuletzt im Januar aktualisiert.
Da wird es keine Updates mehr so geben.
Ohne weiteres.
Ad-Support Unicode International
gibt es nicht mehr.
Also, das ist halt
auch so ein Ding.
Ja, und damit kann man theoretisch auch Sachen rausbekommen
über den User, wo wir gerade
dabei sind.
Du hast einen Denkfehler.
Emojis werden auf dem Client gerendert.
Ja, das ist ja gerade das Ding.
Das ist ja auch der Grund, warum das funktioniert.
Ja, das ist richtig.
Aber das ist kein Denkfehler.
Das ist Voraussetzung dafür, dass das überhaupt funktioniert,
was ich gerade beschrieben habe.
Der Client muss das rendern.
Du willst ja auch was über den Client rauskriegen und nicht
über deinen Server.
Du hast die Ausbildungsstelle gekriegt.
Exzellent.
Das ist...
Ja, eigentlich auch.
Jetzt gibt es sogar mehr Geld, ja dann.
Das ist die beste Kombination.
Ja, es gibt noch ein paar andere Möglichkeiten,
aber Canvas ist, glaube ich, das beliebteste.
Ja gut, Javascript komplett blocken
ist halt nicht praktikabel, weil kaum eine Webseite
noch funktioniert ohne Javascript.
29 Monate.
Exzellent.
Max ans Trinken erinnern.
So, jetzt...
Ich weiß, ich habe mich jetzt sehr lange sidetracked lassen
von diesem Video hier.
Aber ich hoffe,
es hat euch trotzdem interessiert.
Ich denke, es war für die einen oder anderen was Spannendes dabei.
Exzellent.
Weiter geht's.
Oh, oh, oh, jetzt hier.
Javascriptchen.
Hat eine gute Möglichkeit,
eine gute Sammlung.
Ja, es gibt einige Seiten, die sowas haben,
aber die kann ich jetzt hier nicht im Stream aufmachen,
weil die dann auch solche Sachen leaken wie
IP und alle möglichen Dinger,
die ich vielleicht jetzt nicht so unbedingt
public haben will.
Ja.
Ja, danke für die Subs.
Wir hatten das Glück gehabt und wer hat gedodged?
Gutbeutel. Ja, der hat schon mal...
Der sackt alles ein, oder?
Der Cartman Nuxa
Bags vor... Ach, guck mal.
Hat er Glück gehabt. Der ist erst seit ein paar Tagen hier im Stream
und gleich schon, gleich schon
den Sub gecatcht.
Phaseron, der ist öfters da. Den kenne ich vom Namen her.
Der stellt's dir öfters rum.
Und die Gartenkralle
ist auch am Start. Danke für den Sub.
Exzellent, exzellent.
Okay, gucken wir das Video mal weiter.
Next.
Lack.
Lack-Champ.
Ja.
Naja, die Informationen vom...
Wie gesagt, ich hab schon angehört, ich werde meckern.
Die Informationen vom Server werden natürlich nie
direkt in ein Bild umgewandelt.
Ja, Blödsinn.
Ist ja nicht so, als würde der Server euer Game rendern.
Aber wir wissen, was gemeint ist.
GS Paul, danke schön für den Sub.
Spiele laufen auch zum größten Teil
über UDP.
Er meint nicht, dass das Paket neu angefordert wird.
Er meint, dass das Game sich irgendwas ausdenkt,
was Sinn macht.
So nach dem Motto, ich hab als letzte Information,
der Character läuft gerade mit diesem Speed
in diese Richtung,
dann füllt er einfach das hier auf mit
der Character läuft halt einfach weiter in diese Richtung,
bis ich die nächste Information kriege.
Wenn das natürlich zu oft passiert,
kann man sich vorstellen,
dann ruckelt's halt ein bisschen rum.
Ruckeln ist ja nicht lag,
aber ihr wisst, was ich meine.
Dann füllt er das auf,
Character läuft weiter in die Richtung,
Character läuft weiter in die Richtung,
und irgendwann kommt dann wieder ein Package vom Server durch,
wo drin steht, Moment, der ist gar nicht weiter
in die Richtung gelaufen, sondern in die Richtung,
und dann macht's dann auf einmal,
läuft weiter, läuft weiter, läuft weiter,
jetzt ist er auf einmal da unten.
Also, ja,
das stimmt schon, was der hier erzählt hat.
Ja, das stimmt schon, was der hier erzählt,
das ist eigentlich ganz gut dargestellt.
Ja.
Ja.
Ja.
Das ist halt, das ist so ein bisschen was,
wo sich das die letzten Jahre über,
die letzten Jahre ist jetzt übertrieben,
ist schon deutlich länger,
sich ein bisschen verschoben hat, ja.
Früher war Server State,
das, sagen wir mal so,
das, wie der Server die Dinger gesehen hat,
das einzig wahre.
Könntest du das Video reinposten?
Ja.
Städtisch gemacht. So nach dem Motto,
da wurde hingeschossen,
Server guckt, ist der Typ bei meinem State gerade
da? Nö, vorbeigeschossen,
obwohl du drauf warst.
Man ist jetzt ein bisschen da hingegangen, das alles etwas
großzügiger zu machen.
Nämlich, dass da nicht nur übermittelt
wird, so nach dem Motto, ja, ich habe da oder
hingeschossen, sondern, vielleicht auch noch,
ich habe da oder hingeschossen, und bei mir
habe ich getroffen. Ja, und dann kann
der Server dann entscheiden, okay,
wie groß ist die Latenz, will ich das noch beachten,
will ich das nicht beachten und das war so die Verschiebung, die wir die letzten
zehn Jahre über gesehen haben, auch so ein bisschen von reinem Serverseitigem
State zu, ja immer noch, Master Server muss letztendlich entscheiden, was Sache
ist, aber auch mit Client-Side-Hit-Detection immer mehr, immer präsenter.
Was dann schon das Spiel auch für Leute mit bisschen höherer Latenz besser
spielbar gemacht hat, aber es noch mehr dazu geführt hat, zumindest wenn das
übertrieben wurde, wie da noch Sachen akzeptiert wurden, für teilweise, ich bin
schon um zwei Ecken und auf einmal werde ich zurückgeportet und gekillt.
Es gab ja zwischenzeitlich, wenn es übertrieben wurde, sogar mal Spiele, da
hattest du einen Vorteil, wenn du mit 400er Ping spielst und sowas, das sollte
dann nun wirklich nett sein.
Wenn ich also auf wen schieße, dann soll direkt zu sehen sein, was passiert.
Ja gut, Lag-Switches war nochmal was ganz was anderes.
Lag-Switches sind eigentlich so Dinger, die sollten eigentlich gar nicht
funktionieren. Also die ursprünglichen Lag-Switches in Call of Duty
waren ja wirklich teilweise Hardware-Modifikationen, die das Kabel zum
Empfangen von Daten unterbrochen haben und das vom Senden von Daten
quasi intakt gelassen haben. So nach dem Motto, ich kann senden, wie ich mich
bewege und wie ich Damage mache, ich kann aber keine Damage auf mich mehr
empfangen. Dass sowas überhaupt geht, ist schon eine Fail-Implementierung
sondergleichen.
Ja, zumindest war das in Call of Duty damals so.
Ja.
Also es gab damals zu Xbox-Zeiten tatsächlich reale, reale physische Lag-Switches.
Dass das überhaupt funktioniert, ist halt schon bescheuert.
Das funktioniert prinzipiell nur bei UDP-Packages, aber selbst das könnte man
easy verhindern. Du könntest zum Beispiel irgendwelche Server-Messages
einbauen, auf die dein Client replyen muss und wenn er so und so viele Replies
verpasst, dann wird er nicht mal beachtet. Also man kann da durchaus
Sicherheitsmechanismen, aber das hatte Call of Duty halt damals, gerade
als es halt noch diese irgendeine Xbox-Hosted-Variante hatte,
konntest du halt komplett vergessen. Das waren Zeiten, da waren physische
Lag-Switche tatsächlich ein Ding.
Trotzdem solltest du immer, wenn ihr Head-on-Head ballert, ja, gewinnen.
Wenn es gescheit gemacht ist.
Und ein Spieler mit hohem Ping dich trifft auf seinem Bildschirm, dann wird
der Hit registriert. Egal, wo du tatsächlich bist. Damit das nicht zu
heftig wird, haben einige Spiele hier ein Limit. Ich glaube, Overwatch hat es
glaube ich ab 100 oder 150 Millisekunden Zeit registriert wird, sondern Server-Side.
Das bedeutet, wenn du in manchen Spielen einen sehr hohen Ping hast und scheinbar
zwar triffst, registrieren deine Schüsse einfach nicht. Um zu treffen, müsstest du
an die tatsächliche Position des Gegners laut Server-Daten schießen. Also
eigentlich ein bisschen vor dem Gegner. Das Video ist wirklich nicht schlecht gemacht.
Muss ich jetzt mal sagen. Wie gesagt, ich habe es schon angekündigt, ich werde ein bisschen meckern.
Das Video ist nicht schlecht gemacht. Kannst nichts sagen. Also, die haben sich
wirklich Mühe gegeben, das so zu verpacken, ohne jetzt so übertriebenen
Blödsinn zu erzählen, um es gar so krass zu vereinfachen. Ist vollkommen in Ordnung.
Also kann man sagen, ist Wobblers approved. Und wer jetzt glaubt, es ist unfair mit hohem
Ping zu spielen, weil ja Leute... Ich weiß, Ragnar, deswegen habe ich ja gesagt,
ich werde jetzt ein bisschen meckern. Aber insgesamt ist das echt nicht schlecht gemacht.
Du schon weg bist, dann denk mal umgekehrt. Wenn ihr diejenigen seid, die zuerst um eine
Ecke kommen, dann seht ihr den High-Ping-Spieler lange, bevor er euch sieht. Ihr könnt den ersten
Schuss abgeben, bevor ihr überhaupt am Bildschirm des Gegners erscheint. In Valorant ist es zum
Beispiel tatsächlich so, dass der Spieler mit dem besseren Ping den Kill macht, wenn beide
gleichzeitig schießen. Ja, finde ich aber auch irgendwo sinnig. Klar, kannst du sehen, in Overwatch
haben sie es auch ein bisschen gebuffert und alles. Aber ich finde, es sollte irgendwie so sein. Weil
ganz im Ernst, die Leute sollen halt auch auf dem Server spielen, wo sie gescheite Connection zu
haben. Ja, wenn wir hier im Bereich von 50 Millisekunden reden, also sage ich nichts
dagegen. Aber wenn er es teilweise dann auf 300 Millisekunden raucht, das kann es nicht sein.
Ja, das fühlt sich scheiße an.
Der eigentlich korrekte Input des High-Ping-Spielers wird einfach durch den Ton...
Ich kann gerne mal ein Video machen, das noch tiefer geht. Nee, kann ich nicht, weil erstens
müsste ich mich dann selbst viel zu sehr in der Tiefe damit zu beschäftigen, da hätte ich auch
keinen Mist erzählen. Und zweitens sind solche Videos enorm aufwendig. Und da bin ich zu faul
für, weil solche Videos auch kaum geguckt werden, witzigerweise. Das ist halt so ein bisschen das
Dilemma, was man auch mit Technik-Videos auf YouTube hat. Wenn man wirklich gute,
tiefgreifende Erklärvideos macht, die werden oftmals im Verhältnis von Aufwand zu Leuten,
die das gucken, viel weniger geschaut. Natürlich könnte man jetzt sagen,
ich mache das trotzdem, aber ich glaube, da bin ich zu faul für.
Gecancelt. Manche Spiele machen das aber auch anders.
Neues Video. Ich habe es schon hochgeladen. Als nächstes habe ich einen Zusammenschnitt
anfertigen lassen über den Half-Life-Speedrun, den wir geguckt haben. Den werde ich als nächstes
hochladen. Geht 38 Minuten. Und danach muss ich tatsächlich mal was über Battlefield 6 Season...
Battlefield 2042 Season... Nein! Battlefield 2042 Season 5 und das Season 6 Ankündigung erzählen.
Meine Güte.
... Spielern gekillt werden, die eigentlich schon tot sind. Auf all den Lag, den wir bisher hatten,
kommt aber jetzt noch eine letzte Sache drauf. Die Geschwindigkeit, in der das Server selbst
updatet, beziehungsweise Paketempfänger... Ich dachte, jetzt wird das sowas wie Tickrate
oder sowas haben. Ich dachte, jetzt kommt noch Input-Lag oder sowas mit dabei. Weil dann wäre
es echt abgedreht geworden, wenn jetzt noch sowas kommt wie Refresh-Rate vom Bildschirm,
Rendering, Maus-Input und so weiter. Da kannst du eine komplette Wissenschaft draus machen.
... und wieder schickt. Ihr kennt das vielleicht als Tickrate. Manche Games geben es aber auch
einfach in Hertz an. Das ist die Zeit, die der Server braucht, um alle Pakete zu öffnen,
die Infos zu sammeln, beziehungsweise miteinander abzugleichen und wieder an die Spieler loszuschalten.
Normal sind heutzutage Tickrates von 64 Millisekunden oder bei manchen Games auch
als 60 Hertz bezeichnet. Das sind 60 Pakete pro Sekunde und damit 16,66 Millisekunden
zwischen jedem Paket als zusätzlicher Lag. Das heißt, ihr bekommt nur alle 16,6 Millisekunden
ein Paket geschickt und die Zeit bis zum nächsten Paket ist zusätzlicher Lag, denn da passiert nichts
Neues. Wird die Tickrate weniger, zum Beispiel 30 Hertz, kommt dementsprechend mehr Lag und Top für alle dazu.
Aber da geht es eigentlich um wenige Millisekunden. Viele meinen zum Beispiel, dass ein Upgrade von
64 Tick auf 128 Tick alles besser machen würde und die haben zwar schon recht, allerdings halt nur ein wenig recht.
Naja, das kommt drauf an. Es hat manchmal auch Auswirkungen darauf, wie das Spiel selbst Sachen
interpretiert. Also ich weiß nicht, ob es in CS immer noch so ist, aber ich weiß, dass es definitiv
in CS mal so war, dass bestimmte Movement Tricks gar nicht möglich waren mit der normalen. Ich habe mal ein Video
geguckt von irgendeinem Pro, der das gezeigt hat. Der hat gezeigt, dass manche Movement Tricks,
irgendwelche Sprünge von irgendeinem Autodach auf irgendeinem Mauer und sowas, dass die mit der
normalen Matchmaking Tickrate gar nicht möglich sind oder nur sehr unreliable möglich sind,
aber mit 128 Tickrate tatsächlich relativ konsistent ausgeführt werden können. Also macht
schon einen Unterschied. Also es kommt ein bisschen darauf an, wie das Spiel das am Ende sich verhält.
Natürlich auf den ersten Blick macht es jetzt nicht so den krassen Unterschied und ich würde auch sagen,
je nach Game ist es auch nicht wirklich. Also zum Beispiel, ob jetzt ein Battlefield mit 64 Tick oder
mit 128 Tickrate läuft, naja, das ist wahrscheinlich nicht so der große Unterschied. Battlefield ist
ja auch was, wo es weniger jetzt dieses 1-on-1 auf den Kopf geklickt gibt. Das ist wahrscheinlich
nicht so das Ding. Und man hat es bei Venice gesehen, dass es gab 128 Tickrate Surfer, die hatten
aber ultra CPU Anforderungen wohl. Es ist immer sinnvoll, so viel FPS zu haben wie möglich. Also
erst mal zumindest bis zu deiner Monitor Refresh Rate, aber selbst da drauf macht es noch Sinn.
Also eigentlich ist mehr FPS immer besser.
Und ansonsten FPS und Tickrate, gut, nachdem dein Monitor nicht gesunkt ist mit der Server Tickrate,
also umso mehr FPS, umso besser. Warum High Refresh Max FPS? Naja, also das ist ein ähnlicher Grund,
das ist ein ähnlicher Grund, wie das es bei 60 Hertz Monitoren auch sinnvoll macht,
die sinnvoll ist, durchaus die Spiele in höhere Framerate zu rendern. Also erstens ist das ja
nicht gesunkt aneinander. Nur weil ein Server mit 60 Manisekunde Refresh und euer Game 60 Manisekunde
das Bild neu aufbaut, ist das ja nicht gesunkt. Wie soll das auch gehen zwischen 32, 64 Spieler.
Und umso schneller jetzt euer lokaler FPS und auch lokale Refresh Rate vom Monitor ist, je früher
seht ihr natürlich auch ein Update. Weil es kann ja trotzdem sein, dass gerade bei euch der Refresh
durch ist und jetzt neue Informationen vom Server kommen und dann müsst ihr auf den nächsten Refresh
warten. Unabhängig davon. Also wie gesagt, das ist ja nicht direkt gesunkt. Und so ist es auch, wenn
ihr euer Game schneller rendert, als euer Monitor anzeigen kann. Wenn euer Game schneller rendert,
als der Monitor anzeigen kann, dann ist euer Game State quasi schon aktueller am Zeitpunkt dran,
am echten Zeitpunkt dran, wenn der nächste Monitor Refresh kommt. Also das macht schon Sinn,
dass in der Regel mit low Graphics und so viel FPS wie möglich. Das macht eigentlich fast immer
Sinn. Also gerade in Spielen, die Multiplayer sind, die ein bisschen competitive sind, da würde ich
auch sagen, wie Battlefield, darunter zählen. Mehr FPS ist in der Regel immer besser. Pauschal,
kann man das eigentlich so sagen.
Ich recht, denn der Unterschied ist wirklich, wirklich gering. Ungefähr 7 Millisekunden hätten
wir dadurch weniger Lag. Ob das wirklich viele Probleme löst? Naja, zumindest ein paar kleine
Probleme. Oder durchschnittliche Probleme. Dass wir also manchmal hinter der Deckung gekillt werden
oder unsere Shots, wo wir eigentlich drauf waren, nicht zählen, ist einfach notwendig,
damit überhaupt online sinnvoll miteinander gespielt werden kann. Die Verzögerungen sind
teilweise naturgegeben wegen der Geschwindigkeit, in der Daten nun mal maximal von A nach B kommen
und teilweise künstlich, damit auch die Spieler Spaß haben können, die nicht zufällig direkt
neben dem Gameserver sitzen. Aber wir haben eine interessante Idee bekommen, durch eine neue
Technologie, die momentan nur in Fighting Games verwendet wird. Dort wird die Zukunft vorhergesagt,
um Lag zu eliminieren. Ja, wirklich.
Moment, ich dachte, ich dachte, das geht nur bei Google Stadia, Negativ-Latency.
Wie, das können andere jetzt auf einmal auch? Was, glaub ich nicht. Aber solche Prediction-Sachen,
also ich würde, ich würde mal behaupten, dass Fighting Games, also gut, in Fighting Games bietet
sich es wahrscheinlich an. Es ist ganz klar, One-on-One und das Moveset ist irgendwie begrenzt
und das, was passieren kann, ist begrenzt. Also dieses Zukunft-Predicten, dass es in Fighting Games
angewandt wird, wundert mich jetzt nicht. Aber ich würde mal behaupten, das ist nicht das Einzige,
wo man zumindest so Sachen in der Richtung schon probiert oder probiert hat.
Stellt euch mal vor, es gibt ein Delay auf eine Animation eines Schlags. Wenn euer Gegner dann
wirklich die ganze Animation erst verspätet sieht, wird das Ganze unmöglich zu spielen.
Aber was, wenn man einfach den Delay vorne von der Animation abschneidet und sie mittendrin
beginnen lässt? Klingt komisch, sieht man aber im Full-Speed überhaupt nicht. Dieses System nimmt
außerdem vor den Inputs den nächsten wahrscheinlichen Schritt an und zeigt ihm den Gegner.
Momentan nimmt das System einfach an, dass das, was man gerade macht, auch das nächste ist,
was man macht. Das heißt, wenn ich gerade stehe, nimmt das Game an, dass ich auch im
nächsten Frame noch stehe. Klingt sehr simpel, ist aber bei Fighting Games ein Game Changer.
Was wir jetzt in den Raum stellen, ist, dass mit der aktuellen Entwicklung von AI das auch bei
allen anderen Games möglich sein könnte. Könnte eine AI sinnvoll? Also den Zusammenhang würde
ich jetzt erst mal nicht sehen so richtig. Und mit guter Trefferquote die nächsten Schritte
der Spieler vorhersagen? Könnten wir dann, auch wenn es im Hintergrund Lag gibt,
ihn optisch fürs menschliche... Also ich sehe den Zusammenhang zwischen AI und...
...weiß nicht...
...weniger AI, was wir uns jetzt in Form von Chat-GPT vorstellen...
...was ja immer um Sachen geht, die schon passiert sind. So dieses Zukunftsvoraussagen, klar. Ich meine,
guckt euch mal an, wie Schachcomputer und Schachprogramme seit Jahrzehnten funktionieren.
Da wird versucht, die Zukunft vorauszusagen. Also umso mehr die, ich glaube Zugtiefe nennt
sich das dort, umso besser ist so ein Schachprogramm. Ja, das ist theoretisch sicherlich
auch in vielen anderen Games möglich, aber das muss ja immer noch on the fly für den aktuellen
State irgendwie berechnet werden. Du wirst nie eine komplette Partie Battlefield komplett lösen
können. Also komplett lösen würde ja bedeuten, du hast den State, den eine Partie Battlefield
haben kann. 32 vs. 32 Caspian Border. Wenn du das komplett lösen würdest, bedeutet das,
sobald das Spiel anfängt, bis zum Ende des Spiels, du hast alle nur erdenklichen Kombinationen
im Vorfeld ausgerechnet. Und das geht offensichtlich nicht bei einer Partie Battlefield.
Jede kleinste Pixelbewegung von jedem der Spieler, jede Aktion, das zieht eine
Trillionenfache andere Möglichkeiten nach sich. Also das kannst du nicht im Vorfeld komplett
durchrechnen. Es gibt Spiele, das geht das. Ich glaube Mühle ist komplett gelöst. Also 4
gewinnt ist auf jeden Fall komplett gelöst, das weiß ich. Ich glaube Mühle auch. Also sprich,
es ist jede nur erdenklich mögliche Spielstate bekannt und analysiert und man weiß immer,
wie man 100% perfekt spielt. D.h. daraus kannst du dann auch z.B. ableiten,
wie weißer Spieler gewinnt immer. Aber ich meine zwischen 4 gewinnt und einer Runde 32 vs. 32
Battlefield Caspian Border gibt es halt ein bisschen mehr States oder Möglichkeiten,
was passieren kann. Also dass man eine komplette Runde Battlefield im Vorfeld
schon komplett prediktet hat, ist eigentlich nahezu unmöglich.
Bei Fighting Games sieht das allerdings schon ein bisschen anders aus. Fighting Games sind
natürlich deutlich weniger, also selbst Fighting Games kannst du nicht komplett predikten. Aber
Fighting Games, es sollte glaube ich offensichtlich sein, dass die möglichen Züge, nennen wir es mal,
in einem Fighting Game deutlich geringer sind die Anzahl als beispielsweise 32 vs. 32 Battlefield.
Wie schaut es mit MMOs aus? Ups, MMOs ist ein schlechtes Beispiel dafür,
weil MMOs in der Regel tatsächlich synchron sind. Vielleicht mittlerweile nicht mehr so krass wie
früher, aber MMOs sind ziemlich synchronisiert. Also sprich, du hast Server Tics und anhand dieser
Server Tics passieren Dinge. Ja natürlich, Clients interpolieren das noch ein bisschen,
dass es flüssiger, flüssiger aussieht alles. Aber in MMOs ist es auch so,
dass wenn ich sage, hey ich baue jetzt hier irgendwie ein bisschen Eisenerz ab,
dann passiert das einfach nicht. Wenn der Server mit dem nächsten Tic nicht sagt,
du baust jetzt Eisenerz ab. Und das ist ja auch der Grund, warum MMOs jahrelang so träge waren.
Erinnert sich noch einer an die früheren MMOs von Tab-Target-Ding und einzelne Ziele auswählen
und dann Input drücken und der Spell wird gecastet und so. MMOs waren und sind auch immer noch bis auf
ein paar Ausnahmen sehr gemächlich. Und das liegt daran, weil MMOs mehr oder weniger synchronisiert
laufen für alle Spieler. Es gibt mittlerweile schon ein paar Games, die das trickreicher machen
oder in den letzten Jahren auch über mehr oder weniger so interaktive Kampfsysteme haben
im MMOs. Aber insgesamt kann man sagen, sind MMOs immer noch deutlich gemächlicher und träger als
beispielsweise jetzt in Battlefield. Und das liegt mit daran, weil MMOs ziemlich synchronisiert
laufen. Das ist halt auch eine der Eigenschaften von MMOs. Okay, was haben wir denn hier sonst noch
Interessantes? Overwatch 2 fällt auseinander. Was haben wir sonst noch hier? Volle Konzentration
Mitternacht. Apple Vision Pro angeschaut. Bei diesem Ding bin ich ja auch skeptisch. Ich meine,
es ist halt eine 3D-Brille. Auch wenn Apple das irgendwie super krass nicht... Die nennen es...
Apple nennt das Ding ja nicht Virtual Reality Brille, sondern Spatial Reality. Apple hat da
wieder so ein ganz geiles Wort dafür empfunden. Aber im Endeffekt ist es halt eine VR-Brille.
Und ich weiß nicht, ob das so ein Ding ist, was sich so toll durchsetzt. Ja, es ist von Apple und
viele Leute kaufen Dinger, weil sie von Apple sind, aber es ist abfuckteuer. Ich weiß nicht,
ich bin skeptisch, ob das ein großer Erfolg wird, das Ding. Volle Konzentration. Ich flamer
noch ein bisschen über Overwatch mal schnell. Das ist auch so ein Thema. Also ich flamer ganz
gerne über C++ und ich flamer auch ganz gerne über Overwatch. Es ist wieder Zeit, über meine
Lieblingsvideospielfirma zu reden. Nachdem Overwatch seit Jahren in einer ziemlichen
Abwärtsspirale war, hat man sich gedacht, man reißt das Ruder rum mit einem zweiten Teil.
Ein komplett neues Spiel, viele Neuerungen und unfassbare... Komplett neues Spiel, ja. Das war
wohl nix. PvE wird es nicht geben und der Multiplayer ist halt erst mal der Overwatch
Multiplayer zu 90 Prozent, wo man halt jetzt endlich mal wieder ein paar Erweiterungen bringt,
was man ja jahrelang hat schleifen lassen für Overwatch 1. Und ja, man hat die Grafik ein
bisschen verbessert. Und der Rest ist ja halt mehr Microsoft, Microsoft Transaction heavy.
Spielspaß. Nur, dass es kein komplett neues Spiel ist, es auch keine vielen Neuerungen gibt und den
Spielspaß können wir vielleicht irgendwie einklammern. Es ist viel um dieses Sequel
passiert und wir schauen uns mal an, wieso die reinste Existenz davon ein ziemliches Mess ist.
Ein ziemliches Mess ist das auch ein geiler Satz, Alter.
Bevor wir anfangen, erstmal eine schnelle Brief History zu Overwatch 1. Als das Spiel 2016 raus
gekommen ist, waren alle gehypt und glücklich. Ich wusste, dass er das sagt. Ich auch. Und ich
habe das, glaube ich, so krass gegrindet wie kaum ein anderes Game die letzten Jahre über. Ich habe
das, ich habe das bestimmt zwei Jahre am Stück einfach nur 24, nein, 24 sieben nicht. Ich musste
immer noch arbeiten gehen, aber jede freie Minute gespielt. Mit Heroes und Abilities gab es in der
Form vor allem. Ich meine, ich war Level, keine Ahnung, 400 oder so in der Beta allein schon.
So gut noch nie und eine riesige Community hat sich angefangen, um dieses Spiel zu bilden. Große
Persönlichkeiten schossen um dieses Spiel herum aus dem Boden und nicht lange nach Release hat
sich die Overwatch League gebildet. Overwatch League ist auch so ein Ding, ich fand es nie gut.
Von Anfang an nicht. Das System. Ich weiß jetzt nicht, ob ich da ausholen soll, aber zwei Sachen.
Erstens, dass es quasi egal ist, ob du gut oder schlecht warst, weil es keinen Aufstieg und Abstieg
gibt und das geht mit dem nächsten zweiten Punkt einher. Es gibt keine Tier 2 Szene. Dadurch,
dass es nur Overwatch League und nur den Fokus auf Overwatch League gibt. Ich weiß, dass es eine
Tier 2, Tier 3 Szene gibt, aber niemand interessiert sich dafür. Wer hat schon mal Contenders von euch
geguckt? Und selbst wenn du Contenders gewinnst, heißt es ja nichts. Das heißt nicht, dass du
dann aufsteigst mit deinem Team in die Overwatch League. Du kannst Werbung für dich machen, dass
dein Team auseinandergerissen wird, weil manche Spieler halt von Overwatch League Teams gekauft
werden. Das ist alles. Also ich fand das Overwatch League System nicht gut. Von Anfang an nicht. Und
der Fokus darauf, dass du im Prinzip kein Tier 2, Tier 3 hast und auch keine Competition so richtig
sinnig in dem Game hast, außer eben Overwatch League. Die haben sehr viel, also gerade was
eSport vergeht, die haben unglaublich viel verschenkt. Dadurch, dass Overwatch League so gepusht wurde,
gab es dann irgendwann quasi auch, das weiß ich nicht, ob es wirklich das Verbot war, aber es wurde
anderen Anbietern sehr schwer gemacht, Overwatch Turniere zu bringen und irgendwann hat auch die
ESL sogar die Weeklys eingestellt und sowas. Hey, wir waren immerhin mal deutscher Weekly-Gewinner
damals. Wir waren im Vergleich zu internationalen Teams nie wirklich gut, muss man auch
Fairness halber sagen. Aber ich würde sagen, wir haben damals Overwatch schon ganz brauchbar
gespielt, ja. Aber es gab halt irgendwann, es gab auch keine richtige Competition mehr. Es gab
Overwatch League und spätestens seit Overwatch League gab es sonst nichts anderes mehr. Und Tier 2 juckt
keine Sau, Tier 3 gibt es nicht und die haben auch viel verschenkt in Overwatch selbst. Warum, und das
frage ich mich bis heute, warum hat man nicht versucht... Ich meine, Overwatch wollte von Anfang an
ja irgendwie schon ein bisschen ein eSport-Game sein, ja. Warum hat man nicht um diesen Ranking-Modus
was aufgebaut? Warum gab es nicht automatisch erstellte Weekly-Turniere, die promotet wurden intern
für die jeweilige Liga, in der du gespielt hast? Oder warum gab es nicht irgendwelche, sagen wir,
automatischen Top-100-Aufstiegsspiel-Irgendwas? Du hättest so viel automatisch generierten Content
in den Overwatch-Ranking-Modus einbauen können, der halt ein gewisses Competition-Level schafft,
eben auf allen Bereichen. Weil so war es einfach nur toxic as fuck. Jeder dachte, er ist nur in der
jeweiligen League, weil seine Teammates scheiße sind, hat die ganze Zeit rumgeflamed, ähm, hat GG
nach zwei Sekunden, wenn der erste Push nicht funktioniert hat. Es war einfach nur von Arsch, wie sie
das gemacht haben. Es war auch viel zu roh, es gab drumherum auch nix. Das Einzige, was es gab, Top-500-Badges,
ja geil, da kann ich mir jetzt was davon kaufen, da ich Season 1 Top-500-Badge hab. Oder was heißt
davon kaufen, ist das falsche Wort. Das war das Einzige. Die hätten Competition auf jedem Level schaffen
müssen. Und auch automatisch generierte Turnierbäume. Du hättest so viel, du hättest so viel machen können
mit Competitive Overwatch. Auf allen Ebenen. Aber sowas wie FaceIt oder sowas, das ist natürlich undenkbar
mit sowas wie ner Overwatch-League, wenn das irgendjemand anderes Competition-E-Sport-Sachen machen
darf aus Blizzard selbst. Es ist scheiße gemanagt worden. Das fuckt mich heute auch immer noch richtig ab.
Das hatte so viel Potenzial und irgendwann haben sie einfach gar nix mehr gemacht. Irgendwann haben sie
auch einfach gar nix mehr gemacht. Gab's halt einfach nix Neues mehr. Ab und zu gab's noch n' Comic, ja super.
So, und eines der größten Probleme für Leute, die jetzt nicht, ähm, da irgendwie den harten Overwatch-Rankgrind
gemacht haben, wie wir damals, sondern die einfach nur Overwatch Just for Fun gespielt haben oder bisschen Ranked
ab und zu und dann irgendwie, was weiß ich, mal irgendwie Diamond gepiekt sind oder sowas. So, ähm, was für die
beschissen war, und das muss man sagen, das ist heute zum Teil immer noch so, Overwatch-League war nicht, nicht,
wie soll man, wie sagt man das auf Schottisch, so unwatchable, so, das war nicht richtig schaubar einfach.
Du hast nicht verstanden, was passiert. Zumal die auch jahrelang total bescheuerte Metas hatten.
Erinnert sich noch jemand an Goals oder erinnert sich noch jemand an die Beta, äh, Double Winston, Double Reaper
und so'n Geschiss? Die hatten teilweise monatelang, wenn nicht sogar, ähm, seasonslang Metas, die du nicht
gucken konntest in der, habt ihr mal einen Goals-Match gesehen in der Overwatch-League? Das war nicht schaubar.
Du hast nicht verstanden, was passiert. Du hast zwei Teams aufeinanderrennen sehen mit Tanks, die sich im Prinzip
die, die Körper eingeschlagen haben, bis irgendwo die Shields all waren, bis irgendwie einer mal ein gutes,
gutes, äh, Gravity Field, ich hab vergessen, wie die Saria-Ult heißt, äh, gesetzt haben und dann, und selbst,
das war nicht, das, das konntest du nicht gucken. Es ist nicht so, dass die Struktur hinter der Overwatch-League,
also unabhängig davon, dass mir das System nicht gefallen hat, dass das irgendwie so wahnsinnig schlechter
oder irgendwie die Events schlecht organisiert waren oder sowas. Das Spiel, das Kern, der Kern eines Turniers
war scheiße zu gucken. Und wer guckt sich ein E-Sport an, wo das vielleicht gut organisiert ist, aber der Kern des
Ganzen, nämlich die Matches, scheiße zu gucken sind. Niemand, niemand guckt sich das große an.
Die ersten paar Overwatch-Leaks waren auch echt gut, äh, gut besucht, ja, ähm, zu, äh, auch als das noch neu war
und es noch einen richtigen Hype hatte und man auch noch so ein bisschen dieses Korea vs. NA vs. EU-Player und so hatte, ja.
Aber danach, das ging rapide runter, das ging wirklich zzzzzzzzzppp. Das war fast so wie die Zahlen von New World auf Steam,
ging da so runter mit den Viewern von der Overwatch-League. Und ja, die, die, die Overwatch-League hat sich vielleicht
am Anfang, äh, ist so vielleicht sogar besser gestartet, als man das erwartet hat, aber das ging rapide runter.
Und irgendwann sind die ja dann auch gewechselt von Twitch auf YouTube und ab dem Zeitpunkt habe ich keine Ahnung mehr,
wie Overwatch-Leak gelaufen ist. Ich habe nicht ein Match, legit Leute, ich habe, ich habe früher ab und zu noch geguckt,
aber seit es von Twitch auf YouTube gegangen ist, die Overwatch-Leak, nichts, nichts, ich habe nichts mehr davon verfolgt,
nichts mehr davon mitbekommen, nichts mehr geschaut. Das, das war für mich einfach nur dead.
So.
So viel zum Thema Overwatch-E-Sport.
Ihr, ihr merkt, das ist ein Thema, was mich immer noch ein bisschen aufregt, wie verkackt sie das haben.
Obwohl das Spiel unglaubliches Potenzial gehabt hat.
Ich will jetzt nicht weitergehen, warum ich denke, dass es so ist und so, das artet aus.
Moin, Moin Michael, 50 Billion.
Pogu.
Raum für Competitive Teams.
Es lief alles also ziemlich gut, bis alles auf einmal nicht mehr ziemlich gut lief und immer weniger Spieler Bock auf das Game hatten.
Es kamen immer mehr Charakter dazu, die das Game komplett auf den Kopf gestellt haben, wie Brig,
die komplett broken war, als sie rausgekommen ist.
Eine Sache, für die das Overwatch-Team bekannt war.
Das ist auch so ein Ding, ich muss da jetzt einfach nochmal reinkritschen.
Die neuen Helden, die rausgekommen sind, das muss man, okay, ich muss erstmal was Positives sagen dazu.
Moin, Hyper, Noob, Nob.
Ich muss erstmal was Positives dazu sagen.
Die Helden, die released wurden, und die Sachen, die released wurden, die waren zumindest meistens gut gemacht.
Ich finde nach wie vor, dass viele Maps in Overwatch komplett Banane, Pepega, wie auch immer man das nennen mag, sind.
Die wurden von Leuten erstellt, die noch nie, nennen wir es mal, tja, FPS kann man nicht wirklich sagen, nennen wir es mal FPS,
die noch nie FPS-Maps erstellt haben.
Die ersten Valorant-Maps, die ich gesehen habe, ich habe Valorant nie gespielt, waren auch,
okay, die ersten Valorant-Maps, die waren genau das Gegenteil zu den ersten Overwatch-Maps.
Die ersten Overwatch-Maps, die sahen gut aus, guckt euch sowas wie Kings Row an, finde ich heute immer noch eines der besten Maps,
die sahen gut aus, waren aber vom Gameplay her lahm.
So, die ersten Valorant-Maps, kann ich nur sagen aus Zuschauerperspektive, weil ich das Spiel nie gespielt habe,
die ersten Valorant-Maps waren handwerklich schlecht gemacht von der Optik her und wie die aussahen, aber spielerisch ganz brauchbar.
Das war das komplette Gegenteil.
Und Overwatch-Maps sind langweilig.
Das ist auch so ein Punkt, den habe ich damals nicht verstanden, wie die an diesem Map-Konzept immer dran festhalten konnten.
Die sind langweilig.
Overwatch-Maps bestehen in der Regel aus einem Weg.
Mit, wenn es hochkommt mal, einer oder zwei ab und zu Flanking-Routen, wo sich eine davon gar nicht lohnt.
Es gibt eigentlich in Overwatch immer einen Weg, den man läuft.
Und Overwatch-Maps, gerade die Payload-Maps, waren, und nicht nur die Payload, alle Maps, alle Maps, waren rein auf Choke-Points ausgelegt.
Temple of Anubis, du hast den Choke-Point nicht gehalten, erster Punkt war weg.
King's Row, du hast den, war weg.
Also Overwatch-Maps waren langweilig.
Die waren basiert auf einem klaren Weg, voll mit Choke-Points, wo du durch musstest.
Ich fand das Map-Design noch nie gut in Overwatch.
Bei den neueren Maps hat sich ein bisschen gebessert.
Und dann kamen noch so Spielmodus wie 2CP dabei.
Das war nicht nur bei vielen unbeliebt, das war, finde ich, auch ein richtiger Kack-Spielmodus.
Wie kommt man auf die Idee, Temple of Anubis, wie kommt man auf die Idee, einen Defender-Spawn direkt hinter den letzten Capture-Punkt zu setzen?
Da kommen diese komischen Overtime-Regeln dabei.
Und das war alles irgendwie nur mäßig, mäßig gut.
Getragen wurde Overwatch im Endeffekt durch die unterschiedlichen Helden und die Dynamik, die sich daraus ergeben hat.
Problematisch war, dass du oftmals mehr oder weniger das Gleiche auf beiden Seiten gespielt hast und das auf jeder Map bei jedem Match.
Obwohl es recht viele Helden gab.
Was dazu geführt hat, dass es einfach langweilig war.
Und in Kombination, dass du es nicht, du konntest es nicht gucken.
Du konntest Overwatch einfach, Overwatch eSport konntest du dir nicht angucken.
Du hast nicht verstanden, was passiert.
Das hast du bei den Castern gemerkt, die random Bullshit gelabert haben.
Ich hätte es nicht besser gekonnt, ja, keine Frage.
Weil ich hätte auch nicht verstanden, was passiert, außer ich hätte mitgespielt.
Und die Spectator und so, die waren alle komplett lost.
Also ich meine, ohne Mist, habt ihr euch mal zu Ghosts Zeiten Overwatch Matches angeguckt, ja?
Und Casts, im Prinzip war das reines, ich hype permanent durch im Cast.
So, oah, was macht der denn jetzt?
Oah, yay, Crypter, oah, nein, er hat überlebt.
Oah, jetzt kommt wieder was.
Oah, jetzt ist einer gestorben.
Die sind komplett ausgeflippt die ganze Zeit, weil die nichts zu dem Game sagen konnten.
Du konntest zu dem Game nichts sagen.
Vergleich das mal mit einem ordentlichen CSGO Cast.
Die können dir sinnvoll was zu dem Game sagen.
Erstens ist CS vielleicht auch ein bisschen einfacher zu observen, ja?
Du hast gute Observer, die verstehen wann, wie, wo was passiert, dass die kaum Engagements verpassen.
Oder kaum Trades verpassen.
Und die können dir das auch sagen in CS.
Ja, die können dir auch sagen, so nach dem Motto hier, was weiß ich, die Positionen misst der normalerweise nie.
Seine Sniper Shots und das hat er jetzt so gespielt, weil irgendwie der dritte Pixel von rechts von der Smoke Granate
nicht richtig den Balkon gecovert hat und sozusagen.
Das können die dir in CS erzählen.
Das konnte niemand in dieser Tiefe und sonst was zu Overwatch erzählen.
Das war halt einfach nicht schön zu gucken und das ging dann bergab.
Und das ist was, was mich heute wirklich noch aufregt, weil ich das Spiel gern gespielt hab
und das Spiel so unglaublich großes Potential hat, was man hier ausgeschöpft hat.
Ja, egal, weiter geht's.
War es auf jeden Fall nicht, ihr Spiel gut zu balancen.
Ja, ja gut.
Overwatch Balance ist typische Blizzard Balance.
Typische Blizzard Balance hab ich euch ja schon ein paar mal erklärt.
Typische Blizzard Balance gehen so, ja.
Also das hier ist OP und das hier ist Sucked.
Sucked.
So und Blizzard Balance war so.
Das ging nicht gescheit.
Entweder war was OP oder es war scheiße.
Ich will nicht sagen immer, aber in diese Falle sind sie halt oft getappt.
Ich würde sagen, ein Spiel, was man wirklich als gutes Beispiel
und da könnt ihr mir widersprechen, wenn ihr da richtig voll dabei seid,
aber rein wieder aus Beobachterperspektive und als jemand, der ab und zu ein paar Dota-Streams guckt.
Ich finde ein Spiel, wo man wirklich sagen kann, dass es balancing-technisch halbwegs auf die Reihe kriegt, ist Dota 2.
Ich gucke immer mal on-off ein bisschen Dota.
Ihr wisst, ich spiele eigentlich so gut wie keine MOBAs, ich spiele Dota auch nicht selbst.
Ich gucke mir beispielsweise die jährlichen offiziellen Turniere an, die es dazu gibt.
Und was man bei Dota sagen muss ist, die haben es irgendwie geschafft.
Klar, es gibt Meta-Picks, gibt es immer, aber die sind bei Dota doch relativ vielfältig.
Also wenn man sich beispielsweise mal anguckt, so die Hero-Picks über die letzten Turniermonate,
da wird man feststellen, die spielen halt nicht nur irgendwie 10 Helden oder so,
die spielen halt, keine Ahnung, vielleicht lasst es mal 25 Helden sein.
Klar, mein Dota hat massig Helden, viele von denen werden professionell auch nicht gepickt,
aber es ist vielfach besser, vielfältiger als das, was die Overwatch hinfabriziert haben.
Aber wenn 80 der 120 Heroes OP sind, spricht das doch schon mal für das Game, oder?
Aber selbst im E-Sport-Bereich, ich weiß nicht, wie die Pick-Rates sind,
aber ich glaube, so um die 30 Heroes oder so wurden gepickt.
Ich habe letztens mal so eine Tabelle gesehen und das ist ja schon wirklich sehr vielfältig
im Vergleich zu dem, was man in Overwatch gesehen hat.
In Overwatch hast du die gleichen 6 Helden, wirst die gleichen 6 Helden jede Runde, jedes Match gehabt.
Kam viel zu oft vor, dass es bestimmte Metas gab und wenn man irgendwas außerhalb dieser Meta gespielt hat,
wurde man komplett gefickt.
Die GOATS-Meta war lange ein Bestandteil vom Daily-Business in Overwatch.
Man hat statt DPS, Healer und Tanks einfach nur noch Healer und Tanks gespielt, weil wer braucht so ein DPS?
Ach ja, ich habe eine Sache noch vergessen zu sagen.
Ich muss jetzt tatsächlich ein bisschen über Overwatch meckern,
weil ich sagen wollte, ich wollte ja noch was Positives sagen.
Ich fand, neben dem, was ich eben gesagt habe, die Helden, die sie eingeführt haben,
alle immer gut, rein von der Idee hinter den Helden.
Das Problem mit den neuen Helden war, die sie eingeführt haben,
dass das meistens, nicht immer, aber das waren so Helden,
Helden, die waren mega stark mit einfachen Abilities.
Also hast du zum Beispiel sowas wie Brigitte.
Du stellst dich vor den Gegner, drückst den Knopf, der ist gestunt.
Dazu musstest du nichts machen.
Bei McCree mit dem Flashbang musste er zumindest noch am Schild vorbei werfen.
Du bist hin, du hast dein Schild gehabt, du hast den Gegner gestunt.
Du musstest einen Knopf drücken, den Gegner zu stunten.
Das war Counter zu nahezu allem, was es in dem Game gab.
Und es war easy, als Fuck zu spielen.
Du musstest es auch spielen, obwohl es eigentlich gar keinen Bock gemacht hat.
Ich bin ja immer noch der Meinung, hier, bestes Overwatch-Grill und so.
Aber die Mechanik, das war voll für den Arsch.
Und es gab einige solche Helden.
Maids to the Face, genau.
Es gab einige solche Helden.
Es gab so Sachen wie Doomfest, das ist ein bisschen rausgefallen.
Das war halt auch lächerlich zwischenzeitlich.
So mit Aufladen und quer durch die Map dashen und alles so wegklatschen.
Aber Doomfest gut zu spielen war schon nicht einfach.
Konnte ich nie.
Aber so Sachen wie Breach, das muss einfach nicht sein.
Und das Problem bei Overwatch war halt, das war dann erstmal ein Dreivierteljahr im Game,
bis Blizzard auf die Idee gekommen ist, man könnte ja mal was dran ändern.
Man hatte quasi unendlich Leben und die Tanks und Healer haben schon irgendwie genug Damage gemacht,
weshalb alle die PS-Heroes über ein Jahr lang quasi komplett ausgestorben sind in dem Spiel.
Wenn irgendwas in dem Spiel falsch lief, hat das Overwatch-Team erstens viel zu lange gebraucht,
um das Problem zu fixen.
Ja, auf jeden Fall, die haben ewig gebraucht mit Patches teilweise.
Und zweitens, bei dem Versuch es zu fixen, gleichzeitig zehn andere Probleme erzeugt.
Die Antwort auf die Goats-Meta war beispielsweise rollenbezogene Rankings,
Was ist das?
Ich bin gar nicht mehr so sicher jetzt.
Das kam so in dem Dreh irgendwann, ja.
Vorher war es unmöglich, die PS zu spielen und jetzt umso mehr,
da man fucking Viertelstunde plus auf ein Game warten musste.
Von solchen Sachen gab es ab dem Punkt am laufenden Bande welche in Overwatch,
weshalb immer mehr große Persönlichkeiten zu anderen Games wechselten,
genauso wie die Spieler es taten.
Es hat irgendwann so ein Problem mit der PS,
es hat irgendwann wirklich gar keinen Spaß mehr gemacht,
dieses Spiel zu spielen.
Der einzige Teil an Overwatch ...
Overwatch hat keinen Spaß mehr gemacht, Overwatch hat nur noch aufgeregt.
Und das war der Zeitpunkt, wo ich keinen Bock mehr hatte.
Das ist bei mir oft so.
Egal ob ich Games spiele oder ob ich Serien gucke oder sonst was,
manchmal kommt der Moment, wo ich Sachen einfach nicht mehr nachvollziehen kann,
einfach nicht mehr mitmachen will.
Beispielsweise gibt es auch Serien, wenn ich die gucke
und dann irgendwie Staffel 3 ist und ich bedenke,
Alter, warum verhalten die sich jetzt alle so komplett entgegengesetzt
zu dem wie es in Staffel 1 und 2 war und Alter,
warum ergibt das jetzt alles gar keinen Sinn mehr?
Dann nervt es mich nur noch, dann macht es mir keinen Spaß mehr zu gucken,
dann nervt es mich nur noch und dann höre ich auf die Serie zu gucken.
Ich muss nicht zwangsläufig alles bis zum Schluss gucken.
Und bei Games ist es auch so, wenn mich ein Game nur noch nervt
oder nur noch aufregt, dann kann ich es mir einfach nicht mehr geben.
Und das ging nicht nur mir so.
Es gab viele Overwatch-Bros, die ihr Geld damit verdient haben,
die immer wieder auch in ihren Spielen, in ihren Sachen geflamed haben,
so nach dem Motto, Alter, wenn ich...
die haben in ihren Streams dann teilweise CS gespielt
und haben halt gesagt, oh fuck, Alter, ich hab gleich Overwatch-Training.
Seriously, ernsthaft, das ist kein Spaß.
Überleg dir mal, du hast ein Overwatch-Bro,
der spielt was anderes on-Stream und du sagst,
scheiße, Alter, gleich ist es wieder Overwatch-Training.
Oder so, Alter, ich spiele diesen Kack doch eh nur,
weil ich Geld dafür kriege.
Das ist vorgekommen, die haben da auch keinen Bock drauf.
Die haben das nur gespielt, weil es Geld bringt.
Gut, ist ja nicht verwerflich, aber bezeichnend für das Spiel.
Nicht totes ist die Porno-Industrie, aber Rettung wahren.
Der einzige Teil an Overwatch, der nicht tot ist,
ist die Porno-Industrie.
Wundert mich nicht.
Da geht er mal.
Und mich würde nicht wundern, wenn es in Valorant genauso aussieht.
Ich will jetzt nicht googeln,
weil das ist auf jeden Fall Monkathoss.
Aber ich wette mit euch, bei Valorant ist es genauso.
Das ist klar.
Aber Rettung wahren, Sicht.
Overwatch 2 wurde auf der BlizzCon 2019 angekündigt.
Episch großer Trailer.
Und dann war es erst mal irgendwie drei Jahre Funkstille drum
und jetzt gibt es nicht mal mehr PVE,
was eigentlich der Seller werden sollte für Overwatch.
Es wurde darüber geredet,
wie viel Liebe in das Game geflossen ist.
Neue Heroes.
Und dann ist Jeff weg und sie haben das Game wahrscheinlich umgeklampelt.
Und der große Knaller, verschiedene PVE-Game-Modi.
Das war quasi das ausschlaggebende Argument,
wieso das Sequel überhaupt erscheint.
Es soll nun eine große Kampagne
mit richtiger Story und richtigen Missionen geben.
Jeder Hero soll ein Skill-Tree bekommen.
Ich fand die Idee mit dem Skill-Tree nice.
Das war wahrscheinlich nur für PVE gedacht.
Aber die Idee dahinter,
dass man Helden nicht nur picken kann,
sondern ein bisschen customisen kann,
fand ich sehr gut.
Weil ich hatte mich in Overwatch schon damit abgefunden,
dass mehr oder weniger die gleichen Helden immer gespielt werden
gegen mehr oder weniger immer die gleichen Helden.
Aber vielleicht hätte man mit Skill-Trees
schon noch ein bisschen Varianz da reinbringen können.
Das fand ich eine gute Idee.
Auch wenn es erst mal nur für PVE gedacht war.
Aber vom Grundansatz her fand ich es eine gute Sache.
Es ist halt leider auch komplett weg jetzt.
Komm, den man mit der Zeit immer weiter aufleveln kann.
Im Zuge der BlizzCon wurde sogar direkt die erste PVE-Mission gezeigt.
Rio de Janeiro wurde das Ganze genannt.
Es war ein Spektakel,
gemischt aus gut gemachten CGI-Cutscenes
und verschiedenen Charakteren.
Es war ein Spektakel,
gemischt aus gut gemachten CGI-Cutscenes
und verschiedenen Etappen,
in denen man gegen Wellen an Bots kämpfen musste.
Ich muss ehrlich sagen,
ich fand das damals auch schon nicht sonderlich innovativ und toll aus.
Ich weiß, viele haben das gefeiert.
Ich fand das damals schon ein bisschen uninspiriert aus.
Nach dem Motto,
das spielst du einmal und dann nie wieder.
Wirklich sehr vielversprechend.
Fand ich nicht.
Aber es war eine gute Sache.
Einen PVE-Modus fand ich eine gute Sache,
weil ich immer noch der Meinung bin,
dass die Welt von Overwatch
durchaus eine gute Singleplayer-Kampagne hergeben würde.
Und das ist ja auch etwas, was Blizzard eigentlich kann.
Das ist ja das, worauf ich ein bisschen gehofft habe.
So ein competitive PVE-Horde-Modus, schön und gut.
Aber eine Singleplayer-Kampagne
wäre wirklich richtig geil gewesen für Overwatch.
Also Blizzard, was eine gute Singleplayer-Kampagne machen kann.
Die Welt hätte es hergegeben
und die unterschiedlichen Helden und so
hätten sicherlich auch eine interessante Story hergegeben.
Hat sich aber Blizzard gedacht,
damit lässt sich kein Geld verdienen.
Außerdem reden wir hier von Blizzard.
Auch wenn in den letzten Jahren
ein paar unvorteilhafte Dinge passiert sind,
kann man ihnen nicht absprechen,
wie gut viele Videospiele von ihnen sind.
Vor allem aus dem PVE-Segment.
Die können das einfach.
Die Jahre nach der Ankündigung sind also vorbeigezogen
und man hat sich langsam gefragt, wo das Spiel nun bleibt.
Viel Gutes hat Blizzard ja auch in den letzten Jahren
nicht hinbekommen.
Die haben jetzt mal wieder mit Diablo 4 endlich was,
was anscheinend nicht nur
auf den ersten Blick was taugt,
sondern wohl auch ein bisschen Substanz hat.
Mal gucken, wie es in ein paar Monaten aussieht.
Das Einzige, was sich in den Jahren nach der Ankündigung so getan hat,
ist, dass Overwatch 1 komplett krepiert ist.
Immer weniger Spieler haben es gespürt.
Es gab nichts dafür.
Es gab ja auch kein Content.
Es kam förmlich gar kein Update mehr für das Spiel raus.
Man hat gemerkt,
dass das Spiel für Blizzard selbst ein sinkendes Schiff ist
und man dachte,
dass halt jede Manpower nun zu Overwatch 2 geschickt wird,
um dort halt den ganzen neuen Content zu entwickeln.
Den es sich geht.
2022 war es endlich soweit
und die Beta zu Overwatch 2 ging an den Start.
Twitch-Zuschauerzahlen explodierten,
da man als User einen Beta-Key bekommen hat,
wenn man für mehrere Stunden einen Streamer geschaut hat,
der die Beta spielt.
Nach 5 Stunden XQC konnte ich selbst auch endlich
in die Overwatch 2-Beta reingehen
und ich sag's euch ganz ehrlich,
es hat wirklich Spaß gemacht.
Es hat sich so angefühlt, als wäre wieder 2016.
Ich und die Boys einfach ein paar Runden Overwatch grinden.
Ich selbst habe das Spiel seit Jahren halt auch nicht mehr gespielt,
da der erste Teil ab einem gewissen Punkt
wie gesagt wirklich gar keinen Spaß mehr gemacht hat.
Ich hatte keinen Spaß an der Beta,
weil es jetzt irgendwie ein krasses Sequel war,
sondern einfach, weil es Overwatch war
und Overwatch ist an und für sich halt wirklich kein schlechtes Spiel.
Und mal wieder in Neu.
Am 4. Oktober 2022 kam Overwatch 2 endlich für jeden raus
und die Leute waren...
Chat, woher kennt man diesen Sound hier?
Am 4. Oktober 2022 kam Overwatch 2 endlich für jeden raus
und die Leute waren...
Chat, woher kennt man diesen Sound hier?
Am 4. Oktober 2022 kam Overwatch 2 endlich für jeden raus
und die Leute waren...
Chat, woher kennt man diesen Sound hier?
Am 4. Oktober 202...
Friendrequest in irgendeinem Game?
Menü!
Ja!
Das kann sein.
Das klingt gut.
Menü aufmachen.
Ja, ja, ja, das kann durchaus sein, ja.
Im Jahr 2022 kam Overwatch 2 endlich für jeden raus
und die Leute waren...
Beziehungsweise,
Naja, nicht wirklich gehypt, weil der große Point von Overwatch 2, die PvE-Modi, nicht existent waren.
Man hat also jetzt schon sein Spiel so halbraus gebracht, weil Overwatch 1 halt wirklich...
Könnte man nicht sagen, dass die Hälfte von Overwatch 2 eigentlich Overwatch 1 ist?
...krankverrecktes und naja, Geld ist immer noch Geld.
Aber was sind jetzt wirklich die Unterschiede zwischen den beiden Spielen?
Es gibt drei neue Heroes, sechs neue Maps und einen komplett neuen Modus namens Push.
Außerdem grundlegende Balance-Anpassungen.
Aber das ist nix, wofür man vier Jahre gebraucht hat, oder?
Nee. Ja.
Mit ein paar Reworks von Heroes einhergingen.
Ein paar davon sehr subtil, wie ein bisschen mehr Damage, ein paar...
Ja, die mussten die Heroes ja reworken, weil es jetzt ein Spieler weniger auf jeder Seite ist.
Das ging ja gar nicht anders.
Mussten sie ja reworken.
Aber auch sehr groß mit Heroes wie Orisa, die sich so ziemlich gar nicht mehr wieder vorgespielt haben.
Der größte Change ist aber der Fakt, dass nun 5 gegen 5 statt 6 gegen 6 gespielt wird.
Deswegen musstest du das anpassen.
Man spielt jetzt nur noch mit einem Tank.
Ich persönlich habe auf jeden Fall gar nichts gegen diese Entscheidung,
dass sich jedes Teammitglied nun etwas wichtiger anfühlt.
Man hat das Game jetzt ein bisschen mehr selbst in der Hand und hat das Gefühl, mehr beeinflussen zu können.
Das war's aber so ziemlich.
Ein paar nette Änderungen, die drei Jahre Wartezeit auf jeden Fall rechtfertigen.
Haltet euch fest, aber ich hab von der größten Neuerung noch gar nicht geredet.
Nämlich der Shop.
Es gibt nun ein Battle Pass, mit dem man zahlreiche Sachen freischalten kann, wie neue Heroes.
Ganz recht.
Da das Spiel nun Free-to-Play ist, hat man nicht mehr alle Charaktere von Anfang an,
sondern muss diese erst freischalten oder, naja, ein paar Euronen investieren.
Außerdem kannst du Skins kaufen.
Skins gibt es allgemein so ziemlich jedem Free-to-Play-Online-Game zu kaufen.
Aber in Fortnite bezahle ich 10 Euro dafür, dass ich Vegeta spielen kann
und mich in einen fucking Super Saiyajin Blue verwandle,
während ich in Overwatch 2 20 Euro dafür belege, dass meine Winston rot ist.
Und auch wenn es durchaus ein paar neue Sachen in Overwatch 2 gibt,
in Diablo 4 kostet ja auch irgendwie ein Set 28 Euro und sowas.
2 gibt wurden auch viele Sachen willkürlich aus dem ersten Teil entfernt.
Das Level-System wurde komplett entfernt.
Ich meine, es gibt ja jetzt den Battle Pass, den man leveln kann.
Aber auch blöd, man sieht nicht, wie lange die Leute das schon grinden.
Man kann nicht mehr sehen, ob Leute Premade sind.
Man kann nicht mehr on fire sein.
Es gibt keine Zusammenfassung mehr am Ende von Matches,
geschweige denn die Karten und Auszeichnungen.
Man kann seine Waffen nicht ingame auschecken,
obwohl genau das in den Trailern gezeigt wurde.
Die haben das in den Trailern drin, aber nicht im eigentlichen Spiel.
Es gibt jetzt zwar 6 neue Maps, aber dafür wurden 5 alte komplett...
Ja, 2CP wurde entfernt. 2CP ist auch Ultraschrott, Alter.
Ich hätte es cooler gefunden, sie hätten vielleicht die 2CP-Maps
irgendwie zusammengefasst zu einer Push-Map oder irgendwas anderes.
Ganz rauswerfen ist doof.
Sie gehören für mich irgendwie immer noch in Overwatch dazu,
aber 2CP war so ein Schrottmodus, Alter.
...entfernt.
Man könnte meinen, dass der Re-Release unter Overwatch...
2CP ist wieder drin?!
What?!
Oh, nee.
Schrott, Alter.
...Watch 2 nur Blizzards Entschuldigung dafür ist,
das Spiel Free2Play rauszubringen,
um so noch mehr Geld aus dem Ganzen abmelken zu können.
Außerdem halte ich es für einen Industriestandard,
solche Sachen wie neuen Content oder Balancing in ein Game reinzupatchen,
statt direkt ein komplett neues Spiel rauszuhauen.
Die Sachen, die hier dazu gekommen sind,
rechtfertigen auf gar keinen Fall ein neues Game.
Das Einzige, was mich jetzt noch optimistisch stimmt,
ist der angekündigte PvE-Story-Modus.
Man merkt, dass wirklich viel Liebe darin geflossen ist,
und das wäre immerhin eine Begründung für ein komplett neues Spiel.
Bruh.
Der große Point an Overwatch 2,
der Grund, wieso dieses Spiel überhaupt existiert,
wurde einfach so aus dem Nichts gecancelt.
Die Begründung war,
dass immer mehr Ressourcen weg vom Online-Game gezogen wurden
und man den Fokus verloren habe.
Man könne sich nicht um den PvE-Modus kümmern,
ohne den Pv...
Ihr...
Also, diese Pressemeldungen oder diese Statements sind immer so pp-ge, Alter.
Wisst ihr, was für mich eines der krassesten pp-ge-Statements
in letzter Zeit war, die rausgekommen sind?
Hat jemand von euch
das Gollum-Game mitbekommen?
Nur mal so
am Rande gefragt.
Es gab nämlich...
Nein.
Also, es gab mal wieder ein Herr der Ringe...
ein Game im Herr der Ringe-Universum
und man hat Gollum gespielt.
Ich hab's mir nicht gekauft.
Ich werd's mir auch nicht kaufen.
Zumindest...
Das Game sah von Anfang an übelst,
übelst für'n Arsch aus.
Das Game ist rausgekommen, war halt uninspiriert
und für'n Arsch.
Da wurde quasi schon direkt
paar Tage nach Release
wurde ein Entschuldigungsstatement rausgehauen
und dass man jetzt hart daran arbeiten wird,
so alle Expectations zu erfüllen
und sonst was in der Richtung.
Und...
Es war sofort klar, als man diese Meldung gelesen hat,
dieses Statement,
das wurde schon geschrieben
während der Entwicklung.
Die wussten, dass das Scheiße ankommt.
Die wussten, dass es ein Kack-Game ist.
Die haben quasi das Statement...
Das Statement wurde quasi parallel zum Game schon geschrieben.
Anders kann's...
Echter Wahnsinn.
So ein Pepega-Kram.
Die haben mittlerweile...
Das ist wirklich AAA-Development heutzutage.
Man schreibt die Entschuldigung
an die Community
und man gelobt Besserung
schon bevor das Game überhaupt fertig ist.
Das ist schon fertig geschrieben.
Liegt in der Schublade.
Das liegt in der Schublade ungefähr so,
wie...
Ich hab mal ne Doku gesehen zur Mondlandung.
Leute...
Also...
Flache Erde und so.
Wir lassen's jetzt mal komplett raus,
aber ich hab mal ne Doku gesehen zur Mondlandung.
Von der ich persönlich auch denke,
dass sie stattgefunden hat.
Zumindest...
Jetzt mal Spaß beiseite.
Und dort wurde erzählt,
dass selbst Experten
gesagt haben,
wenn sie optimistisch sind,
sie rechnen mit ner 50-50 Chance,
dass das klappt.
Und nicht nur ner 50-50 Chance, dass das klappt,
sondern ner 50-50 Chance,
dass die Astronauten wieder lebend heimkommen.
Und es wurde damals schon
für
mehrere Fälle
wurden Reden
vorgeschrieben,
für den Fall der Fälle, dass das passiert.
Rakete explodiert beim Start,
sie kommen nicht mehr zurück,
sie stranden auf dem Mond.
Da wurden im Vorfeld schon Pressemeldungen
und Reden geschrieben.
Die lagen dort in der Schublade.
Und so ungefähr
stelle ich mir das aktuell bei AAA-Entwicklung vor.
Man schreibt die Entschuldigung schon mal im Voraus,
dass man sich ordentlich Gedanken zumachen kann.
Und sobald es dann eintritt,
kann man sich den Voraus holen und direkt auf Twitter posten.
So wirkt das für mich mittlerweile.
Das ist halt leider mittlerweile so AAA-Game-Development.
So.
PvP-Modus zu vernachlässigen.
Wo ich mich frage, wozu zum Fick
wurde Overwatch 2 überhaupt schon veröffentlicht,
statt zu warten und sich in Ruhe
um den PvE-Mode zu kümmern.
Zu all dem Ganzen muss man aber sagen,
dass das Team von Overwatch 1 oder selbst das Team
von Overwatch 2 am Anfang
gar nichts mehr mit dem heutigen
Overwatch 2-Team zu tun hat.
Super viele Leute haben im Laufe der letzten Monate
und Jahre das Team verlassen.
Und ich kann mir vorstellen, warum.
So wie das alles hier verlaufen ist,
hat sich das bestimmt niemand aus dem Team gewünscht.
Man kann sehen, wie passioniert und talentiert
viele in der Crew sind.
Die Trailer sehen teilweise so cool aus.
Man weiß, dass die Leute
etwas Großes aus dem Spiel machen wollten.
Und das stelle ich mir
extrem demotivierend vor.
Du steckst da wirklich drei Jahre vollste Energie rein
und dann wird sowas draus gemacht.
Man weiß leider aber auch, dass die Bosse
von oben vor allem eins wollten.
Nämlich Geld. Und zwar so schnell wie möglich.
Jetzt sehen wir ein Produkt, das eigentlich
so gut hätte werden können, komplett unfertig
und unter seinem Potenzial rausgeballert wurde.
Es ist einfach nur schade.
Und ein perfektes Sinnbild für den aktuellen Stand
der Gaming-Industrie.
Da hat er recht.
Ja, da würde ich ihm recht geben.
Es ist 12 Uhr, Leute.
Ich hab Hunger.
Ratet mal, was es heute gibt.
Ihr kommt nicht drauf.
Lachs mit Nudeln, korrekt.
Ihr habt es zuschaut.
Ihr seht schon, ihr habt das Pattern erkannt.
Auch ohne Regex.
Ich erinnere dich nicht dran,
aber du hast dich gerade selbst daran erinnert.
Alles klar, Leute.
So.
Gibt es irgendjemanden, den wir hosten können?
Mal auf die Schnelle geguckt.
Wem followe ich denn?
Der gerade on ist.
Leicht deutschsprachig
und nicht ganz.
Mal gucken.
Sehe ich jetzt niemanden?
Gut, dann gehe ich jetzt off.
Ich hab Hunger, Leute.
Bis dann.
Macht's gut.
Untertitel im Auftrag des ZDF, 2021

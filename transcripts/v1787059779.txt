So, da bin ich, heute etwas fitter als gestern, ja, zweiter, zweiter Versuch, ne aber heute
klappt das, heute klappt das, ja heute, warte was das funktioniert, ich weiß nicht ob man
es hört, aber ich bin heute eine ganze Ecke fitter noch als gestern und das, wobei das
kann theoretisch relativ, das kann theoretisch relativ schnell umschlagen, weil ich hab grad
massiv Peppofett gemacht und ihr wisst wie das ist, wenn man zu viel gefressen hat dann
wird man auch relativ schnell müde, äh ja, was, ok keine Ahnung was Windows da wieder
einfach komische Features eingebaut hat, aber ja, passt schon, ich bin voll gefressen
as fuck, ich weiß nicht ob die Wortkombination Sinn ergibt, voll gefressen as fuck, aber
ich glaub man versteht was ich, was ich aussagen möchte, ja, dageschrieben für 20 minuten,
Hypersubscription, falls ihr es seht, hier sind die offenen Issues von gestern, ja, noch
aus dem Repo, ich mach mal kurz die VM auf und dann muss ich nochmal updaten, also ihr
werdet feststellen, wenn ich jetzt diesen Browser in der VM refreshe, dann werdet ihr
gleich sehen, postchamp, wenn es denn gestartet ist, startet das verdammte Spiel, so, wenn
es gestartet ist, werdet ihr feststellen, es gibt 3 Issues und wenn ich jetzt F5 drücke,
BÄM, ein Issue weg, ich hab heute morgen schon was gemacht, kann ich euch auch gleich
zeigen, ich überleg gerade, wir müssen jetzt mal schnell noch was anderes gucken, weil
das würde ich jetzt normalerweise auch auf Offstream gucken, während er Wayland, Leute,
warum genau hab ich Wayland installiert auf dieser VM, das funktioniert überhaupt nicht
richtig, wo ist der Sinn, was, was, warum, Wayland, ja, required by, was, Etcher, warum
brauche Etcher, Wayland, was, warum brauche das alles, Wayland, die sollten keine Abhängigkeit
zu irgendeinem X-Windows-System haben, höchstens zu irgendeiner GUI-Library, ok, was auch
immer, dann halt, dann halt update, ja, meinetwegen, sollen wir recht sagen, ja, West, ich verstehe
es auch nicht so genau, ich meine, nur weil das Wayland unterstützt, heißt es ja nicht,
dass es Wayland als Abhängigkeit braucht, gut, vielleicht ist das irgendwelche C++-Header-Geschichten,
das es sonst nicht kompiliert, was auch immer, wobei das ja eigentlich für mich egal sein
sollte, weil ich installiere das fertige Binary, was auch immer, man weiß es nicht, ist auch
egal, so, jetzt haben wir geupdatet, eine Sache wollte ich tatsächlich mal gucken und zwar,
was macht ein Trimoji-Github, was macht dann, also Trimoji ist ein Image-Font, ja, also zum
Beispiel, wenn ich Emojis hinzufüge hier, dass die Rakete so aussieht, wie sie aussieht,
braucht man einen Emoji-Font dafür und das ist der von Twitter, den ich hier nehme, also ich würde
vielleicht auffallen, die Rakete auf Twitter sieht genauso aus, wenn ihr den Webclient beziehungsweise
irgendwas ohne native Emoji-Support verwendet, also irgendwo, wo Twitter nicht die native Platform
Emojis verwendet, also wenn ihr zum Beispiel unter Android und IOS mit der Twitter-App seid, dann ist
egal, dann sehen die Emojis aus wie auf der Plattform, aber normalerweise benutzt Twitter
Trimoji und Trimoji ist ziemlich am Arsch, weil, also das finde ich der beste Emoji-Font,
weil, ja, ich finde die Emojis sehen einfach schlicht ergreifend am hübschesten aus, ja.
So, und es ist aber ganz schön am Arsch, weil, als Elon Musk den Laden übernommen hat, ein paar Tage
später, hat er wohl das gesamte Team rausgeschmissen, was an Trimoji arbeitet und das Problem ist jetzt,
dass mittlerweile, es gibt ja immer wieder neue Unicode-Standards und zum Beispiel gibt es jetzt
ein Goose Emoji und ihr seht, ich kann kein Goose Emoji darstellen. Warum kann ich das nicht? Na ja,
weil Twitter Trimoji nicht mal aktualisiert und mein Emoji-Font keine Gans darstellen. Ja,
es ist nicht nur eine Gans, es ist noch ein bisschen mehr. Also alles, alles was mit Unicode
Version 15 reingekommen ist, kann er nicht darstellen. Also der kann kein Shaking-Face darstellen,
zum Beispiel. Was auch immer. Der kann kein Elch darstellen, der kann kein, was ist denn
ein Maultier, glaube ich. Keine Gans, keine Flügel, keine Qualle, kein, ich weiß nicht,
was das ist auf Deutsch. Ein Esel. Ach ja, stimmt, ein Esel. Stimmt, bei Schreck. Bei Schreck,
das war ja ein Esel. Irgendwo ist das, glaube ich, auf Deutsch. So, und das kann das alles nicht.
Was ich ein bisschen blöd finde, weil gerade, das ist alles, kann man sich jetzt rüberschreiten,
braucht man das. Was ich sehr nice finde, ist, dass Emoji 15, also Unicode 15 jetzt auch ein
ganz offizielles, man hält es gar nicht für möglich, aber es gab kein Wi-Fi-Icon bisher im
Emoji, im Emoji-Standard. So, und jetzt gibt es, und jetzt gibt es, gibt es einen. Allerdings,
ihr seht, Quimoji nicht. Welchen Font hast du für asiatische Zeichen? Gute Frage. Ich,
habe ich ihn installiert. HN heißen die Dinger. Hier, nee, ich dachte, die habe ich, vielleicht,
vielleicht auch gar keinen. Kann es sein, dass ich gar keinen installiert habe? Gar keinen?
Das ist, das ist möglich, das FC-Cache-List. Nee, ach, kein, weiß ich nicht. Gute Frage,
vielleicht habe ich auch gar keinen installiert, gar keinen Font für asiatische Zeichen. Wobei,
können wir doch, können wir doch ausprobieren. Sag mir mal eine China-Chinesen-Seite hier,
AliExpress. Und dann stellen wir jetzt AliExpress nicht auf de um, sondern AliExpress auf nicht
versandt nach, ich will die Sprache ändern. Noch viel einfacher, wir gucken einfach GitHub
Trends. Auf GitHub Trends trenden regelmäßige China-Chinesen-Repos. Hier, China-Chinesen-Repos.
Ich habe gar keinen China-Chinesen-Font, so wie es aussieht aktuell, weil ansonsten könnte
der das darstellen. Ähm, die, ich glaube, ich glaube, die, warte mal, Archwiki, es gibt,
es gibt ein ganz schönes, es gibt, glaube ich, ein ganz schönes Font-Package. Ich glaube,
von Adobe ist das, ähm, ja, für asiatische Schriftarten, Shionese, hier, Chinese-Font,
ja, genau, hier. Hier, Adobe, genau, das meine ich. Adobe-Han, nicht HN, Adobe-Han kann man
installieren. Adobe-Han, kann man mal. Han. Guck, da ist jetzt, jetzt kann man ganzen,
ganzen, äh, asiatischen Fonts installieren. Koreanisch, Chinesisch, Taiwanesisch, Hong
Kong, China. Warum gibt's denn da eigentlich so viele? Ich installiere jetzt einfach mal
alle. So. Jetzt haben wir, jetzt haben wir China-Chinesen-Fonts am Start. 638 MB China-Chinesen-Fonts.
Installieren wir das Ganze mal. Und jetzt werdet ihr gleich sehen, wenn ich jetzt die Seite wieder
aufmache, ich glaube, ich muss den Browser neu starten, sonst funktioniert's nicht. So,
jetzt haben wir alles hier. Japanische, Chinesische, Taiwanesisch, alle möglichen, was es gibt. So,
und wenn man jetzt die Seite wieder aufmacht, ich glaube, ich muss den Browser neu starten.
Ja, ich muss den Browser neu starten, Firefox. Dann werdet ihr sehen, ich habe jetzt gleich
asiatische Schriftzeichen. Bam. Wisst ihr? Und jetzt haben wir hier asiatisches Font-Rendering.
Also richtig der Ayaya-Modus aktiviert. Wobei das ja eigentlich nur japanische Zeichen sein
dürften. Ja, jetzt können wir China-Chinesen-Fonts lesen. Wo sind wir denn stehen geblieben? Ja,
ach genau, ich wollte gucken, was eigentlich Emoji 15 macht. Guck mal, es gibt sogar schon
Emoji 15.1 und Emoji 16. Da gucken wir mal kurz, was dabei gekommen ist, was da noch dazu
gekommen ist. Was war denn das Ursprüngliche, was ich sagen wollte? Genau, Twitter ist ziemlich
abgefuckt, was das angeht, oder ziemlich am Arsch, weil ihr eigener Emoji-Font unterstützt
halt nur Unicode 15 und die ganzen neuen Zeichen gehen nicht. Apple, Google, Facebook und so was,
die haben das schon. Discord verwendet auch den gleichen Font, das heißt, Discord hat auch aktuell
das Problem, neuere Emojis nicht anzeigen zu können, was natürlich für Discord richtig doof
ist, weil da ist der Emoji-Spam ja wirklich real, da ist ja kaum noch eine Message ohne
irgendwelche Emojis, Emoji-Animationen und so was drin. Wobei, die Discord-eigenen Emoji-Animationen
hat natürlich damit nichts zu tun. So, dann wieder ein IT-Stellenanzeigen-Video geplant. Ja,
schon lange. Vorher mache ich noch einmal, wie meine erste Woche auf der Arbeit gewesen ist,
und ich muss euch endlich noch, wobei vielleicht mache ich das danach, noch mal meine Bewerbung
und alles zeigen. Aber ich habe mich noch nicht auf die Reihe gekriegt. Zumindest Twitter ist
ziemlich am Arsch, weil sie die Leute rausgeschmissen haben, das heißt, Tweemoji wird wahrscheinlich
offiziell nie Unicode 15-Support bekommen und ob es Twitter bekommt, keine Ahnung. Es gibt jetzt
allerdings einen Fork, es gibt jetzt allerdings einen Fork von Tweemoji und zwar, wo konnte man
sich mal die Forks anzeigen lassen, hier. Es gibt einen Fork von Tweemoji, die gerade dabei sind,
Unicode 15 einzubauen. Die sind allerdings ein bisschen hinten dran, weil sie schreiben,
sie wollten sometime in March ready sein. Also wir wissen jetzt alle, March ist vorbei,
es ist der 7. April und der Status der Emojis ist, naja, wenn man mal aufrundet, ein Drittel
der Emojis ist erst fertig designt. Ich habe eigentlich gehofft, sie schaffen es in nächster
Zeit. Gibt es das Qualen Emoji? Auf der anderen Seite ist es ja nicht wild, man muss sich mal
überlegen, die machen jetzt das, wovor sie vorher bei Twitter angestellt waren, um sonst nebenbei
ohne dafür bezahlt zu werden. Jetzt könnte natürlich Discord mal hergehen, weil Discord
diesen Fond auch benutzt und einfach die Leute dafür bezahlen, dass sie den Emoji-Fond weiter
designt, aber bisher, so wie es aussieht, hat Discord noch keinen Bock. Wir können mal gucken,
wir können mal gucken, da steht noch, dass über Twitter arbeitet. Also anscheinend wurden die Leute
nicht von Discord abgepickt, wie auch immer war das dann. Discord nutzt den Fork schon,
es ist schön, wenn Discord das umsonst bekommt alles. Discord könnte die ja einfach auch supporten
und bezahlen dafür, das weiterzuentwickeln. Es ist ja wahrscheinlich auch kein Vollzeitjob,
den Emoji-Fond einmal im Jahr um 15 Emojis zu erweitern. Also die könnten das ja durchaus
Sponsoren, das sollte ja für Discord jetzt nicht den Ruin bedeuten. Wofür bezahlen? Never
donated free Wi-Fi, free entertainment, neighbors Wi-Fi, stolen laptop, was auch immer. Ich kann
das gerade nicht auswendig. Aber Discord denkt sich auch, warum sollen wir die bezahlen,
wenn wir das auch umsonst kriegen können. Naja, der Vorteil wäre, wenn sie die bezahlen würden,
wer betreibt Discord eigentlich? Ich glaube, die Discord betreibt Discord. Also die heißen so.
Discord wurde noch nicht von Microsoft, Apple, Google, Facebook, Amazon und sonst wem gekauft.
Hey, ich glaube, Discord Inc. ist das, vermute ich mal. Discord Inc.? Ja.
Was? Hammer und Schüssel? What? Das glaube ich jetzt nicht so wirklich. Discord Inc. sage ich
doch. Ah, da sind die. Ja. Die Firma, die die Rechte am Quell kundet, ja, Discord Inc.
Discord gehört Discord. Discord wurde, man mag es kaum glauben, dass es in der aktuellen Zeit
noch geht, Discord wurde von Discord entwickelt und von Discord betrieben und wird auch noch von
Discord entwickelt und von Discord betrieben. Discord gehört zu Kuss, das wusste ich nicht.
Das ist mir neu, aber das wundert mich auch nicht, wenn das stimmen sollte. Tencent ist ja auch
überall mit am Start, zum Beispiel auch bei Blizzard. Erinnert sich noch einer an die Arschkrieg
Aktion von Blizzard, wo irgend so ein Typ im Turnier gesagt hat, irgendein Turniergewinner
gesagt hat, Freiheit für Hong Kong oder irgendwie sowas in der Richtung und Discord dann, nicht
Discord, was erzähle ich ja nicht, Discord, Blizzard, Blizzard, Blizzard. Blizzard die
Preisgelder von dem Typ einbehalten hat, ihn gebannt hat von Turnieren und, und jetzt kommt
der Hammer, die Caster, die das Turnier gecastet haben und zufällig im Bild waren, als er das
gesagt hat, wurden auch entlassen. Da hat Blizzard die China-Chinesen-Arschkrieg Aktion gemacht,
aber selbstverständlich zwei Wochen später für Menschenrechte, Öffentlichkeitsmarketing wirksam
ins Horn geblasen, was sie doch für gute Menschen sind. Was für gute Menschen sind, hat man dann
aber ein paar Monate später wieder gesehen, als der ganze Belästigungsskandal bei Blizzard
rausgekommen ist. Also unterm Strich kann man eigentlich sagen, man ist blöd, wenn man das dumme
Geschwätz glaubt. Es gibt ja Leute, die feiern sowas immer ab. Ich sehe ja prinzipiell alles,
was so Unternehmen zu Marketingzwecken machen, kritisch, beziehungsweise was heißt kritisch.
Ich sehe das, was sie machen so, dass ich standardmäßig davon ausgehe, dass sie es
machen zu Marketingzwecken, um gut dazustehen, nicht um irgendwie die Welt besser zu machen.
Genauso, wenn irgendwelche Unternehmen wieder erzählen, wie wahnsinnig grün, umweltschonend
sie sind, Menschenrechte, LGBTQ und was es noch alles für Regenbogenfahne und was es nicht alles
für Trends gegeben hat die letzten Jahre über. Sobald Unternehmen da mitmachen, muss man sich
immer überlegen, okay, das hat nichts mit der eigentlichen Aktion zu tun, sondern nur um gut
dazustehen. Natürlich kann man jetzt sagen, okay, wenn man den jeweiligen Hintergrund,
wenn man den persönlich unterstützt, kann man sich trotzdem freuen, kann man sagen,
scheiß doch drauf, dass es Marketingaktion ist, wenn es für eine gute Sache ist. Auf der anderen
Seite geht es denen halt nicht um die gute Sache, egal was sie machen, sondern letztendlich immer
um die eigene Kohle. Und dementsprechend kann man, ja, man kann es mögen oder auch nicht,
aber es muss einem halt klar sein, dass sie das alle nicht aus persönlicher Überzeugung machen
und weil sie es toll finden, sondern weil es Geld gibt. Das ist ja auch nichts Verwerfliches
dran für ein Unternehmen, das so zu machen, aber man sollte sie nicht dafür abfeiern,
dass sie quasi so selbstlos und so menschenfreundlich und so was sind. Nein,
die geben sich nur so. Im nächsten Augenblick und in anderen Teilen der Welt ist es wieder
komplett anders. Also insofern. Ja, wisst ihr was ich witzig finde an dieser Aussage? Da gibt es ja
auch Leute, die sehen das anders und zwar, ich habe, ich sagte es ja schon lange, dass ich das
skeptisch sehe, wenn Unternehmen sich da so marketingwirksam für irgendwelche aktuellen
Trends einsetzen, obwohl es ja oftmals widersprüchlich ist. Ja, in unserem Teil der Welt machen sie das,
im anderen Teil der Welt, sagen wir, in China machen sie das, sind eigentlich zwei komplett
kontriere Sachen. Ich habe das ja immer schon ein bisschen kritisiert, wo ich mir gesagt habe,
okay, denen geht es nicht wirklich um die Sache, sondern nur um gut dazustehen. Da hat mal jemand
zu mir gesagt hier im Stream, Max hat genau das gleiche gesagt, was du gesagt hast, hat gesagt,
Max ist doch egal, weil es ist trotzdem eine gute Sache, dann ist doch egal, ob die das nur machen
für Geld verdienen oder nicht. Da habe ich mir gedacht, ist eigentlich was dran. Ich würde dir
da prinzipiell auch recht geben. Allerdings, wie war das mit Gronkh und dem Wizard Game,
der Spenden sammeln wollte? Der wurde des Todes geflamt, obwohl man ja auch hätte sagen können,
ja gut, dann macht das doch für die gute Sache. Anscheinend ist es da wieder was ganz anderes
gewesen. Also insofern scheint das auch alles so ein bisschen mit zweierlei Maß gemessen zu
werden, wann es für die gute Sache okay ist und wann nicht. Und anscheinend war das nicht okay,
aber wenn Blizzard sich besonders menschenfreundlich gibt, dann ist das gut. Wie dem auch sei,
ich glaube prinzipiell keinem Twitter Marketing spricht von irgendwelchen Unternehmen, wenn sie
sich mal wieder als super toll humanen Menschenfreunde und wir mögen doch alles und wir unterstützen die
Umwelt und wir sind so grün und climate und sonst was, alles Blödsinn und sie würden das von heute
auf morgen anders machen, wenn sie es für sie auszahlen würde. Ist okay, können sie machen,
aber man sollte es halt nicht glauben und es deswegen unterstützen. Man kann es kaufen,
wenn man das Produkt mag, aber nicht, weil man das Unternehmen so cool findet und die ja genau das
machen, was man, das kann morgen schon wieder anders aussehen. Ja vor allem die Frage bei
Influencern ist ja, wer definiert, das ist das, was mich bei diesen ganzen Diskussionen die letzten
Jahre auch unglaublich immer nervt, wer definiert eigentlich, was richtig ist. Weil wenn man sich
das mal anguckt, so die richtige Meinung, das variiert ja, also das ist ja nicht nur
Blickwinkel abhängig, das ist nicht nur ganz stark Blickwinkel abhängig, aber auch schon
in Bekanntenkreisen unterscheidet sich das ja mal ganz stark oftmals, was jetzt richtig in
Anführungsstrichen ist und wenn du mal in andere Teile der Welt guckst, die haben komplett andere
Vorstellungen davon, was richtig und was falsch ist, wie wir teilweise und deswegen glaube ich auch
nicht, dass wir gut damit fahren, quasi immer so super belehrend das alles zu machen, selbst wenn
man aus unseren Gesichtspunkten Recht hat, das kommt aber glaube ich in vielen Teilen der Welt
nicht gut an. Wenn man da hingeht und sagt so nach dem Motto, ihr müsst das so machen wie wir,
weil wir haben die Beißer mit Löffeln gefressen, wenn ihr das nicht so macht, dann seid ihr kacke.
Das kommt glaube ich einfach schlicht und ergreifend nicht gut an. Selbst wenn wir Recht haben,
aus unserem Kulturkreis gesehen jetzt, ja klar natürlich, ich würde auch viele Sachen unterschreiben,
dass wir sie richtig machen, im Gegensatz zu den Chinesen oder Ländern im Nahen Osten oder sonst
was will ich auch sagen, klar machen wir das richtig, aber das sehen die halt anders und so sollte einem
zumindest klar sein, dass viele Sachen auf der Welt unterschiedlich gesehen werden, selbst wenn
man persönlich der Meinung ist, ja man weiß ganz genau, dass wir richtig liegen. Machen wir aus
unserer Sicht ja, aber das sieht bei denen auch so aus. Na gut, wie dem auch sei, wir gucken uns
jetzt mal ein bisschen, sie schabt wieder an heute. Es gibt anscheinend auch noch keine
neue Fimoji-Version insofern. Ah ja, übrigens eine Sache zum Thema Influencer. Mir ist aufgefallen,
ich höre beim Essen immer ein bisschen Radio. Es sind ein paar verschiedene Sender. Wie gesagt,
da ist ein bisschen Hintergrundgeräusch läuft und das, was mich am meisten am Radio hören nervt,
ist das Gelaber zwischen der Musik und dass es bei jedem Sender quasi nur einmal oder alle zwei
Monaten die Playlist gewechselt wird und ansonsten immer die gleichen 30 Lieder kommen. Aber was mir
da aufgefallen ist, so in der Mainstream, nennen wir es mal Berichterstattung über Online-Aktivitäten
von Leuten, da verwenden die so Sachen wie Influencer oder was sie auch ganz gerne verwenden ist
Blogger und Podcast und sowas, wo ich mir so immer denke, man das ist so unspezifisch, macht es doch
nicht so kompliziert, sagt einfach wie es ist, sagt einfach Content Creator, weil nicht jeder
der YouTube Videos macht, ist automatisch Influencer und nicht jeder, der Audioaufnahmen macht,
ist Audio-Blogger oder so komisches Zeug. Ich höre tatsächlich manchmal auch Radio. Ich finde
ganz ehrlich, die Bezeichnung Content Creator ist eigentlich das Beste, was man sagen kann und wenn
man es spezifizieren will, kann man es ja danach sagen. Der ist Content Creator und was weiß ich
und hauptsächlich bekannt für Fitness-Videos auf Instagram oder sowas, dann weiß man ziemlich
genau was Sache ist und nicht jeder Content Creator ist automatisch auch immer Influencer.
Wenn ich Werbung mache für irgendwas, nicht für Coin Master, ich habe schon wieder vergessen,
wie dieses Ding heißt, wofür ich mal Werbung gemacht habe, dieses komische 3 gewinnt Mobile
Game. Ja, in der Rolle, würde ich sagen, war man dann Influencer. Aber Leute, die ganz normale
YouTube Videos machen, ohne da jetzt Sachen anzupreisen, zu bewerben oder den Leuten verkaufen
zu wollen, dann sind sie jetzt in der Stelle, würde ich auch nicht sagen, primär als Influencer
unterwegs. Natürlich, Channel-Betreiber, die eine gewisse Reichweite haben, die beeinflussen
immer in irgendeiner Art und Weise Leute damit, was sie sagen. Aber es ist halt die Frage, setzen
die sich jetzt hin und machen ein Werbevideo explizit, um den Leuten was zu zeigen? Also
sind sie quasi hauptberuflich als Influencer unterwegs oder sind sie als ganz normaler,
das was sie schon immer waren, YouTube Content Creator unterwegs und machen halt da ihr Ding?
Ich finde, das muss man auch irgendwie unterscheiden. Übrigens muss ich auch noch sagen, Influencer,
kannst du ja direkt übersetzen irgendwie so mit Beeinflusser oder sowas in der Richtung. Wobei,
ich finde Beeinflusser klingt auf Deutsch total bescheuert und was ich jetzt sage, keine Ahnung,
ob das mit im deutschen Marketing jargon üblich ist, aber ich bin der Meinung, die beste Übersetzung
für Influencer ist Meinungsmacher. Auch wenn das ein oldschool Wort ist, aber Beeinflusser ist
einfach ein kackdeutsches Wort, was man so normalerweise nie sagen würde. Und bei Meinungsmacher
weiß glaube ich am ehesten noch auch die Oma, was damit gemeint ist. Auch wenn es das vielleicht
vom Sinn nicht hundertprozentig übertrifft, aber ich glaube im Deutsch ist das beste Wort,
was wir eigentlich für Influencer haben.
Das kannst du mit allem assoziieren. Das ist halt der, der den Leuten versuchen will,
irgendwas einzureden im Endeffekt. Und sei es auch nur, wenn Bibi ankommt,
ich habe zufällig heute mal im Einkaufen diese tolle Uhr gefunden.
Ich glaube, wir haben da kein besseres Wort auf Deutsch, was auch wirklich jeder versteht. Klar,
Meinungsmacher klingt ein bisschen negativ, behaftet, aber ganz im Ernst, wenn ich mir die
meisten Influencer so angucke, wenn sie influenzen, würde ich das jetzt auch nicht unbedingt immer mit
was rein Positives assoziieren. Also insofern finde ich passt das eigentlich noch am besten.
So, haben wir jetzt alles geupdatet. Ich reboote mal die VM, das kann immer nichts schaden.
So, also was wir heute machen ist folgendes. Wir gucken uns mal den Pullrequest von unserem
High IQ Modge an. Weiß gar nicht, ob er da ist. Er ist da. Wir gucken uns heute den Pullrequest
vom Serious Max an. Das heißt, dann wird auch das Buildscript Emojified. Wir wissen ja alles,
dass prinzipiell in jeder zweiten Terminal-Ausgabe mindestens mal ein Emoji vorkommen muss,
sonst ist man nicht hip. Also so Sachen wie früher, dass man da zwei Seiten Terminal-Output
machen kann, einfach nur Text und dann auch noch schwarz-weiß Text, nicht farbig. Lukas,
danke schön für den Sub. Das geht heute selbstverständlich nicht. Heute muss die
muss das farbig sein und es muss alles mit Emojis voll sein. Und ich sage das jetzt gar nicht,
weil ich das schlecht finde, sondern ich finde das gut. Ich finde Terminal-Ausgaben von Programmen
heutzutage sieht deutlich ansprechender aus als noch früher. Warum man das früher nicht
gemacht hat, ist eigentlich ganz klar. Terminals hatten keinen Emoji-Support. Und
ich kann mich noch dran erinnern, unter Linux gibt es das noch gar nicht so lange. Wann habe
ich den ersten Archlinux-Einrichten-Stream gemacht? Da war das relativ brandneue Emoji-Support
im Terminal. Archive Boblords. Arch. Kann man die Ergebnisse sortieren nach Datum? Ne,
ja. Sind die schon nach Datum sortiert? Okay, dann weiß ich. Also ich glaube, ich sage jetzt,
ich sage jetzt mal so vor vier, fünf Jahren oder so. Ich weiß nicht, wann habe ich angefangen zu
streamen? 2017? Kann das sein? 2018? Ich weiß nicht, sieht man das irgendwo? Okay, weiß nicht,
kein Schimmer. Doch, ich habe eine Idee. Ich weiß, ich weiß, wie wir gucken können. Ich weiß,
wie wir gucken können. Boblords? Wir gucken einfach, was der älteste Clip ist, den es gibt. Wobei
ich glaube, diese Clip-Funktion gab es ja noch gar nicht von Anfang an. Clip. Top. Ach so,
man kann die Dinger nicht nach Datum sortieren. Meine Güte, warum ist das alles so blöd gemacht?
Sonst unter Wots Jahresansicht. Okay. 2017. Arch. Ach so, Archive. Hier haben wir noch
nichts gemacht. Hier habe ich ein bisschen... Hallo? War das noch Manjaro? Manjaro E3 perfekt
einrichten. Da war das relativ neu, dass man Emojis im Terminal haben konnte. Also sprich,
das gab es. Das gibt es noch gar nicht so lange unter Linux, dass das funktioniert. Da muss man
sagen, da war Mac... Ich glaube, Mac OS war da tatsächlich die schnellste Plattform mit Emoji
Support überall und vor allem im Terminal. Und Windows hat auch ewig gebraucht. Ich glaube sogar,
dass es von der ersten Implementierung unter Linux schneller war mit Emoji Support im Terminal.
Allerdings Windows hat es dann schneller final rausgebracht, bis es ordentlich funktioniert hat.
Ja, gut. Wie dem auch sei. Deswegen ging das früher die ganze Zeit noch nicht.
Homebrew hat auch schon ewig das Bier im Output. Emojis? Ja, ich denke schon. Wie gesagt,
ich bin kein hauptberuflicher Mac User. Weiß das nicht. Übrigens,
kann EMAX eigentlich mittlerweile Emojis? Geht immer noch nicht, oder?
Oder doch?
Nutzt EMAX noch jemand? Weiß nicht. Ich habe vor ein paar Jahren aufgehört.
Ich habe mal eine relativ kurze Zeit EMAX wirklich als Haupt Editor benutzt. Aber ich
bin nie komplett mit warm geworden und ich habe dann auch vor ein paar Jahren aufgehört,
komplett für nichts mehr EMAX zu benutzen. Lucas Sanglische für den Sub habe ich schon
gesagt, aber trotzdem Pogu, euch zu sagen. Ich weiß gar nicht, ob Stormwind selber überhaupt
noch EMAX verwendet. Ja, es gibt natürlich noch Leute, die EMAX verwenden. Das sieht man
hier auch auf GitHub. Da gibt es immer noch EMAX-Projekte und Sachen, wo es Comets gibt.
Wo findet man den Full-Res Peepo Happy-Hintergrund gar nicht? Den habe ich AI upscaled. Und ich
wollte ja eigentlich mir Custom-Hintergründe anfertigen lassen, dass das nach morgens,
mittags, abends aussieht. Aber irgendwie hat sich da der Designer nicht mehr gerührt bis jetzt.
Na gut. So, der VM-Champ ist am Start. Alles klar, also wo sind wir stehen geblieben? Ich
überlege gerade, was war das letzte, was wir gemacht haben? Ich pulle mal, ich pulle mal das
repo. Git pull. Sind wir denn überhaupt? Ja, wir sind in Master. Git pull. Git up. Ich rebase.
Oh, wir haben hier uncommittedes Zeug drin. Was haben wir denn hier gemacht?
Das brauchen wir nicht. Git remote update. Jaja, das ist okay, wenn das nicht funktioniert. Git
reset minus minus hard auf. Git hub master. Oh, fliegt der ganze Scheiß weg. Sehr gut. Also,
ich habe ein paar Sachen angepasst. Moin Jonas. Also, ich habe ein paar Sachen angepasst. Es gab
hier gestern noch ein Issue von unserem FyFat-Modge hier, dass Network-Bridge 0 manchmal nicht gefunden
wird. Übrigens, bevor ich jetzt wieder anfange, direkt direkt einzusteigen und die Leute sich
wieder fragen, die das letzte Mal nicht dabei waren, was ist da eigentlich los? Soll ich euch
auch mal kurz erklären, was wir eigentlich machen? Ist glaube ich sinniger, ja. Also,
ich habe vor einer Weile ein kleines Tool gebastelt. Und zwar, ich meine, es hat zwar viele
Source Code Dateien, aber es ist nichts wirklich super Komplexes. Also, ich habe ein kleines Tool
gebaut und zwar für VMs, für lokale VMs. Normalerweise ist es so, wenn ich jetzt was
testen will bei mir, also ich betreibe ja übrigens hier mal Linux auch unter Windows in der VM. Wenn
ich jetzt was testen will, lokal bei mir hier auf der Kiste, dann kann ich das entweder im
Docker-Container machen. Kann ich zum Beispiel sagen, Docker run, ja hier, nennen wir mal Ubuntu.
Docker run, da war noch irgendein Ubuntu vielleicht drin in der History. Ich habe
keinen Bock, das zu schreiben. C'mon, da war bestimmt noch ein Ubuntu. Da, hier.
So, also, wenn ich irgendwas testen will, ohne dass ich meine lokale Kiste versaue damit,
kann ich in Docker-Container starten und da drinne Dinger machen. So, manche Dinger gehen
aber nicht gescheit, im Container zu machen. Was zum Beispiel nicht geht, ist Modprop,
ist noch nicht mal installiert. Ich weiß gar nicht, was muss man installieren, um Modprop
installiert zu bekommen. Update. Install, Modprop, was muss ich installieren? Was? Up,
K-Mod, alles klar, obviously, K-Mod. Mod, Modprop, PC, Speaker, not found. Es ist, ja. Ihr werdet
jetzt schon feststellen, okay, irgendwie, es funktioniert. Man kann keine Kernel-Module
laden und entladen, gescheit, hier im Container. Das funktioniert nicht und ihr könnt auch
beispielsweise nichts an der CRUB-Config ändern im Container. Ihr könnt zum Beispiel auch
keine Unit-Files im Container anpassen und das Ding dann rebooten und hoffen, dass es
funktioniert. Es gibt ein paar Sachen, die funktionieren im Container nicht gescheit.
Dafür sind VMs nach wie vor das Mittel der Wahl oder auch, wenn man Low-Level-Netzwerkzeug
testen will oder so, klappt das in Containern einfach nicht richtig. Container sind eine
super Geschichte, um Anwendungen auszuprobieren oder um reproduzierbar und das ist ja eigentlich
auch das, wo Container herkommen, um reproduzierbare Builds zu haben von Software zum Beispiel. Dafür
sind Container super, aber man kann nicht alles, was man unter Linux machen will, mal testen nebenbei
in einem Docker, mal schnell in einem Docker-Container, das klappt nicht. Für manche Sachen
braucht man nach wie vor VMs. Und wenn man VMs installieren will, unter Linux ist das ein
recht langwieriger Prozess. Man muss sich als erstes mal das ISO runterladen. Also man geht da
zum Beispiel, Debian, Download, lädt sich das aktuelle Debian ISO runter, so hier bla bla bla,
Stable, AMD 64, ISO, wo ist es überhaupt? Da, hier, net install. Erledigt man das ISO runter,
dann macht man Wirt Manager auf, dann erstellt man eine neue VM, dann wählt man das Installationsmedium
aus. So, dann musst du auswählen, was du installieren willst und so weiter und so weiter. Ich muss das
jetzt nicht alles durchklicken. Ihr habt es wahrscheinlich auch schon mal gemacht, eine VM angelegt.
Das gleiche in VMer Workstation, da müsste ich hier neue VMer stellen, next, next, installieren.
Dann würde ich das anmachen, dann müsste ich den Installer durchlaufen lassen und das dauert
halt 5-15 Minuten, bis man überhaupt ein Testsystem mit einer VM am Start hat. Und da habe ich mir
gedacht, das muss doch irgendwie schneller gehen oder ich hätte mir gewünscht, dass es ein Tool
gibt, was das schneller macht. Es gibt ein paar Tools, aber die haben mir alle unterm Strich nicht
gefallen. Das heißt, ich habe selbst was gebaut und zwar kann man jetzt das hier ausführen und
sehr zackig neue VMs starten. Man sagt einfach VMChamp Run, Test VM 69. Okay, das funktioniert
nicht. Das ist genau das, was ich hier übrigens fixen wollte. Ich zeige es euch mal mit der
neuesten Version, weil da ist das nämlich schon behoben. Dotnet, Run, Test VM 5. Jetzt sagt er,
okay es gibt keine Default Bridge, want to create now, yes, sudo Passwort und zack, auf geht's.
So, jetzt kann er lokale VMs erstellen. Ich kann es euch übrigens auch zeigen. Ihr braucht
den Wirkmanager nicht, ich zeige euch nur, dass es geht. Dadurch, da hat er jetzt eine lokale
Test-VM erstellt. Man braucht hier diese grafische Ausgabe gar nicht. Wartet, bis das Netzwerk da
ist und verbindet sich dann per SSH. Das heißt, vor einer 5-15 Minuten Installation, um mal schnell
was zu testen, muss man jetzt 20-30 Sekunden warten, bis die VM gebootet ist und verbindet
sich dann auch direkt per SSH und alles ist gut. So, jetzt habe ich eine vollständige VM,
unter der ich alles Mögliche ausprobieren kann, was ich will. Auch Kernel-Module laden und alles
Mögliche und auch rebooten und ich habe ein Init-System und alles drin, was man so braucht.
Also ich kann den Kram auch rebooten und dann ist es gut. Also sprich für schnelle lokale Test-VMs
ist das, was ich hier gebaut habe. Das Ganze gibt es übrigens hier auf GitHub. Wobblons-VM-Champ
hat auch mittlerweile schon 42 Sterne, also hat sich anscheinend gelohnt, dass ich ein paar mal im
Stream daran rumgebaut habe. Im Prinzip kann ich jetzt das vorlesen, was in der GitHub-Read-Me
steht. Man kann relativ schnell und zackig lokale VMs erstellen, die zum Testen sind und quasi
Wegwerf-VMs erstellen, wo sich dann automatisch per SSH verbunden wird. Wenn man vergessen hat,
wie das Ganze heißt, kann man sich auch auflisten lassen, welche VMs es gibt und man kann sich auch
per SSH connecten auf die jeweilige VM, wenn die dann läuft. So und am Ende, wenn man fertig ist,
sagt man clean und löscht da alles inklusive Images und die Festplatte ist wieder frei von
allen möglichen Rückständen von Test-VMs. Ist das ein Virtual Desktop, worüber du das Linux
laufen lässt auf Windows? Ein Virtual Desktop? Ja ist es, guck hier. Desktop 2, da läuft das
drin. Ich habe Desktop 1, läuft mein Windows, bzw. läuft überall Windows, aber Desktop 1 ist
hier der Browser und so im Fullscreen. Desktop 2 ist Vmware Workstation, nur dass ich Vmware
Workstation im Fullscreen laufen habe und dementsprechend kann ich da ohne Probleme
zwischen Windows und Linux switchen. Macht übrigens überhaupt keinen Unterschied,
performanstechnisch, was die CPU an geht oder kaum einen Unterschied zwischen Host und hier
Gastbetriebssystem. Ihr seht ja, also mein Linux in der VM funktioniert super und schnell und so,
das ist überhaupt kein Problem. Das einzige, was man hier drinnen nicht machen kann,
ist zum Beispiel, oder was man kann man machen, ist aber keine so gute Idee. Was man in einer
virtualisierten Linux Kiste nicht so gut machen kann, ist zum Beispiel Videos abspielen. Also
ich gehe jetzt mal hier, mache jetzt mal das Video an, hier auf 1044p. Sieht ja nicht so wild aus,
aber ihr seht hier oben schon, die CPU-Auslastung, die CPU-Auslastung ist halt ziemlich hoch.
Ist aber auch klar, dass die CPU-Auslastung relativ hoch ist, weil hier drinnen gibt es
keinen GPU-Decoder. Ach ja, und es ist 60Hz, das ist maximal 60Hz, ja das kommt noch dabei.
Aber es gibt halt keinen GPU-Decoder, also sprich, es muss alles von der CPU hier gemacht werden in
der VM. Dementsprechend ist es halt auch ziemlich CPU-intensiv, Videos und sowas abzuspielen. Das
wäre cool, falls sie das irgendwie noch mal hinbekommen bei VMWare, dass man in einer VM den
GPU, also den Decoder von der Grafikkarte, den GPU-Decoder benutzen kann. Glaube ich zwar
ehrlich gesagt nicht dran, dass sie das noch auf die Reihe kriegen. Ich glaube auch nicht,
dass es bei VMWare irgendwie eine Priorität hat, das sowas einzubauen, aber es wäre schon sehr nice.
Würde das theoretisch gehen, dass man in der VM und lokal auf dem PC gleichzeitig ein Game
laufen lassen kann? Naja, das kommt ein bisschen darauf an, wie anspruchsvoll das Game ist. Also ja,
du kannst Games in der VM laufen lassen, wenn sie mit ein bisschen älteren OpenGL-Versionen
so funktionieren. Nehmen wir mal den Klassiker schlechthin. Ungame. Unterlinux. Aufinstallier.
Mach hinne. Also du kannst hier drinne Games laufen lassen. So komische Dinge wie z.B. Super
Tox Cards oder sowas. Naja, das funktioniert in der VM. Schön ist halt was anderes. So,
also das funktioniert nur, aber nur begrenzt. Gut. Es funktioniert natürlich, also wenn die
jeweilige Software das unterstützt, funktionieren auch grafisch ein bisschen aufwendigere Sachen
in der VM. Ja, z.B. Uni-Engine. Wie heißt das Ding? Kann man jetzt aber nicht merken.
Uni-Gene Heaven habe ich sogar installiert. Also sprich, man kann ja auch solche Sachen
drauf laufen lassen. Fullscreen Resolution System Anti-Alasing Ultra Custom. Wie macht man FPS-Anzeige?
Geht das hier standardmäßig? Ja, also es geht, es geht, Poggers Tessellation muss,
muss, volle Pulle muss hier Tessellated werden. Also man kann da auch schon ein
bisschen antrucksvollere Sachen drauf laufen lassen, wenn das ältere Grafik-Schnittstellen
unterstützt in der VM. Das geht. Also wenn du ältere Sachen laufen lassen willst in der VM,
geht das. Wobei man sagen muss, eine VM ist wirklich nicht so gut als Grundlage zum Spielen.
Also zumindest eine voll virtualisierte VM nicht. So, Quit. Weg damit.
Ich glaube aber Hyper-V kann das auch nicht unter Windows host, sondern nur unter Windows
Server host, was man wahrscheinlich auch nicht benutzen will. Welche Programmiersprache benutzt
du am häufigsten? Also am liebsten benutze ich C-Sharp, weil das, also .NET, C-Sharp,
weil das mein Lieblings-Framework, mein Lieblings- und die Lieblings-Programmiersprache ist.
Insgesamt würde ich sagen, ist das eine Mischung aus Bash, relativ viel Bash. Ich meine, ich bin
immer noch hauptberuflicher Linux-Frickler. Also Bash ist relativ häufig taktäglich im Einsatz.
Also Bash ist relativ häufig taktäglich im Einsatz. Bash. Und wenn es was bisschen Ernsteres ist,
C-Sharp. Wenn es Frontend-Sachen sind, JavaScript. Und ab und zu das eine oder andere Python-Script
auch in letzter Zeit. Ja, ich glaube, das trifft es eigentlich. C++ ist es auf keinen Fall.
Nee, das ist was anderes, was du meinst. Du meinst, ich habe vergessen, wie es heißt,
du meinst dieses eine Grafikkarte zu mehreren virtuellen Grafikkarten machen, was, äh,
beispielsweise in Quadro-Grafikkarten und sowas drin ist oder in extra Grafikkarten für
Virtualisierung. Das gibt es. Das ist irgendein, ich habe vergessen, wie es heißt, das ist
irgendeine spezielle Technologie, die der Hypervisor unterstützen muss und die Grafikkarte
unterstützen muss. Und dann sieht es allerdings für den Gast so aus, als hätte der eine eigene
Grafikkarte drin und das Ganze ohne so klassischen PCI-Path-Through. Das ist aber nichts, was man
normalerweise auf dem Desktop verwendet, um zu spielen damit. Das ist eher was für virtuelle
Arbeitsplätze für 3D-Model-Leute oder für CAD-Autodesigner oder sowas, die virtuelle
Arbeitsplätze benutzen sollen. Ehrlich gesagt, ich habe das auch noch nie live im Einsatz gesehen.
Ich weiß nur, dass es das gibt. S-A-I-O-V. Heißt das da auch so? Also ich weiß, dass es bei
Netzwerkkarten so heißt, aber es kann durchaus sein, dass es bei Grafikkarten auch so heißt.
Man kann auch eine zusätzliche Grafikkarte einbauen und die zu 100% dafür eingeben,
dann funktioniert das schon. Ne, das funktioniert nicht. Das funktioniert nur in spezieller
Kombination mit dem passenden Hostsystem und dem passenden Hypervisor. Unter Linux mit KVM kannst
du es machen, unter Windows mit VMA Workstation kannst du es zum Beispiel nicht machen. Und man
darf bei dieser Lösung auch nicht vergessen, dass man dann ganz andere Probleme hat. Weil
dann ist es nicht so, dass die VMA einfach eine Grafikkarte hat und man hier das Fenster sieht,
sondern der Output kommt bei einem zweiten Monitor raus von der zweiten Grafikkarte. Oder man greift
es ab und kopiert es sich rüber. Also es ist schon ein bisschen komplizierter. Dann ist auch die Frage,
wie bekommt man Maus und Tastatur in die VMA, wenn man das macht. Also das geht. Das ist aber von
der Handhabung her dann nicht mehr so einfach, wie wenn man eine VMA laufen hat, so wie ich hier.
Also bald man anfängt mit GPU-Paths zu, wird es auch inputtechnisch komplizierter. Das ist Rofi
der Applauncher, korrekt. Das ist Rofi mit ein paar Sachen, die ich mir selbst zusammengestrickt habe.
Genau.
Login-Class kenne ich, ja.
Ja, das funktioniert aber nur, wenn man die Logs als Host benutzt.
Angeblich geht das nicht mehr. Angeblich geht nicht mehr PCI-Path-Through mit Hyper-V
unter Nicht-Server-Betriebssystemen. Ja, das ist nice. Weitere Grund dafür,
warum WSL das Ja des Linux-Desktops einläuten wird.
Ja, das ändert aber nichts daran, dass du beispielsweise extra Maus und Tastatur
input brauchst für die VMA. Das macht es nicht einfacher. Nvidia-Crit heißt da Krempel. Genau,
das habe ich gemeint. Das habe ich gemeint. Ja, also für mich persönlich ist die einfachste
Variante, weil ich ja nicht Windows aus, oder sagen wir so, ich benutze ja nicht Linux aus
Glaubensgründen, oder ich verzichte ja nicht auf Windows aus Glaubensgründen,
wie das manche machen. Es hat ja jemand letzten sogar in einem Ami-Unternehmen gesagt, dass sie
ein Linux-Laptop benötigt, weil aus Glaubensgründen kann sie kein Windows benutzen oder so was,
und die haben mir dann auch tatsächlich ein Linux-Notebook gegeben nach längerer Diskussion mit
der IT. Aber ich benutze das, was sich am besten eignet für das, was ich machen will. Und bei mir
ist es so, Windows für Videos erstellen, Thumbnails erstellen, Sachen spielen und halt auch zum
Streamen. Und Linux für alles andere. Das ist die beste Kombination. Das heißt, ich habe gar
kein Bedürfnis hier irgendwie großartig GPU-Pass-Through zu machen, weil alles,
was ich unter Linux mache, funktioniert fortügig, auch ohne GPU-Pass-Through. Vielleicht das einzige
halt Video-Decoding, aber ich gucke die Videos halt meistens schlicht und ergreifend unter Windows an.
Und den Rest mache ich unter Windows. Das ist für mich persönlich von Handhabung und Anwendungsszenarien
das Beste. Ich bezweifle gar nicht, dass man irgendwie was ähnlich Gutes sich hin basteln kann,
weil es sicherlich immer kleinere Probleme bleiben werden, aber das ist für mich wirklich
das perfekte Setup. Ich sehe überhaupt nicht einen, da irgendwas dran zu ändern.
Kannst du mal was mit Jenkins machen? Ich habe ewig kein Jenkins mehr benutzt. Ich habe damals
einen Jenkins aufgebaut vor Urzeiten bei uns, als es noch vor kurzer Zeit Hudson hieß. Jenkins ist
ja auch nicht der Originalprojektname. Aber seitdem habe ich lange, ich habe wirklich lange nichts
mehr Neues mit Jenkins gemacht. Bin wahrscheinlich nicht die beste Informationsquelle für Jenkins.
Ich meine, wir könnten uns das Ganze tatsächlich
uns mal angucken als jemand, der wirklich keine große Ahnung mehr von Jenkins hat.
Ich muss mir da vieles neu angucken, was wahrscheinlich nicht verkehrt ist,
weil Jenkins eben so viel Neues wahrscheinlich mittlerweile bekommen hat. Allerdings im Kern
hat Jenkins immer noch die gleichen Probleme und eines der Probleme, an die ich mich erinnern kann,
von früher war, wenn das wirklich groß wird die Installation, also wenn die von vielen benutzt wird,
die Jenkins Installation, Jenkins skaliert nicht sonderlich gut. Was du bei Jenkins machen kannst,
du kannst viele Runner registrieren, dass die Jobs halt eben so in die Breite skalieren auf
mehrere Hosts. Was du allerdings bei Jenkins nicht machen kannst, ist den Jenkins selber skalieren.
Also du hast immer noch ein zentrales Webinterface, einen zentralen Backend Service, der läuft und
sowas. Zumindest ist das mein letzter Stand. Kann sein, dass es mittlerweile geht. Deswegen
war Jenkins früher zumindest sehr schwierig, wenn man richtig große Installationen hatte,
die von von sehr vielen Benutzern gleichzeitig benutzt werden. Hast du das bei dir auch,
dass Chromium bei Twitch Probleme macht? Ne. Benutz eigentlich immer Chromium zum Streams gucken.
Nö, mach keine Probleme, funktioniert wunderbar, außer dass die Auflösung
gerade ziemlich beschissen eingestellt ist, aber nö. Funktioniert. Nur, dass es jetzt
ein bisschen weird Champ ist. Das schaut aus, Leute.
Infinite Mirror hier. Ne, also ich hab keine Probleme. Ach, ich bin gerade in Chromium,
du hast recht, du hast recht. Wubblords Twitch, du hast recht, ich bin gerade in Chromium. Aber
in Chromium hab ich auch keine Probleme, weil ich guck immer ganz normal. Ich guck immer in
Chromium. Du musst gucken, welches Chromium Package du installierst. Ob mit Codex,
ohne Codex. Also es funktioniert ohne Probleme. Wie war die erste Woche auf der Arbeit? Ich
würde sagen recht nice. Es gibt allerdings einen Punkt, der mir schwer auf den Keks geht und das
ist wie Windows zentriert bzw. Microsoft zentriert, dass alles ist und dass ich kaum Rechte auf meinem
Notebook hab. Also ich gehe aber stark davon aus, ich werde da auch in nächster Zeit an allen
Stellen drüber meckern und wenn ich eine extra Linux VM mit Adminrechten kriege, dann sollte sich
das Ganze eh schon auch ein bisschen lindern, der Pain. Aber aktuell kann man eigentlich nicht
arbeiten. Mit Windows Notebook und so stark reglementiert restriktiven Settings kann ich
eigentlich nichts machen. Habt ihr einen Tischkicker und einen Obstkorb? Seriously,
ich hab keine Ahnung. Irgendwo. Der Laden ist mega groß. Ich hab mich fast verlaufen am ersten
Tag. Und ich würde mich immer noch verlaufen, wenn ich was suchen muss. Das ist mega groß.
So, Chet, ich würde sagen wir fangen jetzt so langsam aber sicher mal an mit Basteln,
mit Bastelkram. Gut, also ich habe euch jetzt, ich habe euch ja gezeigt wofür das Tool da ist,
nämlich um schnell lokale VMs zu starten. Also ich zeige es nochmal. VMChamp, Run, Kekkel. Er
lädt sich dann das aktuelle Debian ISO runter, wenn man keine Optionen angibt. Startet eine lokale
VM, wie man übrigens auch hier sehen kann. Wie gesagt, Wirt Manager ist nicht erforderlich.
Ich nehme das hier plus zum zeigen. Und jetzt bootet er die VM und startet das Netzwerk in der VM,
setzt ein paar SSH Keys. Und wenn die VM gebootet ist, wie man hier sieht, gleich ist er gebootet
und gleich ist er auch am Start. Dann verbindet er sich per SSH auf die VM und man kann in der
VM alles mögliche machen. Und wenn man fertig ist, kann man die VM löschen oder komplett alles
löschen, inklusive Images und dann ist wieder alles weg. Guck hier, VM clean. Also das ist ein
kleines Tool, was ich vor ein paar Wochen gebaut habe, um lokal schnell Test VMs anlegen zu können,
ohne dass man sich durch Installer durchklicken muss und so was. So sieht es aus. Genau. Und das
ist halt für den Fall der Fälle, wenn Docker Container nicht ausreichen. Ich habe eine kleine
Neuerung eingebaut im Vergleich zum letzten Mal und wir bauen heute auch noch eine neue Version.
Wir machen heute Version 0.04. Wir machen heute Version 5, aber da will ich noch was kleines
anderes dabeihauen. Und zwar, ich habe eine Neuerung eingebaut. Ich glaube, man sieht es
ja auch beim letzten Commit. Das letzte Commit ist Fixed Issue Nummer 3, nämlich, dass die
Default Bridge manchmal nicht existiert. Es ist nämlich so, wenn man KVM aus einem Package
Manager unter Linux installiert, dann ist normalerweise ein Standard Netzwerk Interface
dabei. Das hier, das ist die Default Netzwerk Interface. Das braucht man, damit die VMs überhaupt
ins Netzwerk kommen. Das muss man normalerweise nicht von Hand machen, nicht selber anlegen. Das
ist, wenn ich QEMO libvirt installiert habe, dann ist das standardmäßig dabei. Das muss ich
normalerweise nicht machen. Allerdings hat jemand festgestellt, dass das anscheinend manchmal nicht
standardmäßig dabei ist. Ich vermute ja, dass das entweder mal irgendwann gelöscht wurde von
Hand oder es irgendwelche anderen Probleme gab, weil normalerweise ist das standardmäßig dabei.
Und ich habe jetzt einen Check eingebaut, ob das Standard Netzwerk Interface da ist und erreichbar
ist. Und das habe ich folgendermaßen gemacht. Also, dass dieses Commit Fixed hier das ist das
Problem. Und zwar, das ist das Einzige, was seit dem letzten Stream dabei gekommen ist. Und zwar hier.
Also, was der macht, ist folgendes, wobei, ich bin ja blöd, ich kann euch jetzt eigentlich auch
hier, warum zeige ich euch das? Warum zeige ich euch das hier im Commit? Ich kann es euch auch
einfach hier drinnen zeigen. Also, das Einzige, was dabei gekommen ist, ist das hier. Check
Default Network. Der guckt, ob es ein Interface gibt mit dem Namen viabr0. Wie man hier auch sieht,
ifconfig oder ipadd. Chat, seid ihr lager ifconfig oder lager ipadd? Und umfrage, umfrage. Umfrage
mache ich mal kurz. IP oder ifconfig? Und jetzt kommt mir nicht mit ipconfig slash all oder so
komischen Windows-Shit an. Ich persönlich, ich persönlich benutze instinktiv ifconfig,
versuche mich aber seit Jahren schon an IP zu gewöhnen, kriege es aber nicht auf die Reihe.
Ist übrigens auch so was, wo ich nicht genau verstehe, warum man das Default Tool unbedingt
ändern musste. Wegen SystemD? Nee, ich glaube nicht, dass es das mit SystemD
zu tun hat. Okay, es ist ziemlich 50-50. Wie ip und ifconfig. Es ist genau 50-50. Das ist euer
Hobby, oder? Zu versuchen, dass wenn die Dinge möglichst, wenn die Dinge schon nah an beieinander
sind, dass die Leute dann auch, die keine Ahnung haben, um was es geht, voten, dass es auf 50-50
kommt. Stimmt's? Diese Umfragen sind immer komplett rigged von Anfang an.
Na ja, zumindest ihr seht es hier, es ist so eine Standardnetzwerk-Bridge oben. Und jetzt
kommt es anscheinend manchmal vor, wie man hier in diesem Issue sieht, dass aus welchen Hintergründen
auch immer dieses Standardnetzwerk nicht da ist, dass eben diese Standard-Bridge fehlt.
Magst ans Trinken erinnern? Dankeschön, aber ich habe gerade was getrunken. Es ist aber gut,
dass ihr das benutzt, weil ich vergesse das immer ganz gerne. So, und jetzt habe ich was
Neues eingebaut, nämlich der checkt, ob es ein Interface gibt, wir-bro, und die gibt es in dem
Fall. Dann checkt er noch, ob diese Default-Bridge, wenn er sie denn gefunden hat, ob der eine IP
hat. Das ist Link Magic. Ich weiß nicht, ob wir Leute hier zuschauen, die selten oder gar
nicht C Sharp verwenden. Das ist hier tatsächlich eine coole Sache, was es schon Ewigkeiten in C
Sharp gibt. Was ich mir wünschen würde, dass es mehr Sprachen auch hätten. Es gibt in vielen
Programmiersprachen mittlerweile so die Basics, also sowas wie eine Map-Funktion, sowas wie eine
Filter-Funktion. Es gibt sogar ein JavaScript mittlerweile. Aber diese ganze Link-Thematik von
C Sharp finde ich ganz nice. Und zwar kann man hier gucken, Network-Interface, get all network
Interfaces, und dann kann man filtern, quasi nach einem Netzwerk-Interface, was wir-bro,
wir-Bridge0 heißt. Wenn es das gibt, dann landet das in der Variable. Wenn es das nicht gibt,
dann steht da halt 0 drin. Als nächstes wird geguckt, wenn denn eine Default-Bridge gefunden
wurde, dann probieren wir die IP-Adressen davon zu kriegen und holen uns die einzelnen IP-Adressen
raus und dann gucken wir, ob am Ende irgendwie eine IP-Adresse gefunden wurde. Any. Wobei ich
das wahrscheinlich mir sogar sparen könnte. Ich glaube, ohne das Select würde das genauso
funktionieren, weil mich interessiert ja nur die Anzahl und nicht die IP-Adresse selber. Also
wahrscheinlich würde, wahrscheinlich würde das genauso tun. Aber ich lasse das mal,
ich bin mir nicht sicher, warum ich das gemacht habe. Vielleicht hatte das ja durchaus seinen
Sinn. So, dann guckt er, meine Nase ist jetzt auf einmal übelst zu. Vielleicht war der Tee zu
warm. Ich weiß nicht. So, dann guckt er, ob es eine Default-Bridge mit IP gibt. Wenn ja,
dann ist vollkommen egal. Dann hört er auf, weil wenn es eine Default-Bridge gibt mit gültiger
IP-Adresse, dann können wir aufhören, weil dann geht ja alles. Jetzt kommt die Preisfrage. Wer
von euch im Chat hat schon gezuckt und hat gesagt, Max, warum vergleichst du ein Buhlwert mit True?
Wer weiß es? Es ist nicht, weil ich so blöd bin, einfach nur so zu schreiben. Wer weiß es? Wer ist
High IQ genug, dass er das weiß? No-Label, richtig. Korrekt. Das ist ein Trick, wobei ich weiß gar nicht,
ob das ein Trick in C-Sharp ist oder ob das gewolltes Style-Guide-Konform ist bei Microsoft.
Keine Ahnung. Also, es ist so, an der Stelle, ihr seht, das ist ein Buhl-Fragezeichen. So,
warum ist das ein Buhl-Fragezeichen? Wenn ich mal die Idee erkanne. Ist das ein Buhl-Fragezeichen?
Also, es gibt, ich zeige euch das mal, ein ganz kurzer Exkurs. Also, man kann so was hier machen,
Buhl-Cackle-Gleich-False. Das ist eine Variable vom Typ Buhl mit diesem Value. Ich kann aber auch
sagen, Buhl-Fragezeichen, wobei, machen wir es anders. Was ich nicht machen kann an der Stelle ist,
also ich kann sagen, Cackle-Gleich-True. Das funktioniert. Was ich nicht sagen kann,
Cackle-Gleich-Null. Das geht nicht, weil in C-Sharp solche Basics-Sachen wie Int und Buhl und so
was Value-Types sind. Die können nicht Null sein. Wenn ich möchte, dass es True-False oder auch
Null sein kann, dann muss ich sagen, haha, du bist ein Nullable-Value-Type. Das ist dann so was hier.
Das für sich genommen ist gar nicht so toll. Der Unterschied zwischen Buhl und Nullable-Buhl ist
allerdings, wenn ich jetzt hier drauf zugreife, was es hier gibt, eigentlich nichts. Nur die
Standardmethoden, die definiert sind für alles. To String, Try Format, also nichts wildes. Wenn
ich jetzt allerdings hier ein Fragezeichen davor mache, dann sehe ich, okay, da kommen jetzt andere
Sachen. Ich kann jetzt checken, hat das einen Value und danach kann ich auch den Value daraus
abgreifen. Wenn man so will, ein Object-Wrapper um einen Value-Type. So kann man sich das ungefähr
vorstellen. Das ist relativ praktisch in solchen Abfragen hier, weil Default-Bridge kann ja Null
sein. Ich sage hier Default, also Get-All-Network-Interfaces und ich suche das erste
Interface, was Vibr0 heißt. Und wenn ich das nicht finde, dann ist ja das, was hier rauskommt,
Null. Und das sieht man ja auch hier. Der Typ ist Network-Interface-Fragezeichen. Also das ist
ein Network-Interface oder Null. So, und jetzt ist halt die Sache, Default-Bridge kann ein Network-
Interface sein oder es ist Null. Wäre Null nicht auch False? Nein, wir sind nicht in Javascript.
Im Javascript-Land ist das so. C-Sharp ist das zumindest implizit nicht so. Kann es Null und
Bulls gar nicht direkt vergleichen? So, und damit ich die Abfrage hier relativ kurz und knackig
halten kann, gibt es in den Sharp-Seiten ein paar Versionen schon diesen Fragezeichen-Operator.
Der Fragezeichen-Operator, ich weiß gar nicht, wie das Ding offiziell heißt. Ich glaube,
Null-Coalescing-Operator oder wie auch immer nennt sich das offiziell. Das ist quasi ein If,
was er unter der Haube macht. Also wenn er das hier kompiliert, checkt er vorher, ob das hier
Null ist. Aber es ist doof, wenn ich dieses If hier, If-Default-Bridge-Null, wenn ich das
von Hand machen muss. Das heißt, ich sag jetzt hier, okay, ich möchte gerne auf dieser Default-Bridge
Get-IP-Properties aufrufen. Lack das Stream, das kann ich dir sagen, ob der laggt, wer weiß,
obwohl davon wieder Shit ist. Drop-Frames, nein, nicht ein Frame getropped, dann laggt er bloß
bei dir. Ich möchte Get-IP-Properties aufrufen auf diese Default-Network-Bridge. Allerdings,
die Default-Network-Bridge kann ja Null sein, weil er das nicht gefunden hat. Deswegen guckt er an
dieser Stelle, wenn es nicht Null ist, nur dann ruft er das auf. Dann macht er den ganzen anderen
Krempel. Das bedeutet jetzt allerdings, hier kommt zwar ein Bool raus, allerdings, wenn das hier Null
ist, dann kann ja kein Bool rauskommen, weil ich das Eigentliche, was dazu führt, nicht ausführen
kann. Das heißt, es ist quasi ein Value-Type, also ein Bool, der allerdings auch Null sein kann.
So, und wenn man jetzt checken will, ob ein Nullable-Bool denn einen gewissen Wert enthält,
dann kann man das so machen. Was die Sharp macht, ich kann euch mal die lange Variante davon zeigen,
der sagt, Default-Bridge-Has-IP-Has-Value und Default-Bridge-IP-Value. Also, das hier ist
die Kurzvariante davon. Dass ich nicht jedes Mal checken muss, ist es nicht Null, bzw. ich könnte
auch so machen. Ich glaube, das geht auch. Also, dass ich das nicht jedes Mal machen muss,
ist das die Kurzvariante davon. Das ist nämlich nur True, wenn dort ein Bool drin ist, der nicht
Null ist und der gleichermaßen True ist. Das ist quasi ein kleiner Trick in C Sharp,
oder es kann sogar sein, dass es im offiziellen Style Guide drin steht, wie man sowas überprüfen
kann. Gleich, gleich True geht auch, korrekt. Das funktioniert eigentlich immer, egal mit welchem
von beiden. Also, so würde auch funktionieren. Was sogar die schönere Schreibweise ist,
weil hier will ich ja gar kein Pattern-Matching oder sowas machen. Ja, dann guckt er, wenn die
Default-Bridge Null ist, dann gibt er eine Fehlermeldung aus, fragt, ob man die jetzt
anlegen soll, dann legt er die Default-Bridge an. Aktuell cheate ich noch ein bisschen. Ich
führe unter der Haube ein Shellscript aus, was die Bridge anlegt und wenn die Bridge da ist,
allerdings die Default-Bridge keine IP hat, dann legt er das an mit der IP und startet das.
Muss man jetzt nicht so sehr im Detail wissen. Wichtig ist, wenn ich jetzt versuche zu starten
und aus irgendwelchen Gründen, das ist nämlich das, was hier in Issue 3 beschrieben war,
wenn ich die Default-Bridge aus irgendwelchen Gründen gelöscht habe oder wenn die inaktiv ist
und ich versuche das auszuführen, dann sagt er, hey guck mal Alter, wir Bridge Null not found.
Willst du jetzt eine anlegen, dann sage ich yes, dann sagt er hier, guck mal da, das würde ich
anlegen, dann muss man Sudo, muss man Rute-Rechte haben, dass das geht, sagt yes, ok, alles klar.
Wenn man jetzt hier wieder reinguckt, werden die feststellen, die Bridge ist wieder da und
auch wieder gestartet. Das ist im Prinzip nur um diesen Problemfall zu fixen, falls das mal
nicht da ist. Genau, das ist das Einzige, was ich seit dem letzten Stream gemacht habe. Ich habe
das hier hinzugefügt. Achso und ich habe noch ein bisschen schöner gemacht, wie man sich zu
Lib Wirt verbinden kann, aber das ist jetzt eigentlich nicht der Rede wert. Das heißt,
ich muss hier nicht jedes Mal die Session angeben, sondern kann einfach sagen Create for Session,
sonst hat sich da nichts geändert. So sieht es aus und heute gucken wir uns mal den Pull-in-Request
an von unserem Five-Hat-Mod, nämlich Improvements for Build and More Distros. Also was heißt von
unserem Five-Hat-Mod, das unterstellt jetzt den anderen Mods, dass sie nicht Five-Hat sind,
aber wir haben selbstverständlich nur Five-Hat-Mods oder Cute-Mods, wobei der Original Cute-Mod ja
schon lange nicht mal da war. Und nicht nur die Mods sind Hi-IQ, der Chat selbstverständlich auch,
weil ihr wisst ja, ich kann es ja nicht oft genug sagen, aber wie gerade übrigens die Nass läuft,
ich weiß nicht, woher. Man kann sich oft genug sagen, dass jeder Prime-Sub zu mehr Five-Hat führt
und nachdem mittlerweile schon so viele Leute Prime-Sub haben, ist der IQ einfach durch die
Decke. Allerdings verfällt das auch mit der Zeit, man muss regelmäßig resubben, damit das anhält.
Und jetzt mal ganz ohne Spaß, falls ihr Prime-Subs übrig habt, guckt, dass ihr die irgendwo auf Twitch
raushaut. Wie gesagt, muss auch nicht bei mir sein, sucht euch im Zweifelsfall auch irgendeinen
5-Mann-Streamer oder so, die freuen sich da auch immer unglaublich drüber. Aber überweist Bezos
kein Geld. Gebt das Ding irgendwo aus. Radiosignal, danke schön für den Sub.
Was ist mit normalen Subs? Normale Subs verfallen ja nicht. Normale Subs ist ja nicht so, als musst du
einmal im Monat subscriben und du verschenkst Geld. Über normale Subs freue ich mich natürlich auch,
die verfallen aber nicht. Die kann man komplett aus freien Stücken und wann man will abschließen.
Also falls es dir jetzt danach ist und du willst, habe ich da natürlich auch nichts dagegen. Keine
Bezos für Bezos. So, also, wir gucken uns jetzt mal diesen Pull-Request hier an und zwar, was hat
er denn hier drin gemacht? Zeigt mal hier. Ich habe da vorhin schon mal kurz drüber geguckt und zwar
er hat, ähm, what? Das habe ich vorhin gar nicht gesehen. Ah, nee, okay. Check some files eingeführt,
das ist was, das habe ich vorgeschlagen glaube ich oder wurde vorgeschlagen im letzten Stream,
wo wir wieder sehen, high IQ Stream am Start, dass wir die Images doch mit Check some vergleichen
könnten, um zu wissen, wann die Images geupdatet wurden. Das ist eigentlich eine sehr schlaue Idee.
Ich glaube, das übernehme ich einfach auch so. Er hat Check some files eingeführt. Er hat
Verschreiber von mir korrigiert, nämlich Ubuntu 22.04 ist nicht Focal, sondern Jammy. Jammy Jellyfish
heißt das aktuelle Ubuntu, wobei das aktuelle gar nicht mehr. Ubuntu 23.04 ist es denn rausgekommen
schon. Luna Lobster. Ja, anscheinend. Willke, danke für den Sub und Oliver,
Ponger Subscription hier, danke Leute. Oh, Leute, mein Sound ist kaputt.
Hä? Jetzt geht's wieder? Alles gut.
Komischer Bug. Nein, es kann per Definition keine Bugs haben, weil wir programmieren ja
eigentlich prinzipiell immer nur fehlerfreie Software. Sollen wir einen Schwamm montieren?
Er tut eigentlich noch. Nur, dass ich eben gerade das Mikrofon gegriffen habe. So. Wie
heißt der Übersetzer für die Cute Voice? Das ist ein japanischer oder koreanischer Text-to-Speech-Engine,
die das hier macht. Wie die heißt, das ist eine gute Frage. Boah, ich hab keine Ahnung mehr. Ich
hab auch in den Source Code von Memeboard schon Jahre nicht mehr reingeguckt. Wo hab ich das denn
hier? Web Application 11, WPF App 2, bester Name überhaupt. Steam Deck? Ich hab absichtlich keinen
Steam Deck, weil ich will das alles selbst sehen, deswegen hab ich mir selbst so was gebaut. Das
gibt ja eine Web-Interface dazu auf dem zweiten Monitor. Also auf dem zweiten Monitor hab ich das
hier. Da kann ich die Dinge anklicken und dann erscheinen die halt. Manche laggen auch ein
bisschen, bis sie erscheinen. Ja, ich hab da aber ewig nicht reingeguckt. Wie heißt dieses Text?
Massive lag? Lagged überhaupt nix. So. Wo könnte ich das haben? Text-to-Speech. Wo
könnte ich das haben? Keine Ahnung. Aber ich wünsche Studio Code hier installiert. Da muss
ich mit Notepad aufmachen. Okay, da ist schon mal nix drin. Text-to-Speech, hier ist wahrscheinlich
auch nix drin. Services? Text-to-Speech-Service. Das klingt gut. Okay, wer findet es? Wer findet
es ohne Syntax-Highlighting und alles? Ihr. GetBytes, okay. Ist das ein Api-Key? Weiß nicht,
wahrscheinlich. Ihr. Voicetext.japan. V1. TTS. Credentials liegt. Ja, es gibt Schlimmeres.
Das hier verwende ich wohl. Ich hoffe, man kann die Seite noch öffnen, ohne dass jetzt
da irgendwelche Handhals kommen oder sowas. Das gibt's gar nicht mehr. Aber das geht auch
nur per Post-Request. Leute, ich bin mir nicht sicher, ob ich die Seite öffnen möchte. Ich
lasse es mal lieber. Es wird nicht nur Qualitätscode geschrieben, es wird auch nur fehlerfreier
Code geschrieben. Wie man hier sieht, das war gar kein Verschreiber hier oder so. Okay,
muss mal kurz das Kabel hier ein bisschen. Oh, oh, oh, oh, es hat sich fast runtergeschmissen.
Sack. So, okay, exellent. Also, was ist noch drinne in dem Pull-Request? Er hat ein paar
Sachen von mir korrigiert, wo ich mich verschrieben habe. Check-Summe hinzugefügt. Neue Betriebssysteme
hinzugefügt, was immer nice ist. Du hast jetzt gecheckt, dass du max... Nein, bin ich nicht.
Ich bin Wubblors. Wie kommst du darauf? Okay, das Logo habe ich von Max geklaut. Es gibt noch
mehr Leute, die mein Logo geklaut haben, habe ich letztens auf Twitter erfahren. Ich bin
obviously nicht Max FPS. Wir haben nur das gleiche Logo. So, er hat ein paar neue Betriebssysteme,
aber schön, dass du deinen Weg hergefunden hast. Ich habe letztens auf Twitter, hat mich
jemand angeschrieben. Das fand ich witzig. Es hat mich letztens jemand auf Twitter angeschrieben,
Max, dieser Streamer hat dein Logo geklaut. Ich dachte erst, er schickt mir jetzt einen Link von
Wubblors. War es dann aber gar nicht. Er hat mir einen Link geschickt von jemand anderem auf Twitter.
Ich zeige euch ihn jetzt nicht, weil, ein bisschen nicht flamen, so schlimm ist das nicht. Er hat
mir einen Link geschickt von jemand anderem. Der hat wirklich auch mal Kicks geklaut. Sein ganzer
Kanal ist auch so kicksmäßig gestylt und das Logo ist halt original mein Logo. Er hat einfach
meinen Kicks geklaut. Wahrscheinlich hat er den bei Google in der Suche gefunden und hat gedacht,
den nehme ich jetzt oder sowas. Keine Ahnung. Was ich viel blöder fand, vielleicht hat auch sein
Artist den Kicks geklaut. Ja, das kann sein. Dann ist die Anzeige raus an den Artist. An das
Trinkendenken, du hast recht. Das ist gut, dass ich das eingeführt habe, sonst vergesse ich das.
Und was ich dann ein bisschen blöd fand, ist, Leute, die ihm im Chat darauf hingewiesen haben,
dass es ja eigentlich ein Logo von mir ist, wurden gebannt. Das fand ich dann schon ein
bisschen cringe. Ich fände es gar nicht mal so schlimm, wenn er sagen würde,
hey mein Artist hat mir halt misst erzählt oder so. Aber dann auch die Leute zu bannen,
die ihn darauf hinweisen, ich schon ziemlich fail.
Ja, lasst uns mal weiter den Pullgequest angucken. Da hat Rocky Linux 8 und 9 hinzugefügt. Hast du
das Logo irgendwie schützen lassen? Du meinst, das irgendwie patenttechnisch eintragen oder so?
Nö. Aber ich meine, es wurde in meinem Auftrag angefertigt. Also die Rechte an dem Logo habe
ich, die kann jetzt nicht einfach einer kopieren. So, Rocky 8, Rocky 9 hinzugefügt,
Checksum angepasst, bisschen angepasst. Ja, dann müssen wir gucken, was wir machen,
wenn es hier keine Checksum für gibt. Ja, das habe ich schon dazu geschrieben. Und zwar Max,
das geht so nicht. Weißt du auch warum? Weil das muss tatsächlich so bleiben, wie es hier steht,
weil lib wird bzw. das KVM und drumherum kommen durcheinander, wenn es QCode2-Images sind,
die nicht QCode2 als Endung haben. Und die Ubuntu-Images, die haben .img als Endung. Und
da denkt er, das sind Raw-Images, obwohl es QCode2-Images sind. Deswegen wird hier
hardcoded QCode2 dran gehängt. Das muss so bleiben, sonst funktioniert es nicht. Guck,
die Ubuntu-Images sind .img, obwohl es unter der Haube QCode2-Images sind. Nur dass sie der
Meinung waren, sie speichern das nicht unter QCode2. Warum? Ich habe keine Ahnung, weil Canonical
kein Schimmer, aber das muss so bleiben. So, das kann man so machen. Die ReadMe wurde angepasst,
das ist auch okay. Du meinst, dass es beim Testen geklappt hat? Also ich hatte Probleme damit.
Wir sollten das Risiko nicht eingehen. Man kann das auch im XML fixen. Ich habe es hardcoded
im XML drin stehen, aber ich bin mir relativ sicher, ich habe es erst eingebaut, als ich Probleme
hatte. Davor gab es das auch noch gar nicht. Ich habe das eingebaut, nachdem ich Probleme hatte,
dass er das Ding nicht als richtiges Image erkannt hat. Es schadet ja auch nichts.
Es schadet ja auch nichts, wir lassen es mal lieber drin. So, und dann hat er das
Buildscript noch hübsch gemacht mit Farben und Zeug. Ich würde sagen, das merken wir jetzt.
Und dann müssen wir glaube ich ein paar kleine Sachen noch anpassen, wie zum Beispiel das mit
dem QCode2 und ich glaube, das Buildscript wird nicht mehr funktionieren. Ich vermute,
das Buildscript wird nicht mehr richtig klappen. So, also dann merken wir mal den Pullrequest,
allerdings wir merken ihn nicht so direkt, weil ich möchte ja noch ein paar Sachen anpassen.
Ich merke ihn lokal. So, und jetzt obacht, wie man in GitHub lokal Pullrequest merkt. Die meisten
Leute wissen nur, dass man in einem Pullrequest hier unten auf Mergen klicken kann und dann wird
er gemerged. Ja, das funktioniert, aber das geht auch anders. Und zwar es gibt die manuelle Variante,
die komplett manuelle Variante und es gibt die GitHub-Commando-Zeilen-Tool-Variante. Die
GitHub-Commando-Zeilen-Tool-Variante kann ich nicht machen, weil ich habe die GitHub-Cli gar
nicht installiert. Das heißt, wir müssen die komplett manuelle Variante machen. So,
und das geht auch wiederum auf zwei Varianten. Entweder man nimmt sich das hier vom Fork,
kopiert man sich das repo und sagt, wobei das nicht die schönste ist. Ich zeige es euch aber
trotzdem mal, dass es theoretisch funktionieren würde. Ja, man müsste dann sagen Git, das ist
aber übelst umständlich. Git, Remote, Add, Feature und das hinzufügen und dann könnte
man mit dem Remote-Repo vom Serious Max arbeiten, was aber ein bisschen umständlich ist. Was man
auch machen kann, was aber ein bisschen kryptisch aussieht, man kann sagen Git, Fetch,
dann muss man das Remote angeben. Bei mir ist das Remote GitHub, bei euch heißt das Remote
wahrscheinlich Origin, weil Origin das Remote ist, von dem das repo geklont wurde. Allerdings,
ich habe mehrere Sachen drin, einmal was Lokales und GitHub, wobei das brauche ich eigentlich gar
nicht mehr. Aber wenn ich GitHub-Repos habe, ich lasse die gerne mit dem Namen GitHub als
Remotes drin stehen und nicht als Origin, weil Origin ist immer das, was man relativ schnell
gepusht hat per Default und man möchte manchmal manche Sachen gar nicht so unüberlegt nach
GitHub pushen, weil es hier eben öffentlich ist. Also ich habe GitHub Remote immer ganz gerne auch
mit dem Namen GitHub. Also was man jetzt sagen kann ist Git, Fetch, GitHub heißt es bei mir und dann
kann man bei GitHub angeben, welchen Pull-Request-Stand man lokal Fetchen möchte,
um darauf zuzugreifen. Das funktioniert dann folgendermaßen. Pull, ich weiß nicht,
ob das nicht noch irgendwie einfacher geht. Dann die Pull-Request-Nummer, in dem Fall 5,
5 und dann slash head. Und dann zieht er sich das und sagt, ok, hier alles klar,
habe ich gemacht. Achso, ich kann jetzt auch noch irgendwie benennen. Benennen hier,
keine Ahnung, Max-Feature oder so. Und jetzt gibt es hier Max-Feature, das kann ich jetzt entweder
mir das alles lokal nochmal angucken, was er hier gemacht hat oder ich könnte auch sagen Git
Checkout da drauf und mir das angucken, was er da gebaut hat. Das geht, jetzt habe ich das
alles lokal. Jetzt gehen wir in meinen Master und ich sage Git. Übrigens, anstatt das hier zu
Fetchen, ich hätte es wahrscheinlich auch direkt merchen können. Das habe ich so noch gar nicht
ausprobiert. Aber jetzt, so kann ich auf jeden Fall sagen Git Merge Max-Feature. Merge Branch
Max-Feature, alles gut. Dann heißt es halt ein bisschen anders da wie Remote, das ist halt auch
irgendwie doof. Aber das machen wir jetzt einfach mal. Was ich nämlich machen will ist, ich will das
zwar merchen von ihm, aber ich hätte es vielleicht so nennen sollen, dann wüsste man auch Bescheid.
Zumindest kann ich jetzt die Sachen noch editieren, bevor ich das ganze Remote zu
Git pushe. Das erste, was ich editieren will, ist folgendes. Nämlich im Downloader will ich das
wieder rückgängig machen mit dem Image Name. Also plus QCOW 2 dran. Das ist das, was ich
ja auch im Code Review geschrieben habe. Dass das so bleiben muss hier. Da muss auf jeden Fall
Punkt QCOW 2 rein. Ist das schon mal gefixt? Und jetzt müssen wir uns noch mal das Bild angucken,
weil ich vermute, dass das neue Buildscript, was er gebaut hat, nicht mehr funktionieren wird mit
dem neuen Dockerfile. Das müssen wir uns jetzt mal angucken. Zumindest, er hat das sehr schön
gemacht, das neue Buildscript. Das ist jetzt nämlich bunt. Weiß ich, ob ich BuildX installiert
habe? Nee, nicht. Da sieht es noch schicker aus. Jetzt kann man das nämlich aufrufen. Build SH,
Version 5. Und jetzt guckt mal, hat er das nicht nice gemacht. Jetzt hat man sogar farbigen Output.
Ich breche das mal ab. Eine Sache ändern wir noch in dem Buildscript und zwar ein richtiger
Macher. Das ist das wahre High-Performer-Mindset. Wir machen noch mal eine Sache beim Build-Stab.
Und zwar hier. Wir machen das Quiet weg, damit man was sieht. Das hat mir nämlich beim alten
Buildscript schon nicht gefallen, dass man, wenn er abgekackt ist, nicht gesehen hat,
an welcher Stelle abkackt. Und jetzt bauen wir das Ganze noch mal. Ja, jetzt erkennt man
schon ein bisschen mehr, was passiert. Also, Build Docker Image. Guck mal, hat er das nicht
sogar schön Emojified, den Output? Da ist auch die Zoomer-Generation noch am Start,
bis das fertig gebildet ist. Er kompiliert den ganzen Krempel. App Builds. Error! Error
response from Demon. Could not find the file for MChamp in Container. Ah ja, gut, mein Docker
File ist kaputt. Das funktioniert nicht mehr. Da fällt mir noch was ein. Docker PSA. Da hat
jetzt einen übrig gebliebenen Container, oder? Hier, Container Name for MChamp is already in use.
Da müssen wir noch was einbauen, dass er am Anfang. Alter, wie viel Container-Schrott habe
ich denn hier bitteschön übrig? 10 Gigabyte. Da müssen wir noch was einbauen, und zwar wir
nehmen das, wo das Container Image wieder entfernt wird. Und übrigens ist es gut,
dass Docker mittlerweile Build X als Standard verwendet, weil damit ist das viel einfacher
als hier. Und wir machen ganz am Anfang, kopieren wir das einfach und sagen jetzt
Docker Remove Old Container. Das heißt, falls der da ist, wird er gelöscht. Ah, Bild. Ah ja gut,
jetzt müssen wir es nochmal durchlaufen lassen. Okay, das sollte auf jeden Fall, wenn der Container
da ist, es wieder löschen, aber der Output stimmt nicht. Das heißt, ich muss anpassen,
woher das Image kopiert wird. Ja, das ist easy. Da muss ich gleich nochmal ins, ich gehe hier unten,
ich mache das hier unten einfach. Docker File. Wir kopieren das einfach an die Stelle, wo du das
erwartest und gut ist. Das brauche ich, nur ganz kurz erwähnt, das brauche ich für mein
GitHub Actions Build. Jetzt funktioniert das nicht. So. Ich glaube, so müsste es jetzt passen.
Gut, jetzt schauen wir mal, ob das Bild oben durchläuft. Wobei, nee, das Bild kann ich
durchlaufen, weil, recht ist ab, das kann ich durchlaufen, weil ich das Docker-File zu
spät aktualisiert habe. Machen wir das nochmal. So, durchlaufen lassen. Müssen wir sonst noch
irgendwas anpassen in diesem Pull-Request? Wie sah denn die ReadMe aus? Wie sieht denn die ReadMe
jetzt aus danach? Hier, das ist alles, was du eingefügt hast. Du hast an oberen Stellen nichts
geändert, weil sonst hätte es wahrscheinlich auch einen Konflikt gegeben. Nee, das ist noch
das alte, was ich geschrieben habe, nur das untere. Okay, Bildexample hat er hinzugefügt.
Okay, das müsste funktionieren. Es ist auch gar eine gute Idee, das nicht nach TMP zu schreiben,
wie ich das am Anfang gemacht habe. Okay, das passt. Jetzt gucken wir nochmal, ob das Bild
jetzt auch durchläuft. Und ich muss mein Git ignore checken, ob ich Bild excluded habe. Ja,
ich habe Bild excluded. Sonst würde ich jetzt Binaries ins Git commiten, da bin ich nicht so
scharf drauf, ehrlich gesagt. Okay, es hat funktioniert. Bild lief durch. Create-Container-Done,
Docker-Copy-Binary-Done, Docker-Remove-Container-Done. Schön buntig alles, so wie das sein muss.
Output-Dear. Ja, sehr nice. Das gefällt mir. Schönes Bildscript. Und unter slash-build
vm-champ liegt jetzt das Binary. Ja, nice, nice, das ist schick. Ich würde sagen,
so können wir das Ganze lassen. Wir probieren nochmal kurz aus, ob das auch mit BuildX funktioniert,
falls ich BuildX installiert habe. Sollte eigentlich auch, weil BuildX ist mittlerweile default in
Docker. Das sollte die gleichen Parameter fressen wie das original Docker-Build,
aber man weiß es nicht. Also, nur mal der Unterschied. Früher hat man Docker-Container
so gebaut. Docker-Build und dann halt das aktuelle Docker-File. Danach gab es BuildKit.
BuildKit gibt es schon ein paar Jahre und das war unter BuildX. Das war quasi eine neue
Build-Engine für Docker. Das musste man dann so aufrufen. Also, das hier war das Original so
und BuildX ist das neue. Seit einem der letzten Docker-Versionen, seit dieser Docker-Version
tatsächlich sogar, das ist relativ frisch, ist das alte Docker-Build deprecated, was er hier
übrigens auch sagt, irgendwo. Er sagt, deprecated. Legacy-Builder is deprecated, will be removed
in a future release. Also, normales Docker-Build ohne BuildX ist eventuell nicht mehr so lange
vorhanden, wobei meine persönliche Vermutung ja ist, dass sie den Legacy-Builder niemals
aus Docker entfernen, weil wahrscheinlich Leute das einfach hardcoded irgendwie drin haben und
sich auf irgendwelche Eigenheiten davon verlassen, die BuildX vielleicht nicht hat und was auch immer.
Ich glaube persönlich, dass es nie entfernt wird der Legacy-Builder aus Docker, aber es
halt eben keine weitere Entwicklung geht. An das Trinken erinnern. Exzellent. Portman oder Schütze
nicht alle BuildX-Features? Ich habe keine Ahnung, weiß ich aus dem Kopf nicht. Portman benutze ich
manchmal ganz gerne, wenn du kein Route-Access hast oder sowas. Oder wenn du, wo Portman auch
ganz praktisch ist, wenn du in lokale Registries pushen willst, die kein gültiges TLS-Zertifikat
haben, dann muss man Docker immer recht aufwendig umkonfigurieren. Und bei Portman ist es einfach
eine Option, dass man das pushen kann. So, habe ich jetzt BuildX installiert, ich will gucken,
ob es mit BuildX auch funktioniert. Slash-Build Version 5, sieht schon mal gut aus. Ihr werdet
vielleicht festgestellt haben, das Bild sieht ein bisschen anders aus, das ist jetzt mit BuildX.
BuildX ist das deutlich bessere Docker-File-Erstellungssystem, da laufen mehrere
Sachen parallel, es geht schneller und du kannst vor allem auch Container-Images endlich,
ohne sie zu starten, auf die Dateien in den Docker-Images zugreifen. Früher war es so,
du musstest immer ein Docker-Image bilden, dann starten und erst wenn du es gestartet hast,
konntest du dann aus diesem gestarteten Container bzw. aus dem erstellten Container auf Dateien im
Image zugreifen. Das war ein bisschen umständlich, weil manchmal möchte man ja einfach nur was in
einem Docker-Container bauen und das Binary rauskopieren. Warum soll ich den Container
dafür starten müssen? Und das geht bei BuildX jetzt auch. Ich kann was erstellen, was bauen
im Container und es mir danach aus dem Image kopieren, ohne dass ich dafür einen Container
mit dem Image starten muss. Das ist in der Tat sehr praktisch. Jetzt sollte das Kompilieren
irgendwann noch mal durch sein in 30 Minuten. Immer recht lahmarschig. Fertig,
binaries available unter build-vm-champ-minusversion. Wie geht das denn? Du meinst,
was? Du meinst, Sachen aus dem Container-Image rauskopieren? Oder? Also das geht, also früher
musstest du das so machen, so wie wir das hier im Buildscript machen. Du musstest ein Image,
du musstest ein Image bauen, dann musstest du eine VM damit erzeugen und danach konntest du mit
Docker, das ist der alte Weg, danach konntest du mit Docker CP aus dem vom Image erstellten
Container was rauskopieren. Mit BuildX ist das total einfach. Mit BuildX brauchst du sowas hier
in deinem Docker-File und dann kannst du, ich zeig's dir mal in den GitHub Actions, da machen wir das
nämlich. Und dann kannst du sagen, da, dann sagst du Docker BuildX, Build, wobei man das BuildX an
der Stelle gar nicht mehr braucht, weil Build mittlerweile Default zu BuildX. Dann sagst du
hier, Minusminus Target Output, Minusminus Output Type gleich Local Destination, wo der Ordner hin
soll. Target ist das, was du hier in deinem Docker-File als Name angegeben hast. Scratch ist
so eine No-op-Image, was quasi nur temporär existiert, was nicht wirklich gebaut wird.
Du nennst das hier Output und hier gibst du an Target Output und dann, wo du eine Datei eben aus
diesem Build-Step hinschreiben willst. Also im Docker-File wird hier dieser Output,
dieser temporäres Image erzeugt. Es werden aus dem vorherigen Build-Step das Binary reinkopiert
und hiermit kopierst du jetzt aus dem Image raus und das geht ohne, dass du den Container starten
musst. Sehr praktische Sache, wenn man einfach nur reproduzierbar was bauen will im Container und
es danach rauskopieren. Passte eigentlich, ich würde sagen, dann ist das soweit durch. Git,
Status, Docker-File, Download, Read Me. Gucken wir noch mal kurz das Diff an, ob ich da irgendwas
übersehen habe. Das sieht gut aus. Das sieht auch gut aus. Das sieht auch sinnig aus. Nö,
ich glaube, das passt. Ich glaube, jetzt können wir das pullen, äh, können wir das pushen.
Git, Lock. Wir können die Änderung jetzt dem Max einfach unterschieben.
Und so tun, als hätte er die gemacht. Git, Status. Git, Push. Ach so. Oh fuck. Nee,
das war eine blöde Idee, Max. Ich bin mir nicht sicher, ob er jetzt noch erkennt. Na doch,
er sollte es noch erkennen. Also eins davon müsste dein Comet sein. 1C3, ja gut. Er sollte es beim
Pushen noch erkennen, dass es dein Feature Branch ist. Gut. Git, Push. Git, Master.
Wenn ich jetzt alles richtig gemacht habe und das am Ende kein Problem war,
dann ja. Pull Request ist closed. Ja, Pull Request wurde geschlossen von hier in diesem
Merch. Das heißt, haben wir das auch erledigt. Jetzt haben wir ein schönes,
sehr hübsches Buildscript. Aber was war denn sonst noch drin, was ich vielleicht noch mal
testen muss? Rocky Linux können wir testen, ob das jetzt funktioniert. Wobei, er hat ja noch
geschrieben, was er gemacht hat. Er hat Ubuntu 22 gefixt, Fedora 36 Link gefixt, ein schöneres
Buildscript gemacht, Rocky 8 und 9 und Ubuntu Beta hinzugefügt. Wobei das mittlerweile gar
keine Beta mehr ist wahrscheinlich. Das ist wahrscheinlich mittlerweile sogar raus.
Ja, das muss dabei bleiben und er wollt Duplicate Slashes. Rocky braucht mehr RAM,
sonst bootet das nicht. Okay, machen wir. Ubuntu 23 04. Nee, hast Du gar nicht hinzugefügt.
Fake News. Kennst Du eine gute Lösung, mit der man schnell Twitch-Words
downloaden kann? Ja. Das da. Beste. Ich kann Dir das mal zeigen. Das ist das beste Tool ever
dafür. Ich lade auch nur meine alten Words runter hier. Twitch Wobblos. So funktioniert das. Du
suchst Dir das Wort aus, was Du runterladen willst. Echtes Senior Moves. Ja, so machen das die Seniors.
Die Seniors vertrauen einfach den anderen, dass sie ordentliches Zeug programmieren.
Also mal angenommen, ich will das hier runterladen. Dann sage ich minus F, dann kann ich mir die Formate
angucken, in denen ich es runterladen will. Und dann sagen wir, du willst das Wort runterladen in
700 aus irgendwelchen Gründen. Frag mich nicht warum. Oder du willst aus irgendwelchen Gründen
das Wort in 160p runterladen. Dann gibst Du an, minus F, 160p, Link vom Wort und zack, ist das Wort
am Start. Ja, genau wie bei YouTube. Die Sites unterstützen übrigens extrem viele Sites. Supported
Sites, wenn Du hier drüber scrollst, die werden auch wie ein oder anderen fragwürdigen Sites
auffallen in dieser Liste. Höchstwahrscheinlich. Also da ist alles möglich drinne. Von Pornhub bis
YouTube und Twitch ist da alles möglich zu downloaden. A Boobasites, ja. So und irgendwann
ist es dann fertig runtergeladen. Das dauert ein bisschen. Ich mein Twitch Streams sind teilweise
drei Stunden lang und die Bandbreite ist nicht permanent super hoch. Es geht schon schneller
als drei Stunden Laufzeit. Und irgendwann ist das Video dann fertig runtergeladen und kannst es
aufmachen. Unterstützt bei Twitch leider keinen parallelen Download. Ja, ich gehe mal davon aus,
dass Twitch da auch gar nicht so scharf darauf ist, wenn die Leute ihre Wots irgendwie runterladen.
Aber man sieht, es funktioniert. Was ist die Frage für einen Freund? Wie
ist der Video Kunst? So jetzt ist er demnächst irgendwann fertig. Ich wollte es dir jetzt
eigentlich schnell zeigen, weil ich mir so dachte. Dann sieht man auch, dass es funktioniert.
Allerdings der Download von Twitch ist wirklich nicht sonderlich schnell. Gibt es dieses Tool auch
für Windows? Ja. Das Tool gibt es für Windows, für Mac, für Linux, für nahezu alles. Guck,
gibt es sogar schon fertige Windows Tipps und Sachen. Wenn man eine Application baut,
die sowohl CLI als auch GUI unterstützt, warum würdest du das machen, lieber Headless als Flagg
für keinen? Das kommt ein bisschen darauf an, worauf der Fokus liegt, ehrlich gesagt.
Also ist es hauptsächlich eine UI-Anwendung, die auch von den krassen Hackermans als CLI benutzt
werden darf oder ist es hauptsächlich das CLI, die auch ein eingebautes UI hat? Weißt du was
noch cooler wäre? Weißt du was noch sixheadiger wäre? Minus Minus Surf und dann ist es einfach
eine Web-Anwendung. Du machst Minus Minus Surf und dann gehst du auf Local Host Port 8000 und dann
hast du das UI in einem Browser. Da musst du dir noch nicht mal Gedanken darüber machen,
was für UI-Frameworks du verwendest. Du startest einfach einen lokalen Web-Server,
über die du dir das auslieferst. Die Web-Anwendung. Da musst du keine WPF-Geschichte und sowas machen.
Nein, wenn es ein Standalone Binary sein soll, ist es schwierig mit dem Trennen. Ja, okay,
verstehe ich. Dann sollte es standardmäßig UI sein. Wenn es hauptsächlich UI ist,
dann sollte es auch als UI aufgehen und du kannst dann Minus Minus Headless machen oder was auch
immer. Theoretisch könntest du auch die gleiche Anwendung als zwei Versionen rausbringen.
Es kann exakt die gleiche Anwendung sein, aber anhand des Namens könnte man das unterscheiden.
Oder wie auch immer. Wahrscheinlich würde ich lieber Minus Minus Headless machen,
wenn der Hauptfokus eben UI-Anwendung ist. Ja, wahrscheinlich schon. Ich habe es jetzt
schon drei Minuten laufen lassen. Ich lasse es jetzt noch fertig laufen, den Download,
damit ihr auch seht, dass das funktioniert, wenn man sich das runterläuft.
Gleich ist der Download durch und dann seht ihr, dass es geht. Ich werde das Ding mit VLC oder
FFPlay starten. Wundert euch nicht, den Wort habe ich absichtlich runtergeladen in 160p. Das ist
kleiner. Das ist ungefähr die Auflösung von alten Nokia-Handys, in der ich das runtergeladen habe.
Also nicht wundern, dass es gleich ziemlich beschissen aussieht, was ich abspielen werde.
Also FFPlay. Vier Tage Woche Beste. Guck, da ist er. Runtergeladenes Wort.
Also scharf ungefähr auf so großen Displays.
Native Nokia Display. Nokia Display as a Service.
Aber man erkennt alles, oder? Man erkennt das. Man erkennt das. Man erkennt Chico sehr pixelig und
mein Browser Fenster. Ansonsten erkennt man aber nicht wirklich was. Gut, aber ihr habt gesehen,
so funktioniert das mit Runterladen von VODs. Zensur nicht notwendig, das ist richtig.
Was ist deine Einschätzung? Statischen Code-Analysen in das CI gibt es zu viele Scans.
Wie meinst du, gibt es zu viele Scans? Meinst du, man kann es auch übertreiben oder
damit das verursacht zu viel Last oder was meinst du, gibt es zu viele Scans?
Statische Code-Analysen in das CI. Warum nicht? Also ganz ehrlich, ich finde das nicht verkehrt.
Neben so Sachen wie Syntax-Checks, vielleicht auch irgendwelche funktionalen Tests oder Style-Guide
Style-Guide-Sache. Warum nicht? Warum nicht? Ja. Wenn du richtig cool bist, hast du natürlich im
Hintergrund auch noch irgendeinen Test-Container, der gestartet wird und dann erstmal, also nicht
nur nicht, dass ich jetzt durcheinander bringe. Nicht nur so diese Standard-Unit-Tests, die du
ausführst, sondern auch noch Integration-Tests nennt sich dann, glaube ich. Wenn du die Anwendung
quasi ausführst und guckst, ob sie sich richtig verhält. Erzähl ich Mist, Leute? Ich bin mir
nicht ganz sicher, wie man das nennt. Also es gibt ja die Möglichkeit, den Code zu testen,
indem man seine Funktionen mit Beispielparametern aufruft und gucken, ob die sich wie erwartet
verhalten. Das ist das, was man so standardmäßig unter Unit-Tests laufen lässt. Dann gibt es auch
die Möglichkeit, du nimmst die fertige Anwendung und führst mit der ein paar Sachen aus und guckst,
ob sie sich so verhält, wie du denkst. Ich glaube, das nennt sich Integration-Test,
aber das ist nicht so 100% exakt meine Welt. Da weiß ich nicht so Bescheid, ob ich das alles
korrekt nenne. Achso, ich dachte, da geht es drum, ja. Mehrere Produkte wie zum Beispiel Veracode,
Zona Cube. Zona Cube habe ich mir letztens ein Video zu angeguckt, sah richtig Sixhead aus.
Habe ich aber zu wenig Erfahrung mit. Da kann ich dir gar nicht wirklich jetzt groß was zu sagen.
Ich weiß ja auch nicht alles. Also kann ich dir jetzt keinen Five-Hat-Tipp zugeben.
Ja, das kommt, Combined Entity kommt doch, kommt doch ungefähr hin.
Okay, so, das war jetzt der richtige Senior-Move. Wir haben das Ganze gemercht und gepusht,
ohne das zu testen, aber das ist nicht schlimm, weil wir haben noch kein neues Release gebaut.
Also das war, auch wenn es nicht so aussieht, eigentlich der richtige Five-Hat-Senior-Move.
Erstmal gepusht, dann gucken, ob es funktioniert und dann ein neues Release bauen.
Genau, ich wollte Rocky Linux testen. Schauen wir mal, ob das so prinzipiell alles geht.
Ich habe das Ganze gebaut unter slash build. Ich bin mir nicht sicher, ob, ja, wir hatten das
Okay, hier liegt die neue Version zum testen. slash build slash vmchamp. Okay, run, minus minus os.
Rocky sollte es da jetzt geben. Warum nicht? Warum gibt es das da nicht?
Du hast die alte Autocomplete noch gesourced. Das ist korrekt.
Siehste, ich sag doch, Prime-Subscriptions zahlen sich aus. Der Chat ist mittlerweile so
big brain, dem fällt das alles schon 30 mal schneller ein als mir. Ich habe die alte Autocomplete noch
gesourced. Genau, run, keckel 5, minus minus os. Muss ich das noch mal? Was ist das hier jetzt?
Moment, das geht bestimmt. Das ist bestimmt einfach nur broken. Aus irgendwelchen Gründen.
Wir können es von Hand ausprobieren, ob die Completion geht. Complete, run, minus minus os.
Okay. Ich glaube, mein Autocomplete ist irgendwie ein bisschen im Arsch, kann das sein?
Okay, habe ich irgendwas kaputt gemacht? Ich bin mir jetzt nicht ganz sicher. Moment, source.
Home, max, repos, vmchamp. Ich trage das mal in meine zsh ein und starte mal die Konsole neu.
Ich könnte mir vorstellen, da ist irgendwas im Arsch. Vmchamp, minus run, minus minus os.
Sollte jetzt eigentlich Bild? Da steht Rocky drinnen.
Warum steht da Rocky Linux jetzt nicht dabei?
Jetzt bin ich ein bisschen verwirrt.
Weil aliases ein leerer String ist, der nimmt glaube ich nicht aliases. Okay, cd, repos, vmchamp,
Bild. Wir sourcen das jetzt nochmal. So, champ, run, minus minus os. Da steht auch nicht Ubuntu 23
drinne. Jetzt bin ich verwirrt. Moment, Bild. Das steht doch da alles drinne. Jetzt müssen wir mal
kurz in source code reingucken. Run command. Autocomplete. Hier, distros, distro name to lower.
Hä? Da steht doch Ubuntu 23 04.
Jetzt blick ich nicht mehr durch. Also funktionieren tut es ja offensichtlich,
aber warum taucht das im Autocomplete nicht auf? Da taucht es auf. Irgendetwas ist mit meinem
Autocomplete richtig, richtig broken gerade. Da taucht es auf. Da taucht auch Rocky auf.
Hä? Warum taucht es denn im Autocomplete nicht auf? Okay, das checke ich jetzt. Das
checke ich gerade nicht. Das leuchtet mir nicht ein. Warum das im Autocomplete nicht drinne ist.
Ich weiß auch gar nicht, wie ich das fixen soll, weil
eventuell ist das completion script defekt. Es funktioniert ja. Das ist ja auch ziemlich,
habe ich schon. Okay, wir löschen es einfach nochmal Bild. Wir hauen die Docker Container
nochmal weg. Keine Ahnung, was da los ist. Lass uns nochmal bilden. Ich glaube nicht,
dass es was bringt. Ich habe die richtige Completion. Das ist jetzt komisch. Woran könnte
das? Keine Ahnung, woran das geht. Mein Distros, da ist es drinne. So kompliziert. Ist jetzt nicht,
wäre da großartig was von Hand notwendig. Normalerweise sollte da alles selbst drinne
stehen. Gut, dann lassen wir es jetzt nochmal bauen. Ist ja gleich durch und dann nochmal ausführen.
Hast du es übers Auer installiert? Ja, habe ich. Wobei ich jetzt eigentlich gedacht habe,
dass vielleicht, wenn ich es explizit angebe, wir deinstallieren es mal. Hat sich aus. Hat
sich aus vm jammed. Source. Not found, jaja. Not found? Bild. Hä? Ach so,
pass. Pass muss ich vielleicht setzen. Okay, ich glaube, das ist wirklich gerade pro. Wir machen
es mal so. Cp. Bild. Vm jammed nach. Repos. Scripts. Helper. Okay. Run. Minus,
Minus. Okay, das ist wirklich mit der alten installierten Version aus irgendwelchen
Gründen in die Kläre gekommen. Okay, jetzt, jetzt passt das. So, jetzt können wir auswählen.
Warum ist das eigentlich alles doppelt drinne? Einmal groß und klein. Das ist ziemlich bescheuert.
Warum habe ich das so gemacht? Wahrscheinlich, dass ich so machen kann oder so. Okay,
probieren wir mal das neue aus. Rocky Linux 8, also quasi Red Hat Enterprise Linux 8.
Angeblich bootet das nicht mit Default ran. Gucken wir mal, ob das stimmt. Yes.
Boah, wie fett ist denn das Image, please? Oder sind die Red Hat Server einfach nur lahm as fuck?
Ich habe gerade was getrunken, Poggers. Danke fürs Erinnern, Leute. Ihr seid high IQ,
massive. Schlauer Chat. Wie groß ist denn dieses Image, please? Denn Debian Cloud Image ist,
wenn es hoch kommt, 300 MB. Wie fett ist denn das? What? 1,6 Gigabyte. Das ist doch kein Cloud Image,
das ist voll DVD. Warum ist das so groß? Was machen die Red Hat Leute da wieder? Muss ich
nicht verstehen, oder? Okay, 1,6 Gigabyte, 1,7 Gigabyte. Dann bleiben wir noch bei Debian,
würde ich sagen, oder? Lass mal gucken, ob es funktioniert. Also ergeblich ist Default RAM zu
gering. Oh. Ist das größer als 4 Gigabyte oder was?
Okay, das bootet schon mal gar nicht. Wie groß ist denn bitte schön das Rocky Image?
Wie groß ist das? Alter meine Güte, ist das fett. 1,6 Gigabyte. Wäre das nicht schlau,
die Memory Defaults basierend auf dem Image zu hinterlegen? Ja, wäre es. Bisher war das
nicht notwendig. Alle Sachen sind minimal gestartet mit 256 MB RAM. Dummes Verb, dankeschön.
Was macht das eigentlich gerade? Was macht das eigentlich da so? Ich meine,
außer dass es 100% CPU Last frisst auf einem Kern. Was tut es da gerade im Hintergrund? Gar
nichts, außer 100% CPU Last zu fressen. Okay, nice. Also, VMChamp, RM. Achso, ich bin ja auch im
falschen Ordner. Heißt im Ende, warum sagt er Shrinking the Image? Ist das Default? Das
Default Image ist nicht viel Gigabyte groß oder? Das Default Image ist viel größer. Gucken wir
mal. QEMO Image. Info glaubt geht das. Disk Size. Ach, Virtual Size 10. Okay,
na dann ist das doch in Ordnung, was ich mache. Ich setze das auf 4 Gigabyte, das Image und wenn
es größer ist, dann ist okay, dann macht es einfach nichts. Das ist doch in Ordnung. Okay,
anscheinend sind die Images zu fett. Dann führen wir das Ganze nochmal aus. Minus Minus Memory,
1024 MB. Okay, damit sollte es doch jetzt gehen. Und Disk 20 GB. So, das sollte jetzt hoffentlich
funktionieren. Reicht 1024 MB RAM auch nicht aus? Oder bootet das jetzt irgendwann? Weitere
Grund, warum für mich Red Hat einfach immer Abfang ist. Ich weiß im Business Umfeld ist es
saumäßig beliebt. Der alten Arbeit hatten wir ganz viel CentOS Red Hat auf der neuen Arbeit,
haben wir auch relativ viel CentOS Red Hat. Aber ich weiß nicht, immer wenn ich damit was
mir auf den Keks. Bootet er jetzt? Probing EDD. Was soll das überhaupt heißen? Probing EDD.
Warum ist das so beliebt? Weil vieles... Ah, jetzt hat es funktioniert. Ach, die haben standardmäßig
eingestellt, dass man bei Booten nichts sieht oder was? Das liegt daran, viele Software ist
zertifiziert für Red Hat, zum Beispiel Oracle Geschiss, wobei Oracle am liebsten natürlich auch
ihr eigenes Oracle Unbreakable Linux verwendet darunter. Und die verkaufen halt Support-Verträge
und haben gute Verkäufer. Okay, jetzt hat es funktioniert. Hier haben wir unser Rocky
Linux am Start. Nein, Moment, Moment, Jam Update. Und es ist auch nicht mehr Jam,
das ist ja DNF mittlerweile. Wobei, Jam fressen die immer noch, oder? Es ist so Pains Champ einfach
nur. Wobei, Jam ist ein Rapper für DNF nur noch, gell? Also das würde ich im Leben nicht für eine
schnelle Test-VOR-M nehmen. Guckt euch das mal an, da drehst du durch bei. Na gut. Wie ist deine
Meinung zu Projektstrukturen? Wir haben viele Projekte Backend in C-Sharp, Frontend in Jazz.
Sollte man Frontend und Backend in separate Projekte packen? Oder beides in einem Projekt? Findet ihr,
ist die IPipeline leichter zu handeln, wenn die getrennt sind, aber unsere Entwicklung... Ich
persönlich mag es in einem Projekt. Da muss ich in dem Fall euren Entwicklern recht geben, aber ich
meine, du hast ja driftige Gründe für und je nach Größe kann das ja durchaus Sinn machen.
Ich für mein Kram, und das ist jetzt halt auch keine Sache, wo irgendwie 80 Leute dran arbeiten,
finde das praktisch, wenn es in einem Projekt ist. Und Monorepos sind ja so der heiße Shit aktuell,
wobei ja zu jedem Furz mittlerweile Monorepo gesagt wird. So nach dem Motto, wir haben ein paar
Kubernetes-Yammels und eine Anwendung der Monorepo. Das würde ich allerdings dann trotzdem nicht machen.
Also Infrastrukturdefinition würde ich definitiv woanders hin machen. Weil ansonsten hast du das
Problem, dass deine History komplett versaut wird von Infrastrukturänderung. Also stell dir mal vor,
du hast ein Repo mit Infrastruktursachen drinne, Frontend, Backend und 90% der Comets sind
irgendwelche Änderungen an der Infrastrukturkonfiguration. Das ist doch doof, das will man nicht haben. Das heißt,
ein Infra-Repo würde ich tatsächlich getrennt machen. Also Kekkel-App, Kekkel minus Infra und
theoretisch könnte man noch ein noch ein drittes Repo machen, wo nur automatisch generiert das
Infrastruktur, wo nur automatisch generierte Infrastruktursachen reinkommen, die dann automatisch
von irgendeinem Continuous Deployment Tool auf den Kubernetes-Cluster oder sonst was Applied werden.
Weil ich finde, Repos, wo automatisch generierter Content rein committet wird,
immer Paints-Champ, wenn es die gleichen Repos sind, wie wo auch normal manuell dran gearbeitet wird.
Dann hast du da ein riesen Rauschen an Comets, das keiner braucht. Aber ich persönlich mag
tatsächlich, wenn Frontend und Backend im gleichen Repo liegen. Ist es okay? Yes, yes. Key imported.
Warum auch immer ich jetzt doppelt yes sagen musste. So, okay, unsere Tests sind beendet.
Ctrl C, ich möchte abbrechen. Jam, ich will abbrechen. Abbrechen, abbrechen, please. Okay.
Vm-Champ. Rm. Bam. Einfach die Vm gekillt. Easy, weg ist es. Ah, ich muss,
ich muss mein in mein .files-Repo wieder sunken.
Sehe ich gerade. Ich habe ein paar Sachen noch nicht drinne.
Moment, ich habe, ich habe hier mehr Repos drinne. Ist auch Blödsinn. Git pull origin master.
Wait a minute. GitHub. GitHub. Ah, schon besser. Wie verwendet man den Kram jetzt zum Applian der
config-files. Ich glaube, update oder sowas. Update. Override. Okay. So, und jetzt sollte
ich eigentlich, wenn ich das richtig gemacht habe. Ah, nice. Jetzt kann ich auch Fenster abschießen
von meinem Terminal. Wie sollte man es denn sonst machen? Frontend und Backend gehören noch
zusammen. Naja, du kannst auch ein eigenes Repo machen für, du kannst auch, du kannst auch
Kackel minus App minus Backend, Kackel minus App minus Frontend machen. Das ist vielleicht
von der Einheitlichkeit ja sogar ein bisschen schöner, weil wenn du im Endeffekt Repos hast,
irgendwie Kackel App minus Frontend, Kackel App minus Backend, Kackel App minus, keine Ahnung,
Native UI oder immer wieder Kram heißt und Infra und am Ende dann auch irgendwie minus Infra,
wie immer man das nennen soll, ich weiß jetzt nicht. Vielleicht ist das ein bisschen einheitlicher,
okay. Aber ich persönlich mag, wenn der Sourcecode in einem Repo ist. Wobei ich,
wobei ich tatsächlich, also ich würde, bei mir würde der Kram dann wahrscheinlich so heißen,
wobei ich das Infra-Repo auf jeden Fall auslagern würde und ob man hier so eins braucht,
je nach Tools auch vielleicht. Das würde ich auf jeden Fall einfach machen, aber hier kann
man natürlich, ja Web, ich würde es übrigens auch gar nicht Frontend nennen, da bin ich jetzt
persönlich zumindest auch ein bisschen davon abgekommen, die Sachen Frontend und Backend
zu nennen, sondern ich nenne sie so für was sie da sind. Also zum Beispiel sowas,
also man könnte es ja durchaus Web nennen, ja Web API und Mobile oder sowas, ja das ist vielleicht,
kann man sich darüber streiten, wie man das. Submodule, ja, aber Submodule finde ich ein
bisschen abartig. GitLab Groups sind sinnvoll, GitLab Groups sind einfach nur Repos.
Ja, aber du kannst den Web Interface kopieren, musst ja trotzdem noch unterschiedliche Repos
auschecken. Also ich finde das hier eigentlich ganz nice. Das hier würde ich unbedingt als
eigenes Repo machen. Hier hast du dann so Sachen drin, wie zum Beispiel hier Kubernetes Deployment,
Yammels, Terraform für Datenbank oder solche Dinge. Die hättest du hier drin, vielleicht auch
irgendwelche Helmcharts, falls die Leute da draufstehen. Das hättest du hier drin,
weil das ist auf jeden Fall sinnvoll, das voneinander getrennt zu haben. Weil ansonsten
hast du hier die Historie mit dem Mist voll und das ändert sich je nachdem auch mal an einem Tag
15 mal Sachen. Also das finde ich ist eine sinnvolle Aufteilung. Letztendlich kommt auf
die Firma an, kommt auf das Team an, kommt auf die Vorlieben an. Wär zu sagen, aber ich mag,
wenn das alles im gleichen Repo ist, außer die Infrastruktursachen. Was ist Red Hat überhaupt?
So ziemlich der größte Hersteller, was Linux Services angeht. Man kann ja nicht Linux Hersteller
so richtig sagen. Also mit der größte Linux Distributor vielleicht. Also die bauen somit
die bekannteste Enterprise Linux Distribution, wo die ganzen Unternehmen draufstehen. Auf dem
zweiten Platz ist Ubuntu und was auf dem dritten ist, weiß ich gar nicht. Wahrscheinlich so was
ekliges wie Susie oder sowas. Wahrscheinlich Oracle dürfte am dritten sein. Also im Enterprise
Umfeld ist auf jeden Fall Red Hat und dann mit ein bisschen Abstand Ubuntu recht beliebt. Und
für alle, die einfach was angenehmes haben wollen, ohne den ganzen Shit drum herum,
die nehmen einfach Debian und freuen sich des Lebens. Was macht ein Support?
Nee, die analysieren nicht unbedingt Fehler bei dir lokal, die du verkonfiguriert hast,
wobei man die je nach Supportvertrag wahrscheinlich auch danach fragen kann. Aber du kannst zum
Beispiel auf Knowledge Base Einträge von Red Hat zugreifen. Wenn du jetzt zum Beispiel nicht weißt,
wie du ein Free Radius unter Red Hat 8 da und dafür konfigurierst, hat vielleicht Red Hat einen
Paywall Knowledge Base Eintrag dafür, auf den du dann zugreifen kannst. Oder wenn du einen
Bug entdeckst und den gefixt haben willst, kannst du ein Ticket aufmachen bei Red Hat. Dann fixen
die den, wenn du Glück hast für dich, wenn die Bock haben. Eher nicht, aber vielleicht haben sie
Bock. Also der Red Hat Support, was ich bisher gesehen habe, war auch nur minimal mehr useful
wie alle anderen Supports, die es so gibt. Aber das ist im Enterprise Umfeld gar nicht so wichtig,
dass ein Support wirklich supporten und hilft. Das Wichtigste, Leute, wisst ihr was das Wichtigste
ist, warum im Enterprise Umfeld Support so beliebt ist? Das ist, dass man auf jemand anderes zeigen
kann. Klingt jetzt Kindergarten, aber es ist so. Man hat Support nicht so sehr dafür, dass weniger
kaputt geht, sondern dass man sagen kann, haha, wir haben schon einen Support Call bei Red Hat,
bei Oracle, bei Microsoft, bei sonst was aufgemacht und dann kann man dahin zeigen. Dafür hat man
Support nicht wirklich, weil die großartig was machen. Was ist deine Meinung über die Zukunft
vom Mainframe? Naja, nachdem ich in der Frankfurter Finanzbranche arbeite, gehe ich davon aus,
der Mainframe wird nie verschwinden. Das ist so tief verankert und alle größeren Finanzläden,
also ich kenne keine 500 oder so, aber die, die ich kenne, die haben alle noch Mainframes. Manche
tatsächlich mittlerweile nicht mehr auf ZOS, sondern auf Linux Basis. Was? Wegen mir? Wegen
mir? Wie? Warum hast du wegen mir einen Mainframe Kurs gemacht? Was habe ich mit Mainframes zu tun?
Jetzt recht lukrative Stelle für Werkstätten im Bereich Mainframe-Entwicklung. Ja,
mach das doch, mach das. Also im Finanzbranchenumfeld sehe ich das in nächster Zeit auch nicht
verschwinden. Was ist ein Mainframe? Mainframe ist so eine ganz fette große schwarze Kiste von IBM,
die bei dir im Rechenzentrum steht, die du bezahlt hast, aber die dir nicht gehört und worauf du
Sachen berechnen lassen darfst, die du nach Zeit bezahlst, obwohl du es gekauft hast und es bei dir
im Rechenzentrum steht. Warum man es wirklich verwendet? Zu 100%ig habe ich da noch nie eine
klare Antwort drauf bekommen, warum man es wirklich benutzt. Keine Ahnung, warum die da so scharf
drauf sind. Cobol? Okay, ja, gut, wird heute bestimmt immer noch einiges mitgemacht.
Im Mainframe-Umfeld.
Gottes Abbild hat Prime-Subscribed, danke schön für den Sub.
Unterstützt Red Hat auch Docker Compose? Jede Distribution unterstützt Docker Compose. Das
ist nichts, was eine Distribution irgendwie unterstützen müsste. Ach du meinst, dass es im
Repo drinne ist? Im Repo ist garantiert Docker und Docker Compose drinne, bin ich mir relativ
sicher. Allerdings weiß ich nicht, ob ich Docker darauf wirklich betreiben würde,
weil das ist ja kein Desktop-OS, sondern irgendwas mit Support für Server im Enterprise-Umfeld,
im Business-Umfeld, wo wahrscheinlich auf dem Server weniger Docker-Container laufen. Und wenn
ja, dann ist es wahrscheinlich auch nicht so sinnvoll, das zu verwenden aus den Paketquellen,
weil das ziemlich alt ist. Wie war der Anfang im Job? Nicht schlecht. Also die erste Woche
war wirklich nice. Die einzige Sache, die mich persönlich noch ein bisschen triggert und die
mir echt ein bisschen auf die Nerven geht, ist, dass es so Microsoft-zentriert ist da alles. Von
SharePoint bis super krass abgesichertes Windows-Notebook, auf dem du kaum was machen kannst.
Ich hoffe, das wird besser, wenn ich eine ordentliche Linux-VM habe, wo ich auch hoh
drauf bin. Sollte das sich auf Dauer so rausstellen, dass man im Prinzip nichts machen kann,
außer Putty auszuführen, um es jetzt übertrieben zu sagen, dann weiß ich nicht, ob ich da wirklich
so alt werde. Wenn ich den ganzen Tag nichts anderes benutzen kann als Putty oder MobX-Term,
da drehe ich durch. Ich habe schon gesehen, dass da Leute lieber über den GitHub-Editor
Terraform-Files anpassen, anstatt über den ordentlichen Text-Editor, weil der Text-Editor
dank der ganzen tollen Security-Sachen so laggy ist. Also sollte das sich wirklich bewahrheiten,
dass das auf Dauer so bleibt und sich auch mit der eigenen VM nicht bessert, dann weiß ich nicht,
ob mir das Schmerzensgeld unterm Strich ausreicht. Ich bin Senior Linux-Engineer dort und nicht
Putty-Clicker. Windows-User.
Als Trinken erinnert es, sehr gute Idee. Würdest du ein AD in Linux mit Xamarin und
Kerberos aufsetzen? Habe ich noch nie gemacht, aber mein persönliches Bauchgefühl sagt mir,
nein, würde ich nicht machen. Sondern wenn ich wirklich ein Active Directory betreiben will,
dann würde ich es mit Windows-Server machen. Weil dann habe ich höchstwahrscheinlich auch
Windows-Clients und dann werde ich auch einen Windows-Server mir leisten können. Die Sache
ist nur die, dass ich es auf gar keinen Fall administrieren möchte.
So, wir müssen jetzt noch eine neue Version bauen, Leute. Also was müssen wir noch testen?
Also das mit... Also Rocky Linux haben wir ausprobiert, das funktioniert.
Da waren noch ein paar Sachen drin, die man testen müsste. Das Build-Script funktioniert auch.
Ubuntu 23.04. Das gehe ich jetzt einfach mal davon aus, dass es funktioniert.
Wo ist es denn eigentlich?
Ubuntu 23.04. Luna Lobster.
Das ist übrigens auch eine echte Alternative, wenn man jetzt keine Abneigung gegen Azure hat
und wenn man das Firmen-Policy technisch machen darf. Azure Active Directory. Also
ohne dass ich es selbst hier aufgesetzt hätte. Das Einzige, was ich mal gemacht habe,
ist ich habe eine Proof of Concept Frontend entwickelt, was klein ist, was auf Azure Active
Directory zugreift. Das war das Einzige, wo ich wirklich mal ein bisschen im Detail mehr
damit gemacht habe. Aber sonst, was ich so mitbekommen habe, ist das tatsächlich im Endling
her ganz nice. Vor allem, weil man sich halt nicht selbst zum Windows-Server kümmern müsste.
Ja, das ist tatsächlich eine echte Alternative, das über Azure Active Directory zu machen.
Wenn das halt geht in dem jeweiligen Unternehmen, dann passt das. Mehr müssen wir wahrscheinlich
nicht ausprobieren. Ich würde sagen, wir können eine neue Version raushauen.
Testen wir noch mal ganz schnell, ob Ubuntu nur just for one geht.
Warum geht das Autocomplete nicht? Ah, das Autocomplete. Ah, das ist auch ziemlich
pains-champed. Das Autocomplete geht nur, wenn man ganz hinten ist. Verstehe, verstehe.
Autocomplete 23.04. Ja, guck mal. Ubuntu Cloud-Images sind auch relativ fett, die neuen,
aber immerhin nicht so ein Riesending wie Red Hat. Schauen wir mal. Ah, guck mal, das
ist nur halb so fett. Halb so fett wie Red Hat. Booting from Hard Disk. Ja, dann. Poreschamp.
Wie wäre es mit Booten from Hard Disk, anstatt zu sagen Booting from Hard Disk? Ah, da braucht
nur. Wir sollten den Bootchamp entwickeln, dass das auch noch schneller geht. Ubuntu, gib Gas.
Ah, da ist immer schon. Can das sein, dass das extrem lahm ist? Warum das so ewig bootet?
Nein, das liegt an den Distributionen. Oh Leute, das Ding hat zu wenig RAM. Das hängt am Limit.
Das hat zu wenig RAM. Guck mal, ich kann mich doch nicht mal per SSH einloggen. Das hat zu
wenig RAM. Oh, Amchamp. Am. Das hat zu wenig RAM. Memory. Das ist natürlich doof, wenn die ganzen
Dinger zu wenig RAM haben. Was haben wir denn standardmäßig? Standard ist 256 MB RAM. Ja,
für eine Debian VM reicht das auch ohne Probleme. Es ist schon krass, wie fett, wie fett die
Standard und die Distributionen sind. 250 MB ist wenig. Ja, aber das sind minimal Server
Distribution und Installation. Die sollten eigentlich nix standardmäßig großartig laufen
haben. Die Fault RAM abhängig von der Distro festlegen. Ja, aber das habe ich keinen Bock,
ehrlich gesagt, das zu pflegen. Ich dachte, die Fault reicht. Einfach ein Minimum in der
Distro. Ja, ihr habt recht, das machen wir. Distro Min RAM Min Disk. So, da sind wir eingeloggt.
Nice, hat funktioniert. Okay, ich würde sagen, wir könnten ein neues Release pushen. Ich
clean das mal, dass meine Festplatte wieder sauber ist. Yes. Okay, ich würde sagen,
es gibt jetzt VMChamp Version 0.0.5. Ja. Oder machen wir noch was anderes rein. Lass mal gucken,
was sind noch für Pull requests offen? Create new logo. Das werde ich wahrscheinlich nicht nehmen,
das Logo. Das ist mir zu Instagram, Instagram Style. Mein Scout, falls du da bist. Ich glaube,
ich glaube aber nicht, habe ich noch nicht gesehen. Ich mache den Pull Request mal zu.
PostChamp. So, was haben wir noch für Issues offen? Bug Image Downloads. Ich glaube, das haben wir
gefixt. Fixed in, ja, fixed, close, bam. Muss ich komplizierter machen als es ist. Okay,
use custom SSH key instead of copying on. Das ist ein guter Vorschlag, Max. Und zwar aktuell
funktioniert das folgendermaßen, wenn man eine VM erstellt, wenn man hier sagt, run packw. Wenn
ich eine VM erstelle, was er jetzt macht ist, der geht in Punkt SSH. Der geht in Punkt SSH und holt
die Public Keys und kopiert die in die VM. Es funktioniert nicht, wenn der Key nicht Standard
heißt und es funktioniert auch nicht, wenn dort keine Keys liegen, was er durchaus auch mal sein
kann. Vielleicht sollten wir tatsächlich einen eigenen SSH Key generieren, nur für den VM Champ.
Ich glaube, die Idee ist gar nicht so schlecht, oder? Das dürfte relativ einfach zu implementieren sein,
denn die ISO Imager, denn was der hier an SSH Keys hinterlegt, ist ja hier letztendlich definiert.
Er sagt, find SSH Keys. SSH Keys nimmt er alles aus dem Home Directory vom User, was mit Punkt
und dann trägt er die Keys hier ein. Das heißt, wir können ohne Probleme einen eigenen Key generieren
für den VM Champ und den Key in die Default und bei SSH Commandos eintragen.
Oder was denkt ihr? Sprich, dass wir den eigenen Key generieren, um den Fall abzudecken,
dass die Keys nicht standardmäßig heißen und dass vielleicht manchmal auch gar keine Keys da sind.
Das heißt, wir müssten eigentlich nur hier anpassen, woher er die Keys nimmt und wir müssten das SSH
Commando anpassen, wie er sich dahin verbindet. Es wäre nice, wenn der Nutzer den Speicherort
selbst pflegen kann. Man kann ja beides machen. Man kann einmal vonhand einen SSH Key angeben,
dann machen wir einfach nur Option, Option, Minus, Minus, Key und dann kann man selbst den Key angeben
oder er generiert einen selbst. Im Prinzip müsste ich dann Minus hier noch, Minus I machen für SSH,
Minus I und dann wo der Key liegt. Okay, dann schreibe ich das mal rein. Image, Option, SSH,
das machen wir doch. Also ich würde sagen, standardmäßig speichert ihr die Keys einfach
hier. Default und dann könnte man theoretisch hier Punkt SSH noch machen als Verzeichnis. Ja,
das finde ich ganz gut. Das machen wir. App-Config, Data-Dear, SSH-Dear, SSH-Dear kommt da noch dabei.
SSH-Dear ist App Directory, Session Name und Punkt SSH. Ja, nice. Und da muss ich ganz am Anfang nur
noch dafür sorgen, dass das auch angelegt ist, sonst gibt es nämlich nachher Probleme. So,
jetzt haben wir das SSH-Verzeichnis angelegt. Wie generiert man? Gibt es eine ordentliche
Library zum SSH-Keys generieren in .NET? Ich meine, natürlich. Ich könnte sagen,
Process, Start, SSH, Keygen. Property im Constructor war falsch. Was? Wo? Was? Wo denn? Wie jetzt?
Du hast recht. Lul. Verkackt. High IQ Chat, ihr habt wieder aufgepasst. Riesig,
Biggest Prane aller Zeiten wieder in der Chat. Ich sage doch, die ganze AI-Entwicklung war
komplett umsonst. Die hätten einfach auf den Wumblos-Chat zugreifen können und schon hätte
man sich das komplett sparen können. So. Wie würde man das denn jetzt machen?
Ich teste mal das mal kurz von Hand. CD, Temp, Mcardia, Keck, W. Da will ich reinigen. Kecke.
SSH. Hier machen wir mal einen Punkt. SSH-Verzeichnis. So. SSH, Keygen. Das da. Ja,
genau. Perfekt. Genau. Den will ich haben. Your E-Mail. Ja. Qt-Chat, add. Omega,
Lul. Ist eigentlich egal. Lassen wir. Lassen wir. Das ist ja nur ein Comment. Da muss ja nichts rein.
Kann man da Output? Keyfiles. Geht das? Geht das so? Dann Punkt SSH. Keck,
W.Pub. Oder sowas. Ach so. Nee, Moment. Nicht Punkt Pub. Einfach. Blödsinnig.
Moment. Du meinst WebAssembly, wenn schon. WebAssembly in Docker.
Okay, so würde das funktionieren.
Gut. Also. So könnte man das schon mal generieren. Ich will trotzdem mal gucken.
Gibt es eine C-Sharp? Gucken wir mal. NuGet oder wem? SSH-Key oder Generate SSH-Key.net.
Gibt es da irgendwas? How to generate SSH-Key in C-Sharp-Application. SSH-Key Generator. Okay,
nice. Das brauchen wir. Der SSH-Key Generator. Dann müssen wir keine Kommando-Zeilen-Aufrufe
machen. Okay, wie funktioniert denn das Ding? After searching around for a solution to creating
SSH. Was soll der VM-Champ eigentlich werden? Was heißt werden? Das ist schon. Wenn du dir
die GitHub-Seite anguckst, die ist eigentlich besser, als wenn ich das jedes Mal erkläre.
Ja, das macht das. Wegwerf VMs auf deiner lokalen Kiste erzeugen, wenn du irgendwas schnell testen
musst. Guck, ganz einfach gezeigt. Du sagst VM-Champ, Run. Zum Beispiel das, was du machen willst.
Irgendwie System-D-Test-VM oder keine Ahnung. Unit-File-File-Test. Erstellst du eine VM mit
dem Namen. Dann lädt er sich ein aktuelles Debian-Image runter oder benutzt eins, was da ist,
startet eine VM im Hintergrund und verbindet dich per SSH drauf. Das ist für alles sinnvoll,
wo du keine Docker-Container gescheit benutzen kannst. Zum Beispiel um System-D-Unit-Files
auszuprobieren. Jetzt bootet er im Hintergrund die VM, wartet, bis das Netzwerk da ist und zack,
bist du auf deiner neu erstellten VM drauf. Das hat jetzt ungefähr 25 Sekunden gedauert und du
hast eine vollwertige lokale VM, wo du rumbasteln kannst, wie du willst. Wenn du fertig bist,
sagst du entweder VM-Champ-RM oder du sagst Clean, wenn du alles inklusive Images aufräumen willst.
Fertig aus. Schnelle Tests VMs lokal anlegen. Es funktioniert schon. Funktioniert auch relativ
gut. Ich habe es jetzt schon für einige Sachen lokal benutzt. Es ist wirklich praktisch. Das ist
auch der Grund, warum ich mir sowas gebaut habe, weil ich einfach nichts gefunden habe in der
Richtung. Also, wie hieß dieses Ding? SSH Key Generator. Passphrase, sowas. Overrated Security
Shit, keine Passphrase. Vor allem nicht für lokale VMs. NuGet SSH Key Generator. Letzte
Version von 2019. Nice aktuelles Ding. Ja, super. Ein bisschen was Neues als von 2019 wäre ganz cool.
Ach, Moment. Auf NuGet hat er wohl neuere Sachen released. Zeig mal, von wann sind die? Schade,
dass er nicht auf Windows läuft. Der würde theoretisch auf Windows laufen, also in WSL sollte
er laufen. Das Ding ist nur, du hast wahrscheinlich und in WSL kein LibWirt laufen.
Hyper V. Es würde funktionieren. Alles, was LibWirt unterstützt. Der Fuget Explorer hört sich
auch irgendwie ein bisschen unanständig an. Okay, auf geht's. Dann probieren wir probieren
das mal aus. Wir probieren das mal aus. Wir machen hier ganz oben mal einen Return rein,
damit ich es einfach starten kann. Hier, neues Terminal auf, CD, Repos, VMChamp. So, probieren
wir das mal aus. SSH Key Generator Library. Wie benutzt man dieses Ding? Examples, Key GAN,
SSH Key GAN, Two-Private Key, Two-RFC Public Key. Funktioniert LibWirt nicht auch in Windows
selber? Keine Ahnung. Weiß ich nicht. Two-RFC Public Key mit Comment. Okay, es scheint einfach
zu sein. SSH Key GAN Generator. 400096 Venture Adventure. Richtig, ein Key. Key GAN, Two-Private
Key. Okay, BAM. .NET Run. Was der Unterschied zu Vakrant ist, also es hat ein paar Parallelen,
aber es ist eigentlich was anderes. Vakrant ist ja so ein bisschen der Vorgänger. Ich weiß nicht,
ob man das so sagen kann. So ein bisschen der Vorgänger vielleicht von Docker Compose. So im
Ansatz. Also, also erstens, das Problem an Vakrant ist, es ist uraltes Ruby Zeug, was HashiCop selbst
schon keinen Bock mehr drauf hat. Dazu kommt, ich muss sagen, ich hab's auch nicht viel benutzt,
aber ich kann jetzt zumindest nur das sagen, was ich, was ich da, was ich mir so denke,
beziehungsweise auch im Hinterkopf hab. Also uraltes Ruby Zeug. Es unterstützt standardmäßig
kein KVM, also das Mittel der Wahl zum Virtualisieren unter Linux, sondern nur Virtual Box. KVM nur
über irgendeinen Third Party Provider. Und es ist auch gar nicht dafür gedacht, dass du quasi ganz
3, 4, 5 VMs auf die Schnelle anlegst, sondern du brauchst immer einen Ordner pro VM mit einem
Vakrant-File, was im Prinzip sowas wie ein Docker Compose-File ist. Bin ich einfach umständlicher,
wenn ich eine VM brauche. So gibst du einfach an, blablabla, run, debian, zack und 15 Sekunden
später hast du eine VM. Probierst schnell was aus und in 10 Minuten später schmeißt du wieder weg.
Funktioniert das Key-Generator hier? Tatsächlich, wir haben einen Key. Kann das auch in irgendwie
in anderen Algorithmus oder kann das nur standardmäßig RSA? Weil ich persönlich mag ja bei Keygen
das da gerne, weil das ist so schön kurz der Key, den kann man auch einfacher copy-pasten.
Weiß gar nicht, was das für ein Verschluss, was das für ein Key-Verfahren ist. Ah, alles klar.
Chet, jetzt wisst ihr Bescheid. Curve 25519 ist eine elliptische Kurve,
die für asymmetrische Kryptosysteme benutzt wird. Klar, soweit? Ich glaube,
bedarf keiner weiteren Erklärung, oder? Ist Obvious, was das Sache ist.
So, und dann haben wir zur Auswahl ED2215. Neben Curve 25519 gibt es noch weitere Kurven,
die nach ähnlichen Prinzipien entwickeln und ebenfalls mit ED25519 zusammenarbeiten.
Darunter etwa ED448 Goldilocks und die von mehreren Personen unabhängig entdeckte Kurve E521.
Keck bei, alles klar. Cringe, wer es nicht verstanden hat.
Eine Montgomery-Kurve. Logisch. Im Gegensatz zu den sonst üblichen Weier-Straß-Kurven erlaubt
diese Form der Verwendung von Algorithmen, die immun gegen Timing-Seitenkanal-Angriffe sind.
Okay, wir wissen Bescheid. Jetzt ist Obvious, alles klar.
So, wie machen wir das denn jetzt mit den SSH-Keys? Also wir generieren den SSH-Key.
Ich mach das mal testweise, ob das funktioniert. Ich generiere mal den SSH-Key.
Aber wie heißen die Dinger? ED? Gibt's da ein NC-Sharp-Verfahren? Haha, guck mal da,
der Cryptomaniac vor sieben Jahren, alles klar. Exzellent. Vielleicht sollte ich doch einfach das
System. Bouncy Castle. Alter, wer denkt sich die Projektnamen aus, Leute? Bouncy Castle.
Da fuck, wo bin ich hier gelandet wieder?
Bouncy Castle. Na klar.
Generate Key. Aha. Generiert von überschreiben mit einer abgeladenen Klasse ein neues,
kurzlebiges Verfahren von öffentlichen Schlüsseln für die Angabenkurve, wobei die aktuelle...
Easy. Das ist in .NET schon eingebaut. Ja, das stimmt schon. Das ist da schon eingebaut.
System Security Cryptography. Probieren wir das doch mal aus. Dann probieren wir das doch mal
aus. Mal gucken. Da lernt man ja auch mal was. System Cryptography E. Wie heißt das Ding?
Generate Key. Ne. Wie? Ah ne. ECDSR. Natürlich. Was auch sonst. Create.
Versteht doch. Versteht auch keiner hier. Wo ist der Schalter für auf Englisch stellen?
Ich finde das immer nicht. Man kann hier oben... Wo haben sie das wieder versteckt
hier? Englisch. Australia, meinetwegen. In der Urländer, das kenne ich, aber das muss doch
echt nicht sein. Warum ist da nicht einfach oben ein Button? Da war früher, glaube ich,
auch mal ein Button oder es war eine andere Hilfeseite. Create a new instance of the default
Okay, wir machen einfach nur Create. Keygen. Nee. So funktioniert das schon mal nicht. Ach so.
Ach so, Keygen gibt es da oben schon. Deswegen ging das nicht. Ich habe schon gedacht,
was jetzt? Okay. Keygen. Verify data from data. Try get max signature. Generate Key.
Import. Generate Key ist das, was wir haben wollten, oder? Zeig ich mal. Generate Key.
Leute, ich habe absolut keine Ahnung, was ich hier eigentlich mache. Okay.
Echt? Da steht ein Beispiel? Wo? Du weißt das nicht? Vorhandene Beispiel? Oder das Beispiel
von Create? Ich sehe hier keine Beispiele. JuicyBit, danke schön für den Sub. So,
mal gucken. Wir schauen einfach mal. Nee. Ah. Void? Okay, ich habe keinen Plan,
wie das funktioniert. Da war der Namespace vor der Kurve. Alter, die Doku ist wieder absolut top.
Muss ich vielleicht irgendwie sowas hier? Ich habe wirklich keine Ahnung, wie man das benutzt.
What? Wir brauchen ein Beispiel. Oder ist das der? Ich habe keine Ahnung.
Okay. Generate Key. What?
Okay, ich glaube nicht, dass man damit SSH Key sinnvoll generieren kann, oder? Das ist zu high IQ.
Das ist mir zu next level. Okay, scheiß drauf. Wir testen das jetzt erst mal mit den anderen
Keys. Und vielleicht kriege ich ja noch raus, wie man diesen Krempel hier benutzt. Also. ECDSA will
wahrscheinlich gar nichts benutzen. Man lockt sich einfach gar nicht mehr ein.
So, also SSH Key. Wir speichern diesen Key jetzt mal irgendwie. File, save. Ich will einfach mal
ausbilden, ob es funktioniert. File. Nee, nee. Wie heißt das? Write. Write all text. Fahrt. App
config. SSH Dear. Müssen wir anders machen. Pass. Combine. SSH Dear. Key. Wie heißt das Ding jetzt?
Und Keygen. To private key. So, schauen wir mal, ob das jetzt funktioniert an der Stelle.
Zack, zack, zack. Dot net run. Ach so. Ja, doch. Es müsste funktioniert haben. So,
gucken wir mal. VmChamp. Default. Punkt SSH. Key. Okay, da haben wir den private key. Das ist
doch schon mal nice. Das funktioniert. To private key. Und jetzt haben wir noch hier irgendwie pub.
To public key. So, wenn ich das jetzt ausführe, dann habe ich hier zwei Keys drinne. Und dann
schauen wir mal, ob ich mich damit per SSH auf meine VM verbinden kann gleich. Das ist ja nur
zum Testen, ob es prinzipiell funktioniert. Okay, wunderbar. Dann gehen wir jetzt mal hier hin,
wo das ISO Image zusammengebaut wird. Und bei den Keys, da müssen jetzt die public Keys rein.
Dann ist es relativ einfach. File. Read all text. App config. Oh nee, ich habe keine App
config hier. Was ist das denn? Warum habe ich, warum gibt es hier keine App config? Und wird das hier
nicht injectet? Sauerei. Dann hardcode ich das jetzt einfach, weil ich wissen will, ob es funktioniert.
Okay, zack. Punkt SSH. Keys. Slash. Key. Punkt pub. So. Und jetzt fehlt als letztes nur noch,
um zu testen, ob das mit den SSH Keys funktioniert. Wobei der bestimmt meckert,
wenn die Dateien die falschen Rechte haben, oder? Das hat bestimmt die falschen Rechte. Da meckert
er doch garantiert. Da meckert er 100% drüber. Wenn das, ja, garantiert wird er meckern,
wenn es die falschen Rechte hat. Create directory. Wie setzt man? Permissions? Nee.
CH. Wie setzt man directory permissions in .net? Set. C sharp directory permissions. Da gibt es
bestimmt Set Access Control. Nee, gibt es nicht. Nice. Was? Ey, das ist irgendein Windows-Shit. Das will
ich wahrscheinlich nicht machen. Du brauchst eine Directory-Info dafür. Das kann sein.
Gibt es hier was? Permissions? Nee.
Set Access Control? Was ist das hier? Quest. File Permissions und Linux. Ich meine, ich kann.
Der ist nope. Seriously. Ja, Flashbang. Alter,
was ein Gelaber. Gibt es hier vielleicht auch irgendwo was, was man jetzt machen muss?
Mono POSIX soll man jetzt verwenden, oder wie? Einfach geklost, oder wie?
Wir haben jetzt eine Version von Mono POSIX, die funktioniert und...
Warum? Aber warum Mono, Alter? Okay, das kann man tatsächlich verwenden.
Mono POSIX. Okay, Leute, wisst ihr was? Scheiß drauf. Ich will ja einfach nur ausprobieren,
ob es funktioniert. Wir machen CH-MOD 600 auf den Ordner. Wir können eigentlich alles 600 machen.
Was? Am Moment nicht 600. 700. Sonst kann ich ja nicht den Ordner wechseln. Okay. 700.
Und das hier. Und das hier 600. Ja, merke, falls ihr mal das gleiche Problem habt,
Ordner unter Linux brauchen Execute-Rechte, sonst könnt ihr nicht auf sie zugreifen oder in sie
rein wechseln. Okay, das ist ganz gut so. Lassen wir das mal weg. So, und jetzt will ich nur noch
gucken, ob ich PSSH drauf verbinden kann. Da brauche ich... Okay, das mache ich jetzt so
wahrscheinlich nicht. Aber nur mal checken, ob das funktioniert. Identity... Ups. Nee, nee.
Identity Home SSH Key. So, schauen wir mal, ob es funktioniert. Ich habe mal eine Zweifel,
dass ich das richtig gemacht habe. .NET Run Run Kegway. So, da sollte jetzt, wenn ich es
richtig gemacht habe, eine VM anlegen und dort meine SSH Keys verwenden. Na, da bin ich mal
gespannt, ob das klappt. Ich glaube nicht. Chat meinte, dass es funktioniert.
Ich habe mal eine Zweifel. Aber schauen wir mal. Nein, permission denied. Und warum? Und warum?
Weil er den falschen Key nimmt. Oder? Nee, das ist der, genau, das ist der Host Key. Warum ging
das jetzt nicht? SSH. Ich kann es ja mal von Hand ausbringen. User, add. Ja, okay. Minus Identity.
Omchamp. Default. Default.ssh. Key. Ja. Nice. Das funktioniert so schon mal nicht,
wie ich mir das gedacht habe. Gibt es das hier überhaupt, was ich da angegeben habe? Public Key,
ja. Da müsste man in die SSH Logs schauen, da wirst du nicht, also hier wirst du nicht viel
sehen, außer dass es Trying Private Key, SSH Key, nö. Ich persönlich gehe ja davon aus,
dass die Cloud Init Datei nicht richtig stimmt. Stimmen die Keys oder wurden zwei unter? Nee,
die Keys werden neu generiert beim Application Start. Also die müssen. Moment. Wartet mal kurz.
Ich mach mal kurz dieses Key Generating raus. Vielleicht gar keine, vielleicht doch nicht so
eine schlaue Idee. Run CACW2. Jetzt sollte er die schon bestehenden Keys nehmen. Wenn nicht,
lasse ich das mit den Keys erst mal und mache mir da noch mal ein bisschen Gedanken drüber. Wir
machen auf jeden Fall jetzt ein neues Release vom VmChamp mit den ganzen Fixes drin,
die wir vorhin schon gemacht haben. Also das mit den Keys lassen wir vielleicht erst mal sein,
muss ich mir noch mal ein bisschen Gedanken drüber machen, wie wir das am besten machen.
CACW2 ist auch da und die Verbindung klappt nicht. Nice. Nope. Okay, dann machen wir eine
Sache jetzt noch mal, nämlich wir lassen uns das hier mal ausgeben. Console Write Line User Data,
Run CACW3. Ja. Ah. Jammel. Jammel ist glaube ich das Problem. Jammel ist das Problem.
Ich glaube ich weiß auch, wie ich das das letzte Mal gefixt habe. Ach,
deswegen habe ich so einen JSON Array hier draus gebaut. Okay, Moment, Moment. Keys gleich.
Ich bin, ich bin verwirrt. Das ist der Key. Das ist der Key. String Joindings,
This Find SSH. Was zum Geier mache ich da? Okay, ich vermute mal, dass ich mir das hier
alles sparen kann. Ich vermute, dass ich mir das hier alles sparen kann. Man muss noch ein
Quote machen und dann das Pfeil dazwischen. So, das sollte jetzt funktionieren. CACW4. Das
ist besser. Das ist besser. In JSON gerappt. Ist das nicht auch das falsche Public Key Format
für SSH? Ja, das ist das falsche Public Key. Oder? Normalerweise ist das doch immer eine Zeile,
wo dann hinten auch ein Comment und sowas dran steht. Nee, das ist das falsche. Oder? Doch, doch,
doch, doch. Ich glaube, das ist das falsche. Das sieht normalerweise doch anders aus, oder?
SSH again. Punkt mal CUT. Punkt SSH. CACW. Das ist der Private Key. So sieht der Public Key
eigentlich aus. Genau, genau. Das ist das falsche. Das ist das falsche. Falsche Keys.
Also, 2 Public Key. 2 RFC Public Key brauche ich vielleicht. Vielleicht ist das jetzt besser.
Run CACW5. Ja, das ist gut. Das ist gut. Das sieht richtig aus. Nee, nee. Auch mit RSA. Das
muss so aussehen. Das ist gut. Das ist richtig. Das sieht viel, viel besser aus so. Wobei jetzt
wahrscheinlich meine SSH-Berechtigung nicht mehr stimmt. Doch, da hat sich's gemerkt. Sollte man
meine VMs wieder löschen. Leute, es funktioniert. Kaum macht man es richtig, dann funktioniert es
auch. Poggers. Das muss ich mir trotzdem erst noch mal überlegen. Das kann ich so auf jeden Fall
nicht lassen mit den Keys, weil ich habe die Verzeichnisse nicht überall zur Verfügung.
Da muss ich mir erst noch mal ein bisschen Gedanken drum machen. Also ich werde das mal
wieder rausschmeißen. Aber prinzipiell haben wir es jetzt getestet, dass das funktioniert.
Habe ich da noch irgendwas vergessen? SSH-Dear. SSH-Read-Dear. Alles SSH. SSH. SSH. Get-Reset-Hard-In-Your-Face.
Weg ist es. Dann machen wir jetzt eine neue Version. Get-Push-Get-Hard-Master. Wobei,
das haben wir ja schon gemacht. Das sollte nichts mal pushen. Dann taggen wir jetzt mal eine neue
Version und schauen mal, ob es ein neues Arch-User-Repo-Dings-Bums gibt, wenn ich das
pushe, ob das alles klappt. Ach so, wir brauchen ein ordentliches Change-Log. Ich habe schon wieder
vergessen, wie wir das mit dem Change-Log gemacht haben. Wie generiere ich noch mal das Change-Log?
Irgendwo aus GitHub Actions raus, ne? Ja. Release. Release. Ah, die letzte. Okay,
die letzte Comment-Message. Jetzt verstehe ich. Muss man das eigentlich initial manuell ins
Our-Submitten? Müsstest du nicht. Finde ich gar nicht so schlecht. Müsstest du nicht. Du
könntest das auch direkt über irgendeine Pipeline hier anlegen. Und es gibt fertige
GitHub Actions für Our-Packages. Das ist der harte Weg von Hand, ein Arch-User-Repo-Package
zu bauen. Es gibt fertige Actions, die das für dich machen. Ach so, das letzte Comment muss
muss das Change-Log direkt enthalten. Alter, das wird's. Ich habe kein Comment.
Geht Status. Ich habe kein Comment, Mensch. Vielleicht sollten wir mal eine Change-Log-Datei
einfach anlegen, weil... Ja, komm, wir legen eine Change-Log-Datei an. Wir faken einfach,
als wäre die schon immer da gewesen. Kannst den leeren Force-Commit... Ja, das ist doch... Ne,
ne, ne. Wir legen, wir legen. Okay, hier gab es überhaupt kein Change-Log bei Version 1. Wir
fangen jetzt einfach an. Wir fangen mit Version 2 an. Das ist okay. Change-Log V2. Was ist da
hinzugekommen? Das da. Exzellent. Wir brauchen das im Markdown-Format. Das ist dazugekommen.
Sehr schön. Wunderbar. Dann haben wir als nächstes Version 3 Fixes. Exzellent. Da weiß man sofort
Bescheid. Fixes. Obviously. Dann gibt es 004. Bei 004 ist was dabei gekommen? Das da. Okay,
nice. Vielleicht sollten wir noch das Datum hinten dran schreiben. Wir sind superordentlich
jetzt. Wir haben noch das Datum hinten dran. Und zwar, wie habe ich das hier beim 4er Champ
gemacht mit dem Change-Log? Das hatte eigentlich ein ganz gutes Format. So habe ich das gemacht
mit Minus. Dann mache ich das wieder, mache ich das wieder so. Minus. Minus. Das Datum stimmt
natürlich nicht. Das müssen wir jetzt mal schnell raussuchen. So, also Version 2 haben wir gemacht.
Na geil, da steht kein Datum dabei. Dann wurde das committed. Warte, bin ich blind? Wo ist das Datum?
In jeder Comment-Message steht eine Zeit drinne. Ich dachte, kein Datum aufgeteilt. Ist nicht?
Na gut, ich meine, ich kann. Würde ich das gerne kopieren. Ich meine, ich kann. Da geht Log.
Das war am 29.3. So, 29.3. Und 3 und 3 war am
1.4. Okay. Also 2023. Oh, das ist Ami-Format. 29.3. Kekona-Datumsformat. Das ist das schlimmste,
das Schlimmste, was sich da ausgedacht hat. Das war am 1. April anscheinend. Okay. So,
und wann haben wir das? Wann haben wir das zwar noch? Das 4. gemacht? Ich glaube,
das 4. war auch am 1. April. Hier der Log. Ach so, ich bin da gar nicht im Repo drinne.
GD, Repos. Ja, ist auch am 1.4. Okay. Ist auch am 1.4. Okay, wunderbar. Jetzt haben wir ein tolles
Change-Log. Exzellent. So, was haben wir jetzt hier in dem aktuellen Zeug drinne? Wir sind
einfach mal so frei und rippen das vom Max, was er geschrieben hat. 2013 habe ich 2022 geschrieben.
Ja, 2023. Nein. Oh, ich habe Ctrl-X für Schließen der Pain. Das ist vielleicht doof,
weil mit Ctrl-X und Ctrl-A kann man ja auch in Wim Zahlen hoch und runterzählen. Das sollte
ich vielleicht nochmal überdenken. So, für 0.0.5. Das gibt es am 2023 04.07. So,
da klauen wir die Sachen, die der Max geschrieben hat. So, und was haben wir sonst noch drinne?
Ja, im Prinzip das vom Max und das von meinem Interface, was ich hier in den... Also,
wir haben Issue Nr. 3 gefixt. Das war das mit dem... Ask for a bridge. Create a bridge if it's not
found or not ready. So. Wunderbar. 5-Fed-Change-Log. Übrigens, Ubuntu 23.04 ist nicht mehr Beta. Ich
glaube, das ist mittlerweile raus. Seit zwei Tagen oder so. Kann das sein? Oder kommt das
Ende des Monats erst? Nee, es kommt noch. Es kommt in zwei Wochen. Okay, wunderbar. So,
jetzt haben wir einen Change-Log. Git status. Ich überlege gerade. Weil ich habe es aktuell so,
ich habe es in meiner GitHub-Action so, dass der das letzte Commit nimmt als Change-Log. Vielleicht
nehmen wir nicht SSH Keygeneral. Vielleicht sollten wir das ändern. Wobei ich mir nicht sicher bin,
ob das mit dieser Release-Action gescheit funktioniert. Also, wir benutzen aktuell als
Change-Log. Hier. Body für das Iss GitHub Event Head-Commit-Message. Come on. Wenn
ich hier oben eine Environment-Variable setze, gilt die auch hier unten in der Action? Weil
dann könnte ich mir was, dann könnte ich sowas hier machen. Bei dem Example hatte der einen
Change-Log. Weil ansonsten könnte man nämlich sowas machen. Change-Log. Und dann irgendwie
das obere rauskacken oder so. Wir sind jetzt einfach mal faul. Wir sind jetzt mal faul und
sagen jetzt einfach Git add Change-Log. Git commit. Und jetzt schnappen wir uns den Kram und
kopieren den hier rein. In die letzte Commit-Message. Git status. Git push. Und jetzt machen wir einen
Tag drauf. Und jetzt sollte das alles funktionieren. Was mache ich denn hier? Tag delete. Was? Nein.
So, das will ich mal an. Git tag Version 5. Und Git push minus minus tags. So, und jetzt
bin ich mal gespannt, ob das funktioniert. Jetzt erleben wir gerade die alte Version,
ob das noch... Wir gucken gleich, ob die Action läuft. So, auf geht's. GitHub Actions.
Ja, es läuft. Das dauert jetzt kurz, bis der Container gebildet ist. Der Cache ist mittlerweile
schon längst expired. Das dauert jetzt kurz, bis das gebaut ist. Passt eigentlich. Wir löschen
mal die alten Sachen. Version 4 haben wir. Gut. Dann gucken wir doch mal. Das dauert jetzt. Das
dauert denke ich 2-3 Minuten, bis das durch ist. Der muss jetzt sich den ganzen Kram runterladen,
neu das CentOS 7 Image aktualisieren. Dort net runterladen, kompilieren, das Binary raus
kopieren, hochladen, ein Release bauen und dann muss er am Ende noch das Our-Package aktualisieren.
Let's go. Eine schnellste ist es nicht. Bei Examples hatte der eine ChangeLog TXT angegeben.
Das können wir uns gerade mal angucken, weil so spannend ist es jetzt eben nicht,
bei dem Docker-Build zuzugucken. Wir schauen jetzt mal hier rein. Da wollte ich gar nicht drauf.
Workflows, Builds, Release. Welche Release-Action benutzen wir hier? Soft-Props. Release. ChangeLog.
Generate ChangeLog. Aha. Ach so macht er das. Ja, das ist eigentlich relativ clever. Moment,
da schreibt einfach eine temporäre ChangeLog-Datei und die gibt er dann hier an. Okay,
das ist relativ schlau. Ich glaube, so werden wir das auch machen. Ja, so machen wir das auch.
Wie weit ist er mit dem Image? Aha, gleich fertig. So machen wir das auch.
Ja. Macht er eigentlich seine eigenen Releases damit? Nö. Wer da sagen könnte,
dass er seine eigenen Releases mit seiner eigenen Release-Action macht, macht er aber nicht.
Keckel. So. Okay, der Job ist fertig. Jetzt wird das Arch-User-Repo gebaut.
Arch-User-Repo-Package gebaut. Schauen wir mal, also hier ist es noch alt. Initialize-Containers.
Download-Artifact. Okay. Permanently Adding. Version V005. Das ist gut.
Gepusht hat er es. Stopping-Containers. Da ist es, Leute. Es wurde aktualisiert.
Also das haben wir gescheit gemacht. Das hat jetzt richtig gut funktioniert. So. Jetzt müssen
wir nur noch warten, bis er hier kapiert hat. Das dauert manchmal ein bisschen,
bis er mitbekommen hat, dass es neue Package-Versionen gibt. Denkst du gleich
kommt wieder der Fehler mit der falschen Version. Ich bin mal gespannt. Nothing to do.
Was ist denn hier eigentlich der Unterschied zwischen diesem ganzen Krämpel? Da ist er.
Das letzte Mal hatten wir ein Problem, wo ich immer noch nicht genau gecheckt habe, wo.
In der Tab-Completion ist das Emote da, aber im Chat nicht.
Das letzte Mal hatte ich das Problem, als ich geupdatet habe,
der hat, also wir können es jetzt mal ausreden, vm-Champ-Version. Das ging nur mit einem Clean-Build.
Yes. 003.
Okay, müssen wir doch noch mal ein Clean-Build machen. Was hat er für Probleme,
mit dem Package? Das war es schon nicht, es gibt ja sonst keine. Wenn ich jetzt ein Clean-Build mache,
dann ist alles gut. Das habe ich noch nicht genau kapiert, ehrlich gesagt.
Version 5. Was ist falsch an meinem Package?
Dass du immer ein Clean-Build machen musst.
Das ist jetzt auch die neue Version. Guck, run, minusminusos. Du hast auch die neuen Sachen drinne.
Und wenn ich das Default-Interface stoppe oder sogar lösche, dann sollte er jetzt
fangen. Vm-Champ, run, cac-w, Default-Bridge does not exist, want to create now, yes, links eingeben, zack.
Also ich habe ehrlich gesagt keinen Schimmer, warum man immer ein Clean-Build machen muss,
dass das funktioniert.
Da ist irgendwas in meinem Package-Build falsch, oder? Ich habe auch nicht genau
nachgekriegt, wie ich das nachstellen kann. Mein Package-Build ist mega simpel, also.
Ist das hier vielleicht irgendwie falsch? Dass er hier falsche Sachen kopiert?
An das Trinken denken, ja. Jetzt bin ich ja blöd, jetzt habe ich ein Clean-Build gemacht,
jetzt kann ich nicht mehr im Ordner nachgucken. Okay, funktioniert alles.
Kannst du nicht im Package-Build einstellen, dass es immer ein Clean-Build macht?
Ich weiß nicht, ich kenne mich damit nicht wirklich gut aus.
Musst du im Workflow Minus Minus Clean machen? Ich denke nicht. Du meinst, du meinst hier,
ja? Du meinst hier? Glaube ich nicht.
Jetzt kann man das leider nicht richtig nachvollziehen, was ziemlich doof ist.
Source Info. Kann man das leider nicht mehr richtig nachvollziehen mit dem mit dem Upgrade.
Müsste ich jetzt Version 6 fake mäßig machen, um das hinzuzugehen?
Kann es sein? Ich glaube mein Package-Build ist irgendwie nicht so nicht so ganz optimal.
Müsste ich das vielleicht noch mal in einem Sub-Directory machen oder so was?
Ich habe schon wieder vergessen, wie der Krempel funktioniert,
ehrlich gesagt. Ich habe es mir einmal angeguckt und dann war gut.
Ich meine, wir können es ja mal nachvollziehen. Das ist ja auch okay,
das ist ein Git, das ist ein Git-Report. Git Reset, Head 1 zurück auf Version 4.
Git Checkout, Minus Minus Source Info und wie heißt das andere? PKG-Build.
So, jetzt haben wir die alten wieder und jetzt kann ich aber sagen Make Package,
einfach Make Package. So, finished. Jetzt haben wir V004 am Start. Make Package,
Minus Minus Install ist okay. Downgrading, ja das ist okay. VmChamp, Minus Minus Version.
Es ist immer noch 5. Ich glaube mein Package-Build ist irgendwie nicht so der Weisheitsletzter Schluss.
Guck mal, da hat es Minus Version 4, aber da hat nichts gemacht. Also mein Package-Build
sagt. Was liegt denn hier für eine Dateiversion? Er mischen die. Achso, chmod plus x. Das ist
Version 5. Ich glaube, das ist das Problem. Ich glaube, das ist das Problem. Warum liegt
da Version 5 drin? Das sollte doch jetzt eigentlich. Wow, wow, wow, ist ja gut. Keine so gute Idee,
es zu ketten. Warum ist da Version 5 drin, Leute? Das ergibt doch gar keinen Sinn. Ich habe doch
jetzt Version 4 gebildet. Also ich habe die Vermutung, dass mein Package. Ja, ich habe
nicht clean gebildet, das ist richtig. Das muss aber doch eigentlich auch ohne clean
Bild funktionieren. Gibt es da sowas? PKG-Build. Clean. Ah. Ah.
Archwiki. Was sagt das Archwiki dazu?
Dependencies, Conflicts, Replaces, Package, Install. Also im Prinzip habe ich ja nicht
wirklich viel drinstehen. PKG-Build. So, ich habe nur eine Package-Methode. Package. Aus irgendwelchen.
Creating Packages. Hier, da steht, was es gibt. Okay, es gibt Prepare. To prepare sources for
building. Muss ich das? Jetzt machen doch andere Packages auch nicht so. Also ich glaube,
ich glaube, mein Package, mein PKG-Build ist irgendwie kacke. Nur mit dem Unterschied,
ich habe halt keine Ahnung so genau, was ich da eigentlich mache. Das heißt, ich weiß nicht,
wie ich es fixen kann. Es gibt, da gibt es da gibt es nichts mit clean Bild. Ich muss
wahrscheinlich vorher die Sachen löschen. Ich meine, eigentlich hätte ich ja vermutet,
der lädt die alte Version runter, wenn ich das mache. Macht er aber nicht. Wir resetten
noch mal eins. Jetzt, wir gehen jetzt mal auf Version 3. Ja ja, Checkout-Build, Checkout,
Source-Info, Install. So, jetzt will er downcrate. Jetzt will er downcrate auf Version 3. Minus,
minus Version. So, das ist immer noch Version 5. Und in meinem System ist auch immer noch
Version 5. Was kann ich in meinem PKG-Build machen? Minus S, minus, minus S. Ja, aber das
müssen andere Packages doch auch nicht machen beim Installieren. Wenn ich andere Packages update,
dann lasse ich das hier einfach durchlaufen und es geht. Und warum hat Mainz damit irgendwelche
Probleme? Muss ich vorher wirklich aufräumen lassen? Also muss ich jetzt quasi immer Package
Build. Brauche ich jetzt hier wirklich irgendwie noch so eine Pre. Brauche ich hier wirklich
irgendwie so einen Pre-Package-Build. Prepare-Step. Probieren wir das mal aus. Prepare. So, und
dann löschen wir einfach mal das alte Binary hier drinnen. Ich könnte mal auch gucken,
wie der Vorti das gebaut hat. Einfach mal spicken. Package. Na gut, der hat einen Build-Step. Ja,
gut, bei dem ist es kein Ding. Der erzeugt ja jedes Mal ein neues Binary. Und bei mir lädt
er das wahrscheinlich gar nicht neu runter. Okay, probieren wir das mal aus. Wir haben hier einen
Build-Step. Prepare. Kann ich da sowas sagen wie... Ich bin ja nur bei mir lokal. Ich mache mal
einen Snapshot. Wer weiß was ich da gerade treibe. Kann ich da sowas sagen wie RM? Package Deal?
Ich kann aber sagen VM-Champ RM. Also quasi das alte was noch da ist. Geht das jetzt?
Ne. Geht VM-V. Geht Pol. Achso, das will ich ja nicht. Wie war das? Reinstalk?
Oder? A package has already been built. Ja, ja, das ist ja schön und gut, wenn das already
been built. Package. Package können wir löschen. Was ist in Source drinnen? In Source ist auch
noch mal VM-Champ. Und zwar dann in Version 5. Warum ist das überall in Version 5? Stehe ich nicht.
Er hat es jetzt auch gar nicht ausgeführt, weil es... Achso! Weil es das hier schon gibt.
Das muss ich wahrscheinlich löschen. Ja. No such file. Cutsource. Okay, das gibt es doch nicht.
Keine Ahnung, wie man das macht. Oder ist es Package Deal, wo ich das... Also was ich jetzt,
was ich nicht verstehe ist, was er eigentlich noch machen soll ist, das ist noch Version 5.
Es soll aber mit dem Build, Source, es soll dort eigentlich Version 4 runterladen. Und irgendwie
macht er das nicht. Wir können ja make... Müssen wir gar kein install machen. Geht
eigentlich nicht ganz einfach. So. Und jetzt hier. Source. VM-Champ. Minus,
Version 5. Warum 5? Ich meine, ich sage ihm doch ganz klar, wo es herkommt. Package Version 3.
Hier hin. Runterladen. Kann das sein, dass er die Checksumme braucht, dass er das kapiert?
Was ist denn das hier? Source gleich? Was ist denn der Unterschied zwischen... Ah Moment,
der hat es einfach nur in zwei... Einfach nur mehrzeilig geschrieben. Also ich habe keinen Plan,
wie man ihn dazu überreden kann, das neu runterzuladen. Redownload.
Source. Destination. Ich meine, gibt sie... Okay, wenn sie einen Prepare-Step gibt. Echo.
Ich habe keine Ahnung, was ich hier eigentlich mache. Minus F. So. Starting Prepare. In welchem
Ordner sind wir hier überhaupt? An der Stelle. Wir sind in Source. Ja, okay.
Meiner Versionsnummer liegt das nicht. Versionsnummer ist 003. Okay, warte mal. Mit dem Link. Ich mache
mal kurz das mit dem Link weg. Ich bin hochgradig verwirrt, wie der Scheiß funktioniert. Von 005
auf 03. Wieso ist das doch egal? Source. Der redownloadet das nicht. Warum redownloadet er den
Kram nicht? Der linkt das dahin. Okay, schön und gut. Der lädt den Source aber nicht. Warum dann
nicht? Wo ist er denn jetzt hier mit PWD unterwegs? In Source. Ja, wunderbar. Also,
ich habe keine Ahnung, wie der Kram funktioniert. Ich weiß nur, dass das Package von mir das Einzige
ist, was sich so merkwürdig verhält. Das heißt, es muss irgendwie an meinem Bild liegen. Bild,
Clean, Source. Hat irgendjemand einen Plan von euch? Hat es schon mal gemacht?
Das ist hardcoded, die Version da drin. Der liest gar nichts. Da dran liegt das nicht. Ich
weiß ja, woran es liegt. Das ist das falsche Binary, was hier liegt. Die Frage ist nur,
was ist das falsche Binary? Die Frage ist, warum ist es das falsche Binary? Warum lädt er es nicht
neu runter? Ist make pkg-s dann für Steps runterladen? Das kann schon sein, aber das bringt mir
ja alles nichts, wenn ich es hier so fixen kann. Nee, ist auch immer noch minus 5. Das würde mir
ja gar nichts bringen. Die Leute installieren das ja über den Package Manager. Nein, Clean
Bild bringt nichts. Leute, es ist doch offensichtlich, dass das, was ich hier unten mache,
überhaupt keinen Einfluss darauf hat, was mein Package Manager macht. Selbst wenn ich das hier
unten mit Clean und allem irgendwie fixen kann. Ich weiß, dass es mit einem Clean Bild logischer
Weise geht. Ist es doch aber egal dafür, was die Leute mit dem Package Manager machen. Es muss doch
mit dem Package Manager gehen, dass ich jetzt Enter, Enter, Enter drücke und es ist die
rette Version. Es kann doch nicht sein, dass ich jedes Mal sagen muss Clean Bild. Das muss
ich bei keinem anderen Package. Das muss ich nur bei meinem Package. Und das verstehe ich nicht,
woran es liegt. Guck mal, der lädt das einmalig runter. Ja, es liegen noch
Reste rum. Das sage ich doch die ganze Zeit, dass da Reste rumliegen. Mensch, Alter, Backseating
Chat wieder. Natürlich, hier liegen Reste rum. Das ist das falsche. Aber warum ist das das
falsche? Natürlich liegen da noch Reste rum. Das ist doch das, was mich seit 30 Minuten frage,
warum da noch Reste rumliegen. Warum man das nicht überschreibt. Das ist doch der eigentliche
Knackpunkt. Wir können das mal umbenennen. Können wir das mal umbenennen. Gucken wir mal,
was jetzt runterladen würde. Hier ist eine sehr basic. Ja, das probiere ich gleich mal
auch so. Jetzt, wenn das nicht da ist, lädt das runter und jetzt ist es höchstwahrscheinlich
auch. Aber was interessiert ihn denn überhaupt, dass da ein altes Package von der alten Version
liegt? Hä? Moment. Warum steht da? Ach so, weil ich... Ah, jetzt blick ich einmal.
Reset. So, jetzt sind wir auf Version 4. So, ich checke jetzt das aus und PKG-Bild aus
von Version 4. Source, PKG-Bild. So, beides Version 4, Version 4. So, das hier ist Version
5. Okay, Make Package minus F. Er lädt es nicht neu runter. So, das ist schon mal Fail.
Wenn ich das verschiebe, dann lädt das neu runter und jetzt ist es bestimmt auch Version
4. Jetzt ist es Version 4. So, die große Preisfrage. Jetzt kann man das zumindest schon mal nachstellen.
Die große Preisfrage, die ich mir jetzt stelle, ist, warum lädt er das nicht einfach immer
neu runter? Das ist ja das eigentliche Problem. Vielleicht ist es echt die Checksum, ja. Vielleicht
ist es wirklich die Checksum, dass man das angeben muss. Aber das doch mal. Package-Bild,
passen wir das doch mal an. Package-Bild Checksums. So, das ist für Version 4. Das hier ist Version
5. Wir tun jetzt mal so, als wäre vorher Version 5 am Start. Version 5. Und was mache
ich jetzt in meinem Package-Bild noch mal? Source Info. Source Info. Version 5. Version
4. Checksum hat er jetzt eingetragen. So, Make Package-F. Dann sagt er mir nur, one
or more files need not pass validity check. Das ist ja richtig. Aber warum lädt er die
nicht neu runter? Weil würde er die neu runterladen, was übrigens auch hier steht, würde er die
neu runterladen, dann würde das auch funktionieren. Ja, der sagt, dass er sie bereits gefunden
hat, weil hier ein Package ist. Deswegen sage ich ja minus F. Also das ist das eigentliche
Problem. Warum lädt er das nicht neu runter? Refresh. Und vor allem, warum klappt das in
diesem Git-Package hier? Warum klappt das in dem Git-Package?
Was macht er denn hier? CD? Source Dear?
Kann es sein, dass man ein Package pro Release machen sollte irgendwie? Nee, das kann ja auch
nicht sein. Warum klappt das bei seinem Git-Package? Das ist doch genau das gleiche. Das ist immer die
dann guckt er hier Git. Das ist mir zu high IQ, wie das funktioniert. Und ich bin mir
auch nicht wirklich sicher, wie ich das in einem Package-Build fixen könnte. Ich bräuchte hier
irgendwas davor, um irgendwie aufzuräumen. Aber das hier lässt er doch laufen, bevor überhaupt
irgendwas von den Dingern da unten. Ja, selbst das funktioniert ja nicht. Selbst das funktioniert
nicht, weil er den Download irgendwie macht, bevor irgendwelche Custom Functions laufen.
Was gibt Prepare? Das Function-Command, das ich schon probiert habe. Wobei ich da, glaube ich,
sogar im komplett falschen Verzeichnis bin. Okay, Leute, das ist eine gute Idee. Das würde
wahrscheinlich funktionieren. Wahrscheinlich könnte ich das Binary so nennen. Okay, das ist
natürlich auch eine Variante. Man könnte das Binary so nennen. Wobei sich dann in dem Build-Ordner
Megabyteweise Shit ansammelt. Was auch nicht so Sinn und Zweck der Sache ist. Machen wir mal
Prepare. Prepare. Und dann haben wir noch PwD, wo wir da jetzt gewesen sind. Retrieving Sources
found for MChamp. Du kannst den überhaupt nicht ge-founded haben, weil das die falsche
Version ist. Und die Check-Summen stimmen auch nicht. Die clearen das selbst nach einer Zeit.
Ja, das Problem ist, ihr müsst das gleich clearen, weil das Package die alte Version.
Nee, Source-Info-Update ist richtig. Die Source-Info stimmt. Source-Info ist alles gut, ist alles
richtig. Ich glaube, ich habe einfach das System noch nicht so hundertprozentig gecheckt. Doch,
Source-Info ist richtig. Da steht Source 4 drinne. Ist richtig. Source 4 ist richtig.
Was hier liegt, ist Version 5. Und die hat weder die richtige Check-Summe,
noch denkt er, dass das runterläuft. Ja, vor dem Doppelpunkt. Ja genau, das ist halt die Frage,
warum er es nicht überschreibt. Was gehen würde, wäre wahrscheinlich wirklich das,
was eben vorgeschlagen wurde, dass man hier noch die Version reinschreibt.
Als man das so macht, also mit Prepare geht es auch schon mal nicht, weil das alles vorher läuft.
Nee, das habe ich ja nicht gemacht. Okay, also wahrscheinlich muss man das wirklich,
wahrscheinlich bleibt mir nichts anderes übrig, wie das wirklich so zu nennen,
dass die Version da reinkommt. Hi IQ Shit, wie macht das Microsoft? Der Typ,
der das Microsoft-Dings gepackaged hat. 23, Source x86 Code. Okay, die machen das auch so.
Ja, anscheinend muss man wirklich die Version da reinschreiben, sonst bug das rum. Na gut.
Du erstellst ein Temp hier, das geht nicht, weil dieses Source, das lädt er automatisch
runter, bevor irgendwelche Scripts von mir laufen. Aber wir können doch mal das hier mit Skip.
Skip machen, weil ich gar keinen Bock habe. Okay, das muss wirklich dann anscheinend so heißen.
Dann funktioniert der Kempel hier unten aber wieder nicht, aber wir führen es trotzdem jetzt
erstmal aus und gucken, ob es dann klappt. Bist du schon ein trusted user? Keine Ahnung.
Warte mal, lass mal überlegen. Source Info. Source Info. Okay, und jetzt Make Package minus F.
Jetzt lädt das auch runter. Okay, das ist anscheinend wirklich das Problem. Wobei es
an sich jetzt nicht funktioniert, das zu bauen. Source. Ja, ist ja gut, weil dann heißt der Kempel
so, das soll ja gar nicht so heißen. Das heißt, wir müssen das Package-Build nochmal anpassen,
so install und zwar was, was soll ich installen, was will ich installen? Das da. Ja Moment,
das soll aber vmchamp am Ende heißen und nicht vmchamplinux irgendwie was. Muss ich das jetzt
noch, muss ich das dann noch umbenennen? Also quasi sowas zu vmchamp. Okay, das ist noch das
alte, das wollen wir nicht. Source. Wenn man es dann richtig macht. Source. Ja. Ja, das sieht
eigentlich ganz gut aus. Okay, das ist wahrscheinlich das Problems-Lösung hier. Also man muss die
Versionsnummer hier vorne drin angeben und hier unten muss man es dann einmal moveen und dann
funktioniert der Rest. Okay, nice, easy. Also brauche ich das da und ich brauche das da. Gut,
dann updaten wir nochmal kurz das Package. Wie mache ich das jetzt am besten? Ich habe hier
gar nicht den Key, um mich ins Arch-User-Repo verbinden zu können. Das kann ich jetzt hier
gar nicht machen. Das kommt ja nicht aus meinem GitHub-Build, sondern mein GitHub-Build passt
ja nur die Versionsnummer da drin an. Oder habe ich den Key hier vielleicht hingelegt?
Okay, aber das ist wahrscheinlich wirklich das Problem. Das müsste ich jetzt machen.
Das mache ich off-stream. Ich habe den Key nicht hier. Aber das ist tatsächlich das muss
ich mir mal rüber kopieren. Das ist tatsächlich das Problem. Also ich muss die Source anpassen
mit Versionsnummer und das Ganze dann moveen und dann wird es wahrscheinlich auch funktionieren.
Wobei doch, ich habe den Key hier. Ich habe den Key in GitHub gespeichert. Da müsste ich jetzt
das Lokal runter kopieren. Okay, können wir mal ausprobieren. Vielleicht bin ich hier sogar
eingeloggt? Power? Login? Naja, da nicht. Bin ich hier vielleicht eingeloggt? Power?
Login? Wo bloß? Ich mache jetzt keine Check-Summen. Aber ich glaube, wir haben das Problem gelöst,
woran es liegt. So, 4 Stunden 11 Leute, reicht für heute. Genug gebastelt. Boah,
das hat mich jetzt nochmal abgefuckt mit dem Cash. Das werde ich jetzt gleich offline in der VM fixen.
Agiler Stream. Meine Güte, es reicht echt für heute. Macht's gut Leute, ich haue jetzt ab.
Bis denn, see you.

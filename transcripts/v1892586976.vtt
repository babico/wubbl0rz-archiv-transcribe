WEBVTT

00:05.620 --> 00:43.650
Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Por

00:43.650 --> 01:29.780
Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc, Porc

01:30.260 --> 01:32.260
Sachen

01:32.380 --> 01:34.380
Besser Titel

01:35.500 --> 01:37.500
Besser Streamtitel

01:38.180 --> 01:40.180
Agila ja ja

01:41.780 --> 01:47.620
Agila Senior PyFed Frontend JavaScript Architekt macht Experten High Performer Sachen

01:57.290 --> 02:06.500
oder so

02:06.500 --> 02:11.580
An's trinken, du kannst mich nicht an's trinken erinnern, also du kannst, aber das bringt ja nix, weil ich hab grad nix zu trinken, da

02:16.640 --> 02:18.640
Du du du du du

02:54.520 --> 02:56.520
Keck Alu

02:56.640 --> 03:06.900
Kein Prime Sub mehr frei oder wahrscheinlich kein Prime Account, soll's ja auch noch geben, Leute, die kein Prime Account haben

03:12.170 --> 03:16.540
Ja, der Papagei muss auch mal wieder sein, wo hab ich den denn?

03:18.340 --> 03:22.060
Ich hab den da, hab ich den, hab ich den auch irgendwo in nicht

03:23.780 --> 03:25.460
Und

03:25.460 --> 03:30.730
glaub nicht

03:30.770 --> 03:37.010
Einfach Prime, echt, geht das auch? Den gleichen Trick verwende ich ja für YouTube mit dem indischen YouTube Account

03:39.430 --> 03:42.390
Wusste gar nicht, dass es den gleichen Trick auch in Polen gibt

03:44.190 --> 03:46.190
Was kostet denn da Prime

03:46.750 --> 03:53.410
Die Musik ist, das ist Spielemusik, das ist von

03:54.170 --> 04:01.490
Das ist aus dem Ost von VVVVV, bester, bester Spielename überhaupt, das sind die, das sind diese, diese

04:01.770 --> 04:07.210
Das sind die sechs Figuren hier, ja, das ist V, das ist V, das ist V, das ist V, das ist auch V

04:07.410 --> 04:14.930
Die haben auch irgendwelche Namen, ich frag mich nicht mehr wie die, schon ewig, der Spiel ist von 2008 oder so

04:15.630 --> 04:18.250
Aber die hat, das hat nice, nice Musik

04:19.030 --> 04:24.650
Wobei das halt 10 Minuten der Gleiche, nicht 10 Minuten, 10 Stunden der Gleiche Songs sind, das muss jetzt nicht sein

04:24.650 --> 04:29.290
sein ich werde euch gleich erlösen und gleich was ordentliches anmachen oder irgendwas was

04:29.290 --> 04:32.250
ich besser was man besser im Hintergrund laufen lassen kann.

04:32.250 --> 04:39.660
Erster Eindruck von Baldur's Gate 3 ok habe ich ja im letzten Stream schon gesagt also

04:39.660 --> 04:45.020
es ist ein richtig gutes ich würde noch nicht mal sagen oldschool RPG das wird immer so

04:45.020 --> 04:50.460
das wird immer so verkauft so nach dem Motto als ähm ja wie wird das genannt hier ja doch

04:50.460 --> 04:58.220
so Oldschool RPG so Boomer RPG mäßig ist es gar nicht das ist das ist relativ modern

04:58.220 --> 05:05.300
das ist quasi Divinity Origins in 2.8 oder so zumindest insgesamt muss ich sagen es ist

05:05.300 --> 05:09.660
ein richtig gutes Game wenn man auf solche Sorten Spiele steht ich muss sagen es hätte

05:09.660 --> 05:13.620
aber auch nicht unbedingt Baldur's Gate heißen müssen ich gette warum sie es so genannt

05:13.620 --> 05:19.660
haben aber es hätte nicht unbedingt Baldur's Gate sein müssen weil es hat mit den alten

05:19.660 --> 05:27.340
Baldur's Gate Spielen sowohl stilistisch als auch Storytelling wobei das will ich

05:27.340 --> 05:36.100
gar nicht mal so sagen ohne zu spoilern ein bisschen Bezug gibt es schon ähm also sowohl

05:36.100 --> 05:41.540
stilistisch als auch vom Gameplay her hat das relativ wenig mit den alten Baldur's

05:41.540 --> 05:47.540
Gate zu tun und das liegt nicht daran dass Baldur's Gate 3 auf Dungeons & Dragons 5

05:47.540 --> 05:56.980
oder 5th Edition basiert und nicht auf der 2. sondern dass das alles halt dass es nicht

05:56.980 --> 06:01.060
Realtime mit Pause ist dass es nur ne 4er Party statt ne 6er Party ist und sowas also

06:01.060 --> 06:06.980
es spielt sich schon an es ist aber ein wirklich gutes Game mit extrem viel zu entdecken und

06:06.980 --> 06:11.980
extrem viel Content wo ich noch ein bisschen gespannt bin wo ich noch ein bisschen gespannt

06:11.980 --> 06:20.110
bin deine Mutter spielt das Game hat guten Spielegeschmack also wo ich ja noch ein bisschen

06:20.390 --> 06:31.350
gespannt bin wie die letzten wie so der letzte und vorletzte Akt ist in Baldur's Gate 3 weil

06:31.350 --> 06:37.910
eine Sache die Divinity Originals in 2 hatte zumindest meinem persönlichen Eindruck nach

06:37.910 --> 06:45.350
war die erste Hälfte des Spiels besser als die zweite Hälfte des Spiels aber selbst mit nur

06:45.350 --> 06:49.350
der ersten Hälfte hat man immer noch unglaublich viel Content aber ich bin mal gespannt wie sich

06:49.350 --> 06:52.750
das entwickelt so viel habe ich jetzt ja auch noch nicht gespielt ist es nicht so dass ich

06:52.750 --> 06:58.270
schon fast durch bin oder sowas du kannst du kannst den ersten Akt fast 100 Stunden spielen wenn du

06:58.270 --> 07:09.120
willst ich muss mal kurz ein bisschen anderes wie anderes Wupp Wupp hier Nintendo Songs was

07:09.120 --> 07:14.040
haben wir denn hier lass mal Wupp Wupp Wupp Wupp Wupp Wupp geht im Prinzip Wupp Wupp Wupp geht

07:14.040 --> 07:19.240
immer das ist so so so so passende Hintergrund nichts sagen Hintergrund Musik das kann man

07:19.240 --> 07:26.180
immer anmachen so gucken ob die Lautstärke richtig eigentlich ist mach mal Wupp Wupp Wupp Wupp Wupp

07:26.180 --> 07:33.780
Wupp Wupp Wupp viel zu laut Wupp Wupp Wupp so ist gut man muss das immer ein bisschen bisschen

07:33.780 --> 07:39.980
runterdrehen weil Wupp Wupp Wupp immer ziemlich ziemlich komprimiert ist vom Sound her hört sich

07:39.980 --> 07:47.550
immer viel viel lauter an als es ist ja so ich mach mal meine VM an let's go High Performer

07:47.550 --> 07:58.830
Crimeset Mindset Chief Architects Solution Win bis Sec DevOps Officer am Start heute für alle

07:58.830 --> 08:04.310
die gestern nicht dabei waren zeige ich euch was wir machen auf jeden Fall müssen wir jetzt erstmal

08:04.310 --> 08:16.760
Daily Scrub machen Daily Stand Up Leute gleich geht's los Status Update was die VM macht da

08:16.760 --> 08:23.740
ist sie hier ist die VM die VM muss jetzt erstmal Arch by the Way updatet werden wow was ist das

08:23.740 --> 08:32.340
hier Perl und was moment was wird geupdatet Lib Turbo ach ne JPG Turbo ja das ist glaube ich die

08:32.340 --> 08:41.180
Standard Dings hier JPEG Implementierung Lib Elder Perl meine Güte Alter warum habe ich noch so viel

08:41.180 --> 08:46.500
Perl für was habe ich Perl warum habe ich Perl drin okay das Problem war er Perl lass mal gucken

08:46.500 --> 08:56.020
was passiert wenn ich das versuche ah das geht nicht weil ah verstehe ASCII Aquarium braucht das

08:56.020 --> 09:00.820
ja gut dann kann ich es natürlich nicht deinstallieren das ist klar aber aber Shit brauchst

09:00.820 --> 09:17.740
auch und hyphen hyphen hyphen ist ein Bindestrich oder ja okay Bindestrich naja dann dann halt mal

09:17.740 --> 09:26.740
Perl geupgradet JetBrains Toolbox oh guck mal JetBrains Toolbox 2.0 ist da haben die irgendwelche

09:26.740 --> 09:37.760
Release Loads JetBrains Toolbox 2.0 was haben die für geile Sachen ist das jetzt ist das jetzt

09:37.760 --> 09:51.500
besser irgendwie das kommen wir uns gleich an wieder mit buntem Icon ja ich hoffe mal sehen

09:51.500 --> 09:56.740
wir gleich ich muss eh gleich ich muss eh gleich rebooten da müssen wir alles nochmal stellen jawoll

09:56.740 --> 10:02.940
updaten geht es egal aber ASCII Aquarium ist richtig genau man muss da schon Prioritäten

10:02.940 --> 10:13.100
setzen kann ich einfach Perl runterschmeißen und dann gibt es kein ASCII Aquarium mehr willst du

10:13.100 --> 10:28.880
mich veräppeln ich habe das doch gerade geupdated kann das kann das sein dass ich das

10:28.880 --> 10:53.410
gar nicht benutze Moment das muss ich jetzt mal checken ich habe die nur installiert aber ich

10:53.410 --> 11:02.000
benutze die gar nicht okay Toolbox 2.0 introduces significant changes to how your tools are managed

11:02.000 --> 11:06.840
and so because of this the new version migrates your tools on launch this can take several minutes

11:06.840 --> 11:13.920
depending on how many tools you have this action cannot be undone okay ich mach mal ich mach mal

11:13.920 --> 11:19.480
alles zu leute das hier zu das hier zu das ist das Terminal das muss ich dazu ich muss eh rebooten

11:19.480 --> 11:31.600
so update let's go let's go Toolbox white people happy Chief Dev Ops Sec Biz Manager Ops of Business

11:31.600 --> 11:38.600
Grunt ne ne ne ne da fehlt Architekt und Expert drinne noch pass auf jetzt ist es kaputt und hat

11:38.600 --> 11:50.550
alles an installed welcome Toolbox 2.0 my great tools wie das war es schon mein griff

11:50.550 --> 12:12.650
was ist das aber wenn ich klicke geht es alles okay the rider kann man was what's new what's

12:12.650 --> 12:22.170
new shit lab integration AI assistant habe ich habe ich auf den AI Assistant Zugriff wenn ich

12:22.170 --> 12:34.500
den Old Desktop Package habe egal wie update muss eh sein updating so und dann werden wir

12:34.500 --> 12:39.500
rebooten sobald das hier fertig ist und dann fangen wir an heute gibt es richtigen Pfeiffer

12:39.500 --> 12:45.820
Java JavaScript Shit plus ein bisschen C Sharp Backend und zwar ich werde das heute mal ein

12:45.820 --> 12:49.780
bisschen ordentlich machen wir haben wir haben die letzten Tage ziemlich viel zusammen gewurschtelt

12:49.780 --> 12:54.100
wir werden das mal ein bisschen in Komponenten auslagern und den Assistent fertig machen den

12:54.100 --> 12:59.860
wir gestern angefangen haben Speedfighter Dankeschön für den Sub das ist der IQ Punkte

12:59.860 --> 13:06.700
für den gesamten Chat wieder verteilt hier so ist das nice muss ja sein der Chat war ein bisschen

13:06.700 --> 13:11.820
3 hat die letzten letzten Tage vielleicht war es auch der Trainer der alle runtergezogen hat

13:11.820 --> 13:21.020
man weiß nicht so genau aber wird Zeit für Prime Subs dass der IQ hier ein bisschen steigt wieder

13:21.020 --> 13:36.890
Applying Patches okay alle was passiert da im Hintergrund gerade okay fertig alles installiert

13:36.890 --> 13:58.800
okay alles reboot reboot nexus an nexus an Dankeschön für den Sub aber Captain Poggers dafür

13:58.800 --> 14:03.200
bist du glaube ich ja was gibt es nicht oder bist du der Lisp Fan gewesen ich kann da nicht

14:03.200 --> 14:09.360
durcheinander bringen wir hatten doch hier irgendeiner Lisp Fan am Start wir haben sogar

14:09.360 --> 14:15.200
Leute die mögen ABAP können euch das vorstellen haben sich gestern ein paar Leute geoutet sie

14:15.200 --> 14:34.730
mögen ABAP bald isos danke für den Sub IQ Stealth du arbeitest in einer 4m ist das nicht 8? Nö warum?

14:37.870 --> 14:45.110
macht das irgendwie den Eindruck als wäre das langsam ja ich habe rebooted so

14:45.110 --> 15:03.310
okay der jetzt was hatten wir hier auf? Hier hatten wir Visual Studio Code auf hier hatten wir Chrome in einem Tab

15:03.310 --> 15:07.790
nebendran ich bräuchte mal so einen Desktop Session Manager der immer wieder nach dem

15:07.790 --> 15:16.230
Neustart alles aufmacht so wie man es eingestellt hat so dann müssen wir hier rein nach repos via

15:16.230 --> 15:30.900
gemweb npm run dev okay starten da ist es dann müssen wir hier einen Terminal aufmachen Rider

15:30.900 --> 15:41.300
starten und unsere Back End App ist einfach verschwunden die steht immer hier drinnen hat

15:41.300 --> 15:46.060
die Migration nicht so ganz funktioniert ja aber hauptsache ich kann Rider Projects Kackel öffnen

15:46.060 --> 15:56.540
das ist das allerwichtigste dass das das brauche ich jetzt nein kanns nicht alter öffne halt einfach

15:56.540 --> 16:13.120
got it okay what's new in Rider lasst uns mal kurz checken Customize Project Headers

16:13.120 --> 16:21.280
okay ich habe neues haben die nicht aber die haben etwas präsenteres logo jetzt und ein

16:21.280 --> 16:34.410
bisschen farblich gestyltes gestaltet gestaltet bar hier oben okay wie geht das Custom Change

16:34.410 --> 16:39.770
Project Color? Nein gut nicht dass ich das jetzt bräuchte ich habe eh nur ein Projekt drin. AI Assistant kann ich

16:39.770 --> 16:44.930
jetzt hier einblenden guck mal hier wo ist er denn der AI Assistant? Der müsste angeblich hier irgendwo

16:44.930 --> 16:51.570
sein Sternchen seht ihr das irgendwo dieses Sternchen Symbol wobei ganz ehrlich ich will

16:51.570 --> 16:56.570
ich will den JetBrains AI da muss man sich bestimmt extra doch einen fünften Account machen oder so

16:56.570 --> 17:03.930
C-Sharp Support für neues Zeug. Alter was haben die meine Güte was haben die für Release Notes?

17:03.930 --> 17:10.810
What the fuck? Wir haben eine Software gekauft auf der Arbeit von einem Hersteller der hat es

17:10.810 --> 17:14.690
bis letzte Version nicht geschafft Release Notes raus zu bringen und jetzt schreibt er

17:14.690 --> 17:19.810
immer eine Zeile mit irgendwie drei Changes auf einmal obwohl sie viel mehr gemacht haben was

17:19.810 --> 17:25.890
ist das ist ja hier als der krassesten Change Notes Dinger hier. Alter die wollen es aber

17:25.890 --> 17:41.420
echt wissen. Gut wir wollen es aber mich interessiert es nicht. Backend und jetzt Run. Gut so dann kann

17:41.420 --> 17:46.740
ich euch zeigen wo wir stehen geblieben sind also folgende Anwendung gibt es ich erzähle noch mal

17:46.740 --> 17:53.380
oder oder wissen oder sind alle sind alle im Bilde um was es geht oder soll ich es nochmal

17:53.380 --> 18:00.500
erklären ich glaube ich erkläre es nochmal oder? Dachte ich mir kann ja nicht jeder immer dabei

18:00.500 --> 18:09.600
gewesen sein also wir bauen einen ein Webinterface ein ziemlich simples Webinterface. Chat ist weg

18:09.600 --> 18:16.240
nee der Chat ist überhaupt nicht weg. Da unten ist er doch noch. Der Chat ist vielleicht ein

18:16.240 --> 18:32.210
bisschen. Ne der passt doch eigentlich ganz gut. So kann man das machen weil hier ist immer die

18:32.210 --> 18:55.180
letzte Message. Ach jetzt passt schon so ist okay. Also folgendes wir bauen ein Webinterface für

18:55.180 --> 19:00.980
mein Home Assistant Plugin. Hat das Webinterface eine andere Funktion als die Home Assistant

19:00.980 --> 19:07.420
Integration? Nein nein das wird ein Webinterface dafür. Oh nein der Scamtrain ist abgefahren jetzt

19:07.420 --> 19:14.060
kann Besos nicht ins Weltall fliegen. Das ist ein Webinterface dafür das hat zwei Vorteile. Erstens

19:14.060 --> 19:18.980
dass man das Standalone besser verwenden kann weil du halt das ordentlich konfigurieren kannst und

19:18.980 --> 19:24.540
zweitens kommt die Home Assistant Konfiguration Seite nicht mit den Options klar. Zum Beispiel

19:24.540 --> 19:29.820
kann ich dort nicht mehrere Accounts für unterschiedliche Hersteller anlegen. Das unterstützt

19:29.820 --> 19:34.660
das einfach nicht. Oder ich müsste anfangen mit Account underscore 1 und Account underscore 2 aber ich

19:34.660 --> 19:39.180
weiß ja nicht welche und wie viele die Leute haben. Zumal das ja auch gepaart werden muss mit Region

19:39.180 --> 19:43.020
und Hersteller. Das das funktioniert nicht so richtig und außerdem habe ich Bock mal ein bisschen

19:43.020 --> 19:50.100
Frontendstells zu machen wieder. So also was wir jetzt was wir jetzt gemacht haben. Warum hängt das

19:50.100 --> 19:57.860
eigentlich so krass da zusammen? Das muss ich gerade mal gerade mal ganz kurz ein bisschen hübsch

19:57.860 --> 20:07.200
machen. Also warum warum ist hier so viel Abstand dazwischen? Warum ist das so viel Abstand

20:07.560 --> 20:20.260
dazwischen? Sollte da so viel Abstand? Daran liegt es nicht. An was liegt das mit dem Abstand? Senior

20:20.260 --> 20:35.630
High IQ JavaScript Engineer am Start. Warum ist hier so viel Abstand dazwischen? Ah okay schon

20:35.630 --> 20:45.670
besser. Und jetzt machen wir noch sowas wie ja sowas. So ist es jetzt glaube ich besser. Haben

20:45.670 --> 20:56.330
wir hier auch. Haben wir hier auch. Okay gut. Mal kurz das anpassen dass das einheitlich ist. Ah ne

20:56.330 --> 21:02.290
habe ich auch MX4. Okay gut. Also folgendes was man hier machen kann ist. Ich lösche ich lösche

21:02.290 --> 21:05.530
mal ein bisschen was. Kann man löschen. Wobei hinzufügen geht ja noch nicht. Vielleicht sollte

21:05.530 --> 21:10.090
ich nicht so viel löschen. Aber ich lösche mal ein bisschen was dass man was sieht. Also man kann

21:10.090 --> 21:13.530
jetzt über das Webinterface. Alter wie viele Autos habe ich denn hier angelegt? Beziehungsweise wie

21:13.530 --> 21:18.770
viele Accounts habe ich angelegt? Das ist ein Webinterface um die Home Assistant Integration

21:19.090 --> 21:29.130
die ich hier gebaut habe besser zu konfigurieren. Und zwar was man damit machen kann ist. Ich will

21:29.130 --> 21:32.450
es euch gar nicht großartig zeigen. Das reicht ja eigentlich. Das kurze Überblick. Da geht es ja

21:32.450 --> 21:36.970
heute nicht drum. Kann man Informationen von seinem Elektroauto abfragen. Ja da kann man zum

21:36.970 --> 21:42.090
Beispiel so Sachen machen wie aktuelle Batterieladung. Wie viel Reichweite das Auto denkt

21:42.090 --> 21:48.130
das mit der Batterieladung schafft. Kilometerzähler. Bis man in die Batterie. Bis man nicht in die

21:48.850 --> 21:54.290
Werkstatt muss. Batterieladeprozent. Man kann theoretisch auch das Licht darüber einschalten

21:54.290 --> 21:59.650
wenn es das Auto unterstützt. Letztes Fahrtenlock. Man kann den Standort auslesen. Und man kann

21:59.650 --> 22:03.690
Reifendruck und sowas. Also alles was die Hersteller API ungefähr hergibt kann man darüber

22:03.690 --> 22:07.810
auslesen. So und wenn man das besser konfigurieren kann gibt es jetzt ein Webinterface für. Und eine

22:07.810 --> 22:11.930
der Sachen. Also das wird ein super minimalistisches simples Webinterface. Aber das Schöne ist ich bin

22:11.930 --> 22:24.560
ja auch nicht der krasse Javascript Checker. So und es gibt im Prinzip eigentlich nur zwei

22:24.560 --> 22:30.960
Seiten. Okay drei Seiten wird es vielleicht geben. Es gibt eine Übersicht Seite. Da sieht man alle

22:30.960 --> 22:35.800
seine Accounts die aktuell eingerichtet sind und wie viele Autos sich in den Accounts befinden.

22:35.800 --> 22:41.080
Realistisch betrachtet bei den meisten Leuten wird das ein Account sein oder zwei Accounts mit

22:41.120 --> 22:47.960
jeweils einem Auto drin. Also die wenigsten Leute werden wahrscheinlich einen Jeep. Keine Ahnung

22:47.960 --> 22:59.300
drei Jeeps und fünf Fiats haben oder sowas. Geringverdiener aus dem Weg hier. So und dann

22:59.300 --> 23:04.380
gibt es noch ein zweites Menü. Eine zweite Seite. Wenn ihr auf Plus klickt. Das ist übrigens auch

23:04.380 --> 23:10.340
hässlich gemacht wie dieser Plus Button da hängt. Wenn man hier auf Plus klickt. Dann gibt es einen

23:10.460 --> 23:15.900
Dialog wo man seinen Account hinzufügen kann. Da haben wir gestern aufgehört. Das sieht auch ein

23:15.900 --> 23:23.340
bisschen hässlich aus. Da waren wir gerade dabei. Das erste sieht schon ein bisschen besser aus.

23:23.340 --> 23:28.940
Ja kann man kann man hier eintippen bla bla bla bla bla bla. Dann klickt man auf Login und dann

23:28.940 --> 23:32.860
checkt ob das Login geht und dann kann man es hinzufügen. Und dann gibt es noch ein Settings

23:32.860 --> 23:37.220
Dialog. Den haben wir aber noch gar nicht gemacht. Heute bauen wir mal diesen Account

23:37.220 --> 23:42.820
Einrichtungsassistent. Fertig oder weiter. So und natürlich das Allerwichtigste. Es gibt noch

23:42.820 --> 23:49.140
einen Slider. Damit man zwischen Dark und Light Theme umschalten kann. Essenziell wichtig. Ohne

23:49.140 --> 23:57.260
geht es natürlich gar nicht. Seid ihr bei mir oder? Also ohne ist nicht nicht machbar. Da machen wir

23:57.260 --> 24:02.820
jetzt noch ein bisschen Abstand oben. Sonst sieht es nämlich gerade so kacke aus. Das ist der Flash

24:02.820 --> 24:07.260
Bang Button. Genau so und ich habe mir gedacht das ist alles ziemlich Quick und Dirty wie wir

24:07.260 --> 24:11.620
das hier gelöst haben. Ich mache mal den Krempel zu, dass ich wieder ein bisschen Überblick habe.

24:11.620 --> 24:16.940
Wir werden das jetzt tatsächlich mal etwas ordentlich machen und wir bauen jetzt so wie

24:16.940 --> 24:21.180
man Svelte eigentlich benutzen sollte. Ich muss mich da auch mal ein bisschen dran gewöhnen. Ein

24:21.180 --> 24:25.700
paar Komponenten draus für diesen für diesen Versat. Zum Beispiel haben wir hier. Guck mal

24:25.700 --> 24:34.860
ich checke jetzt schon nicht was hier passiert. Also zum Beispiel haben wir hier verschiedene

24:34.940 --> 24:44.780
Inputs mit einem Label. Inputs und wir checken ob das ein Passwort ist. Wenn es ein Passwort ist

24:44.780 --> 24:49.940
gibt es hier so einen Button. Da kannst du anzeigen lassen ob du es quasi hiden willst

24:49.940 --> 24:53.820
oder anzeigen willst. Im Prinzip Standard Kram. Nur das was wir selbst gebaut haben.

24:53.820 --> 25:00.180
Das sollten wir mal in eine eigene Komponente auslagern. Ansonsten wird das hier zunehmend

25:00.180 --> 25:10.780
unübersichtlich. Ich denke das machen wir heute. Das ein bisschen zu verkomponentisieren. Und ich

25:10.780 --> 25:17.500
habe noch zwei weitere Fifeld Ideen was wir machen. Da bin ich mal gespannt ob ich das

25:17.500 --> 25:25.460
hinkriege. Das ist tatsächlich gar nicht so einfach. Und zwar hier im zweiten Step muss man ja

25:25.460 --> 25:32.340
noch den Refreshintervall angeben. Wie oft man abfragen möchte vom Hersteller und einen Pin. Ich

25:32.340 --> 25:40.500
werde dafür zwei eigene Komponenten bauen. Einmal so ein Plus Minus Ding für den Refreshintervall

25:40.500 --> 25:50.220
und einmal so einen Pin Input. So Pin Input sowas wie wie Chakra UI hat. Das werden wir aber selbst

25:50.220 --> 25:56.540
bauen. Guck mal sowas hier Pin Input. Eins zwei drei vier. Sowas werden wir bauen. Ich bin mir

25:56.540 --> 26:01.780
nicht sicher ob ich das auf die Reihe kriege. Oder ob wir da überhaupt Zeit für haben. Sowas werden wir

26:01.780 --> 26:08.220
heute mal bauen. Aber vorher müssen wir das ganze mal auf die Schnelle etwas verkomponentisieren.

26:08.220 --> 26:14.900
Weil ich blicke nicht mehr durch. So und ich würde vorschlagen wir machen folgendes. Wir fangen

26:14.900 --> 26:21.700
ganz simpel an. Wir machen hier raus. Also das hier ist der Button für. Das ist das ist diese

26:21.700 --> 26:28.340
Input diese Input Feld für User. Wir machen daraus einfach mal eine eigene Komponente. Ich

26:28.340 --> 26:33.580
habe jetzt ich habe gelernt dass man das ist dass es dafür was gibt und zwar Extracts Welt

26:33.580 --> 26:43.180
Component. Kann man sagen New Component. Das Ding heißt jetzt Text Input. Dann verschieben wir das

26:43.180 --> 26:52.780
nach Lib. Und er hat alles mögliche mit kopiert was er nicht mit kopieren müsste. Okay so Text

26:52.780 --> 27:01.020
Input. Was haben wir denn hier alles. So müssen wir jetzt hier Text Input. So dann lasst uns mal

27:01.020 --> 27:09.160
kurz überlegen was brauchen wir denn dafür. Aktuell ist es einfach nur eins zu eins kopiert. Aber wir

27:09.160 --> 27:14.040
müssen das jetzt ein bisschen ein bisschen ordentlich machen. Label kann so bleiben. Wobei

27:14.040 --> 27:20.840
eigentlich sieht es ein bisschen bisschen sehr gestaucht aus. Lasst uns mal checken. Wenn ich

27:20.840 --> 27:27.680
dann ein Diff draus mache. Wir schmeißen wir schmeißen den Klempel erst mal weg. Also Export

27:27.680 --> 27:34.800
Let. So machen wir doch mal ein Label was man setzen kann in der Komponente. Also der Unterschied

27:34.800 --> 27:38.640
zwischen dem wie wir es jetzt die ganze Zeit haben und wie wir es jetzt machen ist. Alter

27:38.640 --> 27:46.520
jetzt habe ich es kaputt gemacht. Export. Ich zeige euch das gleich. Value. Brauchen wir noch.

27:47.000 --> 28:05.910
Value. Dann kann man es weglassen. Plus. Machen wir noch Export. Error. Okay. Ich glaube jetzt soll es

28:05.910 --> 28:16.390
wieder rendern. Rendert es jetzt. Okay nice. Also der Unterschied zu dem was wir vorher hatten ist.

28:16.550 --> 28:24.590
Vorher. Guckt mal. Vorher hatten wir sowas hier. So ein riesen langes Ding. Was eigentlich eine

28:24.590 --> 28:28.710
gewisse Logik hatte. In sich geschlossen. Und das ersetzen wir jetzt durch so eine Custom

28:28.710 --> 28:35.630
Komponente. Custom Tag. Was wir ausgelagert haben. Hier rein. Da können wir dem Ding nämlich gleich

28:35.630 --> 28:43.550
mal ein Label setzen. Das Label wird User. So. User. Und das schöne ist man kann das jetzt in

28:43.550 --> 28:48.670
allen Formularen wiederverwenden. Ohne dass man das jedes Mal die halbe Seite copy pasten muss.

28:48.670 --> 29:05.060
So. Text Input Label. Label wird nicht gesetzt. Warum ist das mit einem extra Diff. Das macht

29:05.060 --> 29:13.420
überhaupt keinen Sinn. Diff. So. Hier kommt der Label Text rein. Und dann. Ja. Jetzt steht

29:13.420 --> 29:18.940
nämlich auch User wieder da. Und dann probieren wir mal was. Und zwar wenn man dem Ding ein Padding

29:18.940 --> 29:29.140
von 1 geben. Das sieht doch schon schicker aus. Das gefällt mir besser. So. So. Dann sollten wir

29:29.140 --> 29:36.540
noch den Placeholder exportieren. Dass man den setzen kann. Placeholder ist das was hier innen

29:36.540 --> 29:41.540
drin in so einem Input Feld steht. Weil man noch nichts eingegeben hat. Aber einfach Placeholder.

29:41.540 --> 29:48.700
Ne. Ich weiß wie wir das machen. Six Head Time. Wir machen das so. Wir gucken. Wir machen Placeholder

29:48.940 --> 29:54.620
nicht. Nicht in String. Wir machen Placeholder auf 0. Und dann gucken wir. Ist der Placeholder

29:54.620 --> 30:05.300
gesetzt. Dann nehmen wir ihn. Ansonsten. Wie geht das jetzt. So. Ansonsten setzen wir da das Label

30:05.300 --> 30:13.900
ein. So. Und dann. Und dann machen wir noch 2 Punkte. 3 Punkte dahinter. Sehr schick. So. Typ

30:14.220 --> 30:25.170
Text ist richtig. Placeholder. Ne. Ich glaube. Ich glaube das war es. Ja. Das Input Event müssen

30:25.170 --> 30:30.770
wir noch durchreichen. Ansonsten war es das eigentlich. So. Erste Komponente erstellt.

30:30.770 --> 30:37.530
Siehst du. Es wird schon langsam ordentlicher. So. Was haben wir hier als nächstes. Jetzt kommt

30:37.530 --> 30:41.610
unser Passwort Input. Ja. Übrigens jetzt hier. Nur dass man jetzt mal sieht. Was das für einen

30:41.610 --> 30:45.690
Vorteil hat. Anstatt dass ich jetzt sowas hier copy pasten muss. Wenn ich es wieder verwenden will.

30:45.690 --> 30:50.210
Kann ich jetzt einfach sowas hier machen. Hab 3 mal. Und kann das jetzt auch customisieren. So.

30:50.210 --> 30:59.410
Keine Ahnung. User. E-Mail. Und Cute Chat. So. Da wird das alles direkt customisiert. So. Jetzt

30:59.410 --> 31:13.000
wollen wir ein Passwort Input Punkt Welt machen. Heute ist ja richtig Progress angesagt. So. Label.

31:13.000 --> 31:22.220
Das kopieren wir mal alles da rein. Sagen jetzt. Passwort Input. Richtig. Richtig. Pfeiffertime.

31:22.220 --> 31:27.860
Ja. So. Da fehlt jetzt natürlich die Hälfte. Da kopieren wir uns mal was vom anderen Input.

31:27.860 --> 31:44.250
Nämlich. Label. Value. Error. Placeholder. Klingt schon mal sinnig. Ja. Script. Label.

31:44.250 --> 31:53.830
Also. Placeholder. Okay. Jetzt muss ich. Jetzt muss ich kurz. Kurz überlegen. Jetzt brauchen wir

31:53.830 --> 32:01.020
noch eine Variable. Show Passwort. Die auf false steht. Standardmäßig. Ja. Wenn du was wissen willst.

32:01.020 --> 32:06.340
Sag Bescheid. Aber. Das ist wahrscheinlich so ähnlich wie in der Schule. Wenn der Lehrer zwei

32:06.340 --> 32:10.020
Stunden irgendwelche random Sachen erzählt hat. Und am Ende fragt er. Und habt ihr noch Fragen.

32:10.020 --> 32:16.660
Und man denkt sich so. Ja. Alles. Ich habe nichts verstanden. Und der Lehrer dann sagt. Ja. Musst du

32:16.660 --> 32:23.560
schon konkret fragen. Wir können das nicht alles nochmal machen. Ja. Heute ist Best Practice Stream.

32:23.600 --> 32:30.720
Korrekt. Nicht Best Practice. Bestest Practice. Und Best Practice ist unter anderem auch keine

32:30.720 --> 32:34.920
Kommentare und keine Tests zu programmieren. Weil das ist eh nur bloatend und kostet Zeit.

32:34.920 --> 32:47.340
So. Label. Value. Error. Ich glaube das passt soweit. Wie bauen wir denn jetzt unser Passwortfeld

32:47.340 --> 32:53.860
ordentlich um. Das das als Komponente funktioniert. So. Hier kommt nicht Passwort rein. Sondern hier

32:53.860 --> 33:03.120
kommt Label rein. Und das wird auch ein Diff wie beim anderen. Und als Klasse kriegt das auch

33:03.120 --> 33:12.520
ein Padding von 1. Input Error ist im Prinzip genau das gleiche wie beim anderen. Das können wir auch

33:12.520 --> 33:24.600
kopieren. Type. Show Passwort. Text. Ja. Okay. Das. Das brauchen wir noch. Button. Ja. Das müssen

33:24.600 --> 33:42.580
wir jetzt nur noch importieren. Icon. Eye off. Icon. Ear off. Nein nein. Eye. Eye off. Nicht das

33:42.580 --> 33:55.150
Ohr aus. Warum steht jetzt da oben drüber. Warum steht da nichts oben drüber. Das Label. Ist das

33:55.150 --> 34:02.790
Label nicht gesetzt. Ach ne. Das Label ist nicht gesetzt. Ja. Passwort. Zack. Haben wir das Label

34:02.790 --> 34:08.390
auch gesetzt. Dann kopieren wir uns von unserem Text Input mal diesen Placeholder Krempel. Theoretisch

34:08.390 --> 34:12.350
könnte man wahrscheinlich auch irgendwie das eine auf dem anderen aufsetzen lassen. Aber da bin ich

34:12.350 --> 34:22.660
gerade zu PP dafür. So. Placeholder haben wir auch. Auf was für ein Skill Level würdest du dieses

34:22.660 --> 34:28.980
Projekt schätzen. Keine Ahnung. Also ich würde. Okay. Lass mal überlegen. Also Moment. Das muss

34:29.740 --> 34:36.100
man in zwei Sachen aufsplitten. Die Backend Geschichte mit der Fiat API und dem ganzen

34:36.100 --> 34:41.980
Krempel. Das würde ich sagen ist gar nicht so simpel. Siehst ja auch das ist ein bisschen. Das

34:41.980 --> 34:51.140
ist ein bisschen komplexer hier. Werden auch einige recht bekannte Libraries für verwendet

34:51.140 --> 34:59.180
und da passiert schon ein bisschen was drin. Also ich würde sagen das Backend Projekt ist

34:59.180 --> 35:03.540
aber auch noch überschaubar. Also ich würde. Okay. Okay. Sagen wir es mal. Machen wir das.

35:03.540 --> 35:08.780
Machen wir das mal in fünf Kategorien. Ja. Machen wir irgendwie 1 2 3 4 5. So. 1 ist.

35:08.780 --> 35:19.340
Sag mal so. Starter Projekt. So wenn man ganz. Nenn es mal. Starter Projekt. So. Projekt. So.

35:19.340 --> 35:31.540
2 ist quasi. Ja. Übung. So. Oder wie nennen wir es da mal. 3 ist Mitte. So. 4 ist. Also

35:31.540 --> 35:37.820
hier ist Advanced. Und das hier ist keine Ahnung. Expert oder so was. Nennen wir es mal so.

35:37.820 --> 35:47.340
Was sagen wir. Nennen wir es mal Einsteiger. Okay. Nennen wir es mal Noob Starter. Einsteiger

35:47.420 --> 35:54.540
Mittel Advanced Expert. So. Also ich würde sagen. Das ist nicht Expert. Das ist Five Head. Genau.

35:54.540 --> 36:02.700
So. Also ich würde sagen. Das Backend ist Mittel. Also das das das die Sharp Backend ist Mittel.

36:02.700 --> 36:07.820
Das ist nicht wirklich Advanced. Und auch nicht weit entfernt von Expert zu sein. Und das Frontend

36:07.820 --> 36:17.140
würde ich sagen ist so 2,5 vielleicht. Das Frontend tendiert eher. Tendiert eher. Okay.

36:17.140 --> 36:23.740
Machen wir noch sechstens gleich. Five Head. Das ist quasi außer Kategorie. Also so würde ich das

36:23.740 --> 36:29.540
ungefähr einstellen. Nicht wirklich Einsteiger. Sag mal. Machen wir es anders. Machen wir es doch.

36:29.540 --> 36:33.220
Machen wir es so. Das Backend ist Advanced. Das Frontend. Das Frontend ist eher so Mittel. Okay.

36:33.220 --> 36:39.340
Nicht wirklich kompliziert. Also gut machbar. Auch für jemanden der neu ist und ein bisschen

36:39.340 --> 36:47.270
Zeit rein investiert. So. Chat würdet ihr mir. Würdet ihr mir da ungefähr so zustimmen. Gerade

36:47.270 --> 36:50.790
die die jetzt ein paar Streams dabei sind. Die vielleicht auch schon das Programmieren. Das

36:50.790 --> 36:56.830
Backend Programmieren mitgekriegt haben. Also ich würde sagen. So ungefähr. So. Kommt. Könnte

36:56.830 --> 37:05.990
das sein. Ich meine. Wie gesagt. Ich bin nicht der krasseste Frontend Checker. Frontend auch noch

37:05.990 --> 37:10.230
eins hoch. Ja. Okay. Dann machen wir das Backend aber noch wieder eins runter. Weil ich will.

37:10.230 --> 37:14.310
Er wollte einfach demonstrieren dass da schon ein bisschen Unterschied dazwischen ist. Ja so. Also

37:14.310 --> 37:18.550
es ist. Es ist durchaus machbar. Auch für jemand der neu ist. Wenn er ein bisschen Zeit rein

37:18.550 --> 37:22.830
investiert. Ich habe ja auch keine super mega Ahnung jetzt von Svelte und Frontend Sachen.

37:22.830 --> 37:30.650
Gerade gerade so Komponenten erstellen kann man noch viel viel viel viel besser machen. Oh was

37:30.650 --> 37:36.610
denn hier los. Mein mein Button ist nicht mehr richtig zentriert. Jetzt wieder. Jetzt wieder

37:36.610 --> 37:44.370
richtig. Ich exportiere das Show Passwort nicht. Das ist nur intern. Deswegen ist auch kein Export

37:44.370 --> 37:58.000
davor. So jetzt haben wir eine extra Komponente. Dann war die. Da war die. Da war die erste

37:58.000 --> 38:04.400
Einschätzung vielleicht doch besser. So. Das sieht doch jetzt eigentlich ganz gut aus. Ach so. Das

38:04.400 --> 38:16.360
Input. Das Input binden müssen wir noch machen. A bind value. Oh. Ah ne. Value. Was jetzt? What?

38:16.360 --> 38:38.390
Type attribute cannot be dynamic if input uses two way. Oh. Das ist doof. Muss ich da jetzt ein

38:38.390 --> 39:05.510
If drumherum machen? Muss ich das jetzt irgendwie copypasta machen? Warte mal. Muss ich das jetzt

39:05.510 --> 39:12.350
copypasta machen? Lässt sich das nicht irgendwie anderweitig lösen? So dann sagen wir nämlich hier

39:12.350 --> 39:27.750
If show Passwort. Dann ist das Type Text. Ansonsten ist das Type Passwort. Was denn jetzt? Label not

39:27.750 --> 39:38.790
open. Ja was machst du denn da auch? Okay jetzt funktioniert es wieder. Und das klappt auch. Ja

39:38.790 --> 39:51.340
okay. Meinetwegen. Soll mir recht sein. Ja gut. Meinetwegen. Passt. Alles gut. Dann können wir das

39:51.340 --> 39:58.820
so lassen. Ich würde sagen das reicht. Mehr müssen wir hier an der Stelle eigentlich gar nicht machen.

39:58.820 --> 40:05.340
Ich denke. Ich denke mal es passt alles. Wir können mal ausprobieren ob das Error Handling noch ordentlich

40:05.340 --> 40:10.100
funktioniert. Tun wir mal so als würde das Login nicht klappen. Wir machen übrigens. Ich habe heute

40:10.100 --> 40:16.580
morgen ein Video gesehen. Javascript Enums. Wir haben kein Type Script. Aber es gibt wohl. Es gibt wohl

40:16.580 --> 40:21.380
Trick 17 für Javascript. Das probieren wir gleich mal aus. So mal gucken ob das Error Handling noch

40:21.380 --> 40:26.820
funktioniert. Guckt mal. Habt ihr gesehen wie viel kürzer das ganze ist? Mein gesamter erster Step ist

40:26.820 --> 40:32.700
jetzt keine halbe Seite mehr lang. Sondern nur noch zwei Zeilen. Also viel viel besser. So machen wir hier

40:32.700 --> 40:46.850
Error. Ist Login gleich gleich Error. Okay gucken wir mal ob das noch funktioniert. Oh. Der Login Button

40:46.850 --> 40:56.820
funktioniert schon mal nett. Der Login Button funktioniert nicht. Weil. Ah. Weil ich den Value. Weil ich

40:56.820 --> 41:07.140
keine Values gebindet habe. Okay. Na gut. Bind Value User. Ups. Ne. Moment. Das ist ganz falsch wo ich hier bin.

41:07.140 --> 41:17.230
Bind Value User. Bind Value Password. Heißt das gar nicht Passwort? Habe ich hier gar nicht. Warum denn sowas?

41:20.120 --> 41:30.450
Okay. Mal gucken ob das mit dem Error. Mit der Error Anzeige. Ja. Das ist noch nicht so ganz. So mal gucken ob das

41:30.450 --> 41:42.230
mit der Error Anzeige richtig funktioniert. Der Button ist den Passwort Input. Doch. Der soll da sein. Wie machst

41:42.230 --> 41:51.550
du das Design? Farben, Fonts, Layouts. Das ist Skeleton UI. Für die Farben. Das ist das hier. Guck. Kannst

41:52.350 --> 42:01.380
hier verschiedene. Aber ich muss euch ehrlich sagen. Ich weiß nicht ob ich weiter Skeleton UI verwende. Es trifft

42:01.380 --> 42:09.460
nicht. Also ich finde die Funktion ganz nice. Zumindest einige die dabei sind. Aber ein Toast für einen Error. Das ist

42:09.460 --> 42:17.740
eine gute Idee. Das schreibe ich mal auf. Aber ich muss sagen. Ich feier die Optik nicht so ganz. Also wahrscheinlich

42:18.300 --> 42:23.620
werde ich Skeleton UI rausschmeißen. Nee. Carbon Components habe ich mir auch mal angeguckt. Das ist das Zeug von

42:23.620 --> 42:28.660
IBM. Das habe ich mir auch mal angeguckt. Das hat mir nicht so richtig gefallen. Was ich ja von der Idee hier ganz

42:28.660 --> 42:49.510
cool finde ist. Das ist jetzt aber ganz neu. Das sind ungestylte Svelte Komponenten. Ja. Mal gucken. Ich bleibe

42:49.510 --> 42:54.910
jetzt erst mal dabei. Sonst kriege ich nämlich gar nichts auf die Reihe. Also das Error Anzeigen funktioniert

42:54.910 --> 43:00.950
noch. Nice. So. Bind Error können wir hier unten auch machen. Weil es kann ja auch sein dass das Passwort falsch ist

43:00.950 --> 43:13.510
wenn das Login nicht funktioniert hat. So. Wunderbar. Sehr schön. So. Weiter geht's. Ja. Wir sollten vielleicht

43:13.510 --> 43:26.940
noch einstellen dass sich das Ganze resetet. Function. Habe ich das Input Event durchgereicht hier. In weiser

43:26.940 --> 43:48.740
Voraussicht. Bei dem einen habe ich es gemacht. Beim anderen nicht. On Input. Change. On Input. Wir resetten das Feld mal.

43:48.740 --> 44:11.980
Weil. On Input. So. Weil. Guckt mal. Wenn jetzt ein Error kommt. Und ich ändere hier was. Dann resetet es sich wieder.

44:11.980 --> 44:18.020
Soll es ja auch. Alles andere wäre ja blöd. Guck. Login hat nicht geklappt. Ich ändere es. Ich muss ja wieder versuchen

44:18.020 --> 44:31.380
mich einzuloggen. Ja. So ist es auf jeden Fall besser. Gut. So. Dann würde ich sagen. Passt das soweit. Ich denke das können wir

44:31.380 --> 44:45.400
erst mal so lassen. Dann geht es weiter zum nächsten Step. Hier gibt man sein Passwort ein. Und dann hat das Ganze

44:45.400 --> 44:53.360
funktioniert. Und dann geht es weiter zum nächsten Step. Der sieht noch ziemlich kaputt aus. Den werden wir jetzt auch

44:53.360 --> 45:01.060
mal ordentlich machen. Ich habe mir folgendes überlegt. Leute. Wir machen das. Wir machen das mal. Wir machen das wieder

45:01.060 --> 45:09.460
weg. Also gibt kein Range Slider mehr. Oder anderes. Anderen Blödsinn. Auch kein Pin. Machen das einfach weg. Brauche ich

45:09.460 --> 45:33.800
überhaupt noch eine Form. Oder geht das. Geht das. Ich brauche keine Form mehr. Ja. Geht auch voll klar. Ja. Doch. Ist doch

45:33.800 --> 45:45.040
oder zwei. Zwei oder vier. Vollkommen in Ordnung. So. Und das hier. Das schmeißt. Das schmeißen wir jetzt alles weg.

45:45.880 --> 45:53.440
So. Jetzt ist. Jetzt ist Fife Time angesagt. Leute. Was ich. Was ich gerne machen würde ist folgendes. Nachdem man sein User und

45:53.440 --> 45:59.480
Passwort eingegeben hat. Und dann zum nächsten Step kommt. Ich habe übrigens. Mir ist gerade noch was anderes eingefallen.

45:59.480 --> 46:13.940
Leute. Wir nennen das nicht Login. Sondern wir nennen das einfach Test. Weil das ist ja genau das was passiert. Weil das ist ja

46:13.940 --> 46:20.020
genau das was passiert. Ich teste das Login. Und wenn das funktioniert. Geht es zum nächsten Step. Und im nächsten Step brauche ich

46:20.060 --> 46:28.900
zwei Sachen. Ich mache das hier mal oben. Eins weiter. Das wir immer gleich die Anzeige haben. Zwei Sachen. Macht man nicht aus dem

46:28.900 --> 46:37.350
Login Zeug noch eine separate Komponente. Aus was denn. Du meinst hier unten die Buttons. Ja mal gucken. Man muss es ja nicht

46:37.350 --> 46:46.270
übertreiben. Wir brauchen eh noch ein paar extra Komponenten. Und zwar. Was ich gerne hätte ist. Also ich. Nur mal so exemplarisch.

46:46.270 --> 47:03.730
Ja. Ich hätte gerne hier einmal. Einen. Ja. Refresh. Intervall. Und einmal. Eine eine Pin Eingabe. Weil das sind noch die zwei

47:03.730 --> 47:11.370
Optionen die man braucht für das Auto. Und den Refresh Intervall würde ich gerne selbst was bauen. Und zwar was was ungefähr

47:11.370 --> 47:23.770
aussieht wie. Ja wie man das von anderen Webseiten kennt. Ich weiß nicht. Input Number. Plus Minus. Sowas was man auch im Smartphone

47:23.770 --> 47:34.300
gescheit bedienen kann. Weiß ich ob es ein schönes. Plus Minus Input Counter. Weiß ich ob das sowas in der Richtung. Ja sowas. Sowas in der

47:34.300 --> 47:40.980
Richtung. Halt. Was ein bisschen besser funktioniert. Sowas in der Richtung würde ich gerne bauen. Und was wo man natürlich auch so noch

47:40.980 --> 47:51.380
reintippen kann. Sowas in der Richtung würde ich gerne bauen. Und ich würde gern. Das was ich euch gerade schon gezeigt habe. Pin Input. Sowas hier

47:51.380 --> 48:07.820
bauen. Dass man seine Pin eingeben kann. Mit was wollen wir anfangen. Pin Input oder Refresh Counter Intervall. Könnt ihr euch aussuchen. Pin. Ich glaube Pin ist das

48:07.820 --> 48:30.340
schwierigere von beiden. Pin. Ok. Na gut wenn wir Pin anfangen. Ich glaube Pin ist. Pinput. Das ist ein guter Name. Pinput. Ne ne ne. Pin. Ne. Input. So müsste man das

48:30.340 --> 48:41.820
fast schon schreiben dann. Wir nennen es Pin Input. Da weiß man was man will. So. Da bin ich jetzt allerdings wirklich ein bisschen planlos wie man

48:41.820 --> 48:57.940
das gescheit macht. Pin. Ups. Pin. Input. Also. Sowas habe ich doch wirklich nie gebaut. Als erstes würde ich sagen. Braucht man für einen Pin Input einen Input. Und zwar nicht nur

48:57.940 --> 49:07.180
einen Input. Wir haben. Lasst uns mal kurz. Lasst uns mal kurz ein bisschen spicken. Wie haben die das denn gemacht. Ah die machen vier Inputfelder. Ok. Easy. Das mache ich auch.

49:08.180 --> 49:32.110
Vier Inputfelder. Easy. Easy. Easy. So. Also. Dann machen wir das doch mal. Also machen wir mal Diff. Die Musik ist zu laut oder? Ne passt eigentlich ganz gut. Halt typische Wupp Wupp Wupp Musik.

49:36.660 --> 50:20.340
Ey du. So wir brauchen wieder so eine Art Label. So viel weiß ich schon mal. Da haben wir wieder eins. Und dann das Pin. So Pin. Und darunter brauchen wir jetzt mehrere Inputfelder. Hat das jemand ein Mask? Ich dachte die Oma vom Zuckerberg hat es untersagt. Oder wie war das nochmal?

50:20.340 --> 50:59.340
So. Also wir brauchen einen Input. Input Typ Number gibt es. Ja. Das dumme ist der Standard Input sieht halt mega hässlich aus. Ne. Und ist Smartphone mäßig nicht gut zu bedienen. Wobei eigentlich schon. Aber das mit diesen Dingern da. Das ist. Ne. Ne. Ne. Ne.

50:59.340 --> 51:17.340
Also wir brauchen Input Type Number. Der kriegt als Class Input, dass er ordentlich gestylt aussieht. Der kriegt allerdings Rounded None. Weil wir wollen das. Oder Rounded. Rounded. Rounded. Ah. Irgendwie. Ne. Wir machen None. Weil da müssen links und rechts Knöpfe hin.

51:17.340 --> 51:56.130
So. Erste Problem bei dem Input ist. Wie krieg ich diese hä... Also wir brauchen den Input ja eh vier mal. So. Und. Und das machen wir flex. Ja. Ja. Ok. Leute. Guck mal. Wir haben schon mal vier Boxen für eine Pin Eingabe. Nur dass der Rest noch nicht funktioniert.

51:57.130 --> 52:23.780
Wie kriegt man dieses hässliche Zeug da Buttons weg? Hier. Input Number CSS Hide Arrows. Das klingt doch gut. Can I hide the HTML von 2010? Wird schlecht. Ok. Probieren wir mal an ob das funktioniert. Style. Nice. Weg sind sie.

52:23.780 --> 52:49.780
Da machen wir Appearance raus. Das ist mittlerweile bestimmt Standard. Das ist bestimmt auch Standard. Ok. Nice. So. Wir haben Input Felder. Also nur mal zur Erinnerung. Was da am Ende rauskommen soll. Ist sowas. Oh shit. Das handelt ja auch Back Events richtig. Oh. Das wird kompliziert. Also sowas will ich haben. Für Pin Input.

52:49.780 --> 53:14.710
Also ein bisschen sowas wie Paypal hat. Puh. Ok. Machen wir erstmal Flex Gap 2 oder 1 oder so. Ein bisschen Abstand dazwischen. Oh. Fuck. Alter. Wie machen wir das gescheit?

53:14.710 --> 53:39.220
Das sieht ja erstmal nicht so falsch aus. Aber von der Funktionalität her ist ja da gar nichts gegeben bisher. Ok. Also wir brauchen auf jeden Fall Javascript Zeug. Ok. Wir machen Export. Ne. Export. Alter. Export. Nehmen wir bloß so Autocomplete, damit ich tippen kann. Export. Let.

53:39.220 --> 54:05.590
Und das heißt jetzt irgendwie sowas wie Count oder sowas. Count. Standardmäßig 4. Oh. Jetzt brauchen wir nämlich eine Schleife, die diese Inputs erzeugt, weil ich keinen Bock habe, dass ich 4 mal einen Input editieren muss. Also. Snippet. Each. Achso.

54:05.590 --> 54:28.540
Wie macht man eine Vorschleife in Svelte? Svelte. Count. For. Loop. Ah. Das haben wir schon ein paar mal angucken müssen. Each. 3. Is. Each. Length. Length. 3. Ok. Das ist die ernsthafte Syntax, auf die wäre ich im Leben nicht gekommen.

54:35.340 --> 55:02.180
Ok. Immer noch das gleiche. Funktioniert. Nice. So. Wir können schon mal eins festlegen. Minimum ist 0 und Maximum ist 9, weil wir wollen ja nur ein Zeichen anzeigen. Achso. Ah. Mist. Das ist doch kacke. Der normale Input wird nicht beschränkt. Kann man das einstellen, dass man nicht mehr eintippen kann? Oder muss ich das jetzt mit Javascript machen?

55:02.180 --> 55:27.180
Also hier über das normale hoch und runter geht das maximal 0 und 9. Aber hier kann ich eintippen, was ich will. Und auch wenn ich Fokus raus mache. Ok. Das ist dumm. Kann man das irgendwie regexen oder sowas? Oder validaten? Ich glaube, das muss man mit Javascript machen. Kack Javascript. Javascript.

55:27.180 --> 56:14.830
Ok. Lasst mal. Lasst mal in uns gehen. Leute. Five Header Modus aktivieren. Die Kraft aller Prime Subs muss jetzt gebündelt werden. Das mir einfällt, wie man das machen könnte. Max Length? Gibt es sowas? Oh. Was ist denn das? Eins? Ne. Das seht ihr nicht. Was macht denn das? Nö. Ist dem vollkommen egal.

56:18.420 --> 57:01.340
Ich glaube, dass das nur geht, wenn es Text ist. Ja. Wobei. Leute. Vielleicht machen wir dann auch nicht Input. Aber Max Length 1 will ich gar nicht. Wobei. Doch. Will ich haben. Aber jetzt ist es nicht Number. Jetzt geht der Arrow hoch und runter nicht mehr.

57:01.340 --> 57:19.340
Lasst uns mal kurz abgucken. Geht hier Arrow hoch und runter? Ne. Hier geht auch nicht Arrow hoch und runter. Oh. Mein Chat ist übrigens kaputt. Nicht wundern, wenn ich gerade nicht reingucke. Mir ist gerade der Chat abgekackt. Gebetsbruder. Dankeschön für den Sub. Habe ich übersehen.

57:36.780 --> 58:00.940
Wir brauchen sowas wie On Input. Ich nenne es einfach auch Input, weil dann wird es ein bisschen kürzer und dann kriegen wir das Event. Input. Ist doch nicht kürzer. Dann kann ich es auch so nennen.

58:03.770 --> 58:38.790
Pattern. Kannst du die Zahlen auch mittig zentrieren? Ja. Pattern. Was ist das? Input Pattern. Try it yourself. Aber ich kann trotzdem was eingeben, auch was hier nicht drin ist. HTML. Form with an Input that can only contain 3 letters. Das funktioniert ja nicht.

58:38.790 --> 59:03.300
Ach, das wird nur beim Sub mit? Ja, okay. Dann ist es blödsinnig. Dann brauchen wir das nicht. Und das brauchen wir dann eigentlich auch nicht, wenn wir das auf Text lassen. Okay, ist aber schon mal gut, dass man nicht mehr entern kann.

59:03.300 --> 59:44.820
Okay, Fiver Time, Leute. On Input. Was kriege ich denn hier überhaupt für ein Event rein? Ein Input Event. Ja, wer hätte das gedacht? Leute, hat irgendjemand von euch planen, wie diese JS Docs Annotation geht? Wie ist da die richtige?

59:44.820 --> 01:00:09.020
Hier, das meine ich. Nix TypeScript. Damit ich ein bisschen Autocomplete habe. Das ist kein String, das ist ein Input Event. Okay, jetzt habe ich nämlich ordentliches Autocomplete dabei.

01:00:09.020 --> 01:00:50.310
Nee, da gibt es kein Autocomplete. Guck, wenn ich das wegmache, hast du kein Autocomplete, weil der weiß doch gar nicht, was das ist. Doch, doch, es gibt TypeScript. So, das ist ein Input Event. Input Event Data 1. Und was steht da sonst noch so drin? Genau, fehlen noch Prime Subs für TypeScript.

01:00:51.310 --> 01:01:16.310
Nicht genug IQ vorhanden. Target ist schon mal ganz interessant. Und Data, okay. Element ist E.Target. Dann, ähm, Data ist E.Target. Nee, äh, E. Was war das? Data?

01:01:20.350 --> 01:01:49.640
Und dann bräuchten wir noch den Value. Gibt es den Value irgendwie vom Element? Hat das einen Value? Ah ja, hier. Eins, guck, zwei, drei. Okay, okay, okay, ja. Ich bin gespannt, ob das funktioniert.

01:01:49.640 --> 01:02:20.360
So, also, lass mal überlegen. Also, was ich machen will ist, sobald hier was eingetippt wird, soll es weiterspringen zum nächsten. So, das müssten wir doch raus, das müssten wir doch hinkriegen mit sowas wie Element. Wie macht man eigentlich Inline Annotations?

01:02:20.360 --> 01:02:48.880
HTML Element. Oder macht man das oben drüber? Ich will ein bisschen Autocomplete. Und das ohne TypeScript. Ich muss jetzt gucken, ob das kein Buchstabe ist. Ja, das muss ich tatsächlich auch gucken. Du hast vollkommen recht, ja.

01:02:48.880 --> 01:03:24.290
Geht das auch so? Nee, das geht nicht. Das geht anscheinend wirklich nur. Aber es geht doch bestimmt One Line, ha? Muss ich das jetzt ernsthaft da oben drüber machen? Dass ich sagen kann, dass da ist ein HTML Element? Nee. Boah, keine Ahnung.

01:03:26.790 --> 01:03:54.980
Oh je, jetzt hab ich, ich hab's, ich hab's, ach nee, da unten ist das Problem. Hab ich jetzt, hab ich jetzt? Ach ja. Scheiß drauf. Lass es weg, lass es weg. Also, ähm, ich muss jetzt gucken, sowas wie Element. So, ähm, HTML Element Siblings.

01:03:54.980 --> 01:04:20.920
Also ein, das nächste Element auf gleicher logischer Höhe. Hier. Next Sibling. Funzt das so? Okay, funzt. Und jetzt? Fokus. Ha! Easy!

01:04:34.580 --> 01:04:59.210
Okay, das ist aber, glaube ich, bei weitem noch nicht alles. Ich glaube, ganz, ganz so einfach ist es nicht. Was ist, wenn du hinten anfängst, dann hast du Pech? Wenn du, wenn du hinten anfängst, GachiBuzzStyle, dann geht's halt, nee, das kann ja schlecht von, von nach vorne gehen dann. Guck mal, wie ist das, wie ist das, wenn man hier hinten anfängt? Dann hat man auch Pech. Ja.

01:05:02.030 --> 01:05:22.390
Okay, das, das find ich schon mal cool, das hat was. So, also wir müssen natürlich noch, äh, einmal hier ein Fragezeichen hinmachen, dass es keinen Error mehr wirft. 1, 2, 3, 4. Nice. Das ist gut, das ist gut. So, und jetzt müssen wir den... Ah! Oh! Wenn ich hier was lösche, geht's auch eins weiter.

01:05:22.390 --> 01:05:44.340
Okay, ich muss auf jeden Fall gucken. Ich muss auf jeden Fall checken, ob das kein Backspace oder so, ne, wobei ist hier vielleicht einfach kein Data drin, kann das sein? Moment hier, Backspace, dann ist Data null. Okay, dann machen wir das doch ganz einfach.

01:05:44.340 --> 01:06:26.410
If, äh, if not Data, dann Return. Bam. So. Nice. Okay, das funktioniert. Ja, und wenn man löscht, muss es eins nach vorne. Jetzt wird's, jetzt wird's kompliziert. Wenn man löscht, muss es eins nach vorne. Es muss aber auch eins nach vorne, wenn man in einem leeren Feld tippt und ich glaube, dann gibt es kein Input-Event.

01:06:27.410 --> 01:06:41.410
Guckt mal, wenn ich hier in einem leeren Feld nach links tippe, sollte es auch nach links springen, aber es gibt, ja, das dachte ich mir, es gibt kein Input-Event, weil ja nichts eingegeben wurde.

01:06:41.410 --> 01:07:39.260
Das heißt, ich kann das hier drinnen nicht machen, sondern ich muss noch On-Key-Down oder sowas machen. So, was gibt's hier für ein Event? Keyboard-Event, okay, da weiß ich auch, wie das heißt. Keyboard-Event.

01:07:39.260 --> 01:08:05.720
So, und da muss ich jetzt gucken. Oh, jetzt wird's, jetzt wird's eklig. So, Backspace muss ich, muss ich checken. Also, if, äh, key, gleich, gleich, Backspace. So, und wenn das Backspace ist, dann muss ich das Umgedrehte hiervon machen.

01:08:05.720 --> 01:08:40.340
Moment, das Umgedrehte davon. Ich rate jetzt einfach mal, es heißt Element Prif, Prif, Prif-Sibling-Fokus. Ne, shit, Moment. Ach so, hab ich gar nicht zugewiesen. Ne, äh, wie heißt denn das?

01:08:40.340 --> 01:09:20.830
Ja, genau. Ausgeschrieben. Next. Previous. Mein Gott, ey, das, ja, da hätte man drauf kommen können. Easy, guck mal hier. Äh, ah, ja, weil es das immer macht.

01:09:20.830 --> 01:09:52.260
Moment, Moment, ich muss noch gucken, ich muss noch gucken, ob das auch wirklich leer ist. Also, machen wir mal sowas hier. Value. Machen wir nochmal sowas hier, wenn es, nur wenn Value leer ist, machen wir das. Nice.

01:09:53.260 --> 01:10:25.580
Ha, guck mal da. Easy. Sag ich doch. High-Performer-Mindset-Fivehead. Und im ersten Fall Backspace, dann bleibt er da, ja, ist okay. Ja, die Zahl können wir noch zentrieren, das sollten wir wirklich machen. Ähm, nur wie? Kann man da einfach sagen Text-Center?

01:10:26.580 --> 01:10:54.380
Oh ja, easy, nice. Ja, okay, null, null ist null, hier, null funktioniert genauso. Was hier gebaut wird, ein, ein, eine Input, ein Input-Feld gerade. Ich mein, allzu schön sieht es zwar nett aus, aber schon mal ganz okay.

01:10:54.380 --> 01:11:26.220
Hast du nicht Mobile-Probleme, weil er nicht nur die Zahlen anzeigt? Ach, du meinst, weil das nicht auf Nummer steht, gibt es auf Mobile Probleme? Ja, das kann sein. Okay, Mobile-Input-Only-Numbers.

01:11:26.220 --> 01:11:49.580
Nee, nee, nee, nee, Input-Number will ich nicht. Weil, guck mal, Input-Number, hast du das Problem, du kannst beliebig viele eingeben. Was sagt, wenn es Input-Text ist, dann kannst du es limitieren, dass du nur eins maximal an eine Stelle eingeben kannst. Oder gibt es das noch?

01:11:49.580 --> 01:12:49.620
Max Length ignored for Input-Number. Ja, nee, das bringt nichts. Das bringt nichts. Guck, wir haben hier Min, Max, du kannst immer mehr eingeben. Das Einzige, das sinnvoll zu beschränken, ist Text. Aber gibt es vielleicht die Möglichkeit, wie haben die das hier denn gemacht? Lass uns doch mal abgucken. Wir können doch einfach abgucken, easy.

01:12:49.620 --> 01:13:39.440
Type. Type Telefonnummer? Okay, das ist jetzt aber richtig, richtig Trick 17. Ah, damit funzt, nice. Alter, das ist ja massive big brain. Telefonnummer. Okay. Ja, dann funzt das doch schon mal richtig gut hier, guckt euch das mal an.

01:13:39.440 --> 01:14:30.700
Äh, komm, macht euch mal keine Gedanken. Das ist HTML und Javascript und so, da muss ich mir keine großen Gedanken machen. Funktioniert das mit Sternchen und, oh shit. Fuck! Okay, das muss ich, das muss ich jetzt im Javascript-Input irgendwie abfangen. Input, Type, was? Was, Input-Mode? Moment, was ist Input-Mode? Moment, Type? Hä?

01:14:30.700 --> 01:15:31.200
Also, die haben Input-Mode, Numeric, Type Telefon. Nein, Number geht nicht. Ähm, was macht denn, was macht das überhaupt? Is Attribute that hints at the type of data that might be entered by the user. Ah, aber Moment, das weiß, das check ich nicht. Ich kann sagen, Typ. Ach, Moment.

01:15:31.200 --> 01:16:29.780
Warte mal, Leute, ich bin, ich bin verwirrt. Moment, Moment. Warum, du kannst mit dem Pattern, ja, aber das wird nur gecheckt bei Submit. Type, Type Tel Input. Aber warum kann ich A, B, C und sowas eingeben bei der Telefonnummer? Type Text Input? Ne, ne, ne. Numeric und Input, ne, ich glaube.

01:16:29.780 --> 01:16:56.180
Okay, Leute, wir müssen das, wir müssen das einfach filtern. Ich schreibe da nicht Nummer rein, ich mach das, ich schreibe das so, das ist okay. So, gute, beste, beste Kombi überhaupt. So, ich muss das, ich muss das im Input, ich muss das im Input rausfiltern. So, ganz, ganz einfach. Oder, was heißt ganz einfach? Also, ich, ich muss jetzt am besten direkt rausfiltern.

01:16:57.180 --> 01:17:01.180
Hier schon, hier schon am besten direkt rausfiltern.

01:17:02.180 --> 01:17:19.540
If, äh, E.key, weil manche Telefonnummer mit Buchstaben abgekürzt werden. Alter, die Amis, man.

01:17:23.070 --> 01:17:27.070
Regex, äh, ist das Match? Ja, Match.

01:17:29.070 --> 01:17:46.540
Oh Gott, Javascript, so ging das, gell? So, also, ich will jetzt checken, ob es nur Digits sind. Also, ein Digit, sonst nix. Startet und direkt Ende?

01:17:56.460 --> 01:18:07.460
Ne, Moment, ganz einfach. Ne, Moment, wenn es, wenn es irgendwas anderes als Digits sind, dann will ich prevent default, dann soll überhaupt nix passieren. So, nice, Funst.

01:18:08.460 --> 01:18:33.080
Ach, shit, jetzt geht ja Backspace nicht mehr. Probier mal Pin Input, gibt es sowas? Pin? Ne. Pin? Ne, gibt es beides nicht.

01:18:42.370 --> 01:18:57.320
Macht das doch im Input und setzt das Inputfeld wieder leer? Das könnten wir machen, ja.

01:18:57.320 --> 01:19:25.490
Ne, Moment, ich will das ja nicht leersetzen, ich will das den bestehenden, ich will, ne, ne, ne, das geht nicht. Ich will, dass das bestehende drin stehen bleibt, wenn ich da jetzt was anderes, wobei ich kann ja eh nicht mehr als eins eintippen.

01:19:26.490 --> 01:19:41.560
Okay, ne, ne, Leute, ich seh da auch grad noch ein anderes Problem. Wie ist denn das hier, wie ist denn das hier mit dem Input?

01:19:42.560 --> 01:19:48.560
Wenn ich hier jetzt reinklicke, ah, guck mal, man kann das überschreiben. Ich kann aktuell nix überschreiben.

01:19:49.560 --> 01:20:09.000
Da müssen wir auch noch dafür sorgen, dass man das, dass man das irgendwie, ich wüsste jetzt aber nicht, wie man das, wie man das gescheit machen soll.

01:20:10.000 --> 01:20:20.570
Moment, doch, ich weiß, wie man das machen soll. Wir setzen, Moment, wir setzen das Value auf Data.

01:20:21.570 --> 01:20:32.700
So. Ne. Ach, jetzt kann ich nicht mehr eintippen, weil Max Length 1 ist.

01:20:33.700 --> 01:20:38.700
Ja, ne, das ist doof, siehste? Dann kann ich das doch so gar nicht benutzen.

01:20:38.700 --> 01:20:52.010
Aber so funzt, ah, das ist gut, das ist gut so. Okay, nice. Und alles andere lässt sich halt einfach nicht eintippen.

01:20:53.010 --> 01:21:02.510
Ja, ist doch okay. Ah, nice, guck mal hier. Gut, gut. Ja, das, das gefällt mir so.

01:21:03.510 --> 01:21:16.910
So, okay, das Backspace, Backspace drücken funktioniert jetzt nicht. Kann ich das nicht einfach da vormachen und dann sagen Return?

01:21:16.910 --> 01:21:41.080
Ja, easy. Ja, Leute, also, ich würde sagen, das ist es, oder? Viel mehr brauchen wir noch gar nicht.

01:21:42.080 --> 01:21:51.080
Oh, Chat, wie sieht's mit Copy und Paste aus? Jetzt wird's advanced, guck mal. Ich copy-paste jetzt 5, 1, 7, 3. Meint ihr, das geht? Ne.

01:21:51.080 --> 01:22:17.390
Natürlich nicht. Enter? Ne, Enter, Enter waren wir nicht. Arrow Keys, Arrow Keys könnten wir noch machen. Wie sieht es aus mit Arrow Keys und Env, das müssen wir noch.

01:22:18.390 --> 01:22:24.390
Okay, Copy-Paste geht nicht. Warum geht Copy-Paste nicht? Weil das hier nicht drauf matcht.

01:22:24.390 --> 01:22:46.120
So, dann würde ich sagen, wir machen einfach gar nichts. If, Modifier oder sowas, was? Get Modifier State. Da brauch ich die Referenz für. Get Modifier State.

01:22:47.120 --> 01:23:10.020
Security Reasons, kein Kopf, sehr gut. Ich sehe, Chat, ihr habt von den Besten gelernt. Get Modifier State. Das ist für alle Mac-User, oder?

01:23:10.020 --> 01:23:28.020
Meta-Key not supported. Komm, gab es da nicht sowas wie Alt-Key, genau. Alt-Key oder Control-Key? Dann machen wir einfach auch nichts, fertig.

01:23:28.020 --> 01:23:45.740
So, bam, ah. Oh, shit. Jetzt geht Copy-Paste, aber Copy-Paste nicht richtig. Oh, shit. Mein Gott, warum muss das immer so kompliziert sein?

01:23:49.140 --> 01:24:03.990
Okay, Copy-Paste support. Wie bekomme ich mit, ob es ein Copy-Paste-Event ist? Log, Copy-Paste, Keyboard-Event, V, jawoll.

01:24:04.990 --> 01:24:21.060
Ne, da kriege ich aber nicht mit, ob es ein Copy-Paste-Event ist. Kriege ich das hier drin mit, ob es ein Copy-Paste-Event ist?

01:24:25.740 --> 01:24:59.580
Insert from Paste, aber da kriege ich die Daten nicht, oder? Seht ihr irgendwo jetzt 5, 1, 7, 3? Gibt es ein extra Paste-Event oder sowas?

01:25:00.580 --> 01:25:19.280
Ah, ja. Na dann, let's go. Paste-Event. On-Paste-Function. On-Paste. Dann loggen wir mal, was hier reinkommt jetzt.

01:25:20.280 --> 01:25:42.010
Also ein Clipboard-Event ist das jetzt. So, so. Es ist ein Clipboard-Event. Was hat man denn auf Clipboard-Events so? Sowas wie Data vielleicht? Ah, Clipboard-Data. Okay.

01:25:42.010 --> 01:26:39.250
Clipboard-Data. What? Was soll ich denn damit jetzt anfangen? Clipboard-Data. Files, Items? Ihr seht es nicht? Warum seht ihr es nicht? Ach, weil der Chat hier unten drüber ist. Ach so.

01:26:39.250 --> 01:27:05.300
Chat, wir machen euch mal woanders hin, oder? Chat, ich mache euch mal hier oben hin. Ich glaube, heute seid ihr hier oben besser aufgehoben. Und Chico muss auch mal heute weg. Hier oben passiert ja eigentlich nichts. Da seht ihr meinen Browser-Header. Der ist uninteressant.

01:27:05.300 --> 01:27:42.690
Okay. Clipboard-Data-Javascript. Ich brauche mal ein Guide, wie das funktioniert. Data-Transfer-Object. Cut, Paste. To obtain the data to be pasted from the paste, typically with a Get-Data-Format-Call. Das mag ich an den Mozilla-Docs. Die haben immer schöne Beispiele.

01:27:49.030 --> 01:28:29.630
Da steht jetzt aber nichts von Clipboard. Was ist es? Clipboard-Data-Get-Data? Okay. Wie auch immer man da jetzt drauf kommt, aber ich glaube euch das. Tatsächlich ist es. Nice. Wie kommt man denn auf sowas? Das muss man wahrscheinlich einfach wissen, weil Javascript-Zeug einfach pfeift. J-Lo auch am Start.

01:28:30.630 --> 01:28:50.910
So. So, jetzt will ich copy-pasten. Kann man so- Nein, wir gucken jetzt nicht ab. Wir gucken nicht ab. Wir machen das jetzt einfach so. Okay, ignorieren wir mal den Fakt, dass Leute auch was pasten können, was nicht Zahlen sind oder was, was länger ist.

01:28:50.910 --> 01:29:18.560
Ich hab ne Idee. Leute, ich hab ne Idee. Und zwar, wir machen jetzt folgendes. Wir sagen, Prevent-Default, da passiert schon mal nichts. Ja, Regex können wir da machen. So, jetzt kann ich schon mal nichts pasten. Aber, jetzt machen wir ne Schleife, jetzt machen wir ne Schleife über jeden Charakter in Data.

01:29:18.560 --> 01:29:45.940
So. Kunst? Okay. So, und jetzt sagen wir, wir brauchen noch das Element von E-Target. Morgen Arbeit. Ja, leider. Keck-Business. Wobei, ich würde eher sagen, Keck-Browse.

01:29:45.940 --> 01:30:18.850
So. Okay. Also, jeder Charakter in dem String. So, und jetzt müssen wir erstmal den Charakter inserten in den ersten. Okay, lasst mal kurz checken. Okay, das funst schon mal. Äh, nee, das ist der letzte. Achso, weil er überschreibt ja immer. Ich muss es ja weitermachen. Okay. Okay, okay.

01:30:18.850 --> 01:31:27.410
Das heißt, jetzt muss ich gucken. Next. Okay, das ging doch so. Next. Sibling. Fokus. Fast. Fast, Leute. Fast. Wir haben es fast geschafft. Es hätte fast funktioniert. Woran liegt das jetzt? Woran liegt denn das jetzt, dass der am... Oh, was ist das? Achso, weil das ein Fehler, weil das ein Error wirft.

01:31:27.410 --> 01:31:47.620
Achso, ich muss ja checken, ob ich am Ende bin. Also, if. Ja, prevent default geht nicht, weil ich vorher einen Error habe. Ich muss checken, ob es das überhaupt gibt. Wenn es keinen next Sibling gibt, dann break.

01:31:47.620 --> 01:32:18.300
Checken wir mal, ob es jetzt funst. Easy. First try. Easy. Leute, ich muss sagen, das war jetzt doch einfacher, als ich mir das vorgestellt habe. Ich meine, irgendwas wird garantiert noch nicht funktionieren. Was ist, wenn ich local host rein copy paste? Ja.

01:32:19.300 --> 01:32:53.040
Ja, okay. Ach ja, stimmt. Ich muss doch irgendwie regexen, ob das... Hier, da. Regex. Regex stellt es. Checken wir einfach hier. If data not match, aber diesmal beliebig viele Buchstaben. Und dann prevent default und Schluss ist.

01:32:58.490 --> 01:33:28.080
Ja, das geht nicht, aber das geht. Pog. Warum beliebig viele? Ne, weil es ja auch mehr als vier sein können. Guck mal, es können auch sechs sein oder so. Hier, du kannst hier angeben. Pin input count gleich fünf. Und dann hast du fünf inputs. Und guck mal, die funktionieren auch. Ist das nicht hyper agile?

01:33:28.080 --> 01:34:01.780
Ich würde sagen, jetzt wird es Zeit für Daily Scrum, Leute. Oder 69 inputs. Okay, das sind vielleicht ein bisschen viele. Leute, das funktioniert erstaunlich gut. Das hätte ich nicht gedacht, dass das so problemlos geht. Das ist ja wirklich easy.

01:34:01.780 --> 01:34:29.540
Sollte da nicht max length gleich count sein? Nö, warum? Mal angenommen, es pastet einer sowas hier rein. Dann macht er halt nur die ersten vier und dann ist egal. Ne, das finde ich gut. Das gefällt mir. Das ist Pog. Chat, Pog or not Pog?

01:34:30.540 --> 01:35:04.020
Jetzt erstmal Termin mit den Kollegen und allen zeigen. Ja, let's go. Ich zeige euch meinen Pin input Feld. Trinken mache ich. Gut, passt. Können wir so lassen. Nice.

01:35:04.020 --> 01:35:30.020
Superproduktive Day heute schon wieder gewesen. Das da unten brauchen wir jetzt ja nicht. Tests? Quatsch. Guck mal, das Schöne ist, das ist obviously komplett bugfrei und erklärt sich selbst. Da braucht man auch keine Tests. Einfach bloated Tests zu schreiben. Erkennt jeder sofort kinderleicht, dass es keinerlei Bugs aufweisen kann.

01:35:31.020 --> 01:36:20.370
True. Ja, ist einfach so. Wie holst du den Wert raus? Das ist in der Tat eine gute Frage, wie ich den Wert da raus bekomme. Zur Zeit bekomme ich den Wert gar nicht raus. Gut, ich meine, die einfachste Art und Weise ist, einfach die Inputs durchzugehen. Können wir zu null haben? Wie, zu null haben wir nicht mehr.

01:36:20.370 --> 01:36:46.940
Das ist aber nicht das Original zu null. Ich nehme nur das Original zu null. Vielleicht sollten wir noch ein paar Console Logs wieder rausschmeißen. Wir können noch gucken. Ach guck mal, eine Eins reinpasten funktioniert auch. Ich bin begeistert. Es funktioniert. Es funktioniert recht gut.

01:36:46.940 --> 01:37:09.500
Wir könnten noch Arrow Keys, weil aktuell kann man noch nicht. Kann man keine Arrow Keys machen und Entfernen drücken. Mal gucken, was ein Event für den Arrow Key ist. Probier mal, ob du E einfügen kannst. Nee, kann ich nicht. Und Plus und Minus auch nicht, was auch gut ist.

01:37:10.500 --> 01:37:57.470
Hier, Original zu null. Jawohl. Jetzt habe ich es wieder disabled, weil wenn es nicht Public Listed ist, kann es doch der andere einfach ändern und es wird irgendein random Emote angezeigt oder irgendwelche Dicks oder so. Das muss nicht sein.

01:38:01.960 --> 01:38:42.120
Nee, kann er nicht. Ändert sich dann die ID? Okay, bam. Probiert mal aus, zu null. Geht das jetzt? Ja, funktioniert.

01:38:52.750 --> 01:39:11.770
Also, wo sind wir stehen geblieben? Arrow Keys. Arrow Right, Arrow Left. Okay. Ist das Inception?

01:39:12.770 --> 01:39:45.740
Irgendwelche Inception, oder? Weiß nicht, ob man das hört. Das ist Inception, oder? Ja, da hat irgendeiner gerippt. Irgendeiner aus Inception geklaut. Für sein Wupp Wupp Wupp Mix.

01:39:45.740 --> 01:40:03.120
Arrow, Arrow Left. So, wenn es Arrow Left ist, dann will ich den Previous Sibling fokussen. Ja, Funs. Nice, nice, nice.

01:40:04.120 --> 01:40:40.160
If Arrow Right, dann den Nächsten. Easy. Hä? Hör gut. Sollten wir jetzt noch Return? Ich bin mir nicht sicher, ob wir noch, wir sollten wahrscheinlich Return. Okay, nice.

01:40:47.400 --> 01:41:33.940
Oh, jetzt ist es broken. Warum ist es jetzt broken? Hä? Wait a minute, wenn ich so mache. Leute, wenn ich mit den Arrow Keys navigiere, dann ist es broken. Warum? Blöde Frage, aber kannst du quick erklären, wie du deine Codeänderungen direkt im Browser wiedergibst?

01:41:33.940 --> 01:41:46.940
Da muss ich gar nichts für machen. Das handelt, oh, was ist unten drunter? Veed ist unten drunter. Hot Module Replacement. Das Einzige, was ich machen muss, ist npm run dev zu machen.

01:41:46.940 --> 01:42:16.920
Und der, also du, ja, wie soll ich das erklären? Du brauchst halt irgendein Veed Projekt. Das mit den Arrow Keys ist broken, Leute. Das funst nicht. Und ich weiß nicht, warum es nicht funst. Sollte ich vielleicht doch nicht Return? Ich habe keine Ahnung, warum es nicht funktioniert.

01:42:16.920 --> 01:42:46.340
Ah ja, jetzt funst du, oder wie? Okay, ich habe keinen Plan, warum, aber okay. Ach, wegen Prevent Default. Muss es Prevent Default machen an der Stelle? Wahrscheinlich muss es Prevent Default machen. Okay, kein Schimmer.

01:42:46.340 --> 01:43:34.950
So, und jetzt gibt es noch Entfernen. Den sollten wir vielleicht auch noch supporten. Delete Key. Delete. Was machen wir bei Delete? Bei Delete returnen wir einfach, oder? Ach, Moment. Moment, Leute. Shit. Jetzt, wo ich die Arrow Keys über...

01:43:37.580 --> 01:44:03.230
Oh, das ist ja... Nee, das funktioniert mit den Arrow Keys nicht. Jetzt weiß ich auch, warum die das mit den Arrow Keys hier nicht gemacht haben. Weil du da nicht mehr innerhalb vom Input navigieren kannst und dementsprechend nicht mehr entscheiden kannst, ob du links oder rechts von der Zahl bist. Kannst du eigentlich mit der Maus dein Windows Tiling ändern? Ja, kann ich.

01:44:03.230 --> 01:44:33.750
Also, du meinst, dass die... Du meinst, ob ich irgendwie hier umschieben kann? Ja, das geht auch, aber das benutze ich so gut wie nie. Du kannst hier irgendwie sowas, sowas machen, aber ganz ehrlich? Keine Ahnung, wer das benutzt. Ich benutze das nie. Das Einzige, wofür ich die Maus benutze, ist hier so zum Schieben. Okay, das mit den Arrow Keys wird nicht funzen. Das kann ich mir gleich sparen. Das wird zu kompliziert.

01:44:33.750 --> 01:45:21.250
Oder man muss halt hinklicken. Okay, das würde halt funktionieren, ne? Ups. Ey, scheiß auf Arrow Keys. Null. Ich brauch... Wobei, ich brauch die Arrow Keys doch. Die Arrow Keys machen einfach auch nix. Das ist... So langsam wird's hässlich. Ja, nice. Funzt. Okay, gut. Funktioniert. Jetzt kann man hier reinklicken und irgendwas löschen. Ja, auch mit entfernen, so. Wenn man da scharf drauf ist.

01:45:22.250 --> 01:45:58.900
So, das reicht. Gut so. Das können wir jetzt aber noch zusammenfassen. Können wir da nicht besser einen Case draus machen? Switch. Switch Case. Irgendwie sowas. E Punkt Key. Wenn Value, dann Arrow Left oder Arrow Right. Kann Java Script sowas? Oder, oder... Delete. Return. So. Gucken, ob das noch funktioniert.

01:45:58.900 --> 01:46:40.860
Ne. Ne. Das funktioniert so nicht. Es gibt zwar keine Fehler, aber das ist syntaktisch nicht erlaubt. Switch. Case. JS. Expression. Okay, man darf da wirklich nur einzelne Sachen reinschreiben. Ja, gut. Das Default Break macht's kaputt? Ne. Ne, das funktioniert nicht.

01:46:40.860 --> 01:47:19.900
Das geht nicht. Condition. Das geht nicht. Danke für den Sub. McFly und Holy Luck Gamers. Pogu. Using Conditions in... Ne, das geht nicht. Doch. Ah. Man muss... Moment. Ja, dann ist doch, dann ist doch das Switch auch unsinnig. Ich mein, wenn ich das so schreiben muss, wozu brauch ich dann ein Switch? Ne, geht auch nicht. Keine Ahnung. Darkseid. Danke für den Sub.

01:47:20.900 --> 01:47:58.640
Das Off-Topic. Was hältst du von Online-Classes a la Udemy? Ah, hab ich auch ein paar Kurse schon gemacht. Letzten Jahre über. Gibt's gute Sachen. Ja. Ah, das ist, das ist ne gute Idee. Das ist, das ist ne gute Idee. Du meinst sowas hier. Ja. Includes ist es, glaub ich. Includes. Ja, das ist ne gute Idee.

01:47:58.640 --> 01:48:58.810
Da können wir uns... Komm mal, scheiß drauf. Dann sparen wir uns das... Sparen wir uns das If. Sparen wir uns das K und If draus. So. Oh. Return. Bam. Ja. Funzt. Ok. Gut. Und jetzt können wir theoretisch... Theoretisch können wir jetzt noch... Jetzt haben wir alles... Jetzt haben wir alles in einem. So. Perfekt. Bestes Laserlichtes If aller Zeiten. Ja. Das reicht jetzt. Kein Bock mehr hier weiter dran zu bauen. Funzt. Alles gut.

01:48:59.810 --> 01:49:58.540
Anonymousgifter. Der ist Pog, der Anonymousgifter. Xeto kriegt ein Gift vom Anonymousgifter. Dankeschön, Anonymousgifter. Er will nicht, nicht erkannt werden. Top Secret. Ja gut. Dann, dann können wir das doch so lassen, oder? Haben wir jetzt hier ne schicke, haben wir ne schicke Component am Start. Kann man sich nicht beschweren. Find ich, find ich nice. Und das CSS brauchen wir auch nicht mehr. Was? Nice. Gut so. Gut so.

01:49:59.540 --> 01:50:27.990
Gut. Dann hätten wir diese Komponente am Start. Guckt mal Leute. Es wird langsam doch übersichtlicher, ne? Wir haben jetzt schon hier. Zack. Na gut. Ich geh jetzt direkt auf Step 2. Deswegen bringt das nix. Löschen wir mal die ganzen Sachen, die schon drinnen stehen. Mary97. Bam. Weg mit dir.

01:50:28.990 --> 01:50:54.520
So. Und jetzt brauchen wir noch eine, eine weitere Component. Und zwar brauchen wir jetzt sowas wie einen Counter. Was ist das für ne UI Library? Das ist Skeleton. Wobei, das hier ist selbst gemacht. Also da kann Skeleton nix für. Machen wir doch mal ein, sowas wie ein Counter Input nochmal. Ups. Punkt, Punkt Sveld.

01:51:00.740 --> 01:51:24.380
Counter Input. So. Was ich jetzt bauen will ist sowas hier. Weiß gar nicht, ob die hier nen Beispiel haben. Number Input. Ne. Ich, ich, ich will, ich will was anderes haben. Ich will sowas haben mit Plus und Minus.

01:51:24.380 --> 01:51:56.840
Das können wir auch noch machen. Ich glaub, das ist deutlich lesbarer dann, wenn ich den, das kommt weg, wenn ich den Login State, guck mal, wenn ich den, wenn ich den Login State, das haben wir schon, dass du das Passwort nicht siehst. Guck, guck, das haben wir schon. Zeig ich dir hier.

01:51:56.840 --> 01:52:33.070
Aber auch gebaut hier. Blub, blub, blub, blub, blub. Und dann kannst du jetzt hier auf das Auge klicken, dass es angezeigt wird. So. Direction. Ne, wir wollen Login Status oder sowas haben. Ich kann mir immer ums Verrecken nicht merken, was der Unterschied zwischen State und Status ist. Es gibt da so ein paar Merksätze für, aber ich komm trotzdem immer nicht drauf klar.

01:52:35.070 --> 01:52:58.100
Ist da einer von euch High IQ für? Letztendlich ist aber auch egal, wie es heißt. Wir haben, wir haben None, wir haben OK, wir haben Error und wir haben Wait. Nehmen wir das jetzt einfach hier. Irgendwie so.

01:53:07.320 --> 01:53:37.490
Und jetzt können wir nämlich hier das Ding setzen auf Login gleich. Der Anonymous Gift, aber das sieht so. Da kann man nämlich das so setzen, was deutlich hübscher ist. Oder hier anstatt auf OK kann man das hier auf OK setzen. Finde ich, finde ich irgendwie besser.

01:53:38.490 --> 01:54:04.980
Besser lesbar dann. Und auch hier das das überprüfen und so könnte man, könnte man auch schöner machen. Ja, kann man beispielsweise sagen hier Login Status. Error, Error, Error.

01:54:05.980 --> 01:54:26.840
Also sonst noch irgendwo hier. Genau guck, hier könnte man sagen Login gleich Logins Wait. Das oder hier Hack Wait hätte ich es eigentlich nennen sollen. Ja, wäre ich aber auch nicht so richtig schlau draus.

01:54:26.840 --> 01:54:59.380
So was hier BBB Bootstrap. Was ist das hier für eine Scam Site? Wo bin ich da gelandet? Machen wir lieber erstmal nur hier im Browser auf auf Linux. Wo kommt man denn hier raus, wenn man auf BBB Bootstrap geht?

01:55:00.380 --> 01:55:17.380
Ja, kommen wir accepten. Code Snippets von Frontend Designers. Okay, das scheint doch eine legit Seite zu sein und kein. Und doch kein Fake. BBB Bootstrap. Oh Gott, Twitter fuckt mich dann ab.

01:55:20.900 --> 01:55:39.600
Masked Input. So was hier oder was meinst du? Ja, haben wir doch im Prinzip sowas ähnliches. Nur, nur dass es bei uns halt angezeigt wird, dass dann halt nix drin steht. Doch.

01:55:50.040 --> 01:56:06.040
Wieso? Wir haben doch hier schon sowas. Doch, doch gut. Finde, finde meins viel, viel stylischer. Wir können vielleicht noch gucken. Nur eine Sache, was man bei dem Pin Input ändern könnte, ist, dass man sagt, das ist rounded.

01:56:07.040 --> 01:56:22.040
Sieht vielleicht ein bisschen schöner aus, wenn es leicht abgerundet ist. Okay, Counter Input. Da wollten wir jetzt weitermachen. Oder wollte ich noch was auf Page machen? Ne, wollte ich nicht. Passt alles.

01:56:22.040 --> 01:56:50.660
Achso, nen Toast Error wollten wir noch einblenden. Ja. Okay, wie macht man, das ist mal ein kurzes Sidetrack. Wie macht man einen Toast? Simple. Ein Simple Toast. In your App Root. Basic Toast.

01:56:51.660 --> 01:57:34.080
Dann toasten wir mal. Probieren wir das mal aus. Layout. Einen Toast. Toast. So. Und dann machen wir das jetzt mal testweise hier auf der Page. Und wie öffnet man das jetzt? Ein Action Toast. Basic Toast. Okay, zeig her. Basic Toast. Toast Settings.

01:57:35.080 --> 01:58:03.690
Toast Store. Ich brauch einen Toast Store. Let's go. Toast. Toast Store. PPoFatTime. Achso, muss ich importieren. Toast Store. Da ist er. Da wird getoastet. Kann man nicht auch einstellen, dass der automatisch wieder weg geht?

01:58:03.690 --> 01:58:25.020
Also, ich mein, wenn es da drin steht, hier, keine Ahnung. User or Password. Was ist das? Schöne Fehlermeldung für Login failed. So, bam. Ich will, dass der automatisch von alleine wieder zugeht.

01:58:26.020 --> 01:59:03.620
Ach, Timing. Adjust Timeout. Okay, der geht nach zwei Sekunden wieder zu. Okay, Timeout. Ah ne, hier. Timeout. Eine Sekunde. Bam. Oder zwei Sekunden. Drei Sekunden. Ja, okay. Nicht schlecht. Hat was.

01:59:03.620 --> 01:59:57.300
Das, es sollte jetzt vielleicht noch nach Error aussehen, oder? Hide, dismiss. Ja, geht nach drei Minuten automatisch weg. Okay. Huch. Ich hab's an die falsche Stelle kopiert. Ah. Geht nach drei Sekunden automatisch wieder weg. Ja, ist nice. Wow. Übertreib halt. Ne, ne, es sind drei Sekunden. Ich hab, weiß nicht wie oft Minuten komme. Styling. Error. Ah.

02:00:00.500 --> 02:00:50.500
Warning. Error. Success. Ja, dann. Background. Warning. Gar net, gar net mal so übel. Oder? Gar net mal so schlecht. Man könnte, man könnte auch Error nehmen. Warte mal, vier Sekunden haben wir ein bisschen bessere Chancen das zu sehen. Gar nicht schlecht.

02:00:50.500 --> 02:01:29.480
So, und jetzt müssen wir jetzt triggern, wenn, hier, wenn Login auf Error wechselt. Äh, wie machen wir das jetzt am besten? Da bräuchten wir so einen automatischen Svelte Reactive Dings. Ja, ne. Äh, if Error gleichtreich. Ne, ne, nicht Error. Ne, was mach ich hier? Ne, Login.

02:01:30.480 --> 02:02:00.130
If Login gleich Login State Error. Dann will ich das machen. Okay. Check, dann checken wir das doch mal, ob das jetzt funktioniert. Wir sind im ersten Step und das hier gibt ein Error. Zack, zack, zack, zack, zack, zack. Hups, fast. Bla, bla, bla, bla, bla, bla. Test.

02:02:01.130 --> 02:02:24.950
Hey, ich muss sagen, so langsam werden wir hier zum richtigen Frontend Champ. Das gefällt mir richtig gut. Zack, bam und sogar die Inputs werden Highlighted. Und was sagt ihr Leute, das ist doch hier richtig Next Level Frontend Engineering.

02:02:24.950 --> 02:02:50.710
Naja gut, das sieht man jetzt hier nicht, aber, ja, schick, schick, schick. Das, das finde ich, finde ich Hog. Ne, ne, ne, ne, hauptberuflich würde ich das garantiert nicht machen wollen. Gut, aber eigentlich waren wir stehen geblieben bei einer Counter Component. Und zwar da.

02:02:51.710 --> 02:03:15.570
Waren wir stehen geblieben. Pausierungs Champ. Die dürfte, die dürfte ein bisschen einfacher werden, glaube ich. Counter. So, Script. Diff. So, beste.

02:03:16.570 --> 02:03:44.860
Okay, also eine Sache kann ich auf jeden Fall schon mal kopieren. Nämlich das Diff und hier oben das Label. Also Export Label gleich das da. Das Label kommt dann wieder hier hin. Gut, das hier kommt weg.

02:03:47.680 --> 02:04:03.060
Aber das kann ich wahrscheinlich übernehmen. Weil, ne, das brauche ich, ich brauche glaube ich gar kein, gar kein Flex Diff. Mal schauen. Aber soweit, soweit müsste das funktionieren.

02:04:03.060 --> 02:04:21.750
Müsste natürlich noch ein Label setzen, dass das Ganze klappen kann. Also Label. Refresh. Okay. Ja, dann müssen wir erstmal wieder auf Step 2 schalten. Refresh. Da ist noch nichts da.

02:04:21.750 --> 02:04:38.750
So, wie bauen wir jetzt gescheit einen Counter? Also, also ich will was haben. Also guck mal hier. Input, Number, Plus, Minus, Component. Ich will sowas hier haben. Sowas, sowas hier. Aber wir gucken nicht ab. Sowas in der Richtung will ich bauen.

02:04:38.750 --> 02:05:12.230
Okay. Also. Ich würde sagen, als erstes, als erstes brauchen wir einen Input. Ja, also ein Input vom Typ Telefon. Ne, diesmal wirklich vom Typ Number. Ich glaube da kommen wir jetzt nicht drum herum.

02:05:13.230 --> 02:05:34.800
So, dann machen wir hier sowas wie Export Let Min, Export Let Max. Haben wir hier auch wieder 99 oder so. Haben wir glaube ich beim anderen auch. Wobei, nö haben wir nicht, weil braucht der ja gar nicht.

02:05:34.800 --> 02:05:54.340
Braucht der ja gar nicht. So, Minest, Minest Value, Min, Max Value. Ach, da kann man es ja einfach so klammern. Ich finde das haben die ins Weltschick gemacht. Das erspart einem die ein oder andere Tipperei.

02:05:54.340 --> 02:06:32.370
So, dann haben wir noch Class, Input. Gut. Und jetzt machen wir mal Rounded weg. Rounded. Und jetzt müssen wir das irgendwie stylen. Habe ich nicht hier noch ein Flex drum? Habe ich jetzt auch mal. Ich brauche bestimmt mehr als ein Element.

02:06:32.370 --> 02:06:58.510
Okay. Wie, wie, wie ordnen wir das jetzt. Also wir brauchen ein Plus Button. So viel ist schon mal klar. Hier Icon Plus. So, okay. Naja, fast, fast richtig. Icon Minus. Reicht. Reicht. Perfekte Optik hier Leute.

02:06:58.510 --> 02:07:37.190
Hier Style hatten wir noch. Style, wo habe ich denn den Kram kopiert? Mit Firefox stand er doch drinnen. Genau hier. Style. Ja, dann geht hier das Overlay Zeug weg. Okay. So, jetzt muss das natürlich noch ordentlich aligned werden, weil sonst sieht das ziemlich kacke aus.

02:07:37.190 --> 02:07:58.660
Also, Items Center. Schon mal besser. Die Dinger werden gerappt in ein Button. Ach, mein Chat war weg. Hat mich schon gewundert, warum da eben nichts gekommen ist. Zwei, drei Minuten. Rechts das Plussinn. Ja, machen wir. Achso, habe ich falsch rum? Ja, tatsächlich. Cool.

02:07:58.660 --> 02:08:36.900
Habe heute meine Daten verloren. Windows oder BIOS hat meine NVMe nicht mal als Bootdrive erkannt. Hat versucht Daten auf HDD zu packen, aber NVMe war GPT geschützt. GPT geschützt? Was soll das sein? Du meinst, du hast irgendeinen, irgendeinen auf der SSD Hardware, die vom Hersteller eingebaut Verschlüsselung benutzt oder so. Und was ist GPT geschützt? Schutzpartition. Okay, ich weiß nicht, was das sein soll.

02:08:36.900 --> 02:09:15.050
Kann man seine Autos eigentlich Nicknames geben? Ja, kann man. Das musst du aber nicht in meinem Tool machen, sondern das musst du auf der Fiat-Webseite machen. Also, ich weiß nicht, was eine Schutzpartition sein soll. Entweder ist das Ding verschlüsselt oder nicht. Chat, Chat, ergibt die Beschreibung für euch irgendwie Sinn?

02:09:15.050 --> 02:09:51.580
Ich weiß, was GPT ist. Aber was hat das eine mit dem anderen zu tun? Was ist eine GPT-Schutzpartition? Hä? Die Partitionstabelle? Wie soll die Partitionstabelle? Das ist irgendein Windows-Shit, oder? Das ist irgendein Windows-Müll. Ich habe keine Ahnung. Das ist irgendein Windows-Krempel. Kein Schimmer.

02:09:51.580 --> 02:10:18.750
So, jetzt müssen wir das Ganze in Buttons wrappen. Ja, so. Button. Guck mal, jetzt kann man es so... Ne, man kann es nicht anklicken, weil BTN fehlt. Aha! Guck mal da, jetzt kann man es anklicken. Machen wir daraus mal BTN small. Schon besser.

02:10:19.750 --> 02:10:44.870
Und vielleicht machen wir hier mal bei der Size, machen wir das auch ein bisschen kleiner. 16. Ja, ja, ja, das sieht schon ganz gut aus. Wo, wo, wo, Playlist ist vorbei. Was ist das hier? Gibt es denn? Das darf nicht vorbei sein. Icon plus.

02:10:44.870 --> 02:11:16.910
Okay, Leute, ich habe schon hässlicheres gesehen. Jetzt werden wir einfach einen Rahmen drumherum machen. Variant filled. Wobei... Ach doch, sieht schon kacke aus. Gibt es sowas wie Outline vielleicht?

02:11:17.910 --> 02:11:46.960
Oh ja, das ist gut. So bleibt es jetzt. Das sieht ja sowohl in Dark-Mode als auch in Tageslicht-Mode ganz brauchbar aus. First try. Das ist gar nicht mal schlecht, das finde ich gut.

02:11:46.960 --> 02:12:23.540
So, jetzt müssen wir natürlich noch ein bisschen checken, ob das, was da eingegeben wird auch Sinn macht. Da muss man Prioritäten setzen. Und in der heutigen Zeit musst du halt erstmal, vor der Zeit hast du noch auf Facebook gepostet, Twitter gepostet, heute wird halt Instagram gepostet.

02:12:23.540 --> 02:12:46.900
Ist das halt, finde ich ehrlich gesagt auch gar nicht so schlimm. Sollen sie halt machen, wenn sie alle auf den krassen Influencer-Lifestyle stehen. Fragt doch mal, ob sie nicht vielleicht sogar ein Onlyfans-Account haben. Wahrscheinlich, wahrscheinlich haben sie sogar einen.

02:12:47.900 --> 02:13:17.540
So, wenn wir auf den Knopf drücken. Guck mal, vom Ansatz her, von der Idee her ist das doch eigentlich ganz einfach. On-Klick. Value. Ne, nicht Value. Doch Value. Ich hab Value bloß noch nicht angelegt. Export let Value gleich. Tja, wir fangen an mit Mindest-Value.

02:13:23.560 --> 02:13:56.470
Ah, warum steht da nichts drin? Ah, weil ich noch kein Value gebindet hab. Bind Value. Okay, nice, nice, okay, nein, okay. So, also jetzt gucken wir doch, von der Idee her ist das doch total einfach. Wir gucken beim Plus-Klicken, ob Value kleiner ist, als das Maximal-Value und wenn ja, dann wird Value um 1 erhöht. So, easy.

02:13:57.470 --> 02:14:31.980
Und bei Minus sagen wir On-Klick und dann da im Prinzip das entgegengesetzte. Wenn Value größer ist, als das Mindest-Value, dann sagen wir Minus, Minus. Das war's, easy. Fertig.

02:14:35.060 --> 02:14:53.080
Aber Moment, ich kann bestimmt, ja, okay, ich kann auch viel mehr, viel mehr eingeben. Wobei ja das, wobei das können wir ganz easy fixen. Das kriegen wir ganz easy gefixt, dass es immer nen Valid, die Zahlen noch centern.

02:14:53.080 --> 02:15:29.980
Wofür hast du dieses Feld eingebaut? Was ist das hier? Meinst du in die Anwendung oder warum dort ein Input-Feld ist? Eigentlich sollten da noch Minuten dahinter stehen. Fällt mir gerade ein.

02:15:29.980 --> 02:15:45.980
Achso, dass du eingeben kannst, wie viele Minuten Refresh-Intervall dabei ist, während, zwischen denen er nicht beim Hersteller nachfragt, ob es was Neues gibt, weil sonst kannst du in irgendein Rate-Limit geraten, wenn du zu oft abfragst.

02:15:45.980 --> 02:16:20.230
Also ich empfehle ja Default-Value. Ein Default-Value bräuchten wir übrigens auch noch. 15. Man darf es nicht Default nennen. Zentriert, ja wir können es, wir können es zentriert.

02:16:20.230 --> 02:16:50.530
Darf man Add-Default machen? Wie kann man ein Default-Value in Javascript Default JS Variable nennen? Nein, im Moment in Typescript, aber wie nennt man es dann, wenn Default geblockt ist? Keine Ahnung.

02:16:50.530 --> 02:17:12.310
Ich setze halt Def, was bleibt mir anders übrig? Init, Init, okay, Init ist auch okay. Ja, ja, okay, Init. Def keckel. Chat, ich sehe ihr Blick durch, so war das. Init, Init ist eine gute Idee, ja.

02:17:12.310 --> 02:17:38.940
Wir sollten noch dahinter schreiben, dass es Minuten sind. Leute, ich bin ja unfähig, was so CSS-Platzierung angeht. Ich hätte gerne hier dahinter noch die Units stehen, also sowas wie Export-Unit gleich Unit-Minuten. Kann man es überschreiben?

02:17:39.940 --> 02:18:06.380
Oder Minutes, Punkt. So, und jetzt bauen wir irgendwo da drüber nen Diff ein mit Class Absolut. Das geht bestimmt schöner, aber ich bin was so, was so, nicht Reflex, Alter, wie komme ich auf Reflex? Relative. Ich bin der übelste Noob, was so CSS-Platzierung angeht.

02:18:07.380 --> 02:18:32.270
So, jetzt kann man sagen hier, Top, ne Moment, das kann ja dynamisch breit sein. Wobei, ist doch egal. Top, dann Write, 0, 8, 12 und da steht jetzt Minuten drin. Ne, nicht Min, da steht Unit drin.

02:18:35.480 --> 02:18:56.480
Und Top, 2, ja, sowas in der Richtung hier, so ist das. Ey, ey, warum verschwindest du einfach? Anzeige, ich glaube, da müssen wir, ok, das klickt auf jeden Fall Select None und irgendwie Z-Index oder sowas muss höher sein.

02:18:57.480 --> 02:19:13.150
So, jetzt verschwindet das auch nicht mehr. Schreibt doch Minuten in das Label, auch ne gute Idee. Quasi hier, oder in Klammern vielleicht.

02:19:14.150 --> 02:19:35.570
Ok, Chat, wo findet ihr die Minutenanzeige besser? Im Label, hier hinten? Weil, so lang, so viele Minuten, es geht ja eh maximal 99, ja. Also, mehr geht eh nicht. Also, man hat eh immer massig Platz. Im Label?

02:19:35.570 --> 02:20:19.040
Oh, ok, warum nicht? Da können wir uns diesen Campbell hier auch sparen, wenn wir uns im Label machen. Zahl Center, ja, das Zahl Centern können wir noch machen. Text Center, Volt 5, ok.

02:20:20.040 --> 02:20:48.340
Ja, das Mausrad geht nicht da drinnen. Sollte das Mausrad gehen, oder ist das wieder so ne Chrome-Sache? Hier geht das Mausrad, es ist wieder so ne Chrome-Sache, dass das Mausrad nicht geht.

02:20:49.340 --> 02:21:14.900
Die Funktionen erklären. Das ist ein Web-Interface für ein Home Assistant Addon, was ich gebaut hab. Da kannst du Informationen aus deinem Elektroauto auslesen. Batterieladung, Reifendruck und sowas.

02:21:14.900 --> 02:21:37.880
Ich brauch ein Web-Interface zum Konfigurieren. Nenn's vielleicht Refresh Every, weißt du wie viele es ungefähr benutzen? Ähm, ne, ich mach kein User-Tracking. Also, es hat 63 Sterne auf GitHub, also wird's mal, denke ich, zumindest mal mindestens 63 Leute probiert haben.

02:21:37.880 --> 02:22:16.180
Hast du ein Elektroauto? Ja, ich hab nen 400-500E. Wie hab ich das eigentlich hier genannt? Refresh. Refresh-Intervall hab ich's hier genannt. Dann nenn ich's doch vielleicht wieder so. Dann erkennen die Leute was wieder. Refresh-Intervall in Minuten. Ja, jetzt versteht man's, glaub ich.

02:22:16.180 --> 02:22:56.020
So, wir müssen noch mal eine Sache noch machen, seh ich gerade. Und zwar, man kann da immer noch Mist eingeben. Und zwar brauchen wir sowas wie On-Focus oder sowas. Gibt's auch On-Focus-Out? Focus-Lost? On-Focus-Lost?

02:22:56.020 --> 02:23:22.090
Und da müssen wir checken, hier drinnen noch mal, if. Ob das Value kleiner ist als das Mindest-Value. Dann setzen wir das Value auf den Mindestwert. Else if, wenn das Value größer ist als der Maximalwert, dann setzen wir Value...

02:23:22.090 --> 02:23:48.560
Das kann man bestimmt schöner machen in Java. Da braucht man, glaub ich, gar kein if. Weil jetzt ist der Vorteil, wenn ich jetzt hier das, das mache und rausklicke... Ja, siehst du, das funktioniert. Nice. War das doch praktisch.

02:23:48.560 --> 02:24:20.830
Wenn ich's ganz lösche, kommt da Min-Value rein. Das ist doch gut. Ich hab dich übersehen. Was denn? Was ist denn? Naja, ich seh nicht immer alles im Chat. Du musst etwa bloß dabei schreiben, wenn ich irgendwas nicht sehe. Ich kann ja nicht immer alles. Was gibt's denn?

02:24:20.830 --> 02:24:59.850
Ja, ja, vielleicht nicht verkehrt. Hast du sonst noch irgendwas geschrieben? Dann versteh ich das Problem jetzt grad nicht. Aber Minutes ist wirklich nicht verkehrt wahrscheinlich. Ja, das tatsächlich. Schreibt man in dem Fall Minutes groß oder klein? Klein, oder?

02:24:59.850 --> 02:25:49.760
Groß? Wie schreiben die Amis das? Ey, wahrscheinlich klein. Irgendwie klein sieht besser aus. Ne, das sieht ganz gut aus. So, ich würd sagen, reicht, oder? Mehr brauchen wir noch nicht. Passt. Aber wenn ich hier Mist eintrage und dann rausklicke, oder da draufklicke, dann ist's halt wieder weg. Also ich denk, das können wir so lassen.

02:25:49.760 --> 02:26:12.390
Mausrad geht in Chrome halt einfach nicht. Was passiert beim Safe-Klicken? Dann legt er den Account, beziehungsweise dann addet er den Account, dass der im Hintergrund überwacht wird. Ja, wir könnten's eigentlich ausprobieren, ob jetzt alles funktioniert. Es ist ja soweit eigentlich alles da. Also, was passiert, wenn man Safe-klickt? Ganz einfach.

02:26:25.430 --> 02:26:59.340
Dann setzt er die zurück auf 999. Ne, das glaub ich nicht. Test? Gucken wir mal. Ne, bei Maus down ist es schon weg. Ich hab jetzt noch nicht geklickt. Moment, wenn ich Save drücke? Ah, ich hab hier noch kein On-Klick. On-Klick, add, Account, oder?

02:26:59.340 --> 02:27:22.350
Hab ich sowas nicht da oben drinnen? Ne, hä? Hatten wir nicht schon... Moment, Leute. Hatten wir nicht schon Accounts hinzugefügt? Oder hab ich das Backend-seitig noch gar nicht gemacht? Bin ich jetzt einfach nur etwas pipiger im Hirn? Kann es sein, dass das Backend noch gar keine Accounts adden kann?

02:27:25.620 --> 02:28:06.710
Okay, dann Function. Add Account. On-Klick. Add Account. So. Kann mein Backend das noch gar nicht? Ne. Ach, alter. Ja, kein Wunder, dass das nicht funktioniert. Ich hab noch gar keine Möglichkeit, irgendwas anzulegen. Ja, da muss man sich nicht wundern, wenn's nicht geht.

02:28:07.710 --> 02:28:31.880
Okay, ich muss jetzt mal kurz umdenken. Eine Runde .NET-Stells. Was anlegen ist oftmals ein Push, ne? Also brauchen wir sowas wie App, Push, äh, nicht Push, Post mein ich, nicht Push. Alter, wie komm ich auf Push? Post heißt es doch.

02:28:31.880 --> 02:28:54.880
Aber da siehst du mal, wie, wie Fivehead, ah ne. Post. Ich glaub, ich hab Post getippt, aber Push gesagt. Okay, RP-Pattern. Slash RP, Slash Accounts, Slash, ne, einfach nur Slash Accounts. Ne. Ne. Ne, restmäßig wäre das so, ja? So.

02:28:54.880 --> 02:29:27.660
Und dann? Boah, jetzt von Javascript umdenken, hier richtig. Leute, nicht nur Senior Fivehead Frontend Javascript Architekt. Fullstack muss da eigentlich ein Titel rein. Äh, äh, ähm. Warte mal, wie machen wir das jetzt? Async? Ne. Oh, ey Leute, ich bin verwirrt. Syntax. So hier, so geht das, gell? So.

02:29:31.900 --> 02:30:02.220
Das, also zwischen Javascript und C-Sharp hin und her wechseln, wenn man, wenn man die letzten zwei Stunden nur Javascript gemacht hat, ist wir. Okay, wir brauchen dort jetzt sicherlich wieder den Message Hub, dass ich posten kann, wenn es was Neues gibt. Okay, und wir brauchen sowas wie einen String, nennen wir es mal User. Ja. Wir, wir übertragen mal nur den, what the ffff. Wir übertragen mal nur den User.

02:30:03.220 --> 02:30:24.220
Das muss erstmal reichen. So, dann gucken wir mal, if String, ja null or whitespace User. Wenn ja, dann return result, results. Was returnen wir denn da? Konflikt, created, verbinden.

02:30:24.220 --> 02:30:51.220
Was, was returnen wir denn da, wenn irgendein Mist, gibt es nicht sowas, sowas wie einfach nur Bad Request, Bad Request ist top. Einfach, einfach, einfach Bad Request. Halt's Maul, Bad Request. Kann ich in deine agile Gruppe, um die Skills zu haben, bin ich auch immer im Daily. Also, wenn du auch immer schön Protokoll beim Daily führst, können wir mal drüber reden, ja.

02:30:51.220 --> 02:31:20.340
Weil wir sind agil, aber nicht, aber nicht so agil. Bei uns gibt es noch Protokoll. Let's go. Protokoll, wir haben, Chat, wir haben einen neuen Protokollschreiber gefunden. Hayimk macht das. Aber, aber auch immer schön den Schreibtisch hochfahren, wenn's, wenn's Stand-up ist, ne. Nicht jetzt einfach wegen Homeoffice faken, dass man, dass man standet. Dann kannst du in unsere agile Gruppe joinen.

02:31:22.980 --> 02:31:52.270
Protokollführung, sehr schön. Wechsel das nicht wöchentlich bei euch. Nein, wir haben zum Glück kein Protokoll. Also jetzt mal, also, also, bei uns auf der Arbeit haben wir für irgendwelche Daily Sachen kein Protokoll. Das wäre viel zu übertrieben. Da, da dreht man ja durch bei. Du fahrst den Schreibtisch immer hoch, ich nicht. Ich, ich hab Dailys und Stand-ups daheim, ohne zu standen.

02:31:57.590 --> 02:32:13.590
So, hier, waraccount gleich, äh, accountfaker hab ich das genannt. Generate einen Account. Wollen wir generaten? Ach, das ist eine List. Gibt's nicht sowas wie generate, generate one oder so? Ne, gibt's nicht. Generate one first.

02:32:14.590 --> 02:32:32.610
Account. So, und im Account setze ich jetzt erstmal einfach nur den User auf den Namen. Das muss, das muss reichen. So, fake database, accounts, add.

02:32:32.610 --> 02:33:04.540
Die Guid, das ist richtig, Account, keine Brüche, Account, ach nicht Guid, ID hab ich das genannt, okay. Account, so, jetzt sagen wir await, send update.

02:33:04.540 --> 02:33:23.050
Wir sagen Bescheid, dass es neue Accounts gibt auf Server-Seite und Result, return bei Result, okay. Alles klar. So, unser Backend sollte ready sein. Schauen wir mal, wie wir das in Frontend gebacken kriegen.

02:33:23.050 --> 02:33:39.050
Add Account. So, wie machen wir einen Post-Request jetzt ordentlich? Ja, also, das geht so, async, await, fetch. Es ist schon ein bisschen dumm, dass sie das Fetch genannt haben, oder?

02:33:39.050 --> 02:33:50.050
Warum haben die das nicht einfach auch HTTP-Client genannt im Browser? Warum Fetch? Mit Fetch kann man nämlich auch Sachen pushen, was wiederum bescheuert ist, warum es Fetch heißt.

02:33:50.050 --> 02:34:09.680
Also, das muss ich sagen, das war eines der wenigen neuen Javascript-Sachen, wo sie nicht so feilfett waren. Ansonsten, wenn ich mal abwägen müsste, wer hat bessere Sachen die letzten 10 Jahre in die Sprache eingebaut? C++ oder Javascript?

02:34:10.680 --> 02:34:27.720
Beziehungsweise, wer hat das konsistenter und logischer gemacht? Liegt Javascript ganz weit vorne. So, wir müssen hin nach HTTP, Doppelpunkt, Localhost, Port 5015. Ja, ich muss den Gesamten angeben, weil das auf dem anderen Port läuft.

02:34:27.720 --> 02:34:54.580
Accounts. So, und jetzt ging das wie? Method, Post, und dann Body, und dann JSON, Stringify, und jetzt den User. Ich glaube, so ging das, so ging das zu posten.

02:34:54.580 --> 02:35:27.380
Ich bin da ein bisschen am planlos sein. Geht das so? Ich hoffe, ich hoffe, dass das funktioniert. Okay, also dann enden wir mal was. So, Fake, warten, 1, 2, 3, 4, bester Pin, Save.

02:35:27.380 --> 02:36:01.500
Ach, Shit. Error not found? Ach, ich hab AP vergessen. Bad Request. Nice. Kann man auf einem Account nur ein Auto haben? Nein. Du kannst auf einem Account beliebig viele Autos haben, aber du brauchst einen Account pro Hersteller und pro Region.

02:36:01.500 --> 02:36:18.500
Und wenn du, nee, das stimmt nicht. Du brauchst einen Account pro Hersteller. Wenn du vom gleichen Hersteller Autos in mehreren Regionen hast, musst du wahrscheinlich den Account mehrfach adden mit unterschiedlicher Region Selection.

02:36:18.500 --> 02:36:45.930
Oder ich baue irgendeine Art Autodetection im Hintergrund ein, dass er sich in allen Regionen einloggt und guckt, wo er Autos findet. Wie kann ich meine CPU testen? Das hat mit deiner CPU nichts zu tun. Packet Loss, Packet Loss, Teleport, das liegt nicht an der CPU. Ganz ehrlich, CPUs sind eigentlich nie das Problem.

02:36:46.930 --> 02:37:12.690
Wenn CPUs kaputt sind, das merkst du. Und ansonsten ist die CPU eigentlich so ziemlich das Letzte, was ich vermuten würde. Ich meine, du kannst einen Stress Test machen, ja? Also unter Linux kannst du sowas hier eingeben. Stress. Oder, äh, Stress, wie heißt das andere? Linux Stress Test. Ich hab vergessen, wie es heißt.

02:37:12.690 --> 02:37:45.040
S, S, S-Twee kannst du eingeben, guck. Dann kannst du sagen, hier, bam, Stress Test auf allen CPUs, let's go. Und jetzt hab ich den Rechner komplett ausgelastet. Aber CPUs sind es eigentlich nie. Könnte das vielleicht damit zusammenhängen, dass deine SSD kaputt ist? Du hast doch vorhin geschrieben, dass deine SSD heute verreckt ist. Das wäre vielleicht auch daran, genau daran liegen.

02:37:45.040 --> 02:38:20.200
Wie passt das zusammen, dass deine, dass du am Flughafen bist, Leuten bei TikTok zuguckst, vorhin deine NVMe SSD verreckt ist und jetzt deine CPU Probleme hat? Ist das nicht ein bisschen viel für einen Tag? Ja, Prime95 kannst du machen unter Windows. Oder wenn du eine Intel CPU hast, kannst du auch das offizielle Intel Stress Test Tool benutzen. Aber Prime95 wäre wirklich nicht schlecht, damit kannst du nämlich auch deine RAM testen lassen.

02:38:21.200 --> 02:38:44.870
Mach mal ein Prime95. Mach, mach ein Prime95 Run. Aber auf Mittel, also dass er auch, also auf dieser mittleren Setting, dass er auch RAM testet. Und dann, und dann lass das mal einen halben Tag laufen und guck mal. Also wenn du Probleme hast, dann wahrscheinlich eher der RAM. Ich kann mir nicht vorstellen, dass deine CPU, CPUs sind nie kaputt.

02:38:44.870 --> 02:39:06.300
Was aber kaputt ist, ist mein Post Request. Warum ist mein Post Request kaputt? Oh. Ein Unhandled exception has occurred while executing requests. String user was not provided from the query string. Ja, from the query string soll da ja auch nicht provided werden.

02:39:06.300 --> 02:39:39.240
Minimal API C Sharp Post Parameter. Wie geht denn das? Parameter binding in minimal API abstractions. Ja, so habe ich das auch gemacht. Und warum geht das bei Microsoft und bei mir geht das nicht?

02:39:39.240 --> 02:40:21.420
Microsoft, was ist das? Was ist da los? From root, from query, from services, from header. Was? Das muss man doch sonst nicht machen. Kann es sein, dass ich das als JSON Objekt übergeben muss? Ich habe doch hier einen Uconnect Account. Aber das wird wahrscheinlich nicht funktionieren.

02:40:24.760 --> 02:40:42.460
Okay, einfach mal testweise. Public class. Ja. Fällt mir jetzt gerade nichts an. Und der kriegt aktuell einfach nur ein User. Wupp, wupp, wupp, wupp, wupp. Kann man jetzt sowas hier machen?

02:40:42.460 --> 02:41:05.820
Ach, ich mache es nicht als fetch. Alter. Ja, ich weiß, woran es liegt. Ich sage nicht Application. Ich sage nicht Application JSON. Nee, ich pushe das gar nicht als. Okay, aber top, top, das kann auch sein.

02:41:06.820 --> 02:41:37.820
Probieren wir das mal so aus. Probieren wir das mal doppelt, doppelt aus. Ja. Das heißt, es ist User, User. Das ist natürlich auch toll. Unsupported Media Type. Aber dann muss ich es wahrscheinlich auch so übergeben.

02:41:37.820 --> 02:42:03.600
Konnte ich das nicht einfach weglassen sonst? Konnte man mit JSON nicht sowas machen und er erkennt es trotzdem, dass der User nehmen soll und gleichzeitig es auch User nennen soll? Okay, ich brauche jetzt noch Application JSON Content. Ach nee.

02:42:03.600 --> 02:42:30.170
Oh, das kann ich mir immer nicht merken. Fetch, Post, JSON. Chat, verwendet ihr Fetch oder verwendet ihr sowas wie Axios oder sowas in der Richtung? Gibt es da Alternativen? Was würdet ihr empfehlen, wenn man viele Web-Requests machen muss im Browser? Fetch. Ich meine, Fetch hat halt den Vorteil, weil es built-in ist. Allein schon deswegen mag ich Fetch.

02:42:30.170 --> 02:43:09.210
Ah, jetzt hat es funktioniert. Guck, und jetzt haben wir auch, okay Moment, wir müssen das nochmal neu starten. Wir generaten ein bisschen viele Fake Autos. Ups, da war es doch. Wir generaten zwischen 15 und 69 Fake Accounts. Wir generaten mal bloß zwischen einem und drei Fake Accounts.

02:43:10.210 --> 02:43:37.240
Aber eigentlich müssen wir gar keine Fake Accounts mehr generaten. Wir können einfach welche adden von Hand. Open API Tools. Das klingt was, was, das sieht so ein bisschen nach, ach so Java. Okay, ich meine JavaScript. Das sieht so ein bisschen nach Swagger-Kram aus.

02:43:37.240 --> 02:43:38.240
Guck mal, so, add, bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla

02:44:20.100 --> 02:44:31.480
Und, und ein weiterer Vorteil ist, es sieht doch, ohne Mist Leute, es sieht doch direkt irgendwo noch ganz lesbar aus.

02:44:31.480 --> 02:44:42.480
Das einzige, was nicht so hübsch ist, aber da bin ich auch zu faul und ich glaube auch nicht, dass es sich lohnt, das in der Komponente irgendwie auszuklinieren, weil es sehr eng verbunden ist mit der Logik von der Seite,

02:44:43.480 --> 02:45:08.350
Das mit dem Button hier unten, den Button könnte man vielleicht noch extrahieren, irgendwie als, keine Ahnung, Load-Button oder sowas, aber jetzt sagt man, insgesamt sieht das doch wirklich ganz gut lesbar aus.

02:45:08.350 --> 02:45:18.350
Moment, ich beinde ja die Hälfte ja noch gar nicht mal, aber na gut, zumindest testweise fandst du es doch schon mal, das ist doch wirklich nicht verkehrt, das hat was.

02:45:18.350 --> 02:45:31.970
Wieso heißt der Button Test? Naja, Login-Test halt. Wie kann ich am Ende die Anwendung, einen Docker-Container starten, fertig.

02:45:32.970 --> 02:45:36.970
Oder halt Home Assistant-Add-On installieren, mit einem Klick.

02:45:36.970 --> 02:45:44.970
Test, es soll Login-Test heißen. Ja, du testest, ob das Login funktioniert, wenn ja, dann geht's weiter und...

02:45:44.970 --> 02:45:56.410
Okay, wenn man nicht versteht, für was Test steht, wie kann ich das Ding nennen, dass man versteht, was dieser Button macht?

02:45:57.410 --> 02:46:06.830
Gestern hab ich's Login genannt, gestern hab ich's Login genannt und ich dachte mir, Login ist auch nicht so richtig klar.

02:46:09.340 --> 02:46:12.340
Vielleicht sollte ich's einfach nennen, Test-Login.

02:46:14.340 --> 02:46:17.340
Komm, ich nenn's Login, oder? Chat, Test oder Login?

02:46:19.340 --> 02:46:28.530
Authenticate. Try to Login. Ja, fast.

02:46:33.210 --> 02:46:36.210
Verify. Oh, jetzt kommen hier aber die advanceden Sachen an, Chat.

02:46:37.210 --> 02:46:40.210
Also, Try to Login find ich persönlich gar nicht mal übel.

02:46:42.210 --> 02:46:49.210
Verify. Nee, Try to Login find ich gut. Da ist unmissverständlich klar, was passiert.

02:46:54.720 --> 02:46:55.720
Ja, Try to Login find ich gut.

02:47:03.960 --> 02:47:07.960
Okay, was passiert, wenn das Login failt? Haben wir schon ausprobiert?

02:47:08.960 --> 02:47:10.960
Das kann ich aktuell nur so simulieren.

02:47:11.960 --> 02:47:17.960
Wenn das Login failt, dann gibt's... Ah, Moment, das ist noch verbuggt.

02:47:21.960 --> 02:47:23.960
Ja, das wird noch nicht abgefragt hier.

02:47:25.960 --> 02:47:32.790
Ja, doch, doch, sehr stylisch, gefällt mir.

02:47:32.790 --> 02:47:44.790
Ich mein, vielleicht sollten wir wirklich noch einen Login-Test-Endpoint machen.

02:47:45.790 --> 02:47:54.920
Deswegen, alles zu starr, immer Rest, funktioniert halt nicht.

02:47:55.920 --> 02:48:01.920
Also, wir könnten tatsächlich einen Login-Test... Im Prinzip brauchen wir sowas hier.

02:48:02.920 --> 02:48:06.920
Moment, nee, Chat, wir machen das ganz einfach.

02:48:08.920 --> 02:48:09.920
Wir machen den Post.

02:48:13.190 --> 02:48:15.190
Wie werden die Accounts gespeichert im Frontend?

02:48:16.190 --> 02:48:19.190
Aktuell nur im RAM.

02:48:20.190 --> 02:48:25.190
Ich hab hier sowas, ich hab eine Fake-Database, das ist einfach nur ein Dictionary.

02:48:26.190 --> 02:48:29.190
Aber wahrscheinlich am Ende SQLite oder eine Textdatei.

02:48:30.190 --> 02:48:38.490
Das liegt dann halt im Docker-Container oder im Home-Assistant-Docker-Container.

02:48:52.260 --> 02:48:55.260
Ich mein, wir könnten theoretisch, wenn wir jetzt hier sowas wie JSON-Account haben,

02:48:56.260 --> 02:48:58.260
könnten wir eigentlich noch ein Bool-Feld machen.

02:48:59.260 --> 02:49:01.260
Ist-Test oder sowas.

02:49:04.910 --> 02:49:08.910
Und, obwohl ich mir nicht sicher bin, ob das schönes API-Design ist.

02:49:09.910 --> 02:49:17.570
Ja, und jetzt könnten wir quasi sagen, ja, blablabla, Generate.

02:49:17.570 --> 02:49:22.570
Und anstatt das in die Datenbank zu inserten, könnten wir jetzt sagen,

02:49:23.570 --> 02:49:29.570
wenn es ein Test-Login ist, das gefällt mir jetzt schon nicht.

02:49:30.570 --> 02:49:33.570
Wenn es ein Test-Login ist, dann machen wir hier oben das da.

02:49:34.570 --> 02:49:37.880
Ja, das würde funktionieren.

02:49:38.880 --> 02:49:41.880
Können Home-Assistant-Addons überhaupt Persistent Storage?

02:49:42.880 --> 02:49:49.260
Ja, das geht.

02:49:50.260 --> 02:49:55.260
Kannst du in deine Addon-Options eintragen, dann kriegst du irgendwie, frag mich nicht,

02:49:56.260 --> 02:49:58.260
nicht viel, du kriegst irgendwie 50 MB Storage oder sowas.

02:49:59.260 --> 02:50:01.260
Aber das geht.

02:50:02.260 --> 02:50:04.260
Sonst könntest du ja mit Addons nie Textdateien anlegen und sowas.

02:50:09.010 --> 02:50:11.010
Wobei ich weiß gar nicht, ob es beschränkt ist.

02:50:12.010 --> 02:50:14.010
Ich glaube, ich bilde mir eines, das wäre auch 50 oder 200 MB oder so beschränkt.

02:50:15.010 --> 02:50:23.250
Was du in Addon kriegst.

02:50:24.250 --> 02:50:26.250
Das ist einfach, das kann ich dir sagen.

02:50:26.250 --> 02:50:28.250
Home-Assistant-Recorder nennt sich das Ganze.

02:50:29.250 --> 02:50:41.470
Und hör nicht drauf, dass Leute sagen, du sollst es in MySQL oder so überführen.

02:50:42.470 --> 02:50:44.470
SQLite ist vollkommen okay.

02:50:45.470 --> 02:50:47.470
Hier kannst du angeben.

02:50:48.470 --> 02:50:50.470
Recorder Max, oh mein Auge.

02:50:51.470 --> 02:50:53.470
Ja, Purge-Keep-Days, das musst du eingeben.

02:50:54.470 --> 02:50:56.470
Das ist defaultmäßig auf 10 Tage.

02:50:57.470 --> 02:50:59.470
Stellst du einfach auf einen Monat oder so.

02:51:00.470 --> 02:51:02.470
Dann hast du zwar eine bisschen fettere Datenbank, aber kannst du in der History,

02:51:02.470 --> 02:51:04.470
in Home-Assistant weiter zurückgehen.

02:51:05.470 --> 02:51:09.620
Ja, Return, Results.

02:51:11.620 --> 02:51:13.620
Bad Request.

02:51:14.620 --> 02:51:24.260
Macht das Sinn ein Jahr zu loggen?

02:51:25.260 --> 02:51:27.260
Es kommt ein bisschen drauf an, was du alles loggst.

02:51:28.260 --> 02:51:30.260
Du kannst ja auch exkluden, das geht ja auch.

02:51:31.260 --> 02:51:33.260
Du kannst ja auch manche Sensoren exkluden, dass du da nicht so viel loggst.

02:51:34.260 --> 02:51:36.260
Das kann man relativ genau, also ganz ehrlich.

02:51:37.260 --> 02:51:40.640
Du kannst schon ein Jahr Datenbank machen.

02:51:40.640 --> 02:51:42.640
Ich bin mir nicht sicher, ob Home-Assistant nicht dadurch irgendwelche Slowdowns hat.

02:51:46.640 --> 02:51:48.640
Weil es manchmal versucht, alles einzulesen oder so.

02:51:49.640 --> 02:51:51.640
Aber das geht schon.

02:51:52.640 --> 02:51:54.640
Das ist ASP.NET Core.

02:51:55.640 --> 02:52:05.100
Minimal APIs.

02:52:06.100 --> 02:52:08.100
Also ich habe glaube ich meinen Home-Assistant drei Monate gespeichert.

02:52:09.100 --> 02:52:11.100
Und meine Datenbank platzt jetzt nicht aus allen Nähten.

02:52:12.100 --> 02:52:16.560
Ist jetzt, weiß ich nicht, 80G oder so.

02:52:16.560 --> 02:52:18.560
Ja, das finde ich aber, Chillfreak, das hatte ich auch mal.

02:52:19.560 --> 02:52:23.900
Das finde ich zu viele Scootern schon.

02:52:24.900 --> 02:52:26.900
Also probieren wir das doch mal aus hier.

02:52:27.900 --> 02:52:29.900
Wir machen jetzt nochmal einen Fetch.

02:52:30.900 --> 02:52:32.900
Bei...

02:52:33.900 --> 02:52:35.900
Ich habe doch hier Try Login.

02:52:36.900 --> 02:52:38.900
Okay, Try Login, muss auch Async sein.

02:52:39.900 --> 02:52:41.900
Also, ich habe jetzt mein Login so eingestellt, dass es immer failt.

02:52:42.900 --> 02:52:44.900
Mein Login failt immer.

02:52:45.900 --> 02:52:47.900
API.NET Core.

02:52:48.900 --> 02:52:50.900
API-Accounts User.

02:52:51.900 --> 02:52:53.900
Und jetzt irgendwie ist Test

02:52:53.900 --> 02:52:55.900
True.

02:52:56.900 --> 02:52:58.900
Das ist wirklich keine allzu schöne API-Geschichte.

02:52:59.900 --> 02:53:05.320
Da müsste ich mir was anderes überlegen.

02:53:06.320 --> 02:53:12.190
Das hat nicht funktioniert.

02:53:13.190 --> 02:53:24.950
Okay, es geht einfach gar nicht.

02:53:25.950 --> 02:53:29.650
Ja, das stimmt, das Else brauchen wir nicht.

02:53:36.120 --> 02:53:38.120
Okay, was schickt der jetzt für einen Request?

02:53:50.100 --> 02:53:55.330
Was, Status Code okay?

02:53:55.330 --> 02:54:05.040
Wie jetzt?

02:54:05.040 --> 02:54:09.760
Status Code okay.

02:54:20.580 --> 02:54:22.580
Jetzt ist es doch Bad Request?

02:54:40.000 --> 02:54:42.000
Ich habe jetzt nichts geändert und auf einmal geht es?

02:54:43.000 --> 02:54:45.000
Wie jetzt? Warum jetzt?

02:54:52.050 --> 02:54:54.050
Warum sollte Rekord das nicht?

02:54:55.050 --> 02:54:57.050
Das ergibt keinen Sinn.

02:54:58.050 --> 02:55:00.050
Nee, am Rekord liegt es nicht.

02:55:01.050 --> 02:55:03.050
Ich glaube mein Frontend hat einfach noch nicht richtig neu geladen oder so.

02:55:04.050 --> 02:55:06.050
Der Rekord, den habe ich nur gemacht, dass ich das ordentlich Debug-Ausgabe auf der Konsole habe.

02:55:06.050 --> 02:55:09.620
Am Rekord wird es nicht liegen.

02:55:10.620 --> 02:55:12.620
Okay, das funktioniert.

02:55:13.620 --> 02:55:15.620
Login. Bam. Zack.

02:55:16.620 --> 02:55:20.380
Accounts. 400.

02:55:21.380 --> 02:55:23.380
Okay, schön.

02:55:24.380 --> 02:55:26.380
Das heißt, wir checken jetzt, wenn es einen

02:55:27.380 --> 02:55:29.380
Wie macht man das mit Fetch gescheit?

02:55:30.380 --> 02:55:32.380
Let Result.

02:55:33.380 --> 02:55:35.380
Und jetzt kann man glaube ich checken,

02:55:36.380 --> 02:55:38.380
If Result okay.

02:55:39.380 --> 02:55:41.380
Ist das auch ein Promise?

02:55:42.380 --> 02:55:44.380
Auch etwas, was man erwarten muss?

02:55:45.380 --> 02:55:49.460
Nee, oder?

02:55:50.460 --> 02:55:56.650
Geht das so? Nee, das ist kein Promise.

02:55:57.650 --> 02:55:59.650
So, ich kann gucken, If okay.

02:56:00.650 --> 02:56:02.650
Dann sage ich, Login gleich

02:56:03.650 --> 02:56:05.650
Login Status okay.

02:56:06.650 --> 02:56:08.650
Nee, okay.

02:56:09.650 --> 02:56:15.390
Else.

02:56:16.390 --> 02:56:18.390
Wobei, das brauchen wir noch gar nicht hier. Einfach so. Zack.

02:56:19.390 --> 02:56:21.390
Hier. Senior Architect Code.

02:56:22.390 --> 02:56:32.300
Error. So, perfekt.

02:56:33.300 --> 02:56:35.300
So, schauen wir mal.

02:56:36.300 --> 02:56:38.300
Also es sollte immer einen Error geben aktuell.

02:56:39.300 --> 02:57:00.460
Hä? Alter, manchmal verstehe ich Javascript nicht.

02:57:02.840 --> 02:57:04.840
B is not a function. Wie jetzt?

02:57:05.840 --> 02:57:07.840
Warum nicht?

02:57:10.340 --> 02:57:12.340
Okay. Fetch. Await. Okay. Error.

02:57:13.340 --> 02:57:15.340
Wie macht man das richtig?

02:57:16.340 --> 02:57:18.340
How to handle errors. Ja, erklär mir das mal.

02:57:19.340 --> 02:57:21.340
Fetch. Moment.

02:57:22.340 --> 02:57:33.820
Ernsthaft? Aber, hä?

02:57:44.640 --> 02:57:49.940
Ah, Moment.

02:57:50.940 --> 02:57:52.940
Ah, Moment, Moment.

02:57:53.940 --> 02:58:06.400
Das ist irgendwas anderes.

02:58:09.800 --> 02:58:16.310
Ach, du hast recht. Ja, geht doch.

02:58:17.310 --> 02:58:19.310
Wobei, das auch eigentlich nicht richtig ist.

02:58:29.750 --> 02:58:31.750
Julian stating, whether the response was successful.

02:58:32.750 --> 02:58:34.750
Ja, das ist okay. Kann man verwenden.

02:58:35.750 --> 02:58:37.750
Ja, dann ist das doch eigentlich ganz nice.

02:58:40.640 --> 02:58:42.640
Ja, cool. Funktioniert.

02:58:43.640 --> 02:58:45.640
So, nochmal ausprobieren.

02:58:46.640 --> 02:58:48.640
Jetzt sagen wir hier okay an der Stelle.

02:58:49.640 --> 02:58:51.640
Das ist wirklich eklige API, die ich da gebaut habe.

02:58:52.640 --> 02:58:54.640
Das muss man sich was besseres überlegen.

02:59:02.900 --> 02:59:06.410
Äh, was? Ach so, jetzt ist es okay.

02:59:07.410 --> 02:59:09.410
Ne, ich muss doch.

02:59:10.410 --> 02:59:12.410
Ich muss doch checken.

02:59:13.410 --> 02:59:15.410
Weil nur wenn es okay ist,

02:59:16.410 --> 02:59:18.410
nur wenn es okay ist, dann will ich

02:59:19.410 --> 02:59:23.490
gleich eins noch machen.

02:59:24.490 --> 02:59:29.340
Ja, komm.

02:59:30.340 --> 02:59:35.500
Dann machen wir das jetzt doch so.

02:59:38.200 --> 02:59:40.200
Master Copy Paster.

02:59:41.200 --> 02:59:45.600
Machen wir das jetzt doch so.

02:59:46.600 --> 02:59:48.600
So, wir bauen jetzt einfach mal random ein.

02:59:49.600 --> 02:59:51.600
Random.

02:59:52.600 --> 02:59:54.600
Shared. Next.

02:59:55.600 --> 02:59:57.600
Zwischen 0 und 2.

02:59:58.600 --> 03:00:00.600
Also 50 50. Result okay.

03:00:01.600 --> 03:00:03.600
Bad Request.

03:00:04.600 --> 03:00:09.000
Jetzt können wir das ausprobieren, ob es funktioniert.

03:00:10.000 --> 03:00:12.000
Bad Request.

03:00:13.000 --> 03:00:15.000
Funktioniert, okay.

03:00:16.000 --> 03:00:18.000
Ja, nice.

03:00:19.000 --> 03:00:21.000
Wir sollten vielleicht noch, damit man es besser erkennt.

03:00:22.000 --> 03:00:24.000
Await.

03:00:25.000 --> 03:00:27.000
Task. Delay.

03:00:28.000 --> 03:00:30.000
Irgendwie noch eine Sekunde Delay einbauen.

03:00:31.000 --> 03:00:33.000
Dass man auch gescheit sieht, dass da loaded und sowas.

03:00:34.000 --> 03:00:36.000
Try to login.

03:00:37.000 --> 03:00:39.000
Failed. Okay, ich habe mein Passwort vertippt.

03:00:40.000 --> 03:00:42.000
Okay, nice. Hat funktioniert.

03:00:43.000 --> 03:00:45.000
Also die API gefällt mir überhaupt nicht.

03:00:46.000 --> 03:00:48.000
Ich habe das jetzt nur aus Zeitgründen gemacht.

03:00:49.000 --> 03:00:51.000
Weil mir auch nichts besseres eingefallen ist.

03:00:52.000 --> 03:00:54.000
Ich missbrauche gerade den gleichen

03:00:55.000 --> 03:00:57.000
API Endpoint zum Anlegen des Accounts

03:00:58.000 --> 03:01:00.000
beziehungsweise zum Testen des Accounts.

03:01:01.000 --> 03:01:03.000
Ich weiß nicht, ob das so schön ist.

03:01:04.000 --> 03:01:06.000
Ich probiere es erst mal.

03:01:07.000 --> 03:01:09.000
Ich würde sagen, da waren wir doch heute.

03:01:10.000 --> 03:01:12.000
Chat, was sagt ihr? Wir waren heute äußerst erfolgreich, oder?

03:01:13.000 --> 03:01:15.000
Das sieht jetzt tatsächlich schon nach einem

03:01:16.000 --> 03:01:18.000
halbwegs bedienbaren Webinterface aus.

03:01:19.000 --> 03:01:21.000
Guck mal, sogar mehrere.

03:01:22.000 --> 03:01:24.000
1, 2, 3, 4. Massive Pin. Save. Zack. Wurde geeditet.

03:01:25.000 --> 03:01:27.000
Funktioniert. Oder was sagt ihr?

03:01:28.000 --> 03:01:30.000
Ich finde, es sieht schon durchaus usable aus jetzt.

03:01:31.000 --> 03:01:39.180
Und sogar in Light Mode, der ganz brauchbar aussieht.

03:01:40.180 --> 03:01:42.180
Was ist das eigentlich? Ach, Place.

03:01:43.180 --> 03:01:45.180
Diese ganzen Sachen mit Await, Async usw.

03:01:46.180 --> 03:01:48.180
Nerven sind so unnötig kompliziert.

03:01:49.180 --> 03:01:51.180
Naja, die mögen vielleicht ein bisschen kompliziert sein, aber

03:01:52.180 --> 03:01:54.180
nur weil sie kompliziert sind, heißt nicht, dass sie unsinnig sind.

03:01:55.180 --> 03:01:58.490
Aber auf der anderen Seite

03:02:00.490 --> 03:02:02.490
machen sie auch einiges deutlich lesbarer.

03:02:03.490 --> 03:02:05.490
Das Problem bei JavaScript ist nur,

03:02:06.490 --> 03:02:08.490
und das ist auch der Grund, weshalb ich Probleme mit JavaScript habe.

03:02:08.490 --> 03:02:10.490
Und das sage ich als jemand, der tatsächlich...

03:02:11.490 --> 03:02:13.490
Ja, in C++ gibt es auch Async-await.

03:02:14.490 --> 03:02:16.490
Nur so unnötig kompliziert, dass es echt keine Sau benutzt.

03:02:17.490 --> 03:02:19.490
Hast du dir das schon mal angeguckt, wie das in C++ aussieht?

03:02:20.490 --> 03:02:22.490
Da lachst du dich schepp.

03:02:23.490 --> 03:02:29.040
Alleine schon, wenn ich das sehe.

03:02:39.740 --> 03:02:41.740
Da weißt du schon Bescheid.

03:02:42.740 --> 03:02:44.740
Alter, C++...

03:02:45.740 --> 03:02:47.740
Oh Gott, diese Sprache ist so scheiße.

03:02:48.740 --> 03:02:58.900
Ich drehe immer durch, wenn ich das sehe.

03:03:03.900 --> 03:03:05.900
Moment, das ist gar nicht das, was ich mit Await meine.

03:03:06.900 --> 03:03:08.900
Das ist was anderes.

03:03:09.900 --> 03:03:11.900
Das heißt doch irgendwie Co...

03:03:12.900 --> 03:03:14.900
Async-await bei C++.

03:03:15.900 --> 03:03:17.900
Das ist doch ganz weird.

03:03:17.900 --> 03:03:19.900
Co-await heißt das ja in C++.

03:03:20.900 --> 03:03:22.900
Warum auch? Warum auch? Bitte schön anders.

03:03:30.330 --> 03:03:32.330
Ja.

03:03:33.330 --> 03:03:35.330
Await-resume. Awaitable.

03:03:36.330 --> 03:03:38.330
Also in C++ ist es schon wieder so gemacht.

03:03:39.330 --> 03:03:41.330
Es ist einfach nichts zu verstehen.

03:03:42.330 --> 03:03:44.330
Gibt es irgendwo ein Exempel, wo das mal drin hervorkommt?

03:03:45.330 --> 03:03:47.330
Co-await-switch. Keine Ahnung.

03:03:48.330 --> 03:03:50.330
Ganz ehrlich, in C++ würde ich es gar nicht erst verwenden.

03:03:50.330 --> 03:03:52.330
Javascript hat einen großen Vorteil,

03:03:53.330 --> 03:03:55.330
was Async-await angeht.

03:03:57.330 --> 03:03:59.330
Javascript ist standardmäßig nicht multithreaded.

03:04:00.330 --> 03:04:02.330
Dementsprechend ist es relativ einfach,

03:04:03.330 --> 03:04:07.090
sich zu überlegen, was Async-await macht.

03:04:08.090 --> 03:04:10.090
In C-sharp sieht es ein bisschen anders aus,

03:04:11.090 --> 03:04:13.090
weil dort kann das wirklich einfach nur eine asynchrone Operation sein

03:04:14.090 --> 03:04:16.090
oder Multithreading unter der Haube.

03:04:17.090 --> 03:04:19.090
Das ist tatsächlich nicht so einfach da durchzuplicken.

03:04:19.090 --> 03:04:21.090
Aber in Javascript ist es doch relativ einfach.

03:04:22.090 --> 03:04:24.090
Das, was es in Javascript kompliziert macht,

03:04:25.090 --> 03:04:27.090
ist, dass es alte und neue APIs gibt.

03:04:28.090 --> 03:04:30.090
Es gibt neue, in Anführungsstrichen, neuere,

03:04:31.090 --> 03:04:33.090
mit Promises, und es gibt alte,

03:04:34.090 --> 03:04:36.090
die sonst wie anders nur mit Callbacks funktionieren.

03:04:37.090 --> 03:04:39.090
Also, guck mal.

03:04:40.090 --> 03:04:42.090
In Javascript ist es prinzipiell eigentlich ganz simpel.

03:04:43.090 --> 03:04:45.090
Es gibt neue APIs,

03:04:46.090 --> 03:04:48.090
die nur mit Callbacks funktionieren.

03:04:49.090 --> 03:04:51.090
Früher musstest du in Javascript sowas hier machen.

03:04:52.090 --> 03:04:54.090
Fetch, also mit Fetch lädst du was runter,

03:04:55.090 --> 03:04:57.090
musstest du sagen, Fetch Punkt,

03:04:58.090 --> 03:05:00.090
denn,

03:05:01.090 --> 03:05:03.090
ja klar, blubb, gleich irgendwas.

03:05:04.090 --> 03:05:06.090
Ansonsten konntest du auch noch Error catchen und sowas.

03:05:07.090 --> 03:05:09.090
Also das hier war die Schreibweise in Javascript früher.

03:05:10.090 --> 03:05:12.090
Du hast das hier ausgeführt, und wenn das fertig war,

03:05:13.090 --> 03:05:15.090
dann hast du das ausgeführt.

03:05:16.090 --> 03:05:18.090
Das Problem war nur in Javascript,

03:05:19.090 --> 03:05:21.090
wann du sowas hier hattest.

03:05:22.090 --> 03:05:25.660
Das hat nicht mal aufgehört.

03:05:26.660 --> 03:05:28.660
Du hattest Callback in Callback in Callback in Callback.

03:05:29.660 --> 03:05:31.660
Und das war halt ein bisschen

03:05:32.660 --> 03:05:34.660
unübersichtlich und auch nicht

03:05:35.660 --> 03:05:37.660
so gut zu verstehen, was da passiert.

03:05:38.660 --> 03:05:40.660
Und was sie jetzt gemacht haben ist,

03:05:41.660 --> 03:05:43.660
anstatt dass du Then verwendest und dann hier drauf,

03:05:44.660 --> 03:05:46.660
dann hier weitermachst, also das was,

03:05:47.660 --> 03:05:49.660
so wie ich das hier geschrieben habe,

03:05:50.660 --> 03:05:54.100
könntest du dir nehmen,

03:05:55.100 --> 03:05:57.100
ich könnte das AwaitMatch machen,

03:05:58.100 --> 03:06:00.100
Then dahinter schreiben,

03:06:01.100 --> 03:06:03.100
Result, das da reinpasten,

03:06:04.100 --> 03:06:06.100
und ich bin mir nicht ganz sicher,

03:06:07.100 --> 03:06:09.100
ob es eins zu eins so funktioniert.

03:06:10.100 --> 03:06:13.540
Das würde exakt das gleiche machen,

03:06:14.540 --> 03:06:16.540
wie das was ich eben habe.

03:06:17.540 --> 03:06:19.540
Und wenn das nur einmal nestet ist,

03:06:20.540 --> 03:06:22.540
dann ist es auch relativ einfach.

03:06:23.540 --> 03:06:25.540
Du hast hier ein Array,

03:06:26.540 --> 03:06:28.540
und da würdest du ForEach mitverwenden.

03:06:29.540 --> 03:06:31.540
Und da drinne kriegst du dann wieder ein Callback.

03:06:32.540 --> 03:06:34.540
Dann ist dann irgendein Objekt drinne,

03:06:35.540 --> 03:06:37.540
wo du dann sagst, hier, keine Ahnung, bla, Call,

03:06:38.540 --> 03:06:40.540
und dann wird es langsam wirklich eklig.

03:06:41.540 --> 03:06:43.540
Also die zwei Sachen, die ich hier gebaut habe,

03:06:44.540 --> 03:06:46.540
sind komplett mehr oder weniger synonym.

03:06:47.540 --> 03:06:49.540
Du kannst entweder mit Await vorschreiben

03:06:50.540 --> 03:06:52.540
oder mit Then.

03:06:53.540 --> 03:06:56.980
Das, was ich hier gemacht habe,

03:06:57.980 --> 03:06:59.980
ist tatsächlich eigentlich relativ simpel.

03:07:00.980 --> 03:07:02.980
Und zwar, sobald die JavaScript Runtime

03:07:03.980 --> 03:07:05.980
das Await sieht,

03:07:06.980 --> 03:07:08.980
dann macht er nichts anderes,

03:07:09.980 --> 03:07:11.980
als einen Return aus der Funktion.

03:07:12.980 --> 03:07:14.980
Deswegen eigentlich wäre Return Await

03:07:15.980 --> 03:07:17.980
die einleuchtendere Sache.

03:07:18.980 --> 03:07:20.980
So, der packt das in irgendeine Queue rein,

03:07:21.980 --> 03:07:23.980
der schickt es ab,

03:07:24.980 --> 03:07:26.980
der schickt weiter,

03:07:27.980 --> 03:07:29.980
und es wird regelmäßig gecheckt,

03:07:30.980 --> 03:07:32.980
ist dieser Call fertig.

03:07:33.980 --> 03:07:35.980
Wenn dieser Call fertig ist,

03:07:36.980 --> 03:07:38.980
dann springt er an dieser Stelle wieder rein

03:07:39.980 --> 03:07:41.980
und macht das weiter.

03:07:42.980 --> 03:07:44.980
Also unter der Haube wird das umgebaut

03:07:45.980 --> 03:07:47.980
zu nem Return und er merkt sich die Stelle,

03:07:48.980 --> 03:07:50.980
wo du gewesen bist und macht dann an der Stelle weiter.

03:07:51.980 --> 03:07:53.980
Ich bin mir nicht sicher,

03:07:54.980 --> 03:07:56.980
ob es da sicher so einen Zwischencompiler gibt,

03:07:57.980 --> 03:07:59.980
der dir anzeigt, wie unter der Haube

03:08:00.980 --> 03:08:02.980
das dann implementiert wird.

03:08:03.980 --> 03:08:05.980
Also für C Sharp gibt es sowas,

03:08:06.980 --> 03:08:08.980
in Sharp Lab zum Beispiel,

03:08:09.980 --> 03:08:11.980
kannst du dir angucken, was der Compiler aus Async Await macht.

03:08:12.980 --> 03:08:14.980
Das ist nichts anderes wie Basic.NET C Sharp Konstrukte,

03:08:15.980 --> 03:08:22.490
was die da draus bauen.

03:08:23.490 --> 03:08:25.490
Im Prinzip sorgt Await dafür,

03:08:26.490 --> 03:08:28.490
dass du Konstrukte, die du vorher

03:08:29.490 --> 03:08:31.490
so schreiben kannst, wie du auch

03:08:32.490 --> 03:08:34.490
synchrone Aufrufe schreiben würdest.

03:08:35.490 --> 03:08:37.490
Das hier wird erst ausgeführt, wenn das hier

03:08:38.490 --> 03:08:40.490
entweder fertig ist oder fehlgeschlagen ist.

03:08:41.490 --> 03:08:43.490
Ich finde in JavaScript ist Await

03:08:44.490 --> 03:08:46.490
eigentlich noch ganz gut verständlich.

03:08:47.490 --> 03:08:50.800
In .NET wird es manchmal ein bisschen komplizierter.

03:08:51.800 --> 03:08:53.800
Wobei es da im Prinzip auch so ist.

03:08:54.800 --> 03:08:56.800
Nur dass du dir bei JavaScript immer sicher sein kannst,

03:08:57.800 --> 03:08:59.800
dass es da nur einen Thread

03:09:00.800 --> 03:09:02.800
und du nicht drauf achten musst,

03:09:03.800 --> 03:09:05.800
dass außer der Reihe noch was drauf zugreift.

03:09:13.040 --> 03:09:15.040
Also es gibt richtig gute Videos dazu,

03:09:16.040 --> 03:09:18.040
die das erklären auf YouTube. Sowohl zu JavaScript

03:09:19.040 --> 03:09:21.040
als auch zu .NET. Ich kann dir jetzt keins empfehlen.

03:09:22.040 --> 03:09:24.040
Aber ich habe auch welche geguckt früher.

03:09:25.040 --> 03:09:29.060
Da gibt es richtig gute Videos zu.

03:09:30.060 --> 03:09:32.060
Und ich kann es jetzt auch nur aus dem Ärmel schüttern.

03:09:33.060 --> 03:09:36.430
Wie Assembler mit Sprungadressen?

03:09:37.430 --> 03:09:41.380
Naja. Also wenn es einfacher zu verstehen ist,

03:09:42.380 --> 03:09:44.380
naja.

03:09:45.380 --> 03:09:47.380
Also in C-Sharp ist es tatsächlich ein bisschen komplizierter,

03:09:48.380 --> 03:09:50.380
was passiert.

03:09:51.380 --> 03:09:53.380
Wenn in C-Sharp ein Await drin ist,

03:09:54.380 --> 03:09:56.380
dann passiert an der Stelle auch ein Return.

03:09:57.380 --> 03:09:59.380
Das Ganze wird gequeued.

03:10:00.380 --> 03:10:02.380
In irgendeinem

03:10:03.380 --> 03:10:05.380
Worker Thread oder so.

03:10:06.380 --> 03:10:08.380
Und wenn das fertig ist,

03:10:09.380 --> 03:10:11.380
wird die gesamte Funktion einfach wieder von vorne aufgerufen.

03:10:12.380 --> 03:10:14.380
Genau.

03:10:15.380 --> 03:10:17.380
Also in C-Sharp funktioniert das folgendermaßen.

03:10:18.380 --> 03:10:20.380
Der Compiler baut dir dann sowas hier drum herum.

03:10:21.380 --> 03:10:23.380
Ich mache das jetzt nur mal exemplarisch.

03:10:24.380 --> 03:10:26.380
Also wenn er dann ein Await sieht,

03:10:27.380 --> 03:10:29.380
dann ersetzt er das Await erstmal durch den Return.

03:10:30.380 --> 03:10:32.380
Das hier

03:10:33.380 --> 03:10:35.380
queued er dann in irgendeinem Background Thread

03:10:36.380 --> 03:10:38.380
und wartet da drauf.

03:10:39.380 --> 03:10:41.380
Und dann gibt es sowas hier.

03:10:42.380 --> 03:10:44.380
Da gibt es dann sowas wie Step.

03:10:45.380 --> 03:10:47.380
Step gleich 0.

03:10:48.380 --> 03:10:50.380
Step gleich 1.

03:10:51.380 --> 03:10:53.380
Step gleich 2.

03:10:54.380 --> 03:10:56.380
Und was passiert, wenn du

03:10:57.380 --> 03:10:59.380
die Funktion quasi wieder aufgerufen wirst,

03:11:02.400 --> 03:11:04.400
weil der Asynchrone Task gefinished ist,

03:11:05.400 --> 03:11:07.400
dann springt er hier rein,

03:11:08.400 --> 03:11:10.400
übergibt aber als Parameter quasi noch den Step.

03:11:11.400 --> 03:11:19.000
Und der Step ist dann das If 1 nach dem Await.

03:11:20.000 --> 03:11:22.000
Task und Threads haben nicht viel...

03:11:23.000 --> 03:11:25.000
Ja...

03:11:25.000 --> 03:11:29.980
Streng genommen nicht.

03:11:29.980 --> 03:11:31.980
Es muss kein Thread sein, ist es aber meistens.

03:11:35.440 --> 03:11:37.440
Es gibt... Es gibt...

03:11:37.440 --> 03:11:39.440
Warte mal. Sharp Lab?

03:11:40.440 --> 03:11:42.440
Guck mal, hier kann man das glaube ich ganz gut zeigen.

03:11:43.440 --> 03:11:45.440
Schauen wir das jetzt mal.

03:11:45.440 --> 03:11:47.440
Async.

03:11:47.440 --> 03:11:49.440
Void M. Await.

03:11:49.440 --> 03:11:51.440
Task.

03:11:51.440 --> 03:11:55.330
Delay.

03:11:55.330 --> 03:11:57.330
Jetzt los.

03:11:57.330 --> 03:11:59.330
Ja, so.

03:11:59.330 --> 03:12:04.180
Ach, muss ich das noch importieren?

03:12:04.180 --> 03:12:06.180
Ja, oder so.

03:12:06.180 --> 03:12:08.180
Genau, sowas baut

03:12:08.180 --> 03:12:10.180
C Sharp da draus. Guck.

03:12:10.180 --> 03:12:12.180
Also, wir machen

03:12:12.180 --> 03:12:15.680
mal was anderes.

03:12:15.680 --> 03:12:17.680
Ich weiß ehrlich gesagt gar nicht, wie

03:12:17.680 --> 03:12:19.680
der Delay unter der Haube funktioniert.

03:12:19.680 --> 03:12:24.720
Hier.

03:12:24.720 --> 03:12:26.720
Okay, also.

03:12:26.720 --> 03:12:28.720
Machen wir mal Console.

03:12:28.720 --> 03:12:30.720
Log. Nicht Console. Log.

03:12:30.720 --> 03:12:32.720
Rightline. Wir sind nicht in JavaScript.

03:12:32.720 --> 03:12:34.720
Rightline.

03:12:34.720 --> 03:12:36.720
Boah, ist das eklig hier. Blub.

03:12:36.720 --> 03:12:40.420
So, also.

03:12:40.420 --> 03:12:42.420
Ohne Await ist es

03:12:42.420 --> 03:12:44.420
ziemlich simpel, der Code, was da unter der

03:12:44.420 --> 03:12:46.420
Haube rauskommt. Naja.

03:12:46.420 --> 03:12:48.420
Wait a minute. Warum?

03:12:48.420 --> 03:12:50.420
Ach so, weil es

03:12:50.420 --> 03:12:54.370
Async ist, ne?

03:12:54.370 --> 03:12:56.370
Also. Ohne Async

03:12:56.370 --> 03:12:58.370
Await sieht das relativ straightforward aus.

03:12:58.370 --> 03:13:00.370
Also das ist das, was der Compiler draus macht.

03:13:00.370 --> 03:13:02.370
So. Das erkennt

03:13:02.370 --> 03:13:04.370
man eigentlich relativ gut, dass das, was

03:13:04.370 --> 03:13:06.370
ich hier geschrieben habe, mit dem, was der Compiler draus

03:13:06.370 --> 03:13:08.370
macht, gar nicht

03:13:08.370 --> 03:13:10.370
so viel Unterschied ist.

03:13:10.370 --> 03:13:12.370
Wenn wir das in Async da vormachen und hier noch Await

03:13:12.370 --> 03:13:14.370
reinsetzen, dann wird das Ganze ein bisschen komplizierter.

03:13:14.370 --> 03:13:16.370
Aber was man hier sieht, ist

03:13:16.370 --> 03:13:18.370
an der Stelle, was passiert.

03:13:18.370 --> 03:13:20.370
Die eigentliche Methode hier

03:13:20.370 --> 03:13:22.370
wurde ersetzt durch ein Move Next

03:13:22.370 --> 03:13:25.680
und

03:13:25.680 --> 03:13:27.680
durch jede Menge Ifs

03:13:27.680 --> 03:13:29.680
mit, naja, ich muss

03:13:29.680 --> 03:13:31.680
mehrere Awaits einbauen, sonst sieht man es nicht richtig.

03:13:31.680 --> 03:13:33.680
So.

03:13:33.680 --> 03:13:35.680
Genau. Guckt. Jetzt. Jetzt sieht man es.

03:13:35.680 --> 03:13:37.680
Jetzt sieht man es eigentlich ganz gut.

03:13:37.680 --> 03:13:39.680
Ist ein bisschen hässlich zu lesen. So. Also.

03:13:39.680 --> 03:13:41.680
Meine Main-Methode

03:13:41.680 --> 03:13:43.680
wurde ersetzt durch ein Move Next.

03:13:43.680 --> 03:13:45.680
Das ist das, was quasi der

03:13:45.680 --> 03:13:47.680
dieser

03:13:47.680 --> 03:13:49.680
Async-Scheduler-Gedöns

03:13:49.680 --> 03:13:51.680
da im Hintergrund dann aufruft. Ich glaube,

03:13:51.680 --> 03:13:53.680
irgendwo hier sieht man es auch.

03:13:53.680 --> 03:13:55.680
Hier. Guck. Das ist

03:13:55.680 --> 03:13:57.680
mein eigentliches

03:13:57.680 --> 03:13:59.680
Main und der hat

03:13:59.680 --> 03:14:01.680
den Aufruf von Main ersetzt durch diese

03:14:01.680 --> 03:14:03.680
State-Machine-Bilder, bla, sonst was.

03:14:03.680 --> 03:14:05.680
Zumindest, das wird

03:14:05.680 --> 03:14:07.680
aufgerufen

03:14:07.680 --> 03:14:09.680
anstelle meiner normalen Main-Methode

03:14:09.680 --> 03:14:11.680
wird das aufgerufen. Move Next.

03:14:11.680 --> 03:14:13.680
So. Dann geht er hier durch.

03:14:13.680 --> 03:14:15.680
Guckt erstmal, bei welchem Step ist er.

03:14:15.680 --> 03:14:17.680
Der erste Step ist 0.

03:14:17.680 --> 03:14:19.680
Oder wahrscheinlich ist der erste Step 0.

03:14:19.680 --> 03:14:21.680
Oder Default. Default. Der erste Step ist 0.

03:14:21.680 --> 03:14:23.680
Der Default-Step. Der Default-Step

03:14:23.680 --> 03:14:25.680
ist bis

03:14:25.680 --> 03:14:27.680
zum ersten Await. Bis hierhin.

03:14:27.680 --> 03:14:29.680
Ist der erste Step.

03:14:29.680 --> 03:14:31.680
Dann

03:14:31.680 --> 03:14:33.680
warte mal.

03:14:33.680 --> 03:14:37.310
So. Dann

03:14:37.310 --> 03:14:39.310
queeter das quasi

03:14:39.310 --> 03:14:41.310
im Hintergrund dieses

03:14:41.310 --> 03:14:43.310
Delay. Nennen wir es einfach so, ja.

03:14:43.310 --> 03:14:45.310
Das wird dann gequeet und

03:14:45.310 --> 03:14:47.310
es wird returned.

03:14:47.310 --> 03:14:49.310
Niesen-Leak. Fuck.

03:14:49.310 --> 03:14:51.310
Und es wird returned. Das heißt, diese Methode

03:14:51.310 --> 03:14:53.310
ist jetzt fertig an der Stelle.

03:14:53.310 --> 03:14:55.310
Was jetzt übrig

03:14:55.310 --> 03:14:57.310
bleibt ist

03:14:57.310 --> 03:14:59.310
dass in irgendeiner

03:14:59.310 --> 03:15:01.310
Background-Queue jetzt dieser

03:15:01.310 --> 03:15:03.310
Task-Delay hängt. Also

03:15:03.310 --> 03:15:05.310
dieser Awaiter, wie das C-Sharp nennt

03:15:05.310 --> 03:15:07.310
oder .NET nennt.

03:15:07.310 --> 03:15:09.310
Gammelt der rum. Wahrscheinlich

03:15:09.310 --> 03:15:11.310
in irgendeinem Thread-Pool.

03:15:11.310 --> 03:15:13.310
Eventuell auch irgendwo anders.

03:15:13.310 --> 03:15:15.310
Keine Ahnung, wie das dann intern implementiert ist.

03:15:15.310 --> 03:15:17.310
Vielleicht

03:15:17.310 --> 03:15:19.310
weiß ich was, wie das .NET macht.

03:15:19.310 --> 03:15:21.310
Zumindest gibt es irgendwo eine Queue mit

03:15:21.310 --> 03:15:23.310
anstehenden Tasks.

03:15:23.310 --> 03:15:25.310
Da wird das reingequeet und hier wird returned.

03:15:25.310 --> 03:15:27.310
Und dann

03:15:27.310 --> 03:15:29.310
ist die Methode fertig.

03:15:29.310 --> 03:15:31.310
Was jetzt passiert ist,

03:15:31.310 --> 03:15:33.310
irgendwann ist diese asynchrone

03:15:33.310 --> 03:15:35.310
Task fertig.

03:15:35.310 --> 03:15:37.310
Dann wird das

03:15:37.310 --> 03:15:39.310
aus der Background-Queue

03:15:39.310 --> 03:15:41.310
rausgeholt und

03:15:41.310 --> 03:15:43.310
dann wird wieder diese Methode aufgerufen.

03:15:43.310 --> 03:15:45.310
Allerdings jetzt mit State

03:15:45.310 --> 03:15:47.310
Case 0. Und ihr seht

03:15:47.310 --> 03:15:49.310
Case 0 ist das

03:15:49.310 --> 03:15:51.310
nächste Kommando. Das nächste

03:15:51.310 --> 03:15:53.310
Kommando ist witzigerweise

03:15:53.310 --> 03:15:55.310
wieder ein Async.

03:15:55.310 --> 03:15:57.310
Jetzt macht der hier ein bisschen Optimierungsgeschiss.

03:15:57.310 --> 03:15:59.310
Mit GoTo.

03:15:59.310 --> 03:16:01.310
Aber im Prinzip passiert mehr oder weniger

03:16:01.310 --> 03:16:03.310
das gleiche. Der returnt wieder.

03:16:03.310 --> 03:16:05.310
Hier sieht man auch. Der returnt wieder.

03:16:05.310 --> 03:16:07.310
Wartet bis das fertig ist.

03:16:07.310 --> 03:16:09.310
Springt wieder rein und hat den State

03:16:09.310 --> 03:16:11.310
jetzt auf die nächste Nummer gesetzt.

03:16:11.310 --> 03:16:13.310
Nächste Nummer ist der State.

03:16:13.310 --> 03:16:15.310
Dann springt der wieder raus.

03:16:15.310 --> 03:16:17.310
Der returnt

03:16:17.310 --> 03:16:19.310
immer direkt nach dem Awaiter.

03:16:19.310 --> 03:16:21.310
Queuet das Ganze in irgendeine

03:16:21.310 --> 03:16:23.310
Background-Queue und wenn das fertig ist

03:16:23.310 --> 03:16:25.310
sorgt dieser

03:16:25.310 --> 03:16:27.310
Background-Scheduler

03:16:27.310 --> 03:16:29.310
wie auch immer genau das funktioniert

03:16:29.310 --> 03:16:31.310
dafür, dass die Methode nochmal aufgerufen

03:16:31.310 --> 03:16:33.310
wird und dadurch, dass es eben

03:16:33.310 --> 03:16:35.310
einen State auf einen Schritt weiter

03:16:35.310 --> 03:16:37.310
gesetzt hat, läuft die Methode

03:16:37.310 --> 03:16:39.310
nicht hier oben rein, sondern

03:16:39.310 --> 03:16:41.310
dort rein, was dann der nächste Step ist.

03:16:41.310 --> 03:16:43.310
Also so baut er das im Prinzip im Hintergrund

03:16:43.310 --> 03:16:45.310
um. Und ich würde sagen,

03:16:45.310 --> 03:16:47.310
das war jetzt ganz grob und auch ohne, dass

03:16:47.310 --> 03:16:49.310
ich hundertprozentig weiß,

03:16:49.310 --> 03:16:51.310
wie es im Hintergrund funktioniert.

03:16:51.310 --> 03:16:53.310
Zumindest war da jetzt

03:16:53.310 --> 03:16:55.310
der Async-Await-Step, denke ich,

03:16:55.310 --> 03:16:57.310
halbwegs sichtbar. Und ich würde vermuten,

03:16:57.310 --> 03:16:59.310
dass Javascript unter der Haube

03:16:59.310 --> 03:17:01.310
was recht ähnliches macht.

03:17:01.310 --> 03:17:03.310
Ich glaube

03:17:03.310 --> 03:17:05.310
sogar, die haben sich das von C-Sharp abgeguckt.

03:17:05.310 --> 03:17:08.750
Dieses Feature. Ich glaube,

03:17:08.750 --> 03:17:10.750
C-Sharp hat das zuerst

03:17:10.750 --> 03:17:12.750
und das Javascript-Gremium hat dann gesagt,

03:17:12.750 --> 03:17:16.700
oh, na gut, können wir auch einbauen.

03:17:16.700 --> 03:17:18.700
Und dann kam irgendwann

03:17:18.700 --> 03:17:22.660
das T++-Gremium und hat

03:17:22.660 --> 03:17:30.130
diese Sache hier verbrochen.

03:17:30.130 --> 03:17:32.130
Javascript hat sich gedacht, wir können das

03:17:32.130 --> 03:17:34.130
ganze ja lesbar machen. Und irgendwann

03:17:34.130 --> 03:17:36.130
kam dann das T++-Gremium um die Ecke

03:17:36.130 --> 03:17:38.130
und hat sich gedacht, ach nee,

03:17:38.130 --> 03:17:40.130
machen wir

03:17:40.130 --> 03:17:42.130
das mal lieber irgendwie so, dass es keine Sau versteht.

03:17:42.130 --> 03:17:50.940
Ich hoffe, man hat's

03:17:50.940 --> 03:17:52.940
halbwegs ein bisschen verstanden, Chatge.

03:17:52.940 --> 03:17:56.320
Konnte man mir

03:17:56.320 --> 03:17:59.890
halbwegs folgen? So was

03:17:59.890 --> 03:18:01.890
musste man früher selber machen.

03:18:01.890 --> 03:18:03.890
Ja, früher hat man,

03:18:03.890 --> 03:18:05.890
das stimmt wohl, früher hat man halt

03:18:05.890 --> 03:18:07.890
so Sachen

03:18:07.890 --> 03:18:09.890
nicht so komfortabel machen können.

03:18:09.890 --> 03:18:11.890
Du musstest

03:18:11.890 --> 03:18:13.890
dir selbst, also man macht mir jetzt teilweise

03:18:13.890 --> 03:18:15.890
auch, du musstest dir irgendeine Queue bauen,

03:18:15.890 --> 03:18:17.890
da hast du dann irgendwelche,

03:18:17.890 --> 03:18:21.580
irgendwelche,

03:18:21.580 --> 03:18:23.580
damals waren es noch tatsächlich

03:18:23.580 --> 03:18:25.580
richtige Threads gestartet.

03:18:25.580 --> 03:18:27.580
Damals gab's ja

03:18:27.580 --> 03:18:29.580
oftmals, gab's ja vielleicht auch Task noch nicht.

03:18:29.580 --> 03:18:31.580
Da hast du irgendwelche Threads gestartet,

03:18:31.580 --> 03:18:33.580
die dann ihre Ergebnisse in irgendeine

03:18:33.580 --> 03:18:35.580
Queue gepostet haben. Am Ende musstest

03:18:35.580 --> 03:18:37.580
du die Dinger noch beenden und so.

03:18:37.580 --> 03:18:39.580
Ja, war deutlich

03:18:39.580 --> 03:18:43.660
komplizierter.

03:18:43.660 --> 03:18:45.660
Da musstest du Threads zwischendurch joinen,

03:18:45.660 --> 03:18:47.660
wenn du warten wolltest und so was und dann hing

03:18:47.660 --> 03:18:49.660
dann deine UI, wenn du nicht aufgepasst hast.

03:18:49.660 --> 03:18:51.660
Das ist

03:18:51.660 --> 03:18:53.660
mit Async Await

03:18:53.660 --> 03:18:57.620
deutlich einfacher, ja.

03:18:57.620 --> 03:18:59.620
Da hat's Microsoft aber auch

03:18:59.620 --> 03:19:01.620
ein bisschen verkackt. Das ist

03:19:01.620 --> 03:19:03.620
genau das gleiche wie Timer.

03:19:03.620 --> 03:19:05.620
Timer gibt's auch im .NET

03:19:05.620 --> 03:19:07.620
Framework 30 Milliarden Stück.

03:19:07.620 --> 03:19:09.620
Timer Classes .NET

03:19:09.620 --> 03:19:11.620
Und das liegt einfach,

03:19:11.620 --> 03:19:13.620
guck mal hier, die haben mindestens

03:19:13.620 --> 03:19:15.620
acht verschiedene Timer.

03:19:15.620 --> 03:19:17.620
Stopwatch ist nochmal eine Ausnahme.

03:19:17.620 --> 03:19:19.620
Stopwatch ist ja zum

03:19:19.620 --> 03:19:21.620
Ausführungszeitmessen

03:19:21.620 --> 03:19:23.620
und so. Da gibt's nur eine tatsächlich für.

03:19:23.620 --> 03:19:25.620
Aber es gibt

03:19:25.620 --> 03:19:28.990
Threading Timer,

03:19:28.990 --> 03:19:30.990
System Timer, Forms

03:19:30.990 --> 03:19:32.990
Timer, WPF

03:19:32.990 --> 03:19:34.990
Timer, sonst was, der

03:19:34.990 --> 03:19:36.990
neuste Streich von Microsoft

03:19:36.990 --> 03:19:38.990
ist, ja. Also die haben sich gedacht,

03:19:38.990 --> 03:19:40.990
es reicht noch nicht,

03:19:40.990 --> 03:19:45.140
dass wir hier, ja,

03:19:45.140 --> 03:19:47.140
dass wir hier mindestens vier

03:19:47.140 --> 03:19:49.140
verschiedene Timer haben, die anderen habe ich nicht gesehen.

03:19:49.140 --> 03:19:51.140
Der neueste Streich von Microsoft

03:19:51.140 --> 03:19:53.140
ist jetzt der Periodic

03:19:53.140 --> 03:19:55.140
Timer. Also

03:19:55.140 --> 03:19:57.140
der Timer war nicht genug,

03:19:57.140 --> 03:19:59.140
der Timer war auch nicht genug,

03:19:59.140 --> 03:20:01.140
der Windows Forms, den man hier nicht sieht, Timer

03:20:01.140 --> 03:20:03.140
war auch nicht genug, der WPF auch nicht genug

03:20:03.140 --> 03:20:05.140
und es gibt bestimmt noch deutlich mehr Timer,

03:20:05.140 --> 03:20:07.140
an die ich jetzt gerade nicht denke.

03:20:07.140 --> 03:20:09.140
Periodic Timer, den gibt's erst

03:20:09.140 --> 03:20:11.140
seit, keine Ahnung, .NET

03:20:11.140 --> 03:20:13.140
10 oder so,

03:20:13.140 --> 03:20:15.140
Moment, sie schafft,

03:20:15.140 --> 03:20:17.140
.NET 5, glaube ich, gibt's den erst.

03:20:17.140 --> 03:20:19.140
Periodic Timer,

03:20:19.140 --> 03:20:21.140
der funktioniert nochmal anders,

03:20:21.140 --> 03:20:23.140
da musst du jetzt hier, aber der

03:20:23.140 --> 03:20:25.140
funktioniert ein bisschen moderner, ja.

03:20:25.140 --> 03:20:27.140
Da kannst du jetzt hier sagen, Time Span

03:20:27.140 --> 03:20:29.140
from

03:20:29.140 --> 03:20:31.140
Seconds, so der Timer soll

03:20:31.140 --> 03:20:33.140
alle 5 Sekunden laufen,

03:20:33.140 --> 03:20:35.140
der hat auch noch einen Vorteil,

03:20:35.140 --> 03:20:37.140
Timer, erzähl ich euch gleich,

03:20:37.140 --> 03:20:39.140
jetzt sagst du sowas wie,

03:20:39.140 --> 03:20:41.140
While Timer

03:20:41.140 --> 03:20:43.140
wait for next

03:20:43.140 --> 03:20:45.140
tick async, ich find's auch

03:20:45.140 --> 03:20:47.140
ein bisschen eklig in der Hand,

03:20:47.140 --> 03:20:49.140
aber so würde der neueste Timer

03:20:49.140 --> 03:20:54.690
funktionieren.

03:20:54.690 --> 03:20:56.690
Der Vorteil von dem Timer ist,

03:20:56.690 --> 03:20:58.690
dass wenn ihr zum

03:20:58.690 --> 03:21:00.690
Beispiel hier drinnen ein Sleep

03:21:00.690 --> 03:21:02.690
habt, Sleep 2,

03:21:02.690 --> 03:21:04.690
dass der Timer diese

03:21:04.690 --> 03:21:06.690
Varianzen ausgleicht,

03:21:06.690 --> 03:21:08.690
also wenn ihr sagt, ihr wollt

03:21:08.690 --> 03:21:10.690
wirklich alle 5 Sekunden,

03:21:10.690 --> 03:21:12.690
dass der Timer ausgeführt wird,

03:21:12.690 --> 03:21:14.690
das heißt, wenn ihr hier ein Sleep 2 drinnen habt,

03:21:14.690 --> 03:21:16.690
dann wird der nächste Timer Tick

03:21:16.690 --> 03:21:18.690
nicht in 5 Sekunden sein am Ende,

03:21:18.690 --> 03:21:20.690
sondern in 3 Sekunden, also

03:21:20.690 --> 03:21:22.690
der versucht quasi, dass es nicht so

03:21:22.690 --> 03:21:24.690
nicht so eine große

03:21:24.690 --> 03:21:26.690
Range gibt zwischen den Timer Ticks.

03:21:26.690 --> 03:21:28.690
Ich bin mir gar nicht sicher, ob man das

03:21:28.690 --> 03:21:30.690
nicht sogar ausschalten kann.

03:21:30.690 --> 03:21:32.690
Ne,

03:21:32.690 --> 03:21:34.690
das kann man nicht ausschalten.

03:21:34.690 --> 03:21:36.690
Aber ich weiß nicht,

03:21:36.690 --> 03:21:38.690
was mit Microsoft los ist, warum die 30.000

03:21:38.690 --> 03:21:40.690
verschiedene Timer haben.

03:21:40.690 --> 03:21:42.690
Und dass es in Unity einen eigenen

03:21:42.690 --> 03:21:44.690
Timer gibt, wundert mich nicht. Ich könnte mir durchaus

03:21:44.690 --> 03:21:46.690
vorstellen, dass

03:21:46.690 --> 03:21:48.690
Games da noch ein paar andere Anforderungen haben

03:21:48.690 --> 03:21:50.690
oder ein paar praktische Features brauchen,

03:21:50.690 --> 03:21:52.690
die der Standard Timer nicht so hat.

03:21:52.690 --> 03:21:54.690
Und wahrscheinlich,

03:21:54.690 --> 03:21:56.690
genau, denke ich auch, ist der in

03:21:56.690 --> 03:21:58.690
Unity einfach so gebaut, dass man ihn

03:21:58.690 --> 03:22:00.690
als normaler Mensch

03:22:00.690 --> 03:22:02.690
verwenden kann.

03:22:02.690 --> 03:22:06.260
Wie sieht denn der Unity Timer aus?

03:22:06.260 --> 03:22:08.260
Ich habe von Unity keine Ahnung.

03:22:08.260 --> 03:22:10.260
Sagt mal, nach was muss ich suchen?

03:22:10.260 --> 03:22:12.260
Timetime? Timer?

03:22:12.260 --> 03:22:17.100
Ne.

03:22:17.100 --> 03:22:19.100
Glastimer, hier.

03:22:19.100 --> 03:22:31.760
Das da?

03:22:31.760 --> 03:22:33.760
Ja, das ist auch so der neueste Streich von Microsoft

03:22:33.760 --> 03:22:35.760
hier gewesen mit dem Periodic Timer.

03:22:35.760 --> 03:22:37.760
Das ist ja mal 3 Standard Timer, eigentlich

03:22:37.760 --> 03:22:39.760
5 mit WPF und Windows Forms

03:22:39.760 --> 03:22:43.260
dabei. Und bei den anderen

03:22:43.260 --> 03:22:45.260
Sachen hat es Microsoft halt auch ein bisschen verkackt.

03:22:45.260 --> 03:22:47.260
Es ist ja noch nicht mal

03:22:47.260 --> 03:22:49.260
nur das.

03:22:49.260 --> 03:22:51.260
Dann hast du ja noch Locking-Sachen

03:22:51.260 --> 03:22:53.260
von Hand kannst du ja noch machen.

03:22:53.260 --> 03:22:55.260
Dann kannst du noch

03:22:57.260 --> 03:22:59.260
Atomic benutzen.

03:22:59.260 --> 03:23:03.660
Dann kannst du noch

03:23:03.660 --> 03:23:05.660
irgendwelche Compiler-Keywords

03:23:05.660 --> 03:23:07.660
verwenden, wo manchmal was bringt und manchmal

03:23:07.660 --> 03:23:11.550
nicht.

03:23:11.550 --> 03:23:13.550
Ja, es ist eklig.

03:23:13.550 --> 03:23:18.020
Es ist eklig.

03:23:18.020 --> 03:23:20.020
Dann hast du noch diese ganzen

03:23:20.020 --> 03:23:22.020
Reset-Event-Dinger.

03:23:22.020 --> 03:23:24.020
Auto-Reset-Event,

03:23:24.020 --> 03:23:26.020
Reset-Event-Manual,

03:23:26.020 --> 03:23:28.020
Reset-Event-Slim.

03:23:28.020 --> 03:23:30.020
Also da hat Microsoft echt

03:23:30.020 --> 03:23:32.020
über die Jahre sehr abartige

03:23:32.020 --> 03:23:34.020
Sachen angesammelt.

03:23:34.020 --> 03:23:39.500
Glücklicherweise braucht man

03:23:39.500 --> 03:23:41.500
das alles nur sehr selten.

03:23:41.500 --> 03:23:49.810
Aber das ist erstmal wir.

03:23:49.810 --> 03:23:51.810
Wobei ich es persönlich ganz gut finde,

03:23:51.810 --> 03:23:53.810
dass du ein bisschen mehr Möglichkeiten hast.

03:23:53.810 --> 03:23:55.810
In Go finde ich es zum Beispiel

03:23:55.810 --> 03:23:57.810
viel zu minimalistisch.

03:23:57.810 --> 03:23:59.810
In Go hast du nur sowas wie

03:23:59.810 --> 03:24:01.810
Await-Groups heißt es, glaube ich.

03:24:03.810 --> 03:24:05.810
Und das ist halt ultra-Low-Level.

03:24:09.760 --> 03:24:11.760
Aber mit den Go-Docs werde ich auch nie

03:24:11.760 --> 03:24:34.720
warm. Also JavaScript

03:24:34.720 --> 03:24:36.720
hat sich Async-Await, soweit ich weiß,

03:24:36.720 --> 03:24:43.740
von C-Sharp abgeguckt.

03:24:43.740 --> 03:24:45.740
Ja.

03:24:45.740 --> 03:24:47.740
Chat,

03:24:47.740 --> 03:24:49.740
ich muss jetzt ins Bett. Boomer müde,

03:24:49.740 --> 03:24:51.740
Boomer schlafen. Schön, dass so viele Leute

03:24:51.740 --> 03:24:53.740
dabei gewesen sind. Wenn es euch gefallen hat, könnt ihr mich ja gerne

03:24:53.740 --> 03:24:55.740
followen oder könnt ihr mich ja gerne

03:24:55.740 --> 03:24:57.740
bescheuerter Satz. Ihr wisst, was ich meine.

03:24:57.740 --> 03:24:59.740
Könnt ihr mir ja gerne

03:24:59.740 --> 03:25:01.740
followen.

03:25:01.740 --> 03:25:03.740
Wenn ihr wollt, dass Bezos ins Weltall fliegen kann

03:25:03.740 --> 03:25:05.740
und ihr noch einen Prime-Sub übrig habt,

03:25:05.740 --> 03:25:07.740
ist ja Anfang des Monats.

03:25:07.740 --> 03:25:09.740
Freue ich mich natürlich auch drüber.

03:25:09.740 --> 03:25:11.740
Ihr müsst aber auch nicht mir geben. Guckt halt

03:25:11.740 --> 03:25:13.740
nach Möglichkeit, dass ihr ihn nicht verfallen lasst.

03:25:13.740 --> 03:25:15.740
Gebt ihn irgendeinem random Dude auf Twitch oder so.

03:25:15.740 --> 03:25:17.740
Aber ansonsten ist es

03:25:17.740 --> 03:25:19.740
quasi direkt Geld an Amazon überwiesen.

03:25:19.740 --> 03:25:23.380
Ja. Aber wenn ihr in Zukunft

03:25:23.380 --> 03:25:25.380
wieder mit dabei sein wollt,

03:25:25.380 --> 03:25:27.380
dann könnt ihr jetzt den Follow-Button drücken.

03:25:27.380 --> 03:25:29.380
Sehr laut muss ab und zu sein.

03:25:29.380 --> 03:25:31.380
Und morgen muss ich

03:25:31.380 --> 03:25:33.380
wieder arbeiten. Ich gehe jetzt ins Bett. Wir sehen uns.

03:25:33.380 --> 03:25:35.380
Macht's gut. Bis denn.

03:25:35.380 --> 03:25:37.380
CU. Wollen wir Outromusik?

03:25:37.380 --> 03:25:39.380
Chat, Outromusik?

03:25:39.380 --> 03:25:41.380
Ausnahmsweise? Hä?

03:25:41.380 --> 03:25:44.940
Outromusik?

03:25:44.940 --> 03:25:46.940
Äh.

03:25:46.940 --> 03:25:52.750
Ending-Theme? Jawohl.

03:25:52.750 --> 03:25:54.750
Outromusik.

03:25:54.750 --> 03:25:58.190
WizardGamer. Dankeschön

03:25:58.190 --> 03:26:01.820
für den Sub. Macht's gut, Leute. Bis

03:26:01.820 --> 03:26:03.820
dann. CU.

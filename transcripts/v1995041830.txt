Hallo?
Oh, ich habe nichts zu trinken da.
Egal.
Ich muss mir dann irgendwann die nächste
halbe Stunde oder sowas holen.
Moin Max, was macht's Joggin?
Sag ich dir gleich. Ich muss gerade mein Headset fixen.
Zack.
So, Headset fixed.
So, erstmal checken,
bis Twitch kapiert hat, dass der Stream
online ist. Was macht's Joggin? Also,
ich bin am Sonntag
die längste Runde bisher
gerannt.
Eins, nicht eins, null, elf.
11,2 Kilometer
mit
sechs Minuten
22 pro Kilometer.
Ja,
das bringt's jetzt auch recht, ne?
Mal gucken, wie lange
ich am Start bin. Heute Abend
muss ich definitiv wieder
MMO Kreisegrind machen.
Aber Twitch hat noch nicht gecheckt,
dass der
Stream richtig on ist. Ich sehe das immer an den
Viewerzahlen. Sobald
hier im Chat viel Hallo schreiben und
die Viewerzahlen irgendwie dann mal so
sprungartig irgendwie so auf 70, 80
gehen, da weiß ich, okay,
jetzt hat's Twitch gecheckt. Aktuell sind's
20, jetzt sind's 33.
Das dauert immer ein bisschen, ne?
Twitch ist da nicht so schnell.
Was? Akzentfarbe?
Du meinst Dialekt
oder
oder was?
Welche?
Welche hast du geguckt?
Die mir dem Typ der Hausverbot gekriegt hat
oder das mit dem Storage
oder ich mein, ich hab ja schon ein paar Sachen erzählt
in der Richtung. Exzellent.
Ja, tatsächlich, letztens
kam noch die Frage, wie viel Schnee hier liegt. Da hab ich
gesagt, nichts. Jetzt liegt Schnee
da. Ach,
Taskleistenfarbe. Gut, das liegt
aber bei mir daran, weil meine Taskleiste
ist teils transparent
und deswegen
liegt das liegt am Willows XP Hintergrund.
Das ist die bei mir so grün ist.
Uah.
Also, bei mir hat's jetzt auch
geschneit. Ich hab gerade schon
den Gehweg frei
gebuddelt.
So, Updates alle durch,
glaub ich.
Das mit der Wohnung im dritten Stock, ja, ja.
Das mit dem Storage, genau, ja.
Ich hab ja schon
einige Sachen erzählt.
Meinung zu WSL.
Ich war ein Bogen drum, ehrlich gesagt.
Ich war ein Bogen um WSL.
Also,
auf der Arbeit
tun sie sich eh unglaublich schwer
mit Software freizugeben.
Da haben die noch nicht mal WSL freigegeben bisher.
Lul.
Aber, gut, ich hab meine
Linux VM. Aber
ich muss auch ehrlich sagen, WSL
also,
ich würde WSL nur benutzen, wenn ich echt sonst
gar keine andere Möglichkeit hab.
WSL ist
noch
die beste Möglichkeit
und konsolentechnisch unter Windows,
zu arbeiten, wenn man keine andere Möglichkeit hat.
Weil, ganz ehrlich, PowerShell ist Schrott als interaktive
Shell. Und von
Batch und dem ollen Terminal
wollen wir mal gar nicht reden. Wobei das neue
Terminal wenigstens, wenigstens halbwegs
geht. Immer noch kein Vergleich
zu ordentlichen Terminal, aber immerhin, ja.
Und,
ja, also, wenn ich keine andere Möglichkeit
hab, würde ich auch WSL benutzen.
Aber ansonsten, ehrlich
gesagt, nope.
Ich bin kein großer WSL-Fan.
Das fühlt sich so,
so verkehrt an,
irgendwie. Ich kann das schlecht beschreiben.
So, man hat eigentlich was Cooles,
aber es ist immer noch unter Windows
und es hat immer noch Windows-Eigenheiten.
Ja.
Zum Beispiel, wenn man auf
Laufwerke zugreifen muss, dann musst du auf
MNT, C,
äh, Users,
Dokumente und Einstellungen.
Ganz, ganz weird. Aber wenn man sonst keine andere
Möglichkeit hat, ja, ist WSL
ganz okay. Aber, wie gesagt, ich mach
einen Bogen drum.
Aber, Twitch, was ist heute los?
Also, entweder hab ich eine mega
unglückliche Uhrzeit erwischt zum
Streamen. Montag, 16.17 Uhr.
Oder Twitch hat's immer noch nicht
gecheckt, dass der Stream on ist.
Wir haben jetzt 47 Leute.
Das ist normalerweise
so. Also, ich erkenne das
immer direkt, wenn's Twitch kapiert hat.
Weil dann geht das so von
20 auf 70 hoch und dann weiß ich, okay,
jetzt wurden Notifications rausgeschickt.
Sogar letztens mittags um 12.30 Uhr
hatten dann irgendwie nach 2 Stunden,
auf einmal 200 Leute, wo ich mir gedacht hab, was machen die
mir da alle? Was machen die alle mir das?
Arbeiten. Ja, aber
16.17 Uhr? Lul. Vielleicht ist es
wirklich, vielleicht ist es wirklich super unglückliche
Uhrzeit zum Streamen. Oder,
oder, keinen interessiert das Thema.
Kann ja auch sein.
Ich hab gedacht,
wir machen mal ein paar,
oder, den ersten Tag,
das sind zwei Aufgaben, soweit ich gesehen hab,
a trend of code.
Wir fangen an in C-Sharp, machen weiter
in Rust und gucken, ob wir das in Bash und
C++ und
anderen Sprachen auch auf die Reihe kriegen.
Müssen wir mal gucken.
Bin mal gespannt. So, ich würde, ich würde
eigentlich ganz gerne
mal die Kiste hier rebooten.
Du, du, du, du,
du, du, du, du, du,
du. Ich weiß
nicht, wie lange ich heute Bock hab zu streamen.
Ich sag's euch ganz ehrlich, das liegt aber nicht an euch.
Community-ge kann da
nix für. Ist gar nicht, ob ich das erzählen soll.
Warum nicht?
Weiß nicht, ob das,
ob das so eine sinnvolle Sache ist, wenn ich das erzähle.
Vielleicht erzähl ich's nachher.
So, was macht meine VM?
Ist die wieder da?
Wow,
ich hab schon gedacht, mein Desktop startet nicht mehr
nach dem Reboot.
Susqueh, Kriege, Nudel mit Lachs,
Bässe,
Firefox starten,
zack, Terminal starten,
aber irgendwie ist das aber super laggy, oder?
Ja,
laggt das wieder?
Äh, eigentlich laggt nix.
Ich hatte das ja mal, dass Tastatur-Inputs
gelaggt haben. Vermutlich,
vermutlich ist die VM einfach nur langsam.
So, ähm,
wollen wir die ganzen IDEs aktualisieren?
Ja, ich hab ja Urlaub seit
einer Woche.
Also das ist quasi meine allererste, so
richtige Urlaubswoche.
So, komplette Urlaubswoche.
Ja, Sätge für alle, die noch
arbeiten müssen. Also irgendwas
ist mit Twitch grad ganz, ganz weird.
Leute.
Also entweder hab ich echt die,
ist grad irgendwelche Events, Fußball,
sonst was. Weil normalerweise
schwätze ich am Anfang mal so eine halbe Stunde
oder sowas. Und
wenn dann so 130,
140 Leute am Start sind, dann fangen
wir an. Aber irgendwie checkt
Twitch grad überhaupt nicht.
Moin. Jetzt vielleicht,
jetzt kommen hier so viele, so viele
reingestelzt.
So, jetzt haben wir alles geupdatet.
Wunderbar.
Gucken, ob ASCII-Quarium noch geht. Jawoll.
Wichtigstes, wichtigstes Tool. Tut schon mal.
Ich bin schon eingeloggt. Ich hatte glücklicherweise
Max Pogu noch einen Google-Fake-Account
am Start, wo ich mich hier einloggen
könnte, weil ich hab meine GitHub-Zugangsdaten
gar nicht parat.
Und ich will mich hier, ich will mich hier im
Stream auch nicht einloggen.
Auf GitHub mit meinem normalen Account. Ich hab den
SSH-Key hier, das reicht. Weil
ich hab ja schon mal aus Versehen
fast meine Handynummer geleakt und sowas. Weil es nicht
meine Handynummer war, sondern so ein
äh,
Two-Faktor-Nummer-Handy, aber
das muss ja
nicht unbedingt sein.
Da halt ich auf GitHub
Zeug liegt fast. Deswegen bin ich
immer etwas vorsichtig, mich hier einzuloggen.
Dü-dü.
Jo, und zwar, also,
ja, nachdem's Twitch jetzt ja so, glaube ich,
so langsam aber sicher gecheckt hat, dass das Stream online ist.
Chatkin, wie sieht's bei euch aus?
Moin, Patrick, auch am Start.
Du hast ein Delay
von einer Minute? What?
Ne, bei mir im
Vorschau-Bildschirm ist nix.
Das liegt an dir, du musst mal den
Stream refreshen. Ich seh's, ich seh's
bei mir im Vorschau, du musst mal den Stream refreshen.
Ein bisschen, ein bisschen lag,
ja, okay, aber sagen wir so fünf Sekunden
vielleicht. Schon mal Azure-Container-Registry-Zeug
benutzt. Ne, die
Azure, also,
lass mir, doch, klar, natürlich, doch, doch,
hab ich. Beim letzten Arbeitgeber war
das, war das, aber die, ich hab nie da
wirklich was selbst dran gedreht.
Aber die Kubernetes-Images kamen
aus der Azure, aus einer.
Azure-Container-Registry.
Aber keine praktische Erfahrung selbst mit.
Ich persönlich würde jetzt darauf tippen,
nicht so viel Unterschied zu jeder
anderen Container-Registry oder auch, sagen wir mal,
zu sowas wie der Google-Registry,
wobei das ja
nicht mehr Container-Registry heißt
jetzt, sondern
Artefakte-Registry
oder sowas. Google hat
den Krempel ja umbenannt.
Wär wahrscheinlich zu einfach gewesen,
wenn's den gleichen
Namen gehabt hätte und man sich fast runter...
Weißte, unter Container,
unter Container-Registry
kann sich jeder was vorstellen, unter
Artefakte-Registry dann eher weniger.
Gut, aber damit ist natürlich gemeint,
du kannst mehr Sachen machen, als nur
nur Container reinschmeißen.
Also, Leute, ich hab mir
überlegt, wir machen
heute mal den ersten Tag
Advent, ich wollt sagen
Adventure of Code, vielleicht
auch, ja, Advent of Code
und ich hab
schon ein bisschen reingeguckt,
und ich hab schon ein bisschen reingeguckt,
und ich hab schon ein bisschen reingeguckt,
und ich hab schon ein bisschen reingeguckt,
es sieht auf den ersten Blick
nicht so kompliziert
aus, wobei ich sagen muss,
die zweite Aufgabe für
den ersten Tag, die könnte,
da könnte der, wie soll man,
wie soll man sagen, der Fehler im
Detail stecken, oder der Teufel im Detail
stecken, oder wie auch immer man das mal beschreiben soll.
Ich glaube, auf den ersten Blick
gar nicht so kompliziert.
Auf den zweiten
Blick muss ich jetzt rausstellen.
Den hab ich noch nicht gemacht.
Aber, so vom Gefühl,
vom Gefühl her,
ja, hallo, magst du schon die Weihnachtsstimmung?
Näh, es ist 4.12.
Weihnachtsstimmung
gibt's bei mir vielleicht ab
23.24. oder so.
Ich muss noch Weihnachtsgeschenke kaufen bei Amazon.
Ich weiß nicht, was ich kaufen soll.
Ich weiß auch nicht, was die Leute mir kaufen sollen,
weil, das ist halt das Ding,
ab einem gewissen Alter, ab einer gewissen,
sagen wir mal,
eigenem Einkommen,
ist es halt schwierig,
ja,
den Leuten da irgendwas
zu schenken und sich schenken zu lassen.
Ja,
na, es läuft.
Also, so Chat,
ich sag's euch jetzt, also nicht,
nicht, dass ihr euch heute vielleicht wundert.
Hör ich mich irgendwie anders an, Chatke?
So ein bisschen?
Sagt mal, hör ich irgendwo,
oder üblich, übliche Scheißqualität
vom, vom Audio? Also, ich mein nicht die Audioqualität.
Ich mein so,
ob ich mich heute irgendwie anders anhöre. Ich hoffe ja nicht,
ich hoffe ja nicht, aber, vielleicht, ja, ich weiß nicht, ob ich mich heute irgendwie anders anhöre. Ich hoffe ja nicht, ich hoffe ja nicht, aber,
vielleicht merkt man ja auch.
Vielleicht, vielleicht merkt man ja schon was.
Hör ich ein bisschen nasal an? Ja, das, das, äh,
trifft's ganz gut, aber, ich mein, ich hör mich,
hör ich mich eigentlich,
ich hör mich eigentlich immer ein bisschen nasal an,
aber heute besonders, ja, das stimmt schon.
Ich kann euch, ich kann euch auch ganz kurz
erzählen, was los ist. Nicht, dass ihr euch wundert, falls ich
nachher irgendwie abhau, abhau oder sowas.
Ich war heute Morgen mit Chico beim Tierarzt.
Hab ich ein Bild?
Von Chico?
Ach nee, hier rechts haben wir noch ein Bild von Chico.
Hier, ich hab, ich hab,
hier hab ich nur, hier hab ich nur, äh,
Katz-FPS,
und, äh,
die andere hab ich auch, aber von Chico, von Chico
hab ich gar kein Bild hier drin, von Chico hab ich hier neben was.
Also, Chico wird nicht mehr lange
leben, so wie's aussieht.
Ähm, Chico hat alles
mögliche an Krankheiten, also,
Chico hat Schilddrüsenprobleme, Nierenprobleme,
zu hohen Blutdruck,
und wir haben jetzt, wir haben Blut abgenommen bei
der Katz, und
da waren heute die Ergebnisse da, und die hat
auch viel zu wenige rote Blutkörperchen,
das ist, weil die Niere nicht richtig funktioniert.
Und die hängt
schon echt in den Seilen.
Tierarzt hat
gesagt, es gibt drei Möglichkeiten.
Entweder gleich einschläfern,
das
musste sie uns als Option sagen,
aber weder, weder sie noch wir fanden
das sonderlich toll.
Zweite Option wäre gewesen,
mit Chico öfters in
die Tierklinik fahren, äh, Transfusion
machen und, und alles mögliche, aber
ganz ehrlich, Chico hat immer so
Panik beim Autofahren, und wenn die dann dann
zwei, drei Tage stationär in der Klinik
ist, äh, das, das will ich
der nicht zumuten, ja. Und die dritte
Option ist, ja,
wir gucken mal, wie lange sie noch durchhält,
ja. Es gibt, es gibt theoretisch die
Möglichkeit, weil die zu wenig,
ähm, doch, doch,
doch, doch, gab es, gab es.
Es gibt theoretisch, wieso ist er nicht, ist er nicht
drinne hier? Ähm, also es
gibt theoretisch noch die Möglichkeit, hab ich
auch mal vorhin im Internet ein bisschen geguckt,
da,
also man kann, es gibt Medikamente
gegen, doch, hier ist doch da, gegen
zu wenig rote Blutkörperchen, da gibt's,
kann man, kann man Spritzen geben, alle paar
Tage. Das Ding ist halt, dass
das würde eventuell
vielleicht, das, das kann auch ganz schöne Nebenwirkungen
haben, wobei das wahrscheinlich jetzt nicht mehr so
aussagekräftig ist, äh,
weil, ich mein, ne, an irgendwas wird's sterben.
Ich weiß halt nicht, ich bin echt unschlüssig, ob,
ob man das noch versuchen
soll, weil,
ich mein, die hat alles, Blutdruck,
Schilddrüse, Niere,
zu wenig rote, also ich denk mir halt, wenn man,
selbst wenn man jetzt an einer Ecke
da was dreht,
dann wird das andere schlimmer,
und die hat eh keine
hohe Lebenserwartung, also,
ich weiß echt nicht, ich
red morgen noch mal mit dem Tierarzt, ob das vielleicht Sinn macht,
wie alt die ist, ich glaub 13, 14,
also die ist schon ein bisschen älter, aber meine Katzen
können aber noch 20 plus werden, wenn man nicht so
krank ist wie Chico, ja.
Natürlich denk ich mir jetzt schon so ein bisschen,
wärst du mal früher zum Tierarzt
gegangen, aber ich mein, ich bin mit ihr zum Tierarzt
gegangen, ab da, wo ich halt gemerkt hab,
dass sie sich irgendwie komisch verhält,
ja, ich bin halt nicht
einfach mal auf gut Glück random
zum Tierarzt gegangen, aber wahrscheinlich,
ja,
wahrscheinlich hätt man auch nichts machen können.
Ja, weil die hängen
ziemlich in den Seilen,
guck mal, wie lange das gut geht,
also vielleicht, ich weiß nicht, vielleicht
mach ich das noch mit den Spritzen, je
ne, vielleicht geht's ihr dann nochmal besser,
aber ich bezweifle es, ehrlich gesagt.
Sätge.
Die liegt jetzt grad drüben im Wohnzimmer,
nee, nee, ist es nicht, ist es nicht,
aber, muss man dazu sagen,
ähm, nee, was ich jetzt sagen wollte, erst
vorher noch, die liegt jetzt halt drüben an der
an der Heizung und pennt,
aber die hängt halt voll in den Seilen, ich mein,
immerhin, sie trinkt was und sie frisst was, ist aber halt
ziemlich, ziemlich, ja,
ziemlich schlapp und so
alles.
Der Tierarzt hat schon gemeint, also es kann theoretisch
sein, dass die einfach nachts stirbt,
äh,
wusste schon nicht, was ich sagen soll, ja.
Also nein, es ist keine Rasse Katze,
es ist so eine ganz normale
Mischung
europäische Katze,
die ist nichts, nichts spezielles,
das einzige,
was man wissen muss, ist, Chico ist
eine dreifarbige Katze und
dreifarbige Katzen sind ja eh schon ein bisschen,
ist ja eh schon so ein, ich weiß nicht, wie man das nennen soll,
Gendefekt, so ein bisschen,
weil eigentlich gibt es keine dreifarbigen Katzen,
beziehungsweise, es ist falsch,
ähm, es gibt keine
dreifarbigen Kater, es kann dreifarbige
Katzen geben, aber
die sind glaube ich auch
unfruchtbar, also sprich, wer weiß,
vielleicht haben dreifarbige Katzen,
das weiß ich nicht, auch geringere Lebenserwartung,
weil die vielleicht andere Probleme haben,
ja, aber wie gesagt, Chico hat alles,
Blutdruck, Schilddrüse, Niere,
ähm, zu wenig rote Blutkörperchen,
dadurch Herzprobleme,
ich weiß halt nicht, ob sich das lohnt,
jetzt, für die Katze,
irgendwie großartig da noch was zu machen,
weil wenn das eine jetzt nicht
sie umbringt, dann bringt sie das andere um,
im Endeffekt, ja, also richtig sad
kid time,
deswegen höre ich mich heute vielleicht auch ein bisschen anders
an, und
vielleicht mache ich auch nachher den Stream
aus, ich weiß noch nicht, mal gucken,
aber bisschen Ablenkung mit Broggers-Stells
ist nicht verkehrt, so,
jetzt wisst ihr Bescheid,
ja, wo sind wir denn?
Wo sind wir stehen geblieben?
Wo sind wir stehen geblieben?
Genau, ich habe mir gedacht,
wir können mal ein bisschen,
den ersten Tag, ich meine, die sind mittlerweile
ja schon bei,
guck mal, eins, zwei, drei, heute ist der fünfte,
oder bald, bald der fünfte Tag,
ich habe gedacht, wir können heute mal anfangen,
die, äh, Advent of Code,
ich nenne das mal Challenges,
auch wenn die meisten Sachen nicht so super schwierig
waren, zumindest in der Vergangenheit,
ähm, das zumindest,
soweit ich es gesehen habe, mal anzufangen,
wir gucken uns den ersten Tag an, und ich habe mir
überlegt, wir machen das einfach
in möglichst vielen,
also, wenn es nicht so kompliziert ist,
wenn es nicht so kompliziert ist,
dann machen wir es einfach,
aber dafür in möglichst vielen
verschiedenen Programmiersprachen.
Wir fangen mal an mit einer Programmiersprache,
die ich ganz gut auf die Reihe kriege,
und dann machen wir mal weiter,
ob wir es vielleicht auch in Bash hinkriegen,
oder in Rust, oder in C++,
oder in Ruby, oder in
russischen Dingern. Ich hatte beim zweiten Teil
richtig Spaß. Ja, den zweiten Teil
habe ich schon mal so ganz grob, ähm,
gesehen, um was es
da geht. Das sah auf den ersten Blick
tatsächlich nicht so schwierig aus,
aber auf den zweiten Blick
etwas...
Ja, aber die,
die Tage sind nicht
ansteigend
kompliziert. Assembler
0. Also es kann durchaus sein,
dass Tag 1 deutlich schwieriger ist als Tag 2.
Ich meine, potenziell wird Tag 1
nicht so hart sein.
Das wollen ja nicht alle Leute verschrecken.
Ach ja, und ich glaube,
also, ich bin mir da gar nicht sicher,
wer das veranstaltet. Veranstaltet das
GitHub, oder wer macht
das eigentlich?
Wer, wer organisiert
das eigentlich?
Ach, Twitter, es sagt ja, habe ich ganz vergessen,
außerdem heißt es nicht mehr Twitter, sondern X.
Oder ist das irgendwas unabhängiges?
Ach nee, der Erik Wasel.
Wasel.
Ach, das wusste ich gar nicht. Ich habe gedacht,
da steckt irgendeine Firma dahinter.
Interesting.
Ja gut.
Dann,
wenn es uns gut gefällt,
kann man das sponsoren.
Mal gucken.
Können wir, können wir vielleicht,
wenn wir alles durch haben und es hat uns gut gefallen,
können wir vielleicht ein bisschen was donaten.
Tag 1, Teil 1 ging in 5 Minuten von der Hand,
bei Teil 2 hatte ich keinen Bock mehr.
So schlimm, ja? So schlimm.
Fuck, Alter.
Ich will jetzt nicht live
versagen on stream, ey.
Habe ich eigentlich keinen Bock drauf.
Can't wait.
Chat, nein, nein,
Chat-GPT mache ich nicht.
Ich meine, wisst ihr, was wir machen können?
Wir können Chat-GPT mal
fragen, ob Chat-GPT eine ordentliche Lösung
für hätte.
Das können wir machen.
Chat-GPT.
Das kann ich off-screen mal einloggen.
Aber wir fragen erst danach.
Erstmal machen wir das Ganze von Hand.
Erstmal machen wir das Ganze von Hand.
Also, ich würde sagen,
ich habe keine Ahnung, was mit Twitch los ist.
Wie gesagt, entweder habe ich eine super schlechte Zeit
zum streamen erwischt, das Thema juckt keinen
oder die Leute müssen halt arbeiten
und sind gerade auf dem Heimweg.
Aber nichtsdestotrotz, wir fangen jetzt einfach mal an.
Du wolltest eine schöne Lösung bauen,
aber das wäre nicht schön geworden.
Ja, ich bin mal gespannt, was da rauskommt.
Also, folgendermaßen
funktioniert das Ganze.
Es gibt einen Kalender von 1 bis 24.
Wer hätte das gedacht?
Bis 25 und 26 noch?
Nee, ich glaube,
bis zum 25. muss man fertig sein.
So ist es.
Also, quasi vom 1.
bis zum 24.
gibt es jeden Tag
eins bis mehrere,
ich weiß nicht, wie viel maximal pro Tag,
gibt es Aufgaben,
die man lösen soll.
Und das ist die erste Aufgabe.
Wir gehen hier mal, wir gucken mal,
lass uns das mal kurz übersetzen.
Okay, also, es wird übersetzt.
Oh, nee.
Ja, da geht es, komm.
Guck mal, wir müssen uns,
wir müssen uns,
okay, ich habe eine Idee.
Pass mal auf.
Trick 17, das machen wir weg.
Und
jetzt, wir machen einfach
das Intro weg, okay?
Das passt schon.
Also, das Intro
ist eh einfach nur so
Flavortext. Im Endeffekt,
ja, das, was falsch läuft mit der
globalen Schneeproduktion,
das ist für die Aufgabe, was wir
eigentlich machen müssen, vollkommen unerheblich.
Okay, hey, man muss sagen,
heute funktioniert zumindest die
Frankfurter und Hanauer Schneeproduktion,
weil ich musste schon die Straße
kehren, vorhin.
Ja, also, die globale Schneeproduktion
hat Probleme.
Und wir wurden ausgewählt, uns das Ganze
anzugucken.
Die Elfen haben uns eine Karte
gegeben. Auf der Karte
haben sie Sterne benutzt,
um die 50
Orte zu markieren,
die Probleme haben mit der Schneeproduktion.
Alles klar? So.
So, und jetzt,
wir machen das schon relativ lang und wir kennen uns
auch super krass aus mit der, mit,
wie man die Snow Operations
wieder restauret.
Und wir müssen bis zum 25.
Dezember alle 50
Sterne gelöst haben.
Äh, gecheckt haben.
Ja, auf der Karte.
Wie gesagt, das hat überhaupt nichts mit der eigentlichen
Sache zu tun, das ist einfach nur bla bla
bla bla bla.
So, also, und jetzt können wir uns das Ganze
auf DeepL weiter angucken.
Sammle Sterne durch das Lösen
von Rätseln. An jedem Tag des Adventskalenders
werden zwei Rätsel zur Verfügung
gestellt, ja, also von 1
zu 8, 25 gibt's auch noch, okay.
Äh, das zweite
Rätsel wird freigeschaltet, wenn du das erste Rätsel
gelöst hast. Für das Rätsel gibt
es 1, 1 Stern. Viel Glück.
So, und jetzt kommt die
Aufgabe für heute dran,
beziehungsweise nein, eigentlich die Aufgabe von
vor vor vorgestern kommt jetzt dran.
Du versuchst zu fragen, warum sie nicht einfach eine
Wettermaschine benutzen können. Nicht
stark genug, wo sie sich überhaupt, okay. Ganz ehrlich,
wir können uns den Flavortext sparen, oder?
Wichtig ist eigentlich nur das
hier. Einer der jungen Elfen
hat's verkackt mit der Snow Production
und deswegen müssen wir das Ganze jetzt fixen.
Unsere eigentliche Aufgabe ist folgendes.
Es gibt
ein Dokument, das, also
das ist im Prinzip das, um was es jetzt geht, ja.
Es gibt ein Dokument
mit ganz vielen verschiedenen
Textzeilen
und das ging kap...
das ist kaputt gegangen und
jede Zeile hat ursprünglich
ein Calibration Value
enthalten.
Und den muss man wiederherstellen.
In jeder Textzeile
steht
dieser
Calibration Value
und den kann man
rechnen ist das falsche Wort, den kann
man erkennen daran, dass man
wenn man die erste Nummer oder die erste
Zahl, die erste Zahl
in der Zeile und die letzte
Zahl in
der Zeile, wenn man die
kombiniert, dann
bekommt man den Calibration Value raus.
Also hier gibt es ein paar Beispiele.
1, a, b, c, 2 ergibt
Calibration Value 12.
Das da ergibt
3, 8
ergibt Calibration Value
38 und das hier guckt er
1, 5
ergibt Calibration Value 15.
Also es zählt immer die erste Zahl
pro Zeile und die letzte Zahl pro
Zeile und
die letzte gibt 77, das heißt
sollte nur eine Zahl in der
Zeile stehen, dann muss man
die erste Zahl vermutlich
wiederholen. Ich weiß
es nicht, ich habe es noch nicht ausprobiert.
Ich habe keine Ahnung, wir werden es gleich sehen.
Das hier klingt tatsächlich nicht so super kompliziert.
So und am Ende
müssen wir alle diese
Zahlen, alle diese Calibration Values
also jede Zeile in diesem Textdokument
kommt eine
zweistellige Zahl raus
und die müssen wir zusammenrechnen
und dann
hier unten eintragen und gucken
ob es stimmt. Es ist ein bisschen wie
ZServer, nur für Programmieren.
So, to begin, get your puzzle input.
Auf geht's, das ist mein Puzzle
Input. Alter!
Okay, ist schon ein bisschen
was, sind schon einige Zeilen
und hier sieht man, so sehen die Zeilen aus
und zum Beispiel, wenn man sich diese Zeile hier anguckt
müsste rauskommen
ähm
1, 1
also 11 müsste rauskommen.
Die erste Zahl und die letzte Zahl.
So und in Zeilen, wo es mehrere
Zahlen gibt, zum Beispiel wie dem hier
wäre es 7
und 3. Also es zählt immer nur die erste
Zahl und die letzte Zahl. Wohlgemerkt
Zahl, lasst euch nicht verwirren
dass hier sowas wie 7
und 4 und 1 und 3 drinnen steht.
Es zählen wirklich nur Zahlen.
Keine Wörter, die Zahlen
beschreiben, sondern wirklich nur Zahlen.
Ja dann machen wir das doch mal. Legen wir doch mal einen Ordner an.
Die erste Aufgabe klingt
nicht zu kompliziert. Wir können ja mal, bevor wir anfangen
gibt es Zeilen ohne
Ziffern. Das weiß ich nicht, aber den
Fall werden wir auf jeden Fall behandeln.
Dann werden wir einfach mal eine Exception werfen und mal gucken
ob es Zahlen ohne
Input gibt. Müssen wir mal gucken.
Ja. Müssen wir auch
wir können auch gleich greppen.
Nein, die ausgeschriebenen Zahlen zählen
nicht.
Es zählen nur wirklich
Digits im Endeffekt.
Also ich weiß nicht wie, also nur Zahlen.
Halt echte Zahlen, so 0 bis 9.
Und nicht die Wörter.
Und
auch wenn es kompliziert aussieht. Also wir können immer
kurz überlegen. Achja und wenn
es hier nur eine Zahl pro
Zeile gibt, dann muss man die wiederholen. Dass man immer
eine zweistellige Zahl hat.
Wir können uns ja mal kurz überlegen, wie
man das ganze machen könnte,
bevor wir anfangen. Ich würde sagen, wir legen
jetzt aber schon mal den
Ordner an.
Wir legen schon mal den Ordner an. Und zwar geben wir hier
Repos.
MK Deer.
Advent Champ.
Advent Champ
2023.
Best...
Ok.
MK Deer 01.
01, 1.
Weil ich weiß, dass manche Tage
2
Aufgaben haben.
Erstmal ein Struktogramm malen, genau.
Ich glaube für das erste
könnte man theoretisch sogar noch relativ
easy ein Struktogramm malen.
Ok.
01, 1.
Hier.
Wim Input
TXT.
Z Paste.
Und jetzt kopieren wir mal diesen ganzen Shit hier rein.
Wir haben 1000 Zeilen.
Ja und das ist halt
definitiv zu viel, als dass man mal kurz
von Hand sich das einfach anguckt, ohne was
zu programmieren.
Ich glaube auch in .NET wird das nicht sonderlich schwer.
Ok. Machen wir mal
ein Git Repo raus.
Ich hoffe meine NAS wird echt mal
wieder frei demnächst.
Aber heute war es
Sad Git Time.
Da hört man sich halt ein bisschen so an.
Kann man auch nichts machen.
Was? Was habe ich denn?
MK Deer Init. Alter, ich wollte Git Init machen.
Git Init.
Lul weh.
So, kopieren wir mal kurz unser
Shit Ignore File hier rüber.
.
Das, das, das, das, das. Ja ok.
Falls wir Rust rein machen, das auch.
Ok. Alles klar.
Alter, ich kann ja mal tippen.
Ich bin da schon drin. Ok.
.NET, .NET New Console.
Auf geht's. Let's
go.
Für die zweite brauchst du aber zu 90%
die erste auch, bzw. das
Parsen davon. Mal gucken.
Mal gucken.
Ok. Auf geht's.
Dann würde ich sagen,
sind wir mal ganz furchtbar korrekt.
Git Add, Git Commit,
Init. Ok.
Git Status.
Ähm.
Ich würde, ich würde eigentlich sagen,
ich leg mal ein
GitHub Repo an.
Das Ding ist,
ich bin nicht eingeloggt gerade
auf GitHub.
Muss ich mal nachher gucken.
Vielleicht logge ich mich hier
auf dem zweiten Bildschirm ein.
Also heute, ich bin mal
am gucken. Wir machen, wir fangen auf jeden Fall
NC Sharp an.
Und dann machen wir vielleicht weiter
mit Rust. Und mal gucken,
wie kompliziert die Sachen überhaupt sind.
Ok.
Also.
.NET Run.
Schauen wir mal.
Ja, ich mein, ganz viele Sachen sind
JavaScript und Python, vermute ich mal.
Weil es einfach so mit die beliebtesten Sprachen sind zur Zeit.
Hello World. Gut. Kunst.
Da wollen wir mal loslegen.
Der IronChamp 3000 ist auch schon am Start.
Öffnen.
AdventChamp.
01.
Bam.
Haskell und Oka.
Was denn noch? Fortran und Erlang, oder was?
Ja, mal gucken.
Also ich werd's auf jeden Fall zuerst
in der Programmiersprache machen, von der ich ein bisschen Ahnung hab.
Bevor ich das in Rust mache.
Weil Rust packt mich
immer übelst ab, weil irgendwas nicht funktioniert,
so wie man sich das vorstellt.
Gut.
Also.
AdventChamp01.
.NET Run.
Programm.
Let's go.
Wir brauchen heute nicht so viel Platz, denke ich.
Also.
Der Anfang ist tatsächlich einfach.
Ich würd sagen.
Input. File. Read all lines.
Machen wir mal.
Input. TXT.
So, das sollte jetzt 1000 rauskommen.
Hoffe ich mal.
Ja, 1000. Alles klar.
So. Textdatei.
Also ihr seht, Input. Input. TXT ist meine Textdatei,
wo ich das rausfinden soll.
Nochmal für alle, die am Anfang nicht dabei waren,
weil Twitch grad irgendwie super pepega ist.
Mit dem Verschicken
von Notifications und Anzeigen, dass der Stream online ist.
Ich erklär's nochmal kurz.
Also, wir haben eine Textdatei mit
1000 Zeilen.
Und unsere Aufgabe ist,
in jeder Zeile
die erste Zahl und
die letzte Zahl rauszusuchen.
Die zu kombinieren.
Als zweistellige Nummer.
Im Endeffekt als zweistellige Zahl.
Und das dann pro Zeile
zusammenzurechnen.
Und am Ende ist das
quasi diese Summe, die da rauskommt,
ist das
Lösungs-Code-Wort.
Und es zählt immer nur die erste
und letzte Zahl. Also in dem Fall hier
4 und 6.
Und das dazwischen zählt nicht. Und lasst euch nicht verwirren.
Die Zahlen,
die hier drinnen stehen,
ausgeschrieben, die zählen nicht.
Es zählen wirklich nur echte
Zahlen.
Okay. Also.
Auf geht's.
Ich würde sagen,
wir machen erstmal eine Schleife.
Schleife ist
nie verkehrt, wenn man mehrere Zeilen
Input hat.
Line.
Und jetzt müssen wir uns überlegen, was machen wir
hier noch?
Wie kriegen wir das raus? Können wir sowas machen
wie, gibt es sowas wie
Digit oder sowas?
Wir können das mit RegEx machen.
Wir können das mit RegEx machen.
Leute.
Ihr kennt ja den alten Spruch.
Willst du ein Problem mit RegEx lösen,
dann hast du auf einmal zwei Probleme.
Aber ich denke, in dem Fall
wäre es gar nicht so blöd, das mit einem
RegEx zu machen.
Also ich sehe da prinzipiell zwei Möglichkeiten.
Wir könnten entweder
sowas in der Richtung machen, wie
boah, lasst mal überlegen, wie
Line
irgendwie
Where
Character is Digit.
Hat der Character nicht
Ich bilde mir ein,
oder war das Char is Digit?
Ist Digit, genau so.
Ähm
Ja, also sowas
hier in der Richtung, wobei
und
das halt fürs erste und letzte.
Das
würde, oder
vielleicht
können wir auch irgendwas mit Index Off oder so
machen. Aber ich würde sagen,
wir probieren es mal mit einem RegEx.
Nee, RegEx ist nicht verboten.
Ich glaube RegEx ist genau hierfür richtig gut.
Ja, also irgendwie
sowas in der Richtung könnte man wahrscheinlich
auch machen. Wobei, dann müsste man nicht
Where, dann müsste man wahrscheinlich gucken
irgendwie
wie Select ist
und dann irgendwie gucken ist Digit. Wie auch immer.
So will ich es gar nicht, so will ich es eh nicht
machen. Also ich würde sagen, wir
probieren es mal mit einem RegEx.
RegEx bietet sich an der Stelle tatsächlich einfach
an. Machen wir hier RegEx
gleich New RegEx.
Ich verwende RegEx
in .NET so selten.
Ich
bin mir jetzt gar nicht mehr so sicher.
Es ist auf jeden Fall nicht so, sondern
es ist so. So, Pattern.
Okay, Pattern
kann ja einfach eine Zahl sein.
Digit,
non-digit, digit
und
genau eine, please.
Nicht mehrere,
genau eine.
So und ich hoffe,
dass meine RegEx-Magic
noch passend genug ist,
dass das jetzt
auch funktioniert. Okay.
Und jetzt müssen wir sagen,
nee, warte mal, wie ging das jetzt nochmal? RegEx?
Was haben wir denn für RegEx-Options?
Man konnte doch hier
Multiline, wollen wir nicht. Single Line.
Single Line ist nicht sogar
Default.
Compiled. Compiled!
Leute.
High Performance
RegEx Matching.
So, und jetzt können wir
gucken,
das Right to Left,
das brauchen wir bei uns nicht.
So, RegEx
Matches
Line, würde ich
mal sagen. So.
Schauen wir mal, ob das funzt.
Found.
So, jetzt sollten wir die
Anzahl der
Zahlen pro Zeile
rausbekommen.
Ach ja, Leute,
übrigens,
ihr könnt,
wenn ihr, also,
ich muss das anders sagen,
ich will keine kompletten Lösungs-Spoiler
haben, aber wenn ihr euch untereinander
ein bisschen austauschen wollt, ohne direkt
die Lösung reinzuschreiben, oder wenn ihr
ein bisschen backseaten wollt bei mir,
das ist heute erlaubt, ja, also ihr könnt
ein bisschen spoilern, oder ihr könnt ein bisschen
sagen, wie ihr es gemacht habt oder so, aber nicht
einfach die Lösung irgendwie reinpasten.
Ja, oder auch,
irgendwie sagen, hier,
irgendwie drei, irgendwie fünf
Zeilen Source Code reinpasten oder so, ist das nicht.
Ihr könnt backseaten
und ihr könnt
selbst euch irgendwie dazu auslassen.
So, also, jetzt haben wir fünf,
jetzt wissen wir die Anzahl
der, die Anzahl
der
Nummern oder
der Zahlen pro
Zeile.
Wir könnten jetzt eigentlich mal ein neues
PC Sharp Feature verwenden, nämlich
Pattern Matching, probieren wir das mal
aus, ob ich das aus dem Kopf auf die Reihe
gehe. Nennen wir es mal Matches
und jetzt, ähm,
was will ich denn jetzt eigentlich
ausrechnen? Ich will,
weiß ich noch nicht, lul,
ich bin mir noch etwas unschlüssig,
was ich da eigentlich machen will.
So, jetzt können wir sagen, Matches
Count Switch.
So, und da
kann man jetzt,
weil .NET
8 Magic,
da kann man jetzt sagen, okay,
wenn das,
also, wir müssen uns jetzt überlegen,
was, was gibt es denn, was gibt es denn für
Fälle?
Es gibt den Fall, wir haben
keinen Match,
wir haben
den Fall, es gibt, also, ne, es
könnte sein, wenn wir uns das hier mal angucken, wir kennen ja
den Input nicht, also, es könnte
sein, dass wir keine Zahl auf der
Zeile haben, das wäre auf jeden
Fall ein Fehler, dann wäre die Aufgabe nicht lösbar,
es könnte sein, dass wir nur
eine Zahl auf der Zeile, auf der,
auf der Zeile, so wie hier, ne, hier gibt es nur
eine Zahl auf der Zeile, und es könnte
sein, dass wir zwei und mehrere
auf der, auf der Zeile haben.
Also, würde ich sagen,
bei 0, machen wir es mal so,
bei 0,
äh, throw
new exception,
war mal irgendwie so,
was, äh, chat,
was ist das Problem?
Ach so, ja, gut,
weil es, ey, so, bei
einem gibt es auf jeden Fall einen
String zurück, und bei zwei,
bei zwei gibt es auch einen String zurück.
Ähm,
äh,
äh,
lass mal überlegen,
bei einem Match
will ich
den ersten Match zweimal
wiederholen, sehe ich richtig, ne?
Also, gehen wir, Matches,
Matches,
0,
oder wir können auch sagen, first, first,
aber first ist da irgendwie ein bisschen
sprechender, außerdem crasht es,
Moin, Dark,
Dark Zone, danke für, für irgendwelche
Subs, falls es welche gegeben hat,
die ich übersehen hab, ähm,
Stream Manager, ähm,
Patrick hat gestern subscribed, nee, heute nicht.
Oh, gut.
Alles klar.
Gut.
Also, wir wollen,
lass mal kurz, big, big brain
moment uns
überlegen. Also, wenn,
wenn
er nur eine Zahl auf der Zeile
findet, dann möchte
ich den ersten Match
einfach wiederholen.
So.
Wenn es zwei matcht,
dann will ich genau das gleiche machen,
aber
den ersten und
letzten Eintrag, ja?
Also sprich, wobei, jetzt könnte ich
auch ja sagen, größer zwei, weil es letztendlich
egal ist. Okay,
also, findet er nur null,
dann gibt's ne Exception. Findet er nur
eine Zahl auf der Zeile, dann wird die
doppelt wiederholt, also in dem Fall
22 draus gemacht. Findet er
größer gleich
zwei, ist
first und last nicht auch valid?
Ähm,
ja, first und last müsste
das gleiche sein, das ist korrekt.
Ich bin
möglich?
Du, du, das ist ne gute,
das ist ne gute Frage.
Theoretisch ja, ja, ja,
doch, theoretisch.
Theoretisch ja, würde
ich. Leute,
ich glaube, wir können das übrigens noch,
noch viel mehr vereinfachen. Guckt mal.
Ich hab ne Idee. Können wir nicht einfach
sagen, die Exception gibt es
bei kleiner gleich null?
Und
Default Case ist
das hier. Returned Matches
first. Da bin ich mir nicht ganz
sicher. Matches first sollte eine
ein, ein
Match return, die klasse Match, aber
ich glaube, die lässt sich
so implizit zu nem String konvertieren.
Schauen wir mal. Lull.
Gucken wir mal, was da rauskommt. Mal gucken,
ob's, ob's crasht. Ne?
Okay, das scheint zu funktionieren.
Ob es, ob es stimmt?
Wieso kann man nicht
mit Amazon Prime subscriben?
Bist du aufm Handy? Aufm Handy geht das
nicht. Aufm Handy geht das nicht,
weil
irgendwelche Abgaben für den App Store.
Ne, am Desktop?
Dann,
dann weiß ich nicht, warum
nicht. Aber
gestern haben noch Leute
Prime subbt, also mich würde es wundern, wenn ich
Leute, ich glaube, es ist jetzt der passende
Zeitpunkt, um auszuprobieren, ob Prime
sub nicht vielleicht kaputt ist.
Außerdem, außerdem muss, muss Jeff
ins Welt, wobei, ne, der will ja gar nicht
mehr ins Welt, Alter.
Du hast eben mit Prime gesubbt, hat man aber nicht gesehen.
Ich hab nix gesehen.
Vielleicht ist es gerade kaputt gebroken.
Wurde nix angezeigt.
Ach ne, nicht bei mir. Woanders.
Lull.
Hier bist, weil hier bist du ja schon.
Ne, keine Ahnung.
Was? Es kam ein Alert? Ich hab doch eben geguckt.
Creator Dashboard?
Tatsächlich?
Cbdev? Ich hab, okay,
keine Ahnung, was da wieder los ist mit Twitch.
Dankeschön für den Prime sub.
Ne, ich hab wirklich nix gesehen.
Kannst auch den kleineren Input, Beispiel
Input nehmen, dann kannst du checken, ob alles stimmt.
Ja. Bis jetzt sieht es ja noch
halbwegs überschaubar aus. Also,
jetzt haben wir
ein String
mit erster und letzter
Zahl pro Zeile.
Heißt im Endeffekt,
das einzige, was wir theoretisch
machen müssen, wäre
das als int
parsen. Lull
als int parsen. Schauen wir mal, müsste der gleiche
Output geben. Jetzt mal
eine dumme Frage.
Warum ist das so abartig
langsam?
Ah, ne, jetzt ist es schneller.
Okay, was auch immer.
Geht noch. Nice, danke für den Sub.
Pogu.
Der Scam Train ist am Start,
Leute. Wenn wir das hier gelöst haben,
muss ich mal kurz runter in die Küche und was
zu trinken holen. Ich hab übelst Durst.
Weird Champ.
Komisch. Ach, manchmal. Man muss das
bei Twitch nicht so hinterfragen.
Das klappt manchmal einfach nicht.
So, also,
jetzt haben wir die Zahl. Theoretisch
müssten wir jetzt das einfach nur zusammen
rechnen. Okay, ich hab ne Idee, Leute.
Wir könnten jetzt jetzt Easy Mode machen.
Hier, Count gleich.
Sowas hier. Count
plus gleich. Irgendwie so.
Aber,
das wäre,
das ist mir zu einfach.
Legt das an
regexcompile, dass das so lange dauert?
Okay,
50.397 kommt da
angeblich raus. Wir machen das nicht so.
Ich hab ne bessere Idee. Wir machen das
so. Wir schreiben jetzt einfach das
hier oben um. Und zwar
als Input
select line.
Wir machen dann link
query draus.
Und sagen jetzt
result gleich.
Und jetzt hier hinten sum.
Was hab ich falsch gemacht?
Ach so. Return int
pass lul.
Warum geht mein Auto
komplett nicht? Result.
So, Chat hier.
Ich würde sagen, das sieht doch ganz gut aus.
56.397
kommt da raus.
Wollen wir mal gucken,
ob es stimmt.
Gucken wir mal.
Susquee
Acreege.
Chat, bevor ich das jetzt eintrage. Glaubt ihr,
es stimmt?
Also, ich persönlich denke, ja.
Weil, das ist nicht sonderlich kompliziert
gewesen bis jetzt.
Wie lautet
denn die Aufgabe?
Ich erklär das nochmal kurz.
Die Aufgabe lautet folgendes. Wir haben hier
eine Datei mit 1000 Zeilen.
Und in jeder
Zeile gibt es
Zahlen. Und es
zählen nicht die Wörter, sondern es zählen wirklich nur die Zahlen.
Und wir sollten
die erste Zahl und die letzte
Zahl pro Zeile nehmen.
Daraus eine zweistellige Zahl
machen. Und dann
das, was pro Zeile rauskommt,
über alle 1000 Zeilen summieren.
Im Prinzip
das hier, was ich mache.
Wir haben hier den Regex für genau eine Zahl.
Dann
matchen wir
die aktuelle Zeile auf den Regex.
Oder der Regex matcht die Zeile, je nachdem,
wie man das nennen will.
Dann gucken wir, wie viele Matches es gab.
Gibt es kleiner gleich null
Matches,
ist das auf jeden Fall ein Fehler und die Aufgabe wäre
nicht lösbar.
Gibt es
quasi größer gleich
eins an Matches,
dann nehmen wir den ersten Match
und den letzten Match. Bei einem Match ist
der erste und der letzte Match das gleiche.
Das kombinieren
wir zu einem String. Also in dem Fall
wird dann der String 4 4
hier draus. Oder hier
6 9. 69.
Ne, doch.
69. Und
das passen wir als
int und dann
Summe drüber. Ok.
Dann
probieren wir mal, ob das stimmt.
56.379
kommt raus.
Submit. Bam!
Und? Das ist die richtige Antwort!
OMG!
Wieso der Switch und kein If?
Ehrlich gesagt könnte man an der Stelle
genauso gut ein If nehmen.
Ich habe den Switch gemacht aus zwei Gründen.
Erstens, weil ich ein neues
Sub-Feature verwenden wollte und
zweitens, weil ich zu dem Zeitpunkt, als ich den Switch
geschrieben habe, noch dachte, wir brauchen
mehr als einen Case oder als zwei
Cases. Und das hat den Vorteil,
wir können direkt das Ergebnis einer Variable
zuweisen. Macht es ein bisschen kürzer, knackiger.
Ich glaube, Rider bietet übrigens auch an,
dass man es direkt in If-Statement
umwandeln kann.
Wobei, seriously?
Ich finde das sehr hässlich gerade.
Da ist mir
das hier tatsächlich lieber.
Warum regex? Warum nicht regex?
Regex ist das erste, was mir so
spontan eingefallen ist, wie man
easy beliebig viele
Digits pro Zahl splitten kann.
Oh, wartet mal, wartet mal.
Ich hole mal was zu trinken.
Da bin ich.
Ah, lull.
Was ist denn die Hetze, Alter?
Okay.
Nee, gerade mit Teil 1 fertig geworden.
Kann man nicht persönlich
kennenlernen. Du kannst
Prime subscriben.
Das ist das nächste, was es an persönlich
kennenlernen gibt.
Nein, ich bin noch nicht bei Teil 2.
Line first.
Char is digit.
Müsste dir das regex ersparen.
Das ist eine gute Idee.
Aber...
Ja, du hast recht.
Wir könnten, wir könnten theoretisch
Theoretisch könnten wir sowas
hier machen. Guckt mal.
So, first line.
First
Char is digit.
Ja.
Mit dem Chat kann man sich auch gut über PC
Zeug unterhalten. Generell
haben wir hier richtig viele high IQ Leute am
Start.
Theoretisch, theoretisch müsste
es so auch gehen, oder?
Erster, erster digit, zweiter digit.
Theoretisch, theoretisch müsste es so auch gehen.
Warum mal two?
Erst. Ja.
Ja, geht genauso, geht genauso.
Kennst du die
Festo-Coding-Challenge?
Nein, kenn ich nicht.
Wir können das aber auch, wir können das aber auch.
Wir haben noch ein paar Sachen am Start.
Ähm, was ist denn hier?
DevOps-Challenge. Wir müssen, wir müssen, wir haben übrigens
die Z...
Die Z-Server ist immer noch nicht fertig gemacht.
Ja.
Excellent.
So.
Ahem.
Also ich muss sagen, ich glaube,
ich finde,
die Variante sogar noch ein Ticken schöner.
Guck, ist sehr, sehr schön
kurz und
knackig, oder?
Fällt mir mal noch was kürzeres ein?
Ich mein, die richtig krassen,
die richtig krassen Link-Hackermans machen das
garantiert in einer Zeile.
Das finde ich, finde ich,
finde ich eigentlich eine ziemlich, ziemlich schicke
Lösung, so.
Ähm.
Welchen Beruf hast du gelernt?
Ja, ich hab in der
Systemintegration gelernt, 2007.
Ist schon ein bisschen her.
Wirft Match First eine Exception?
Ja, korrekt.
Du hast recht.
Das wirft eine irgendwie Empty Collection
oder sowas, Exception.
Eigentlich bräuchten wir das Switch dann gar nicht.
Ja. Ja, korrekt, korrekt.
Wobei in dem Fall, so ist es, so ist es auch okay.
Ich mein, wir könnten, wir könnten
ganz abenteuerlich sein.
Wir könnten ganz abenteuerlich sein.
Man könnte das, man könnte das relativ problemlos
in, in
eine Zeile packen, ne.
Also wir könnten quasi sagen, hier
Last. Zack.
Und jetzt sagen wir einfach
so.
Aber
ob das jetzt besser lesbar ist,
ich
weiß nicht, Leute.
Findet ihr das jetzt so besser oder
das davor? Ich muss ehrlich sagen, das
davor fand ich ein bisschen besser lesbar.
Das ist einfach nur
kurz um
der Kürze willen und nicht, weil es
wirklich besser lesbar ist, oder?
Ich fand das davor auch.
Ich fand das davor auch besser.
Ja.
Reddit Likes über alles. Ich glaub da
fällt die
da fällt
die Sprache schon mal prinzipiell flach.
Um, um, um Reddit Likes
da musst du es mindestens in Rust machen.
Da ist
mit, mit Java oder .NET geht da
kannst du vergessen.
Es sollen nur die Zahlen berücksichtigt
werden. Also das, was wirklich Zahlen sind.
Ja. Bis jetzt zumindest.
Ich habe schon gelesen, dass
Part 2 das anders macht.
Okay. Ich würde sagen,
lassen wir es mal so.
Und committen das mal.
Ins Twitch, ins
Twitch Chat Shit
Repo.
Gucken, ob es funktioniert. Abschließend nochmal. Jawohl.
Passt. Excellent. Excellent.
Okay. Lassen wir es mal so.
So lag ich. Elf Zeilen. Ich glaube das kann man
so lassen.
Git Status. Git
Ads. Oh by God.
Git Commit.
Ähm.
Day One. Okay.
Ey, wir machen es einfach hier.
Finished.
Ach, zack. Pum.
Gut.
Das
war jetzt nicht sonderlich schwer.
Du hast die Lösung für Nintendo DS
gesehen. Haha.
Ey, Leute.
Die
kommen, die sind verrückt.
Die kommen mit Brainfuck-Lösungen
irgendwann um die Ecke, oder? Also mich würde es
nicht wundern, wenn es sogar schon Kobol und
Fortran-Lösungen gäbe. Garantiert
gibt es Kobol und Fortran-Lösungen schon.
Und
Haskell und Erlang und
F-Sharp und ganz abgedrehte
Zeug gibt es garantiert schon.
Welches OS ist das auf meiner VM? Linux.
Ach so.
Moment. Moment. Arch Linux.
By the way. Was denn sonst?
Wie die richtigen Hackermans.
Wir verwenden nur Arch Linux.
By the way.
Solltest du auch By the way verwenden.
Und allen Leuten immer
mitteilen, vor allem, dass du Arch Linux verwendest.
Das ist das Allerwichtigste.
Du darfst nicht einfach nur Arch Linux verwenden.
Du musst Arch Linux verwenden und
erzählen, dass du Arch Linux verwendest.
Ganz wichtig
in Kombination. Wie es bisher lief,
easy as fuck lief es bisher. Aber das ist auch die erste
Aufgabe.
So. Fertig. Committed ist es ins
Shit-Repo. Dann würde ich
sagen mkdir
0.1.2
.net new
new
console-rightline. Stimmt. Ich hätte mir
den rightline auch noch sparen können. Ja.
Hast du Recht. Aber seriously.
Ich mein. Man muss ja nicht
alles unbedingt zwangsläufig
nur weil es geht
auf eine Zeile quetschen.
So sieht es aus.
Ich glaube,
Gentoo-User machen das auch gerne.
Okay.
Ja, dann hätten wir das doch geschafft.
Next, würde ich sagen. Next.
Und wenn das nächste auch so easy läuft,
dann
machen wir es in Rust.
Und dann machen wir es
in Bash und in C++.
Leute, da habe ich so keinen Bock drauf.
Alter, das in C++ zu machen.
Du nutzt Linux vom
Scratch, by the way.
By the way, ich glaube dir nicht, dass
du, by the way, Linux vom Scratch benutzt.
Okay.
Hey, mal eine Frage. Wie würdest du mit einem IT-Leiter
umgehen, der immer zu spät
in Meetings kommt und sich kurzfristig absandt,
nur noch die Entscheidung
wegdrückt? Naja, als IT-Leiter ist man
doch in dieser Position hauptsächlich, um Entscheidungen
zu treffen, oder?
Die Frage ist jetzt,
Barry. Barry and Son.
Bist du sein Chef?
Oder
ist es dein Chef?
Wenn du sein Chef bist,
es ist meins, okay, weil
der wäre ja der CEO oder sowas.
Wenn
das dein Chef ist,
dann ist es schwierig.
Das ist in der Tat
schwierig, wenn man so etwas umgehen soll.
Wir kennen den ja nicht und wir kennen
euer Verhältnis nicht.
Es gibt ja ab und zu Mitarbeitergespräche,
wo es nicht nur darum geht,
die
Mitarbeiter zu dissen,
sondern auch Feedback an den Chef zu geben.
Es kommt aber immer auf den Chef an,
wie sehr
der das hören will oder nicht.
Also es wird ja immer
gerne gesagt, oh, sie wünschen sich Feedback,
aber dann wollen sie es nicht hören
oder sind angepisst, wenn sie es dann hören.
Es gibt ja so Leute.
Wenn das der Fall ist, ganz ehrlich,
das ist natürlich enorm schwierig,
was zu machen.
Was auf jeden Fall hilft, ist
eine Sache, die ich auch
in der alten Firma gemacht habe.
Wenn ihr auf irgendwelchen wichtigen
Meetings seid,
dir bleibt nichts anderes übrig, wie das
für dich zu protokollieren.
Wenn auf irgendwelchen Meetings was entschieden wurde,
würde ich mir das aufschreiben.
Dann kriegt man mit der Zeit das Gespür für,
was quasi
relevant ist und was nicht.
Also welche Sachen man sich besser aufschreiben sollte
und was nicht. Also wenn ihr auf irgendwelchen Meetings
was entschieden habt, würde ich mir aufschreiben,
wir haben heute entschieden, wir updaten
dieses Jahr nicht mehr auf das neue Ubuntu
oder irgendwie sowas.
Und Chef sagt, wir nehmen einen Fehler
dadurch in Kauf, würde ich mir das aufschreiben
mit Datum und mit welcher Runde
das ist. Und wenn der sich das nächste Mal
nicht daran erinnern kann, kannst du sagen,
im Meeting vom sowieso sowieso und sowieso
haben wir entschieden,
oder besser gesagt hast du entschieden
oder mitentschieden,
dass das so sein soll.
Und wenn er nicht da ist, um Sachen zu entscheiden,
dann machst du einfach gar nichts.
Wenn du die Entscheidung brauchst, schickst du ihm
eine E-Mail und sagst mit der Bitte
um Klärung und wenn er dann
nicht antwortet und sich Leute bei dir beschweren,
sagst du, du wartest noch auf Rückmeldung von einem Chef.
Du kannst da nichts dran ändern, du kannst
aber dafür sorgen, dass du nicht die Probleme
hast. Ganz ehrlich, ganz
ehrlich, würde ich nicht machen, es ist nicht dein
Job, es bringt ja auch nichts,
weil im Endeffekt, wenn du dich einmischt
und dich irgendwo anders unbeliebt machst,
dadurch, fällt es dann im Endeffekt negativ
auf dich zurück, dass der seine Arbeit nicht macht.
Also natürlich, ich kenne jetzt den Laden
nicht, in gewisser
Weise,
das musst du überhaupt nicht,
das ist nicht deine Aufgabe, in den Arsch
zu treten. Wenn ein Chef was entscheiden
muss und er entscheidet das nicht,
dann meldest du ihm
das,
dass er was entscheiden muss und du wartest
auf seine Rückmeldung. Und wenn er die Rückmeldung
nicht gibt, kannst du Sachen
nicht machen und das muss halt klar so
kommuniziert werden, dass du darauf
wartest.
Ohne die Entscheidung in dem Fall von meinem
Vorgesetzten kann ich nichts machen.
Wenn der nicht zu Potte kommt, ist das echt nicht dein
Problem. Du musst ihm das melden
und wenn einer dir auf den Sack geht,
dass es nicht weitergeht, musst du sagen,
ich warte auf die Entscheidung
von meinem Chef. Wenn es dir
nicht passt, geh zu meinem Chef.
Und solange du nicht weißt, um was es geht, kannst du es ja auch nicht machen.
Also wenn dir Informationen fehlen,
es gibt eigentlich nur eine Möglichkeit, was man
da machen kann. Erstens,
sich mal vielleicht, wenn es dir da überhaupt nicht gefällt,
mal umgucken, was es noch für
alternative Jobs in der Nähe gibt.
IT-Leute sind gefragt und du findest eine
in der Ecke aktuell irgendwas.
Das schadet nichts.
Eventuell, falls es Feedback-
Gespräche gibt und der auch was hören will, kann man
das da durchaus anbringen. Aber
allein schon um dir das Leben nicht unnötig
schwer zu machen. Du musst es sagen
und dann
wartest du einfach auf ihn. Fertig.
Und wenn sich
irgendeiner bei dir beschwert, dass es nicht
vorwärts geht, kannst du sagen, die Entscheidung liegt
bei meinem Chef. Dann soll er zu deinem
Chef gehen, wenn es
nicht vorwärts geht. Das würde ich gar
nicht auf meine Kappe nehmen, da eigenständig
dann irgendwelche Dinge zu machen. Wenn so wichtig
ist, dass dein Chef das entscheiden muss, dann muss er es auch.
Und wenn er sagt, du sollst
irgendwas machen,
dann kannst du ihm ja auch
schreiben, dann soll er dir halt mal erklären, was er unter
irgendwas versteht. Wichtig ist,
wichtig, wichtig ist,
das schriftlich festzuhalten.
Das ist eigentlich egal, was du machst,
wenn du dir selbst deinen Arsch absichern
willst, du musst das schriftlich festhalten.
Schriftlich heißt nicht, dass ihr das beide unterschreiben
musst, aber
schick es per E-Mail, wenn es nicht
fruchtet. Schick es per E-Mail oder
meinetwegen per Chatnachricht, aber per E-Mail,
da kann er sich gar nicht mehr rausreden. Schick es
per E-Mail und dann bist du eigentlich fein
raus.
Manchmal muss man einfach auch echt nicht,
sagen wir mal so, das große Ganze
im Blick haben, manchmal muss man auch einfach,
und das kenne ich nur aus dem letzten Laden, wo ich gewesen bin,
manchmal muss man auch einfach sich um
seinen eigenen Popo kümmern,
dass man selbst nicht dadurch Probleme kriegt.
Selbst wenn es für
den Gesamtladen vielleicht nicht gut ist,
dass so langsam
die Sachen umgesetzt werden, aber es ist nicht dein
Problem. Ich würde das
schriftlich festhalten und wenn irgendjemand
nervt, einfach
mit dem Hinweis, liegt bei deinem Chef.
Wenn er was wissen will, soll er sich an deinen
Chef wenden. Und wenn dann dein Chef sagt,
ja aber, ich hab dir doch gesagt, du sollst
das machen, dann kannst du sagen,
ja und, ich hab dir vor zwei Wochen eine E-Mail geschrieben
und dich drauf angesprochen, um was es
da eigentlich geht. Ich hab bis heute keine Infos
gekriegt. Dann muss das
schriftlich machen. Schriftlich machen ist in dem Fall, glaube ich,
echt, wenn das schon so schlimm ist, das einzige,
was hilft. Alternativ,
wenn es dich so abfuckt,
würde ich auch schon mal gucken, was es drumherum
so gibt. Man muss heute in der IT
nicht unnötig
dumme Sachen aushalten. Es gibt an jeder Ecke
neue Jobs, der wahrscheinlich sogar besser
ist und besser bezahlt wird als ein aktueller.
Gut, ich meine, kann ich nicht wissen.
Vielleicht ist dein Job an sich auch mega krass
ultra gut bezahlt und ansonsten
ganz toll.
Ja, ich mache mir mal für
mein fiesi Abschlussprojekt eine Automation
zur Speicherung von Switch
Startup Running
Configs.
Du machst quasi
Config Backup, oder?
Okay.
Habe dafür einen Linux-Server aufgesetzt,
Samba und ein paar Bash-Skripte.
Musste ein paar Firewall-Integrale für die
Konfiguration von Switches und Servern.
Also, je nachdem, wie du das machst,
kann das durchaus reichen.
Du solltest in dein Abschlussprojekt
aber nicht rein
schreiben.
Ich kopiere
per CLI
mit einem Befehl
das rüber.
Also das muss ein bisschen vage gehalten werden.
Du könntest zum Beispiel dein Abschlussprojekt
nennen
Evaluierung
Backup-Lösung
für Netzwerk-Equipment
oder sowas in der Richtung.
Da hast du nämlich auch die Möglichkeit
der IHK ein bisschen mehr fortzusetzen
als du es sehen wolltest.
Nämlich, dass du eine Produktauswahl machst
zum Beispiel.
Dass du guckst, was die unterschiedlichen Sachen kosten.
Du kannst die Produktauswahl ohne Probleme
so hintreten, wie du willst,
dass am Ende
das rauskommt, was du haben willst.
Und wenn du sagst, ey,
für unsere 30 Switches
ist es am besten
per TFTP
per CLI auf den Samba-Server
zu kopieren, soll es so sein?
Du kannst ja dann auch durchaus so einen
Proof-of-Concept-Aufbau machen,
aber mehr muss es nicht sein.
Ich denke, das kann man gut als Abschlussprojekt
machen.
Zu 99% Disco-Kram, oder?
Ok, Aufgabe 2,
Leute.
Die soll ja angeblich deutlich komplizierter sein.
Wir kopieren
uns das mal
rüber.
Open, Aufgabe 2.
Zack, alles getrusted.
Ok, Aufgabe 2
am Start.
CP, wir kopieren mal den
Input, wobei,
vielleicht ist es ja gar nicht der gleiche Input.
Ich hätte jetzt gedacht, es geht jetzt direkt
weiter, aber man weiß es ja nicht.
Your calculation isn't quite right.
It looks like, ok, ok.
Ja, das habe ich so
aus dem Augenwinkel im Vorfeld schon mal
gesehen, genau.
Was wir gemacht haben, ist nicht ganz richtig.
Und zwar, manche Zahlen sind nicht
Zahlen, sondern
manche Zahlen stehen da auch als Wörter drin.
1, 2, 3,
4, 5, 6, 7, 8, 9
und 0, 1, 2, 3,
4, 5, 6, 7, 8, 9.
Also Zahlen und
Wörter zählen jetzt.
Ok, mit diesen neun Informationen
können wir loslegen. Also sprich,
jetzt haben wir hier 2,
ne 1 und 9
drin stehen. Heißt im Endeffekt, das muss kombiniert
werden zu 29,
weil 2
ist das erste Wort, was eine Zahl beschreibt
und 9
und hier haben wir
wahrscheinlich dann 8,
4,
also
8, 4
ist hier gar nicht drin.
Ist jetzt blöd.
Ach nein, 1!
1!
Steht da auch noch.
Oh, die können sich über...
Oh, das ist abfuck.
Oh, das ist
ultra abfuck.
Ok, das ist
doch deutlich komplizierter, als ich mir das vorgestellt
hab. Ach du Kacke.
Ist 6...
Das gibt es nicht.
Es gibt nur 0 bis 9.
Und wenn da 16 steht,
dann zählt das als 6.
Oh shit, der...
Alter, das kann sich
überlappen.
Giga Monka S.
Da habe ich jetzt erst mal auf...
Ach, überhaupt kein Plan.
Map mit String int.
Ich bin mir
nicht so sicher, ob dir das was bringt.
Ja doch, wir könnten
mit Index off gucken.
Ok, aber
der Rest ist der gleiche Kram.
Moin Tritor, danke schön für den Sub.
Ok, da stehe ich
jetzt ein bisschen auf dem Schlauch gerade, wie wir das machen sollen.
Möb, danke
für den Sub, falls ich ihn nicht gesehen habe.
Exzellente Subscriptions heute.
Nice!
Hab einfach 1 durch...
Hä?
Hab 1 durch
O1E?
Hä? Verstehe ich nicht.
Das ist mir zu high IQ.
Ok, aber lass mich mal
überlegen. Ok.
Erst mal, ich probiere erst mal
selbst was hinzukriegen.
Ok,
das ist in der Tat doch komplizierter, als ich gedacht hätte.
Also, ich...
Ihr könnt euch gerne drüber austauschen.
Ich probiere erst mal
was Eigenes aus.
Ok?
Also, 0, 1, 2,
Run. Gucken, ob der Kram noch funktioniert.
Oh, ich hab die...
Ist jetzt der Input
eigentlich der gleiche?
It hasn't changed. Get your puzzle input.
Ich copy-paste mir den nochmal rein.
Sicher ist sicher.
Input, txt, set, paste.
Bam.
Ok. 1000.
Alles klar.
Run. Ok.
Äh. Hatten wir das vorhin auch?
Ja.
Ja, ok.
Also, ok, jetzt...
Das ist in der Tat ein bisschen komplizierter.
Ich kommentiere den Krampelmaus.
Wir machen erst mal
eine Schleife drüber.
For each
line in input.
Also, wenn ihr Sachen, die nicht
von euch seid, postet, das bringt ja nix.
Also, wenn...
Wie gesagt, ich will ja keine Lösung haben.
Ihr könnt euch drüber austauschen, was bei euch ist.
Aber jetzt irgendwie googeln, was andere
gelöst haben, das bringt mir ja auch nix.
Also.
Ich probiere erst mal selbst drauf zu kommen. Ok?
Ne, ne, ne.
Will ich nicht. Ich will abgucken, was ich beim ersten
gemacht hab. Falls ich es noch brauche.
So. Also.
Lass mal überlegen. Chat.
Chat. Chat. Überlegen.
Zahlen können sich überlappen.
Ok, ich hab die Idee.
Wir machen jetzt
Ultra High IQ Recax Magic.
Passt mal auf.
Ich bin mir nicht ganz
sicher, ob das funktioniert, aber
wir probieren das mal aus.
Also erstmal machen wir irgendwie Digits.
New.
List.
Wobei konnte man nicht...
...mitlerweile so irgendwie initialisieren.
Wie ging das nochmal? Moment.
C-Sharp. List.
Es gab doch jetzt irgendein neues .NET Feature.
Wo?
Quatsch.
List. List. Initializers.
Gab doch jetzt erst mit C-Sharp 12
irgendwas in der Richtung.
Object Initializers.
List.
Achso, ja gut.
Das kenn ich schon.
Das ist nicht neu.
Ich hab doch letztens erst ein Video gesehen.
What's new in C-Sharp.
Und da haben die doch irgendwas...
...irgendwas gezeigt.
Egal.
Also, wir können
mal einfach eine neue Liste.
Nicht ins 0 aus
Strings.
Und zwar...
Ok, also.
1.
Ups.
Du musst noch ein Komma dahinter.
Ok, was ist gültig?
Es ist gültig 1, 2, 3,
4, 5,
6, 7,
8,
9.
Und 1,
2,
3,
4,
5 hat 6,
7,
8,
9.
Das stimmt.
Das funktioniert nur, wenn links nicht wahr steht,
sondern was es für ein Objekt ist.
Ok, jetzt haben wir eine Liste mit erlaubten
Digits.
Wobei,
das ist ja kein Digit.
Wir nennen es einfach mal so.
Ok.
Passt mal auf, Leute.
Six Head Idee.
Wahrscheinlich wird es nicht funktionieren, aber ich hab eine Idee.
Regex gleich.
Wenn das
Ohne Scheiß.
Wenn das geht, beiß ich mir in den Arsch.
Sprichwörtlich.
Nicht, dass dann im Chat jemand sagt, Max,
wir wollen das jetzt sehen.
Hypergachi.
Also, New Regex.
So, das Pattern.
Das Pattern.
Das Pattern wird folgendes.
Digits.
Join. Ach, Moment.
Wir sind in .NET.
String. Join.
Digits.
Ne, erst Separator.
Type.
Digits.
Ok.
Ich muss mal kurz checken, ob das funzt, was ich hier baue.
So, da sollte jetzt
ein Regex
Ja, ja, ja. Sieht gut aus.
Sieht gut aus.
Regex.
Wir brauchen noch Klammern drum herum.
Machen wir mal hier so.
Klammern.
Oh, das ist High IQ, Leute.
So.
Jetzt.
Ok, ok.
Jetzt haben wir folgendes Regex Pattern.
Oh, stimmt, meine Output.
Ihr habt Recht.
Den Output sieht man nicht richtig.
Hm.
Wie machen wir das denn jetzt am besten?
Ok.
Jetzt habe ich
echt Probleme mit meinem
Styling Window.
Wir machen es einfach so, ok?
Ja, so ist gut.
So ist gut.
Jetzt ist Chico nicht mehr Overlaid.
Ok.
Das müsste ein gültiger Regex sein,
Leute.
Das müsste ein gültiger Regex sein.
Und zwar ist das ein Regex, der sagt,
es kommt jetzt
1. Moment, da müssen wir noch 1
dahinter schreiben.
Es kommt jetzt 1.
Ja, ok.
1 von
das oder das oder das oder das
oder das oder das.
Ok, das muss...
Das müsste...
Das müsste doch eigentlich schon funktionieren, oder?
Ok.
Regex.
Matches.
Line.
Matches.
Ähm. Wisst ihr was?
Wir machen das jetzt echt mal
nur hier mit.
Mit dem kleineren Input.
Um zu überprüfen,
ob das funktioniert. Danach können wir es immer noch
machen.
Man könnte die Zahlen durch Digit ersetzen.
Ja, hast du
recht, ja.
Ja. Ja.
Hast du recht. Wir könnten das weglassen.
Wobei, das macht es fast nur komplizierter
zu lesen hier. Naja, lassen wir einfach
jetzt.
Alles klar. So, Matches.
Jetzt zählen wir mal. Jetzt zählen wir mal
die Matches. Ok. Count.
Und wir geben
gleichermaßen auch noch die Line aus, dass wir
mal überprüfen können,
ob das prinzipiell stimmt, was da
steht. Also.
Es sind zwei...
Achso, Moment. Zwei Matches.
Ne, das stimmt
nicht. Es müssen drei Matches sein.
Es müssen Two,
One und Nine.
Warum funktioniert das schon wieder
nicht? Was ist das hier?
Anzeige ist raus.
Ah, weil ich
Blöd bin und eine Eins dahinter geschrieben habe,
die Eins muss dahinter.
Und, Moment. Jetzt muss ich das
auch escapen.
Weil... Alter,
.NET, please. Jetzt muss ich das auch escapen.
Ok, gut. Drei.
Digit hat Null.
Ja, du hast recht.
Und Null ist nicht erlaubt. Dann ist es so wahrscheinlich
sogar besser. Ja, korrekt. Nur für den Fall
der Fälle, dass da echt mal eine Null drinne vorkommen sollte.
Ich trau denen alles zu,
in diesen tausend Zeilen Output.
Gut.
Also, drei
passt. Two, One, Nine.
Ähm, Eight,
Two... Ah, fuck.
Ok, der erkennt, dass es überlappt
nicht. Guck mal. Der erkennt das Überlappende
nicht. Shit.
Alter, warum?
Das hier müssten
auch drei sein.
Ok, Google, Google, Google.
Regex
Overlapping Matches.
How to find
Overlapping Matches in Regex.
Stack Overflow weiß Bescheid.
Hat mich wieder keiner ans Trinken erinnert.
Hier schon ganz trockener Hals.
Also.
Genau.
How to find Overlapping Matches
with Regex.
Erklär mal.
Find all dozen
Overlapping Matches by default.
This expression does.
Alter, Regex, Mann.
Was?
Ok.
Fragezeichen gleich
ist Look Ahead Assertion.
Ok.
Matches if
Matches next
but does not
consume any of the string.
Was?
Versteht das jemand?
Ok, ok.
Stack Overflow, erklär mir.
Positive Look Ahead.
Type of Zero with Assertion.
Alles klar, obviously.
Jetzt weiß ich Bescheid.
What it's saying is the captured
match must be followed
by whatever is within
the parentheses.
But that part isn't
captured.
Und warum hilft das jetzt gegen
Overlapping?
Ah.
Ich glaube, ich versteh's.
Ich glaube, ich versteh's.
Dadurch, dass wir jetzt mehrere
Matching Groups haben,
ist der
quasi verpflichtet dazu,
den String für jede
Möglichkeit neu durchzugehen,
damit er die Groups füllen kann.
Vermute ich jetzt mal.
Interpretier ich da jetzt einfach mal
rein. Ok.
Nice. Wir machen das einfach mal.
Wie war da jetzt die richtige Sonntags?
Ok, nochmal ne Klammer drum.
Ne Klammer haben wir ja schon drum.
Ähm.
Äh.
Funst, oder?
Moment, hab ich das jetzt richtig gemacht?
8-2-3
Ja.
Guckt mal. Funst.
Ist es ein Unterschied, ob ich das nochmal
extra klammere?
So wie die Typen das gemacht haben
in...
Moment, wo muss denn jetzt die Klammer hin?
Da, oder?
Ok. 2-5-5-4-3-3
2-5-5-4-3-3
Ok, das scheint egal zu sein.
Dann kann ich nochmal klammern.
Und hier haben wir 2 Matches.
7 und 6.
10 können wir ignorieren.
Das scheint zu funktionieren.
Leute, ich habe absolut nicht
den blassesten Schimmer, was es genau tut.
Auch wenn ich gesagt habe, ich habe es verstanden.
Ich glaube, ich habe es
ansatzweise verstanden.
Ich glaube, dass es funktioniert.
Einfach Follow
über die 18 Strings da und gut ist.
Und dann?
Und dann?
Dann machst du eine Vorloop hier drüber.
Und dann?
Dann weißt du nicht, was der erste Match ist.
Was der letzte Match ist.
Vorloop da drüber.
Du hast Probleme mit überschneidenden Sachen.
Du musst auf jeden Fall Index gucken.
Du musst Index Off gucken von links.
Index Off von rechts.
Ich glaube nicht, dass
eine Vorschleife das so viel einfacher machen würde.
Das hat sehr viele Edge Cases.
Hier, dass das funktioniert.
Ob das funktioniert,
steht auf einem anderen Platz.
Okay, also.
Wir haben jetzt den Regex.
Der matcht.
Der matcht auf
alle einzelnen Sachen.
Okay, so.
Das heißt, jetzt brauchen wir den ersten und den letzten
Match. Sehe ich das richtig?
Matches first.
Matches
last.
Okay.
Was haben wir denn hier
für eine Auswahl? Matches.
Okay, Matches first.
Groups.
Groups klingt gut.
Next Match.
Groups.
Groups klingt doch nice.
Groups count.
Was haben wir denn? Wie viele Groups haben wir denn hier so?
Eine Group. Okay.
Group zero.
Äh.
Value?
What the fuck?
Alter.
Okay, das mit den Matches funktioniert prinzipiell.
Aber.
Ercaptured. Ach so.
Dafür.
Okay, jetzt ergibt es Sinn.
Deswegen haben die das nochmal geklammert.
Deswegen
haben die das nochmal geklammert.
Okay.
Und?
Warte mal, jetzt habe ich was kaputt gemacht.
Moment, wo musste ich nochmal klammern?
Ich bin verwirrt.
Regex.
Please.
Oh.
Moment, das ist ja auch das Falsche, was ich hier auslese.
Lul.
Groups count.
Okay, jetzt haben wir zwei Groups.
Die erste Group ist der komplette Match.
Und die zweite.
Okay, ich habe seriously absolut keine Ahnung, was ich hier mache.
Group eins.
Group null war ja schon mal nichts drin.
Gucken wir mal in Group zwei.
Nice.
Group zwei.
So.
What the fuck?
Okay.
Und?
Wait a minute.
Das stimmt jetzt.
Okay.
Also, da machen wir das gleich nochmal, wie hier.
First.
Last.
Das hier ist der erste.
Okay.
Das ist der zweite.
First.
Last.
Line.
Gucken.
Also.
Two. Nein. Richtig.
Eight. Three.
Richtig.
One. One. Three.
Richtig.
Four. Richtig.
One. Four. Richtig.
Seven.
Six. Richtig.
Das sieht gut aus.
Welche Ausgabe ist das?
Welche Aufgabe?
Erste Aufgabe.
Also erster Tag, zweite Aufgabe.
Okay.
Das scheint zu funktionieren.
Das heißt im Endeffekt, was jetzt übrig bleibt.
Leute.
Ich muss echt ein bisschen mehr trinken, ja.
Heute ist eh Sätge gewesen.
Und umso mehr Sätge,
umso viel Wasserverlust.
Das sagen wir am letzten.
Jetzt Six anstatt Sixteen ist gewollt.
Ja.
Weil Sixteen ist nicht valid.
Ist nicht valid.
Es geht von Eins bis Neun.
Genau.
So. Jetzt heißt, jetzt müssen wir den Krempel
im Endeffekt nur noch übersetzen
zu
Moment. Ist die Musik vorbei?
Yep. Yep. Clock.
Jetzt müssen wir diesen Krempel
noch übersetzen
in eine Zahl.
Ich hab ne blöde Idee.
Hat das .NET Framework
nicht irgendwas schon eingebaut?
Ich glaube ja nicht.
Aber man weiß sie. Probieren wir mal.
Convert to int.
Von nem String. Okay?
Das wird wahrscheinlich nicht funktionieren.
Ich mein.
Wir können nen Dictionary hier oben
draus machen und es mappen.
Aber ich dachte vielleicht hat .NET schon irgendwas.
Ja.
C sharp convert string
one to int.
Nicht none. One.
Ich glaube nicht, dass es da was gibt.
Ich weiß nicht nach was ich suchen wollte.
Ah. Convert integers to written numbers.
Ich will das Gegenteil.
Wow.
What the f...
Ja. Ja. Das war übertrieben.
Humanizer. Library. Na. Ne extra Library will ich da nicht.
Try pass könnte funktionieren.
Try pass macht das gleiche
wie int pass nur,
dass es keine Fehler schmeißt.
Äh. Das funktioniert nicht.
Wenn das nicht funktioniert, Leute.
Dann funktioniert
int pass
auch nicht.
Das ist unter der Haube genau das gleiche.
Jaja.
Okay. C sharp convert
written
number to int.
To practice. Yes.
We are only at
day one.
Exercise two.
Convert works. Okay. Vielleicht gibt's da was.
Äh.
Selbst was bauen kann ich auch.
Ich dachte es gibt vielleicht schon was
fertiges. Ich dachte
es... Vielleicht... Ich mein hätte ja sein können.
Es wäre echt
cool, wenn es da schon was gibt.
Okay. Ne. Anscheinend gibt's
da nichts. Mich hätte es aber wirklich nicht gewundert,
hätte es da was gegeben.
Weil im .NET
Framework gibt's so viel Zeug.
Okay. Dann machen wir hier
nen Dictionary draus.
Ich frage in solchen
Fällen gerne mal ne KI. Nö, ne.
Kannst ruhig machen. Ey. Ich dachte
vielleicht gibt's da irgendwie sowas.
Und mich würde auch nicht wundern, wenn
irgendwo im .NET Framework
ein Mapping schlummern würde.
Namen
zu zahlen.
Kannst Rust later auch benutzen.
Aber hat Rust sowas?
Wahrscheinlich auch nicht, oder? Also machen
wir mal hier nen Dictionary raus.
Dictionary
String
Theoretisch können wir auch gleich die Nummer,
wobei wir brauchen die Nummer gar nicht.
String, String
So.
1
Wait. Oh ne.
Moment. Syntax.
Wie war das?
Ich glaube
Das mach ich so.
C Sharp Dictionary Initializer
Rust Leute
haben Makros. Ja, das würde mich nicht wundern.
Die C++ Leute haben bestimmt auch Makros.
Ah, mit nem Komma.
Komma.
Ok, also darf ich den ganzen Spaß hier nochmal machen?
Ok, nice. GG Eats.
1, 2, 3,
4, 5,
6, 7, 8,
9. Und nochmal
das ganze.
Bam.
1. Guck mal, ob ich das mir nicht
verschreib. 2,
3,
4, 5,
6,
7,
8,
9.
Nein.
Ok, auf gehts.
Sollte.
Ähm.
Ja, achso.
Nein.
Digit stimmt jetzt ja nicht mehr.
Ähm.
Digit Keys ist das richtige jetzt.
Uncorrect Format.
Also, jetzt brauchen wir.
Jetzt brauchen wir.
Digits.
First.
Achso.
Moment, gibt es denn den Fall,
dass Last leer ist?
Ne, kann.
Ah.
Wobei, ne, ist das gleiche Logik.
Wenn es nur ein Match gibt, dann ist
Last der gleiche Match wie First.
Ok, ne, passt. Also, Digits.
First. Ähm.
Im Prinzip.
Im Prinzip doch wieder.
Wieder genau das hier, oder?
Nur, dass wir hier sagen.
Digits. First.
Digits.
Last.
Ok, schauen wir mal, ob es prinzipiell
funktioniert.
CNT gleich 0.
CNT plus gleich.
CW.
77.
Stand hier irgendwas in dem Beispiel
drinne?
77. Ähm.
Sollte nicht 231
rauskommen?
Ähm.
This is Rider from JetBrains.
It's a paid IDE.
But I have bought the
all, all inclusive
all desktop apps
packages. Package.
Packet. Package?
Package.
From JetBrains.
Oh, I, I used the
C-Sharp IDE, the Rust IDE.
But the Rust IDE is still alpha.
The Python IDE.
And the Go IDE.
So, it's
not bad value.
And it's free if you are a student.
Mein Dictionary hat die
falschen... Oh!
Ich lecke
critical information, Leute.
Ja, kein Wunder, dass da 77
rauskommt, Mann.
Bisschen falsch
vielleicht.
Voll verkackt, Mann.
Voll verkackt, Mann.
Voll verkackt, Mann.
Es hat, glaub ich, sogar vorher noch im Chat...
Leute, ich hab das, ich hab das gelesen
im Chat. Vorher hat jemand
geschrieben, dein Dictionary ist falsch.
Ich hab mir aber nix bei gedacht.
Äh, 7LQS,
Dankeschön für den Sub.
Oh, Mann.
1, 2, 3, 4,
6, 6,
7, 8, 9.
7, 8, 9.
Und jetzt Brege.
281.
Ja! Ja! Hui!
Noch mal Glück gehabt, Mann.
Noch mal Glück gehabt.
Hat funktioniert, okay.
Alles klar.
Wir machen das aber nicht so. Wir machen's
aber wieder so wie hier.
Result.
Ups.
Result.
Return. Sum.
Result.
Immer noch 281. Okay, immer noch 281.
Certified.net Specialist.
Certified.net Specialist.
Guck mal, so viel
länger als das erste ist das gar nicht.
Bis halt auf dieses doofe Dictionary
hier oben.
Leute, ich hab
ne total bescheuerte Idee.
Wir können...
Das macht es aber nicht lesbarer.
Wir könnten das
Dictionary hier oben
automatisch generieren lassen.
Und zwar, wir könnten
ein Array
mit diesen Zahlen reinpacken.
Ne, wobei.
Ja doch, könnten wir.
Okay, okay, wir könnten...
Lass uns mal kurz was probieren.
Warte, warte mal.
Ja, ich hab den ganzen jetzt selber frei.
Keckel gleich new
dictionary string string.
Ich will mal kurz was
probieren, okay.
Ich kann ja mal tippen, Mann.
Oh no.
Warte mal, warte mal.
One, two.
Äh, Alter.
Bin ich schneller mit copy-pasten
als zu tippen?
Bin ich sicher.
Five, six, seven,
eight.
Ah, shit.
Nein. So, und jetzt
passt mal auf, passt mal auf.
Ähm...
Four.
Das kriegen wir bestimmt noch kürzer.
Das kriegen wir bestimmt noch...
Ah, das ist doof. Gibt es nicht ein
for each? Gibt es nicht?
Gibt es nicht ein for each
mit counter?
Gibt es nicht sowas?
List for each with index.
Ne.
Ich bilde mir auch ein, dass es sowas gab.
Ich bilde mir ein, dass es
sowas... Hat, hat ein list...
Hat ein list...
List for each?
Nicht ein...
Ne, ist...
Ist nicht ein index noch dabei?
Ne, shit.
Haben wir irgendwie sowas wie so...
Aggregate?
Oder sowas vielleicht?
Moment, string, string. Ne, äh...
Okay, wisst ihr was?
Scheiß drauf.
Ich dachte, es geht einfacher.
Ja, temporäres Objekt und so.
Alles klar.
Moment, aggregate. Moment.
Was, null?
Ja, genau. Sowas, sowas
suche ich doch. Moment, return index.
Ne, okay, komm.
Ja, das ist alles...
Das ist alles abfuck.
Ey, komm. Komm, scheiß drauf. Lass. Lass.
Lass.
Wobei, ich mich echt frage, warum haben die sowas nicht?
Ja, eine Vorschleife
kann ich auch machen.
Auf die Idee bin ich auch schon gekommen. Eine Vorschleife.
Aber ich wollte was anderes haben.
Ja, gut, dann nicht.
Okay, also. Dann wollen wir mal gucken,
ob das jetzt
funzt, was wir hier gebaut haben.
Chat, was meint ihr? Geht's oder geht's nicht?
Ich muss übrigens den Input
wieder rückgängig machen, so.
Also, der Beispiel
Input hat funktioniert.
Wollen wir eine Abstimmung machen?
Voll, Moment.
Ah, das können wir machen, Max.
Weißt du, wie das geht?
Wie macht man das, wo man
Kanalpunkte wetten kann?
War das, war das Vote?
Ne.
Oder einfach nur ein Poll?
Prediction.
Prediction. Okay.
Ähm.
Stimmt
das Ergebnis?
Wird das
stimme?
Ja, nein.
So.
Confirm. Prediction.
Ja, Gambling Stream.
Ich predikte selbst mit
und zwar ich.
Ne, ich predikte nicht mit.
Wird das Ergebnis stimmen?
Alter!
Ich sag jetzt nix, sonst regt sich nachher
noch einer auf, dass er die Kanalpunkte verloren hat.
So, ne Minute habt ihr noch Zeit.
Glaub ich mal, dass das hier ne Minute ist, so ungefähr.
Tütütütü.
Chatge, ich hab Hunger.
Ich werd jetzt mal was zu essen
mir holen, während das läuft und dann bin ich wieder
am Start.
So, was zu essen gibt? Toastbrot.
Toastbrot und so ein paar komische Trauben, die ich mal
beim Lidl...
ausgenommen hab.
Dann auf geht's. Du meinst meine
ultra professional Python Streams?
So Leute, wie ist denn die Prediction ausgegangen?
Max, hast du mitge...
Wie ist die Prediction ausgegangen?
Ich denk mal, die meisten haben prediktet...
Wie sind die Prediction gelaufen?
Na ja.
Ich kann ja selbst nachgucken.
49% sagen ja,
51% sagen nein.
Okay.
Ich ende auch nix mehr dran.
Ich ende auch nix mehr dran.
Das funktioniert.
Okay.
55701
Prager.
Chat, Prager.
Moment, das ist das falsche.
Part 2.
Submit.
Es geht.
Pog.
Huge Pog.
Easy.
Easy as fuck.
Easy as fuck.
Easy as fuck.
Easy. Easy.
Easy. Easy.
Easy.
Siehste? Regex, Leute. Ich sag's euch.
Regex. Beste.
Nee. Eigentlich nicht.
Also, wenn was nicht
Beste ist, dann ist es ein Regex, Mann.
Nice.
Pog. Hat funktioniert.
Okay. Ich muss mal kurz
mein Toastbrot vollhaben.
Und jetzt als nächstes den Rust, hä?
Rust?
Oder? Leute. Ihr könnt's euch aussuchen.
Chat. Chat.
Was haltet ihr von C++
als nächstes?
Dass ich wieder ausflippen muss.
Dreckssprache, Mann.
Rust oder C++?
Ihr wollt bestimmt
C++, oder? Ihr wollt sehen, dass ich mich aufrege.
Tag 2 dann lieber.
Okay.
Wir machen das in C++, aber ich guck schon mal rein,
dass ich mir schon mal
Gedanken machen kann zu Tag 2.
Boah. Nee, das erschlägt mich ja richtig.
Ich mach's lieber in C++ jetzt noch mal.
Oder Tag 2 in C...
Oh, nee, nee, nee. Ich kann nix in C++ machen.
First try. Das funktioniert nicht.
Dreh ich ab bei.
Kannst du eventuell Pointer erklären?
Ich verstehe, dass sie Prozessor
Leistungssparen... Nee, sind sie nicht.
Warum sollten Prozessor... Warum sollten die
Prozessor Leistungssparen sein?
Also, das kann man so
polarisch sagen.
Achso, und keine Kopien. Okay, das ist richtig.
Allerdings...
Okay. Da müssen wir...
müssen wir ein bisschen ausholen.
Ich versuche Pointer mal zu erklären, okay?
Den restlichen Kram
lass ich erstmal weg, weil das ist ein anderes...
ähm...
Das ist ein anderer Punkt. Also.
Ich versuche Pointer zu erklären.
Pointer...
Ein Pointer besteht aus zwei Sachen.
Aus einer Adresse
vom
Arbeitsspeicher
plus eine Typinformation.
Äh, Paint wird nix erklären.
Also, wenn du sowas hier hast
zum Beispiel...
Ja...
Int...
Wenn du sowas hier hast, ja?
Dann bedeutet das zwei Sachen.
Dahinter steht eine Adresse
also ein Int-Pointer zum Beispiel.
Dahinter steht eine Adresse im Arbeitsspeicher
und eine Typinformation.
Ein Pointer ohne
Typinformation
bringt dir nix.
Weil ein Pointer nur die
Startadresse im Arbeitsspeicher
ist, wo was steht.
Also der Pointer zeigt quasi
auf eine Startadresse im Arbeitsspeicher.
Und du musst wissen, was dort
steht, dass du damit was
anfangen kannst.
Deswegen besteht ein Pointer immer
aus... Ja, der Chat ist schon wieder
viel zu weit. Deswegen besteht
ein Pointer immer aus
einem. Aus einer Adresse
und aus einer Typinformation.
Und wenn du jetzt sagen würdest,
wenn du mal einen Int...
einen Int dahin
schreibst, dann hast du die
Typinformation. An dieser Speicheradresse
steht ein Int.
Oder an dieser Speicheradresse steht
ein Int 32,
ein Int 64. Das musst du wissen,
weil du weißt
mit dem Pointer nur die Startadresse
im RAM. Wenn du jetzt den Typ
einlesen möchtest, wenn du jetzt die Daten
lesen willst, die dort stehen, musst du
wissen, was es für welche sind.
Also du brauchst die Information,
das ist meine Startadresse im RAM
und die
nächsten 1, 2, 3, 4
Bytes sind die Daten,
die ich haben will. Also wenn du
zum Beispiel hast,
du hast einen
Char-Pointer, so was
hier in C, dann heißt
das, okay, du bekommst eine
RAM-Adresse und dann
ein Byte. Also du liest
quasi ab dieser Startadresse
ein Byte ein.
Das ist relativ einfach, das ist quasi
ein Schritt quasi im Arbeitsspeicher
und dadurch, dass du weißt,
das ist ein Char-Pointer,
hast du die Information, okay,
dass die Daten, die ich von
dieser Adresse im RAM gelesen habe,
die sind wahrscheinlich ein Buchstabe.
So.
Und jetzt nur,
dass der Chat nicht komplett eskaliert von wegen
Void-Pointer und sowas. Ein Void-Pointer
alleine bringt dir ja auch nichts.
An irgendeiner Stelle
musst du wissen, was es für ein Typ ist, sonst kann
du damit nichts anfangen.
Wo wir wieder bei der ursprünglichen Sache
sind. Pointer ist nur sinnvoll
mit Typinformationen.
An irgendeiner Stelle.
Also die Typinformation kann genauso gut
sein, okay. Die Library
sagt dir, ey, oder sagen wir mal,
nehmen wir mal so eine typische Sache,
FFmpeg, ja. FFmpeg
hat Callbacks
und da kannst du einen
State übergeben, der kommt in den Callback
immer als Void-Pointer rein.
Aber du musst dir selbst merken,
was du da reinsteckst am Anfang.
Und dann dementsprechend das wieder casten
in den Typ, von dem du weißt,
was an der RAM-Adresse steht. Also
im Prinzip bringt dir ein Pointer ohne
Typinformation nichts.
Wie viel reserviert der in C-Sharp bei VAR?
VAR gibt es in C-Sharp nicht. Das ist nur
eine Abkürzung für eine eigentliche Typinformation.
Und in C-Sharp ist das eh ein bisschen
anders, weil in C-Sharp
ähm, musst
du dir erstmal angucken, ist
das ein Reference-Type, ist das ein Value-Type
und
das ist nicht so Raw-Memory-mäßig
wie man das jetzt aus C kennt.
Du musst nicht zwangsläufig
manuelles Speichermanagement machen?
Ja.
Das ist eine gute Frage.
Du musst nicht manuelles Speichermanagement
machen. Eine Referenz
ist im Prinzip das gleiche, nur
dass eine Referenz meistens
lokal auf die jeweilige
Funktion beschränkt ist. Also
zum Beispiel, wenn du jetzt
sowas hier hast.
So, also mal angenommen
du hast jetzt hier sowas hier.
Int B1
So, mal angenommen du willst jetzt
irgendwas aufrufen.
Du hast jetzt irgendwas anderes
Okay, das ist Main.
Okay, das ist Main.
Und hier hast du irgendwie sonst
noch Void Cackle, das
möchte gerne einen
Int
Pointer haben.
Wir können das übrigens in C-Sharp tatsächlich
nachstellen, wenn ich
Unsafe anmache.
Funzt das tatsächlich?
Unsafe
Unsafe
Setup, so, keine Ahnung.
So, also
wenn du das jetzt
aufrufen willst,
das ist tatsächlich, es ist im Prinzip egal
ob es jetzt C, C+, oder C-Sharp ist mit
Unsafe. So, wenn du jetzt hier drinne
Cackle aufrufen willst, hast du zwei Varianten.
Entweder
Also B kannst du ja nicht direkt übergeben.
Weil du möchtest ja
eindeutig eine Speicheradresse
haben, an der Stelle hier.
Hier könntest du jetzt zum Beispiel sagen
Referenz auf B.
Das würde funktionieren.
Der große Vorteil davon ist,
dass alles automatisch aufgeräumt wird,
wenn die Funktion beendet wird.
Wenn du jetzt in C
sowas machst wie
Wie heißt das?
Native Memory?
Ja, wenn du irgendwie
sowas hier machst.
Das ist jetzt in C-Sharp echt nicht schön nachzumachen.
Also wenn du manuelles Memory Management
machst.
Wir können das mal
simulieren.
Also sagen wir hier int
oder int pointer
Das ist
A jetzt, gleich.
Ich bin mir gar nicht sicher, wie man das
in C-Sharp
simulieren will.
Ne, Moment.
Int
So.
Irgendwie.
Das ist jetzt ein Array.
Ja, also.
Hier haben wir einmal einen int pointer
und hier haben wir eine int Variable.
So, wenn du die int Variable übergeben willst
an eine Funktion, die den int pointer braucht,
dann kannst du die Referenz vornehmen.
Bietet sich eigentlich
immer an, an der Stelle,
wenn du halt lokale, also quasi in dem Fall
die Stack-Variable, also
Stack-allokierte Sachen
nimmst.
Dann musst du die Referenz davon taken.
Geiler Satz, Alter.
Du musst die Referenz davon taken. Du weißt, was ich meine.
Die Referenz von
für die Funktion,
die den int pointer braucht. Int pointer heißt ja nur
das Ding will eine Speicheradresse
haben. Eine Speicheradresse,
die du anschließend als int interpretierst.
By the way, das hier wird
genauso funktionieren.
Und nur, dass
die Funktion jetzt keinerlei Typchecks
machen kann. Was du jetzt allerdings machen
könntest, ist sowas hier.
Ja, was ich hier,
i gleich, du könntest jetzt sagen,
ich caste das, also i haben wir
schon belegt,
ich caste das wieder zurück
zu einem int pointer.
Das ist das, was der Chat eben gemeint hat.
Also, du brauchst an irgendeiner Stelle
immer Typinformationen, dass das funktioniert.
So.
Also, pointer
und in dem Fall ist es egal, ob du es per Referenz
übergibst hier.
Für die Funktion, also für die,
das ist kein Unterschied, ja?
Das ist immer ein int pointer.
Hier hast du eine stack Variable,
darauf nimmst du eine Referenz.
Unter der Haube, da ist ein int pointer.
Siehst du auch, ich kann dir sogar zeigen,
guck mal hier, int pointer c gleich
und b.
Die Adresse, die Adresse von einer int Variable,
die Referenz von einer int Variable ist ein int pointer.
Das ist, wenn es automatisch aufgeräumt wird.
Nicht so wirklich direkt.
Aber wir wollen es jetzt mal nicht übertreiben.
Also, alles, was stack allogiert ist,
wird automatisch aufgeräumt
am Ende der Funktion.
Sobald du manuelles Memory Management machst,
dann musst du dich selbst ums Aufräumen kümmern.
Also, das hier und das hier
hängt eins und allein davon ab,
wie du deine Variable angelegt hast.
Na, Moment.
Wir tun jetzt so, als wäre das raw c.
Ja?
Mit gc und sowas fangen wir hier gar nicht an.
Das würde dann,
in c auch anders aussehen.
Wenn du in c manuelles Memory Management machst,
dann würde das irgendwie so aussehen.
ähm
äh
ähm
size of int
chat, stimmt das?
So würde das glaube ich in c aussehen.
Und wo wir hier wieder
beim Thema sind,
du brauchst immer Typinformation.
Damit du weißt,
als warst du
den Arbeitsspeicher,
diesen Arbeitsspeicher
Abschnitt interpretieren solltest.
Genau, und das könntest du dann
casten zu den Instincts.
Genau.
Und in c++ könntest du sowas hier schreiben.
Das ist aber abfuck.
Aber muss ein Pointer initialisiert sein?
Nö.
Aber Moment.
Aber muss ein Pointer initialisiert werden,
um referenziert zu werden?
Nö.
Also, wenn du willst, dass dein Programm funktioniert,
wäre das durchaus sinnvoll,
wenn du darauf zugreifst,
es vorher zu initialisieren.
Du kannst...
In c muss so gut wie nichts sein.
Also in c könntest du,
ich bin mir gar nicht sicher,
ob das .NET überhaupt erlauben würde.
Okay, theoretisch,
theoretisch schon.
Also du kannst...
Okay, okay.
C Sharp ist so schlau und sagt,
ey, guck mal,
ich kann das nicht machen, ja?
Aber du könntest zum Beispiel
sowas hier sagen, das ist okay.
Also du könntest,
das kannst du in c auch so machen,
du könntest sagen, int Pointer a ist 0.
Das kannst du machen, das ist überhaupt kein Ding.
Das geht, das ist valid,
das kompiliert und das läuft auch.
Das Problem
wird nur sein,
wenn du dann irgendwann sagst, ey,
dereferenziere mir mal int
und mach damit was,
dann wirst du halt deine Probleme kriegen,
denn es ist halt,
ist halt nix da an der Stelle.
Ja, der umgedrehte Fall ist,
also das ist jetzt ein int Pointer
und wenn du jetzt sagst, Sternchen a,
dann ist das
wieder ein int. Also,
das Sternchen vor einem Pointer
ist dereferenzieren,
also quasi,
dereferenzieren heißt so viel wie,
geh an die Speicheradresse,
die in dem Pointer steht
und lies den Typ ein
mit den Typinformationen, die zu dem Pointer
gehören. Also hier haben wir einen int Pointer,
ne, und das heißt Sternchen a
sagt an der Stelle, geh an die
Speicheradresse, die in diesem Pointer steht
und lies die Daten ein, als wäre
es ein int.
Und das muss man ganz klar so sagen,
da passieren keine Checks, gerade in C
nicht. Wenn du sowas hier schreibst,
heißt das nur, geh an die Speicheradresse
und lese die Daten
ein, als wäre es ein int.
Wenn da was anderes steht,
ne, der nimmt nicht immer int,
du kannst auch sonst was nehmen, du kannst auch, äh,
Char nehmen oder, oder
was auch immer, oder irgendein Struct
oder was auch immer, du kannst nehmen, was du willst,
ja. Wobei
Char ist ein schlechtes Beispiel jetzt
in C Sharp, aber es geht genauso.
Und jetzt,
und jetzt würde er sagen,
okay, geh an die Speicheradresse
und lies die nächsten zwei Bytes,
ja, in .net sind es
zwei Bytes, ein Charakter, in C
ist ein Charakter nur ein Byte,
hieran würde er jetzt erkennen,
geh an die Speicheradresse und
lese die nächsten zwei Bytes ein
und interpretiere die als Charakter.
Deswegen sag ich ja, Pointer
ohne Typinformation bringt dich meistens
nicht sonderlich weit.
Ah, und wenn du jetzt
ein Struct hättest,
ich glaub, gibt's nicht
sogar ein neues Struct
Syntax irgendwie in .net?
War das nicht so?
Ne.
Haben Struct Primary Constructors?
Wie geht das? Hier.
Genau.
Okay, perfekt.
So, und wenn du jetzt hier,
nehmen wir mal, nehmen wir jetzt mal hier,
komm, wir machen's einfach mit einem Byte,
wenn du jetzt ein Struct hast,
was, ähm,
selbst wiederum zwei Werte enthält,
x und y,
dann müsstest du jetzt quasi sagen an der Stelle,
okay, wir wollen ein
Pointer zu diesem Struct
und könntest auch hier einen Pointer nehmen von dem Struct
und
dann würde das bedeuten, okay,
an der Stelle, geh an die Speicheradresse
und interpretiere die Daten, die dort stehen,
eben als Distance.
Distance ist relativ einfach zu beschreiben,
Distance sind zwei Byte. Structs sind
vom Memory Layout standardmäßig
in C, einfach alle Felder
nacheinander im Speicher mit ihrer Größe.
Dann kann man auch eine Klasse als Pointer referenzieren.
Ja, und dereferenzieren, klar.
Kannste machen.
Kannste machen.
Äh, in C++, wenn du sowas
hier schreibst, New Distance,
wohlgemerkt in C++,
das ist nicht C++, da würde
meines Wissens nach
sogar ein Pointer bei
rauskommen. Chat,
stimmt das?
Das ist ja nicht C++. Wenn ich in C++
sage, New Distance, New Class,
dann kommt doch ein Pointer raus am Ende, oder?
Heap Allocate, ja klar,
danach musst du sagen Delete, dass das wieder
weg ist. So, alles klar.
Chatke,
lange Rede, kurzer Sinn.
Ich glaube, wir müssen das Ganze jetzt in C++ machen.
Das wird Hyper-Suskey
Aggregale. Ohne
Regex? Ne.
Ich glaub, es geht los. Das einzige, was
ich mir heute in C++ zumute, ist exakt
mein C-Sharp-Cone
in C++, mehr halte ich geistig nicht aus
in der Sprache. Ich muss mal
mein All-Desktop,
ich muss mal mein, oh, guck mal.
Wollen wir C-Line Nova ausprobieren?
Hat
C++ Regex in der Standard-Library?
Standard Regex, okay,
anscheinend, anscheinend, ja, okay.
Ich hab schon gedacht, da brauchen wir noch Boost
oder irgendwie so'n Schrott.
Nova, ey, das scheint neu zu sein.
C-Line Nova Preview, a faster
IDEVC und dann bekommen wir installiert Nova.
Ich mein, mein
All-Desktop-Package muss sich wenigstens mal lohnen.
Ne, geht eigentlich.
Wenn du das, wenn du damit
direkt oder indirekt dein
Geld verdienst, find ich
das nicht so teuer. Das kostet,
im Jahr,
das All-Desktop-Package kostet, glaub ich, im Jahr
am Anfang 200 Euro
und dann wird's ein bisschen billiger.
Im Jahr.
I want it all!
Ja.
Ähm, ja.
Ja.
Voll okay, oder? Erstes Jahr
289 Euro,
zweites Jahr 231 Euro,
drittes Jahr aufwärts 173 Euro.
Ich find das
echt okay für das, was man kriegt.
Und für Studenten
ist es umsonst, richtig. Ja.
Ja, manche Sachen sind kostenlos.
Pycharm ist kostenlos.
Und ich
glaube, IntelliJ
ist kostenlos.
Rust Rover ist noch
kostenlos.
Weil Preview.
Na, Obe, das war's.
Der Rest ist nicht kostenlos.
Es gab mal nen Trick.
Aber der geht nicht mehr, weil das Account-Zwang
ist mittlerweile.
Es gab mal nen Trick, da konnte man
die Trial, die Trial
Periode von den JetBrains
Produkten quasi
unendlich lang resetten.
Eventuell gibt's da auch immer
noch Tricks, aber ganz im Ernst,
ich finde den Preis durchaus in Ordnung.
Ja. Mit RecEdit,
ich hab das nie unter Windows
benutzt, keine Ahnung.
Jetzt bin ich mal gespannt,
wie gut das in C++ funktioniert.
Ich werd durchdrehen.
Leider, ich kann's 1 zu 1
von C sharp portieren.
Leute, C++ 23.
Bam. C++ executable.
Das klingt gut.
Create.
Ich müsste GCC und den ganzen
Gedöns installiert haben.
What? CMake.
Perfekt.
Okay, läuft das jetzt schon?
Hey.
Es funzt.
Eigentlich.
Font 16.
Okay, aber aus irgendwelchen Gründen
nicht funktioniert. Nice.
Ich hab keine Ahnung warum, aber ich kann's auch einfach so
increasen und gut ist.
So, geht schon gut los.
STDC, au, wenn ich diese Syntax
schon sehe, bin ich schon wieder am
Brechreiz kriegen. Okay.
Das kann man so nicht einfach reingruppieren,
ne? Ja, war klar.
Gut. Chat.
Erstes Problem.
Wie macht man ein Dictionary
Auto.
Wie? String. Okay, okay.
Use standard string.
Use standard string. Perfekt.
Map.
Hashmap.
Ähm. C++
Map.
Aha.
Excellent. Ich mach mal die
.net
Die .net Sache zu.
Weil die hat ja funktioniert.
Und wir kopieren mal das
C++ Ding hier rüber.
Wo müssen, wo müssen wir hin?
Ähm. C-Line
Projects. Alles klar.
Ne, Moment.
New. Standard. Map.
Ähm.
So? Ne.
Okay, geht schon gut los.
Ähm.
C++ Initializer.
What?
Alter, was ist denn das schon wieder für eine Syntax?
Ne,
das ist nicht das Problem.
Was?
Wobei, es sieht doch eigentlich ganz okay aus,
oder? Ähm.
Moment.
Was ist denn PMR?
Was ist PMR?
Ich will einfach Standard Map haben.
Moment, hier fehlt jetzt ein Semikolon.
Okay, ich bin schon mal nicht in der Lage
eine Map zu initialisieren in
in C++.
Schon mal. Excellent, excellent.
Wenn du das direkt initialisieren willst,
dann geht das nicht mit New.
Okay. Warum auch immer.
Nehmen wir mal das Beispiel hier, okay?
Einfache Einweichschritte.
Beispiel.
Beispiel. Funst.
Mit Auto kannst du
die Beispielsyntax... Aha.
Das ist schon wieder so ein C++ Ding.
Warum? Ich sag doch, dass es Standard Map
String, String ist.
Warum ist da ein M davor?
Geht auch ohne M.
Moment.
Was ist hier?
Ach, das ist der Name!
AXM. Meine Güte.
Kann ich das doch rübergruppieren?
Och man!
Was denn jetzt?
Ah, Moment. Hey!
Pogu!
Okay, wir haben ne Map am Start.
Alles gut.
Kann ich das hier hinpacken?
Nice!
Okay.
Bin sicher, ob ich das hier oben brauch.
Unten bin ich mir auch nicht sicher.
Kann ich jetzt nicht hier einfach sagen Make?
Ey.
Wann mach ich das denn jetzt eigentlich?
Was macht der denn hier, um es zu runnen?
Nice, man weiß es nicht.
CMake.
Nee. Make?
No targets found.
Ich bin...
Ich war in der Lage, in ner fucking Kommandozeile
das Ding auszuführen.
Edit.
Mailbuild.
Nein, nein, nein. Es gibt ja hier nix.
Hier. Alles klar.
Das brauchen wir jetzt hier.
Excellent. Ich finde, das ist komplett
easy zu verstehen.
Okay. Das ist anscheinend das Programm.
Ich glaube,
so führt man das aus. Testen
wir mal.
Standard. See out.
Packle.
Schauen wir mal. Hey!
Nice. Da kann ich hier unten den Kram
zumachen. Obviously.
So führt man das aus. Ich finde, das ist voll klar.
Ja. Okay.
Also, wir haben unsere Map. Die heißt
Digits.
Ach, deswegen
brauche ich das, weil ich CMake gar nicht installiert habe.
Das bringt, das bringt
CLion anscheinend mit.
Genau wissen, dass es Schrott ist.
So. Also, okay.
Regex. Oh, jetzt. Oh, Regex.
Leute. Regex stellt's in C++.
Jetzt bin ich mal gespannt.
Also.
Jetzt wird's...
Jetzt kommt der C++-Wahnsinn, ey.
Regex.
Regex.
Standard.
Regex.
Ich bin schon mal unfähig. Regex
C++.
Wie funktioniert das?
Es wäre ja auch zu einfach.
Okay.
Standard. Regex.
Self. Regex.
What? Das sind die Options
hier hinten?
Regex Constants.
Was haben wir da zur Auswahl?
Äh.
What?
Ignore Case.
Ja, Ignore Case ist gut.
Ist der Variablen-Name?
Ja, ich weiß.
Boah. Boah. Laggy as fuck, man.
Okay, okay. Ignore Case.
Also. Und hier muss ich...
Okay. Jetzt muss ich... Oh, das wird was.
Jetzt muss ich das hier zusammenbauen,
Mann. In C++.
Weil wir ja wissen, dass die Standard-C++-Collections
so geil sind.
Okay. Machen wir mal hier Auto.
Oder hier. String.
Pattern. Und natürlich auch noch importen.
Pattern. Gleich.
So.
Wir werden jetzt nichts machen.
Außer...
Das Pattern ausgeben.
Pattern.
Was genau fällt jetzt hier?
Da ist überhaupt nichts drin.
Das ist auskommentiert C++, Mann.
Ach so.
Meine IDE hat da komisches Zeug included.
Okay.
Alles gut. Alles gut.
Aber jetzt. Okay, Fons.
Wie machen wir das jetzt?
Ich will... Ich will das hier.
Ich will die Keys von der Map haben.
Also. Digits.
Keys. Geht natürlich schon mal nicht.
Wäre auch zu einfach.
Ähm.
Ah.
Ich hätte gerne...
Alle Keys.
Hätte ich gerne. Alle Keys aus der Map.
Ähm.
Ja, C++.
Wie könnte das funktionieren?
Alle Keys aus der Map.
Okay. Kann man da eine Schleife drüber machen?
Man kann eine Schleife drüber machen.
Okay. Das ist schon mal nicht schlecht.
Das müsste schon mal...
Aber naja.
Nicht wirklich. Nicht wirklich.
Ja. Also ich mein...
Okay. Digits.
Den Iterator von den Keys.
Ja, wenn ich wüsste wie das funktioniert.
Okay.
C++. Map. Keys.
How to retrieve all keys.
How to retrieve all keys.
Okay.
Was ist jetzt los?
Gibt es in C++ sowas wie...
Ähm. Select.
Map oder sowas.
Find. Ähm.
Oder Map.
Ja.
Ich weiß nicht nach was ich suchen soll, Mann.
Haben die nicht sowas wie...
Standard.
Äh.
Ähm. Map oder sowas.
Aha. Okay.
Okay. Hier.
Obviously. Alles klar wie es funktioniert, Mann.
What?
Reduce ist eigentlich das falsche was.
Das will ich ja gar nicht.
Ich will eigentlich Map.
Nur Map.
Wie wäre es mit einer einfachen Beschreibung hier am Anfang mal.
Um was es ist. Gibt es nicht.
Es gibt keine Beschreibung wofür das überhaupt da ist.
Es fängt einfach mit irgendeinem Bullshit an, Mann.
Ah. Gesum. Ops. Brr.
Gesum. Ob. Ja. Ja. Ja.
Das ist mir einfach...
High IQ.
Ich verstehe den...
Jaja.
Ich suche einfach nur Map in C++.
Gibt es nicht sowas.
Standard Transform.
Hui.
Standard Transform will ich haben, Leute.
Standard Transform.
Obviously. Das will ich haben.
Das sieht eigentlich...
Das ist gut. Das will ich haben.
Okay. Standard Transform.
Digits. Beginn.
Digits. Ist auch geil.
Äh.
Wait a minute.
Ne ne. Nochmal. Nochmal. Okay. Nochmal.
Ähm.
Digits. Beginn. Beginn.
End.
Out. Beginn.
Was ist das?
Ist das irgendwie der Vektor wo es hin soll?
Oder wie?
Warum gibt Transform das Ding nicht einfach zurück?
Warum gibt...
Warum gibt Transform nicht einfach
das Ding zurück anstatt
an und to type?
Ich dreh durch, Mann.
Ich dreh...
Okay.
Und das funzt jetzt?
Und das und das funzt...
Moment. Ne ne.
Standard String. Okay.
Out. Return.
So. Value.
Value ist ein Key-Value-Pair.
Was? Ein Int?
Ein Int? What?
Achso. Ich geb ja...
Kann man nicht sagen Auto?
Okay. Der weiß ja noch nicht mal
was das da... Fuck, Alter.
Was für nen Typ ist denn das
jetzt überhaupt, Mann?
Gibt's jetzt da sowas wie...
Wie Key vielleicht?
Nein. Natürlich nicht. Das wär auch zu...
Struct Standard Pair.
Standard Pair.
Okay. Standard Pair
hat was?
First.
Okay. Ne. First.
First.
Okay. Das hat funktioniert.
Okay.
Okay. Jetzt... Hier sind...
Okay. Hier sind alle meine... Hier sind alle meine
Keys drinne. Gut.
Hier sind alle meine Keys drinne.
Schauen wir mal, ob das auch wirklich so der Fall ist.
Kann man... Kann man in C++
ordentlich... Ordentlich nen Vektor
ausgeben, ohne dass man den loopen muss?
Wahrscheinlich nicht. Muss... Ha! Muss ich gerade
ausprobieren. Cake Wait.
Wir holen uns einfach mal...
Keys.
Holen uns einfach mal das erste
raus.
Es ist 1.
Ich glaube... Ich glaube das ist nicht schlecht.
Ich glaube das... 2. Moment.
Ja. Richtig. Passt. Alles gut.
Okay.
Okay. Gut. Ähm...
Jetzt haben wir... Jetzt haben wir die...
Die...
Jetzt muss ich die Dinger joinen.
An Hand.
Also ganz ehrlich.
Da hätte ich deutlich schneller
von Hand geschrieben.
Das Ganze.
So. Jetzt habe ich nen Out.
Jetzt habe ich nen Vektor.
Und jetzt will ich nen String join machen.
Mit dem Vektor. Okay.
C++ Vektor String
Join. Wir können mal gucken, ob es hier sowas...
Sowas gibt.
Wahrscheinlich nicht.
How to implode a Vector
of Strings into a String. Äh...
Jawoll. Imploden.
Use...
Boost Join.
Seriously.
Das kann ich mir nicht vorstellen.
Naja. Also erstmal probiere ich einfache Sachen
zu lösen, wie aus einem
Vektor nen String zu machen.
Anhand
von nem Separator.
Das hat jetzt erstmal mit C Sharp nix großartig
zu tun. Kann man mit
String nicht einfach Plus verwenden?
Ja das funktioniert aber nicht, weil
dann habe ich am Ende
ein Überbleibsel.
Ein übrig gebliebenen und
dran. Das will ich ja nicht.
Ich habe keinen Bock mehr.
Ich habe keinen Bock mehr auf
den Kack, man. Hier.
Das brauchen wir jetzt.
Alles klar.
Es hat keinen Grund.
Okay. Was?
Was?
What?
Nee. Chat GPT Fragen.
Dann kann ich es auch sein lassen.
Wozu? Was zum...
Und jetzt?
Und was ist jetzt passiert?
Kommt da jetzt was zurück?
Ey, ey. Da ist es. Hier.
Hat on.
Ich glaube es funzt.
Pass mal auf. Pass mal auf. Massive.
Es geht.
Was?
8, 5, 4, 9, 1,
7, 6, 3. Ah ja gut.
Ich mein, das Map
das ist ja
random geordert. Okay.
Jetzt bin ich mal
ganz abenteuerlustig
für C++. Wie würde ich
denn diesen Vektor denn jetzt sortieren?
hieß?
Sort? Natürlich!
Es wäre viel zu einfach.
Hätte Vektor eine Sortmethode, man.
Das wäre ja viel zu easy.
Stimmt, ihr habt recht.
Es ist... Ja, ihr habt recht.
Ich will... Das ist Blödsinn.
Ich will es nicht sorten. Ich will unorder...
Ich will, ganz ehrlich, ich will eine Map
in der Reihenfolge... Alter, was
wollte das Ding, das Ding von mir?
In der Reihenfolge des Inserts
möchte ich das haben.
Map, Insert, Order.
Moment, das gibt's nicht?
Ich mein, wir brauchen's nicht.
Wir brauchen's nicht,
ja. Guck mal, nur nicht mal
der Codeformatter kommt hier mit klar.
Okay, weißt du was?
Scheiß drauf. Wir lassen das jetzt so.
Es funktioniert trotzdem.
Inserte es mit einem Index, dann
ist es sortiert. Oh, nee, nee, nee.
Also, okay.
Also, das passt. Wir haben unser Pattern, ja.
Erstmal
eine Zeile C-Sharps, dann erstmal
irgendwie 50 in C++, na gut.
Also, Pattern. So, wir haben
unser Pattern. Jetzt brauchen wir ein Regex.
Wie war das? Self
Regex.
Ja, Ignore Case
ist okay. Ignore Case schadet auf jeden
Fall nicht.
Ignore Case
Pattern. So.
Nennen wir einfach nur Regex.
Das brauchen wir
nicht mehr. Okay. Und jetzt
eine Schleife.
Achso, wir müssen erstmal die Datei einlesen.
Sekunde.
cp input txt
nach cline
untitled. Ja, hier hin.
So, perfekt.
So, wie liest meine Datei ein in C++?
C++ read file
lines.
Read file line by line in C++.
Ja. Ist das so?
Macht man das so?
Standard get line
in.
Ich vermute mal, das ist gar
nicht so
schlecht.
Was
ist zum...
Oh, das ist so eklig,
man, diese Sprache.
So, in. Jetzt muss ich die Datei
öffnen. Da muss ich jetzt wahrscheinlich sowas machen.
New file
open in.
Äh, was?
What?
Okay, Chat gewählt.
Ach, da muss man.
input.txt
So.
Nee, natürlich nicht.
Aha. Da war irgendwas
nicht included.
So, so.
Geht das so jetzt?
Oh, oh.
Oh, Leute.
Pog.
Es readet das File.
Okay, weiter.
Abgucken. Wie geht das jetzt?
Achso, mein Rangax ist noch nicht ganz fertig.
Mein Rangax ist noch nicht richtig.
Äh, Pattern.
Also,
wir wollen ja im Endeffekt
HC++ mittlerweile Template
Strings oder sowas.
Standard Format kenn ich.
Aber, ich mein,
wir können. Komm.
Scheiß drauf.
Wir brauchen was. Okay.
Ah! Alter!
Und jetzt nur eins, ne?
Okay, okay. So, jetzt haben wir unseren Rangax.
Jetzt haben wir unseren Rangax. Super.
Toll. Oh, pass auf, jetzt kann's hier
HC++ diese Syntax hier für Rangax nicht.
Dann, dann dreh ich, dann hör ich auf für heul.
Hab ich keinen Bock mehr.
So. Und jetzt machen
wir quasi Rangax.
Match.
Ne.
Es wär ja auch deutlich
zu easy. Basic.
Basic was?
Okay.
Wie macht man ein fucking Rangax
Standard. Alter.
Oh, diese Sprache, Alter. Warum?
Seriously, warum ist es nicht
Rangax. Match?
Warum ist es Standard Rangax
Match? Warum?
Warum?
Das macht doch überhaupt keinen Sinn.
Das ist so dumm.
Okay, also, hier.
So, da kommt jetzt unser Rangax rein.
Hier kommt unsere, unsere Line.
Unsere Textline. Okay.
Match.
Okay, der erkennt schon mal nicht.
Buhl?
Ich will...
Ich will...
Groups matchen.
Rangax search.
Rangax search.
Matches.
Okay.
Rangax search will ich haben.
Okay, also sprich.
Hier kommt der
String rein.
Den ich eigentlich Line
nennen sollte, dass ich ihn auch wieder finde.
Line. Und hier kommt
der Rangax rein.
Äh. Line heißen.
Der ist richtig
rein.
Ich meine immerhin funktion...
Moment, warum hat das...
Leute, warum kompiliert das hier?
Hier fehlt ein Semikolon.
Das darf nicht kompilieren.
Ne, das kompiliert wahrscheinlich auch gar nicht.
Ich sehe bloß den Error nicht.
Korrekt. Lull.
Müssen wir sowas hier machen.
Was?
Wie jetzt?
Ist doch richtig so.
Ist doch richtig so.
Mismatched?
Nein, das ist nicht mismatched.
Lüg nicht, C++.
Erzähl ja kein Mist.
Wie mismatched?
What?
Das liegt bestimmt daran, dass er das da nicht kann.
Ja.
Okay, C++ kann das anscheinend
nicht, dann habe ich
keinen Bock mehr.
Wie war das?
Look ahead C++
Rangax.
Okay, anscheinend
geht das doch.
Fragezeichen gleich.
Was hat er
für Probleme mit meinem Rangax?
Was stört ihn hier dran
jetzt? Mismatched?
Das ist doch genau das, was die
hier auch haben.
Lass mal weg. Okay, ist mir wurscht.
Es sind zwei Klammern auf
und zwei Klammern zu. Wo ist das Problem,
C++?
Meinst du das hier ist vielleicht das Problem?
Nein, das haben die hier doch auch.
Die Dudes haben exakt
Das ist genau das Beispiel
von dem Typ hier, Mann.
Okay, ich sehe,
jetzt ist auch eine Klammer zu viel.
Jetzt ist wirklich eine Klammer zu viel.
Jetzt ist wirklich eine Klammer.
Aber bei mir ist doch keine Klammer
zu viel.
Bei mir ist Klammer auf, Klammer auf.
Boah, Leute, das kann ich mir heute nicht mehr geben.
Ich habe echt keinen Bock mehr.
Das halte ich heute nicht aus.
Das ist mir zu viel.
Die Sprache ist mir einfach zu ätzend.
Boah.
Das kann ich heute nicht geben.
Das reicht mir.
Leute, ich mache jetzt MMO-Kreisel-Crime.
Ich muss jetzt ein paar Mal aufs Bashen, ey.
Aber vielleicht,
vielleicht machen wir das nächste Mal weiter.
Ich glaube, wir machen das nächste Mal lieber
in einer anständigen Sprache, Alter.
Oh, nee.
Schrecklich, Mann. Schrecklich.
Wenn ich das hier schon sehe.
Oje, oje.
Das ist in Bash.
Das ist in Bash wahrscheinlich einfacher.
Chat, ich gehe,
ich gehe jetzt MMO-Kreisel-Crime.
Wir sehen uns. Macht's gut. Bis denn. See you.

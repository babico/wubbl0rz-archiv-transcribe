{"text": "H\u00e4h, warum sieht die Quali so kacke aus?Watt!Ach, meine Aufl\u00f6sung ist falsch, lul.Geht gut.Das ist ein guter Titel, das muss ich jetzt gleich \u00e4ndern.Das ist auch ein bester Titel.So, also, ich warte mal bis noch ein paar Leute da sind, weil es bringt dann nichts,wenn ich jetzt erz\u00e4hle, was wir heute machen und es ist noch keiner da.Was ist das, fragt DxVinstea, ja, meinst du Git oder meinst du das, was du im Hintergrundsiehst?Hallo, Opa-Burger.Git!Git ist ein Versionsverwaltungssystem oder eine, oh, wie schreiben sie offiziell, einedezentrale Versionsverwaltung oder so.Komm mal gucken, was die selbst sagen, was sie sind.Ja gut, it's a version control system, da w\u00e4re ich jetzt auch drauf gekommen.Was sagen sie denn selbst, was sie sind?Git easy to learn, lightning fast, das sind immer die besten Intros.Ups.Das ist noch die Textdatei, wo ich meinen neuen Rechner geplant habe, aber der neueRechner ist ja mittlerweile am Start.Ja, wir gucken uns heute Git an, weil, hat einen ganz speziellen Grund, ich hab das jaauch vor einer Weile schon mal angek\u00fcndigt oder gefragt, besser gesagt, ob ich das machensoll, ob wir uns mal so Git-Grundlagen angucken wollen, sollen, wie auch immer und nachdemich jetzt schon \u00fcberraschend viele Leute immer mal wieder gefragt haben, wann es dasdenn jetzt gibt, hab ich mir gedacht, ah ja, go, go, go, da war das jetzt mal.Also ich kann jetzt sagen, also wer jetzt Call of Duty haben will, das mach ich vielleichtsp\u00e4ter noch ein paar Runden, aber jetzt machen wir erstmal Git-Grundlagen.Mal so in die Runde gefragt, so an die Leute, die schon da sind, habt ihr erstens eine Ahnung,was man mit einem Versionsverwaltungssystem macht oder mit einem Software, Source CodeVersionssystem, Versionssystem, wie auch immer man es genau nennen mag, und habt ihr schonmal was mit Git gemacht?Git-Clone, Git-Clone ist, das haben wahrscheinlich die meisten, das ist das erste, was man damitmacht.Also ich mein, GitHub werden wahrscheinlich auch die meisten kennen, weil man sagen muss,dass GitHub mit Git eigentlich erstmal gar nichts zu tun hat, GitHub ist ein Web-Frontendund hat mit Git an sich nichts zu tun.Du hast Git benutzt, um deine Hausaufgaben an der Uni abzugeben, echt, muss man Hausaufgabenmit Git hochladen, auch nicht schlecht.Sivuri hat es auch schon benutzt, ja es gibt da mittlerweile f\u00fcr so ziemlich jedes Betriebssystementweder Pakete oder irgendwas fertig zum installieren oder irgendwelche IDE-Extensions, was auchimmer, ist der Sound eigentlich von der Lautst\u00e4rke her so ok, mal kurz gucken, oder soll ichden Sound auch ein bisschen leiser machen, also man kann das ja mittlerweile echt aufjedem Betriebssystem benutzen, ja, aber bevor wir uns jetzt so die Git-Grundlagen anguckenk\u00f6nnen, m\u00fcssen wir eine Sache noch machen, nachdem ich keinen Lust habe jetzt irgendeinenGitHub-Account vollzum\u00fcllen mit irgendwas, installieren wir uns oder hab ich ein Git-Management-Web-Frontendschon mal hier lokal bei mir installiert, was fast aussieht wie GitHub, wo wir da unserRepo anlegen k\u00f6nnen, das wir auch mal zu einem Remote-Server pullen k\u00f6nnen oder von einemRemote-Server pullen k\u00f6nnen und zu einem Remote-Server pushen k\u00f6nnen und sowas inder Richtung, Lola ausauf kam ja verbraucht, er macht das schon, so, jetzt mal die Frage,ich muss da selbstfalls ein bisschen reinkommen, ich hab mir ehrlich gesagt nicht so vieleGedanken gemacht, wie wir am besten anfangen, zumindest, zumindest GitHub werden wahrscheinlichdie meisten Leute kennen, zum Beispiel der Linux-K\u00f6nnel ist auf GitHub, der South-Codevom Linux-K\u00f6nnel ist auf GitHub, so, da ist er, den klonen wir uns jetzt aber nicht, weildas ist saum\u00e4\u00dfig gro\u00df, ich wei\u00df gar nicht wie lange das mittlerweile dauert, sich denLinux-K\u00f6nnel zu klonen, also da ist, es hat auch ein paar Comets und so mittlerweile, oderwas, was ist das f\u00fcr eine nervige Musik, so, es ist von Google beispielsweise auch ganzviel Software auf GitHub, \u00f6ffentlich verf\u00fcgbar, auch im Linux-K\u00f6nnel, aber von Google gibt'sauch viel, Microsoft hat Visual Studio Code, auch auf GitHub, den South-Code, ja, Mr.Milchmann, den Linux-K\u00f6nnel klonen ist so eine Sache f\u00fcr sich, da w\u00fcrde ich aufpassen,das dauert ewig und ist ziemlich gro\u00df, aber nichtsdestotrotz ist es mit Git alles relativschnell, wenn man es erstmal geklont hat, so, was wir jetzt als erstes machen, ist wirinstallieren uns mal so einen kleinen eigenen GitHub-Klon, den wir als Web-Frontend verwendenk\u00f6nnen, wohlgemerkt, das Web-Frontend hat mit Git unten drunter, also mit dem eigentlichenTool \u00fcberhaupt nichts zu tun, das macht blo\u00df die Verwaltung und die Zusammenarbeit, wennman mit mehreren Leuten oder auch alleine an unterschiedlichen Projekten in Repos arbeitet,ein bisschen einfacher, und nachdem viele Leute mit GitHub arbeiten, dachte ich mir,es ist genauso wichtig, so ein bisschen das zu zeigen, anstatt nur rein Git auf der Kommando-Zeile,denn wir gucken uns Git an, so wie es gedacht ist, n\u00e4mlich mit den Kommando-Zeilen-Tools,es gibt f\u00fcr fast jede Entwicklungsumgebung mittlerweile Addons, wo man das quasi mitirgendeinem GUI rumklicken kann, gibt's f\u00fcr Eclipse beispielsweise, hat den besten Namen\u00fcberhaupt, hei\u00dft EGIT, passt zu Eclipse, es h\u00f6rt gleich so richtig an, EGIT, aber esist halt auch Eclipse, da muss man sich nicht wundern, es gibt f\u00fcr aber alle anderen Ideasmittlerweile, entweder schon eingebaut oder aber zum Unterladen, Git Extensions, VisualStudio Code hat's eingebaut, Visual Studio selbst hat's mittlerweile glaube ich aucheingebaut und f\u00fcr die anderen gro\u00dfen Ideas auch, aber ich bin da Ansicht, am bestenkann man Git immer noch auf der Kommando-Zeile verwenden, weil das einfach die Tools sind,wof\u00fcr es urspr\u00fcnglich daf\u00fcr entwickelt wurden und viele Sachen unter der Haube kann manauch nur mit den Kommando-Zeilen-Tools machen, so aber vorher, jetzt nochmal eine Frage aneuch, wie gesagt wir benutzen kein GitHub Direct, wir benutzen GitHub Clone, bei mirdie Lokal, das ist die Frage, ich hab schon einen installiert, den k\u00f6nnen wir gleichverwenden oder wollen wir uns mal einen selbst installieren, ich habe hier meinen Serverstehen um die Ecke im Schrank und da k\u00f6nnten wir uns schnell einen Git Tiga, oder wie ihrman das ausspricht, Webfronten dann drauf installieren, dass man auch mal so sieht wiesimpel das eigentlich geht, sich quasi so ein privates GitHub zu installieren, wohlgemerktnochmal an der Stelle, man braucht kein Webfrontend um Git zu verwenden, ich kann auch ohne Problemerein bei mir Lokal Stream, ich kann auch rein bei mir Lokal Git verwenden und machen undtun, ich brauche dazu kein Webfrontend wie Git haben, jetzt halt die Frage, soll icherst mal eine Teamarkt Session, Teamarkt setzt irgendwie meine Terminal Variable nicht richtig,kann das sein, kann ja nix werden, wie dem auch sein, ich verbinde mich jetzt mal aufmeinen Server und installiere uns einen lokalen GitHub Klon, den wir dann verwenden, was istder Unterschied zwischen Git Tiga und Gox, Gox, Git Tiga ist ein Gox Fork, das ist allesGo programmiert und alles ziemlich \u00e4hnlich, es gibt eigentlich zwei, ich sag mal dreigr\u00f6\u00dfere GitHub Klone, das ist einmal Gox, das ist einmal Bitbucket und das ist einmalGitLab, wenn ich jetzt noch richtig tippen k\u00f6nnte, das sind so, oder sagen wir mal,wenn man das hier noch mitnimmt, vier, das sind so die vier gr\u00f6\u00dften GitHub Klone zumselbst installieren, GitLab ist mit Abstand am ekligsten und kompliziertesten zu installieren,das ist eine Ruby und Rails Anwendung, funktioniert auch wunderbar, aber das zu installieren istecht immer ein riesen Akt, Bitbucket gibt es auch zum lokalen installieren, ist von Atlassian,das ist im Business Bereich relativ beliebt und Gox, wahrscheinlich spricht man das GoGS oder so aus, ist auch sowas in der Richtung, so ein GitHub Klon, aber wir installierenuns jetzt erstmal lokal Git Tiga, wie man das auch immer schreibt, das ist ziemlichsimpel, ich werde jetzt einfach mal einen Container anlegen auf meinem Server, installierendas und dann verwenden wir das im restlichen Stream, bei uns wird Bitbucket verwendet,ich gehe mal davon aus, dass es Bitbucket nicht Gitbucket hei\u00dfen soll, Bitbucket istim Business Umfeld tats\u00e4chlich sehr beliebt, weil Bitbuckets kommt von Atlassian und Atlassianstellen ganz viele Business Zeug Software her, so Ticket Systeme und Wikis und so, wo BusinessLeute draufstehen, deswegen ist im Business Umfeld Bitbucket relativ beliebt, so, ja,schlaue ich mich mal auf meinem Server ein, der den ganz unauff\u00e4lligen Namen POGCHAMP.INTERNtr\u00e4gt, jetzt muss ich aber aufpassen, was ich mache, denn ich will ja hier kein Mist,Mist auf meinem Server treiben, sonst ist alles weg, aber vorher muss ich mal, wie kommtman TMAX Set, weil es geht mir auf den Sack, dass ich keine Farben habe, aha, kann manDefault Terminal umstellen, Default Terminal Option, ja, das machen wir doch mal, meineTMAX Conf sieht au\u00dfer ein bisschen Farben, wir k\u00f6nnen auch mal irgendwann uns noch eineRunde TMAX und so die grundlegenden Kommando Zeilen, Tools und sowas angucken, was habeich mir jetzt verkehrt gemacht, wie ist denn die richtige, achso Set, wie ging das nochmal,Set, achso geht das, ok, wei\u00dft du, Stack Overflow Driven Programming, so ging das, ups,ja, jetzt haben wir glaube ich auch, jetzt haben wir auch ordentliche Farbe und alles,so, loggen wir uns mal auf meinem Server ein und ich schreibe jetzt mein Passwort nichthin, sodass man das sehen kann, so und wir legen uns jetzt mal einen neuen Containeran, das mache ich mit LXT, das kann man auch mit Docker oder sonst was in der Richtungmachen, mit Docker ist es ein bisschen einfacher, da gibt es schon komplett fertige Docker Container,die startlich einfach und da l\u00e4uft dann irgendwie in Setze X beliebiges Git Webfrontend ein,wir legen uns jetzt einfach mal selbst einen an, wie nennen wir denn den, Launch, so nennenwir ihn nicht, wir m\u00fcssen ihn irgendwie Twitch Emotes m\u00e4\u00dfig nennen, habe ich schon einengebated Container, ich glaube nicht, gebated, hei\u00dft der jetzt, so, jetzt haben wir uns nocheinen Container angelegt, da brauche ich jetzt nat\u00fcrlich noch ein Netzwerk Interface undjetzt k\u00f6nnen wir uns verbinden in das Ding, so, das wird unser Git Frontend Server, ichkann mir vorstellen, das ist jetzt ziemlich verwirrend, was ich hier treibe, weil, wei\u00dfnicht, wie sehr verbreitet Linux Container und sowas sind, zumindest ist es eigentlichvollkommen wurscht, weil ich will ja nur mal tempor\u00e4r mir einen Git Webfrontend installieren,ist eigentlich egal, was ich genau mache, so, install, wo haben die hier ihre Install Anleitung,Git Grundlagen gebated, install, install from binary, das ist ok, das ist Go, Go ist dasimmer relativ simpel, da kann man einfach was runterladen, starten und gut ist, ah, ichkomme nicht ins Internet, weil ich keine IP habe, dann starten wir mal den Containerneu, dann kriege ich wahrscheinlich eine IP, so, also habe ich eine IP, jetzt kann ichauch den Gram runterladen, wir machen da jetzt gar keine gro\u00dfen Sperenzien, wir lassen esjetzt unter root laufen und gut ist, ich m\u00fcsste jetzt von meinem Rechner aus eigentlich gebated.internalaufl\u00f6sen k\u00f6nnen, geht nicht, warum geht das nicht, normalerweise sollte man DHCP Server,sobald sich, sobald sich den Server eine DHCP IP zieht, sollte der den eigentlich eintragen,macht er aber nicht, aber naja, es gibt schlimmeres, warum macht er sowas nicht, was soll das,muss ich mal nachgucken, ist aber auch egal, wir k\u00f6nnen auch die IP von dem Ding nehmen,kann es sein, dass man Container mit einer VM gleichsetzen kann, so ungef\u00e4hr, es gibthalt einen gravierenden Unterschied, dass eine VM quasi die Hardware komplett virtualisiert,emuliert, wie auch immer man das will und ein Container nicht, also ein Container, wenndu in einem Container ein Programm startest, ist das im Endeffekt kein Unterschied, sowie wenn du das auf dem Server direkt starten w\u00fcrdest, blo\u00df das noch so ein bisschen Sandboxdrum herum ist, VM l\u00e4uft ja komplett in einer eigenen virtuellen Rechner, der mit dem Hostsystemnichts mehr zu tun hat, so w\u00fcrde ich mal die Unterschiede beschreiben zwischen Containerund VM, was ich echt merkw\u00fcrdig finde, dass normalerweise geht das immer, sobald ich einenneuen Container anlege, zack, ist der im DNS drinne, ich wei\u00df nicht, warum das nicht funktioniertjetzt, weil ich meine, weil man selber funktioniert es ja auch, kann das sein, dass ich noch den,dass ich noch Hostname setzen muss, das k\u00f6nnte tats\u00e4chlich sein, dass ich noch Hostname undZeug setzen muss, probieren wir das nochmal aus, Hostname, Ups, Hostname, eh, umgedreht,muss man das nochmal gucken, ob es jetzt funktioniert, strage es nebenbei nochmal so ein, so, gut,besser wieder, jetzt gehts, sehr sch\u00f6n, es l\u00f6st das auch auf, jetzt haben wir hier eineordentliche Domain, die brauchen wir zwar nicht, aber sie ist sch\u00f6ner, ok, haben wirden Krampel runtergeladen, haben wir, ah ja, haben wir, Moment, das ist eine total alteVersion, die will ich nicht, Downloadpage, kurze Frage Max, wie findest du World War2 bisher, also wie gesagt, ich fand es in der Beta schon nicht schlecht, aber es stehtund f\u00e4llt damit, wie das auf dem PC sich entwickelt mit Spielerzahlen und Cheater, der Milchmannhat sich die Linux-Krone geklonen, sehr sch\u00f6n, so, haben wir hier lang genug jetzt rumgemacht,jetzt gucken wir uns mal, wirklich Git an, keine Webfront eins, so, jetzt gehen wir malauf unseren lokalen GitHub-Klonen, tubated.internal.port3000, warum port3000, weil es da steht, zack, so,wir brauchen eine Lokale, wir benutzen immer SQL-Datenbank-Lokal, nein, nicht immer SQL,SQLite-Datenbank-Lokal, Domain is eternal, tubated.internal, so, Admin-Account wird jetzt\u00fcber Max, Passwort, ganz furchtbar komplex, adds, was wei\u00df ich, null, einfach komm, egal,okay, oh, brauchen wir nicht, wieder neues repo an, so, das ist jetzt nicht GitHub, dasist jetzt bei mir lokal installierte Version von, denkst, wie hei\u00dft, Git, Gitia, \u00e4h,Richie, \u00e4h, der Richie fragt, was ist Git, denn \u00fcberhaupt, und wozu verwendet man es,Git ist ein Versionsverwaltungssystem f\u00fcr, ich lass den Service als Routel auf und siehwo, genau, schei\u00df drauf, das ist jetzt nur zum, zum angucken, nicht f\u00fcr produktivenEinsatz, \u00e4hm, das ist ein Versionsverwaltungssystem, das hei\u00dft, damit kann man seinen Source-Codeverwalten und jetzt nat\u00fcrlich die gro\u00dfe Frage, was hat man davon, wenn man seinen Source-Codedamit verwaltet, man kann zum Beispiel einfacher Fehler suchen, wann Fehler aufgetreten sind,man kann gucken, quasi, wann welche Sachen hinzugekommen sind, ab wann was kaputt ist,man kann sich die Versionshistorie angucken, \u00e4hm, wenn man was verkackt, ist es relativeinfach, auf einen funktionierenden Stand zur\u00fcckzugehen, wenn man mit mehreren Leutenan einem Projekt arbeitet, ist das sehr sch\u00f6n, um das dann am Ende, die Ergebnisse zu kombinierenund sowas, also, wenn man nicht gerade allein an irgendwas werkelt, ist es fast schon Pflichtund selbst wenn man allein an was werkelt, hat das schon seine Vorteile, weil zum Beispiel,ich mein, mal angenommen, man hat jetzt hier irgendwas, irgendwas programmiert, ja, irgendwaslanges, was auch immer, das ist jetzt irgendwie meine tolle Programmiersprache, so und ichhab jetzt ganz viel programmiert, so, einen ganzen Tag lang hab ich das hier jetzt programmiert,das war ganz furchtbar schwer und ich mein, jeder kennt's, dass man dann sagt, fuck, irgendwashab ich jetzt kaputt gemacht, woran lag das denn jetzt noch mal und dann f\u00e4ngst du an,hier die gro\u00dfe Steuerung Z-Orgie zu machen, bis zu einem Stand vor ein paar Stunden, wodu wei\u00dft, dass es funktioniert, dann \u00e4nderst du wieder was und dann vertippst du dich undkommst nicht mehr zur\u00fcck und hast zwei Stunden Arbeit verloren, das Problem hat man mit einerVersionsverwaltungssystem nicht mehr, wenn man es dann ordentlich verwendet, weil dannmacht man sich einfach, dann committet man einfach seine Changes, die man zu einem Stand,wo man wei\u00df, dass sie funktioniert haben und wenn man es dann verkackt, dann kann ich immernoch sagen, ok, ich geh jetzt auf den Stand zur\u00fcck, wo es funktioniert hat, so, legenwir mal ein neues Repo an, ja, sowas hatte jeder wahrscheinlich schon, Stream, das brauchenwir nicht, Create Repo, der hat's nicht so hier mit Domains richtig setzten, das stimmtnicht wirklich, oder, kann man das jetzt noch \u00e4ndern, die Domain ist, ja die Domain istnicht in Tunnel, der h\u00e4tte sagen sollen, man soll den FQDN angeben, Kackprogramm, \u00e4h,nervt mich jetzt schon, ich wei\u00df jetzt, wo wir in welchem Ort wir sind, machen wir denganzen Schei\u00df nochmal, so und wir machen jetzt wirklich mal so ganz simple Sachen, wie gesagtwir legen uns jetzt ein Repo an, dann machen wir mal ein paar Branches, dann machen wirein paar Commits, dann merken wir das ganze, \u00e4hm, also eigentlich ziemlich, ziemlichbasic, machen wir die ganzen Kram nochmal, weil's komische Sachen gemacht hat, ok, dannist es jetzt, schreiben wir das halt mal komplett hin, \u00e4h, Admin Accounts, hochkomplexes Passwort,so, so, jetzt legen wir nochmal unser Repo an f\u00fcr heute, was wir heute verwenden, nennenwir mal Stream, blablabla, create, jetzt stimmt das ganze auch, so, hier stehen jetzt schonso ein paar Standard, die Musik ist irgendwie, oh, wupp wupp wupp, wupp wupp wupp, so, dasist jetzt quasi unser Fake GitHub, mit unserem Repo drauf, das Repo nennt sich Stream, daswird auf GitHub nicht so viel anders aussehen, \u00e4hm, in dem Repo ist noch \u00fcberhaupt nichtsdrinne, deswegen legen wir uns jetzt ein neues Repo an und pushen da initial mal eine leereReadme Datei rein, das machen wir nicht so wie es da steht, sondern wir machen das jetzteine Reihe nach, \u00e4hm, ich geh jetzt erstmal in meinen Repo Ordner, das muss man nichtmachen, aber ich mach das immer ganz gerne, ich hab in meinem Heimatverzeichnis immereinen Ordner, der nennt sich Repos, und da sind meine ganzen unterschiedlichen Git Reposdrinne, die ich von irgendwo geklont hab, oder selbst angelegt hab, \u00e4hm, das sind, irgendwiegeht mir die Musik heute echt auf den Sack, ich mach jetzt mal aus, hat da, hat jemandeinen guten Link zu irgendwelcher entspannender Hintergrundmusik, da klone ich meistens meineganzen Repos rein, da wei\u00df ich wenigstens wo sie sind, auf der Arbeit sind da wahrscheinlichschon alle 70 Repos oder sowas in der Richtung drinne, so, ich hab sogar schon ein Repo vorhinangelegt, ich l\u00f6sch das jetzt aber nochmal, \u00e4hm, Stream, ein Repo legt man ganz einfachan, indem man in den Ordner reingeht und sagt Git Init, ich glaube man kann auch sagen GitInit Name, geht auch, also man kann auch sagen Git Init Stream, jetzt haben wir ein leeresGit Repo angelegt, wo nichts drinne ist, der auch noch keine Comments hat und noch garnichts, es ist einfach ein leeres Git Repo, ich glaub euch nix hier im Chat, was auch immer,wenn da einer schon was vorschl\u00e4gt und mit Kappa dahinter, da wei\u00df ich schon, das klapptwahrscheinlich eher nicht mit Entspannungsmusik, komm wir machen wieder hier, wie hie\u00df er,\u00e4hm, Piano, wie hie\u00df der Typ der, das war doch echt entspannt, das hatten wir doch schonmal vor ner Weile an, au\u00dferdem haben es die Japaner halt \u00fcbelst drauf, ja das ist echtentspannt, aber es ist ein bisschen leise, ja das ist nice, so, \u00e4hm, wir legen jetzteinfach mal ne leere Readme Datei an, in unserem Repo, wir schreiben da nix rein, wir k\u00f6nnenda reinschreiben Hallo oder irgendwie sowas, so, und jetzt haben wir gerade ein leeresGit Repo angelegt und die erste Datei drin erstellt, das muss keine Readme Datei sein,das kann alles m\u00f6gliche sein, das kann auch direkt euren schon vorhandener Source Codesein, den ihr da jetzt einfach reinkopiert, was aber wichtig ist, sobald man irgendwasge\u00e4ndert hat und Git mitteilen m\u00f6chte, dass man diesen Stand benutzen will beziehungsweisediesen Stand jetzt, \u00e4hm, nen, ja, was man denn, nen Name geben will oder den Stand committenwill, weil so hei\u00dft der Befehl letztendlich auch, macht man Git commit und am Anfang wirder jetzt meckern, dass ich noch keine Lautst\u00e4rke, Lautst\u00e4rke, am Anfang wird er jetzt nat\u00fcrlichmeckern, dass ich noch keine, keinen Namen und, und Ged\u00f6ns und Zeug gesetzt hab, \u00e4hm,aber so ist das halt, \u00e4hm, ja, und er wird wahrscheinlich meckern, dass es nichts zucommitten gibt, richtig, wir pushen jetzt einfach mal ne leere Datei ins Repo rein und danngucken wir uns das Ganze im Detail nochmal an. So, ich muss, \u00e4h, Name setzen, meine E-MailAdresse ist maxandlocalhost und mein Name ist max, fertig. So, \u00e4hm, und jetzt kannich den Stand nehmen, den ich hier drinne hab und, \u00e4hm, quasi erst mal zu meinem RemoteServer schieben und sobald ich das gemacht hab, wird dann hier dann auch der ganze Krempeldrin auftauchen. Hier wird gehackselt, ja, genau, Silent Pain. \u00c4h, Oxygen Event, wasmeinst du? F\u00fcr was ist das ganze Programmierzeug? Ja, zum Programmieren, oder was meinst du?\u00c4h, Swiss fragts, Max, auf wieviel Gigahertz ist dein i7-8700k? Auf 5 ist der. Mittlerweile.Auf 5 Gigahertz. Max, hast du schon mal versucht einen Cheat f\u00fcr ein Game zu programmieren?N\u00f6. So, \u00e4hm, wobei das machen wir nicht, wir machen das so wie die das geschriebenhaben. Wat? Ich darf nicht drauf zugreifen, warum? Ah, ich darf wahrscheinlich nichtdrauf zugreifen, weil ich, ich muss wahrscheinlich noch mein SSH Key, mein SSH Key noch hierirgendwie hinterlegen, irgendwo, wo auch immer, der genau hin muss. Ist nat\u00fcrlich jetztein bisschen doof. Ja, ich h\u00e4tt mir das vielleicht ein bisschen besser \u00fcberlegen sollen am Anfang,wie wir das machen, aber gleich, gleich haben wir's. \u00c4h, wahrscheinlich new settings, SSHKey, geht das so? Ich hab das Tool noch nie verwendet. Sehr sch\u00f6n, hat funktioniert.So, in dem Zustand, wie unser Repo jetzt ist, vergesst einfach alles, was wir gerade gemachthaben, in dem Zustand, wie unser Repo jetzt ist, sieht es normalerweise so aus, wenn manes sich von GitHub geklonet hat. Also sprich, man hat, \u00e4hm, das k\u00f6nnen wir jetzt auch malmachen. Wo ist es denn hin? Genau, jetzt ist die ReadMe drinne und sonst nix. So, wir l\u00f6schendas Repo jetzt nochmal lokal und eine Sache wird man dann schon sehen, wenn ich lokalirgendwas an meinem Repo mache, hat das logischerweise \u00fcberhaupt keine Auswirkungen drauf, was mitdem Stand irgendwo anders passiert. Und das ist eine ganz wichtige Sache, die man sichbei Git erstmal standardm\u00e4\u00dfig merken muss, \u00e4hm, bevor ich nicht was pushe, es ist allesnur lokal, auch wenn da lokal irgendwie Remote dran steht oder sowas in der Richtung. Dasist vollkommen wurscht bei Git, es ist alles nur lokal, das muss man sich merken. Alsoman kann nichts irgendwie kaputt machen, das ist nicht wie bei SVN oder sowas in der Richtung,wo man quasi halb immer mit einem Bein auf dem Server ist. Bei Git ist alles standardm\u00e4\u00dfiglokal, bis man explizit sagt, man schiebt es irgendwo hin. Auch wenn es auf den erstenBlick nicht so aussieht. So, also wenn jemand schon mal auf GitHub war, \u00e4hm, oder fallsirgendjemand sich jetzt mal die Linux-K\u00f6rne klonen will oder sowas in der Richtung, \u00e4hm,ja, Patrick, ich hause mir ein Git-Tee, oder wie das Ding hie\u00df. Ist einfacher zu installierenals GitLab. Man kann auch GitLab verwenden, ist eigentlich \u00fcberhaupt kein Ding. So. Z-Frames,das guck ich mir nachher mal irgendwann an. So, \u00e4hm, also vollkommen unabh\u00e4ngig von dem,was wir jetzt gemacht haben, der erste Schritt, wo viele Leute erstmal mit Git in Ber\u00fchrungkommen, ist, wenn sie sich irgendwo in ein Repo klonen wollen. Also sprich, den Source-Codebeispielsweise von GitHub, hier jetzt von Visual Studio Code oder von irgendwelchen Projektenwollen sie sich lokal bei ihnen auf dem Rechner klonen, editieren vielleicht, vielleichtauch noch was einreichen, dann wieder bei dem jeweiligen Projekt. Aber das erste, womitLeute in Kontakt kommen, ist wahrscheinlich Git-Clone. Und Git-Clone ist auch genausosimpel, wie es aussieht. Man schreibt einfach hin, Git-Clone, und dann die Url, was mansich klonen will, und dann hat man lokal einen Ordner von dem jeweiligen Repo, wasman sich geklont hat. Also easy. Das ist auch noch nicht wirklich das Komplizierte. Daskriegt glaube ich jeder noch hin. Das kann man auch mit allen m\u00f6glichen Sachen machen.Ich k\u00f6nnte jetzt auch beispielsweise sagen, jetzt sind wir hier auf GitHub, ich k\u00f6nnteauch sagen, hier, ich will mir jetzt einfach mal Visual Studio Code klonen. Das funktioniert,kann ich machen. Git-Clone, bam, das man sieht schon, das dauert ein bisschen l\u00e4nger,das ist auch ein bisschen gr\u00f6\u00dfer. Funktioniert, ist \u00fcberhaupt kein Ding. \u00c4hm, wirklich interessantwird es nat\u00fcrlich erst, wenn man was editiert, bzw. wenn man was entwickelt. Und noch interessanterwird es, wenn mehrere Leute dran editieren und dran entwickeln. Was man eben schon ganzgut gesehen hat, ist die Musik wieder ein bisschen laut, ne? Ach wobei, nicht, das passt.Aber ein bisschen. Was man eben schon ganz gut gesehen hat, ich meine, ich konnte lokaldas Repo l\u00f6schen und es war Remod noch da. Das hei\u00dft, jeder der an irgendeinem Projektmitarbeitet und das Repo sich geklont hat, hat lokal erstmal ne Kopie vom komplettenRepo. Wirklich komplett, mit allem dabei. \u00c4hm, das hat nat\u00fcrlich den riesen Vorteil,es geht auch nicht so leicht mal was verloren. Selbst wenn der Server, auf dem das ganzemal gehostet war, oder gehostet ist, wenn der verreckt, also wenn morgen jetzt beispielsweiseGitHub abraucht, wei\u00df ja nicht, k\u00f6nnte sein, so Ruby on Rails Abwendung, \u00e4hm, wenn morgenGitHub abraucht, ist der Source Code von Visual Studio Code garantiert nicht verloren, weilsich mindestens 5000 Leute dieses Repo bisher geforkt haben, \u00e4h, und sich wahrscheinlichnoch viel viel mehr Leute dieses Repo mal lokal bei sich irgendwo hingeklont haben.Und das ist auch eines der wichtigsten Unterschiede zu \u00e4hm, anderen Versionsverwaltungssystemenwie, \u00e4h, wie SVN oder sowas, dass man eben erstmal haupts\u00e4chlich lokal arbeitet underst dann pusht, bzw. sich neue Changes pullt. Und man kann Git nach Herzenlust ausprobierenbei sich lokal, man kann nichts kaputt machen. Es w\u00e4re ja auch ziemlich bescheuert, ich meine,ich hab mir jetzt hier den Source Code von Visual Studio Code geklont und ich l\u00f6schejetzt einfach mal alles. B\u00e4m! Es w\u00e4re ganz sch\u00f6n bescheuert, wenn es jetzt bei Microsoftgel\u00f6scht w\u00e4re, ne? Ist es nicht, es ist nur bei mir lokal gel\u00f6scht. Ok, gehen wir malwieder in unser Test Repo. Wenn man jetzt was entwickelt, irgendwas kleines, ja? IrgendeineMini-Anwendung. Wir k\u00f6nnen jetzt ja mal hier im, im, wir machen irgendwie mal so ein Mini-BashedCrypt, was, was irgendeinen Mist ausgibt oder so. \u00c4hm, dann commiten wir da ein paar \u00c4nderungenrein und dann pushen wir das und merchant das und schauen uns das mal in der Ruhe, \u00e4h,in Ruhe an. \u00c4hm, ich muss sagen, mir f\u00e4llt es ein bisschen schwierig, das so zu erkl\u00e4renvon Anfang an, dass das alles nachvollziehbar ist, weil ich benutze das schon eine ganzeWeile und ich k\u00fcmmere mich eigentlich haupts\u00e4chlich um der, auf der Arbeit, um unsere Git Repos,um unsere Software Repos. Und viele Sachen, die ich wahrscheinlich einfach so mache, leuchteneuch nicht so gro\u00dfartig ein, k\u00f6nnte ich mir vorstellen. So, \u00e4hm, ja, es gibt ein paarwichtige Sachen, die man auch wissen muss, wo immer einige Leute durcheinander kommen.Es gibt, \u00e4hm, wenn man sich ein Repo geklont hat, gibt es standardm\u00e4\u00dfig erstmal zweiSachen, oder meistens zwei Sachen standardm\u00e4\u00dfig. \u00c4hm, die Quelle, von der man sich das Repogeklont hat, ist standardm\u00e4\u00dfig eingetragen hier als Remote-Server. Der nennt sich Origin,das Ding hei\u00dft immer Origin. Origin ist immer der Server, von dem ich mir mein Repo geklonthabe, aber das muss nicht so hei\u00dfen. Das kann irgendwie hei\u00dfen. Origin ist einfach nur Nameund sie mussten ja irgendeinen Default-Name vergeben. Ja, ich glaube, der Nightbot istabgeschmiert, Sebaro, stimmt's? Aber die haben gestern auch schon ganz sch\u00f6n rumgeleckt.Vielleicht ist es einfach kaputt. Das muss man sich merken, \u00e4hm, Origin ist einfach nurein Name. Das sehe ich auch auf der Arbeit ganz oft, dass viele Leute denken, Originw\u00e4re irgendein Git-Befehl oder sowas. Und das hat auch nichts mit Origin von EA zu tun,sondern es ist einfach gemeint, von da hast du es halt urspr\u00fcnglich geklont, dein Repo.Aber man kann auch mehrere Remote-Repos haben und dort Sachen reinpushen. Also ich k\u00f6nntebeispielsweise hier meinen lokalen Server haben, wo halt dieses Frontend beispielsweisedrauf l\u00e4uft, plus noch einen Rechner von einem Kumpel, der bei mir mitentwickelt, oder nocheinen Server in irgendeinem Rechenzentrum, auf dem die Anwendung wirklich drauf l\u00e4uft.Und die kann ich mir alle als Remotes eintragen und bei Push und Pull verwenden. Aber dassdas Ding Origin hei\u00dft, ist vollkommen egal, ist einfach nur ein Name. So, und was manauch wissen muss... H\u00e4, Siebauer, was? H\u00e4, verstehe ich nicht. Was man auch noch wissenmuss, dass man standardm\u00e4\u00dfig eine Branche hat, der Master hei\u00dft, das ist auch einfachnur, weil er ja irgendwas nach dem Klonen anzeigen muss. Und dann nimmt er einfach standardm\u00e4\u00dfigMaster, wenn es ihn gibt. Das ist nichts, was wirklich so hei\u00dfen muss. Viele Leute denken,die Dinger m\u00fcssen Origin oder m\u00fcssen Master hei\u00dfen, ist vollkommen egal. So, also wirhaben jetzt wirklich ein ziemlich leeres, quasi nur mit einer Datei bef\u00fcllendem repo.Und in dieser Datei steht einfach nur Hallo drin. Wenn wir uns jetzt mal die History angucken,sehen wir, es gibt genau ein Comment, das ist von mir und das ist vor, was wei\u00df ich, 10Minuten entstanden und ist offensichtlich das erste. Was man bei Git wissen muss, wasist, oder so die Grundlagen, mit denen man fr\u00fcher oder sp\u00e4ter in Ber\u00fchrung kommt, sind,was sind Comments, was sind Branches, vielleicht noch was sind Tags und was gibt es denn sonstnoch interessantes, was sind Remotes. Aber am wichtigsten ist eigentlich am Anfang malzu wissen, was ist ein Branch und was ist ein Comment. Wenn ich jetzt hier irgendwas anfangezu entwickeln, so beispielsweise, ich will jetzt ein ganz tolles Bash-Skript programmieren,was irgendwas tolles macht. Ich hatte ja einer eine glorreiche Idee, was das tolles machenk\u00f6nnte. Oder machen wir es anders. Komm, wir einfach alles in Mastercommenten. Ja, dasist finde ich sogar, \u00e4h, Patrick, das ist finde ich sogar legitim, wenn man das macht,wenn man alleine daran entwickelt. Wir machen das jetzt mal, das repo machen wir jetzt malauf mit Visual Studio Code, dass man bisschen GUI-m\u00e4\u00dfig, dass man sieht, dass das \u00fcberhauptnichts mit den eigentlichen Programmen zu tun hat, was man verwendet. \u00c4hm, \u00e4h, OpenFolder. Plende das standardm\u00e4\u00dfig Readmees aus, das Ding, oder was? Lull. Ein Skript,das den Sinn des Lebens bricht. Jawoll, das k\u00f6nnen wir machen. Also, wir fangen jetzt,wir fangen jetzt mal an ein ganz tolles Bash-Skript zu programmieren. \u00c4hm, und danach kommittenwir das in unser Git-Repo, machen \u00c4nderungen und Dinger. Ich glaube, dann wird das wahrscheinlichauch alles ein bisschen, bisschen greifbarer. Wie macht mir die neue Datei-Steuerung N. So,das wird jetzt, \u00e4h, unser ganz tolles Bash-Skript. Die Schrift ist riesengro\u00df. Echo. Hallo Twitch.Ups, ich hab einen Punkt zu viel. So. Und, wenn man sich das jetzt mal anguckt in unseremGit-Repo, \u00e4h, Hasenk\u00fcrze fragt, was ist deiner Meinung nach die Entwicklungsumgebungder Zukunft? Eclipse Intellijane Visual Studio kommt drauf an, f\u00fcr was. Also, ich denke,unter Windows und f\u00fcr Microsoft-Ged\u00f6ns, was, also sowas wie C-Sharp oder, oder VisualBasic.netoder solche Dinger. Ich bin im falschen Ordner gelandet. Echt? Ne, ich glaub, ich glaub,das passt. \u00c4hm, ne, ich bin im falschen Ordner. WTF, h\u00e4? Ach, ich bin im falschen, ja, ichbin wirklich im falschen Ordner. Lul. Da ist es. Da ist jetzt auch das drinne. Naja,um nochmal zur Entwicklungsumgebung zur\u00fcckzukommen. Jetzt ist auch die ReadMe drinne, ja. Jetztfunktioniert das Ganze auch. \u00c4hm, unter Windows wird es weiter Visual Studio bleiben. F\u00fcrJavaScript seh ich, also f\u00fcr JavaScript und Webzeug, seh ich ehrlich gesagt Visual StudioCode ziemlich weit vorne und ist auch recht beliebt. F\u00fcr C++ find ich den Cute Creatorziemlich gut. Aber man kann auch, wenn man Windows Zeug entwickelt, das ohne Problemmit Visual Studio machen. Und f\u00fcr Java und solche Sachen, ich hasse Eclipse. Ich, Eclipseist wirklich, da musst du instant kotzen, wenn man es benutzen muss. \u00c4hm, wenn, dannverwende ich Intelli, war das IntelliJ? IntelliJ, ID, genau, ja, das Ding. F\u00fcr Groovy und solcheSachen. Aber, \u00e4hm, f\u00fcr Webgeschichten ist Visual Studio Code zur Zeit sehr angesagt.So, jetzt hab ich, jetzt hab ich irgendwie ziemlich n Mist gemacht hier. So, \u00e4hm, wirhaben jetzt angefangen unser tolles Bash Script zu programmieren. Das macht nicht sonderlichviel. Das macht aktuell noch gar nix. Au\u00dfer auszugeben, hallo Twitch. Nein, das neue Assassin'sCreed hab ich mir noch nicht angeguckt. \u00c4hm, jetzt will ich aber vielleicht, dass da derPatrick oder der Sebaro oder irgendjemand dran mitarbeiten k\u00f6nnen. Und deswegen mussich jetzt erstmal mein tolles neues Bash Script comitten und pushen, dass das irgendjemandanderes verwenden k\u00f6nnte. Und man sieht hier schon, dass Git da grunds\u00e4tzlich das erstmalunterscheidet zwischen Dateien, die es kennt und Dateien, die es nicht kennt. Wenn icheine neue Datei angelegt hab, dann sagt Git erstmal standardm\u00e4\u00dfig, \u00e4hm, selbst wennich jetzt sage, ich will comitten, sagt Git erstmal standardm\u00e4\u00dfig, ne, kenn ich net,das ist das. Wenn ich mir mit Git Status angucke, was gerade im Repo so passiert, \u00e4hm, seheich, dass ich untracked Files drinne hab. Warum sind die Files untracked? Naja, ichhab's gerade eben erst angelegt. Und da muss ich initial einmal f\u00fcr jede Datei, die neuist, man kann das auch umgehen, ja, man kann das auch einfacher machen, \u00e4hm, die mussich erstmal hinzuf\u00fcgen. Muss ich erstmal sagen, Git, k\u00fcmmere dich um die Datei indiesem Ordner. Nur weil ich hier in dem Git Ordner drinne bin, hei\u00dft das noch lange nicht,dass sich Git standardm\u00e4\u00dfig f\u00fcr jede Datei zust\u00e4ndig f\u00fchlt. So, wenn ich jetzt ein Gitadd auf die Datei gemacht hab, dann sehe ich schonmal bei dem n\u00e4chsten Git Status, changeto be committed, also sprich, Git kennt die Datei jetzt, \u00e4hm, und ich kann mir jetztauch mit Git diff, ne, mit Git, \u00e4h, fuck, wie ging das, staged, \u00e4hm, kann ich mir auchangucken, was Git jetzt committen w\u00fcrde. Und nun kann ich auch sagen, Git commit, undjetzt, ich kann das immer nur betonen, die meisten Leute halten sich nicht dran, oder,\u00e4hm, sind da einfach nur zu faul f\u00fcr, ich muss sagen, bin ich auch oftmals, ne gescheiteCommit Message reinzuschreiben. Das muss nix langes sein, aber was ne schlechte CommitMessage ist, ist zum Beispiel das hier. Wenn ich an jedem Projekt arbeite, und selbst wennich nur alleine dran arbeite, dann hab ich sp\u00e4testens in zwei Tagen keine Ahnung mehr,was ich hier bittesch\u00f6n bei Fixes gemacht hab. Wenn ich da jetzt reinschreib, wennich da wenigstens sowas reinschreib, Schreibfehler, fix, irgendwie, verschrieben, gefixt, \u00e4hm,also, es hat seinen Vorteil, wenn man da irgendwas Sinnvolles reinschreibt, ja, \u00e4h, es reichtschon, wenn wir irgendwie reinschreiben, hier edit new script oder irgendwas, da hat manhalbwegs noch nen Anhaltspunkt, was denn da, warum ist das eigentlich Nano? Warum ist dasNano? Ich will, ich will kein Nano. Wie konnte man das nochmal \u00e4ndern? Editor, \u00e4hm, wennman das hier so richtig schreibt, config, global, editor, oh, fuck, wie ging das jetzt,das muss ich nachgucken. Was einem auch bei Git klar sein muss, man ist ziemlich oft unterwegs,man kann entweder in der Gitman-Page gucken, wobei die Gitman-Page absolut wir geschriebenist, oder aber, man schaut einfach nach. Ah, hier, guck, git config global core editorvim, das will ich machen. So, und wenn ich jetzt das n\u00e4chste Mal was committe, dann gehtauch ein ordentlicher Editor auf und nicht Nano. So, was man jetzt hier schon sieht ist,ich hab ein neues Skript angelegt, \u00e4hm, ich hab's commited, wenn ich jetzt in die historygucke, ja, ja, Milchwein, ich sag ja Stack Overflow Driven Programming, wenn ich jetztin meine history gucke, also sprich, dort wo ich sehe, in welcher Reihenfolge was passiertist, dann seh ich auch, ok, es gab hier unten einmal mein initiales Comet und hier dr\u00fcberseh ich, ich hab ein neues Comet gemacht hier vor ein paar Minuten, wo ich ein neues Skripthinzugef\u00fcgt hab. Wenn ich's jetzt genau wissen will, aktuell ist es noch ziemlich \u00fcbersichtlich.Moment. Aktuell ist es noch ziemlich \u00fcbersichtlich, es ist, sind zwei Comets in dem Repo und diesind beide von mir. \u00c4hm, wenn man sich jetzt mal beispielsweise von Visual Studio Codedie Comets anguckt, das sind beispielsweise 25.000 und von total vielen unterschiedlichenLeuten. Wir gucken uns jetzt noch mal auf der Kommando-Zeile an, ich klon mir das Ganzenoch mal. Das ist ein Projekt, das ist, hat eine gute Gr\u00f6\u00dfe, das ist nicht so riesengro\u00dfwie der, wie jetzt irgendwie der Linux Kernel oder sowas. Na, eben war das Ganze aber auchschon ein bisschen schneller. Hat das eben schon genau so lang gebraucht, den Krams zuklonen, ging das nicht eben noch schneller? Ha. Ja gut, sobald, sobald das geklont ist,gucken wir da mal in die Historie rein, da sehen wir, dass ich schon ein bisschen mehrals war mir im Repo drin und da wird eine Sache auch schon mal gleich klar und zwar,dass es sinnvoll ist, ordentliche Comet-Messages zu machen. Das ist jetzt n\u00e4mlich ein Projekt,wo 409 Leute schon mitgewirkt haben in 25.000 oder in knapp 26.000 Comets. Da wird es dannschon ein bisschen schwieriger mit der \u00dcbersicht. Wenn wir jetzt hier mal ein Gitlog drinnenmachen, sehen wir n\u00e4mlich auch, dass es sind von ganz vielen unterschiedlichen Leuten,die da dran mitgearbeitet haben und wenn jetzt hier jeder reingeschrieben h\u00e4tte, irgendwiefix ist, dann wird es ganz sch\u00f6n kompliziert zu checken, was da eigentlich passiert ist.Einmal wieder zur\u00fcck zu unserem Noob-Repo, so ein Billig-Repo, das hat immer noch zweiComets drin und jetzt der gro\u00dfe Unterschied zu Versionsverwaltungssystemen wie beispielsweiseSVN, ja doch, ich kann das Zeug nicht richtig, ich verdrehe da immer die Buchstaben, ichverdrehe auch immer CVS und CSV und alles. Der gro\u00dfe Unterschied zu quasi zentralenVersionsverwaltungssystemen mit dem zentralen Server, was es ja so bei Git nicht gibt, ist,ich habe jetzt eine neue Datei angelegt, ich habe jetzt diesen neuen Stand committed, habeich mit einer Commit-Message dabei, aber das ist nach wie vor nur lokal bei mir. Das mussman wissen, das ist nur lokal, also sprich, wenn jetzt irgendjemand von euch sich hiermein Repo klonen w\u00fcrde, w\u00fcrde er diese \u00c4nderung noch nicht sehen, obwohl sie committed sind,das ist bei SVN komplett anders. Da ist Commit halt Commit. Und was ich jetzt machen muss,dass das andere Leute auch benutzen k\u00f6nnen, bzw. um es halt zu irgendeinem anderen Serverzu schieben, achtmal mit Git push. Und hier ist es auch wichtig, dass man, auch wenn manes nicht machen muss, ist es sinnvoll, hier immer die kompletten Optionen anzugeben.Also quasi, was ich machen will ist, ich will Git benutzen, ich will meinen Stand woandershinschieben, Git push, jetzt muss ich angeben, wohin, in dem Fall Origin, Origin ist das Repo,von dem ich geklonet habe, und jetzt, welcher Branch, was ein Branch ist, kommen wir gleichnoch dazu. So, wenn ich das mache, dann funktioniert das Ganze auch, und wenn ich jetzt hier refresche,ist das auch da, mein Skript. Und wenn jetzt jemand von euch sich mein Repo geklonet h\u00e4tte,und Git pull macht, dann wird er die \u00c4nderung auch sehen. Warum ich das f\u00fcr wichtig halte,hier immer alles komplett anzugeben. Man kann auch die Kurzfassung machen, Git push. Gitpush funktioniert in 99% der F\u00e4lle ohne Probleme, weil Git mittlerweile relativ clever ist, undbei Git push standardm\u00e4\u00dfig halt nur den Branch pusht, auf dem man drauf ist. Das war fr\u00fchernicht so. Fr\u00fcher war Git push das Standard, das die Fault verhalten so, dass alle Branches,die man lokal hatte, gepusht wurden, und da hat man teilweise Sachen gepusht, die mannicht pushen wollte. Ich hatte mal auf der Arbeit einen, der hat irgendwie 15 Branchesgepusht, die er sich mal irgendwann ausgecheckt hat, paar \u00c4nderungen drin ausprobiert hat,und die wollte er eigentlich gar nicht pushen. Das war halt ein bisschen bl\u00f6d f\u00fcr ihn. DerName Origin verwirrt mich. Origin ist der Default Name f\u00fcr die Quelle, von der man,oder wie es der Patrick gerade sagt, von der Herkunft, von der Quelle, wo man geklonthat. Das ist der Default Name des Servers, des Remotes, bei Git hei\u00dft das Remote, vondem man geklont hat. Man kann das \u00fcbrigens auch umbenennen. Ich kann auch Git remoterename, wie ging das nochmal, wenn ich das noch richtig schreibe, Git remote rename,Origin kann ich auch umbenennen in, zum Beispiel GitHub. Wenn ich mir das jetzt angucke, hei\u00dftdas \u00fcberhaupt nicht mehr Origin. Wenn ich das jetzt nochmal machen w\u00fcrde, w\u00fcrde ichsagen, das geht nicht, weil es das Remote Origin nicht mehr gibt. Jetzt m\u00fcsste ich sagen,Git push, Git hub master. Ist auch zu empfehlen, also wenn man mehrere Remotes hat, ist dassinnvoll, die so zu benennen, dass man auf den ersten Blick gleich sieht, ja was wozugeh\u00f6rt. Also das ist schon nicht verkehrt. Wir rename das nochmal, weil es ist ja garnicht GitHub, sondern es ist unser Fake GitHub. Es ist ja gar kein echtes GitHub, woraufwir gepusht haben. Es ist ja nur unser Fake GitHub. Was wir jetzt gemacht haben ist, wirhaben ein neues Skript angelegt, wir haben das committed und wir haben das gepusht. Dassind so die Standard-Basis-Operationen, die man immer braucht in Git. Ohne commiten, ohneadden, ohne commiten, ohne pushen kommt man meistens nicht weit. Den Part mit pushen kannman weglassen, wenn man nur lokal arbeitet. Man braucht sowas hier nicht, also sprich,man muss sein Zeug nicht auf GitHub hochladen, das muss nicht sein. Man kann auch rein lokalarbeiten. Ist auch nicht schlecht, wie gesagt, wenn man irgendwas klein im Bastelt und auchgar nicht vorhat, das zu ver\u00f6ffentlichen. So, was gibt es jetzt als n\u00e4chstes? Genau,was sind Branches? Dazu muss man sich erstmal angucken, was sind commits. Wenn man in dieHistory guckt, was man, by the way, mit GitLog macht. GitLog hat \u00fcbrigens sehr viele praktischeOptionen, beispielsweise das hier. Das hier ist ein Beispiel f\u00fcr typische Git-Optionen,die sind nicht immer logisch. Also standardm\u00e4\u00dfig zeigt mir GitLog meine History an, also sprichvom \u00e4ltesten Commit zum neuesten Commit. Sag ich jetzt, GitLog name only als Optionzeigt es mir mehr an, allerdings noch die Namen, die sich ge\u00e4ndert haben im jeweiligenCommit der Datei, also welche Dateien sich im jeweiligen Commit ge\u00e4ndert haben. Obwohldie Option minus minus name only so aussieht, als w\u00fcrde es weniger anzeigen, n\u00e4mlich nurnames only, macht es das nicht. Ganz viele Git-Commandos sind total wir, da muss mansich mit abfinden. Und die Git-Man-Pages sind ehrlich gesagt auch nicht sonderlichhilfreich. So mal hier als Beispiel. Guckt euch, lest euch mal, oder lesen wir uns maldie ersten S\u00e4tze durch von GitPush. Man versteht nichts. Normalerweise ist eine Man-Page daf\u00fcrda, das soll einem das alles erkl\u00e4ren, ein bisschen helfen, wie das Ganze funktioniert.So, und die Hilfeseite f\u00fcr GitPush sagt mir, GitPush updates remote refs using local refswhile sending objects necessary to complete the given refs. Und jetzt kommt der besteSatz \u00fcberhaupt. You can make interesting things happen to a repository. Also, die Git-Man-Pagessind legend\u00e4r verwirrend. Ich w\u00fcrde gar nicht erst anfangen Git-Man-Pages zu lesen,in dem Fall ist man wirklich mit einer Google-Suche und Stack-Overflow-Antworten meistens besserdran. Also Git-Man-Pages sind wirklich sehr verwirrend. So, aber wenn wir uns jetzt nochmaldie History angucken, sehen wir, wir haben zwei Comets drinne, mein initiales Comet unddas, wo wir das Skript hinzugef\u00fcgt haben. Jedes Comet bekommt in Git eine eindeutigeHashtag-ID. Das ist ein Schar-Hash-Wert, wenn das interessiert. Und man sieht ja auchteilweise ganz interessante Informationen dahinter. Zum Beispiel, welcher Remote-Stand eben aufwelchem Comet gerade ist und sowas, aber das ist jetzt erstmal egal. Wichtig ist, dassjedes Comet einen eindeutigen Hashtag-Wert bekommt. Und dieser Hashtag-Wert oder dieseComet-ID, nennen wir es mal Comet-ID, ist eines der Grundlagen, worauf Git basiert undeines der wichtigsten Sachen. Man muss nicht wissen, was es ist, was es genau macht. Wasman wissen muss ist, jedes Comet hat weltweit sehr, sehr, sehr wahrscheinlich eine eindeutigeID. Und ihr habt hier beispielsweise das Visual Studio Code-Repo gesehen, das hat schon 25.000Comets. Und es ist sehr wahrscheinlich, dass es kein Git-Repo gibt. Alle Git-Repos weltweitzusammen. Dass es kein Comet gibt, das die gleiche ID hat. Und das ist auch wichtig,weil bei Git ziemlich viel auf dieser Comet-ID basiert. Man braucht sie selbst relativ selten,aber ich denke, das ist eine wichtige Sache, die einem klar sein muss. Weil, und das istauch eine wichtige Sache, man kann in Git die History, ich wei\u00df, dass es geht, aberich sag's jetzt mal ein bisschen \u00fcberspitzt, man kann in Git die History nicht \u00e4ndern.Man kann in Git die History nur umschreiben. Und wenn man in Git die History umschreibt,\u00e4ndert sich alles ab dem Zeitpunkt des Umschreibens. Weil die ganzen Comets basieren aufeinander.Also sprich, diese Comet-ID, oder besser gesagt, diese Comet-ID, wird errechnet, aus dem deres committet, aus der Uhrzeit, wann es committet wird, und ganz wichtig, aus der Comet-ID,des Vorg\u00e4nger-Comets. Das hei\u00dft, wenn ich jetzt feststelle, ich hab hier unten irgendwannmal Mist committet, was vorkommen wird, wie man das beheben kann, kommen wir auch nochdazu. Wenn ich jetzt feststelle, ich hab hier unten irgendwann mal Mist committet in meinGit Repo, dann kann ich das erstmal so pauschal nicht \u00e4ndern. Das ist drinnen. F\u00fcr immerund ewig ist das in diesem Git Repo drinnen. Weil wenn ich jetzt hier hingehen w\u00fcrde,und das \u00e4ndern, w\u00fcrden sich alle Comets, die da drauf kommen, die nachvollen Comets,wie sich die Comet-ID \u00e4ndern. Was dazu f\u00fchren w\u00fcrde, dass es f\u00fcr Git intern ein komplettanderes Repo w\u00e4re, und alle, die irgendwie mitarbeiten an dem Repo, eine Historie habendie nicht mehr zusammenpasst. Also die Historie in Git kann man nicht \u00e4ndern. Man kann sienur umschreiben, und da sollte man auch aufpassen, was man macht. So, deswegen ist es auch nochmalwichtig, dass es einem klar wird, dass man mit Git standardm\u00e4\u00dfig nur lokal arbeitet.Das hei\u00dft, man kann, wenn man Mist committet hat, bevor man es pusht, das \u00e4ndern, wieman will, das wird nie jemand sehen, aber wenn man es gepusht hat, ist es da. Quasif\u00fcr immer. Das hei\u00dft, man muss sich \u00fcberlegen, was man pusht. So, einmal angenommen, dasist was, was viele Git-Tutorials beispielsweise viel sp\u00e4ter machen, aber ich finde, das isteigentlich eines der h\u00e4ufigsten Probleme, die Leute haben, die neu mit Git anfangenoder die halt allgemein sich da, sich das gerade einfach ein bisschen angucken und daslernen wollen. Wie kriege ich denn jetzt was wieder raus, wenn ich Mist committet habe?Was, die Uhrzeit stimmt nicht? Ja, stimmt, die Uhrzeit stimmt nicht. Die Uhrzeit isttotal falsch. So, wie kriege ich denn jetzt wieder raus, wenn ich Mist committet habe?Weil angenommen, ich habe hier jetzt irgendwas committet. Wir k\u00f6nnen uns mit git log minusp, kann man sich anzeigen lassen, was committet wurde. Da sehen wir zum Beispiel, okay, ichhabe hier halt eine Datei committet mit diesem Inhalt und ich habe jetzt festgestellt, Mist,eigentlich wollte ich schreiben, hallo stream und ich habe hallo twitch tv geschrieben.Ich habe das jetzt gepusht, das ist da. Also man sieht das ja auch hier, wenn sich jetztirgendjemand geklont h\u00e4tte, ja, dann h\u00e4tte er jetzt halt das fehlerhafte Skript gehabt.Was mache ich denn jetzt? Wie kriege ich denn das wieder raus? Und die einfache Antwortist gar nicht. Fixen und neu committen. Das ist der Weg in Git Fehler zu beheben. Alsoselbst, wenn ich jetzt quasi theoretisch zur\u00fcckrollen k\u00f6nnte, sollte ich das auf keinen Fall machen,wenn ich es schon gepusht habe, weil danach sieht die history anders aus. So, und derGitweg, sowas zu fixen, ist im Prinzip ganz einfach. Man macht ein neues Comet. Also sprich,ich rolle das jetzt nicht zur\u00fcck und committe es nochmal mit dem korrekten Text, sondernich editiere das jetzt einfach zu dem, was ich eigentlich haben wollte, zwar hallo stream,ich wollte nicht hallo twitch schreiben und jetzt committe ich das ganze einfach nochmal.Jetzt Git Status eingeben, sagt der mir hier, guck mal, es hat sich was ge\u00e4ndert. VisualStudio Code sollte glaube ich auch irgendwie anzeigen, dass sich was ge\u00e4ndert hat, machtes nicht. Konnte das Visual Studio Code nicht, konnte das nicht anzeigen, dass sich wasGit technisch ge\u00e4ndert hat. Keine Ahnung, ist ja auch wurscht. \u00c4hm, wir machen dasjetzt mal hier alles Commando-Zeile. Genau, und jetzt mache ich ein neues Comet. Ich kanndas alles ein bisschen abk\u00fcrzen. Die richtige Reihenfolge ist doch links im Git-Reiter.Ah, das habe ich gesucht, ja quasi so ein Diff, was sich ge\u00e4ndert hat. Aber sonderlichsch\u00f6n ist es, sch\u00f6n ist es nicht. Ich kenne es von manchen Editoren, dass man hier vorneso Plus und Minus angezeigt bekommt, wo sich was ge\u00e4ndert hat. Ist aber auch egal. So,die normale Reihenfolge, was zu committen ist ja, man edit es, ich mach das jetzt nicht,man committet es und danach kann man es pushen oder das lokal lassen. Es gibt eine Kurzformdavon und die wird wahrscheinlich jeder verwenden, der h\u00e4ufiger Git verwendet, weil es einfachnervig ist immer was zu adden. Man sagt einfach Git A minus M. Das hei\u00dft, committe alles,alle \u00c4nderungen aus Dateien, die du kennst. In dem Fall, tolles Skript. Message nimmtden Text, den ich hier hinten angebe, als Comet-Message. Ja, ich schaue jetzt irgendwiemit Echo Text, was auch immer. So, wenn ich jetzt nachgucke, jetzt habe ich ein drittesComet, was den Fehler korrigiert hat, den ich vorher mit committet habe. Ich habe vorherMist committet, den habe ich jetzt wieder korrigiert. Und das ist der Weg, wie man dasin Git fixt. Standardm\u00e4\u00dfig rollt man nichts zur\u00fcck, um was zu fixen. Also man rollt nichtszur\u00fcck, fixt es und committet es wieder. Man sagt, ok, der Fehler ist drinne, man \u00e4ndertihn und macht ein neues Comet. Was ja auch irgendwo sinnvoll ist, weil \u00fcberlegt euchmal, ihr habt einen Fehler gepusht schon. Jemand anderes, der mitarbeitet, hat sichdas quasi ausgecheckt bei sich und hat jetzt die Datei mit dem Fehler und er hat vielleichtda drin schon was editiert und ihr w\u00fcrdet es dann zur\u00fcckrollen und dann pusht ihr eineDatei, die so aussieht, die, quasi die Version, die er bei sich lokal hat, h\u00e4tte es ja dannnie gegeben in der History. Deswegen hat Git bei sowas Probleme, wenn man History \u00e4ndert.Da kommt es zu ganz wirren Ergebnissen und ich kann es nicht empfehlen, irgendwie dieHistory umzuschreiben. Es sei denn, es ist lokal, bevor man pusht. So. Wenn man nochnicht gepusht hat, kann man sich das Leben ein bisschen einfacher machen. Wie gesagt,normalerweise kommt das in Git-Tutorials immer viel sp\u00e4ter dran, aber ich finde das, wiegesagt, das ist eines da, ja, eines, ein gro\u00dfes Problem, was viele Leute haben, die neue Gitverwenden. Wenn man noch nicht gepusht hat, kann man sich das Leben ein bisschen einfachermachen. Zum Beispiel, wenn ich jetzt sage, Mist, meine Comet-Message ist falsch. Ichwollte eigentlich nicht hinschreiben, Changed Echo Text, sondern Fixed Echo Text. Mist,was mache ich denn jetzt? Soll ich jetzt ein neues Comet wirklich machen, wo ich dannnochmal Fixed Echo, das ist doch, das ist doof. Das ist doof. Aber ich hab Gl\u00fcck, ich habnoch nicht gepusht. Da sieht man hier unten auch an dem kleinen Pfeil von meiner, \u00e4h,hier bash-git-sonsmaas-extension, \u00e4h, zschl-bash, \u00e4h, zsh-git-extension, \u00e4hm, dass ich quasilokal mehr Comets habe als Remote und ich die jetzt pushen k\u00f6nnte. Deswegen ist dajetzt so ein Pfeil nach oben. \u00c4hm, wenn ich jetzt einfach nur die Comet-Message \u00e4ndernwill von meinem letzten Comet, wohlgemerkt, wenn ich noch nicht gepusht habe, sobald ichgepusht habe, soll ich dieses Comet nie wieder anfassen, \u00e4hm, dann kann ich das so machen.Und wir merken uns jetzt mal hier den Hash-Wert von diesem Comet, also quasi die weltweiteindeutige Comet-ID. So, und hiermit kann ich jetzt das letzte Comet nochmal \u00e4ndern.So, und ich wollte schreiben Fixed-Echo-Text. Bam. Und jetzt kommt der Knackpunkt, die Comet-IDhat sich ge\u00e4ndert. Und die Comet-ID ist das, woran Git festmacht, ob es ein Comet ebenkennt oder nicht. Das hei\u00dft, wenn ich es schon gepusht h\u00e4tte, h\u00e4tte das jetzt ge\u00e4ndert,dass, \u00e4h, dann w\u00e4re Git verwirrt. Und alle, die es schon geklont h\u00e4tten, w\u00e4ren auch verwirrt,weil dann auf einmal was verschwindet, was schon mal da war. Und Git basiert darauf,dass nichts verschwindet, sondern nur neue Sachen oben drauf kommen. Also das muss immerso eine, die Historie muss immer quasi eins auf dem anderen aufsetzen und darf sich nichtzwischendrin \u00e4ndern. \u00c4hm, aber nachdem ich das ja nur lokal bei mir hatte, hat das Remotenoch nie jemand gesehen. Sieht man ja auch, wenn ich hier meine Comments angucke, meinneustes Comet hab ich noch \u00fcberhaupt nicht gepusht. Jetzt hab ich es lokal bei mir gefixtund jetzt kann ich das Ganze auch pushen und gut ist. \u00c4hm, so und ich zeig euch jetztmal, was passiert, wenn ich das doch machen w\u00fcrde, die Historie \u00e4ndern. Die haben wasgenannt. GitHub, nee. Fake GitHub. So und dann gucken wir uns mal an, was Branches sind.Comets sind da. Passt, jetzt hab ich es gepusht. So und wenn ich jetzt mich nicht dran halteund sage, ich \u00e4ndere was in meiner Historie, obwohl ich schon gepusht habe. \u00c4h, ah guckmal, der Eaxe ist da. Schon durch, mit was? Du meinst hier mit, \u00e4h, mit Kot? Ne, ichhab heute noch gar nicht gespielt. Ich hatte heute noch keine Zeit. Aber wahrscheinlichspiel ich nachher ne Runde. Komm, wir k\u00f6nnen nachher ne Runde, \u00e4hm, Dings hier War spielenzusammen, wenn du willst. So und wenn ich jetzt jetzt doch mache, also sprich, wennich jetzt doch die Historie \u00e4ndere, obwohl ich schon gepusht hab, machen wir mal, ichhab jetzt schon gepusht, jetzt sag ich, ach nee, ich w\u00fcrde doch gerne, dass mein, dassmeine letzte Comet Message wieder, \u00e4h, nicht Fixed Echo Text ist, sondern, \u00e4h, Changedso Echo, Echo Text. Kann ich lokal machen. Jetzt zeigt es mir hier aber auch schon lokalan, \u00e4h, die Historie passt irgendwie nicht zusammen. Und wenn ich das jetzt versuchezu pushen, dann sagt Git, geht nicht. Weil, Git hat als letztes Comet, das hier und beimir lokal will ich was pushen, wo es dieses Comet nicht gibt. Da sagt Git jetzt irgendwie,Moment, das passt nicht zusammen. \u00c4h, guckst du Overwatch World Cup Halbfinale? Ja, machich. Das geht demn\u00e4chst los, ne? Muss ich mal gucken. Ja, geht irgendwie in 20 Minutenoder so los. Also die Basics mach ich, mach ich immer noch fertig. \u00c4h, \u00e4h, Eax, ichwill Overwatch gucken f\u00e4llt mir gerade ein. Ich wollt, wollt, \u00e4h, Dings die OverwatchHalbfinale gucken. Ich kann's vergessen, dass das jetzt schon anf\u00e4ngt. So, und jetztsieht man schon, wenn ich das versuch zu pushen, geht nicht. So, und eine, die bl\u00f6deste Sache,die ich jetzt machen k\u00f6nnte, ich zeige euch nur mal, dass es geht, ist, wenn ich mit Forcepushe. Weil dann sag ich, Git, einfach schei\u00df drauf, was du denkst, mach's einfach. So,und jetzt sieht man, \u00e4hm, wenn ich jetzt hier auf Comets gehe, jetzt ist das Cometverschwunden und meins da. Jeder, der sich dieses Repo jetzt geklonet h\u00e4tte, w\u00fcrdeeinen Fehler bekommen, wenn er das n\u00e4chste Mal versucht, was zu pullen. Das will mannicht. Also, ganz einfach kann man sich merken, sobald was gepusht ist, wird das nicht mehrangefasst. Nie wieder. Bis das Universum sich in Luft aufl\u00f6st. Was gepusht wurde,public, wird nie wieder angefasst. So. Das muss man jetzt mal so klar sagen. Monka Shake,das macht man nicht, sowas. Weil dann haben alle, die dann dran mitarbeiten und man selbstProbleme danach. Wie kann ich denn jetzt was r\u00fcckg\u00e4ngig machen? \u00c4hm, mal angenommen,ich hab jetzt was gr\u00f6\u00dferes ge\u00e4ndert und das war einfach kompletter Mist. Also sprich,\u00e4hm, ich hab jetzt hier nen S\u00fcndagsfehler drinne. Ich hab jetzt hier nen S\u00fcndagsfehlerdrinne. So. Ich hab ein neues Feature programmiert, was eigentlich, \u00e4hm, ganz toll ist und superfunktionieren sollte. So, und ich hab das jetzt committed, gepusht und jetzt stell ich fest,Mist ich habe Mist gepusht. Ich hab nen S\u00fcndagsfehler drinne. Ja gut. In dem Fall ist es jetzt relativeinfach. Ich mein, ich kann jetzt das genauso machen, wie ich es eben gezeigt hab. Ichk\u00f6nnte hier reingehen, das l\u00f6schen und nochmal neu committen. Aber, wenn wir jetzt mal vonausgehen w\u00fcrden, realistischer gesehen, \u00e4hm, dieses neue Feature w\u00fcrde sich, sagen wirmal, \u00fcber 20 Dateien und 500 ge\u00e4nderte Zeilen erstrecken und ich, quasi derjenige, der sichum das Repo k\u00fcmmert, ja, dass das alles sauber und ordentlich l\u00e4uft, hat gar keine Ahnungvon dem, was dieser Typ da committed hat, dann ist es ganz sch\u00f6n schwierig von Handdas Commit wieder r\u00fcckg\u00e4ngig zu machen und in die Form zu bringen, dass es wieder funktioniert.Bei anderen Versionsverwaltungssystemen w\u00e4re die logischste Schlussfolgerung jetzt, ichrolle zur\u00fcck, also quasi auf den Stand vor diesem Commit, was alles kaputt gemacht hat,weil, ne, dieses Commit hat unser tolles Programm zerst\u00f6rt. Also w\u00fcrde ich jetzt normalerweisehier rauf zur\u00fcckrollen, weil ich wei\u00df, davor ging es noch alles. Das ist ja auch, siehtman es wieder, ist eines der gro\u00dfen Vorteile von einem Versionsverwaltungssystem, da kannich sowas machen, sprich, ich hab hier meine vergangenen St\u00e4nde relativ gut beschriebenund wei\u00df auch jetzt noch, wie das Programm heute Morgen ausgeschaut hat, oder ich kannmir den Stand von heute Morgen auch angucken. Also, wie macht man das jetzt? Also mal angenommen,dieses Feature h\u00e4tte sich jetzt \u00fcber 20 Dateien verteilt und h\u00e4tte 500 Zeilen ge\u00e4ndertund ich hab dieses Feature nicht programmiert, also ich wei\u00df gar nicht genau, was der daeigentlich gemacht hat. Ich will es einfach r\u00fcckg\u00e4ngig machen. Ich will es einfach r\u00fcckg\u00e4ngigmachen und, wie ich es gerade gesagt hab, einfach auf den Stand vorher zur\u00fcckrollenist mit Git nicht. Daf\u00fcr gibt es bei Git den Befehl Revert. Revert macht genau das, wasich vorher von Hand gemacht hab, n\u00e4mlich der dreht das Comet einfach um. Also, ichzeig es euch hier nochmal. In dem letzten Comet wei\u00df Git ja, dass ich, ich zeig malnur das letzte an, Git wei\u00df ja, in dem letzten Comet wurden diese Zeilen ge\u00e4ndert, hinzugef\u00fcgt.So, und Git Revert ist ziemlich simpel in dem, was es macht, das dreht das einfach um.Also sprich, wenn in diesem Comet diese Zeilen hinzugekommen sind, wird ein Git Revert dieseZeilen l\u00f6schen. Zeilen, die gel\u00f6scht werden, wird ein Git Revert hinzuf\u00fcgen. Ein Git Revertmacht quasi einfach ein umgedrehtes Comet. So, und wenn es jetzt wirklich von jemandanderem, was entwickelt worden w\u00e4re, dieses Feature, was jetzt unser Programm kaputtgemacht hat und halt sich \u00fcber 500 Zeilen erstrecken w\u00fcrde und ich will einfach nur,dass das Programm wieder geht, dann w\u00fcrde ich sagen Git Revert, letztes Comet, da kannman jetzt entweder die Comet ID nehmen oder man kann es auch abk\u00fcrzen, wir nehmen jetztmal die Comet ID, das ist glaube ich einfacher und jetzt sagt er mir auch hier, ok, dasist ein neues Comet, aber dieses Comet l\u00f6scht einfach nur die Ver\u00e4nderung von eben diesemComet. Wenn ich jetzt in meine History gucke, ist im Endeffekt genauso, wie ich das vorhervon Hand gemacht habe, blo\u00df, dass das Git Revert automatisch f\u00fcr mich gemacht hat. DasComet ist immer noch da, aber der Inhalt ist wieder weg. Also sprich, die Dateien sindwieder auf dem Stand von da, aber ich bin in der History nicht auf dem Stand von da,sondern dort. So viel zu, wenn man Mist Cometet hat, wie kriegt man es wieder weg. Find ichist eines der wichtigsten Sachen, die man wissen muss, die meisten Git Tutorials machendas irgendwann am Schluss. Und jetzt kann ich das n\u00e4mlich auch pushen ohne Force, weildie History immer noch 1, 2, 3, 4, 5, also aufeinander basiert und nichts mehr verschwindetzwischendurch. So was sieht man ab und zu mal, also sprich, wenn man den \u00f6ffentlichen GitPush guckt, wird man das ab und zu mal sehen, Revert von bla bla bla. Also sprich, da istirgendwie ein Comet reingekommen, was irgendwas kaputt gemacht hat und anstatt es lange zusuchen oder es zu fixen, sagt man, ok, wir Reverten das einfach erstmal wieder, dannist es weg. Aber es ist halt wohlgemerkt aus dem Programm raus, also hier aus dem BashScript ist es raus, allerdings in der Git History ist es noch drin. Das ist wichtigzu wissen. So. N\u00e4chste Frage ist, was ist ein Branch? Wir haben uns jetzt angeguckt,die History, wir haben uns angeguckt, dass jedes Comet eine eindeutige Aldi hat. Ja cheat,ich wei\u00df, dass meine Comet Messages wahnsinnig aussagekr\u00e4ftig sind, aber die sind aussagekr\u00e4ftigerals die meisten Comet Messages, die ich auf der Arbeit lese. So. Also, wir wissen jetzt,wie man was committet, wie man, wenn man Mist committet hat, das wieder wegbekommt und wirwissen, wie man was zu einem Remoteserver pushen kann. Das sind schon mal ganz guteGrundlagen, wo man erstmal mitarbeiten kann und wo man auch schon zumindest in beschr\u00e4nktemUmfang zusammenarbeiten kann. \u00c4h, zockst du heute noch Cod? Ich hatte eigentlich vorheute Cod zu spielen, allerdings f\u00e4ngt gleich der Overwatch World Cup an und ich wollteich gucken. Aber eins, ich muss jetzt mal eine Sache gucken, wenn wir gerade dabei sind.Kommuniert er das? Nein, ich guck das einfach nur. Naja, immerhin 45.000, das ist f\u00fcrimmer noch relativ viel, ja. So. Jetzt gucken wir uns aber nochmal an, zwei Sachen mussman uns noch anschauen, bevor wir so mit den absoluten Git Basics durch sind und zwarsind, was sind Branches und wie f\u00fchrt man zwei Branches wieder zusammen. Das ist einThema, generell kann man \u00fcber diese ganzen Sachen stundenlang erz\u00e4hlen und wir sindwahrscheinlich auch jetzt mit diesem Stream heute noch nicht ganz fertig, weil wirklichweit kommen tut man damit noch nicht, es fehlen noch ein paar Sachen. Aber was wichtig zuwissen ist, was sind Branches. Branches sind \u00e4hm, Namen f\u00fcr einen Commit, k\u00f6nnte manso sagen, wo man sp\u00e4ter noch neue oben drauf legen kann. \u00c4hm, also sprich, ich kann jetzt,dass ich hier im Master Branch drinnen bin, ist einfach nur, weil das so defaultm\u00e4\u00dfigist, weil man in irgendeinem Branch drinnen sein muss. \u00c4hm, Branch ist, gibt's bestimmtein sch\u00f6nes Bild dazu, genau. Ein Branch ist sowas, also quasi, man hat einen Baum, manhat einen Ast und davon gehen halt so kleine Branchen, kleinere \u00c4ste von raus. Und so\u00e4hnlich ist das in Git auch, ich hab hier meinen Master Branch, also quasi das defaultDing, in dem ich standardm\u00e4\u00dfig entwickle. Wenn ich jetzt was neues einbauen m\u00f6chtein unser tolles Bash Crypt. Wenn ich jetzt da irgendwas neues drin einbauen will, wasganz furchtbar experimentell ist zum Beispiel, von dem ich nicht wei\u00df, ob es \u00fcberhauptfunktionieren wird, dann w\u00e4re das ziemlich bl\u00f6d, ich w\u00fcrde das im Master Branch entwickeln,Committen und zwischendrin pushen, weil dann kriegen ja alle Leute die Version, die vielleichtkaputt ist. Und deswegen macht man sich dann meistens einen eigenen Branch auf daf\u00fcr,man kann auch den Master entwickeln, vor allem wenn man alleine an irgendwas entwickelt.Hehe, der Nilsson. \u00dcbrigens Nilsson, was mir gerade einf\u00e4llt, hat dich auf Twitterin dem letzten Mal ein Joe angeschrieben, ob du \u00fcber seine Rechnerzusammenstellung dr\u00fcbergucken k\u00f6nntest. Das w\u00e4re nett von dir, wenn du mal dr\u00fcber gucken k\u00f6nntest, weilda tut sich da sehr schwer. Genau, wir machen jetzt, wir wollen jetzt ein super experimentelleshochkritisches Feature in unser tolles Bash Crypt einbauen. Zum Beispiel, wie das SeriousMax gerade schreibt im Chat Echo123. Ganz kritisch, furchtbar schlimm und das wollenwir nicht in unserem Hauptentwicklungszweig, Hauptentwicklungsbranche machen, weil wirwollen ja da eine Version drin haben, die erstmal, auf den ersten Blick lauff\u00e4higist. Deswegen macht man dann einen eigenen Branch auf, dazu sagt man Git Checkout minusB. Zum Beispiel, \u00e4h, nennen wir jetzt den Branch neues Feature. Das ist vielleichtauch nicht der beste Name. So, \u00e4h, und jetzt hab ich quasi den Stand, ich geh nochmalzur\u00fcck. Fuck, ich hab meine Alias hier nicht, nicht, Git Checkout Master. \u00c4h, jetzt habich quasi den Stand von meiner History genommen und einfach, wie man es hier oben sieht, \u00e4hm,da noch einen weiteren Namen dran geklebt. Also, auf dieses Comet, dieses Comet kannich zur Zeit mit unterschiedlichen Namen ansprechen. Beispielsweise mit Master, mit, ja, FakeGitHat Master, \u00e4h, oder eben auch mit neues Feature. Alle diese Branches zeigen aktuell noch aufdieses Comet. Jetzt hab ich es aber aufgesplittet, indem ich einen neuen Branch gemacht hab undwenn ich jetzt neue Sachen committe, dann sind die erstmal nur in neues Feature drinneund nicht in Master. Also, zum Beispiel, wir machen jetzt hier mal ganz, ganz kritisch,Echo123. Das ist wirklich, das ist hoch expert, wie schreibt man das \u00fcberhaupt? Kritisch.Das ist ganz kritisch, Echo123, das kann echt in die Hose gehen, ja. \u00c4h, das, das committeich jetzt noch mit, \u00e4hm, es ist hier, Achtung, gef\u00e4hrlich. So, jetzt hab ich ein neues Cometangelegt f\u00fcr mein ganz kritisches, \u00e4h, ganz kompliziertes, kritisches Feature und dasist jetzt nur in diesem Branch drinnen. Und wenn man hier auf mein FakeGit Hat noch malgeht, dann sieht man auch aktuell gibt es woanders \u00fcberhaupt eine Branch Anzeige. Ah,hier, Branch. Es gibt aktuell nur Master Branch. Jetzt kann ich das pushen als, \u00e4hm, in diesemBranch und das hat jetzt den gro\u00dfen Vorteil, dass der Master Branch auf einer Version gebliebenist, die geht, die funktioniert, allerdings mein neues Feature Branch eben diesen supergef\u00e4hrlichen Comet enth\u00e4lt, der vielleicht alles kaputt gemacht hat. So, und die Versiondieses Scripts kann man jetzt erstmal ordentlich testen und ausprobieren und wenn dieses neueFeature sich dann als brauchbar herausgestellt hat, dann kann ich sagen, ich nehme das neueFeature jetzt und schiebe das wieder zur\u00fcck in den Master Branch. Aber bis ich das gemachthab, ist im Master Branch weiterhin ein relativ stabiler Stand und alle experimentellen Entwicklungenhier in diesem neuen Feature Branch. Ja, Silbaro, genau daf\u00fcr ist das sinnvoll. Silbaro hatgeschrieben, neue Branches sind voll f\u00fcr neue Versionen oder Betas. Richtig. Man verwendetBranches f\u00fcr unterschiedliche Sachen, entweder gibt es, also eigentlich kann man es machenwie man will, aber es gibt so ein paar Konventionen, wie man das in Neudeutsch nennt, Best Practice,es gibt so ein paar Sachen, die haben sich so etabliert, also man macht Branches beispielsweisef\u00fcr neue Features. Man macht Branches auch f\u00fcr alte Release Versionen, wo man vielleichtnoch was dran fixen muss. Das macht der Lidlxkernel beispielsweise so. Man kann auch Hotfix Branchesmachen. In der Regel macht man Branches immer dann, wenn man erstmal den eigentlichen Standnicht ver\u00e4ndern will und erstmal ausprobieren m\u00f6chte. Deswegen ist es in den Reb, ich mussmeine Git-Aliasse hier einrichten, sonst dreh ich durch. Deswegen ist es auch bei den Git-Repos,die ich verwalte, so, dass in den Master-Branche au\u00dfer mir keiner pushen darf. Das hab ichdurchgeblockt. Au\u00dfer mir darf in 5 Branches keiner pushen, unter anderem Master. So istsichergestellt, dass zumindest ein gewisses Ma\u00df an Kontrolle vorhanden ist, was im Masterkommt und was nicht. Weil es ist einfach so, dass Master eben der Standard-Branch ist,auf dem Leute ihre neuen Entwicklungen aufsetzen. Und der sollte halbwegs stabil sein. Das istnicht das stable Release, was ich jetzt irgendwie zum Download anbiete oder so. Das sollte aberein halbwegs stabiler Entwicklungsstand sein, wo andere Leute drauf aufsetzen k\u00f6nnen. DasDing Master hei\u00dft, ist aber wie gesagt auch einfach nur ein Name, genauso wie das Origindes Remotes. Das ist einfach nur ein Name, ich kann das Ding auch umbenennen. Also wennich jetzt beispielsweise nicht will, dass es standardm\u00e4\u00dfig einen Master-Branch gibt,ich kann's auch umbenennen. Ich kann jetzt auch sagen, Master zu stable. Was bescheuertist, weil in der Regel ist das eben der aktive Entwicklungs-Branch, der aber halt nicht kaputtsein sollte. Und jetzt k\u00f6nnen wir beispielsweise ein neues Feature testen, alles wunderbar.Und wenn ich fertig bin, und das werden wir n\u00e4chstes Mal noch ein bisschen vertiefen,weil dann gucken wir uns mal an, was passiert, wenn das Zusammenf\u00fchren Konflikte gibt undsowas in der Richtung. Wenn ich damit fertig bin, wenn das getestet ist, und nachdem ichdiesen Branch gepusht habe, k\u00f6nnen das nat\u00fcrlich auch andere Leute bei sich ausprobieren,indem sie einfach eben mit Git Checkout den Branch wechseln. Dann kommt das Ganze wiederzur\u00fcck in Master. Ach fuck, wie konnte man Graf mal nochmal Git Lock? So, aktuell siehtunsere History noch ziemlich gerade aus. Erstes Comet, zweites Comet, drittes Comet, viertesComet, jedes Comet setzt aufeinander auf und alles ist gut. So sieht aktuell unsereHistory aus. Wenn ich jetzt fertig bin mit meinem neuen Feature, wenn ich das fertigentwickelt habe, kann ich sagen, ok, ich nehme dieses neue Feature und schiebe es in meinHauptentwicklungsbranche rein, also in Master. Was mache ich mit Git Merge? Diese Optionkann ich n\u00e4chstes Mal erkl\u00e4ren, das muss ich jetzt machen, dass ich \u00fcberhaupt was sehe.So, jetzt kann ich das Mergen, dann gibt es ein eigenes Merge Comet und wenn ich jetztin meine History reingucke, sehe ich, siehe da, das sind die Comets, die wir schon einbisschen hatten und jetzt kommt hier ein neues Comet, das kommt aber aus einem anderen Branch,ich meine, das ist hier so ASCII-Graf gemalt, ja, man kann sich schon so ungef\u00e4hr vorstellen.Bis hier ging es immer geradeaus und da kam aus einem zweiten Branch, hier wurde es abgespaltenaus dem eigentlichen Branch, was committet und das ging dann parallel und hier in diesemletzten Comet wurde es wieder zusammengef\u00fcgt. Ja, nat\u00fcrlich, das war jetzt wirklich dieabsolut ideale Zustand. Es kann ohne Probleme passieren, dass zwei Leute parallel an dergleichen Datei was ge\u00e4ndert haben und dass sich das dann nicht vertr\u00e4gt beim Mergen.Aber das gucken wir uns das n\u00e4chste Mal an und das n\u00e4chste Mal habe ich mir vorher auchein bisschen mehr Gedanken gemacht, was ich eigentlich erz\u00e4hlen will, weil es hat einbisschen gedauert, bis ich reingekommen bin. Zumindest, was wir uns heute angeguckt haben,damit kommt man zumindest auf GitHub so basic-m\u00e4\u00dfig schon mal ganz gut zurecht, man kann sichin den Repo klonen, man kann was editieren, man kann was committen, man kann was pushen,das sind erstmal die wichtigsten Sachen und man kann Branches wechseln, wenn man vielleichtwas ausprobieren will. Ich meine, es k\u00f6nnte ja sein, dass man ein GitHub-Projekt sichangucken m\u00f6chte und halt nicht den Masterstand, den Hauptentwicklungsstand, von dem man sichangucken will, sondern wirklich irgendein experimentales Feature, weil einen das ebeninteressiert. Also Branch wechseln ist auch eine wichtige Geschichte und die logischeSchlussfolgerung daraus ist, man muss auch wissen, wie man zwei Branches wieder zusammenf\u00fchrt.Ja, auskernFox mache ich auch so. Er hat geschrieben, wie h\u00e4ltst du es mit merge und commit? Ichfahre immer ganz gut mit Branches, in die nur committed wird und Branches, in die nurgemerged wird. Das mache ich \u00e4hnlich, mit immer mal kleinen Ausnahmen. Also, was n\u00e4chstesMal ist morgen Mittag? Was meinst du? Also, ich mache das immer mit kleinen Ausnahmen,weil manchmal ist es einfach viel einfacher, wenn man wirklich da irgendwie einen Zahlendreherdrin hat oder sowas. Also, mal angenommen. Mal angenommen, wir haben jetzt eine neueVersion und irgendwie die QS stellt fest, ist irgendwas kaputt. Nat\u00fcrlich kann ichdemjenigen dann sagen, der damit was zu tun hat, hier mach mal einen Hotfix-Branch odersonst was auf, das ist schon sinnvoll. Zu der Reihenlehre nach, ja. Aber wenn das malangenommen wirklich sowas ganz furchtbar Simples ist, dass der einfach, keine Ahnung,Zahlendreher bei einer IP oder bei einem Name oder sowas falsch hat, dann setzen wiruns auch manchmal zu mir an den Rechner, gehen auf den jeweiligen Branch drauf, also aufden Beta, auf den aktuellen Beta-Branch und machen dann halt commit da drauf, obwohl daeigentlich nichts drauf committed werden soll. Das kann ich dann aber entscheiden und wennich das einfach sehe, dass es nur ein Zahlendreher ist oder so, dann sag ich dann, ja okay, komm,lass machen, machen wir keinen extra Branch auf. Aber auf ScanFolks normalerweise machich das auch so, ja. Alle Leute haben gef\u00e4lligst, den eigenen Branch zu entwickeln, es zu testenund quasi als Merchrequest, Pullrequest, wie man es nennt, wie man es auch immer macht,einzureichen als \u00c4nderung f\u00fcr Master. Tobi tickt, benutzt du eine Git GUI um Merchkonfliktezu erkennen? Na ja, Merchkonflikte erkennt man auf jeden Fall, wenn es sobald sie gibt,weil da geht es nicht weiter. Ansonsten verwende ich eigentlich keine GUI f\u00fcr, ich mach das,wenn es kleine \u00fcbersichtliche Merchkonflikte sind, aber das gucken wir uns das n\u00e4chsteMal an. Wenn es kleine \u00fcbersichtliche Merchkonflikte sind, mach ich das hier einfach auf der Kommandozeileim Wim. Oder aber, was auch ein ganz gutes Merch, ganz gut Merch-Diff an sich hat, istVisual Studio Code. Aber normalerweise sind, ich wei\u00df, dass viele Leute, die fr\u00fcher SVNverwendet haben, f\u00fcr die ist Merchen und Merchkonflikte und solche Sachen, das istf\u00fcr die, das ist kurz bevor das Rechenzentrum implodiert quasi, das ist in Git alles nichtso wild. Also die meisten Merchkonflikte sind recht \u00fcbersichtlich. Und ich meine, ich habjetzt noch nie an sowas Gro\u00dfem beispielsweise, oder ich hatte noch nie die Verantwortungf\u00fcr das Repo, sowas Gro\u00dfem wie beispielsweise der Git, \u00e4h, der Linux-K\u00f6nnel, ja. Aberwer hat das schon? Da gibt es eine Handvoll Leute auf der Welt, die das haben. Aber dieRepo, \u00e4h, die Repos bei uns sind relativ gro\u00df. Und die Merchkonflikte, die es da gibt, sindeigentlich recht \u00fcbersichtlich. Das ist nicht so wild. Weil es ist so, dass, es ist ja meistensin einem Projekt, wo mehrere Leute dran arbeiten, schon so ein bisschen aufgeteilt, so wer istf\u00fcr was zust\u00e4ndig. Also es ist selten, dass quasi 3-4 Leute an den gleichen Dateien waseditieren, ja. Der eine k\u00fcmmert sich um das, der eine k\u00fcmmert sich eher um das. Und klar,es gibt auch mal Dateien, wo parallel dran editiert wird. Aber meistens, meistens editierendie Leute an unterschiedlichen Dateien. Dementsprechend gibt es gar keine Merchkonflikte. Oder wennes Merchkonflikte gibt, ist es relativ einfach zu l\u00f6sen. Entweder ist es so offensichtlich,dass man das direkt, dass ich es direkt selber sehe. Oder aber, naja, ich nehme einfach diezwei Leute, von denen die Comets sind und die Bratsches sind, die Konflikten und sagja, Jungs, werdet euch mal einig, wie muss es denn aussehen am Ende. Und das ist meistensnicht, nicht gro\u00dfartig kompliziert. Da sind vielleicht 3-4 Zeilen dann, die da konfliktenoder so. Also es h\u00e4lt sich in Grenzen. Welches Webinterface benutzt ihr in der Firma f\u00fcrPull-Request? GitLab. Wir haben fr\u00fcher GitLab verwendet. Und ich fand GitLab auch ziemlichgut. Ich h\u00e4tte auch GitLab weiterverwendet. Aber die Firma hat sich ganz viele Atlassian-Toolsgekauft. Und jetzt haben wir Bitbucket. Ja, Sebaro. Das stimmt. Irgendjemand hat ebenwas zu Pull-Request. Ach nee, hier war eine Frage drinne. Welches Webinterface benutztihr in der Firma f\u00fcr Pull-Request? GitLab. Bitbucket. Bitbucket. Das ist auch ganz gut.Also im Vergleich zu anderen Kack-Business-Software ist Bitbucket wirklich in Ordnung. Ich findeGitLab auch gut. Wobei GitLab mittlerweile ziemlich aufgebl\u00e4ht ist. Ah gut, es isthalt eine Ruby-On-Wales-Anwendung. So, ich hoffe euch hat der Stream gefallen. Ich gebezu, das war am Anfang ein bisschen chaotisch, weil ich selbst nicht genau wusste, was ichalles erz\u00e4hlen muss, in welcher Reihenfolge und so. Das n\u00e4chste Mal mache ich mir einbisschen mehr Gedanken dr\u00fcber. Aber ich hoffe so die ganz grundlegenden Basics sindzu r\u00fcber gekommen. Also sprich, man k\u00f6nnte jetzt ein Repo von GitHub klonen und dorteine \u00c4nderung mit drin und machen und vielleicht vorher einen eigenen Branch aufmachen unddas Ganze pushen. Morgen geht es weiter. Ja, ich kann morgen weiter machen, Cheat. Hastdu Vorschl\u00e4ge, was ich morgen machen soll? Also was immer super ist, ist wenn die LeuteFragen haben zu irgendwelchen Sachen, dann ist es einfach an roten Fahrten zu finden,was man erz\u00e4hlen kann. Wie schalt es mit dem Discord-Server aus, habe ich noch nicht gemacht.Also was ich morgen, ich werde morgen ein bisschen versteckte Sachen zeigen, die aberrecht praktisch sind. Zum Beispiel, wie man Fehler finden kann. Es gibt in Git eingebauteTools, die einem das Fehler finden ziemlich erleichtern. Also mit Fehler finden meineich jetzt zum Beispiel, man stellt halt wirklich in der Beta-Phase irgendwie fest, es gehtwas nicht und dann geht es darum zu finden oder den Comet rauszufinden, der es kaputtgemacht hat. Das ist in Git viel einfacher als gedacht. Flash Gordon fragt, was ist mitStashing und Staging? Du meinst, was der Unterschied ist? Verstehe ich das richtig? Oder ob iches zeigen soll? Ja, Fatal, das stimmt. So richtige Probleme kriegt man eh erst, wenn man es verwendet.Ja, Cherrypicks ist aber schon ein bisschen, das brauchen die meisten Leute nicht. Dasbrauche ich, wenn man sich um sowas k\u00fcmmert, quasi als Verantwortlicher f\u00fcr die Reposund so und f\u00fcr die unterschiedlichen Entwicklungsstufen. Da braucht man \u00f6fters mal Cherrypick, aberdie meisten Leute brauchen es eigentlich nicht. Ganz simpel gesagt, Flash Gordon, hat Stashund Stage eigentlich \u00fcberhaupt nichts miteinander zu tun, das sind komplett unterschiedlicheSachen. Stashing ist Zwischenspeichern von \u00c4nderungen, wenn man einen Branch wechselnmuss und Staging ist das, was ich vorgemerkt habe f\u00fcr das n\u00e4chste Comet, um es mal ganzkurz zu sagen. Wenn ich etwas adde und noch nicht committe, dann ist es gestaged f\u00fcrdas n\u00e4chste Comet und wenn ich etwas editiert habe, aber jetzt nicht committen will, weilich vielleicht den Branch wechseln muss, weil mein Chef gerade zu mir gekommen ist undgesagt hat, du musst etwas machen, dann stash ich quasi in Zwischenspeicher. Ja, Fatal,das ist cool, dann hat es sich am wenigsten gelohnt, dass ich etwas dazu erz\u00e4hlt habe.Ja, dann mache ich das mal morgen. Es gibt noch einige coole Sachen, die man zeigen kann,wobei man sagen muss, bei Git ist es so, man kann damit alles machen, man kann damit machen,was man will und wie man es will, man sollte aber aufpassen, dass man es nicht \u00fcbertreibt.Nur weil ich 500 Branches anlegen kann, muss ich das nicht unbedingt machen. Git selbstst\u00f6rt das \u00fcberhaupt nicht, Git ist mit 500 Branches noch genauso schnell wie mit 2 Branches,aber es ist halt nicht wirklich \u00fcbersichtlich. Nur weil ich 5 Branches auf einmal merkenkann, weil das Git zul\u00e4sst, muss ich das nicht unbedingt machen. Also, man kann allesmitmachen, es ist auch vollkommen egal, wie man das macht, aber wenn ich bei jedem CometForce pushen muss, mache ich irgendwas verkehrt. Wie w\u00e4re es mit Versionstacks? Ja, k\u00f6nnteman auch machen. Bei der Gelegenheit k\u00f6nnte man eigentlich noch mal sagen, dass CometIDs und Branches und Texts relativ \u00e4hnlich sind. Rebase, Rebase k\u00f6nnte man auch mal machen.Rebase ist wichtig, wenn man halt seine eigenen Comets aufr\u00e4umen will, bevor man sie einreichtals Pull oder Merchrequest. Ja, das werde ich morgen machen. Und jetzt werde ich OverwatchWorld Cup gucken. Ich hoffe euch hat es gefallen. \u00dcbrigens wir haben ja heute unsere LinuxFM verwendet, die wir vor paar Wochen eingerichtet haben zusammen im Stream. Wem das noch nichtaufgefallen ist. Gut. Dann macht's gut, bis morgen. Tsch\u00fcss.", "segments": [{"id": 1, "start": 0.0, "end": 19.36, "text": "H\u00e4h, warum sieht die Quali so kacke aus?"}, {"id": 2, "start": 19.36, "end": 20.36, "text": "Watt!"}, {"id": 3, "start": 20.36, "end": 42.52, "text": "Ach, meine Aufl\u00f6sung ist falsch, lul."}, {"id": 4, "start": 42.52, "end": 43.52, "text": "Geht gut."}, {"id": 5, "start": 43.52, "end": 49.6, "text": "Das ist ein guter Titel, das muss ich jetzt gleich \u00e4ndern."}, {"id": 6, "start": 49.6, "end": 77.24, "text": "Das ist auch ein bester Titel."}, {"id": 7, "start": 77.24, "end": 91.32, "text": "So, also, ich warte mal bis noch ein paar Leute da sind, weil es bringt dann nichts,"}, {"id": 8, "start": 91.32, "end": 101.08, "text": "wenn ich jetzt erz\u00e4hle, was wir heute machen und es ist noch keiner da."}, {"id": 9, "start": 101.08, "end": 113.0, "text": "Was ist das, fragt DxVinstea, ja, meinst du Git oder meinst du das, was du im Hintergrund"}, {"id": 10, "start": 113.0, "end": 114.0, "text": "siehst?"}, {"id": 11, "start": 114.0, "end": 115.0, "text": "Hallo, Opa-Burger."}, {"id": 12, "start": 115.0, "end": 116.0, "text": "Git!"}, {"id": 13, "start": 116.0, "end": 137.2, "text": "Git ist ein Versionsverwaltungssystem oder eine, oh, wie schreiben sie offiziell, eine"}, {"id": 14, "start": 137.2, "end": 141.0, "text": "dezentrale Versionsverwaltung oder so."}, {"id": 15, "start": 141.0, "end": 146.44, "text": "Komm mal gucken, was die selbst sagen, was sie sind."}, {"id": 16, "start": 146.44, "end": 151.84, "text": "Ja gut, it's a version control system, da w\u00e4re ich jetzt auch drauf gekommen."}, {"id": 17, "start": 151.84, "end": 155.72, "text": "Was sagen sie denn selbst, was sie sind?"}, {"id": 18, "start": 155.72, "end": 162.04, "text": "Git easy to learn, lightning fast, das sind immer die besten Intros."}, {"id": 19, "start": 162.04, "end": 165.04, "text": "Ups."}, {"id": 20, "start": 165.04, "end": 174.72, "text": "Das ist noch die Textdatei, wo ich meinen neuen Rechner geplant habe, aber der neue"}, {"id": 21, "start": 174.72, "end": 177.2, "text": "Rechner ist ja mittlerweile am Start."}, {"id": 22, "start": 177.2, "end": 192.8, "text": "Ja, wir gucken uns heute Git an, weil, hat einen ganz speziellen Grund, ich hab das ja"}, {"id": 23, "start": 192.8, "end": 197.84, "text": "auch vor einer Weile schon mal angek\u00fcndigt oder gefragt, besser gesagt, ob ich das machen"}, {"id": 24, "start": 197.84, "end": 204.6, "text": "soll, ob wir uns mal so Git-Grundlagen angucken wollen, sollen, wie auch immer und nachdem"}, {"id": 25, "start": 204.6, "end": 210.6, "text": "ich jetzt schon \u00fcberraschend viele Leute immer mal wieder gefragt haben, wann es das"}, {"id": 26, "start": 210.6, "end": 215.8, "text": "denn jetzt gibt, hab ich mir gedacht, ah ja, go, go, go, da war das jetzt mal."}, {"id": 27, "start": 215.8, "end": 220.28, "text": "Also ich kann jetzt sagen, also wer jetzt Call of Duty haben will, das mach ich vielleicht"}, {"id": 28, "start": 220.28, "end": 225.04, "text": "sp\u00e4ter noch ein paar Runden, aber jetzt machen wir erstmal Git-Grundlagen."}, {"id": 29, "start": 225.04, "end": 241.04, "text": "Mal so in die Runde gefragt, so an die Leute, die schon da sind, habt ihr erstens eine Ahnung,"}, {"id": 30, "start": 241.04, "end": 247.12, "text": "was man mit einem Versionsverwaltungssystem macht oder mit einem Software, Source Code"}, {"id": 31, "start": 247.12, "end": 255.2, "text": "Versionssystem, Versionssystem, wie auch immer man es genau nennen mag, und habt ihr schon"}, {"id": 32, "start": 255.2, "end": 256.2, "text": "mal was mit Git gemacht?"}, {"id": 33, "start": 256.2, "end": 267.32, "text": "Git-Clone, Git-Clone ist, das haben wahrscheinlich die meisten, das ist das erste, was man damit"}, {"id": 34, "start": 267.32, "end": 268.32, "text": "macht."}, {"id": 35, "start": 268.32, "end": 280.88, "text": "Also ich mein, GitHub werden wahrscheinlich auch die meisten kennen, weil man sagen muss,"}, {"id": 36, "start": 280.88, "end": 293.76, "text": "dass GitHub mit Git eigentlich erstmal gar nichts zu tun hat, GitHub ist ein Web-Frontend"}, {"id": 37, "start": 293.76, "end": 301.04, "text": "und hat mit Git an sich nichts zu tun."}, {"id": 38, "start": 301.04, "end": 307.12, "text": "Du hast Git benutzt, um deine Hausaufgaben an der Uni abzugeben, echt, muss man Hausaufgaben"}, {"id": 39, "start": 307.12, "end": 311.48, "text": "mit Git hochladen, auch nicht schlecht."}, {"id": 40, "start": 311.48, "end": 319.76, "text": "Sivuri hat es auch schon benutzt, ja es gibt da mittlerweile f\u00fcr so ziemlich jedes Betriebssystem"}, {"id": 41, "start": 319.76, "end": 328.52, "text": "entweder Pakete oder irgendwas fertig zum installieren oder irgendwelche IDE-Extensions, was auch"}, {"id": 42, "start": 328.52, "end": 335.36, "text": "immer, ist der Sound eigentlich von der Lautst\u00e4rke her so ok, mal kurz gucken, oder soll ich"}, {"id": 43, "start": 335.36, "end": 340.44, "text": "den Sound auch ein bisschen leiser machen, also man kann das ja mittlerweile echt auf"}, {"id": 44, "start": 340.44, "end": 348.52, "text": "jedem Betriebssystem benutzen, ja, aber bevor wir uns jetzt so die Git-Grundlagen angucken"}, {"id": 45, "start": 348.52, "end": 351.92, "text": "k\u00f6nnen, m\u00fcssen wir eine Sache noch machen, nachdem ich keinen Lust habe jetzt irgendeinen"}, {"id": 46, "start": 351.92, "end": 362.32, "text": "GitHub-Account vollzum\u00fcllen mit irgendwas, installieren wir uns oder hab ich ein Git-Management-Web-Frontend"}, {"id": 47, "start": 362.32, "end": 371.08, "text": "schon mal hier lokal bei mir installiert, was fast aussieht wie GitHub, wo wir da unser"}, {"id": 48, "start": 371.08, "end": 375.32, "text": "Repo anlegen k\u00f6nnen, das wir auch mal zu einem Remote-Server pullen k\u00f6nnen oder von einem"}, {"id": 49, "start": 375.32, "end": 378.64, "text": "Remote-Server pullen k\u00f6nnen und zu einem Remote-Server pushen k\u00f6nnen und sowas in"}, {"id": 50, "start": 378.64, "end": 392.04, "text": "der Richtung, Lola ausauf kam ja verbraucht, er macht das schon, so, jetzt mal die Frage,"}, {"id": 51, "start": 392.04, "end": 395.44, "text": "ich muss da selbstfalls ein bisschen reinkommen, ich hab mir ehrlich gesagt nicht so viele"}, {"id": 52, "start": 395.44, "end": 406.28, "text": "Gedanken gemacht, wie wir am besten anfangen, zumindest, zumindest GitHub werden wahrscheinlich"}, {"id": 53, "start": 406.28, "end": 411.76, "text": "die meisten Leute kennen, zum Beispiel der Linux-K\u00f6nnel ist auf GitHub, der South-Code"}, {"id": 54, "start": 411.76, "end": 417.76, "text": "vom Linux-K\u00f6nnel ist auf GitHub, so, da ist er, den klonen wir uns jetzt aber nicht, weil"}, {"id": 55, "start": 417.76, "end": 422.04, "text": "das ist saum\u00e4\u00dfig gro\u00df, ich wei\u00df gar nicht wie lange das mittlerweile dauert, sich den"}, {"id": 56, "start": 422.04, "end": 431.0, "text": "Linux-K\u00f6nnel zu klonen, also da ist, es hat auch ein paar Comets und so mittlerweile, oder"}, {"id": 57, "start": 431.0, "end": 441.0, "text": "was, was ist das f\u00fcr eine nervige Musik, so, es ist von Google beispielsweise auch ganz"}, {"id": 58, "start": 441.0, "end": 448.04, "text": "viel Software auf GitHub, \u00f6ffentlich verf\u00fcgbar, auch im Linux-K\u00f6nnel, aber von Google gibt's"}, {"id": 59, "start": 448.04, "end": 460.6, "text": "auch viel, Microsoft hat Visual Studio Code, auch auf GitHub, den South-Code, ja, Mr."}, {"id": 60, "start": 460.6, "end": 465.8, "text": "Milchmann, den Linux-K\u00f6nnel klonen ist so eine Sache f\u00fcr sich, da w\u00fcrde ich aufpassen,"}, {"id": 61, "start": 465.8, "end": 471.4, "text": "das dauert ewig und ist ziemlich gro\u00df, aber nichtsdestotrotz ist es mit Git alles relativ"}, {"id": 62, "start": 471.4, "end": 475.0, "text": "schnell, wenn man es erstmal geklont hat, so, was wir jetzt als erstes machen, ist wir"}, {"id": 63, "start": 475.0, "end": 480.32, "text": "installieren uns mal so einen kleinen eigenen GitHub-Klon, den wir als Web-Frontend verwenden"}, {"id": 64, "start": 480.32, "end": 485.24, "text": "k\u00f6nnen, wohlgemerkt, das Web-Frontend hat mit Git unten drunter, also mit dem eigentlichen"}, {"id": 65, "start": 485.24, "end": 491.68, "text": "Tool \u00fcberhaupt nichts zu tun, das macht blo\u00df die Verwaltung und die Zusammenarbeit, wenn"}, {"id": 66, "start": 491.68, "end": 497.16, "text": "man mit mehreren Leuten oder auch alleine an unterschiedlichen Projekten in Repos arbeitet,"}, {"id": 67, "start": 497.16, "end": 502.6, "text": "ein bisschen einfacher, und nachdem viele Leute mit GitHub arbeiten, dachte ich mir,"}, {"id": 68, "start": 502.6, "end": 509.64, "text": "es ist genauso wichtig, so ein bisschen das zu zeigen, anstatt nur rein Git auf der Kommando-Zeile,"}, {"id": 69, "start": 509.64, "end": 513.76, "text": "denn wir gucken uns Git an, so wie es gedacht ist, n\u00e4mlich mit den Kommando-Zeilen-Tools,"}, {"id": 70, "start": 513.76, "end": 522.6, "text": "es gibt f\u00fcr fast jede Entwicklungsumgebung mittlerweile Addons, wo man das quasi mit"}, {"id": 71, "start": 522.6, "end": 528.56, "text": "irgendeinem GUI rumklicken kann, gibt's f\u00fcr Eclipse beispielsweise, hat den besten Namen"}, {"id": 72, "start": 528.56, "end": 536.0, "text": "\u00fcberhaupt, hei\u00dft EGIT, passt zu Eclipse, es h\u00f6rt gleich so richtig an, EGIT, aber es"}, {"id": 73, "start": 536.0, "end": 539.88, "text": "ist halt auch Eclipse, da muss man sich nicht wundern, es gibt f\u00fcr aber alle anderen Ideas"}, {"id": 74, "start": 539.88, "end": 545.76, "text": "mittlerweile, entweder schon eingebaut oder aber zum Unterladen, Git Extensions, Visual"}, {"id": 75, "start": 545.76, "end": 549.48, "text": "Studio Code hat's eingebaut, Visual Studio selbst hat's mittlerweile glaube ich auch"}, {"id": 76, "start": 549.48, "end": 558.36, "text": "eingebaut und f\u00fcr die anderen gro\u00dfen Ideas auch, aber ich bin da Ansicht, am besten"}, {"id": 77, "start": 558.36, "end": 563.56, "text": "kann man Git immer noch auf der Kommando-Zeile verwenden, weil das einfach die Tools sind,"}, {"id": 78, "start": 563.56, "end": 569.08, "text": "wof\u00fcr es urspr\u00fcnglich daf\u00fcr entwickelt wurden und viele Sachen unter der Haube kann man"}, {"id": 79, "start": 569.08, "end": 577.48, "text": "auch nur mit den Kommando-Zeilen-Tools machen, so aber vorher, jetzt nochmal eine Frage an"}, {"id": 80, "start": 577.48, "end": 584.48, "text": "euch, wie gesagt wir benutzen kein GitHub Direct, wir benutzen GitHub Clone, bei mir"}, {"id": 81, "start": 584.48, "end": 589.04, "text": "die Lokal, das ist die Frage, ich hab schon einen installiert, den k\u00f6nnen wir gleich"}, {"id": 82, "start": 589.04, "end": 597.48, "text": "verwenden oder wollen wir uns mal einen selbst installieren, ich habe hier meinen Server"}, {"id": 83, "start": 597.48, "end": 606.8, "text": "stehen um die Ecke im Schrank und da k\u00f6nnten wir uns schnell einen Git Tiga, oder wie ihr"}, {"id": 84, "start": 606.8, "end": 612.32, "text": "man das ausspricht, Webfronten dann drauf installieren, dass man auch mal so sieht wie"}, {"id": 85, "start": 612.32, "end": 620.04, "text": "simpel das eigentlich geht, sich quasi so ein privates GitHub zu installieren, wohlgemerkt"}, {"id": 86, "start": 620.04, "end": 625.6, "text": "nochmal an der Stelle, man braucht kein Webfrontend um Git zu verwenden, ich kann auch ohne Probleme"}, {"id": 87, "start": 625.6, "end": 635.84, "text": "rein bei mir Lokal Stream, ich kann auch rein bei mir Lokal Git verwenden und machen und"}, {"id": 88, "start": 635.84, "end": 657.32, "text": "tun, ich brauche dazu kein Webfrontend wie Git haben, jetzt halt die Frage, soll ich"}, {"id": 89, "start": 657.32, "end": 666.12, "text": "erst mal eine Teamarkt Session, Teamarkt setzt irgendwie meine Terminal Variable nicht richtig,"}, {"id": 90, "start": 666.12, "end": 683.8, "text": "kann das sein, kann ja nix werden, wie dem auch sein, ich verbinde mich jetzt mal auf"}, {"id": 91, "start": 683.8, "end": 689.68, "text": "meinen Server und installiere uns einen lokalen GitHub Klon, den wir dann verwenden, was ist"}, {"id": 92, "start": 689.68, "end": 698.64, "text": "der Unterschied zwischen Git Tiga und Gox, Gox, Git Tiga ist ein Gox Fork, das ist alles"}, {"id": 93, "start": 698.64, "end": 703.36, "text": "Go programmiert und alles ziemlich \u00e4hnlich, es gibt eigentlich zwei, ich sag mal drei"}, {"id": 94, "start": 703.36, "end": 710.08, "text": "gr\u00f6\u00dfere GitHub Klone, das ist einmal Gox, das ist einmal Bitbucket und das ist einmal"}, {"id": 95, "start": 710.08, "end": 716.24, "text": "GitLab, wenn ich jetzt noch richtig tippen k\u00f6nnte, das sind so, oder sagen wir mal,"}, {"id": 96, "start": 716.24, "end": 720.4, "text": "wenn man das hier noch mitnimmt, vier, das sind so die vier gr\u00f6\u00dften GitHub Klone zum"}, {"id": 97, "start": 720.4, "end": 725.8, "text": "selbst installieren, GitLab ist mit Abstand am ekligsten und kompliziertesten zu installieren,"}, {"id": 98, "start": 725.8, "end": 730.4, "text": "das ist eine Ruby und Rails Anwendung, funktioniert auch wunderbar, aber das zu installieren ist"}, {"id": 99, "start": 730.4, "end": 738.72, "text": "echt immer ein riesen Akt, Bitbucket gibt es auch zum lokalen installieren, ist von Atlassian,"}, {"id": 100, "start": 738.72, "end": 748.72, "text": "das ist im Business Bereich relativ beliebt und Gox, wahrscheinlich spricht man das Go"}, {"id": 101, "start": 748.72, "end": 755.56, "text": "GS oder so aus, ist auch sowas in der Richtung, so ein GitHub Klon, aber wir installieren"}, {"id": 102, "start": 755.56, "end": 760.24, "text": "uns jetzt erstmal lokal Git Tiga, wie man das auch immer schreibt, das ist ziemlich"}, {"id": 103, "start": 760.24, "end": 763.8, "text": "simpel, ich werde jetzt einfach mal einen Container anlegen auf meinem Server, installieren"}, {"id": 104, "start": 763.8, "end": 771.32, "text": "das und dann verwenden wir das im restlichen Stream, bei uns wird Bitbucket verwendet,"}, {"id": 105, "start": 771.32, "end": 775.24, "text": "ich gehe mal davon aus, dass es Bitbucket nicht Gitbucket hei\u00dfen soll, Bitbucket ist"}, {"id": 106, "start": 775.24, "end": 783.6, "text": "im Business Umfeld tats\u00e4chlich sehr beliebt, weil Bitbuckets kommt von Atlassian und Atlassian"}, {"id": 107, "start": 783.6, "end": 794.68, "text": "stellen ganz viele Business Zeug Software her, so Ticket Systeme und Wikis und so, wo Business"}, {"id": 108, "start": 794.68, "end": 805.0, "text": "Leute draufstehen, deswegen ist im Business Umfeld Bitbucket relativ beliebt, so, ja,"}, {"id": 109, "start": 805.0, "end": 809.76, "text": "schlaue ich mich mal auf meinem Server ein, der den ganz unauff\u00e4lligen Namen POGCHAMP.INTERN"}, {"id": 110, "start": 809.76, "end": 818.76, "text": "tr\u00e4gt, jetzt muss ich aber aufpassen, was ich mache, denn ich will ja hier kein Mist,"}, {"id": 111, "start": 818.76, "end": 826.6, "text": "Mist auf meinem Server treiben, sonst ist alles weg, aber vorher muss ich mal, wie kommt"}, {"id": 112, "start": 826.6, "end": 849.4, "text": "man TMAX Set, weil es geht mir auf den Sack, dass ich keine Farben habe, aha, kann man"}, {"id": 113, "start": 849.4, "end": 863.48, "text": "Default Terminal umstellen, Default Terminal Option, ja, das machen wir doch mal, meine"}, {"id": 114, "start": 863.48, "end": 870.56, "text": "TMAX Conf sieht au\u00dfer ein bisschen Farben, wir k\u00f6nnen auch mal irgendwann uns noch eine"}, {"id": 115, "start": 870.56, "end": 877.56, "text": "Runde TMAX und so die grundlegenden Kommando Zeilen, Tools und sowas angucken, was habe"}, {"id": 116, "start": 877.56, "end": 892.56, "text": "ich mir jetzt verkehrt gemacht, wie ist denn die richtige, achso Set, wie ging das nochmal,"}, {"id": 117, "start": 892.56, "end": 907.0, "text": "Set, achso geht das, ok, wei\u00dft du, Stack Overflow Driven Programming, so ging das, ups,"}, {"id": 118, "start": 907.0, "end": 918.8, "text": "ja, jetzt haben wir glaube ich auch, jetzt haben wir auch ordentliche Farbe und alles,"}, {"id": 119, "start": 918.8, "end": 925.44, "text": "so, loggen wir uns mal auf meinem Server ein und ich schreibe jetzt mein Passwort nicht"}, {"id": 120, "start": 925.44, "end": 932.88, "text": "hin, sodass man das sehen kann, so und wir legen uns jetzt mal einen neuen Container"}, {"id": 121, "start": 932.88, "end": 936.24, "text": "an, das mache ich mit LXT, das kann man auch mit Docker oder sonst was in der Richtung"}, {"id": 122, "start": 936.24, "end": 941.6, "text": "machen, mit Docker ist es ein bisschen einfacher, da gibt es schon komplett fertige Docker Container,"}, {"id": 123, "start": 941.6, "end": 947.44, "text": "die startlich einfach und da l\u00e4uft dann irgendwie in Setze X beliebiges Git Webfrontend ein,"}, {"id": 124, "start": 947.44, "end": 957.44, "text": "wir legen uns jetzt einfach mal selbst einen an, wie nennen wir denn den, Launch, so nennen"}, {"id": 125, "start": 957.44, "end": 963.4, "text": "wir ihn nicht, wir m\u00fcssen ihn irgendwie Twitch Emotes m\u00e4\u00dfig nennen, habe ich schon einen"}, {"id": 126, "start": 963.4, "end": 975.64, "text": "gebated Container, ich glaube nicht, gebated, hei\u00dft der jetzt, so, jetzt haben wir uns noch"}, {"id": 127, "start": 975.64, "end": 983.84, "text": "einen Container angelegt, da brauche ich jetzt nat\u00fcrlich noch ein Netzwerk Interface und"}, {"id": 128, "start": 983.84, "end": 996.68, "text": "jetzt k\u00f6nnen wir uns verbinden in das Ding, so, das wird unser Git Frontend Server, ich"}, {"id": 129, "start": 996.68, "end": 1001.44, "text": "kann mir vorstellen, das ist jetzt ziemlich verwirrend, was ich hier treibe, weil, wei\u00df"}, {"id": 130, "start": 1001.44, "end": 1013.0, "text": "nicht, wie sehr verbreitet Linux Container und sowas sind, zumindest ist es eigentlich"}, {"id": 131, "start": 1013.0, "end": 1021.24, "text": "vollkommen wurscht, weil ich will ja nur mal tempor\u00e4r mir einen Git Webfrontend installieren,"}, {"id": 132, "start": 1021.24, "end": 1031.28, "text": "ist eigentlich egal, was ich genau mache, so, install, wo haben die hier ihre Install Anleitung,"}, {"id": 133, "start": 1031.28, "end": 1041.44, "text": "Git Grundlagen gebated, install, install from binary, das ist ok, das ist Go, Go ist das"}, {"id": 134, "start": 1041.44, "end": 1045.68, "text": "immer relativ simpel, da kann man einfach was runterladen, starten und gut ist, ah, ich"}, {"id": 135, "start": 1045.68, "end": 1049.8, "text": "komme nicht ins Internet, weil ich keine IP habe, dann starten wir mal den Container"}, {"id": 136, "start": 1049.8, "end": 1059.32, "text": "neu, dann kriege ich wahrscheinlich eine IP, so, also habe ich eine IP, jetzt kann ich"}, {"id": 137, "start": 1059.32, "end": 1063.08, "text": "auch den Gram runterladen, wir machen da jetzt gar keine gro\u00dfen Sperenzien, wir lassen es"}, {"id": 138, "start": 1063.08, "end": 1070.08, "text": "jetzt unter root laufen und gut ist, ich m\u00fcsste jetzt von meinem Rechner aus eigentlich gebated.internal"}, {"id": 139, "start": 1070.08, "end": 1080.0, "text": "aufl\u00f6sen k\u00f6nnen, geht nicht, warum geht das nicht, normalerweise sollte man DHCP Server,"}, {"id": 140, "start": 1080.0, "end": 1093.88, "text": "sobald sich, sobald sich den Server eine DHCP IP zieht, sollte der den eigentlich eintragen,"}, {"id": 141, "start": 1093.88, "end": 1099.48, "text": "macht er aber nicht, aber naja, es gibt schlimmeres, warum macht er sowas nicht, was soll das,"}, {"id": 142, "start": 1099.48, "end": 1117.4, "text": "muss ich mal nachgucken, ist aber auch egal, wir k\u00f6nnen auch die IP von dem Ding nehmen,"}, {"id": 143, "start": 1117.4, "end": 1123.4, "text": "kann es sein, dass man Container mit einer VM gleichsetzen kann, so ungef\u00e4hr, es gibt"}, {"id": 144, "start": 1123.4, "end": 1135.6, "text": "halt einen gravierenden Unterschied, dass eine VM quasi die Hardware komplett virtualisiert,"}, {"id": 145, "start": 1135.6, "end": 1143.28, "text": "emuliert, wie auch immer man das will und ein Container nicht, also ein Container, wenn"}, {"id": 146, "start": 1143.28, "end": 1148.4, "text": "du in einem Container ein Programm startest, ist das im Endeffekt kein Unterschied, so"}, {"id": 147, "start": 1148.4, "end": 1152.24, "text": "wie wenn du das auf dem Server direkt starten w\u00fcrdest, blo\u00df das noch so ein bisschen Sandbox"}, {"id": 148, "start": 1152.24, "end": 1160.16, "text": "drum herum ist, VM l\u00e4uft ja komplett in einer eigenen virtuellen Rechner, der mit dem Hostsystem"}, {"id": 149, "start": 1160.16, "end": 1176.44, "text": "nichts mehr zu tun hat, so w\u00fcrde ich mal die Unterschiede beschreiben zwischen Container"}, {"id": 150, "start": 1176.44, "end": 1183.76, "text": "und VM, was ich echt merkw\u00fcrdig finde, dass normalerweise geht das immer, sobald ich einen"}, {"id": 151, "start": 1183.76, "end": 1188.72, "text": "neuen Container anlege, zack, ist der im DNS drinne, ich wei\u00df nicht, warum das nicht funktioniert"}, {"id": 152, "start": 1188.72, "end": 1200.28, "text": "jetzt, weil ich meine, weil man selber funktioniert es ja auch, kann das sein, dass ich noch den,"}, {"id": 153, "start": 1200.28, "end": 1206.72, "text": "dass ich noch Hostname setzen muss, das k\u00f6nnte tats\u00e4chlich sein, dass ich noch Hostname und"}, {"id": 154, "start": 1206.72, "end": 1234.84, "text": "Zeug setzen muss, probieren wir das nochmal aus, Hostname, Ups, Hostname, eh, umgedreht,"}, {"id": 155, "start": 1234.84, "end": 1264.0, "text": "muss man das nochmal gucken, ob es jetzt funktioniert, strage es nebenbei nochmal so ein, so, gut,"}, {"id": 156, "start": 1264.0, "end": 1273.08, "text": "besser wieder, jetzt gehts, sehr sch\u00f6n, es l\u00f6st das auch auf, jetzt haben wir hier eine"}, {"id": 157, "start": 1273.08, "end": 1277.44, "text": "ordentliche Domain, die brauchen wir zwar nicht, aber sie ist sch\u00f6ner, ok, haben wir"}, {"id": 158, "start": 1277.44, "end": 1290.16, "text": "den Krampel runtergeladen, haben wir, ah ja, haben wir, Moment, das ist eine total alte"}, {"id": 159, "start": 1290.16, "end": 1300.6, "text": "Version, die will ich nicht, Downloadpage, kurze Frage Max, wie findest du World War"}, {"id": 160, "start": 1300.6, "end": 1305.36, "text": "2 bisher, also wie gesagt, ich fand es in der Beta schon nicht schlecht, aber es steht"}, {"id": 161, "start": 1305.36, "end": 1316.44, "text": "und f\u00e4llt damit, wie das auf dem PC sich entwickelt mit Spielerzahlen und Cheater, der Milchmann"}, {"id": 162, "start": 1316.44, "end": 1323.96, "text": "hat sich die Linux-Krone geklonen, sehr sch\u00f6n, so, haben wir hier lang genug jetzt rumgemacht,"}, {"id": 163, "start": 1323.96, "end": 1333.4, "text": "jetzt gucken wir uns mal, wirklich Git an, keine Webfront eins, so, jetzt gehen wir mal"}, {"id": 164, "start": 1333.4, "end": 1343.56, "text": "auf unseren lokalen GitHub-Klonen, tubated.internal.port3000, warum port3000, weil es da steht, zack, so,"}, {"id": 165, "start": 1343.56, "end": 1347.72, "text": "wir brauchen eine Lokale, wir benutzen immer SQL-Datenbank-Lokal, nein, nicht immer SQL,"}, {"id": 166, "start": 1347.72, "end": 1369.28, "text": "SQLite-Datenbank-Lokal, Domain is eternal, tubated.internal, so, Admin-Account wird jetzt"}, {"id": 167, "start": 1369.28, "end": 1384.92, "text": "\u00fcber Max, Passwort, ganz furchtbar komplex, adds, was wei\u00df ich, null, einfach komm, egal,"}, {"id": 168, "start": 1384.92, "end": 1395.6, "text": "okay, oh, brauchen wir nicht, wieder neues repo an, so, das ist jetzt nicht GitHub, das"}, {"id": 169, "start": 1395.6, "end": 1403.8, "text": "ist jetzt bei mir lokal installierte Version von, denkst, wie hei\u00dft, Git, Gitia, \u00e4h,"}, {"id": 170, "start": 1403.8, "end": 1408.24, "text": "Richie, \u00e4h, der Richie fragt, was ist Git, denn \u00fcberhaupt, und wozu verwendet man es,"}, {"id": 171, "start": 1408.24, "end": 1414.16, "text": "Git ist ein Versionsverwaltungssystem f\u00fcr, ich lass den Service als Routel auf und sieh"}, {"id": 172, "start": 1414.16, "end": 1418.88, "text": "wo, genau, schei\u00df drauf, das ist jetzt nur zum, zum angucken, nicht f\u00fcr produktiven"}, {"id": 173, "start": 1418.88, "end": 1425.44, "text": "Einsatz, \u00e4hm, das ist ein Versionsverwaltungssystem, das hei\u00dft, damit kann man seinen Source-Code"}, {"id": 174, "start": 1425.44, "end": 1428.68, "text": "verwalten und jetzt nat\u00fcrlich die gro\u00dfe Frage, was hat man davon, wenn man seinen Source-Code"}, {"id": 175, "start": 1428.68, "end": 1435.24, "text": "damit verwaltet, man kann zum Beispiel einfacher Fehler suchen, wann Fehler aufgetreten sind,"}, {"id": 176, "start": 1435.24, "end": 1441.2, "text": "man kann gucken, quasi, wann welche Sachen hinzugekommen sind, ab wann was kaputt ist,"}, {"id": 177, "start": 1441.2, "end": 1448.24, "text": "man kann sich die Versionshistorie angucken, \u00e4hm, wenn man was verkackt, ist es relativ"}, {"id": 178, "start": 1448.24, "end": 1453.52, "text": "einfach, auf einen funktionierenden Stand zur\u00fcckzugehen, wenn man mit mehreren Leuten"}, {"id": 179, "start": 1453.52, "end": 1460.12, "text": "an einem Projekt arbeitet, ist das sehr sch\u00f6n, um das dann am Ende, die Ergebnisse zu kombinieren"}, {"id": 180, "start": 1460.12, "end": 1468.08, "text": "und sowas, also, wenn man nicht gerade allein an irgendwas werkelt, ist es fast schon Pflicht"}, {"id": 181, "start": 1468.08, "end": 1475.96, "text": "und selbst wenn man allein an was werkelt, hat das schon seine Vorteile, weil zum Beispiel,"}, {"id": 182, "start": 1475.96, "end": 1481.12, "text": "ich mein, mal angenommen, man hat jetzt hier irgendwas, irgendwas programmiert, ja, irgendwas"}, {"id": 183, "start": 1481.12, "end": 1487.0, "text": "langes, was auch immer, das ist jetzt irgendwie meine tolle Programmiersprache, so und ich"}, {"id": 184, "start": 1487.0, "end": 1491.64, "text": "hab jetzt ganz viel programmiert, so, einen ganzen Tag lang hab ich das hier jetzt programmiert,"}, {"id": 185, "start": 1491.64, "end": 1496.68, "text": "das war ganz furchtbar schwer und ich mein, jeder kennt's, dass man dann sagt, fuck, irgendwas"}, {"id": 186, "start": 1496.68, "end": 1502.68, "text": "hab ich jetzt kaputt gemacht, woran lag das denn jetzt noch mal und dann f\u00e4ngst du an,"}, {"id": 187, "start": 1502.68, "end": 1508.44, "text": "hier die gro\u00dfe Steuerung Z-Orgie zu machen, bis zu einem Stand vor ein paar Stunden, wo"}, {"id": 188, "start": 1508.44, "end": 1513.24, "text": "du wei\u00dft, dass es funktioniert, dann \u00e4nderst du wieder was und dann vertippst du dich und"}, {"id": 189, "start": 1513.24, "end": 1517.6, "text": "kommst nicht mehr zur\u00fcck und hast zwei Stunden Arbeit verloren, das Problem hat man mit einer"}, {"id": 190, "start": 1517.6, "end": 1522.0, "text": "Versionsverwaltungssystem nicht mehr, wenn man es dann ordentlich verwendet, weil dann"}, {"id": 191, "start": 1522.0, "end": 1526.64, "text": "macht man sich einfach, dann committet man einfach seine Changes, die man zu einem Stand,"}, {"id": 192, "start": 1526.64, "end": 1530.6, "text": "wo man wei\u00df, dass sie funktioniert haben und wenn man es dann verkackt, dann kann ich immer"}, {"id": 193, "start": 1530.6, "end": 1534.92, "text": "noch sagen, ok, ich geh jetzt auf den Stand zur\u00fcck, wo es funktioniert hat, so, legen"}, {"id": 194, "start": 1534.92, "end": 1545.44, "text": "wir mal ein neues Repo an, ja, sowas hatte jeder wahrscheinlich schon, Stream, das brauchen"}, {"id": 195, "start": 1545.44, "end": 1557.88, "text": "wir nicht, Create Repo, der hat's nicht so hier mit Domains richtig setzten, das stimmt"}, {"id": 196, "start": 1557.88, "end": 1568.84, "text": "nicht wirklich, oder, kann man das jetzt noch \u00e4ndern, die Domain ist, ja die Domain ist"}, {"id": 197, "start": 1568.84, "end": 1574.32, "text": "nicht in Tunnel, der h\u00e4tte sagen sollen, man soll den FQDN angeben, Kackprogramm, \u00e4h,"}, {"id": 198, "start": 1574.32, "end": 1584.88, "text": "nervt mich jetzt schon, ich wei\u00df jetzt, wo wir in welchem Ort wir sind, machen wir den"}, {"id": 199, "start": 1584.88, "end": 1591.76, "text": "ganzen Schei\u00df nochmal, so und wir machen jetzt wirklich mal so ganz simple Sachen, wie gesagt"}, {"id": 200, "start": 1591.76, "end": 1595.48, "text": "wir legen uns jetzt ein Repo an, dann machen wir mal ein paar Branches, dann machen wir"}, {"id": 201, "start": 1595.48, "end": 1604.24, "text": "ein paar Commits, dann merken wir das ganze, \u00e4hm, also eigentlich ziemlich, ziemlich"}, {"id": 202, "start": 1604.24, "end": 1621.04, "text": "basic, machen wir die ganzen Kram nochmal, weil's komische Sachen gemacht hat, ok, dann"}, {"id": 203, "start": 1621.04, "end": 1637.32, "text": "ist es jetzt, schreiben wir das halt mal komplett hin, \u00e4h, Admin Accounts, hochkomplexes Passwort,"}, {"id": 204, "start": 1637.32, "end": 1645.24, "text": "so, so, jetzt legen wir nochmal unser Repo an f\u00fcr heute, was wir heute verwenden, nennen"}, {"id": 205, "start": 1645.24, "end": 1653.76, "text": "wir mal Stream, blablabla, create, jetzt stimmt das ganze auch, so, hier stehen jetzt schon"}, {"id": 206, "start": 1653.76, "end": 1671.36, "text": "so ein paar Standard, die Musik ist irgendwie, oh, wupp wupp wupp, wupp wupp wupp, so, das"}, {"id": 207, "start": 1671.36, "end": 1678.88, "text": "ist jetzt quasi unser Fake GitHub, mit unserem Repo drauf, das Repo nennt sich Stream, das"}, {"id": 208, "start": 1678.88, "end": 1683.92, "text": "wird auf GitHub nicht so viel anders aussehen, \u00e4hm, in dem Repo ist noch \u00fcberhaupt nichts"}, {"id": 209, "start": 1683.92, "end": 1690.36, "text": "drinne, deswegen legen wir uns jetzt ein neues Repo an und pushen da initial mal eine leere"}, {"id": 210, "start": 1690.36, "end": 1694.92, "text": "Readme Datei rein, das machen wir nicht so wie es da steht, sondern wir machen das jetzt"}, {"id": 211, "start": 1694.92, "end": 1699.08, "text": "eine Reihe nach, \u00e4hm, ich geh jetzt erstmal in meinen Repo Ordner, das muss man nicht"}, {"id": 212, "start": 1699.08, "end": 1703.72, "text": "machen, aber ich mach das immer ganz gerne, ich hab in meinem Heimatverzeichnis immer"}, {"id": 213, "start": 1703.72, "end": 1707.36, "text": "einen Ordner, der nennt sich Repos, und da sind meine ganzen unterschiedlichen Git Repos"}, {"id": 214, "start": 1707.36, "end": 1712.8, "text": "drinne, die ich von irgendwo geklont hab, oder selbst angelegt hab, \u00e4hm, das sind, irgendwie"}, {"id": 215, "start": 1712.8, "end": 1718.24, "text": "geht mir die Musik heute echt auf den Sack, ich mach jetzt mal aus, hat da, hat jemand"}, {"id": 216, "start": 1718.24, "end": 1731.08, "text": "einen guten Link zu irgendwelcher entspannender Hintergrundmusik, da klone ich meistens meine"}, {"id": 217, "start": 1731.08, "end": 1735.52, "text": "ganzen Repos rein, da wei\u00df ich wenigstens wo sie sind, auf der Arbeit sind da wahrscheinlich"}, {"id": 218, "start": 1735.52, "end": 1739.44, "text": "schon alle 70 Repos oder sowas in der Richtung drinne, so, ich hab sogar schon ein Repo vorhin"}, {"id": 219, "start": 1739.44, "end": 1748.28, "text": "angelegt, ich l\u00f6sch das jetzt aber nochmal, \u00e4hm, Stream, ein Repo legt man ganz einfach"}, {"id": 220, "start": 1748.28, "end": 1753.2, "text": "an, indem man in den Ordner reingeht und sagt Git Init, ich glaube man kann auch sagen Git"}, {"id": 221, "start": 1753.2, "end": 1763.72, "text": "Init Name, geht auch, also man kann auch sagen Git Init Stream, jetzt haben wir ein leeres"}, {"id": 222, "start": 1763.72, "end": 1767.92, "text": "Git Repo angelegt, wo nichts drinne ist, der auch noch keine Comments hat und noch gar"}, {"id": 223, "start": 1767.92, "end": 1778.48, "text": "nichts, es ist einfach ein leeres Git Repo, ich glaub euch nix hier im Chat, was auch immer,"}, {"id": 224, "start": 1778.48, "end": 1783.72, "text": "wenn da einer schon was vorschl\u00e4gt und mit Kappa dahinter, da wei\u00df ich schon, das klappt"}, {"id": 225, "start": 1783.72, "end": 1788.52, "text": "wahrscheinlich eher nicht mit Entspannungsmusik, komm wir machen wieder hier, wie hie\u00df er,"}, {"id": 226, "start": 1788.52, "end": 1796.96, "text": "\u00e4hm, Piano, wie hie\u00df der Typ der, das war doch echt entspannt, das hatten wir doch schon"}, {"id": 227, "start": 1796.96, "end": 1808.2, "text": "mal vor ner Weile an, au\u00dferdem haben es die Japaner halt \u00fcbelst drauf, ja das ist echt"}, {"id": 228, "start": 1808.2, "end": 1822.4, "text": "entspannt, aber es ist ein bisschen leise, ja das ist nice, so, \u00e4hm, wir legen jetzt"}, {"id": 229, "start": 1822.4, "end": 1828.92, "text": "einfach mal ne leere Readme Datei an, in unserem Repo, wir schreiben da nix rein, wir k\u00f6nnen"}, {"id": 230, "start": 1828.92, "end": 1833.24, "text": "da reinschreiben Hallo oder irgendwie sowas, so, und jetzt haben wir gerade ein leeres"}, {"id": 231, "start": 1833.24, "end": 1840.6, "text": "Git Repo angelegt und die erste Datei drin erstellt, das muss keine Readme Datei sein,"}, {"id": 232, "start": 1840.6, "end": 1845.6, "text": "das kann alles m\u00f6gliche sein, das kann auch direkt euren schon vorhandener Source Code"}, {"id": 233, "start": 1845.6, "end": 1850.64, "text": "sein, den ihr da jetzt einfach reinkopiert, was aber wichtig ist, sobald man irgendwas"}, {"id": 234, "start": 1850.64, "end": 1854.84, "text": "ge\u00e4ndert hat und Git mitteilen m\u00f6chte, dass man diesen Stand benutzen will beziehungsweise"}, {"id": 235, "start": 1854.84, "end": 1861.84, "text": "diesen Stand jetzt, \u00e4hm, nen, ja, was man denn, nen Name geben will oder den Stand committen"}, {"id": 236, "start": 1861.84, "end": 1866.76, "text": "will, weil so hei\u00dft der Befehl letztendlich auch, macht man Git commit und am Anfang wird"}, {"id": 237, "start": 1866.76, "end": 1877.64, "text": "er jetzt meckern, dass ich noch keine Lautst\u00e4rke, Lautst\u00e4rke, am Anfang wird er jetzt nat\u00fcrlich"}, {"id": 238, "start": 1877.64, "end": 1885.4, "text": "meckern, dass ich noch keine, keinen Namen und, und Ged\u00f6ns und Zeug gesetzt hab, \u00e4hm,"}, {"id": 239, "start": 1885.4, "end": 1891.88, "text": "aber so ist das halt, \u00e4hm, ja, und er wird wahrscheinlich meckern, dass es nichts zu"}, {"id": 240, "start": 1891.88, "end": 1899.36, "text": "committen gibt, richtig, wir pushen jetzt einfach mal ne leere Datei ins Repo rein und dann"}, {"id": 241, "start": 1899.36, "end": 1915.12, "text": "gucken wir uns das Ganze im Detail nochmal an. So, ich muss, \u00e4h, Name setzen, meine E-Mail"}, {"id": 242, "start": 1915.12, "end": 1929.84, "text": "Adresse ist maxandlocalhost und mein Name ist max, fertig. So, \u00e4hm, und jetzt kann"}, {"id": 243, "start": 1929.84, "end": 1936.4, "text": "ich den Stand nehmen, den ich hier drinne hab und, \u00e4hm, quasi erst mal zu meinem Remote"}, {"id": 244, "start": 1936.4, "end": 1941.92, "text": "Server schieben und sobald ich das gemacht hab, wird dann hier dann auch der ganze Krempel"}, {"id": 245, "start": 1941.92, "end": 1954.88, "text": "drin auftauchen. Hier wird gehackselt, ja, genau, Silent Pain. \u00c4h, Oxygen Event, was"}, {"id": 246, "start": 1954.88, "end": 1968.2, "text": "meinst du? F\u00fcr was ist das ganze Programmierzeug? Ja, zum Programmieren, oder was meinst du?"}, {"id": 247, "start": 1968.2, "end": 1979.48, "text": "\u00c4h, Swiss fragts, Max, auf wieviel Gigahertz ist dein i7-8700k? Auf 5 ist der. Mittlerweile."}, {"id": 248, "start": 1979.48, "end": 1990.92, "text": "Auf 5 Gigahertz. Max, hast du schon mal versucht einen Cheat f\u00fcr ein Game zu programmieren?"}, {"id": 249, "start": 1990.92, "end": 2008.44, "text": "N\u00f6. So, \u00e4hm, wobei das machen wir nicht, wir machen das so wie die das geschrieben"}, {"id": 250, "start": 2008.44, "end": 2020.6, "text": "haben. Wat? Ich darf nicht drauf zugreifen, warum? Ah, ich darf wahrscheinlich nicht"}, {"id": 251, "start": 2020.6, "end": 2032.04, "text": "drauf zugreifen, weil ich, ich muss wahrscheinlich noch mein SSH Key, mein SSH Key noch hier"}, {"id": 252, "start": 2032.04, "end": 2037.64, "text": "irgendwie hinterlegen, irgendwo, wo auch immer, der genau hin muss. Ist nat\u00fcrlich jetzt"}, {"id": 253, "start": 2037.64, "end": 2041.44, "text": "ein bisschen doof. Ja, ich h\u00e4tt mir das vielleicht ein bisschen besser \u00fcberlegen sollen am Anfang,"}, {"id": 254, "start": 2041.44, "end": 2051.2, "text": "wie wir das machen, aber gleich, gleich haben wir's. \u00c4h, wahrscheinlich new settings, SSH"}, {"id": 255, "start": 2051.2, "end": 2061.84, "text": "Key, geht das so? Ich hab das Tool noch nie verwendet. Sehr sch\u00f6n, hat funktioniert."}, {"id": 256, "start": 2061.84, "end": 2065.36, "text": "So, in dem Zustand, wie unser Repo jetzt ist, vergesst einfach alles, was wir gerade gemacht"}, {"id": 257, "start": 2065.36, "end": 2070.08, "text": "haben, in dem Zustand, wie unser Repo jetzt ist, sieht es normalerweise so aus, wenn man"}, {"id": 258, "start": 2070.08, "end": 2075.56, "text": "es sich von GitHub geklonet hat. Also sprich, man hat, \u00e4hm, das k\u00f6nnen wir jetzt auch mal"}, {"id": 259, "start": 2075.56, "end": 2089.84, "text": "machen. Wo ist es denn hin? Genau, jetzt ist die ReadMe drinne und sonst nix. So, wir l\u00f6schen"}, {"id": 260, "start": 2089.84, "end": 2094.24, "text": "das Repo jetzt nochmal lokal und eine Sache wird man dann schon sehen, wenn ich lokal"}, {"id": 261, "start": 2094.24, "end": 2099.04, "text": "irgendwas an meinem Repo mache, hat das logischerweise \u00fcberhaupt keine Auswirkungen drauf, was mit"}, {"id": 262, "start": 2099.04, "end": 2104.04, "text": "dem Stand irgendwo anders passiert. Und das ist eine ganz wichtige Sache, die man sich"}, {"id": 263, "start": 2104.04, "end": 2111.76, "text": "bei Git erstmal standardm\u00e4\u00dfig merken muss, \u00e4hm, bevor ich nicht was pushe, es ist alles"}, {"id": 264, "start": 2111.76, "end": 2117.56, "text": "nur lokal, auch wenn da lokal irgendwie Remote dran steht oder sowas in der Richtung. Das"}, {"id": 265, "start": 2117.56, "end": 2122.4, "text": "ist vollkommen wurscht bei Git, es ist alles nur lokal, das muss man sich merken. Also"}, {"id": 266, "start": 2122.4, "end": 2127.44, "text": "man kann nichts irgendwie kaputt machen, das ist nicht wie bei SVN oder sowas in der Richtung,"}, {"id": 267, "start": 2127.44, "end": 2132.68, "text": "wo man quasi halb immer mit einem Bein auf dem Server ist. Bei Git ist alles standardm\u00e4\u00dfig"}, {"id": 268, "start": 2132.68, "end": 2139.64, "text": "lokal, bis man explizit sagt, man schiebt es irgendwo hin. Auch wenn es auf den ersten"}, {"id": 269, "start": 2139.64, "end": 2147.88, "text": "Blick nicht so aussieht. So, also wenn jemand schon mal auf GitHub war, \u00e4hm, oder falls"}, {"id": 270, "start": 2147.88, "end": 2152.04, "text": "irgendjemand sich jetzt mal die Linux-K\u00f6rne klonen will oder sowas in der Richtung, \u00e4hm,"}, {"id": 271, "start": 2152.04, "end": 2159.2, "text": "ja, Patrick, ich hause mir ein Git-Tee, oder wie das Ding hie\u00df. Ist einfacher zu installieren"}, {"id": 272, "start": 2159.2, "end": 2170.72, "text": "als GitLab. Man kann auch GitLab verwenden, ist eigentlich \u00fcberhaupt kein Ding. So. Z-Frames,"}, {"id": 273, "start": 2170.72, "end": 2175.48, "text": "das guck ich mir nachher mal irgendwann an. So, \u00e4hm, also vollkommen unabh\u00e4ngig von dem,"}, {"id": 274, "start": 2175.48, "end": 2179.8, "text": "was wir jetzt gemacht haben, der erste Schritt, wo viele Leute erstmal mit Git in Ber\u00fchrung"}, {"id": 275, "start": 2179.8, "end": 2183.56, "text": "kommen, ist, wenn sie sich irgendwo in ein Repo klonen wollen. Also sprich, den Source-Code"}, {"id": 276, "start": 2183.56, "end": 2189.44, "text": "beispielsweise von GitHub, hier jetzt von Visual Studio Code oder von irgendwelchen Projekten"}, {"id": 277, "start": 2189.44, "end": 2197.08, "text": "wollen sie sich lokal bei ihnen auf dem Rechner klonen, editieren vielleicht, vielleicht"}, {"id": 278, "start": 2197.08, "end": 2201.0, "text": "auch noch was einreichen, dann wieder bei dem jeweiligen Projekt. Aber das erste, womit"}, {"id": 279, "start": 2201.0, "end": 2203.84, "text": "Leute in Kontakt kommen, ist wahrscheinlich Git-Clone. Und Git-Clone ist auch genauso"}, {"id": 280, "start": 2203.84, "end": 2208.12, "text": "simpel, wie es aussieht. Man schreibt einfach hin, Git-Clone, und dann die Url, was man"}, {"id": 281, "start": 2208.12, "end": 2212.44, "text": "sich klonen will, und dann hat man lokal einen Ordner von dem jeweiligen Repo, was"}, {"id": 282, "start": 2212.44, "end": 2219.28, "text": "man sich geklont hat. Also easy. Das ist auch noch nicht wirklich das Komplizierte. Das"}, {"id": 283, "start": 2219.28, "end": 2223.2, "text": "kriegt glaube ich jeder noch hin. Das kann man auch mit allen m\u00f6glichen Sachen machen."}, {"id": 284, "start": 2223.2, "end": 2226.32, "text": "Ich k\u00f6nnte jetzt auch beispielsweise sagen, jetzt sind wir hier auf GitHub, ich k\u00f6nnte"}, {"id": 285, "start": 2226.32, "end": 2232.52, "text": "auch sagen, hier, ich will mir jetzt einfach mal Visual Studio Code klonen. Das funktioniert,"}, {"id": 286, "start": 2232.52, "end": 2236.12, "text": "kann ich machen. Git-Clone, bam, das man sieht schon, das dauert ein bisschen l\u00e4nger,"}, {"id": 287, "start": 2236.12, "end": 2243.32, "text": "das ist auch ein bisschen gr\u00f6\u00dfer. Funktioniert, ist \u00fcberhaupt kein Ding. \u00c4hm, wirklich interessant"}, {"id": 288, "start": 2243.32, "end": 2250.36, "text": "wird es nat\u00fcrlich erst, wenn man was editiert, bzw. wenn man was entwickelt. Und noch interessanter"}, {"id": 289, "start": 2250.36, "end": 2255.32, "text": "wird es, wenn mehrere Leute dran editieren und dran entwickeln. Was man eben schon ganz"}, {"id": 290, "start": 2255.32, "end": 2260.32, "text": "gut gesehen hat, ist die Musik wieder ein bisschen laut, ne? Ach wobei, nicht, das passt."}, {"id": 291, "start": 2260.32, "end": 2266.32, "text": "Aber ein bisschen. Was man eben schon ganz gut gesehen hat, ich meine, ich konnte lokal"}, {"id": 292, "start": 2266.32, "end": 2270.64, "text": "das Repo l\u00f6schen und es war Remod noch da. Das hei\u00dft, jeder der an irgendeinem Projekt"}, {"id": 293, "start": 2270.64, "end": 2280.24, "text": "mitarbeitet und das Repo sich geklont hat, hat lokal erstmal ne Kopie vom kompletten"}, {"id": 294, "start": 2280.24, "end": 2289.2, "text": "Repo. Wirklich komplett, mit allem dabei. \u00c4hm, das hat nat\u00fcrlich den riesen Vorteil,"}, {"id": 295, "start": 2289.2, "end": 2293.08, "text": "es geht auch nicht so leicht mal was verloren. Selbst wenn der Server, auf dem das ganze"}, {"id": 296, "start": 2293.08, "end": 2298.68, "text": "mal gehostet war, oder gehostet ist, wenn der verreckt, also wenn morgen jetzt beispielsweise"}, {"id": 297, "start": 2298.68, "end": 2305.44, "text": "GitHub abraucht, wei\u00df ja nicht, k\u00f6nnte sein, so Ruby on Rails Abwendung, \u00e4hm, wenn morgen"}, {"id": 298, "start": 2305.44, "end": 2311.0, "text": "GitHub abraucht, ist der Source Code von Visual Studio Code garantiert nicht verloren, weil"}, {"id": 299, "start": 2311.0, "end": 2316.52, "text": "sich mindestens 5000 Leute dieses Repo bisher geforkt haben, \u00e4h, und sich wahrscheinlich"}, {"id": 300, "start": 2316.52, "end": 2321.8, "text": "noch viel viel mehr Leute dieses Repo mal lokal bei sich irgendwo hingeklont haben."}, {"id": 301, "start": 2321.8, "end": 2334.64, "text": "Und das ist auch eines der wichtigsten Unterschiede zu \u00e4hm, anderen Versionsverwaltungssystemen"}, {"id": 302, "start": 2334.64, "end": 2341.8, "text": "wie, \u00e4h, wie SVN oder sowas, dass man eben erstmal haupts\u00e4chlich lokal arbeitet und"}, {"id": 303, "start": 2341.8, "end": 2349.6, "text": "erst dann pusht, bzw. sich neue Changes pullt. Und man kann Git nach Herzenlust ausprobieren"}, {"id": 304, "start": 2349.6, "end": 2353.68, "text": "bei sich lokal, man kann nichts kaputt machen. Es w\u00e4re ja auch ziemlich bescheuert, ich meine,"}, {"id": 305, "start": 2353.68, "end": 2357.04, "text": "ich hab mir jetzt hier den Source Code von Visual Studio Code geklont und ich l\u00f6sche"}, {"id": 306, "start": 2357.04, "end": 2363.36, "text": "jetzt einfach mal alles. B\u00e4m! Es w\u00e4re ganz sch\u00f6n bescheuert, wenn es jetzt bei Microsoft"}, {"id": 307, "start": 2363.36, "end": 2371.56, "text": "gel\u00f6scht w\u00e4re, ne? Ist es nicht, es ist nur bei mir lokal gel\u00f6scht. Ok, gehen wir mal"}, {"id": 308, "start": 2371.56, "end": 2376.96, "text": "wieder in unser Test Repo. Wenn man jetzt was entwickelt, irgendwas kleines, ja? Irgendeine"}, {"id": 309, "start": 2376.96, "end": 2382.8, "text": "Mini-Anwendung. Wir k\u00f6nnen jetzt ja mal hier im, im, wir machen irgendwie mal so ein Mini-Bashed"}, {"id": 310, "start": 2382.8, "end": 2388.52, "text": "Crypt, was, was irgendeinen Mist ausgibt oder so. \u00c4hm, dann commiten wir da ein paar \u00c4nderungen"}, {"id": 311, "start": 2388.52, "end": 2396.48, "text": "rein und dann pushen wir das und merchant das und schauen uns das mal in der Ruhe, \u00e4h,"}, {"id": 312, "start": 2396.48, "end": 2404.56, "text": "in Ruhe an. \u00c4hm, ich muss sagen, mir f\u00e4llt es ein bisschen schwierig, das so zu erkl\u00e4ren"}, {"id": 313, "start": 2404.56, "end": 2409.0, "text": "von Anfang an, dass das alles nachvollziehbar ist, weil ich benutze das schon eine ganze"}, {"id": 314, "start": 2409.0, "end": 2415.6, "text": "Weile und ich k\u00fcmmere mich eigentlich haupts\u00e4chlich um der, auf der Arbeit, um unsere Git Repos,"}, {"id": 315, "start": 2415.6, "end": 2421.6, "text": "um unsere Software Repos. Und viele Sachen, die ich wahrscheinlich einfach so mache, leuchten"}, {"id": 316, "start": 2421.6, "end": 2438.16, "text": "euch nicht so gro\u00dfartig ein, k\u00f6nnte ich mir vorstellen. So, \u00e4hm, ja, es gibt ein paar"}, {"id": 317, "start": 2438.16, "end": 2442.2, "text": "wichtige Sachen, die man auch wissen muss, wo immer einige Leute durcheinander kommen."}, {"id": 318, "start": 2442.2, "end": 2451.68, "text": "Es gibt, \u00e4hm, wenn man sich ein Repo geklont hat, gibt es standardm\u00e4\u00dfig erstmal zwei"}, {"id": 319, "start": 2451.68, "end": 2459.32, "text": "Sachen, oder meistens zwei Sachen standardm\u00e4\u00dfig. \u00c4hm, die Quelle, von der man sich das Repo"}, {"id": 320, "start": 2459.32, "end": 2468.0, "text": "geklont hat, ist standardm\u00e4\u00dfig eingetragen hier als Remote-Server. Der nennt sich Origin,"}, {"id": 321, "start": 2468.0, "end": 2472.6, "text": "das Ding hei\u00dft immer Origin. Origin ist immer der Server, von dem ich mir mein Repo geklont"}, {"id": 322, "start": 2472.6, "end": 2479.64, "text": "habe, aber das muss nicht so hei\u00dfen. Das kann irgendwie hei\u00dfen. Origin ist einfach nur Name"}, {"id": 323, "start": 2479.64, "end": 2484.68, "text": "und sie mussten ja irgendeinen Default-Name vergeben. Ja, ich glaube, der Nightbot ist"}, {"id": 324, "start": 2484.68, "end": 2490.28, "text": "abgeschmiert, Sebaro, stimmt's? Aber die haben gestern auch schon ganz sch\u00f6n rumgeleckt."}, {"id": 325, "start": 2490.28, "end": 2498.08, "text": "Vielleicht ist es einfach kaputt. Das muss man sich merken, \u00e4hm, Origin ist einfach nur"}, {"id": 326, "start": 2498.08, "end": 2501.0, "text": "ein Name. Das sehe ich auch auf der Arbeit ganz oft, dass viele Leute denken, Origin"}, {"id": 327, "start": 2501.0, "end": 2506.72, "text": "w\u00e4re irgendein Git-Befehl oder sowas. Und das hat auch nichts mit Origin von EA zu tun,"}, {"id": 328, "start": 2506.72, "end": 2512.08, "text": "sondern es ist einfach gemeint, von da hast du es halt urspr\u00fcnglich geklont, dein Repo."}, {"id": 329, "start": 2512.08, "end": 2521.48, "text": "Aber man kann auch mehrere Remote-Repos haben und dort Sachen reinpushen. Also ich k\u00f6nnte"}, {"id": 330, "start": 2521.48, "end": 2528.92, "text": "beispielsweise hier meinen lokalen Server haben, wo halt dieses Frontend beispielsweise"}, {"id": 331, "start": 2528.92, "end": 2534.28, "text": "drauf l\u00e4uft, plus noch einen Rechner von einem Kumpel, der bei mir mitentwickelt, oder noch"}, {"id": 332, "start": 2534.28, "end": 2538.92, "text": "einen Server in irgendeinem Rechenzentrum, auf dem die Anwendung wirklich drauf l\u00e4uft."}, {"id": 333, "start": 2538.92, "end": 2547.56, "text": "Und die kann ich mir alle als Remotes eintragen und bei Push und Pull verwenden. Aber dass"}, {"id": 334, "start": 2547.56, "end": 2553.52, "text": "das Ding Origin hei\u00dft, ist vollkommen egal, ist einfach nur ein Name. So, und was man"}, {"id": 335, "start": 2553.52, "end": 2570.8, "text": "auch wissen muss... H\u00e4, Siebauer, was? H\u00e4, verstehe ich nicht. Was man auch noch wissen"}, {"id": 336, "start": 2570.8, "end": 2581.0, "text": "muss, dass man standardm\u00e4\u00dfig eine Branche hat, der Master hei\u00dft, das ist auch einfach"}, {"id": 337, "start": 2581.0, "end": 2588.96, "text": "nur, weil er ja irgendwas nach dem Klonen anzeigen muss. Und dann nimmt er einfach standardm\u00e4\u00dfig"}, {"id": 338, "start": 2588.96, "end": 2596.56, "text": "Master, wenn es ihn gibt. Das ist nichts, was wirklich so hei\u00dfen muss. Viele Leute denken,"}, {"id": 339, "start": 2596.56, "end": 2602.32, "text": "die Dinger m\u00fcssen Origin oder m\u00fcssen Master hei\u00dfen, ist vollkommen egal. So, also wir"}, {"id": 340, "start": 2602.32, "end": 2611.4, "text": "haben jetzt wirklich ein ziemlich leeres, quasi nur mit einer Datei bef\u00fcllendem repo."}, {"id": 341, "start": 2611.4, "end": 2616.96, "text": "Und in dieser Datei steht einfach nur Hallo drin. Wenn wir uns jetzt mal die History angucken,"}, {"id": 342, "start": 2616.96, "end": 2622.44, "text": "sehen wir, es gibt genau ein Comment, das ist von mir und das ist vor, was wei\u00df ich, 10"}, {"id": 343, "start": 2622.44, "end": 2632.04, "text": "Minuten entstanden und ist offensichtlich das erste. Was man bei Git wissen muss, was"}, {"id": 344, "start": 2632.04, "end": 2639.8, "text": "ist, oder so die Grundlagen, mit denen man fr\u00fcher oder sp\u00e4ter in Ber\u00fchrung kommt, sind,"}, {"id": 345, "start": 2639.8, "end": 2652.32, "text": "was sind Comments, was sind Branches, vielleicht noch was sind Tags und was gibt es denn sonst"}, {"id": 346, "start": 2652.32, "end": 2660.8, "text": "noch interessantes, was sind Remotes. Aber am wichtigsten ist eigentlich am Anfang mal"}, {"id": 347, "start": 2660.8, "end": 2667.64, "text": "zu wissen, was ist ein Branch und was ist ein Comment. Wenn ich jetzt hier irgendwas anfange"}, {"id": 348, "start": 2667.64, "end": 2674.64, "text": "zu entwickeln, so beispielsweise, ich will jetzt ein ganz tolles Bash-Skript programmieren,"}, {"id": 349, "start": 2674.64, "end": 2680.48, "text": "was irgendwas tolles macht. Ich hatte ja einer eine glorreiche Idee, was das tolles machen"}, {"id": 350, "start": 2680.48, "end": 2691.08, "text": "k\u00f6nnte. Oder machen wir es anders. Komm, wir einfach alles in Mastercommenten. Ja, das"}, {"id": 351, "start": 2691.08, "end": 2694.6, "text": "ist finde ich sogar, \u00e4h, Patrick, das ist finde ich sogar legitim, wenn man das macht,"}, {"id": 352, "start": 2694.6, "end": 2699.12, "text": "wenn man alleine daran entwickelt. Wir machen das jetzt mal, das repo machen wir jetzt mal"}, {"id": 353, "start": 2699.12, "end": 2706.44, "text": "auf mit Visual Studio Code, dass man bisschen GUI-m\u00e4\u00dfig, dass man sieht, dass das \u00fcberhaupt"}, {"id": 354, "start": 2706.44, "end": 2729.6, "text": "nichts mit den eigentlichen Programmen zu tun hat, was man verwendet. \u00c4hm, \u00e4h, Open"}, {"id": 355, "start": 2729.6, "end": 2739.96, "text": "Folder. Plende das standardm\u00e4\u00dfig Readmees aus, das Ding, oder was? Lull. Ein Skript,"}, {"id": 356, "start": 2739.96, "end": 2743.56, "text": "das den Sinn des Lebens bricht. Jawoll, das k\u00f6nnen wir machen. Also, wir fangen jetzt,"}, {"id": 357, "start": 2743.56, "end": 2749.16, "text": "wir fangen jetzt mal an ein ganz tolles Bash-Skript zu programmieren. \u00c4hm, und danach kommitten"}, {"id": 358, "start": 2749.16, "end": 2753.4, "text": "wir das in unser Git-Repo, machen \u00c4nderungen und Dinger. Ich glaube, dann wird das wahrscheinlich"}, {"id": 359, "start": 2753.4, "end": 2759.64, "text": "auch alles ein bisschen, bisschen greifbarer. Wie macht mir die neue Datei-Steuerung N. So,"}, {"id": 360, "start": 2759.64, "end": 2772.4, "text": "das wird jetzt, \u00e4h, unser ganz tolles Bash-Skript. Die Schrift ist riesengro\u00df. Echo. Hallo Twitch."}, {"id": 361, "start": 2772.4, "end": 2788.28, "text": "Ups, ich hab einen Punkt zu viel. So. Und, wenn man sich das jetzt mal anguckt in unserem"}, {"id": 362, "start": 2788.28, "end": 2793.48, "text": "Git-Repo, \u00e4h, Hasenk\u00fcrze fragt, was ist deiner Meinung nach die Entwicklungsumgebung"}, {"id": 363, "start": 2793.48, "end": 2799.16, "text": "der Zukunft? Eclipse Intellijane Visual Studio kommt drauf an, f\u00fcr was. Also, ich denke,"}, {"id": 364, "start": 2799.16, "end": 2807.6, "text": "unter Windows und f\u00fcr Microsoft-Ged\u00f6ns, was, also sowas wie C-Sharp oder, oder VisualBasic.net"}, {"id": 365, "start": 2807.6, "end": 2815.84, "text": "oder solche Dinger. Ich bin im falschen Ordner gelandet. Echt? Ne, ich glaub, ich glaub,"}, {"id": 366, "start": 2815.84, "end": 2826.32, "text": "das passt. \u00c4hm, ne, ich bin im falschen Ordner. WTF, h\u00e4? Ach, ich bin im falschen, ja, ich"}, {"id": 367, "start": 2826.32, "end": 2834.84, "text": "bin wirklich im falschen Ordner. Lul. Da ist es. Da ist jetzt auch das drinne. Naja,"}, {"id": 368, "start": 2834.84, "end": 2840.84, "text": "um nochmal zur Entwicklungsumgebung zur\u00fcckzukommen. Jetzt ist auch die ReadMe drinne, ja. Jetzt"}, {"id": 369, "start": 2840.84, "end": 2845.48, "text": "funktioniert das Ganze auch. \u00c4hm, unter Windows wird es weiter Visual Studio bleiben. F\u00fcr"}, {"id": 370, "start": 2845.48, "end": 2851.52, "text": "JavaScript seh ich, also f\u00fcr JavaScript und Webzeug, seh ich ehrlich gesagt Visual Studio"}, {"id": 371, "start": 2851.52, "end": 2861.24, "text": "Code ziemlich weit vorne und ist auch recht beliebt. F\u00fcr C++ find ich den Cute Creator"}, {"id": 372, "start": 2861.24, "end": 2867.48, "text": "ziemlich gut. Aber man kann auch, wenn man Windows Zeug entwickelt, das ohne Problem"}, {"id": 373, "start": 2867.48, "end": 2876.48, "text": "mit Visual Studio machen. Und f\u00fcr Java und solche Sachen, ich hasse Eclipse. Ich, Eclipse"}, {"id": 374, "start": 2876.48, "end": 2881.52, "text": "ist wirklich, da musst du instant kotzen, wenn man es benutzen muss. \u00c4hm, wenn, dann"}, {"id": 375, "start": 2881.52, "end": 2891.96, "text": "verwende ich Intelli, war das IntelliJ? IntelliJ, ID, genau, ja, das Ding. F\u00fcr Groovy und solche"}, {"id": 376, "start": 2891.96, "end": 2899.84, "text": "Sachen. Aber, \u00e4hm, f\u00fcr Webgeschichten ist Visual Studio Code zur Zeit sehr angesagt."}, {"id": 377, "start": 2899.84, "end": 2911.88, "text": "So, jetzt hab ich, jetzt hab ich irgendwie ziemlich n Mist gemacht hier. So, \u00e4hm, wir"}, {"id": 378, "start": 2911.88, "end": 2917.08, "text": "haben jetzt angefangen unser tolles Bash Script zu programmieren. Das macht nicht sonderlich"}, {"id": 379, "start": 2917.08, "end": 2926.4, "text": "viel. Das macht aktuell noch gar nix. Au\u00dfer auszugeben, hallo Twitch. Nein, das neue Assassin's"}, {"id": 380, "start": 2926.4, "end": 2935.12, "text": "Creed hab ich mir noch nicht angeguckt. \u00c4hm, jetzt will ich aber vielleicht, dass da der"}, {"id": 381, "start": 2935.12, "end": 2941.36, "text": "Patrick oder der Sebaro oder irgendjemand dran mitarbeiten k\u00f6nnen. Und deswegen muss"}, {"id": 382, "start": 2941.36, "end": 2949.48, "text": "ich jetzt erstmal mein tolles neues Bash Script comitten und pushen, dass das irgendjemand"}, {"id": 383, "start": 2949.48, "end": 2956.84, "text": "anderes verwenden k\u00f6nnte. Und man sieht hier schon, dass Git da grunds\u00e4tzlich das erstmal"}, {"id": 384, "start": 2956.84, "end": 2962.44, "text": "unterscheidet zwischen Dateien, die es kennt und Dateien, die es nicht kennt. Wenn ich"}, {"id": 385, "start": 2962.44, "end": 2969.4, "text": "eine neue Datei angelegt hab, dann sagt Git erstmal standardm\u00e4\u00dfig, \u00e4hm, selbst wenn"}, {"id": 386, "start": 2969.4, "end": 2975.04, "text": "ich jetzt sage, ich will comitten, sagt Git erstmal standardm\u00e4\u00dfig, ne, kenn ich net,"}, {"id": 387, "start": 2975.04, "end": 2982.76, "text": "das ist das. Wenn ich mir mit Git Status angucke, was gerade im Repo so passiert, \u00e4hm, sehe"}, {"id": 388, "start": 2982.76, "end": 2987.72, "text": "ich, dass ich untracked Files drinne hab. Warum sind die Files untracked? Naja, ich"}, {"id": 389, "start": 2987.72, "end": 2993.36, "text": "hab's gerade eben erst angelegt. Und da muss ich initial einmal f\u00fcr jede Datei, die neu"}, {"id": 390, "start": 2993.36, "end": 2997.88, "text": "ist, man kann das auch umgehen, ja, man kann das auch einfacher machen, \u00e4hm, die muss"}, {"id": 391, "start": 2997.88, "end": 3001.64, "text": "ich erstmal hinzuf\u00fcgen. Muss ich erstmal sagen, Git, k\u00fcmmere dich um die Datei in"}, {"id": 392, "start": 3001.64, "end": 3005.92, "text": "diesem Ordner. Nur weil ich hier in dem Git Ordner drinne bin, hei\u00dft das noch lange nicht,"}, {"id": 393, "start": 3005.92, "end": 3009.72, "text": "dass sich Git standardm\u00e4\u00dfig f\u00fcr jede Datei zust\u00e4ndig f\u00fchlt. So, wenn ich jetzt ein Git"}, {"id": 394, "start": 3009.72, "end": 3014.52, "text": "add auf die Datei gemacht hab, dann sehe ich schonmal bei dem n\u00e4chsten Git Status, change"}, {"id": 395, "start": 3014.52, "end": 3019.48, "text": "to be committed, also sprich, Git kennt die Datei jetzt, \u00e4hm, und ich kann mir jetzt"}, {"id": 396, "start": 3019.48, "end": 3024.68, "text": "auch mit Git diff, ne, mit Git, \u00e4h, fuck, wie ging das, staged, \u00e4hm, kann ich mir auch"}, {"id": 397, "start": 3024.68, "end": 3032.88, "text": "angucken, was Git jetzt committen w\u00fcrde. Und nun kann ich auch sagen, Git commit, und"}, {"id": 398, "start": 3032.88, "end": 3042.0, "text": "jetzt, ich kann das immer nur betonen, die meisten Leute halten sich nicht dran, oder,"}, {"id": 399, "start": 3042.0, "end": 3047.88, "text": "\u00e4hm, sind da einfach nur zu faul f\u00fcr, ich muss sagen, bin ich auch oftmals, ne gescheite"}, {"id": 400, "start": 3047.88, "end": 3054.16, "text": "Commit Message reinzuschreiben. Das muss nix langes sein, aber was ne schlechte Commit"}, {"id": 401, "start": 3054.16, "end": 3059.48, "text": "Message ist, ist zum Beispiel das hier. Wenn ich an jedem Projekt arbeite, und selbst wenn"}, {"id": 402, "start": 3059.48, "end": 3066.44, "text": "ich nur alleine dran arbeite, dann hab ich sp\u00e4testens in zwei Tagen keine Ahnung mehr,"}, {"id": 403, "start": 3066.44, "end": 3071.04, "text": "was ich hier bittesch\u00f6n bei Fixes gemacht hab. Wenn ich da jetzt reinschreib, wenn"}, {"id": 404, "start": 3071.04, "end": 3081.56, "text": "ich da wenigstens sowas reinschreib, Schreibfehler, fix, irgendwie, verschrieben, gefixt, \u00e4hm,"}, {"id": 405, "start": 3081.56, "end": 3089.52, "text": "also, es hat seinen Vorteil, wenn man da irgendwas Sinnvolles reinschreibt, ja, \u00e4h, es reicht"}, {"id": 406, "start": 3089.52, "end": 3093.84, "text": "schon, wenn wir irgendwie reinschreiben, hier edit new script oder irgendwas, da hat man"}, {"id": 407, "start": 3093.84, "end": 3101.92, "text": "halbwegs noch nen Anhaltspunkt, was denn da, warum ist das eigentlich Nano? Warum ist das"}, {"id": 408, "start": 3101.92, "end": 3113.04, "text": "Nano? Ich will, ich will kein Nano. Wie konnte man das nochmal \u00e4ndern? Editor, \u00e4hm, wenn"}, {"id": 409, "start": 3113.04, "end": 3121.96, "text": "man das hier so richtig schreibt, config, global, editor, oh, fuck, wie ging das jetzt,"}, {"id": 410, "start": 3121.96, "end": 3129.48, "text": "das muss ich nachgucken. Was einem auch bei Git klar sein muss, man ist ziemlich oft unterwegs,"}, {"id": 411, "start": 3129.48, "end": 3134.16, "text": "man kann entweder in der Gitman-Page gucken, wobei die Gitman-Page absolut wir geschrieben"}, {"id": 412, "start": 3134.16, "end": 3141.44, "text": "ist, oder aber, man schaut einfach nach. Ah, hier, guck, git config global core editor"}, {"id": 413, "start": 3141.44, "end": 3149.32, "text": "vim, das will ich machen. So, und wenn ich jetzt das n\u00e4chste Mal was committe, dann geht"}, {"id": 414, "start": 3149.32, "end": 3153.36, "text": "auch ein ordentlicher Editor auf und nicht Nano. So, was man jetzt hier schon sieht ist,"}, {"id": 415, "start": 3153.36, "end": 3159.8, "text": "ich hab ein neues Skript angelegt, \u00e4hm, ich hab's commited, wenn ich jetzt in die history"}, {"id": 416, "start": 3159.8, "end": 3165.16, "text": "gucke, ja, ja, Milchwein, ich sag ja Stack Overflow Driven Programming, wenn ich jetzt"}, {"id": 417, "start": 3165.16, "end": 3169.68, "text": "in meine history gucke, also sprich, dort wo ich sehe, in welcher Reihenfolge was passiert"}, {"id": 418, "start": 3169.68, "end": 3175.84, "text": "ist, dann seh ich auch, ok, es gab hier unten einmal mein initiales Comet und hier dr\u00fcber"}, {"id": 419, "start": 3175.84, "end": 3179.48, "text": "seh ich, ich hab ein neues Comet gemacht hier vor ein paar Minuten, wo ich ein neues Skript"}, {"id": 420, "start": 3179.48, "end": 3184.32, "text": "hinzugef\u00fcgt hab. Wenn ich's jetzt genau wissen will, aktuell ist es noch ziemlich \u00fcbersichtlich."}, {"id": 421, "start": 3184.32, "end": 3195.08, "text": "Moment. Aktuell ist es noch ziemlich \u00fcbersichtlich, es ist, sind zwei Comets in dem Repo und die"}, {"id": 422, "start": 3195.08, "end": 3201.0, "text": "sind beide von mir. \u00c4hm, wenn man sich jetzt mal beispielsweise von Visual Studio Code"}, {"id": 423, "start": 3201.0, "end": 3206.24, "text": "die Comets anguckt, das sind beispielsweise 25.000 und von total vielen unterschiedlichen"}, {"id": 424, "start": 3206.24, "end": 3210.12, "text": "Leuten. Wir gucken uns jetzt noch mal auf der Kommando-Zeile an, ich klon mir das Ganze"}, {"id": 425, "start": 3210.12, "end": 3214.68, "text": "noch mal. Das ist ein Projekt, das ist, hat eine gute Gr\u00f6\u00dfe, das ist nicht so riesengro\u00df"}, {"id": 426, "start": 3214.68, "end": 3226.84, "text": "wie der, wie jetzt irgendwie der Linux Kernel oder sowas. Na, eben war das Ganze aber auch"}, {"id": 427, "start": 3226.84, "end": 3236.76, "text": "schon ein bisschen schneller. Hat das eben schon genau so lang gebraucht, den Krams zu"}, {"id": 428, "start": 3236.76, "end": 3243.36, "text": "klonen, ging das nicht eben noch schneller? Ha. Ja gut, sobald, sobald das geklont ist,"}, {"id": 429, "start": 3243.36, "end": 3246.04, "text": "gucken wir da mal in die Historie rein, da sehen wir, dass ich schon ein bisschen mehr"}, {"id": 430, "start": 3246.04, "end": 3251.72, "text": "als war mir im Repo drin und da wird eine Sache auch schon mal gleich klar und zwar,"}, {"id": 431, "start": 3251.72, "end": 3256.8, "text": "dass es sinnvoll ist, ordentliche Comet-Messages zu machen. Das ist jetzt n\u00e4mlich ein Projekt,"}, {"id": 432, "start": 3256.8, "end": 3267.8, "text": "wo 409 Leute schon mitgewirkt haben in 25.000 oder in knapp 26.000 Comets. Da wird es dann"}, {"id": 433, "start": 3267.8, "end": 3270.56, "text": "schon ein bisschen schwieriger mit der \u00dcbersicht. Wenn wir jetzt hier mal ein Gitlog drinnen"}, {"id": 434, "start": 3270.56, "end": 3274.44, "text": "machen, sehen wir n\u00e4mlich auch, dass es sind von ganz vielen unterschiedlichen Leuten,"}, {"id": 435, "start": 3274.44, "end": 3279.8, "text": "die da dran mitgearbeitet haben und wenn jetzt hier jeder reingeschrieben h\u00e4tte, irgendwie"}, {"id": 436, "start": 3279.8, "end": 3284.16, "text": "fix ist, dann wird es ganz sch\u00f6n kompliziert zu checken, was da eigentlich passiert ist."}, {"id": 437, "start": 3284.16, "end": 3290.28, "text": "Einmal wieder zur\u00fcck zu unserem Noob-Repo, so ein Billig-Repo, das hat immer noch zwei"}, {"id": 438, "start": 3290.28, "end": 3297.48, "text": "Comets drin und jetzt der gro\u00dfe Unterschied zu Versionsverwaltungssystemen wie beispielsweise"}, {"id": 439, "start": 3297.48, "end": 3304.72, "text": "SVN, ja doch, ich kann das Zeug nicht richtig, ich verdrehe da immer die Buchstaben, ich"}, {"id": 440, "start": 3304.72, "end": 3312.16, "text": "verdrehe auch immer CVS und CSV und alles. Der gro\u00dfe Unterschied zu quasi zentralen"}, {"id": 441, "start": 3312.16, "end": 3317.4, "text": "Versionsverwaltungssystemen mit dem zentralen Server, was es ja so bei Git nicht gibt, ist,"}, {"id": 442, "start": 3317.4, "end": 3323.52, "text": "ich habe jetzt eine neue Datei angelegt, ich habe jetzt diesen neuen Stand committed, habe"}, {"id": 443, "start": 3323.52, "end": 3332.56, "text": "ich mit einer Commit-Message dabei, aber das ist nach wie vor nur lokal bei mir. Das muss"}, {"id": 444, "start": 3332.56, "end": 3337.16, "text": "man wissen, das ist nur lokal, also sprich, wenn jetzt irgendjemand von euch sich hier"}, {"id": 445, "start": 3337.16, "end": 3343.92, "text": "mein Repo klonen w\u00fcrde, w\u00fcrde er diese \u00c4nderung noch nicht sehen, obwohl sie committed sind,"}, {"id": 446, "start": 3343.92, "end": 3356.6, "text": "das ist bei SVN komplett anders. Da ist Commit halt Commit. Und was ich jetzt machen muss,"}, {"id": 447, "start": 3356.6, "end": 3362.68, "text": "dass das andere Leute auch benutzen k\u00f6nnen, bzw. um es halt zu irgendeinem anderen Server"}, {"id": 448, "start": 3362.68, "end": 3373.52, "text": "zu schieben, achtmal mit Git push. Und hier ist es auch wichtig, dass man, auch wenn man"}, {"id": 449, "start": 3373.52, "end": 3379.44, "text": "es nicht machen muss, ist es sinnvoll, hier immer die kompletten Optionen anzugeben."}, {"id": 450, "start": 3379.44, "end": 3385.56, "text": "Also quasi, was ich machen will ist, ich will Git benutzen, ich will meinen Stand woanders"}, {"id": 451, "start": 3385.56, "end": 3393.04, "text": "hinschieben, Git push, jetzt muss ich angeben, wohin, in dem Fall Origin, Origin ist das Repo,"}, {"id": 452, "start": 3393.04, "end": 3398.36, "text": "von dem ich geklonet habe, und jetzt, welcher Branch, was ein Branch ist, kommen wir gleich"}, {"id": 453, "start": 3398.36, "end": 3403.88, "text": "noch dazu. So, wenn ich das mache, dann funktioniert das Ganze auch, und wenn ich jetzt hier refresche,"}, {"id": 454, "start": 3403.88, "end": 3410.96, "text": "ist das auch da, mein Skript. Und wenn jetzt jemand von euch sich mein Repo geklonet h\u00e4tte,"}, {"id": 455, "start": 3410.96, "end": 3420.28, "text": "und Git pull macht, dann wird er die \u00c4nderung auch sehen. Warum ich das f\u00fcr wichtig halte,"}, {"id": 456, "start": 3420.28, "end": 3427.12, "text": "hier immer alles komplett anzugeben. Man kann auch die Kurzfassung machen, Git push. Git"}, {"id": 457, "start": 3427.12, "end": 3433.0, "text": "push funktioniert in 99% der F\u00e4lle ohne Probleme, weil Git mittlerweile relativ clever ist, und"}, {"id": 458, "start": 3433.0, "end": 3440.64, "text": "bei Git push standardm\u00e4\u00dfig halt nur den Branch pusht, auf dem man drauf ist. Das war fr\u00fcher"}, {"id": 459, "start": 3440.64, "end": 3447.64, "text": "nicht so. Fr\u00fcher war Git push das Standard, das die Fault verhalten so, dass alle Branches,"}, {"id": 460, "start": 3447.64, "end": 3452.68, "text": "die man lokal hatte, gepusht wurden, und da hat man teilweise Sachen gepusht, die man"}, {"id": 461, "start": 3452.68, "end": 3459.36, "text": "nicht pushen wollte. Ich hatte mal auf der Arbeit einen, der hat irgendwie 15 Branches"}, {"id": 462, "start": 3459.36, "end": 3465.56, "text": "gepusht, die er sich mal irgendwann ausgecheckt hat, paar \u00c4nderungen drin ausprobiert hat,"}, {"id": 463, "start": 3465.56, "end": 3475.28, "text": "und die wollte er eigentlich gar nicht pushen. Das war halt ein bisschen bl\u00f6d f\u00fcr ihn. Der"}, {"id": 464, "start": 3475.28, "end": 3481.68, "text": "Name Origin verwirrt mich. Origin ist der Default Name f\u00fcr die Quelle, von der man,"}, {"id": 465, "start": 3481.68, "end": 3485.56, "text": "oder wie es der Patrick gerade sagt, von der Herkunft, von der Quelle, wo man geklont"}, {"id": 466, "start": 3485.56, "end": 3496.28, "text": "hat. Das ist der Default Name des Servers, des Remotes, bei Git hei\u00dft das Remote, von"}, {"id": 467, "start": 3496.28, "end": 3503.6, "text": "dem man geklont hat. Man kann das \u00fcbrigens auch umbenennen. Ich kann auch Git remote"}, {"id": 468, "start": 3503.6, "end": 3515.92, "text": "rename, wie ging das nochmal, wenn ich das noch richtig schreibe, Git remote rename,"}, {"id": 469, "start": 3515.92, "end": 3527.8, "text": "Origin kann ich auch umbenennen in, zum Beispiel GitHub. Wenn ich mir das jetzt angucke, hei\u00dft"}, {"id": 470, "start": 3527.8, "end": 3531.2, "text": "das \u00fcberhaupt nicht mehr Origin. Wenn ich das jetzt nochmal machen w\u00fcrde, w\u00fcrde ich"}, {"id": 471, "start": 3531.2, "end": 3536.44, "text": "sagen, das geht nicht, weil es das Remote Origin nicht mehr gibt. Jetzt m\u00fcsste ich sagen,"}, {"id": 472, "start": 3536.44, "end": 3550.92, "text": "Git push, Git hub master. Ist auch zu empfehlen, also wenn man mehrere Remotes hat, ist das"}, {"id": 473, "start": 3550.92, "end": 3556.0, "text": "sinnvoll, die so zu benennen, dass man auf den ersten Blick gleich sieht, ja was wozu"}, {"id": 474, "start": 3556.0, "end": 3563.28, "text": "geh\u00f6rt. Also das ist schon nicht verkehrt. Wir rename das nochmal, weil es ist ja gar"}, {"id": 475, "start": 3563.28, "end": 3570.64, "text": "nicht GitHub, sondern es ist unser Fake GitHub. Es ist ja gar kein echtes GitHub, worauf"}, {"id": 476, "start": 3570.64, "end": 3577.24, "text": "wir gepusht haben. Es ist ja nur unser Fake GitHub. Was wir jetzt gemacht haben ist, wir"}, {"id": 477, "start": 3577.24, "end": 3583.08, "text": "haben ein neues Skript angelegt, wir haben das committed und wir haben das gepusht. Das"}, {"id": 478, "start": 3583.08, "end": 3593.56, "text": "sind so die Standard-Basis-Operationen, die man immer braucht in Git. Ohne commiten, ohne"}, {"id": 479, "start": 3593.56, "end": 3604.04, "text": "adden, ohne commiten, ohne pushen kommt man meistens nicht weit. Den Part mit pushen kann"}, {"id": 480, "start": 3604.04, "end": 3609.28, "text": "man weglassen, wenn man nur lokal arbeitet. Man braucht sowas hier nicht, also sprich,"}, {"id": 481, "start": 3609.28, "end": 3615.44, "text": "man muss sein Zeug nicht auf GitHub hochladen, das muss nicht sein. Man kann auch rein lokal"}, {"id": 482, "start": 3615.44, "end": 3621.52, "text": "arbeiten. Ist auch nicht schlecht, wie gesagt, wenn man irgendwas klein im Bastelt und auch"}, {"id": 483, "start": 3621.52, "end": 3633.32, "text": "gar nicht vorhat, das zu ver\u00f6ffentlichen. So, was gibt es jetzt als n\u00e4chstes? Genau,"}, {"id": 484, "start": 3633.32, "end": 3642.76, "text": "was sind Branches? Dazu muss man sich erstmal angucken, was sind commits. Wenn man in die"}, {"id": 485, "start": 3642.76, "end": 3647.92, "text": "History guckt, was man, by the way, mit GitLog macht. GitLog hat \u00fcbrigens sehr viele praktische"}, {"id": 486, "start": 3647.92, "end": 3657.28, "text": "Optionen, beispielsweise das hier. Das hier ist ein Beispiel f\u00fcr typische Git-Optionen,"}, {"id": 487, "start": 3657.28, "end": 3663.16, "text": "die sind nicht immer logisch. Also standardm\u00e4\u00dfig zeigt mir GitLog meine History an, also sprich"}, {"id": 488, "start": 3663.16, "end": 3670.48, "text": "vom \u00e4ltesten Commit zum neuesten Commit. Sag ich jetzt, GitLog name only als Option"}, {"id": 489, "start": 3670.48, "end": 3675.72, "text": "zeigt es mir mehr an, allerdings noch die Namen, die sich ge\u00e4ndert haben im jeweiligen"}, {"id": 490, "start": 3675.72, "end": 3680.24, "text": "Commit der Datei, also welche Dateien sich im jeweiligen Commit ge\u00e4ndert haben. Obwohl"}, {"id": 491, "start": 3680.24, "end": 3684.36, "text": "die Option minus minus name only so aussieht, als w\u00fcrde es weniger anzeigen, n\u00e4mlich nur"}, {"id": 492, "start": 3684.36, "end": 3690.24, "text": "names only, macht es das nicht. Ganz viele Git-Commandos sind total wir, da muss man"}, {"id": 493, "start": 3690.24, "end": 3696.76, "text": "sich mit abfinden. Und die Git-Man-Pages sind ehrlich gesagt auch nicht sonderlich"}, {"id": 494, "start": 3696.76, "end": 3700.88, "text": "hilfreich. So mal hier als Beispiel. Guckt euch, lest euch mal, oder lesen wir uns mal"}, {"id": 495, "start": 3700.88, "end": 3707.32, "text": "die ersten S\u00e4tze durch von GitPush. Man versteht nichts. Normalerweise ist eine Man-Page daf\u00fcr"}, {"id": 496, "start": 3707.32, "end": 3712.04, "text": "da, das soll einem das alles erkl\u00e4ren, ein bisschen helfen, wie das Ganze funktioniert."}, {"id": 497, "start": 3712.04, "end": 3719.24, "text": "So, und die Hilfeseite f\u00fcr GitPush sagt mir, GitPush updates remote refs using local refs"}, {"id": 498, "start": 3719.24, "end": 3724.2, "text": "while sending objects necessary to complete the given refs. Und jetzt kommt der beste"}, {"id": 499, "start": 3724.2, "end": 3732.88, "text": "Satz \u00fcberhaupt. You can make interesting things happen to a repository. Also, die Git-Man-Pages"}, {"id": 500, "start": 3732.88, "end": 3739.28, "text": "sind legend\u00e4r verwirrend. Ich w\u00fcrde gar nicht erst anfangen Git-Man-Pages zu lesen,"}, {"id": 501, "start": 3739.28, "end": 3742.88, "text": "in dem Fall ist man wirklich mit einer Google-Suche und Stack-Overflow-Antworten meistens besser"}, {"id": 502, "start": 3742.88, "end": 3751.52, "text": "dran. Also Git-Man-Pages sind wirklich sehr verwirrend. So, aber wenn wir uns jetzt nochmal"}, {"id": 503, "start": 3751.52, "end": 3756.28, "text": "die History angucken, sehen wir, wir haben zwei Comets drinne, mein initiales Comet und"}, {"id": 504, "start": 3756.28, "end": 3765.28, "text": "das, wo wir das Skript hinzugef\u00fcgt haben. Jedes Comet bekommt in Git eine eindeutige"}, {"id": 505, "start": 3765.28, "end": 3773.96, "text": "Hashtag-ID. Das ist ein Schar-Hash-Wert, wenn das interessiert. Und man sieht ja auch"}, {"id": 506, "start": 3773.96, "end": 3781.4, "text": "teilweise ganz interessante Informationen dahinter. Zum Beispiel, welcher Remote-Stand eben auf"}, {"id": 507, "start": 3781.4, "end": 3785.52, "text": "welchem Comet gerade ist und sowas, aber das ist jetzt erstmal egal. Wichtig ist, dass"}, {"id": 508, "start": 3785.52, "end": 3790.24, "text": "jedes Comet einen eindeutigen Hashtag-Wert bekommt. Und dieser Hashtag-Wert oder diese"}, {"id": 509, "start": 3790.24, "end": 3797.68, "text": "Comet-ID, nennen wir es mal Comet-ID, ist eines der Grundlagen, worauf Git basiert und"}, {"id": 510, "start": 3797.68, "end": 3801.4, "text": "eines der wichtigsten Sachen. Man muss nicht wissen, was es ist, was es genau macht. Was"}, {"id": 511, "start": 3801.4, "end": 3809.08, "text": "man wissen muss ist, jedes Comet hat weltweit sehr, sehr, sehr wahrscheinlich eine eindeutige"}, {"id": 512, "start": 3809.08, "end": 3820.76, "text": "ID. Und ihr habt hier beispielsweise das Visual Studio Code-Repo gesehen, das hat schon 25.000"}, {"id": 513, "start": 3820.76, "end": 3828.64, "text": "Comets. Und es ist sehr wahrscheinlich, dass es kein Git-Repo gibt. Alle Git-Repos weltweit"}, {"id": 514, "start": 3828.64, "end": 3839.04, "text": "zusammen. Dass es kein Comet gibt, das die gleiche ID hat. Und das ist auch wichtig,"}, {"id": 515, "start": 3839.04, "end": 3850.48, "text": "weil bei Git ziemlich viel auf dieser Comet-ID basiert. Man braucht sie selbst relativ selten,"}, {"id": 516, "start": 3850.48, "end": 3855.48, "text": "aber ich denke, das ist eine wichtige Sache, die einem klar sein muss. Weil, und das ist"}, {"id": 517, "start": 3855.48, "end": 3861.28, "text": "auch eine wichtige Sache, man kann in Git die History, ich wei\u00df, dass es geht, aber"}, {"id": 518, "start": 3861.28, "end": 3869.68, "text": "ich sag's jetzt mal ein bisschen \u00fcberspitzt, man kann in Git die History nicht \u00e4ndern."}, {"id": 519, "start": 3869.68, "end": 3877.2, "text": "Man kann in Git die History nur umschreiben. Und wenn man in Git die History umschreibt,"}, {"id": 520, "start": 3877.2, "end": 3885.04, "text": "\u00e4ndert sich alles ab dem Zeitpunkt des Umschreibens. Weil die ganzen Comets basieren aufeinander."}, {"id": 521, "start": 3885.04, "end": 3891.2, "text": "Also sprich, diese Comet-ID, oder besser gesagt, diese Comet-ID, wird errechnet, aus dem der"}, {"id": 522, "start": 3891.2, "end": 3897.48, "text": "es committet, aus der Uhrzeit, wann es committet wird, und ganz wichtig, aus der Comet-ID,"}, {"id": 523, "start": 3897.48, "end": 3904.0, "text": "des Vorg\u00e4nger-Comets. Das hei\u00dft, wenn ich jetzt feststelle, ich hab hier unten irgendwann"}, {"id": 524, "start": 3904.0, "end": 3909.48, "text": "mal Mist committet, was vorkommen wird, wie man das beheben kann, kommen wir auch noch"}, {"id": 525, "start": 3909.48, "end": 3915.64, "text": "dazu. Wenn ich jetzt feststelle, ich hab hier unten irgendwann mal Mist committet in mein"}, {"id": 526, "start": 3915.64, "end": 3921.88, "text": "Git Repo, dann kann ich das erstmal so pauschal nicht \u00e4ndern. Das ist drinnen. F\u00fcr immer"}, {"id": 527, "start": 3921.88, "end": 3928.04, "text": "und ewig ist das in diesem Git Repo drinnen. Weil wenn ich jetzt hier hingehen w\u00fcrde,"}, {"id": 528, "start": 3928.04, "end": 3934.72, "text": "und das \u00e4ndern, w\u00fcrden sich alle Comets, die da drauf kommen, die nachvollen Comets,"}, {"id": 529, "start": 3934.72, "end": 3939.84, "text": "wie sich die Comet-ID \u00e4ndern. Was dazu f\u00fchren w\u00fcrde, dass es f\u00fcr Git intern ein komplett"}, {"id": 530, "start": 3939.84, "end": 3945.72, "text": "anderes Repo w\u00e4re, und alle, die irgendwie mitarbeiten an dem Repo, eine Historie haben"}, {"id": 531, "start": 3945.72, "end": 3950.76, "text": "die nicht mehr zusammenpasst. Also die Historie in Git kann man nicht \u00e4ndern. Man kann sie"}, {"id": 532, "start": 3950.76, "end": 3957.52, "text": "nur umschreiben, und da sollte man auch aufpassen, was man macht. So, deswegen ist es auch nochmal"}, {"id": 533, "start": 3957.52, "end": 3964.84, "text": "wichtig, dass es einem klar wird, dass man mit Git standardm\u00e4\u00dfig nur lokal arbeitet."}, {"id": 534, "start": 3964.84, "end": 3970.2, "text": "Das hei\u00dft, man kann, wenn man Mist committet hat, bevor man es pusht, das \u00e4ndern, wie"}, {"id": 535, "start": 3970.2, "end": 3978.12, "text": "man will, das wird nie jemand sehen, aber wenn man es gepusht hat, ist es da. Quasi"}, {"id": 536, "start": 3978.12, "end": 3985.28, "text": "f\u00fcr immer. Das hei\u00dft, man muss sich \u00fcberlegen, was man pusht. So, einmal angenommen, das"}, {"id": 537, "start": 3985.28, "end": 3989.44, "text": "ist was, was viele Git-Tutorials beispielsweise viel sp\u00e4ter machen, aber ich finde, das ist"}, {"id": 538, "start": 3989.44, "end": 3995.24, "text": "eigentlich eines der h\u00e4ufigsten Probleme, die Leute haben, die neu mit Git anfangen"}, {"id": 539, "start": 3995.24, "end": 4000.88, "text": "oder die halt allgemein sich da, sich das gerade einfach ein bisschen angucken und das"}, {"id": 540, "start": 4000.88, "end": 4004.84, "text": "lernen wollen. Wie kriege ich denn jetzt was wieder raus, wenn ich Mist committet habe?"}, {"id": 541, "start": 4004.84, "end": 4011.16, "text": "Was, die Uhrzeit stimmt nicht? Ja, stimmt, die Uhrzeit stimmt nicht. Die Uhrzeit ist"}, {"id": 542, "start": 4011.16, "end": 4017.84, "text": "total falsch. So, wie kriege ich denn jetzt wieder raus, wenn ich Mist committet habe?"}, {"id": 543, "start": 4017.84, "end": 4024.04, "text": "Weil angenommen, ich habe hier jetzt irgendwas committet. Wir k\u00f6nnen uns mit git log minus"}, {"id": 544, "start": 4024.04, "end": 4029.56, "text": "p, kann man sich anzeigen lassen, was committet wurde. Da sehen wir zum Beispiel, okay, ich"}, {"id": 545, "start": 4029.56, "end": 4036.04, "text": "habe hier halt eine Datei committet mit diesem Inhalt und ich habe jetzt festgestellt, Mist,"}, {"id": 546, "start": 4036.04, "end": 4039.48, "text": "eigentlich wollte ich schreiben, hallo stream und ich habe hallo twitch tv geschrieben."}, {"id": 547, "start": 4039.48, "end": 4045.72, "text": "Ich habe das jetzt gepusht, das ist da. Also man sieht das ja auch hier, wenn sich jetzt"}, {"id": 548, "start": 4045.72, "end": 4051.24, "text": "irgendjemand geklont h\u00e4tte, ja, dann h\u00e4tte er jetzt halt das fehlerhafte Skript gehabt."}, {"id": 549, "start": 4051.24, "end": 4055.92, "text": "Was mache ich denn jetzt? Wie kriege ich denn das wieder raus? Und die einfache Antwort"}, {"id": 550, "start": 4055.92, "end": 4065.16, "text": "ist gar nicht. Fixen und neu committen. Das ist der Weg in Git Fehler zu beheben. Also"}, {"id": 551, "start": 4065.16, "end": 4075.16, "text": "selbst, wenn ich jetzt quasi theoretisch zur\u00fcckrollen k\u00f6nnte, sollte ich das auf keinen Fall machen,"}, {"id": 552, "start": 4075.16, "end": 4079.76, "text": "wenn ich es schon gepusht habe, weil danach sieht die history anders aus. So, und der"}, {"id": 553, "start": 4079.76, "end": 4085.68, "text": "Gitweg, sowas zu fixen, ist im Prinzip ganz einfach. Man macht ein neues Comet. Also sprich,"}, {"id": 554, "start": 4085.68, "end": 4094.04, "text": "ich rolle das jetzt nicht zur\u00fcck und committe es nochmal mit dem korrekten Text, sondern"}, {"id": 555, "start": 4094.04, "end": 4098.36, "text": "ich editiere das jetzt einfach zu dem, was ich eigentlich haben wollte, zwar hallo stream,"}, {"id": 556, "start": 4098.36, "end": 4102.36, "text": "ich wollte nicht hallo twitch schreiben und jetzt committe ich das ganze einfach nochmal."}, {"id": 557, "start": 4102.36, "end": 4110.08, "text": "Jetzt Git Status eingeben, sagt der mir hier, guck mal, es hat sich was ge\u00e4ndert. Visual"}, {"id": 558, "start": 4110.08, "end": 4113.84, "text": "Studio Code sollte glaube ich auch irgendwie anzeigen, dass sich was ge\u00e4ndert hat, macht"}, {"id": 559, "start": 4113.84, "end": 4121.68, "text": "es nicht. Konnte das Visual Studio Code nicht, konnte das nicht anzeigen, dass sich was"}, {"id": 560, "start": 4121.68, "end": 4129.28, "text": "Git technisch ge\u00e4ndert hat. Keine Ahnung, ist ja auch wurscht. \u00c4hm, wir machen das"}, {"id": 561, "start": 4129.28, "end": 4135.68, "text": "jetzt mal hier alles Commando-Zeile. Genau, und jetzt mache ich ein neues Comet. Ich kann"}, {"id": 562, "start": 4135.68, "end": 4142.32, "text": "das alles ein bisschen abk\u00fcrzen. Die richtige Reihenfolge ist doch links im Git-Reiter."}, {"id": 563, "start": 4142.32, "end": 4149.92, "text": "Ah, das habe ich gesucht, ja quasi so ein Diff, was sich ge\u00e4ndert hat. Aber sonderlich"}, {"id": 564, "start": 4149.92, "end": 4154.16, "text": "sch\u00f6n ist es, sch\u00f6n ist es nicht. Ich kenne es von manchen Editoren, dass man hier vorne"}, {"id": 565, "start": 4154.16, "end": 4160.36, "text": "so Plus und Minus angezeigt bekommt, wo sich was ge\u00e4ndert hat. Ist aber auch egal. So,"}, {"id": 566, "start": 4160.36, "end": 4165.96, "text": "die normale Reihenfolge, was zu committen ist ja, man edit es, ich mach das jetzt nicht,"}, {"id": 567, "start": 4165.96, "end": 4173.48, "text": "man committet es und danach kann man es pushen oder das lokal lassen. Es gibt eine Kurzform"}, {"id": 568, "start": 4173.48, "end": 4179.28, "text": "davon und die wird wahrscheinlich jeder verwenden, der h\u00e4ufiger Git verwendet, weil es einfach"}, {"id": 569, "start": 4179.28, "end": 4188.4, "text": "nervig ist immer was zu adden. Man sagt einfach Git A minus M. Das hei\u00dft, committe alles,"}, {"id": 570, "start": 4188.4, "end": 4195.4, "text": "alle \u00c4nderungen aus Dateien, die du kennst. In dem Fall, tolles Skript. Message nimmt"}, {"id": 571, "start": 4195.4, "end": 4202.72, "text": "den Text, den ich hier hinten angebe, als Comet-Message. Ja, ich schaue jetzt irgendwie"}, {"id": 572, "start": 4202.72, "end": 4209.4, "text": "mit Echo Text, was auch immer. So, wenn ich jetzt nachgucke, jetzt habe ich ein drittes"}, {"id": 573, "start": 4209.4, "end": 4217.12, "text": "Comet, was den Fehler korrigiert hat, den ich vorher mit committet habe. Ich habe vorher"}, {"id": 574, "start": 4217.12, "end": 4220.6, "text": "Mist committet, den habe ich jetzt wieder korrigiert. Und das ist der Weg, wie man das"}, {"id": 575, "start": 4220.6, "end": 4228.12, "text": "in Git fixt. Standardm\u00e4\u00dfig rollt man nichts zur\u00fcck, um was zu fixen. Also man rollt nichts"}, {"id": 576, "start": 4228.12, "end": 4234.32, "text": "zur\u00fcck, fixt es und committet es wieder. Man sagt, ok, der Fehler ist drinne, man \u00e4ndert"}, {"id": 577, "start": 4234.32, "end": 4238.32, "text": "ihn und macht ein neues Comet. Was ja auch irgendwo sinnvoll ist, weil \u00fcberlegt euch"}, {"id": 578, "start": 4238.32, "end": 4244.36, "text": "mal, ihr habt einen Fehler gepusht schon. Jemand anderes, der mitarbeitet, hat sich"}, {"id": 579, "start": 4244.36, "end": 4252.44, "text": "das quasi ausgecheckt bei sich und hat jetzt die Datei mit dem Fehler und er hat vielleicht"}, {"id": 580, "start": 4252.44, "end": 4257.32, "text": "da drin schon was editiert und ihr w\u00fcrdet es dann zur\u00fcckrollen und dann pusht ihr eine"}, {"id": 581, "start": 4257.32, "end": 4262.6, "text": "Datei, die so aussieht, die, quasi die Version, die er bei sich lokal hat, h\u00e4tte es ja dann"}, {"id": 582, "start": 4262.6, "end": 4268.2, "text": "nie gegeben in der History. Deswegen hat Git bei sowas Probleme, wenn man History \u00e4ndert."}, {"id": 583, "start": 4268.2, "end": 4271.6, "text": "Da kommt es zu ganz wirren Ergebnissen und ich kann es nicht empfehlen, irgendwie die"}, {"id": 584, "start": 4271.6, "end": 4279.32, "text": "History umzuschreiben. Es sei denn, es ist lokal, bevor man pusht. So. Wenn man noch"}, {"id": 585, "start": 4279.32, "end": 4283.12, "text": "nicht gepusht hat, kann man sich das Leben ein bisschen einfacher machen. Wie gesagt,"}, {"id": 586, "start": 4283.12, "end": 4287.48, "text": "normalerweise kommt das in Git-Tutorials immer viel sp\u00e4ter dran, aber ich finde das, wie"}, {"id": 587, "start": 4287.48, "end": 4294.36, "text": "gesagt, das ist eines da, ja, eines, ein gro\u00dfes Problem, was viele Leute haben, die neue Git"}, {"id": 588, "start": 4294.36, "end": 4297.48, "text": "verwenden. Wenn man noch nicht gepusht hat, kann man sich das Leben ein bisschen einfacher"}, {"id": 589, "start": 4297.48, "end": 4304.56, "text": "machen. Zum Beispiel, wenn ich jetzt sage, Mist, meine Comet-Message ist falsch. Ich"}, {"id": 590, "start": 4304.56, "end": 4309.72, "text": "wollte eigentlich nicht hinschreiben, Changed Echo Text, sondern Fixed Echo Text. Mist,"}, {"id": 591, "start": 4309.72, "end": 4313.4, "text": "was mache ich denn jetzt? Soll ich jetzt ein neues Comet wirklich machen, wo ich dann"}, {"id": 592, "start": 4313.4, "end": 4319.16, "text": "nochmal Fixed Echo, das ist doch, das ist doof. Das ist doof. Aber ich hab Gl\u00fcck, ich hab"}, {"id": 593, "start": 4319.16, "end": 4323.8, "text": "noch nicht gepusht. Da sieht man hier unten auch an dem kleinen Pfeil von meiner, \u00e4h,"}, {"id": 594, "start": 4323.8, "end": 4333.88, "text": "hier bash-git-sonsmaas-extension, \u00e4h, zschl-bash, \u00e4h, zsh-git-extension, \u00e4hm, dass ich quasi"}, {"id": 595, "start": 4333.88, "end": 4337.8, "text": "lokal mehr Comets habe als Remote und ich die jetzt pushen k\u00f6nnte. Deswegen ist da"}, {"id": 596, "start": 4337.8, "end": 4342.92, "text": "jetzt so ein Pfeil nach oben. \u00c4hm, wenn ich jetzt einfach nur die Comet-Message \u00e4ndern"}, {"id": 597, "start": 4342.92, "end": 4348.12, "text": "will von meinem letzten Comet, wohlgemerkt, wenn ich noch nicht gepusht habe, sobald ich"}, {"id": 598, "start": 4348.12, "end": 4353.28, "text": "gepusht habe, soll ich dieses Comet nie wieder anfassen, \u00e4hm, dann kann ich das so machen."}, {"id": 599, "start": 4353.28, "end": 4363.0, "text": "Und wir merken uns jetzt mal hier den Hash-Wert von diesem Comet, also quasi die weltweit"}, {"id": 600, "start": 4363.0, "end": 4368.6, "text": "eindeutige Comet-ID. So, und hiermit kann ich jetzt das letzte Comet nochmal \u00e4ndern."}, {"id": 601, "start": 4368.6, "end": 4375.6, "text": "So, und ich wollte schreiben Fixed-Echo-Text. Bam. Und jetzt kommt der Knackpunkt, die Comet-ID"}, {"id": 602, "start": 4375.6, "end": 4380.56, "text": "hat sich ge\u00e4ndert. Und die Comet-ID ist das, woran Git festmacht, ob es ein Comet eben"}, {"id": 603, "start": 4380.56, "end": 4385.76, "text": "kennt oder nicht. Das hei\u00dft, wenn ich es schon gepusht h\u00e4tte, h\u00e4tte das jetzt ge\u00e4ndert,"}, {"id": 604, "start": 4385.76, "end": 4393.52, "text": "dass, \u00e4h, dann w\u00e4re Git verwirrt. Und alle, die es schon geklont h\u00e4tten, w\u00e4ren auch verwirrt,"}, {"id": 605, "start": 4393.52, "end": 4397.6, "text": "weil dann auf einmal was verschwindet, was schon mal da war. Und Git basiert darauf,"}, {"id": 606, "start": 4397.6, "end": 4401.56, "text": "dass nichts verschwindet, sondern nur neue Sachen oben drauf kommen. Also das muss immer"}, {"id": 607, "start": 4401.56, "end": 4406.76, "text": "so eine, die Historie muss immer quasi eins auf dem anderen aufsetzen und darf sich nicht"}, {"id": 608, "start": 4406.76, "end": 4412.0, "text": "zwischendrin \u00e4ndern. \u00c4hm, aber nachdem ich das ja nur lokal bei mir hatte, hat das Remote"}, {"id": 609, "start": 4412.0, "end": 4416.2, "text": "noch nie jemand gesehen. Sieht man ja auch, wenn ich hier meine Comments angucke, mein"}, {"id": 610, "start": 4416.2, "end": 4420.48, "text": "neustes Comet hab ich noch \u00fcberhaupt nicht gepusht. Jetzt hab ich es lokal bei mir gefixt"}, {"id": 611, "start": 4420.48, "end": 4425.92, "text": "und jetzt kann ich das Ganze auch pushen und gut ist. \u00c4hm, so und ich zeig euch jetzt"}, {"id": 612, "start": 4425.92, "end": 4434.36, "text": "mal, was passiert, wenn ich das doch machen w\u00fcrde, die Historie \u00e4ndern. Die haben was"}, {"id": 613, "start": 4434.36, "end": 4442.24, "text": "genannt. GitHub, nee. Fake GitHub. So und dann gucken wir uns mal an, was Branches sind."}, {"id": 614, "start": 4442.24, "end": 4448.88, "text": "Comets sind da. Passt, jetzt hab ich es gepusht. So und wenn ich jetzt mich nicht dran halte"}, {"id": 615, "start": 4448.88, "end": 4458.48, "text": "und sage, ich \u00e4ndere was in meiner Historie, obwohl ich schon gepusht habe. \u00c4h, ah guck"}, {"id": 616, "start": 4458.48, "end": 4463.16, "text": "mal, der Eaxe ist da. Schon durch, mit was? Du meinst hier mit, \u00e4h, mit Kot? Ne, ich"}, {"id": 617, "start": 4463.16, "end": 4467.32, "text": "hab heute noch gar nicht gespielt. Ich hatte heute noch keine Zeit. Aber wahrscheinlich"}, {"id": 618, "start": 4467.32, "end": 4471.44, "text": "spiel ich nachher ne Runde. Komm, wir k\u00f6nnen nachher ne Runde, \u00e4hm, Dings hier War spielen"}, {"id": 619, "start": 4471.44, "end": 4476.96, "text": "zusammen, wenn du willst. So und wenn ich jetzt jetzt doch mache, also sprich, wenn"}, {"id": 620, "start": 4476.96, "end": 4480.24, "text": "ich jetzt doch die Historie \u00e4ndere, obwohl ich schon gepusht hab, machen wir mal, ich"}, {"id": 621, "start": 4480.24, "end": 4485.32, "text": "hab jetzt schon gepusht, jetzt sag ich, ach nee, ich w\u00fcrde doch gerne, dass mein, dass"}, {"id": 622, "start": 4485.32, "end": 4491.32, "text": "meine letzte Comet Message wieder, \u00e4h, nicht Fixed Echo Text ist, sondern, \u00e4h, Changed"}, {"id": 623, "start": 4491.32, "end": 4498.4, "text": "so Echo, Echo Text. Kann ich lokal machen. Jetzt zeigt es mir hier aber auch schon lokal"}, {"id": 624, "start": 4498.4, "end": 4502.08, "text": "an, \u00e4h, die Historie passt irgendwie nicht zusammen. Und wenn ich das jetzt versuche"}, {"id": 625, "start": 4502.08, "end": 4513.32, "text": "zu pushen, dann sagt Git, geht nicht. Weil, Git hat als letztes Comet, das hier und bei"}, {"id": 626, "start": 4513.32, "end": 4517.4, "text": "mir lokal will ich was pushen, wo es dieses Comet nicht gibt. Da sagt Git jetzt irgendwie,"}, {"id": 627, "start": 4517.4, "end": 4522.32, "text": "Moment, das passt nicht zusammen. \u00c4h, guckst du Overwatch World Cup Halbfinale? Ja, mach"}, {"id": 628, "start": 4522.32, "end": 4530.24, "text": "ich. Das geht demn\u00e4chst los, ne? Muss ich mal gucken. Ja, geht irgendwie in 20 Minuten"}, {"id": 629, "start": 4530.24, "end": 4536.96, "text": "oder so los. Also die Basics mach ich, mach ich immer noch fertig. \u00c4h, \u00e4h, Eax, ich"}, {"id": 630, "start": 4536.96, "end": 4541.32, "text": "will Overwatch gucken f\u00e4llt mir gerade ein. Ich wollt, wollt, \u00e4h, Dings die Overwatch"}, {"id": 631, "start": 4541.32, "end": 4545.12, "text": "Halbfinale gucken. Ich kann's vergessen, dass das jetzt schon anf\u00e4ngt. So, und jetzt"}, {"id": 632, "start": 4545.12, "end": 4552.08, "text": "sieht man schon, wenn ich das versuch zu pushen, geht nicht. So, und eine, die bl\u00f6deste Sache,"}, {"id": 633, "start": 4552.08, "end": 4556.92, "text": "die ich jetzt machen k\u00f6nnte, ich zeige euch nur mal, dass es geht, ist, wenn ich mit Force"}, {"id": 634, "start": 4556.92, "end": 4562.88, "text": "pushe. Weil dann sag ich, Git, einfach schei\u00df drauf, was du denkst, mach's einfach. So,"}, {"id": 635, "start": 4562.88, "end": 4567.2, "text": "und jetzt sieht man, \u00e4hm, wenn ich jetzt hier auf Comets gehe, jetzt ist das Comet"}, {"id": 636, "start": 4567.2, "end": 4571.64, "text": "verschwunden und meins da. Jeder, der sich dieses Repo jetzt geklonet h\u00e4tte, w\u00fcrde"}, {"id": 637, "start": 4571.64, "end": 4576.2, "text": "einen Fehler bekommen, wenn er das n\u00e4chste Mal versucht, was zu pullen. Das will man"}, {"id": 638, "start": 4576.2, "end": 4583.72, "text": "nicht. Also, ganz einfach kann man sich merken, sobald was gepusht ist, wird das nicht mehr"}, {"id": 639, "start": 4583.72, "end": 4591.52, "text": "angefasst. Nie wieder. Bis das Universum sich in Luft aufl\u00f6st. Was gepusht wurde,"}, {"id": 640, "start": 4591.52, "end": 4599.44, "text": "public, wird nie wieder angefasst. So. Das muss man jetzt mal so klar sagen. Monka Shake,"}, {"id": 641, "start": 4599.44, "end": 4605.84, "text": "das macht man nicht, sowas. Weil dann haben alle, die dann dran mitarbeiten und man selbst"}, {"id": 642, "start": 4605.84, "end": 4615.4, "text": "Probleme danach. Wie kann ich denn jetzt was r\u00fcckg\u00e4ngig machen? \u00c4hm, mal angenommen,"}, {"id": 643, "start": 4615.4, "end": 4619.92, "text": "ich hab jetzt was gr\u00f6\u00dferes ge\u00e4ndert und das war einfach kompletter Mist. Also sprich,"}, {"id": 644, "start": 4619.92, "end": 4632.56, "text": "\u00e4hm, ich hab jetzt hier nen S\u00fcndagsfehler drinne. Ich hab jetzt hier nen S\u00fcndagsfehler"}, {"id": 645, "start": 4632.56, "end": 4644.2, "text": "drinne. So. Ich hab ein neues Feature programmiert, was eigentlich, \u00e4hm, ganz toll ist und super"}, {"id": 646, "start": 4644.2, "end": 4650.52, "text": "funktionieren sollte. So, und ich hab das jetzt committed, gepusht und jetzt stell ich fest,"}, {"id": 647, "start": 4650.52, "end": 4659.52, "text": "Mist ich habe Mist gepusht. Ich hab nen S\u00fcndagsfehler drinne. Ja gut. In dem Fall ist es jetzt relativ"}, {"id": 648, "start": 4659.52, "end": 4663.76, "text": "einfach. Ich mein, ich kann jetzt das genauso machen, wie ich es eben gezeigt hab. Ich"}, {"id": 649, "start": 4663.76, "end": 4668.4, "text": "k\u00f6nnte hier reingehen, das l\u00f6schen und nochmal neu committen. Aber, wenn wir jetzt mal von"}, {"id": 650, "start": 4668.4, "end": 4674.32, "text": "ausgehen w\u00fcrden, realistischer gesehen, \u00e4hm, dieses neue Feature w\u00fcrde sich, sagen wir"}, {"id": 651, "start": 4674.32, "end": 4683.2, "text": "mal, \u00fcber 20 Dateien und 500 ge\u00e4nderte Zeilen erstrecken und ich, quasi derjenige, der sich"}, {"id": 652, "start": 4683.2, "end": 4688.8, "text": "um das Repo k\u00fcmmert, ja, dass das alles sauber und ordentlich l\u00e4uft, hat gar keine Ahnung"}, {"id": 653, "start": 4688.8, "end": 4694.28, "text": "von dem, was dieser Typ da committed hat, dann ist es ganz sch\u00f6n schwierig von Hand"}, {"id": 654, "start": 4694.28, "end": 4698.84, "text": "das Commit wieder r\u00fcckg\u00e4ngig zu machen und in die Form zu bringen, dass es wieder funktioniert."}, {"id": 655, "start": 4698.84, "end": 4704.68, "text": "Bei anderen Versionsverwaltungssystemen w\u00e4re die logischste Schlussfolgerung jetzt, ich"}, {"id": 656, "start": 4704.68, "end": 4709.44, "text": "rolle zur\u00fcck, also quasi auf den Stand vor diesem Commit, was alles kaputt gemacht hat,"}, {"id": 657, "start": 4709.44, "end": 4715.88, "text": "weil, ne, dieses Commit hat unser tolles Programm zerst\u00f6rt. Also w\u00fcrde ich jetzt normalerweise"}, {"id": 658, "start": 4715.88, "end": 4720.24, "text": "hier rauf zur\u00fcckrollen, weil ich wei\u00df, davor ging es noch alles. Das ist ja auch, sieht"}, {"id": 659, "start": 4720.24, "end": 4723.8, "text": "man es wieder, ist eines der gro\u00dfen Vorteile von einem Versionsverwaltungssystem, da kann"}, {"id": 660, "start": 4723.8, "end": 4730.2, "text": "ich sowas machen, sprich, ich hab hier meine vergangenen St\u00e4nde relativ gut beschrieben"}, {"id": 661, "start": 4730.2, "end": 4735.64, "text": "und wei\u00df auch jetzt noch, wie das Programm heute Morgen ausgeschaut hat, oder ich kann"}, {"id": 662, "start": 4735.64, "end": 4740.8, "text": "mir den Stand von heute Morgen auch angucken. Also, wie macht man das jetzt? Also mal angenommen,"}, {"id": 663, "start": 4740.8, "end": 4745.32, "text": "dieses Feature h\u00e4tte sich jetzt \u00fcber 20 Dateien verteilt und h\u00e4tte 500 Zeilen ge\u00e4ndert"}, {"id": 664, "start": 4745.32, "end": 4749.0, "text": "und ich hab dieses Feature nicht programmiert, also ich wei\u00df gar nicht genau, was der da"}, {"id": 665, "start": 4749.0, "end": 4754.48, "text": "eigentlich gemacht hat. Ich will es einfach r\u00fcckg\u00e4ngig machen. Ich will es einfach r\u00fcckg\u00e4ngig"}, {"id": 666, "start": 4754.48, "end": 4759.12, "text": "machen und, wie ich es gerade gesagt hab, einfach auf den Stand vorher zur\u00fcckrollen"}, {"id": 667, "start": 4759.12, "end": 4774.0, "text": "ist mit Git nicht. Daf\u00fcr gibt es bei Git den Befehl Revert. Revert macht genau das, was"}, {"id": 668, "start": 4774.0, "end": 4780.72, "text": "ich vorher von Hand gemacht hab, n\u00e4mlich der dreht das Comet einfach um. Also, ich"}, {"id": 669, "start": 4780.72, "end": 4788.04, "text": "zeig es euch hier nochmal. In dem letzten Comet wei\u00df Git ja, dass ich, ich zeig mal"}, {"id": 670, "start": 4788.04, "end": 4800.84, "text": "nur das letzte an, Git wei\u00df ja, in dem letzten Comet wurden diese Zeilen ge\u00e4ndert, hinzugef\u00fcgt."}, {"id": 671, "start": 4800.84, "end": 4808.2, "text": "So, und Git Revert ist ziemlich simpel in dem, was es macht, das dreht das einfach um."}, {"id": 672, "start": 4808.2, "end": 4813.32, "text": "Also sprich, wenn in diesem Comet diese Zeilen hinzugekommen sind, wird ein Git Revert diese"}, {"id": 673, "start": 4813.32, "end": 4819.76, "text": "Zeilen l\u00f6schen. Zeilen, die gel\u00f6scht werden, wird ein Git Revert hinzuf\u00fcgen. Ein Git Revert"}, {"id": 674, "start": 4819.76, "end": 4828.04, "text": "macht quasi einfach ein umgedrehtes Comet. So, und wenn es jetzt wirklich von jemand"}, {"id": 675, "start": 4828.04, "end": 4833.36, "text": "anderem, was entwickelt worden w\u00e4re, dieses Feature, was jetzt unser Programm kaputt"}, {"id": 676, "start": 4833.36, "end": 4838.36, "text": "gemacht hat und halt sich \u00fcber 500 Zeilen erstrecken w\u00fcrde und ich will einfach nur,"}, {"id": 677, "start": 4838.36, "end": 4845.08, "text": "dass das Programm wieder geht, dann w\u00fcrde ich sagen Git Revert, letztes Comet, da kann"}, {"id": 678, "start": 4845.08, "end": 4850.36, "text": "man jetzt entweder die Comet ID nehmen oder man kann es auch abk\u00fcrzen, wir nehmen jetzt"}, {"id": 679, "start": 4850.36, "end": 4856.4, "text": "mal die Comet ID, das ist glaube ich einfacher und jetzt sagt er mir auch hier, ok, das"}, {"id": 680, "start": 4856.4, "end": 4862.76, "text": "ist ein neues Comet, aber dieses Comet l\u00f6scht einfach nur die Ver\u00e4nderung von eben diesem"}, {"id": 681, "start": 4862.76, "end": 4867.92, "text": "Comet. Wenn ich jetzt in meine History gucke, ist im Endeffekt genauso, wie ich das vorher"}, {"id": 682, "start": 4867.92, "end": 4872.4, "text": "von Hand gemacht habe, blo\u00df, dass das Git Revert automatisch f\u00fcr mich gemacht hat. Das"}, {"id": 683, "start": 4872.4, "end": 4877.84, "text": "Comet ist immer noch da, aber der Inhalt ist wieder weg. Also sprich, die Dateien sind"}, {"id": 684, "start": 4877.84, "end": 4883.0, "text": "wieder auf dem Stand von da, aber ich bin in der History nicht auf dem Stand von da,"}, {"id": 685, "start": 4883.0, "end": 4889.76, "text": "sondern dort. So viel zu, wenn man Mist Cometet hat, wie kriegt man es wieder weg. Find ich"}, {"id": 686, "start": 4889.76, "end": 4893.2, "text": "ist eines der wichtigsten Sachen, die man wissen muss, die meisten Git Tutorials machen"}, {"id": 687, "start": 4893.2, "end": 4898.36, "text": "das irgendwann am Schluss. Und jetzt kann ich das n\u00e4mlich auch pushen ohne Force, weil"}, {"id": 688, "start": 4898.36, "end": 4903.04, "text": "die History immer noch 1, 2, 3, 4, 5, also aufeinander basiert und nichts mehr verschwindet"}, {"id": 689, "start": 4903.04, "end": 4907.76, "text": "zwischendurch. So was sieht man ab und zu mal, also sprich, wenn man den \u00f6ffentlichen Git"}, {"id": 690, "start": 4907.76, "end": 4913.76, "text": "Push guckt, wird man das ab und zu mal sehen, Revert von bla bla bla. Also sprich, da ist"}, {"id": 691, "start": 4913.76, "end": 4918.4, "text": "irgendwie ein Comet reingekommen, was irgendwas kaputt gemacht hat und anstatt es lange zu"}, {"id": 692, "start": 4918.4, "end": 4923.44, "text": "suchen oder es zu fixen, sagt man, ok, wir Reverten das einfach erstmal wieder, dann"}, {"id": 693, "start": 4923.44, "end": 4930.76, "text": "ist es weg. Aber es ist halt wohlgemerkt aus dem Programm raus, also hier aus dem Bash"}, {"id": 694, "start": 4930.76, "end": 4934.56, "text": "Script ist es raus, allerdings in der Git History ist es noch drin. Das ist wichtig"}, {"id": 695, "start": 4934.56, "end": 4942.64, "text": "zu wissen. So. N\u00e4chste Frage ist, was ist ein Branch? Wir haben uns jetzt angeguckt,"}, {"id": 696, "start": 4942.64, "end": 4948.24, "text": "die History, wir haben uns angeguckt, dass jedes Comet eine eindeutige Aldi hat. Ja cheat,"}, {"id": 697, "start": 4948.24, "end": 4953.88, "text": "ich wei\u00df, dass meine Comet Messages wahnsinnig aussagekr\u00e4ftig sind, aber die sind aussagekr\u00e4ftiger"}, {"id": 698, "start": 4953.88, "end": 4968.24, "text": "als die meisten Comet Messages, die ich auf der Arbeit lese. So. Also, wir wissen jetzt,"}, {"id": 699, "start": 4968.24, "end": 4979.64, "text": "wie man was committet, wie man, wenn man Mist committet hat, das wieder wegbekommt und wir"}, {"id": 700, "start": 4979.64, "end": 4985.88, "text": "wissen, wie man was zu einem Remoteserver pushen kann. Das sind schon mal ganz gute"}, {"id": 701, "start": 4985.88, "end": 4992.04, "text": "Grundlagen, wo man erstmal mitarbeiten kann und wo man auch schon zumindest in beschr\u00e4nktem"}, {"id": 702, "start": 4992.04, "end": 5002.36, "text": "Umfang zusammenarbeiten kann. \u00c4h, zockst du heute noch Cod? Ich hatte eigentlich vor"}, {"id": 703, "start": 5002.36, "end": 5010.04, "text": "heute Cod zu spielen, allerdings f\u00e4ngt gleich der Overwatch World Cup an und ich wollte"}, {"id": 704, "start": 5010.04, "end": 5018.28, "text": "ich gucken. Aber eins, ich muss jetzt mal eine Sache gucken, wenn wir gerade dabei sind."}, {"id": 705, "start": 5018.28, "end": 5027.4, "text": "Kommuniert er das? Nein, ich guck das einfach nur. Naja, immerhin 45.000, das ist f\u00fcr"}, {"id": 706, "start": 5027.4, "end": 5035.92, "text": "immer noch relativ viel, ja. So. Jetzt gucken wir uns aber nochmal an, zwei Sachen muss"}, {"id": 707, "start": 5035.92, "end": 5046.16, "text": "man uns noch anschauen, bevor wir so mit den absoluten Git Basics durch sind und zwar"}, {"id": 708, "start": 5046.16, "end": 5053.04, "text": "sind, was sind Branches und wie f\u00fchrt man zwei Branches wieder zusammen. Das ist ein"}, {"id": 709, "start": 5053.04, "end": 5058.0, "text": "Thema, generell kann man \u00fcber diese ganzen Sachen stundenlang erz\u00e4hlen und wir sind"}, {"id": 710, "start": 5058.0, "end": 5062.88, "text": "wahrscheinlich auch jetzt mit diesem Stream heute noch nicht ganz fertig, weil wirklich"}, {"id": 711, "start": 5062.88, "end": 5066.68, "text": "weit kommen tut man damit noch nicht, es fehlen noch ein paar Sachen. Aber was wichtig zu"}, {"id": 712, "start": 5066.68, "end": 5079.04, "text": "wissen ist, was sind Branches. Branches sind \u00e4hm, Namen f\u00fcr einen Commit, k\u00f6nnte man"}, {"id": 713, "start": 5079.04, "end": 5090.28, "text": "so sagen, wo man sp\u00e4ter noch neue oben drauf legen kann. \u00c4hm, also sprich, ich kann jetzt,"}, {"id": 714, "start": 5090.28, "end": 5095.12, "text": "dass ich hier im Master Branch drinnen bin, ist einfach nur, weil das so defaultm\u00e4\u00dfig"}, {"id": 715, "start": 5095.12, "end": 5102.48, "text": "ist, weil man in irgendeinem Branch drinnen sein muss. \u00c4hm, Branch ist, gibt's bestimmt"}, {"id": 716, "start": 5102.48, "end": 5109.56, "text": "ein sch\u00f6nes Bild dazu, genau. Ein Branch ist sowas, also quasi, man hat einen Baum, man"}, {"id": 717, "start": 5109.56, "end": 5118.4, "text": "hat einen Ast und davon gehen halt so kleine Branchen, kleinere \u00c4ste von raus. Und so"}, {"id": 718, "start": 5118.4, "end": 5125.56, "text": "\u00e4hnlich ist das in Git auch, ich hab hier meinen Master Branch, also quasi das default"}, {"id": 719, "start": 5125.56, "end": 5131.36, "text": "Ding, in dem ich standardm\u00e4\u00dfig entwickle. Wenn ich jetzt was neues einbauen m\u00f6chte"}, {"id": 720, "start": 5131.36, "end": 5139.88, "text": "in unser tolles Bash Crypt. Wenn ich jetzt da irgendwas neues drin einbauen will, was"}, {"id": 721, "start": 5139.88, "end": 5145.52, "text": "ganz furchtbar experimentell ist zum Beispiel, von dem ich nicht wei\u00df, ob es \u00fcberhaupt"}, {"id": 722, "start": 5145.52, "end": 5152.92, "text": "funktionieren wird, dann w\u00e4re das ziemlich bl\u00f6d, ich w\u00fcrde das im Master Branch entwickeln,"}, {"id": 723, "start": 5152.92, "end": 5157.84, "text": "Committen und zwischendrin pushen, weil dann kriegen ja alle Leute die Version, die vielleicht"}, {"id": 724, "start": 5157.84, "end": 5164.92, "text": "kaputt ist. Und deswegen macht man sich dann meistens einen eigenen Branch auf daf\u00fcr,"}, {"id": 725, "start": 5164.92, "end": 5168.24, "text": "man kann auch den Master entwickeln, vor allem wenn man alleine an irgendwas entwickelt."}, {"id": 726, "start": 5168.24, "end": 5179.24, "text": "Hehe, der Nilsson. \u00dcbrigens Nilsson, was mir gerade einf\u00e4llt, hat dich auf Twitter"}, {"id": 727, "start": 5179.24, "end": 5188.24, "text": "in dem letzten Mal ein Joe angeschrieben, ob du \u00fcber seine Rechnerzusammenstellung dr\u00fcber"}, {"id": 728, "start": 5188.24, "end": 5192.84, "text": "gucken k\u00f6nntest. Das w\u00e4re nett von dir, wenn du mal dr\u00fcber gucken k\u00f6nntest, weil"}, {"id": 729, "start": 5192.84, "end": 5198.4, "text": "da tut sich da sehr schwer. Genau, wir machen jetzt, wir wollen jetzt ein super experimentelles"}, {"id": 730, "start": 5198.4, "end": 5203.24, "text": "hochkritisches Feature in unser tolles Bash Crypt einbauen. Zum Beispiel, wie das Serious"}, {"id": 731, "start": 5203.24, "end": 5209.48, "text": "Max gerade schreibt im Chat Echo123. Ganz kritisch, furchtbar schlimm und das wollen"}, {"id": 732, "start": 5209.48, "end": 5216.04, "text": "wir nicht in unserem Hauptentwicklungszweig, Hauptentwicklungsbranche machen, weil wir"}, {"id": 733, "start": 5216.04, "end": 5221.88, "text": "wollen ja da eine Version drin haben, die erstmal, auf den ersten Blick lauff\u00e4hig"}, {"id": 734, "start": 5221.88, "end": 5228.92, "text": "ist. Deswegen macht man dann einen eigenen Branch auf, dazu sagt man Git Checkout minus"}, {"id": 735, "start": 5228.92, "end": 5238.12, "text": "B. Zum Beispiel, \u00e4h, nennen wir jetzt den Branch neues Feature. Das ist vielleicht"}, {"id": 736, "start": 5238.12, "end": 5249.2, "text": "auch nicht der beste Name. So, \u00e4h, und jetzt hab ich quasi den Stand, ich geh nochmal"}, {"id": 737, "start": 5249.2, "end": 5255.8, "text": "zur\u00fcck. Fuck, ich hab meine Alias hier nicht, nicht, Git Checkout Master. \u00c4h, jetzt hab"}, {"id": 738, "start": 5255.8, "end": 5264.2, "text": "ich quasi den Stand von meiner History genommen und einfach, wie man es hier oben sieht, \u00e4hm,"}, {"id": 739, "start": 5264.2, "end": 5270.4, "text": "da noch einen weiteren Namen dran geklebt. Also, auf dieses Comet, dieses Comet kann"}, {"id": 740, "start": 5270.4, "end": 5276.32, "text": "ich zur Zeit mit unterschiedlichen Namen ansprechen. Beispielsweise mit Master, mit, ja, FakeGit"}, {"id": 741, "start": 5276.32, "end": 5282.92, "text": "Hat Master, \u00e4h, oder eben auch mit neues Feature. Alle diese Branches zeigen aktuell noch auf"}, {"id": 742, "start": 5282.92, "end": 5291.52, "text": "dieses Comet. Jetzt hab ich es aber aufgesplittet, indem ich einen neuen Branch gemacht hab und"}, {"id": 743, "start": 5291.52, "end": 5297.36, "text": "wenn ich jetzt neue Sachen committe, dann sind die erstmal nur in neues Feature drinne"}, {"id": 744, "start": 5297.36, "end": 5304.0, "text": "und nicht in Master. Also, zum Beispiel, wir machen jetzt hier mal ganz, ganz kritisch,"}, {"id": 745, "start": 5304.0, "end": 5312.88, "text": "Echo123. Das ist wirklich, das ist hoch expert, wie schreibt man das \u00fcberhaupt? Kritisch."}, {"id": 746, "start": 5312.88, "end": 5318.96, "text": "Das ist ganz kritisch, Echo123, das kann echt in die Hose gehen, ja. \u00c4h, das, das committe"}, {"id": 747, "start": 5318.96, "end": 5331.88, "text": "ich jetzt noch mit, \u00e4hm, es ist hier, Achtung, gef\u00e4hrlich. So, jetzt hab ich ein neues Comet"}, {"id": 748, "start": 5331.88, "end": 5342.48, "text": "angelegt f\u00fcr mein ganz kritisches, \u00e4h, ganz kompliziertes, kritisches Feature und das"}, {"id": 749, "start": 5342.48, "end": 5346.2, "text": "ist jetzt nur in diesem Branch drinnen. Und wenn man hier auf mein FakeGit Hat noch mal"}, {"id": 750, "start": 5346.2, "end": 5351.28, "text": "geht, dann sieht man auch aktuell gibt es woanders \u00fcberhaupt eine Branch Anzeige. Ah,"}, {"id": 751, "start": 5351.28, "end": 5365.04, "text": "hier, Branch. Es gibt aktuell nur Master Branch. Jetzt kann ich das pushen als, \u00e4hm, in diesem"}, {"id": 752, "start": 5365.04, "end": 5374.28, "text": "Branch und das hat jetzt den gro\u00dfen Vorteil, dass der Master Branch auf einer Version geblieben"}, {"id": 753, "start": 5374.28, "end": 5381.28, "text": "ist, die geht, die funktioniert, allerdings mein neues Feature Branch eben diesen super"}, {"id": 754, "start": 5381.28, "end": 5385.52, "text": "gef\u00e4hrlichen Comet enth\u00e4lt, der vielleicht alles kaputt gemacht hat. So, und die Version"}, {"id": 755, "start": 5385.52, "end": 5392.12, "text": "dieses Scripts kann man jetzt erstmal ordentlich testen und ausprobieren und wenn dieses neue"}, {"id": 756, "start": 5392.12, "end": 5399.08, "text": "Feature sich dann als brauchbar herausgestellt hat, dann kann ich sagen, ich nehme das neue"}, {"id": 757, "start": 5399.08, "end": 5405.52, "text": "Feature jetzt und schiebe das wieder zur\u00fcck in den Master Branch. Aber bis ich das gemacht"}, {"id": 758, "start": 5405.52, "end": 5417.68, "text": "hab, ist im Master Branch weiterhin ein relativ stabiler Stand und alle experimentellen Entwicklungen"}, {"id": 759, "start": 5417.68, "end": 5424.44, "text": "hier in diesem neuen Feature Branch. Ja, Silbaro, genau daf\u00fcr ist das sinnvoll. Silbaro hat"}, {"id": 760, "start": 5424.44, "end": 5432.16, "text": "geschrieben, neue Branches sind voll f\u00fcr neue Versionen oder Betas. Richtig. Man verwendet"}, {"id": 761, "start": 5432.16, "end": 5439.0, "text": "Branches f\u00fcr unterschiedliche Sachen, entweder gibt es, also eigentlich kann man es machen"}, {"id": 762, "start": 5439.0, "end": 5446.04, "text": "wie man will, aber es gibt so ein paar Konventionen, wie man das in Neudeutsch nennt, Best Practice,"}, {"id": 763, "start": 5446.04, "end": 5450.64, "text": "es gibt so ein paar Sachen, die haben sich so etabliert, also man macht Branches beispielsweise"}, {"id": 764, "start": 5450.64, "end": 5459.64, "text": "f\u00fcr neue Features. Man macht Branches auch f\u00fcr alte Release Versionen, wo man vielleicht"}, {"id": 765, "start": 5459.64, "end": 5471.52, "text": "noch was dran fixen muss. Das macht der Lidlxkernel beispielsweise so. Man kann auch Hotfix Branches"}, {"id": 766, "start": 5471.52, "end": 5484.52, "text": "machen. In der Regel macht man Branches immer dann, wenn man erstmal den eigentlichen Stand"}, {"id": 767, "start": 5484.52, "end": 5498.92, "text": "nicht ver\u00e4ndern will und erstmal ausprobieren m\u00f6chte. Deswegen ist es in den Reb, ich muss"}, {"id": 768, "start": 5498.92, "end": 5505.48, "text": "meine Git-Aliasse hier einrichten, sonst dreh ich durch. Deswegen ist es auch bei den Git-Repos,"}, {"id": 769, "start": 5505.48, "end": 5513.92, "text": "die ich verwalte, so, dass in den Master-Branche au\u00dfer mir keiner pushen darf. Das hab ich"}, {"id": 770, "start": 5513.92, "end": 5529.6, "text": "durchgeblockt. Au\u00dfer mir darf in 5 Branches keiner pushen, unter anderem Master. So ist"}, {"id": 771, "start": 5529.6, "end": 5537.64, "text": "sichergestellt, dass zumindest ein gewisses Ma\u00df an Kontrolle vorhanden ist, was im Master"}, {"id": 772, "start": 5537.64, "end": 5544.0, "text": "kommt und was nicht. Weil es ist einfach so, dass Master eben der Standard-Branch ist,"}, {"id": 773, "start": 5544.0, "end": 5554.96, "text": "auf dem Leute ihre neuen Entwicklungen aufsetzen. Und der sollte halbwegs stabil sein. Das ist"}, {"id": 774, "start": 5554.96, "end": 5561.04, "text": "nicht das stable Release, was ich jetzt irgendwie zum Download anbiete oder so. Das sollte aber"}, {"id": 775, "start": 5561.04, "end": 5578.12, "text": "ein halbwegs stabiler Entwicklungsstand sein, wo andere Leute drauf aufsetzen k\u00f6nnen. Das"}, {"id": 776, "start": 5578.12, "end": 5583.12, "text": "Ding Master hei\u00dft, ist aber wie gesagt auch einfach nur ein Name, genauso wie das Origin"}, {"id": 777, "start": 5583.12, "end": 5588.24, "text": "des Remotes. Das ist einfach nur ein Name, ich kann das Ding auch umbenennen. Also wenn"}, {"id": 778, "start": 5588.24, "end": 5592.88, "text": "ich jetzt beispielsweise nicht will, dass es standardm\u00e4\u00dfig einen Master-Branch gibt,"}, {"id": 779, "start": 5592.88, "end": 5601.74, "text": "ich kann's auch umbenennen. Ich kann jetzt auch sagen, Master zu stable. Was bescheuert"}, {"id": 780, "start": 5601.74, "end": 5606.64, "text": "ist, weil in der Regel ist das eben der aktive Entwicklungs-Branch, der aber halt nicht kaputt"}, {"id": 781, "start": 5606.64, "end": 5619.72, "text": "sein sollte. Und jetzt k\u00f6nnen wir beispielsweise ein neues Feature testen, alles wunderbar."}, {"id": 782, "start": 5619.72, "end": 5625.04, "text": "Und wenn ich fertig bin, und das werden wir n\u00e4chstes Mal noch ein bisschen vertiefen,"}, {"id": 783, "start": 5625.04, "end": 5628.92, "text": "weil dann gucken wir uns mal an, was passiert, wenn das Zusammenf\u00fchren Konflikte gibt und"}, {"id": 784, "start": 5628.92, "end": 5639.4, "text": "sowas in der Richtung. Wenn ich damit fertig bin, wenn das getestet ist, und nachdem ich"}, {"id": 785, "start": 5639.4, "end": 5643.16, "text": "diesen Branch gepusht habe, k\u00f6nnen das nat\u00fcrlich auch andere Leute bei sich ausprobieren,"}, {"id": 786, "start": 5643.16, "end": 5651.28, "text": "indem sie einfach eben mit Git Checkout den Branch wechseln. Dann kommt das Ganze wieder"}, {"id": 787, "start": 5651.28, "end": 5663.84, "text": "zur\u00fcck in Master. Ach fuck, wie konnte man Graf mal nochmal Git Lock? So, aktuell sieht"}, {"id": 788, "start": 5663.84, "end": 5668.36, "text": "unsere History noch ziemlich gerade aus. Erstes Comet, zweites Comet, drittes Comet, viertes"}, {"id": 789, "start": 5668.36, "end": 5674.56, "text": "Comet, jedes Comet setzt aufeinander auf und alles ist gut. So sieht aktuell unsere"}, {"id": 790, "start": 5674.56, "end": 5679.12, "text": "History aus. Wenn ich jetzt fertig bin mit meinem neuen Feature, wenn ich das fertig"}, {"id": 791, "start": 5679.12, "end": 5687.2, "text": "entwickelt habe, kann ich sagen, ok, ich nehme dieses neue Feature und schiebe es in mein"}, {"id": 792, "start": 5687.2, "end": 5695.64, "text": "Hauptentwicklungsbranche rein, also in Master. Was mache ich mit Git Merge? Diese Option"}, {"id": 793, "start": 5695.64, "end": 5698.92, "text": "kann ich n\u00e4chstes Mal erkl\u00e4ren, das muss ich jetzt machen, dass ich \u00fcberhaupt was sehe."}, {"id": 794, "start": 5698.92, "end": 5705.88, "text": "So, jetzt kann ich das Mergen, dann gibt es ein eigenes Merge Comet und wenn ich jetzt"}, {"id": 795, "start": 5705.88, "end": 5710.6, "text": "in meine History reingucke, sehe ich, siehe da, das sind die Comets, die wir schon ein"}, {"id": 796, "start": 5710.6, "end": 5718.6, "text": "bisschen hatten und jetzt kommt hier ein neues Comet, das kommt aber aus einem anderen Branch,"}, {"id": 797, "start": 5718.6, "end": 5723.64, "text": "ich meine, das ist hier so ASCII-Graf gemalt, ja, man kann sich schon so ungef\u00e4hr vorstellen."}, {"id": 798, "start": 5723.64, "end": 5730.56, "text": "Bis hier ging es immer geradeaus und da kam aus einem zweiten Branch, hier wurde es abgespalten"}, {"id": 799, "start": 5730.56, "end": 5736.72, "text": "aus dem eigentlichen Branch, was committet und das ging dann parallel und hier in diesem"}, {"id": 800, "start": 5736.72, "end": 5745.4, "text": "letzten Comet wurde es wieder zusammengef\u00fcgt. Ja, nat\u00fcrlich, das war jetzt wirklich die"}, {"id": 801, "start": 5745.4, "end": 5753.6, "text": "absolut ideale Zustand. Es kann ohne Probleme passieren, dass zwei Leute parallel an der"}, {"id": 802, "start": 5753.6, "end": 5759.8, "text": "gleichen Datei was ge\u00e4ndert haben und dass sich das dann nicht vertr\u00e4gt beim Mergen."}, {"id": 803, "start": 5759.8, "end": 5764.44, "text": "Aber das gucken wir uns das n\u00e4chste Mal an und das n\u00e4chste Mal habe ich mir vorher auch"}, {"id": 804, "start": 5764.44, "end": 5768.88, "text": "ein bisschen mehr Gedanken gemacht, was ich eigentlich erz\u00e4hlen will, weil es hat ein"}, {"id": 805, "start": 5768.88, "end": 5774.84, "text": "bisschen gedauert, bis ich reingekommen bin. Zumindest, was wir uns heute angeguckt haben,"}, {"id": 806, "start": 5774.84, "end": 5780.52, "text": "damit kommt man zumindest auf GitHub so basic-m\u00e4\u00dfig schon mal ganz gut zurecht, man kann sich"}, {"id": 807, "start": 5780.52, "end": 5785.24, "text": "in den Repo klonen, man kann was editieren, man kann was committen, man kann was pushen,"}, {"id": 808, "start": 5785.24, "end": 5790.28, "text": "das sind erstmal die wichtigsten Sachen und man kann Branches wechseln, wenn man vielleicht"}, {"id": 809, "start": 5790.28, "end": 5796.0, "text": "was ausprobieren will. Ich meine, es k\u00f6nnte ja sein, dass man ein GitHub-Projekt sich"}, {"id": 810, "start": 5796.0, "end": 5801.04, "text": "angucken m\u00f6chte und halt nicht den Masterstand, den Hauptentwicklungsstand, von dem man sich"}, {"id": 811, "start": 5801.04, "end": 5806.08, "text": "angucken will, sondern wirklich irgendein experimentales Feature, weil einen das eben"}, {"id": 812, "start": 5806.08, "end": 5812.84, "text": "interessiert. Also Branch wechseln ist auch eine wichtige Geschichte und die logische"}, {"id": 813, "start": 5812.84, "end": 5816.12, "text": "Schlussfolgerung daraus ist, man muss auch wissen, wie man zwei Branches wieder zusammenf\u00fchrt."}, {"id": 814, "start": 5816.12, "end": 5829.2, "text": "Ja, auskernFox mache ich auch so. Er hat geschrieben, wie h\u00e4ltst du es mit merge und commit? Ich"}, {"id": 815, "start": 5829.2, "end": 5832.68, "text": "fahre immer ganz gut mit Branches, in die nur committed wird und Branches, in die nur"}, {"id": 816, "start": 5832.68, "end": 5844.92, "text": "gemerged wird. Das mache ich \u00e4hnlich, mit immer mal kleinen Ausnahmen. Also, was n\u00e4chstes"}, {"id": 817, "start": 5844.92, "end": 5850.92, "text": "Mal ist morgen Mittag? Was meinst du? Also, ich mache das immer mit kleinen Ausnahmen,"}, {"id": 818, "start": 5850.92, "end": 5859.6, "text": "weil manchmal ist es einfach viel einfacher, wenn man wirklich da irgendwie einen Zahlendreher"}, {"id": 819, "start": 5859.6, "end": 5865.6, "text": "drin hat oder sowas. Also, mal angenommen. Mal angenommen, wir haben jetzt eine neue"}, {"id": 820, "start": 5865.6, "end": 5875.36, "text": "Version und irgendwie die QS stellt fest, ist irgendwas kaputt. Nat\u00fcrlich kann ich"}, {"id": 821, "start": 5875.36, "end": 5879.2, "text": "demjenigen dann sagen, der damit was zu tun hat, hier mach mal einen Hotfix-Branch oder"}, {"id": 822, "start": 5879.2, "end": 5885.08, "text": "sonst was auf, das ist schon sinnvoll. Zu der Reihenlehre nach, ja. Aber wenn das mal"}, {"id": 823, "start": 5885.08, "end": 5891.44, "text": "angenommen wirklich sowas ganz furchtbar Simples ist, dass der einfach, keine Ahnung,"}, {"id": 824, "start": 5891.44, "end": 5896.08, "text": "Zahlendreher bei einer IP oder bei einem Name oder sowas falsch hat, dann setzen wir"}, {"id": 825, "start": 5896.08, "end": 5899.88, "text": "uns auch manchmal zu mir an den Rechner, gehen auf den jeweiligen Branch drauf, also auf"}, {"id": 826, "start": 5899.88, "end": 5906.8, "text": "den Beta, auf den aktuellen Beta-Branch und machen dann halt commit da drauf, obwohl da"}, {"id": 827, "start": 5906.8, "end": 5912.04, "text": "eigentlich nichts drauf committed werden soll. Das kann ich dann aber entscheiden und wenn"}, {"id": 828, "start": 5912.04, "end": 5916.32, "text": "ich das einfach sehe, dass es nur ein Zahlendreher ist oder so, dann sag ich dann, ja okay, komm,"}, {"id": 829, "start": 5916.32, "end": 5919.92, "text": "lass machen, machen wir keinen extra Branch auf. Aber auf ScanFolks normalerweise mach"}, {"id": 830, "start": 5919.92, "end": 5928.68, "text": "ich das auch so, ja. Alle Leute haben gef\u00e4lligst, den eigenen Branch zu entwickeln, es zu testen"}, {"id": 831, "start": 5928.68, "end": 5935.04, "text": "und quasi als Merchrequest, Pullrequest, wie man es nennt, wie man es auch immer macht,"}, {"id": 832, "start": 5935.04, "end": 5944.6, "text": "einzureichen als \u00c4nderung f\u00fcr Master. Tobi tickt, benutzt du eine Git GUI um Merchkonflikte"}, {"id": 833, "start": 5944.6, "end": 5951.56, "text": "zu erkennen? Na ja, Merchkonflikte erkennt man auf jeden Fall, wenn es sobald sie gibt,"}, {"id": 834, "start": 5951.56, "end": 5957.12, "text": "weil da geht es nicht weiter. Ansonsten verwende ich eigentlich keine GUI f\u00fcr, ich mach das,"}, {"id": 835, "start": 5957.12, "end": 5960.76, "text": "wenn es kleine \u00fcbersichtliche Merchkonflikte sind, aber das gucken wir uns das n\u00e4chste"}, {"id": 836, "start": 5960.76, "end": 5966.8, "text": "Mal an. Wenn es kleine \u00fcbersichtliche Merchkonflikte sind, mach ich das hier einfach auf der Kommandozeile"}, {"id": 837, "start": 5966.8, "end": 5973.2, "text": "im Wim. Oder aber, was auch ein ganz gutes Merch, ganz gut Merch-Diff an sich hat, ist"}, {"id": 838, "start": 5973.2, "end": 5981.24, "text": "Visual Studio Code. Aber normalerweise sind, ich wei\u00df, dass viele Leute, die fr\u00fcher SVN"}, {"id": 839, "start": 5981.24, "end": 5984.72, "text": "verwendet haben, f\u00fcr die ist Merchen und Merchkonflikte und solche Sachen, das ist"}, {"id": 840, "start": 5984.72, "end": 5992.16, "text": "f\u00fcr die, das ist kurz bevor das Rechenzentrum implodiert quasi, das ist in Git alles nicht"}, {"id": 841, "start": 5992.16, "end": 5999.32, "text": "so wild. Also die meisten Merchkonflikte sind recht \u00fcbersichtlich. Und ich meine, ich hab"}, {"id": 842, "start": 5999.32, "end": 6004.56, "text": "jetzt noch nie an sowas Gro\u00dfem beispielsweise, oder ich hatte noch nie die Verantwortung"}, {"id": 843, "start": 6004.56, "end": 6010.12, "text": "f\u00fcr das Repo, sowas Gro\u00dfem wie beispielsweise der Git, \u00e4h, der Linux-K\u00f6nnel, ja. Aber"}, {"id": 844, "start": 6010.12, "end": 6014.52, "text": "wer hat das schon? Da gibt es eine Handvoll Leute auf der Welt, die das haben. Aber die"}, {"id": 845, "start": 6014.52, "end": 6021.68, "text": "Repo, \u00e4h, die Repos bei uns sind relativ gro\u00df. Und die Merchkonflikte, die es da gibt, sind"}, {"id": 846, "start": 6021.68, "end": 6033.12, "text": "eigentlich recht \u00fcbersichtlich. Das ist nicht so wild. Weil es ist so, dass, es ist ja meistens"}, {"id": 847, "start": 6033.12, "end": 6039.64, "text": "in einem Projekt, wo mehrere Leute dran arbeiten, schon so ein bisschen aufgeteilt, so wer ist"}, {"id": 848, "start": 6039.64, "end": 6045.56, "text": "f\u00fcr was zust\u00e4ndig. Also es ist selten, dass quasi 3-4 Leute an den gleichen Dateien was"}, {"id": 849, "start": 6045.56, "end": 6051.88, "text": "editieren, ja. Der eine k\u00fcmmert sich um das, der eine k\u00fcmmert sich eher um das. Und klar,"}, {"id": 850, "start": 6051.88, "end": 6057.68, "text": "es gibt auch mal Dateien, wo parallel dran editiert wird. Aber meistens, meistens editieren"}, {"id": 851, "start": 6057.68, "end": 6062.0, "text": "die Leute an unterschiedlichen Dateien. Dementsprechend gibt es gar keine Merchkonflikte. Oder wenn"}, {"id": 852, "start": 6062.0, "end": 6066.08, "text": "es Merchkonflikte gibt, ist es relativ einfach zu l\u00f6sen. Entweder ist es so offensichtlich,"}, {"id": 853, "start": 6066.08, "end": 6071.16, "text": "dass man das direkt, dass ich es direkt selber sehe. Oder aber, naja, ich nehme einfach die"}, {"id": 854, "start": 6071.16, "end": 6076.24, "text": "zwei Leute, von denen die Comets sind und die Bratsches sind, die Konflikten und sag"}, {"id": 855, "start": 6076.24, "end": 6082.36, "text": "ja, Jungs, werdet euch mal einig, wie muss es denn aussehen am Ende. Und das ist meistens"}, {"id": 856, "start": 6082.36, "end": 6087.32, "text": "nicht, nicht gro\u00dfartig kompliziert. Da sind vielleicht 3-4 Zeilen dann, die da konflikten"}, {"id": 857, "start": 6087.32, "end": 6096.32, "text": "oder so. Also es h\u00e4lt sich in Grenzen. Welches Webinterface benutzt ihr in der Firma f\u00fcr"}, {"id": 858, "start": 6096.32, "end": 6100.92, "text": "Pull-Request? GitLab. Wir haben fr\u00fcher GitLab verwendet. Und ich fand GitLab auch ziemlich"}, {"id": 859, "start": 6100.92, "end": 6107.48, "text": "gut. Ich h\u00e4tte auch GitLab weiterverwendet. Aber die Firma hat sich ganz viele Atlassian-Tools"}, {"id": 860, "start": 6107.48, "end": 6123.88, "text": "gekauft. Und jetzt haben wir Bitbucket. Ja, Sebaro. Das stimmt. Irgendjemand hat eben"}, {"id": 861, "start": 6123.88, "end": 6130.28, "text": "was zu Pull-Request. Ach nee, hier war eine Frage drinne. Welches Webinterface benutzt"}, {"id": 862, "start": 6130.28, "end": 6138.68, "text": "ihr in der Firma f\u00fcr Pull-Request? GitLab. Bitbucket. Bitbucket. Das ist auch ganz gut."}, {"id": 863, "start": 6138.68, "end": 6148.08, "text": "Also im Vergleich zu anderen Kack-Business-Software ist Bitbucket wirklich in Ordnung. Ich finde"}, {"id": 864, "start": 6148.08, "end": 6155.72, "text": "GitLab auch gut. Wobei GitLab mittlerweile ziemlich aufgebl\u00e4ht ist. Ah gut, es ist"}, {"id": 865, "start": 6155.72, "end": 6161.36, "text": "halt eine Ruby-On-Wales-Anwendung. So, ich hoffe euch hat der Stream gefallen. Ich gebe"}, {"id": 866, "start": 6161.36, "end": 6165.72, "text": "zu, das war am Anfang ein bisschen chaotisch, weil ich selbst nicht genau wusste, was ich"}, {"id": 867, "start": 6165.72, "end": 6168.4, "text": "alles erz\u00e4hlen muss, in welcher Reihenfolge und so. Das n\u00e4chste Mal mache ich mir ein"}, {"id": 868, "start": 6168.4, "end": 6180.2, "text": "bisschen mehr Gedanken dr\u00fcber. Aber ich hoffe so die ganz grundlegenden Basics sind"}, {"id": 869, "start": 6180.2, "end": 6186.72, "text": "zu r\u00fcber gekommen. Also sprich, man k\u00f6nnte jetzt ein Repo von GitHub klonen und dort"}, {"id": 870, "start": 6186.72, "end": 6191.76, "text": "eine \u00c4nderung mit drin und machen und vielleicht vorher einen eigenen Branch aufmachen und"}, {"id": 871, "start": 6191.76, "end": 6205.12, "text": "das Ganze pushen. Morgen geht es weiter. Ja, ich kann morgen weiter machen, Cheat. Hast"}, {"id": 872, "start": 6205.12, "end": 6212.96, "text": "du Vorschl\u00e4ge, was ich morgen machen soll? Also was immer super ist, ist wenn die Leute"}, {"id": 873, "start": 6212.96, "end": 6218.04, "text": "Fragen haben zu irgendwelchen Sachen, dann ist es einfach an roten Fahrten zu finden,"}, {"id": 874, "start": 6218.04, "end": 6225.72, "text": "was man erz\u00e4hlen kann. Wie schalt es mit dem Discord-Server aus, habe ich noch nicht gemacht."}, {"id": 875, "start": 6225.72, "end": 6238.04, "text": "Also was ich morgen, ich werde morgen ein bisschen versteckte Sachen zeigen, die aber"}, {"id": 876, "start": 6238.04, "end": 6244.92, "text": "recht praktisch sind. Zum Beispiel, wie man Fehler finden kann. Es gibt in Git eingebaute"}, {"id": 877, "start": 6244.92, "end": 6252.44, "text": "Tools, die einem das Fehler finden ziemlich erleichtern. Also mit Fehler finden meine"}, {"id": 878, "start": 6252.44, "end": 6256.76, "text": "ich jetzt zum Beispiel, man stellt halt wirklich in der Beta-Phase irgendwie fest, es geht"}, {"id": 879, "start": 6256.76, "end": 6261.2, "text": "was nicht und dann geht es darum zu finden oder den Comet rauszufinden, der es kaputt"}, {"id": 880, "start": 6261.2, "end": 6269.48, "text": "gemacht hat. Das ist in Git viel einfacher als gedacht. Flash Gordon fragt, was ist mit"}, {"id": 881, "start": 6269.48, "end": 6277.2, "text": "Stashing und Staging? Du meinst, was der Unterschied ist? Verstehe ich das richtig? Oder ob ich"}, {"id": 882, "start": 6277.2, "end": 6297.16, "text": "es zeigen soll? Ja, Fatal, das stimmt. So richtige Probleme kriegt man eh erst, wenn man es verwendet."}, {"id": 883, "start": 6297.16, "end": 6307.64, "text": "Ja, Cherrypicks ist aber schon ein bisschen, das brauchen die meisten Leute nicht. Das"}, {"id": 884, "start": 6307.64, "end": 6317.08, "text": "brauche ich, wenn man sich um sowas k\u00fcmmert, quasi als Verantwortlicher f\u00fcr die Repos"}, {"id": 885, "start": 6317.08, "end": 6323.08, "text": "und so und f\u00fcr die unterschiedlichen Entwicklungsstufen. Da braucht man \u00f6fters mal Cherrypick, aber"}, {"id": 886, "start": 6323.08, "end": 6335.28, "text": "die meisten Leute brauchen es eigentlich nicht. Ganz simpel gesagt, Flash Gordon, hat Stash"}, {"id": 887, "start": 6335.28, "end": 6338.8, "text": "und Stage eigentlich \u00fcberhaupt nichts miteinander zu tun, das sind komplett unterschiedliche"}, {"id": 888, "start": 6338.8, "end": 6342.4, "text": "Sachen. Stashing ist Zwischenspeichern von \u00c4nderungen, wenn man einen Branch wechseln"}, {"id": 889, "start": 6342.4, "end": 6349.88, "text": "muss und Staging ist das, was ich vorgemerkt habe f\u00fcr das n\u00e4chste Comet, um es mal ganz"}, {"id": 890, "start": 6349.88, "end": 6356.84, "text": "kurz zu sagen. Wenn ich etwas adde und noch nicht committe, dann ist es gestaged f\u00fcr"}, {"id": 891, "start": 6356.84, "end": 6365.12, "text": "das n\u00e4chste Comet und wenn ich etwas editiert habe, aber jetzt nicht committen will, weil"}, {"id": 892, "start": 6365.12, "end": 6368.16, "text": "ich vielleicht den Branch wechseln muss, weil mein Chef gerade zu mir gekommen ist und"}, {"id": 893, "start": 6368.16, "end": 6384.36, "text": "gesagt hat, du musst etwas machen, dann stash ich quasi in Zwischenspeicher. Ja, Fatal,"}, {"id": 894, "start": 6384.36, "end": 6399.0, "text": "das ist cool, dann hat es sich am wenigsten gelohnt, dass ich etwas dazu erz\u00e4hlt habe."}, {"id": 895, "start": 6399.0, "end": 6408.0, "text": "Ja, dann mache ich das mal morgen. Es gibt noch einige coole Sachen, die man zeigen kann,"}, {"id": 896, "start": 6408.0, "end": 6414.88, "text": "wobei man sagen muss, bei Git ist es so, man kann damit alles machen, man kann damit machen,"}, {"id": 897, "start": 6414.88, "end": 6420.2, "text": "was man will und wie man es will, man sollte aber aufpassen, dass man es nicht \u00fcbertreibt."}, {"id": 898, "start": 6420.2, "end": 6428.28, "text": "Nur weil ich 500 Branches anlegen kann, muss ich das nicht unbedingt machen. Git selbst"}, {"id": 899, "start": 6428.28, "end": 6434.88, "text": "st\u00f6rt das \u00fcberhaupt nicht, Git ist mit 500 Branches noch genauso schnell wie mit 2 Branches,"}, {"id": 900, "start": 6434.88, "end": 6440.68, "text": "aber es ist halt nicht wirklich \u00fcbersichtlich. Nur weil ich 5 Branches auf einmal merken"}, {"id": 901, "start": 6440.68, "end": 6446.32, "text": "kann, weil das Git zul\u00e4sst, muss ich das nicht unbedingt machen. Also, man kann alles"}, {"id": 902, "start": 6446.32, "end": 6451.0, "text": "mitmachen, es ist auch vollkommen egal, wie man das macht, aber wenn ich bei jedem Comet"}, {"id": 903, "start": 6451.0, "end": 6456.6, "text": "Force pushen muss, mache ich irgendwas verkehrt. Wie w\u00e4re es mit Versionstacks? Ja, k\u00f6nnte"}, {"id": 904, "start": 6456.6, "end": 6462.64, "text": "man auch machen. Bei der Gelegenheit k\u00f6nnte man eigentlich noch mal sagen, dass Comet"}, {"id": 905, "start": 6462.64, "end": 6480.52, "text": "IDs und Branches und Texts relativ \u00e4hnlich sind. Rebase, Rebase k\u00f6nnte man auch mal machen."}, {"id": 906, "start": 6480.52, "end": 6489.2, "text": "Rebase ist wichtig, wenn man halt seine eigenen Comets aufr\u00e4umen will, bevor man sie einreicht"}, {"id": 907, "start": 6489.2, "end": 6503.36, "text": "als Pull oder Merchrequest. Ja, das werde ich morgen machen. Und jetzt werde ich Overwatch"}, {"id": 908, "start": 6503.36, "end": 6512.24, "text": "World Cup gucken. Ich hoffe euch hat es gefallen. \u00dcbrigens wir haben ja heute unsere Linux"}, {"id": 909, "start": 6512.24, "end": 6519.04, "text": "FM verwendet, die wir vor paar Wochen eingerichtet haben zusammen im Stream. Wem das noch nicht"}, {"id": 910, "start": 6519.04, "end": 6547.52, "text": "aufgefallen ist. Gut. Dann macht's gut, bis morgen. Tsch\u00fcss."}]}
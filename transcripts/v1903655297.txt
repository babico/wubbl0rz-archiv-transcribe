So, da bin ich Leute. Ich war schon Rennen. 5,84 Kilometer waren es heute. Also ungefähr 300 Meter kürzer als das letzte Mal. Hängt immer ein bisschen von der Runde ab.
Ich hab noch mein Handy, meine Handyhülle oben, muss ich mal kurz abmachen. Ich hab sie gerade irgendwie gedrückt, ein bisschen am Bauch im Sitzen.
So, ab. Ich hab so ein Gurt fürs Handy, was man unter das T-Shirt machen kann, weil ohne Handy dabei suckt.
So. Nice. Heute hatte ich neuen, pass mal auf hier, Bullshit Einheiten. Neuer Eine-Meile-Rekord. Weiß gar nicht, warum die App das überhaupt anzeigt.
Ich hatte keinen Kilometer-Rekord, ich hatte einen Eine-Meile-Rekord. Aber gut, die versuchen halt die Leute zu motivieren und dementsprechend wird jeder Scheiß angezeigt.
Ich weiß gar nicht mal, wo man das überhaupt sieht. Ich überlege gerade, ich bin gerade in der App am gucken. Ich überlege gerade, wo man überhaupt die Rekorde sieht in den Performance-Stats vielleicht?
Ne, Activities vielleicht? Ach, keine Ahnung, Alter. Die App ist so krass unübersichtlich, Mann. Du musst werben. Dankeschön für den Sub. Das ist die Off-Garmin-Connect-App. Nicht Sign-In, Alter. Und die ist wirklich echt unübersichtlich.
Aha, sag ich dir gleich. Warum gibt es eigentlich keine Bilder mehr bei Google-Suche? So, und wie zeigt man sich da die Rekords an? Wo steht das? How do I manage my personal records? Okay, danke für den Sub. Alter, mach da ein fucking Bild rein, Mann.
Okay, also, Tab. There are running records. Okay, okay, mal gucken, mal gucken. Challenges vielleicht, hä? Ach, mein Gott, ist diese App unübersichtlich, Alter. Es gibt schon einen Garmin-Champ. Guck mal, es gibt schon Garmin Home Assistant GitHub.
Haben Leute schon gemacht hier. Kann man schon in seinen Smart Home einbinden, die ganzen Garmin-Sensors. Ja, das ist, okay, guck mal, Leute. Es ist total hängen geblieben. Es gibt einen extra Tab. Challenges. Aber, wer jetzt denkt, dass die Rekords irgendwie in Challenges drin sind, der irrt natürlich, ja?
Ja, running. Schön. Wo zum Teufel sind die Rekords? Das kann doch nicht so schwierig sein. Ich muss das jetzt finden. Wo sind hier die Dinger? Das kann doch nicht sein, ne? Yesterday? Nein, interessiert mich nicht. Ich mein, vielleicht bei more settings? Ne, ich hab legit keine Ahnung, wo die Rekords sind. Wo sind die unter iOS? Mann, da musst du doch ein Bild geben.
How do I view? Okay. You should be able to find your records in stats in your profile. Okay. Profile? Stats? Ah, ja, aber das ist nicht die Übersicht, die man normalerweise bekommt. Also, ja. Eine Meile, zwölf Minuten, eine Sekunde heute. Was auch immer. Eine Meile. Was ist eine Meile to Kilometer?
Okay, 1,6 Kilometer, zwölf Minuten. Das neue Rekord. Also, heute war ich, ich hab's auf Twitter gepostet. Wartet mal. Alter, ich muss die Hose wäschen, alter. Stinkt. Ich hatte die jetzt schon ein paar Mal an beim Rennen.
So, das hatte ich heute. 5,84 Kilometer in 47 Minuten 37 und das bedeutet im Durchschnitt 8 Minuten 10 pro Kilometer. Ich hab mich heute auch besonders angestrengt auf dem Rückweg in der zweiten Hälfte, damit ich was posten kann auf Twitter.
So ist das, ja. Das hatte ich heute. Also, ich bin losgelaufen, so 7, ja, 7,50 Uhr und war dann halt so 8,45 Uhr oder so irgendwie in dem Dreh. 8,30 Uhr oder so. Keine Ahnung. War ich wieder da.
Ja, aber wo? Ich bin auf der Startseite von der App. So, das ist My Day. Gibt es hier. My Day. Und dann? Challenges ist es nicht. Ach, du bist im Browser. Nee, ich bin in der App. Das ist richtig schlecht gemacht, man. Findet man nix.
Nee, muss man nicht da irgendwie 800 Knie beugen oder sowas machen? Leute, ich muss mal kurz andere Hose anziehen. Bin gleich wieder da. Wie hoch war dein Puls? Steh doch da.
Jetzt weiß ich doch, warum hier drin so warm ist. Ich hab heute Nacht auf der Fernbedienung von der Klimaanlage gelegen und hab die umgestellt auf Wärmen. Und jetzt hat's es grad hier aufgewärmt. Ich dachte mir, alter, ich hab die Klimaanlage an, so langsam könnte es aber mal kalt werden.
Jetzt hab ich gerade geheizt. Ich muss wohl irgendwie auf der Fernbedienung gelegen haben heute Morgen. Alter, 28,6 Grad. Ich hab mit 27,4 angefangen. Ich weiß gar nicht, warum die heizt. Das Ding steht auf 26 Grad. Es dürfte gar nicht heizen.
Und ich hab doch gerade gesagt, alter, meine Hose stinkt. Das ist nicht meine Hose, die stinkt, das ist die Klimaanlage, die stinkt. Warum auch immer. Weil sie heizt. Wahrscheinlich, weil die Heizung eingeschaltet wurde seit einem halben Jahr.
Ich hab irgendwie gesagt, das ist meine Hose. Aber ich hab zu viel reingeschwitzt. Aber nein, das war die Klimaanlage.
So, jetzt braucht die Klimaanlage natürlich mal wieder 3-4 Minuten, bis die von Wärmen auf Kühlen umschaltet. Weil die kann ja nicht gleich kühlen, wenn sie, also das dauert jetzt immer kurz.
Alter, boah, ist hier warm drin, man. Es wird noch wärmer. 28,7.
Ich hab mich gewundert, warum ich wieder übelst anfange zu schwitzen gerade. Ich war eigentlich schon wieder halbwegs abgekühlt nach dem Rennen. Und ich hab angefangen zu schwitzen. Das kann doch irgendwie nicht sein. Was ist hier los?
Ich glaube, jetzt kommt kalt raus. Aber ich muss nochmal ausschalten, weil die irgendwie nicht ganz aufgegangen ist, weil ich die zwischendrin während dem Aufgehen ein- und ausgeschaltet hab. Das mag die nicht unbedingt.
So, nochmal. Ja, jetzt, jetzt ist gut. Ja. Okay, ja, jetzt ist gut. Meine Güte.
Also, Drachenflieger, ich kann nur sagen, es war die beste Entscheidung überhaupt, dass ich mir so eine Klimaanlage hab einbauen lassen. Aber das war ja noch vor Corona, also vor 5 Jahren oder so, hab ich die schon, jetzt muss ich erstmal warten, bis die ordentlich abgekühlt ist, fest verbaut.
Ich hab so einen Kasten an der Wand draußen hängen. Und dann hab ich im Schlafzimmer und im Arbeitszimmer so ein Gerät innen drin. Da wurde halt ein Loch durch die Wand gebohrt und es wurde mit dem Außengerät verbunden. Und ich kann auch bis zu drei weitere Innengeräte damit verbinden.
Das ist eine Mitsubishi Heavy Klimaanlage. Fragt mich nicht, welche genau. Müsste ich nachgucken. Und ich bin die ganze Zeit ein bisschen am Überlegen, ob ich nicht vielleicht noch das Wohnzimmer und unten das Schlafzimmer damit verbinden lasse.
Das ist nicht so schwer, weil ich hab, meine Decke ist hohl, so für ein paar Zentimeter oben drüber. Da könnte man eigentlich ein Rohr legen, so als Abzweigung von der Klimaanlage ins Wohnzimmer zum Beispiel. Aber ehrlich gesagt hab ich keinen Bock, das da jemandem zu bestellen, das machen zu lassen. Das ist gar nicht mal das Geld, gar nicht mal das Geld, sondern einfach weil ich übelst faul bin.
Also ich muss sagen, im Schlafzimmer, ich mach das, ich mach die Klimaanlage abends an, wenn ich mich hinlege und dann lass ich sie runterkühlen auf 26 Grad oder 25,5, so was die halt macht, wenn sie auf 26 Grad steht. Und dann mach ich meist nach einer Weile wieder aus, weil ich nicht gut schlafen kann, wenn die Klimaanlage an ist.
Aber irgendwann mitten in der Nacht, wenn ich mal aufs Klo muss, mach ich die immer wieder an, weil dann ist es meistens wieder aufgeheizt und man ist am schwitzen. Und dann lass ich die so eine halbe Stunde an, dann mach ich sie wieder aus und dann reicht es meistens. Ja, auf 18 Grad sicherlich nicht. 26, gut ist. Das ist kalt genug, wenn du den ganzen Tag über warm gewöhnt bist.
Ja, das stimmt. Ohne Mist, wenn ich hier die Tür zumache im Arbeitszimmer und was spiele auf dem Rechner und der ordentlich hochdreht, hier wird es richtig warm in dem Zimmer. Also das hat schon ordentlich Abwärme. Ja.
Aber Chat hier, um das heute, meine Runde nochmal etwas mit Stats zu füllen. Also ich bin gelaufen 5,84 Kilometer in 47 Minuten 37. Das bedeutet 8 Minuten 10 für den Kilometer, 31 Meter bergauf, insgesamt nicht viel, durchschnittlicher Puls 156.
Und ich bin wieder zum Ende hin schneller geworden. Wenn ich mir das angucke. Ja, wir haben das geguckt. Ich bin wieder schneller geworden. Ich hatte 1. Kilometer 8 Minuten 46, 2. Kilometer 8 Minuten 21, 3. Kilometer 8 Minuten 42.
So und jetzt geht's los. 4. Kilometer 8 Minuten 3, 5. Kilometer 7 Minuten 47 und den Rest, also quasi der 6. Kilometer, allerdings nur 840 Meter, Pace 7 Minuten 8. Also irgendwie bin ich die 2. Ich werde die 2. Hälfte immer schneller.
Vielleicht liegt das daran, dass man dann warm gelaufen ist oder so. Ne, geht nicht bergrunter. So eine Mischung. Ich meine, du hast ja gesehen, insgesamt sind es bloß 31 Meter. So und das ist halt die Brücke oben runter.
Man sieht das ja auch in der Pulsstatistik. Sieht man, dass ich so bis zur Hälfte ungefähr, habe ich so 150, 155 und dann habe ich eigentlich konstant über 160. Bis zum Ende hin kurz mal, also Ziel Sprint hatte ich also um die 180. Wie oft? Alle 2 Tage.
Also dass ich ein bisschen ausruhen kann. Und was mich persönlich ja sehr motiviert ist, die ganzen Statistiken sich anzugucken. Danach. Und aktuell reicht mir zur Motivation echt so die Sache an sich noch.
Okay, das kann nicht so ganz stimmen, Leute. Das kann nicht so ganz stimmen. Power im Durchschnitt 270 Watt. Okay, das kommt durchaus hin. 270 Watt im Durchschnitt sind 270 durch 92 Kilo sind 2,93 Watt pro Kilo.
Das ist so normaler Wert für nicht sonderlich trainierte Leute. Das geht hoch bis zu bis manch, manch Tour de France Profi hat in Spitzenzeiten bis zu 6,7 Watt pro Kilo Körpergewicht.
Körpergewicht, das ist halt mega, mega krass, die Dudes. Das ist so um die 3 ist so mehr oder weniger, was der 0815 nicht sonderlich trainierte hat. Da gibt es auch irgendeine Tabelle. I love cycling. Ja super, hier irgendwie sowas.
Mittel, ordentlich, ja so hier. Aber gut auf der Fahrradseite zu gucken ist jetzt vielleicht nicht so geil. Aber wie gesagt, das ist so ungefähr das, was so der 0815 untrainierte oder nicht sonderlich trainierte Typ hat.
Ungefähr 3 Watt pro Kilo Körpergewicht. Aber ganz ehrlich, was die Uhr so anzeigt, ich bin mir da eh nicht sicher. Ich meine, wahrscheinlich kann man es relativ gut ausrechnen. Die Uhr kennt mein Gewicht, das kennt die Geschwindigkeit, das kann halbwegs gut Schritte zählen und hat Stats über das Profil was ich laufe.
Also insofern, ich glaube, das kommt näherungsweise ganz gut hin. Und am Ende sagt die Uhr, und das glaube ich nicht so ganz, am Ende sagt die Uhr, so die letzten 300 Meter oder so, wo ich übelst losgerannt bin, 721 Watt Maximum. Da hätte ich ja meinen Heizlüfter mit betreiben können. Das glaube ich nicht so wirklich. Das erscheint mir ein wenig viel.
Aber das 270 im Durchschnitt kann ich mir gut vorstellen. Naja, so sehen die Stats aus. Du hast halt echt für jeden Scheiß Statistik.
Schrittweite, wie viele Schritte pro Minute, wie hoch man vertikal schwankt beim Rennen, wie hoch der Kontakt zum Boden ist und das ist alles möglich. Zonen vom Puls, in dem man sich befunden hat, in der Powerzone.
Ja, hoffe ich mal. Gute Frage, weiß ich nicht. Hast du gescheite Laufschuhe? Ja, also ich weiß nicht, ob die gescheit sind. Das sind auf jeden Fall Laufschuhe. Ich habe von New Balance Laufschuhe, die habe ich schon eine ganze Weile, weil ich habe etwas zu breite Füße, deswegen brauche ich welche mit extra Weit.
Und davon habe ich drei Paare und ich habe eines der bisher nicht benutzten Paare benutze ich immer zum Rennen, dass sie nicht so ausgelatscht sind. Ne, hole ich mir nicht. Die Uhr ist genau genug. Es gibt Reviews und Tests, die sagen, dass die Herzrate bis auf 1-2% genau ist über die Armbanduhr.
Was im Endeffekt vielleicht, ne, also das ist dann so eineinhalb Schläge falsch oder so, damit kann ich leben. Also ich habe mich gerade auf die Waage gestellt, ich wiege halt mal ein Kilo oder eineinhalb Kilo weniger auf einen Schlag. Aber das ist halt, weil ich rausgeschwitzt habe, es fuck. Und es ist auch warm. Ganz bestimmt.
Also wenn es danach geht, war ich in der viel zu hohen Powerzone die ganze Zeit. Aber das Ding ist der Meinung, dass... Ne, keine Ahnung. Egal, genug. Aber das ist sehr nice, dass du abgenommen hast. 5 Kilo, das merkt man auch schon, ne.
Also ich kann mich dran erinnern, mir hat das, also ich habe das richtig gemerkt, auch dass man, wenn man sich auf die Erde knien muss und dann irgendwas, irgendwie unter Bett gucken oder irgendwas in der Richtung, dass es viel einfacher geht, weil man einfach einiges weniger wiegt. Also ich hatte 108,5 und habe jetzt, sagen wir so 92 so in dem Dreh. Ja, jetzt nach dem Rennen weniger.
Und vielleicht, vielleicht kriege ich ja noch ein bisschen weniger. Ich meine, ich gehe jeden Tag meine eineinhalb Stunden normal, eineinhalb bis zwei Stunden normal laufen, wandern und dann noch jetzt alle zwei Tage, so 45, 50, 55, je nachdem welche Strecke, richtig rennen. Und, boah guck mal, also, das ist doch nice.
Vielleicht ist dein gebrochenes Bein geheilt und du konntest dich wieder bewegen. Nö.
Nö. Ich esse immer noch das Gleiche wie vorher. Das Einzige, was ich mache, ist, ich esse vielleicht insgesamt minimal weniger, aber ich fresse mich eigentlich immer noch voll als fuck. Und ich habe vielleicht etwas, etwas weniger Fett wie früher an den Mahlzeiten. So.
Eine Sache, die ich halt nicht mehr mache, das ist tatsächlich wahrscheinlich. Ich habe ja früher teilweise abends vom Rechner noch Chips gefressen und sowas. Das mache ich gar nicht mehr. Aber normale, ich esse dreimal am Tag, bis ich platze. Also, wenn ich, wenn ich richtig voll bin, kann ich, habe ich keinen Bock aufzustehen so vom Essen. Ich muss richtig voll gefressen sein.
Nachher auch wieder. Wenn ich mit dem Stream fertig bin, 12 Uhr, wird erstmal eine Runde Nudel warm gemacht und voll gefressen. Weil ich mir gar nicht sicher bin, ob es heute Nudel gibt. Könnte auch sein, dass es Reis gibt. Ich glaube, es gibt keine Nudel mit Lachs. Aber es könnte sein, dass ich auch noch Nudel mit Lachs habe. Doch, doch, doch, doch. Ich glaube, es gibt sogar Nudel mit Lachs nachher. Nur wenn meine Mutter kocht. Beste.
Ich glaube, Nudel mit Lachs. Heute gibt es Lachsnudel. Ich meine, dass ich Nudel mit Lachs futtere, ist ja mittlerweile schon so, so gememt, dass es sogar einen Desktop-Hintergrund gibt. Nudel mit Lachs.
So, so oft muss ich Nudel mit Lachs essen, dass die Leute mir schon einen Desktop-Hintergrund gebaut haben in Nudel mit Lachs.
So, so oft muss ich Nudel mit Lachs essen, dass die Leute mir schon einen Desktop-Hintergrund gebaut haben in Nudel mit Lachs.
Ja. So. Ah ja, und eine Sache, die tatsächlich auch dazu beigetragen hat, bin ich mittlerweile relativ sicher, auch wenn ich dafür keinen Beleg habe, aber dass es halt so viel weniger geworden sind, ein Kilo ist doch wohl irgendwie Beleg dafür ist, dass ich mehr Homeoffice habe und ordentliches Zeug daheim fressen kann und nicht mehr ekliges, oder was heißt ekliges, mieses Frankfurter Mittagessen essen muss.
Also, ganz ehrlich, ich war in Frankfurt Mittagessen total oft bei irgendwelchen China-Läden, wo wahrscheinlich die Hälfte voller Gluten und ungesundem Zeug ist.
Seitdem ich so viel Homeoffice habe und, sagen wir mal, dementsprechend, ja, 80-90% der Woche daheim esse, ist das Essen vielleicht auch insgesamt ein bisschen gesünder, obwohl es nicht explizit gesundes Essen gibt hier bei uns.
Also es ist nicht so, dass ich jetzt irgendwelche Grünkern-Bratlinge mit Magerer-irgendwas, keine Ahnung, was man da so isst, futtere, sondern ich esse ganz normal. Zweifelsfall, also das Ungesündeste, was ich in letzter Zeit gegessen habe, war wahrscheinlich einen Döner-Teller zum Mitnehmen eingepackt und dann daheim aufgefressen abends noch.
Aber ansonsten ist es ganz normales Zeug, Nudeln, Reis mit Hackfleisch oder Hähnchen oder so, also nichts besonders Gesundes. Naja, da kann man sich jetzt drüber streiten.
Ganz ehrlich, ich habe so eine gewisse Abneigung gegen alles Essen, was besonders öko aussieht und das liegt daran, Freund von mir in der Schule hatte eine Mutter, die war komplett ihrer Zeit voraus, Leute, ich sag euch, die könnte heute Geld verdienen als Influencerin.
Die war damals schon extrem so pro-feministisch, Frauenrechte und fand das nicht nur einfach gut, sondern hat dann auch Leute übelst zur Sau gemacht, die irgendwie mal einen blöden Spruch gebracht haben und sowas. Also die wäre heute richtig in dem Element gewesen und die war gleichzeitig auch so extrem öko drauf, so mit Grünkern-Bratlingen und sowas in der Richtung.
Zumindest der Freund von mir aus der Schule, der ist gerne mit mir zu meiner Oma nach der Schule gegangen, weil da gab es immer gescheites Essen. Der wollte immer nicht Heimessen, der ist immer lieber mit mir zur Oma gegangen und hat mit mir zusammen bei meiner Oma gegessen, weil er sich nicht die Grünkern-Bratlinge und das Zeug von seiner Mutter geben wollte.
Und zumindest, ich bin ab und zu mal auch mit dem Heim gegangen und dann hat die Mutter dann halt ihr das Zeug gekocht und ich habe da mit gegessen und eines der abartigsten Sachen, die ich jemals gegessen habe, gab es dort. Da habe ich heute noch, der Albträum ist zu viel gesagt, aber da habe ich heute immer noch schlechte Erinnerungen dran und zwar Hefe-Klöss-Kloss.
Ihr kennt ja solche Dinger da. Ich glaube, das heißt das Dampfnudel bei den Bayern. So Hefe-Klöße. So kennt man die Dinger ja normalerweise. Das sind so weiße, tja, Klöße, die auf- oder gernknödeln bei den Bayern.
So, da ist Marmelade drin und da gibt es dann irgendwie so Mohnstreusel drüber oder irgendwas dabei. So, die gehen dann auch auf mit ein bisschen Vanille, schmeckt süß, schmeckt wirklich nice. So, so kenne ich die Dinger. So, so kenne ich die Dinger. So, und bei der Mutter von dem, die hatte solche Vollkorn-Hefe-Klöße. Alter, boah, boah.
Und die waren so abartig, Alter. Ja, so ungefähr haben die ausgesehen, Alter. Und die Dinger waren so abartig. Da gab es dann natürlich auch nicht irgendwie jetzt einen halben Liter Vanillesoße dabei, dass man, dass man das irgendwie runtergespült bekommt. Nee, nee. Ich glaube, ich glaube, es gab, ähm, ich glaube, es gab Petersilie oder sowas. Ich weiß nicht.
Vanillesoße und Petersilie oder irgendwas, was überhaupt nicht so richtig eklig war. So, und wie gesagt, seitdem ich mit dem nach der Schule ab und zu bei seiner Mutter mit essen war und die immer so Öko-Sachen gekocht hat, habe ich die übelste Abneigung gegen alles, was in irgendeiner Art und Weise dem ähnlich sieht oder so nach Öko-Essen aussieht.
Also, mich kannst du auch jagen mit grün gehärten Bratlingen und sowas. Mag sein, dass das gut schmeckt, aber nee. Jo, kann doch jeder machen, was er will. Ja. Nee, ey, das war. Also, wenn's, Leute, gibt's bei euch jemand, der sowas gerne isst? So Vollkorn-Vollkorn-Vollkorn-Dampfnudeln mit Salzkruste.
Also, jetzt mal ernsthaft. Mag das jemand? Ich hab keine Probleme mit, wenn's jemand mag. Mich würd so interessieren, ob es überhaupt jemand gibt, der das mag. Sind das diese kleinen Klößchen? Ja. Die mag ich ehrlich gesagt nicht so sehr. Die, die, da ist irgendeine Art Gewürz drin, was ich nicht so geil finde oder wie man heute sagt, was ich nicht so feier.
Ich weiß nicht, welches Gewürz, wie das heißt, was da drin ist. Kümmel wahrscheinlich. Wahrscheinlich ist es das, nee, wobei, gegen Kümmel hab ich nix. Oder, ja, ich weiß nicht. Also, der Geschmack find ich nicht so dolle, nee.
Dafür bin ich jemand, der Sardellen-Pizza isst. Das finden die meisten von euch wahrscheinlich, MonkaS. Sardellen-Pizza. Sowas hier. Ess ich extrem gern, weil es schön salzig ist. So, die Kombination ist gut. Oliven-Sardellen-Pizza. Bäh. Ja, das ist gut.
Ja. Ich weiß, das mögen viele Leute nicht, aber das mag ich. Ich glaube, es hat im Endeffekt jeder. Es hat jeder so seins, was er gerne isst, aber vielleicht der Großteil der Menschheit nicht. Letztendlich ist es doch wurscht, ne, solange es einem schmeckt.
Jetzt ist hier wenigstens endlich langsam kühl. Nachdem ich geheizt hab mit der Klimaanlage. Übrigens, noch ein Geheimtipp hier zum Rennen. Ich hatte, nachdem ich das zweite Mal Rennen war, hatte ich die übelste Blase zwischen kleinem Zeh und, tja, wie heißt der Zeh, wie heißt der Zehneber?
Okay. Der Zehneber Digitus Minimus. Also, Digitus Vier. Ah, yes, excellent. Der Ringzeh, sozusagen. Keine Ahnung, wie das heißt. Der Ringzeh.
Also, ich hatte eine fette Blase zwischen Digitus Minimus und Digitus Vier und daraufhin hab ich mal geguckt, was man dagegen machen kann. Manche Leute haben gesagt, mit Pflaster abkleben und sonst was. Was ich mir jetzt gekauft hab, ist sowas hier. Also, nicht exakt die, aber sowas in der Richtung. Zehnsocken.
Das ist mega zum Laufen. Ich bin jetzt da schon ein paar Mal mit gerannt. Keine Probleme. Nichts mehr, was schabt am Fuß. Keine Fußzehen mehr, die reiben aneinander. Sieht vielleicht erstmal witzig aus, ja? Sieht vielleicht erstmal witzig aus, aber funktioniert extrem gut.
Sind das alles irgendwelche China-Chinesen-Hersteller oder so? Ne, in den Sandalen kann man nicht rennen. Aber wirklich, so wenig reiben und ziehen und schürfen und so am Fuß hatte ich noch nie. Gibt's auch als Schuh, ja. Mag sein, mag sein. Handschuh für den Fuß, sowas in der Richtung, ja. Aber das ist sehr praktisch.
So. Lasst uns mal schnell ShitHub gucken. Was es wieder für schöne Weekly Trends gibt. Außer AI. AI skippen wir einfach mal. AI, AI, AI, AI, nee. Hacker-Tools. AI. Spacetime-DB. Written in Rust. Blazingly fast. Okay, keine Ahnung.
Quake 2 ist auf GitHub. But why? Ach, das ist das Remake-Source-Code. Ist doch cool, dass sie das Open Source hinstellen. Finde ich sehr nice.
Hier kann man übrigens mal lesen. Ich hab mir auch schon den Doom-Source-Code und sowas besorgt. Hier kann man mal rechts zwar altes C++ lesen, ja. Das ist C++ ohne jegliche modernen Features.
Aber tatsächlich, indem sie sich wirklich auf ein minimalst Ding aus C++ beschränken und das verwenden, was halt sinnvoll ist, finde ich, ist sowohl der Quake-Source-Code als auch der Doom-Source-Code zum größten Teil eigentlich ganz gut lesbar.
Finde ich, kann man durchaus lesen. Das Problem an modernem C++ ist einfach, dass die mittlerweile so ultraviele Rapper-Klassen und Sonderfall-Dinger in der Standard-Library haben und Sonderzeichen und hast du nicht gesehen, das hier beschränkt sich halt im Prinzip auf ein bisschen Pointer-Syntax, Referenzen und so.
Es ist im Prinzip C mit ein bisschen oben drauf, was die hier verwenden. Und dementsprechend ist das echt gut lesbar. Ja, kannst nix sagen. Das kannst du gut verstehen, was die hier programmiert haben. Nee, nicht für C++. Schon eher für die Leute, die das trotz Kack-Sprache ganz gut geschrieben haben.
Was erzählst du vom... kenn ich nicht. Machine Learning for Rust. Radix. Das ist ein cooles Minimal Frontend-UI-Gedöns. Leider React-Only. Es gibt ein paar Versuche, sowas ähnliches für Svelte zu bauen.
Leute, ich glaube, wir müssen heute Abend weiter Svelte-Frontend-Geschiss machen, oder? Was meint ihr? Wird mal Zeit, dass wir ein bisschen progressen. Was ist das? Blockchain-Crypto-Shit. AI. Tower-Defense-RTS. Das kenne ich. Das ist auch so ein Spiel, was du theoretisch unendlich spielen kannst, wenn du willst.
Das ist Factorio, bisschen mit Tower-Defense zusammen. Da kann man auch unendlich Zeit reinstecken.
YouTube-DLP-Beste. Die haben das ja mal geforkt, ohne dass man sieht, dass das... Wird das andere eigentlich auch noch entwickelt? Ja. Also ich verwende seit Monaten, fast schon Jahre, seit es das gibt, nur noch YouTube-DLP. Weiß gar nicht mehr, was der Grund war, warum. Ich glaube, weil die das mal gestrikt haben, das andere.
Bitcoin-Trended. Okay. Da werden die Satoshis gemeint. Geht das wirklich? Du bist Mod-Gear, ich traue mich, das einfach mal anzuklicken. Ich kenne das nicht. Agile-Enjoyer. Was ist da für ein Bild dahinter? Okay, du bist Mod-Gear, ich traue dir jetzt.
Okay. C++. Ja, das ist wirklich ab 18, sehe ich auch so. Show me the weirdest and least understandable C++-Code. Der muss... Der hat Emojis, die fein zu... Ja, das wird bestimmt funktionieren, gehe ich von aus. Ich meine, das sind irgendwelche Pre-Processor-Geschichten. Da hat C++ nichts mit zu tun. Das wird ja am Ende dann in normales C++ zurückübersetzt. Das wird wahrscheinlich funktionieren, ja. Ich denke schon, dass das funktioniert.
Wobei das tatsächlich noch... Also, das ist ja absichtlich obfuscated. Normales C++ ist halt auch schon unverständlich. Ich bringe jetzt kein Beispiel, sonst flame ich wieder eine halbe Stunde.
So, und was trendet in C-Sharp? Elsa. Was ist Elsa? Also außer der Eiskönigin. Und Elsa ist der Linux-Sound-Treiber-Kram. Open-Source.net-Standard-for-Workflow-Libraries. Okay, keine Ahnung, was das ist. Sieht nicht aus wie irgendwas, was ich jemals brauchen werde.
Clean-Architecture. Ja, okay. Alles klar. Das ist für Leute, die 3-Zeilen-Konsolen-Anwendungen verkomplizieren wollen in einem Projekt mit 5 Unterprojekten und 8000 Zeilen. Nicht, dass es nicht Sinn machen würde in manchen Anwendungsfällen, ja. Aber man kann es auch übertreiben.
MAUI. Halt einfach dead, bevor es wirklich adopted ist. Weiß nicht, wer masochistisch genug ist und MAUI verwendet. Das ist so eine Art Wallpaper-Engine, nur in .NET. Okay, ganz cool. Ein Installer für Windows. Irgendein Windows-Settings-Änderungstool.
China-Chinesen-Zeug. Nochmal Clean-Architecture, weil einmal nicht genug war. One-Remote. Tools for manipulating Divinity-Urchins in Baldur's Gate-Files. Ja gut, dass das trendet, wundert mich nicht. Passt ja aktuell. Collection of Awesome .NET-Libraries. Ja, so eine Liste braucht jede Programmiersprache. AI.
Shadow Socks. Das ist irgendein Proxy für China-Chinesen, wenn ich das richtig im Kopf habe, um an ihrer China-Firewall vorbeizukommen. Ja, oder? Bin ich doch... Ja, ja, ja. China-Chinesen-Zeug.
Power-Toys. Okay. Machine-Learning. In-Game. Was ist das? Auch so ein Windows-Deploter. Ja, Windows-Deploter. Okay, Jelly-Fin. Dass das mal wieder trendet. Das ist Software, die es schon lange gibt. Die trendet meistens nicht mehr. Die hat halt auch schon massig User und Sterne und das steigt langsam, aber trendet meist nicht. Aber Jelly-Fin trendet, okay.
Was sind MiHoYo-Games? Sowas wie... Ist das sowas wie Genshin Impact, oder? Ja, genau. Alles klar. Web-Framework, wo ich bis heute nicht verstanden habe, warum man das braucht. Ein GitHub-Actions-Importer, okay.
Ein BiliBili-Download. BiliBili, ist das nicht das China-Chinesen-YouTube? BiliBili? Ja. Ja, das ist das China-Chinesen-YouTube. BiliBili.
Nochmal Maui. Okay. Dein Projekt ist in den Zwelt-Trends. Das gucken wir uns jetzt an. Flipper-Tool. Flipper, nicht so ein nerviger Delfin. Ach, das. Ist das dieses Wifi-Hacking-Ding?
Dann habe ich das schon mal gesehen. Ich dachte mit Tool irgendwie, das ist eine Software, aber das ist eine Hardware-Tool, ja. Das habe ich schon mal gesehen. Okay, Skeleton-UI trendet. Nice, haben wir auf das richtige Pferd gesetzt.
Schad-CN oder Schätzen. Ein Schätzen-Nachbau fürs Welt. Flow-Byte. Wie viele UI? Der gleiche Dude hat doch das hier schon gebaut. Hä? Ich klicke da nicht mal durch.
Es gibt einfach zu viel von dem Klempel mittlerweile. Aber gut, ich meine, es ist ja lobenswert, dass die Leute so aktiv Open-Source entwickeln.
Fireship-IO trendet. Daisy-UI. Thread. Max, wo ist dein Projekt? Kommt das noch? Was davon ist deins? Muss ich vielleicht Today gucken? Ja, da ist er. Dein Projekt trendet heute, ja.
Pogu. Giga-Chat-Mod. Nice. So. Okay. Hat jemand eigentlich dieses Linux-Techtipps-Drama mitbekommen? Ich habe es nur am Rande gelesen, nicht gecheckt.
Irgendjemand hat gesagt, Linus-Techtipps testet nicht richtig. Und dann hat der gesagt, doch, alles gut. Aber im Nachhinein musste er dann doch irgendwie zurückrudern und keine Ahnung, was da dramatechnisch wieder abgeht.
Ist mir aber auch wurscht. Ich gucke das äußerst selten. Und ich muss ehrlich sagen, die Linus-Techtipps-Videos waren ja doch schon immer, oder was heißt immer, aber schon sehr lange eher der Entertainment-Faktor, wenn man ein bisschen Technik interessiert ist und nicht so sehr, um die harten Facts da irgendwie rauszukriegen.
Natürlich sollte man aber trotzdem, und ich weiß nicht, ob das so ist, weil ich habe das Drama nicht richtig mitbekommen, natürlich sollte man trotzdem, wenn man eine Seite ist, die zwar auch mehr auf Entertainment setzt, trotzdem, wenn man sagt, man bewertet jetzt was, das auch ordentlich machen. Weil ansonsten sollte man nicht sagen, man bewertet was und man reviewt was.
Was ist denn das hier? Generalist oder Spezialist? Wie verdiene ich als Softwareentwickler 40.000 Euro im Monat? Okay, das, Leute, der, der, der, also vielleicht tue ich ihm jetzt unrecht, ja? Wie viele Views hatten das? 107, 132. Wetten, der will uns irgendwas verkaufen? Wetten, der will uns was verkaufen? Der will uns bestimmt verkaufen, dass man seinen Kurs buchen muss oder sowas. Wollen wir wetten? Vielleicht liege ich auch komplett falsch.
Der will uns, Death Craft Academy, der will uns bestimmt einen Kurs verkaufen. Komm in die Gruppe. Achtung, Achtung, das skippen wir jetzt mal, das skippen wir jetzt mal schnell drüber. Das skippen wir mal schnell drüber. Wie gesagt, vielleicht, das ist auch komplett, tue ich ihm jetzt da unrecht. Ja, mal gucken.
Und so habe ich als Freelancer teilweise in spitzen Monaten über 40.000 Euro verdient. Hallo, Leute. Ich bekomme immer wieder die Frage gestellt. Hört sich ein bisschen nach Moneyboy an. Ob man sich jetzt als Softwareentwickler oder Softwareentwicklerin spezialisieren soll oder lieber in die Breite geht. Ich dachte, das sind mittlerweile SoftwareentwicklerInnen. Niemand hat gefragt, wahrscheinlich, ja?
Okay, aber die Frage ist ja an sich nicht verkehrt.
Ob man jetzt zum Beispiel sagen soll, ich werde jetzt Full-Stack-Entwickler und schaue mir alle...
Tatsächlich, weißt du, was man machen soll? Also zumindest mein Tipp ist immer, das zu machen, worauf man Bock hat, weil dann ist die Arbeit nicht so nervig und man wird besser in einem Gebiet, was einen interessiert und deswegen fällt einem auch das Lernen einfacher.
Also es ist, glaube ich, immer von Vorteil, darauf zu hören, das zu machen, also die Technologie weiter zu verfolgen, auf die man Bock hat.
Es kann auch ein bisschen dauern, bis man rausgefunden hat, was das ist und natürlich kann sich das auch ändern mit der Zeit.
Man darf sich auch für mehrere Sachen interessieren, gar keine Frage.
Aber ich meine, ihr habt es doch schon alle mal gemerkt, ja?
Wenn ihr besonders interessiert seid in einem Thema, fällt euch das Lernen gar nicht so schwer.
Es ist vielleicht anstrengend, aber es macht Spaß.
Ihr freut euch, wenn was funktioniert, wenn ihr was Neues daraus gelernt habt, wenn ihr besser werdet versus ihr müsst was lernen und euch merken, wo ihr gar kein Interesse dran habt.
Das sind doch komplett unterschiedliche Welten.
Deswegen, es ist sinnvoll, sich mal eine Weile sich das alles anzugucken und dann zu sagen, okay, ich glaube, das ist was, was mir Bock macht und sich dann darin zu spezialisieren, weil da kommt dann eins zum anderen.
Das Lernen fällt einem einfacher, man findet einfacher einen Job in dem Bereich, weil man halt eben sich damit dann gut auskennt, kann dann in einem Bereich arbeiten, der einem gefällt, dann wird man wieder besser, man interessiert sich.
Also das ist so ein Kreislauf, der sich selbst versorgt.
Es ist eigentlich immer gut, was zu machen, was einem gefällt.
Natürlich, wenn man jetzt so was ganz super Spezielles hat, so nach dem Motto, ich arbeite nicht gerne in der, also wenn jetzt jemand sagt, okay, IT-Technik gefällt mir nichts, außer diese eine Kobold-Library zu verwenden, dann wird es wahrscheinlich ein bisschen schwierig.
Aber meistens sind ja die Interessen der Leute nicht so extrem speziell, sondern es gibt dann Leute, die sagen, ah, ich interessiere mich beispielsweise extrem für Cloud-Infrastruktur und wie man Sachen möglichst skalierbar machen kann oder für hochverfügbare Systeme oder, sagen wir mal, Linux allgemein.
Oder es gibt ja doch schon etwas breitere Themengebiete oder wenn jemand sagt, ah, ich finde das super spannend, wie man Continuous Integration macht, inklusive Rolling Deployments und solche Geschichten.
Es gibt ja so verschiedene Schwerpunkte, wo einen ja nicht alles interessieren muss.
Es gibt bestimmt auch den einen oder anderen, der denkt sich, hey, ich wechsel gerne den ganzen Tag Druckerpatronen.
Aber es bietet sich einfach an, das zu machen, worauf man Bock hat, weil man dann besser wird darin, weil einem das Lernen nicht so schwerfällt, man muss eh relativ viel lernen.
Und dann hat man gute Chancen, auch in einem Job zu arbeiten, wo man eben das tagsüber machen kann und Geld dafür bekommt, was einem eh Bock macht.
Und das ist tatsächlich in der IT sowas, da hat man wirklich gute Chancen drin, das zu machen täglich, worauf man Bock hat.
So.
Agila Enjoyer, ich habe keine Ahnung, was du immer für Zeug schreibst, aber ich weiß auch nicht, ob es stimmt oder nicht stimmt.
Deine Messages schwanken wild von der einen Seite in die andere Richtung.
Ich habe keine Ahnung, ob man der Sache glauben kann oder nicht mittlerweile.
Mich würde es nicht wundern, wenn es ein 2. Account vom Chainlaw ist mittlerweile.
Aber wenn es stimmt, dann Sätke, ja.
Das ist natürlich blöd, wenn die Firma dicht machen muss, weil der Chef sich umgebracht hat.
Also in so einer Situation war ich bis jetzt noch nicht und habe es auch nicht vor.
Nicht, dass man da irgendwie großartig Einfluss drauf hätte, aber ich hoffe nicht, dass ich das erleben muss.
Aber ich muss aber prinzipiell sagen, wir haben ja letztens so eine Liste gemacht, was mir besonders wichtig auf der Arbeit ist.
Und ich glaube, Jobsicherheit war bei mir gar nicht so weit oben.
Ja, dann ist es natürlich wirklich Kacke.
So, also jetzt hören wir uns mal an, was er denn zu sagen hat, wie man 40.000 Euro im Monat verdient.
Oder ob er uns nur seinen Kurs verkaufen will.
Ich spezialisiere mich noch weiter auf React.
Und dann spezialisiere ich mich vielleicht noch weiter auf React im Zusammenspiel mit GraphQL.
Das sind alles seine Vor- und Nachteile.
Und genau das schauen wir uns im heutigen Video an.
Und damit herzlich willkommen.
Ich bin Clemens von der DevCraft Academy.
Ich habe immer noch die Vermutung, er will uns nur seinen Kurs verkaufen.
Aber gucken wir mal.
Und mal gucken, woran das...
Okay, ich meine, wisst ihr, was sein kann?
Dass irgendwann mal ein Projekt fertig war und es gab dann irgendeine Prämie oder so einmalig.
Aber naja, also schauen wir mal.
Also man muss halt sagen, komplett unrealistisch ist das natürlich nicht.
Aber es ist schon, sagen wir mal, recht selten.
Ja, also es ist durchaus im Bereich des Möglichen.
Wenn du jetzt irgendwie consulted wirst für ganz spezielle Dinge, die enorm kritisch für Unternehmen sind und wichtig sind.
Und es nicht so viele Leute gibt, wenn du zu der Handvoll Leuten gehörst und was auch immer.
Aber ansonsten ist das schon...
Ja, man muss sich überlegen, das ist eine halbe Million im Jahr.
Das ist schon ordentlich, ja.
Boah, Alter, jetzt ist er gut, der macht nicht so einen Krach, Mann.
Schauen wir uns zuerst mal an, wo du dich spezialisieren solltest, was da die Vorteile sind.
Ja, aber Moment, dass ich 40.000 Euro im Monat verdiene, please.
Der erste große Vorteil ist, du hast weniger Konkurrenz.
Je mehr du in die Tiefe gehst, desto weniger Leute gibt es, die jetzt genau die gleiche Spezialisierung haben wie du.
Das stimmt.
Das führt auch dazu, dass du mit einem höheren Gehalt rechnen kannst, weil einfach du mehr aus der Masse herausstichst.
Und es schwieriger ist, jemanden für die gleiche Position zu finden.
Ja gut, das ist wahr.
Vor allem, wenn du dann in der begehrten Technologie auch, sagen wir mal, auf ganz gutem Niveau kannst.
Hey, guck mal, ich habe damit schon Live-Systeme betrieben und ich kenne mich damit schon seit 5 plus Jahren aus.
Das ist halt was, was gerne gesucht wird versus, ja, ich habe mir das jetzt schon mal angeguckt und eigentlich habe ich gar keine Ahnung von, außer einen Udemy-Kurs gemacht.
Ein weiterer Vorteil ist, dass dein Karriereweg eigentlich klar vorgezeichnet ist.
Du weißt ganz genau, du wirst immer tiefer in diese eine Technologie, in diese eine Spezialisierung reingehen, bis du da die Top-Expertin oder der Top-Experte bist.
Solange man Bock darauf hat.
Ich finde, man sollte sich nicht quälen.
Also wenn man jetzt heute, wenn man heute sagt, boah, ich stehe total auf Windows Active Directory und irgendwann nach 5, 6 Jahren merkt, alter, Windows suckt, ich mache jetzt Linux, dann sollte man das auch machen.
Ich gehe davon aus, der Wandel wird bei mir in die umgedrehte Richtung nicht passieren.
Spezialisierung hat aber auch einige Nachteile.
Allen voran, du bist nicht sehr flexibel.
Auf dem Jobmarkt ist es so, oder im IT-Markt ist es so, dass gewisse Technologien, gewisse Spezialisierungen mal mehr und mal weniger nachgefragt sind.
Das stimmt schon, wobei man sagen muss, nur weil du in was spezialisiert bist, heißt es ja nicht, dass du von den anderen Sachen gar keine Ahnung hast.
Also um im Thema X super krasse Experte zu sein, das ist ja eher so eine Art Pyramide, das Know-How.
Es gibt ja dieses T-Shaped, so nach dem Motto, man kennt sich in einigen Bereichen aus und in manchen besonders, expertenmäßig.
Aber ich finde, das ist eigentlich falsch dargestellt.
Eigentlich müsste das, also realistischer betrachtet, pass auf, krasse Paint-Skills incoming.
Realistischer betrachtet ist es ja eigentlich so, das hier oben lasse ich mir gefallen, man hat so ein bisschen Basiswissen und so.
Aber danach würde ich sagen, die Vertiefung sieht ja nicht so aus, wie es hier gezeigt wird.
Die Vertiefung sieht ja nicht unbedingt so aus, die Vertiefung sieht ja eigentlich eher so aus.
Das ist eher V-Shaped.
Weil, ganz ehrlich, sagen wir mal, das hier ist, nehmen wir mal irgendwas super spezialisiertes jetzt.
Nehmen wir irgendwas im Kubanese.
Sagen wir, du bist Experte für Argo, CD, Continuous, bla bla bla.
Da bist du Experte für.
Kennst dich richtig gut aus.
Hast schon Source-Code, Contributed und alles mögliche.
Damit du das gescheit kennst, musst du erst mal dich weiter unten drunter auskennen mit Kubanetes.
Damit du Kubanetes kannst, musst du dich unten drunter auskennen mit Linux.
Dann brauchst du oben drüber, keine Ahnung, Kenntnisse, was YAML angeht.
Dann brauchst du Bash, Scripts, Gedöns.
Unten drunter musst du dich auskennen.
Also, du hast da ganz viele Sachen, worauf das ein bisschen aufbaut.
Und das hier ist voll mit Skills.
Das heißt, wenn du hier in diesem einen Thema Experte bist, kannst du durchaus auch in anderen Bereichen was zu sagen fundiert.
Versteht ihr, was ich meine?
Ich finde dieses T-Shape in Form von einem Binary-Signal immer ein bisschen irreführend.
Ist das eigentlich ja nicht.
Es kann also sein...
Und unten drunter, ganz unten drunter gibt es ja noch so Base-Skills, wie man muss gut googeln können und sowas.
So in einem Jahr ganz viele Aufträge erhältst.
Ich finde das Österreichisch immer so geil.
Wisst ihr, was meiner Meinung nach der schlimmste deutsche Dialekt ist?
Also nehmen wir mal Schweizer und Österreicher und so mit rein.
Wisst ihr, was ich finde, was wirklich der mit Abstand schlimmste Dialekt ist?
Ich weiß, dass viele Leute sagen, Sächsisch wäre der ekligste Dialekt und Bayerisch wäre der coolste Dialekt oder so.
Ne, finde ich nicht.
Ich finde Sächsisch gar nicht so wild.
Bayerisch finde ich auch ganz cool.
Wisst ihr, was ich richtig scheiße finde?
Ich hoffe, wir haben jetzt keine im Chat. Kann aber sein. Da habe ich aber Pech.
Was ich richtig aberig finde, zuzuhören, ist so Berliner-Deutsch.
Ich kann das gar nicht nachmachen hier.
Ich mag dat nid.
Ich mag dat nid.
Ich kann das gar nicht nachmachen.
Ihr wisst, das ist so Paint Champ, Alter.
So dieser Berliner Dialekt.
Dit is Berlin, genau.
Das ist so schrecklich, man.
Was ich bei den Österreichern immer cool finde, oder was heißt cool finde?
Das hört sich teilweise so ein bisschen schleimig an.
Ich kenne mich mit Bundesländern.
Tja, verschiedene Bereiche nicht aus.
Aber so Richtung Wien, das hört sich so schleimig an teilweise.
Aber letztendlich geht es wahrscheinlich jedem ähnlich.
Dort, wo ihr herkommt, das findet er nicht wild.
Ich finde Hessisch zum Beispiel nice, weil ich kenne das halt ja aus der Umgebung.
Wie gesagt, ich habe mit keinem deutschen Dialekt irgendwelche Schmerzen.
Nur Berliner-Deutsch, so dieses Berlinerisch.
Das finde ich richtig Paint Champ, zuzuhören.
Ich musste übrigens diese Woche meine Englisch-Skills schärfen.
Ich habe stundenlang mit nem Spanier in Teams gehockt und wir haben Kubernetes-Kram debuggt.
We are all sitting in one boat.
Und ich bin immer wieder erstaunt nach ner Weile, wenn man sich erstmal dran gewöhnt hat, dann geht es eigentlich.
Ich habe immer bei Englisch das Problem, ich verstehe das meiste ohne Probleme.
Mein OS ist nur englischsprachig.
Ich lese zum größten Teil englischsprachige Sachen.
Ich gucke zum größten Teil englischsprachige Videos.
Ich schaue Filme und Serien und so zum größten Teil auf Englisch.
Also ich verstehe das meiste ohne Probleme.
Also gut, es gibt ein paar abgedrehte Sachen, wo du wirklich gar nichts verstehst.
Aber also zum Beispiel, wenn man sich Serien aus UK anguckt, dann ist das ganz nice.
Aber manchmal, wenn die dann irgendwelche suirischen oder schottische Akzente haben, da verstehst du gar nichts, Alter.
Ne, exklusiv verstehst du nicht, weil der Typ so schnell redet.
Da bin ich wörtlich verschluckt.
Ne, aber ich habe letztens die ersten zwei Staffeln Sherlock geguckt.
Danach fand ich es übelst dumm, da ich habe nicht weiter geguckt.
Aber die ersten zwei Staffeln, wirklich nice.
Und die haben die ein oder anderen Charaktere drin.
Die haben so einen übelsten, weiß nicht was das ist, suirischen oder schottischen Akzent.
Verstehst nichts.
Und was ganz krass ist, wo ich wirklich gar nichts verstanden habe.
Das war ein Film, ich habe keine Ahnung mehr, wie der hieß.
Das war ein Film mit Brad Pitt, wo der irgendeinen Boxer gespielt hat.
Und der hat auch irgendeinen so komischen schottischen Dialekt oder so gesprochen.
Ey, ohne Scheiß, du hast nichts verstanden.
Aber wenn sich beide Seiten Mühe geben dabei, ist das eigentlich kein Problem.
Was ich das Problem habe mit Englisch reden, ist halt, ich habe so wenig Übung, was Englisch reden angeht.
Wenn jemand den Satz sagt, ich verstehe alles.
Ich kenne die Wörter an sich, aber mir fallen die Wörter nicht unbedingt beim Selbstreden so spontan ein.
Und wenn man das ein paar Stunden gemacht hat, oder ein paar Tage am Stück immer wieder, man gewöhnt sich dran.
Ich habe das auch bei der Gamescom immer gemerkt.
Ja, ersten Tag, ersten halben Tag übelst rumgestottert.
Danach geht es eigentlich.
Da muss ich einfach dran gewöhnen.
Wie hieß denn dieser Film mit Brad Pitt?
Pitt, schreibt man denn so?
Boxer?
Und wie?
Snatch! Genau, das meine ich.
Alter, du verstehst nichts.
Du verstehst einfach gar nichts.
Wenn der Typ redet in dem Film.
Aber das geht nicht nur mir so.
Das geht übrigens auch Englisch-Native-Speakern so.
Das scheint wohl Absicht zu sein, dass man da nichts versteht.
So, aber jetzt hören wir uns erstmal an, wir haben 40.000 Euro im Monat.
Wir sind jetzt sidetracked worden.
Wie verdient man 40.000 Euro als Softwareentwickler im Monat?
Da waren wir doch gerade dabei.
Es kann also sein, dass du in einem Jahr ganz viele Aufträge erhältst, oder ganz viele Jobangebote.
Und im nächsten Jahr flacht das eher ab.
Ja, das ist ja auch eines der Sachen, warum manche keinen Bock auf Freelancern haben.
Weil du halt einiges selbst nicht beeinflussen kannst.
Aber aktuell dürfte es für Freelancer wirklich nice sein.
Ab und im schlimmsten Fall wirst du vielleicht sogar arbeitslos.
Das kann bis dahin gehen, dass deine Technologie, auf die du dich spezialisiert hast,
irgendwann komplett veraltet ist und die Nachfrage komplett einbricht.
Das müsstest du halt rechtzeitig erkennen und dann eine neue Spezialisierung wählen.
Was aber natürlich schwierig ist, weil es lange Zeit dauert, bis man so eine Spezialisierung sich erworben hat.
Ja, aber gut. Ich meine, das geht nicht von heute auf morgen.
Dementsprechend muss man auch sagen, wenn man halt im Bereich...
Nehmen wir mal ein Beispiel von eben.
Du bist halt super spezialisiert, was Ago CD und Continuous Deployment angeht.
Und hast da auch schon Source Code contributed, was auch immer.
Das ist das erste Beispiel, was mir eingefallen ist.
Und mal angenommen, die stellen das Projekt jetzt ein und alle benutzen nur noch Flux oder sowas.
Das ist so ein Konkurrenzprodukt dazu.
Ganz ehrlich, das ist ja kein T-Shirt, das ist ja ein Pyramidenshape.
Du behältst ja dein Linux-Wissen, du behältst dein Cloud-Wissen, dein Kubernetes-Wissen und sattelst da halt um auf Flux.
Du fängst da nicht bei Null an.
Nur weil du... Wisst ihr, wie ich meine?
Ich glaube, das ist jetzt echt überbewertet.
Und zumal du dich ja auch prinzipiell für den Cloud-Bereich dann interessierst,
sollte sich ja jemand, gerade auch ein Freelancer, der Absicht hat, dann auch in Zukunft gute Jobs zu bekommen,
auch mit dem Ökosystem weiter beschäftigen und sich auch neue Technologien angucken.
Ich glaube, das ist eigentlich gar kein so großes Problem.
Sei denn, man ist Cobol-Entwickler und auf IBM Host spezialisiert oder sowas.
Ja, dann könnte es ein bisschen schwierig werden.
Ein weiterer Nachteil ist, dass du Gefahr läufst, irgendwann das Interesse zu verlieren.
Du committest dich sozusagen, jahrelang mit einer Spezialisierung zu arbeiten.
Und es könnte sein, je nachdem was du für eine Persönlichkeit bist,
dass du irgendwann denkst, jetzt habe ich aber schon langsam wirklich genügt davon.
Macht ja nichts.
Man muss ja nicht von heute auf morgen quitten.
Das ist ja meistens so ein schleichender Prozess.
Du denkst, so wirklich groß interessiert es mich nicht mehr,
aber dafür interessiert mich jetzt was anderes.
Und das andere kann durchaus in einem ähnlichen Bereich sein.
Ich sehe das große Problem noch gar nicht.
Dann kannst du mal was anderes machen und dann kommst du eher ein bisschen schwieriger da wieder raus.
Weil du diese Weichen ja schon gestellt hast und eigentlich nichts anderes...
Ja gut, du kannst dich von heute auf morgen kündigen,
aber du kannst dich ja trotzdem mit der neuen Technik beschäftigen.
Musst du ja eh früher oder später.
Jetzt schauen wir uns mal die Vorteile an, wenn du Generalistin oder Generalist bist.
Dein größter Vorteil ist deine Anpassungsfähigkeit.
Egal wie sich jetzt der Jobmarkt oder der Technologiemarkt entwickelt,
du wirst immer einen Platz haben, weil du einfach so eine große Werkzeugtechnik hast.
Oder mit sehr starker Fähigkeit, Probleme zu lösen.
Du hast immer das Vorteil, wenn du ein einzigartiges Skillset aus Development Skills,
Produktentwicklungsskills und auch Fähigkeiten im Umgang mit Menschen mitgebracht hast.
Gibt es sowas?
Gibt es sowas, der dann zusätzlich auch noch Skills im Umgang mit Menschen hat oder wie?
Und so habe ich als Freelancer teilweise in Spitzenmonaten über 40.000 Euro verdient.
Ja, nice.
Keine Ahnung, ich weiß nicht.
Ich habe gedacht, da kommt jetzt irgendwie der super krasse Hyper-Tipp.
Also das ist tatsächlich selten.
Ahnung zu haben, in der Tiefe von der Technik Projektgedöns machen zu können
und Skills mit Menschen zu haben.
Also das geht ja eigentlich alles gar nicht in einem.
Das geht ja alles gar nicht.
Wie soll das sein?
Wie willst du das, wie willst du das machen?
Kennst du das? Nö.
Gucken wir mal.
Was macht der denn?
Professional Software Development.
Besser werden mit jedem Video.
Der Chuck Norris Entwickler.
Ja, der Rockstar Entwickler ist out.
Größte Fehler der Softwareentwicklung, viele machen.
Okay.
Anfang der Woche haben neun Softwareentwickler bei meinem Kunden gekündigt.
Das komplette Softwareentwicklungsteam der Firma.
Und das ist eine absolute Katastrophe, denn dieser Kunde hat neben den neun Software...
Ja, aber wahrscheinlich hat er sich auch dafür die letzten zwei Jahre doof angestellt,
wenn ihm alle Leute abhauen.
... noch weitere 55 Mitarbeiter.
Und das einzige Produkt dieses Unternehmens, was verkauft wird,
ist das Softwareprodukt, was genau dieses Softwareentwicklungsteam entwickelt.
Und dieses Produkt, das hat wirklich ernsthafte Probleme.
Der Quellcode ist unglaublich komplex, es sind riesengroße Quellcodemengen,
es sind unterschiedliche Sprachen, unter anderem sogar VB6.
Es ist ganz, ganz dringend, dass dieser Code von dem Team,
was sie dort auskennen und was diesen Code geschrieben hat, refactored wird.
Aber so katastrophal das doch alles ist.
Irgendwo verstehe ich die Entwickler.
Und ich denke, ich hätte genauso geglaubt.
Also wenn das gesamte Entwicklerteam abhaut,
dann muss der Arbeitgeber die letzten Jahre wahrscheinlich über
grundsätzlich irgendwas verkackt haben.
Sonst haut nicht ein komplettes Softwareentwicklerteam ab.
Ich bin mir ziemlich sicher, du auch.
Und genau das Thema werden wir heute mal ein bisschen tiefer legen.
Das Problem, um das es hier geht, ist das Problem,
was 90 Prozent der Unternehmen da draußen haben.
Und ich zeige dir heute mal, warum dieses Problem
nicht nur für meinen Kunden gefährlich ist und jetzt in der Katastrophe endet,
sondern auch vielleicht für dich und für dein Unternehmen
ein absolutes Problem werden könnte.
Und das alles versuchen wir heute in unter 15 Minuten.
Das wird ein sportliches Programm.
Ich würde sagen, wir legen los. Nach dem Intro viel Spaß.
Ich hoffe, man muss nicht in die Gruppe dafür kommen.
Wenn ein Unternehmen damit beginnt, Software zu entwickeln,
startet das Ganze fast eigentlich immer gleich.
Wir haben einen einzigen oder sehr wenige Entwickler und die arbeiten an einem Produkt.
Der hat einen mega spitzen Zahn unten, guck mal.
Guck mal hier, der übelst gut spitz.
Arbeiten an einem Produkt.
Ich weiß nicht, wie ich da gerade drauf komme.
Das Produkt ist natürlich nicht von vornherein marktfähig,
sondern wird ein Stück weit entwickelt und dann irgendwann wird es verkauft.
Wird es also dem Kunden, dem Markt angenommen.
Das habe ich tatsächlich auch erlebt schon.
Das war, als ich noch beim Provider gearbeitet habe.
Die haben dort ein Lotus Notes Plugin entwickelt.
Ja, Leute, das war 2007.
Da waren Lotus Notes noch der heiße Shit.
Die haben ein Lotus Notes Plugin entwickelt für sich selber.
Und irgendwann haben sie festgestellt,
dieses Plugin könnte man ja auch verkaufen.
Und dann gingen die Probleme los.
Dann haben sie nämlich Sachen verkauft,
die nur sehr rudimentär in dem Plugin implementiert waren.
Ich weiß nicht, ob Plugin das richtige Wort für Notes ist.
Add-on, wie auch immer.
Irgendwas, was mit Lotus Notes zusammenarbeitet.
Die nur sehr halbherzig implementiert waren.
Halt genau das, was der Provider gebraucht hat.
Aber nicht so sehr, was die Kunden, die das evaluiert haben
oder teilweise sogar gekauft haben, gebraucht haben.
Und dann hatten sie das Problem,
es wurde von einem internen Tool mit,
keine Ahnung, das interne Tool hatte vielleicht drei Entwickler oder so,
zu einem Produkt, was sie verkauft haben, aufgemotzt.
Das war halt nie dafür gedacht.
Und dementsprechend ging das auch komplett in die Hose.
War ein Jahr verentwickelt, logischerweise.
Weil Lotus Notes und so.
Und da sind auch viele Entwickler abgehauen.
Das ist das, wie ich da eigentlich drauf gekommen bin.
Da sind auch viele Entwickler abgehauen mit der Zeit.
Also das war auch eine Zeit, wo das Unternehmen extrem gewachsen ist.
Innerhalb von zwei Jahren oder so, von 50 Leute auf 250 Leute und so.
Mag jetzt vielleicht für manche nicht viel sein,
aber in Prozent ist es enorm viel.
Von 50 auf 250 Leute.
Und auch viele Entwickler und so.
Und das war sehr frustrierend auch.
Viele Leute sind dann auch in der Probezeit teilweise schon wieder weg.
Zum Beispiel, ein Beispiel, was ich bringen kann,
wo man sieht, was da halt schiefgelaufen ist.
Also wie gesagt, beim Provider damals.
Was schiefgelaufen ist.
Und zwar, die haben versucht,
ein komplettes Team fast abzuwärmen von einem Konkurrent.
Oder von irgendwo dort in der Region.
Das war quasi fünf Leute unter Teamleiter und so was.
Die haben sich versucht abzuwärmen.
Und ich kenne nur die Story.
Ich war da nicht live dabei.
Das ist ja nicht in Frankfurt gewesen.
Ich weiß, dass damals alles schon geklärt war.
Und der Teamleiter, den sie da halt auch einkaufen wollten,
für die Position.
Ich weiß gar nicht, ob das alles dann vom gleichen Team war.
Zumindest der Typ, den sie als Teamleiter einstellen wollten,
ist an dem Tag erschienen zum Vertrag unterschreiben.
Da haben sie ihm den Vertrag vorgelegt.
Da hat er reingeguckt, hat gelacht und ist wieder gegangen.
Das heißt, die haben ihm im Vorfeld Sachen erzählt,
die schlicht und ergreifend entgegengesetzt zu dem waren,
was im Vertrag stand.
Eines der Sachen habe ich ja auch schon im Video thematisiert.
Das war das Schulungsprogramm,
wo du am Samstag Schulung machen musstest
und es nicht als Arbeitszeit gezählt hat.
Und solche komischen Dinger.
Der hat gelacht und ist wieder weg.
So wurde mir das überliefert.
Und das war auch die Zeit, wo es dann dort richtig bergab ging.
Zwei Jahre später bin ich auch abgehauen.
Damals war ich ja noch in der Ausbildung.
Und danach, nach der Ausbildung, bin ich schon auch abgehauen.
Okay, jetzt hören wir uns das aber mal an.
Einer Entwickler all die Tätigkeiten,
die in der Softwareentwicklung durchgeführt werden müssen.
Das heißt, er ermittelt die Anforderungen,
erstellt die Architektur.
Irgendwann wird es verkauft,
wird es also dem Kunden, dem Markt angeboten.
Dabei übernimmt dieser einer Entwickler all die Tätigkeiten,
erstellt die Architektur, implementiert das Ganze.
Ehrlich gesagt, wenn es so ein kleines Produkt ist,
programmiert er wahrscheinlich erst mal einfach drauf los.
Und im Nachhinein stellt man dann fest,
ups, da war ja einiges nicht so eine gute Idee dran.
Das stellt es bereit und überwacht dann den Betrieb,
macht also Support.
Jetzt ist natürlich das Ziel von Unternehmen,
mit dieser Software Umsatz zu machen.
Umsatz machen reicht Unternehmen natürlich nie,
sondern wir wollen Umsatz im Laufe der Zeit steigern.
Dieses Wachstum kann jetzt in zwei unterschiedliche Richtungen gehen.
In der einen Richtung wird das Produkt,
was von dem Softwareentwickler entwickelt wurde,
weiter gemacht. Das heißt, es wächst immer weiter.
Und um dieses Produkt herum wird dann eben
das ganze Unternehmen aufgebaut.
Das heißt, wir haben Marketing, Vertrieb, Support
und was da nicht nur alles zugehört.
Und alles kümmert sich mehr oder weniger um dieses eine
Kernprodukt des Unternehmens.
Die zweite Richtung, in die es gehen kann,
ist, dass wir nicht ein großes Kernprodukt haben,
sondern dass wir neben dem einen Tool,
was der eine Entwickler entwickelt hat,
noch viele andere weitere Softwareprodukte entwickeln.
Den Umsatz also nicht mit einem Kernprodukt machen,
sondern ihn auf sehr viele kleinere Produkte und Tools streuen.
Das ist eigentlich auch die Mannschaft,
die diese beiden Arten entwickelt.
Wenn wir nur ein einziges Produkt in so einem Unternehmen entwickeln
und dieses Produkt immer größer wird,
dann machen wir das meistens mit einem Softwareentwicklungsteam.
Das heißt, um dieses eine Produkt herum
gibt es nicht mehr nur diesen einen Entwickler,
sondern es wachsen immer mehr ...
Jetzt wird es fast schon ein bisschen BWL-mäßig hier.
... Entwickler außenrum. Wir skalieren also unsere
Entwicklungskapazität ...
Diagonal wird skaliert. Dann hat man die Probleme nicht mehr.
... indem wir neue Softwareentwickler dazunehmen.
Wenn wir jetzt die zweite Entwicklungsart haben,
... dreidimensional eigentlich,
nicht nur diagonal, sondern ...
Wie heißt das, wenn man
dreidimensional was macht?
Also mal angenommen,
gibt es dafür überhaupt ein Wort?
Also mal angenommen,
man hätte
hier x und y,
man hätte hier noch z,
und ich würde jetzt hier so
schräg skalieren in alle Achsen.
Wie heißt das dann?
Dreidimensional-diagonal-skalieren,
oder wie?
Wenn wir sehr viele Produkte haben,
macht man das meistens in einer Gruppe.
Das heißt, wir haben mehrere Entwickler in der Abteilung,
und jeder von diesen Entwicklern ist für ein oder für mehrere
Softwareprodukte und deren Weiterentwicklung zuständig.
Wollen wir jetzt also wachsen, bedeutet das,
dass wir mehr Anforderungen bekommen,
mehr Quellcode implementieren müssen,
mehr Testen mehr bereitstellen müssen,
mehr Support machen müssen, und damit wächst quasi
die Entwicklungskapazität in unserem Unternehmen.
Und dabei ist es jetzt egal, ob wir ein Entwicklungsteam haben
oder eine Entwicklungsgruppe haben.
Am Anfang gibt es in der Softwareentwicklung
mal viele Leute im Unternehmen, die eine Idee haben,
was das Produkt können sollte,
in welche Richtung es gehen sollte.
Oh, das ist ja eher
ein BWL-Video, oder?
Da hab ich jetzt keinen Nerv drauf.
Wir gucken uns das Fallbeispiel an,
okay? Leute, ich skipp das mal.
Was bei meinem Kunden schief lief,
das gucken wir uns an.
Der Rest, glaube ich,
ist mir zu BWL angehaucht.
Warte.
Was genau ist jetzt bei meinem Kunden passiert?
Na, ich denke mal, auf der einen Seite
schon ein sehr starker Fokus auf den Umsatz
und auf Umsatzsteigerungen,
auf der anderen Seite aber auch sehr, sehr viel Unwissenheit
über die Softwareentwicklung.
Das heißt, viele von den Dingen,
die wir hier gerade besprochen haben,
die waren da einfach bei den Entwicklern nicht bekannt,
auch am mittleren, oberen Management nicht bekannt.
Als ich vor eineinhalb Jahren in das Projekt dazugekommen bin,
habe ich ein absolutes Chaos vorgefunden.
Wir haben eine unglaublich große Anwendung gehabt.
Diese Anwendung war in verschiedene Programmiersprachen
entwickelt, drei Stück.
Einer davon war VB6 in einer unfassbar grausamen Architektur.
Und die Entwickler waren unglaublich unzufrieden,
unglaublich gestresst.
Einer hatte sogar mittlerweile schon Burnout bekommen.
Das Ganze hat genauso angefangen
in dem Unternehmen, wie ich es eben beschrieben habe.
Am Anfang gab es eine Idee.
Es gab einen Entwickler, und dieser Entwickler
hat dieses Produkt entwickelt.
Dann kam das Wachstum.
Das heißt, es kamen mehr Kunden dabei.
Es kamen immer mehr Anforderungen da rein.
Der eine Entwickler reichte nicht mehr aus.
Es gab mehr Anforderungen.
Es musste mehr Support gemacht werden.
Es musste mehr bereitgestellt werden.
Und genau dann nahm das Problem eigentlich seinen Lauf.
Denn der richtige Schritt wäre es jetzt gewesen,
weil das eine Produkt immer weiter gewachsen ist,
daraus ein Softwareentwicklungsteam zu machen.
Ein neues Softwareentwickler anzustellen
und dann diese benötigten Rollen, die wir eben gesehen haben,
alle zu verteilen.
Natürlich nicht nur auf Softwareentwickler,
auch vielleicht auf Product Owner, auf DevOps Engineers
oder was auch immer.
Aber mein Kunde hat den großen Fehler gemacht.
Er hat in diesem Bereich in einem Softwareentwickler zugewiesen.
Das heißt, in Wirklichkeit gab es in dieser Abteilung
kein Team, sondern eine Gruppe.
Und jeder Entwickler in dieser Gruppe hat einen Bereich
der Software unter seiner Verantwortlichkeit gehabt
und musste eben genau all diese Tätigkeiten,
die wir eben gesehen haben, übernehmen.
Aber wie schon in unserem Beispiel eben, mangelst Zeit.
Und weil die Entwicklungsgeschwindigkeit sonst
zu langsam gewesen wäre, hat man nur die absolut notwendigen Tätigkeiten.
Das habe ich auch schon manchmal beobachtet.
So nach dem Motto, ja, eigentlich müsste man
das, das, das und das machen.
Das ist doch jetzt gar nicht so wichtig.
Lass uns mal lieber auf die wichtigen Sachen konzentrieren.
Okay, aber da fragt man sich, warum dann das, das und das
überhaupt in den To-dos drinne steht,
wenn man es doch einfach weglassen kann.
Es wurde ein Mindestmaß an Anforderungen aufgenommen.
Es wurde die restliche Zeit in Implementierung investiert
und dann nebenbei noch ein bisschen Bereitstellung
und Support gemacht.
Das Ganze hat dann dazu geführt, dass wir eine Anwendung hatten
mit insgesamt zehn Entwicklern irgendwann mal,
also die in zehn Teile aufgeteilt waren.
Der eine ist, wie gesagt, mit Burnout ausgeschieden.
Einen Bereich gab es, für den gar keiner mehr zuständig war
und neun Bereiche, wo wir komplett unterschiedliche
Architekturansätze hatten.
Unterschiedliche Codierstile, teilweise sogar
unterschiedliche Programmiersprachen.
Ich sagte eben schon, ein Teil, das ist der ältere Teil,
war sogar noch in VB6.
Und diese Fehlentscheidung, dieses Chaos, das hat dann
wirklich zu ernsthaften Konsequenzen im Projekt geführt.
Die Entwickler hatten ständig Kundenkontakt,
mussten ständig mit den Kunden, mit den Stakeholdern reden.
MonkaS, da hätte ich ja gar keinen Bock drauf.
Und aufgrund der fehlenden Produktvisionen
und weil die Anforderungen nicht ernst genommen wurden,
bei den neun verschiedenen Softwareentwicklern,
die ja neun Anwendungsteile hatten, gab es neun
unterschiedliche, krass unterschiedliche
Architekturformen. Es gab keinerlei Tests,
das Deployment hat ewig gedauert, wurde nur ganz selten
gemacht, es gab keinen wirklichen Prozess
und es wurde sich weder im Bereich der
Arbeit verbessert oder natürlich noch
im Bereich der People verbessert. Und um in diesem
Chaos dann in irgendeiner Art und Weise noch
Leute einarbeiten zu können,
musste man einfach unglaublich viel Zeit in die Leute investieren
und dieses Onboarding des neuen Entwickler hat ewig gedauert.
Das hat jetzt auf der einen Seite nicht nur
zu massiver Unzufriedenheit bei den Entwicklern geführt,
sondern irgendwann auch bei den Kunden, weil sich dieses ganze
Chaos auch auf das Produkt ausgewegt hat.
Es gab immer mehr Fehler,
die Zeiten für einfachste Features wurden immer ...
Wisst ihr, das ist auch so ein Ding,
also,
es gibt gute Manager, es gibt auch viele
unfähige Manager. Das ist halt sowas wie
in jedem Job, es gibt auch sehr viele
unfähige Programmierer
oder Softwareentwickler oder Admins
oder sonst was. Man muss halt
die Gescheiten finden, die was taugen.
Ich sag mal, 80-90% der Leute können
eigentlich nur 0-15
Zeug und verkacken es
bei etwas Komplizierterem. Das ist bei
Managern auch so. Man muss halt die Gescheiten
finden und
gescheite Manager sind dann auch in der Lage
die Leute dort
einzusetzen, wo sie eben ihre Stärken
haben und das ist
nicht unbedingt bei Technikern
immer der Endkundenkontakt
und Support. Das macht eigentlich
gar keinen Sinn. Das fuckt
die Leute nur ab. Leute, ich würde nie im Leben
einen Job machen, wo ich permanent Kundenkontakt
hätte. Hätte ich einfach keinen Bock
drauf, weil die Kunden auch prinzipiell immer
unzufrieden sind. Zurecht wohl auch,
weil wer weiß, was ihnen das Marketing
und der Vertrieb verkauft hat, was nicht
richtig funktioniert oder gar nicht da ist.
Die sind wahrscheinlich zurecht unzufrieden, aber ich will
mich damit nicht auseinandersetzen müssen.
Mein Job sollte sein,
stabile und
ordentlich programmierte
Software abzuliefern, wenn ich Entwickler bin. Bin ich
hauptberuflich.
Da verkacken es auch viele.
Gute
Manager sind wichtig. Ich bin niemand,
der sagt, ja, irgendwelche Prozesse
und Management
und Führungskräfte brauchst du nicht.
Ich weiß, vertreten in der IT viele
Leute, aber ganz im Ernst,
viele Leute in der IT haben nicht die Skills
dafür, umgedreht, aber auch
nicht.
Es ist selten
ein guter Manager, auch gleichzeitig ein guter
Programmierer, ein guter Programmierer, ein guter Manager
oder ein guter Admin, ein guter Manager umgedreht.
Ab und zu mag es das mal geben, aber das kommt
nicht oft vor. Die haben genauso
einen Job wie
alle anderen auch.
Du merkst, wenn sie den
gescheit machen. Eine gute Führungskraft
sorgt zum Beispiel dafür,
dass du weißt, was du machen sollst
und was du nicht machen sollst,
wie was gemacht werden soll, dass klare
Vorgaben existieren und
die sorgt auch dafür, dass dir die
Leute nicht direkt auf den Sack gehen können
mit irgendwas.
Die sagt dann, weißt du was, schick den mal zu mir, wenn er
Probleme damit hat.
Das sorgt dann auch dafür, dass du nicht
die Arschkarte hast, wenn das nachts kaputt
geht,
obwohl du
im Vorfeld ja schon
darauf hingewiesen hast, dass das keine gute Idee ist.
Also gerade
klare Vorgaben und wie
man quasi,
wie soll ich das sagen, sicher was macht,
so wichtig sind Vorgaben, das ist echt essentiell
von einer guten Führungskraft, dass sie das machen.
Also wenn du dich daran
hältst, eine Sache,
den Vorgaben entsprechend umzusetzen,
dann kann dir keiner im Endeffekt
einen Strick draus drehen.
Und wenn das einer versucht, dann
muss deine Führungskraft sagen, nee, so nicht.
Und eine schlechte Führungskraft
knickt dann ein und sagt,
oh ja, da muss ich aber nochmal ein ernstes
Gespräch mit unseren Mitarbeitern führen.
Also
es gibt sehr viel
schlechte Führungskräfte,
es gibt aber auch ein paar gescheite.
Und das ist wie überall,
so wie 80-90% der Admins
kacke sind oder der Entwickler wahrscheinlich kacke sind,
sind auch 80-90% der Führungskräfte
kacke.
Also die meinen, dass sie es können.
Wir haben also dann vor eineinhalb Jahren
einen Plan geschaffen. Das erste war, dass wir natürlich
das Ganze, diese Gruppe, in ein Team transformieren.
Dazu haben wir gesagt, das können wir relativ kurzfristig
machen und dann versuchen wir all die
relevanten Rollen zu besetzen.
Scrum Master! Das ist das erste,
was man braucht. Ohne Scrum Master
und das dreidimensional, diagonal
skaliert wird, geht nix. Wie soll das sonst
agil und modern funktionieren?
Natürlich momentan, dass Fachkräfte
Probleme gibt, die alle ausgebildet werden müssen,
haben wir gesagt, okay. Die sollten Peter Aguile
anheuern. Wir sagen mal, innerhalb von einem Jahr sollten die
Rollen besetzt werden und innerhalb von zwei Jahren sollen die
wirklich komplett in ihre Rolle eingearbeitet sein.
Nebenbei musste natürlich ein Refactoring gemacht werden,
weil die Anwendung sehr komplex war, die
Naturstile unterschiedlich waren.
Mindestens einmal
am Tag
Retrospektive
Planning
und Review machen.
Ich persönlich bin der Meinung, man sollte
diese ganze Agilitätssache noch übertreiben.
Man sollte keine
zweiwöchentliche Sprints machen, sondern man
sollte Mikro-Sprints machen.
Also man macht
vier Stunden
am Tag Sprintplanung
und vier Stunden am Tag arbeitet man.
Und ich glaube,
wenn ich das auf einer Konferenz mal
ordentlich verkaufen würde, gäbe es bestimmt Leute,
die würden das sogar probieren wollen.
Ich glaube, man kann da fast
alles verkaufen, wenn man es gut rüberbringt.
Halbe Stunde Sprint,
halbe Stunde Arbeit, auch keine schlechte Idee.
Nano-Sprints, genau.
Ja, Moment.
Halbe Stunde Planning,
halbe Stunde Arbeiten, halbe
Stunde Review, halbe Stunde
Planning, halbe Stunde Arbeiten.
Also eine Stunde labern versus eine halbe Stunde
arbeiten. Ich glaube, das klingt gut.
So sollte man das machen.
Und wir dürfen es dann auch nicht mehr agil nennen, sondern
das muss noch eine Steigerung zu agil sein.
Das ist dann quasi Mikro-Sprints,
Nano-Sprints, das ist dann quasi
Hyper-Agile oder sowas.
Das braucht noch einen richtig schönen, griffigen
Namen.
Agile 2.0
oder sowas.
Und dann müssen wir
uns auf irgendwelche Konferenzen stellen
und das anpreisen,
wie geil das ist
und irgendeine Consulting-Firma aufmachen.
Twitch-Chat
5Head Consulting.
Das wäre eigentlich
ein mega guter Unternehmensnamen, oder?
5Head
5Head Solutions gibt es schon.
5Head Solutions
5Head GmbH
Wait a minute.
Die schreiben
das sogar noch so.
Bei 5Head.
Wie ist das 5Head Team?
Ja, das sind garantiert
Twitch-Gucker
5Head.
Erklären die auch, wo der Name 5Head herkommt?
Nee, ne?
Die 5Head
GmbH ist auch nicht verkehrt.
In Hessen ist das. Wo ist das?
Wo ist das? Zeig mal her.
5Head Solutions
In Lich.
Wo ist Lich, Alter?
Okay, wo ist Frankfurt?
Ah, okay.
Ich wohne ja hier so.
5Head Solutions
Okay, lass uns mal das Video
fertig gucken.
Absolutes Chaos war.
Es war ein neues Video.
Eigentlich müsste ich heute was aufnehmen.
Aber ich weiß nicht, ob ich das hinkriege.
Mit 80% Kapazität.
20% hätten wir für die neue Feature-Entwicklung
genutzt, um dieses Refactoring
abzuschließen. Das Ganze haben wir der
Geschäftsführung vorgestellt. Alle haben den Fehler
eingesehen, haben die Notwendigkeit gesehen, haben das Ganze
dann quasi, haben uns das Gummi mitgeholt und dann
ging das Ganze los. Aber nach einem Jahr,
das ist ein bisschen mehr als ein Jahr vergangen,
ist nichts passiert. Keine Rolle besetzt,
kein Refactoring. Ja, ist die Frage,
woran es liegt. Gab es vielleicht gar keinen,
vielleicht gab es gar keinen richtigen
Rückhalt. Die haben bloß gesagt, sie finden es
toll, aber haben es nicht mitgemacht.
Spring gestartet, nichts ist passiert.
Nicht ganz, es sind Rollen besetzt worden.
Und zwar im Marketing. Zwei Leute,
einen Vertrieb, um den Umsatz weiter zu steigern.
Da hätte ich
gekündigt. Genauso wie die Entwickler.
Deswegen habe ich am Anfang gesagt, ich verstehe sie.
Und ich bin mir ziemlich sicher, dass du
auch nicht anders reagiert hast.
Und am Ende des Tages, muss ich einfach zusammenfassen,
da hat der Kunde es auch nicht anders verdient.
Wenn du es besser machen willst, wenn das bei euch nicht passieren soll,
dann fang hier am besten mit den Kumpels an.
Und dann wird Instant Rage quittet.
Max gründet den KegW Solutions
GmbH, um
KegW as a Service zu vermarkten.
KegW as a Service ist eh das nächste große Ding.
Also wer sich fragt,
KegW as a Service gibt es wirklich.
Das ist KegW as a Service.
Ist aber noch nicht Kubernetes ready, Leute.
Was ist da los?
Es wird nur per Ansible den Server aufgebaut.
Und per Hetzer nur eine VM angelegt.
Das ist nicht Kubernetes ready.
KegW as a Service.
KegW as a Service ist eigentlich nur
ein Übungsprojekt, um
ich glaube um Containerisierung
zu testen.
Immer wenn wir irgendein Übungsprojekt
brauchen, nehmen wir
KegW as a Service. Das kann nichts.
Das ist eine ASP.NET Core Anwendung mit einer Datei,
die nichts macht, außer
Bilder zu rotieren.
Also das ist alles
von der Logik her.
Das wird schon öfters benutzt, um irgendwelche anderen Sachen
auszuprobieren.
Container-Images bauen, deployen in irgendeinen Cluster.
Dafür bietet sich KegW as a Service halt immer an.
Dieses Jahr wird
das Jahr des KegW as a Service.
Ja, auf dem Linux-Desktop.
Ganz wichtig.
Okay, was haben wir denn sonst noch zu bieten hier?
Das hatten wir gerade schon.
Das könnten wir uns auch
angucken, aber 30 Minuten waren wir
nachher.
Mein erstes Mal in macOS.
Komme ich zurecht?
Also, womit ich unter macOS
nicht zurechtgekommen bin und auch nie
richtig warm geworden bin,
ist diese
Control-Taste.
Wie heißt das? Das heißt Control, oder?
Diese Mac-Taste.
Die hier. Mein Gott.
Warum kommt man da nicht auf das Bild?
Control-Option-
Command-Taste, meine ich.
Command-Taste.
Auf der anderen Tastatur hast du ja nur
macOS-Alt.
Das ist ein bisschen
weird-champ. Da komme ich nicht mit
klar. Alter, wie viel
kostet so eine low-profile
Tastatur? Ganz ehrlich.
Die sind auch
alle nicht mehr ganz dicht.
205 Euro.
Guck mal hier, das bin ich, wie ich mich jahrelang
immer über Apple-Rechner aufgeregt habe,
wenn ich mal kurzzeitig einen benutzen musste.
Wo ist das Add-Zeichen? Wieso geht hier
kein Copy-Paste?
Wie fein da jetzt sein!
Start-Menü quasi.
Wieso gibt es keine Entfernen-Taste?
Guck mal hier, das bin ich, wie
ich meinen ersten eigenen Apple-Rechner
zum ersten Mal anschalte.

Ich muss noch mal kurz aufs Klo, Leute.
Gleich da.
Wenn ich es noch schaffe, mein Headset zu entwirren.
Das ist natürlich der Pro-Move.
Moment, hä?
Wie rumkommt... Ah, so.
Also ich habe zu viel Zeug hier.
Eindeutig liegen jetzt noch das Ladekabel vom Handy im Weg, man.
So.
Gut.
Jetzt passt's.
Rollo runter machen.
Excellent.
So.
Also.
Inspektor Poops am Start.
An's Trinken erinnern.
Ja, habe ich schon.
Mr. Amec hat subscribed.
Dankeschön.
Pog Subscription.
Das ist sehr...
So.
Wo fange ich denn am besten...
Achso, ja.
Ich weiß, wo ich am besten anfange.
Ich mache jetzt erstmal...
Arsch, by the way.
Betriebssystem-Updates.
Übrigens.
Soll ich euch mal was von China-Chinesen-Kameras erzählen?
Und dass das einfach sagt?
Also ich habe ja bei mir...
Warte mal.
Was ist denn da richtig?
Die richtige VM?
Das hier.
Ja.
Ich habe hier ein paar Reolink-Kameras hier daheim.
Warum habe ich mir die ursprünglich gekauft?
Also es sind solche Dinger hier.
Guckt mal.
Reolink.
Das sind so billige China-Chinesen-Teile.
Ja.
Outdoor.
Sowas hier zum Beispiel.
Ja.
So.
So Klein-Scheiß oder so.
Das habe ich mir gekauft, weil die waren mal relativ billig.
Ich meine, jetzt sind wir quasi 240 Euro.
Wir sind ja nicht mehr ganz dicht.
Die waren mal recht billig und hatten eigentlich alles, was man so braucht.
PoE, WiFi, ein Web-Interface und RTSP, um darauf zuzugreifen, ohne China-Chinesen-App.
Was steht an?
Sage ich gleich was zu.
Und jetzt.
Ich habe eine davon, hängt bei mir im Hof.
Und die hat seit einer Weile irgendwie immer wieder mal Verbindungsabbrüche beim RTSP.
Zum Glück habe ich die vor allem ausgemacht.
Hat immer wieder Abrüche.
Ich dachte mir so, ey, weißt du was, Max?
Mach mal ein paar Firmware-Updates.
Firmware-Updates schaden bestimmt nicht, können das Ganze nur besser machen.
Also habe ich gestern mal ein Firmware-Update gemacht.
Und wisst ihr was?
Die Kamera ging erst mal nicht mehr.
Bis ich da drauf gekommen bin, dass warten nicht hilft.
Also ich habe Update gestartet.
Ich habe Update gestartet.
Und die Kamera ging halt.
Die ging an.
Hat sich pingen lassen.
Hat aber außer Port 9000 nichts offen gehabt.
So.
Da habe ich mir gedacht, hä?
Was soll Port 9000 sein?
Und was ist überhaupt?
Und, ne?
So.
Zumindest.
Ja, Port 9000, beste.
Genau.
Zumindest habe ich dann mal ein bisschen gegoogelt.
Die China-Chinesen-Cloud Port 9000.
Da habe ich ein bisschen gegoogelt hier.
Reolink Port 9000.
Da bin ich dann drauf gekommen.
Hier, das ist der Media-Port.
Der Media-Port ist für ihre komische Videorecorder-Lösung, die die anbieten.
Und dann habe ich rausgefunden, von irgendeinem Reddit-Post,
dass jetzt nach dem Firmware-Update,
guck mal hier, ich glaube, vielleicht steht es hier auch.
Wo ist er?
Also plötzlich, ich habe dann irgendwann einen Reddit-Post gefunden.
Und dann habe ich dann gemerkt, das ist ein Firmware-Update,
der ja quasi alles mit Firmware-Update geht.
Und ich war jetzt da im Internet.
Da hatte ich mal zu Hause, kann ich euch jetzt mal sein,
auf der Internetseite zu schauen.
Da habe ich zum Beispiel gesehen, dass das Firmware-Update
einfach alle Funktionen ausgeschaltet hat,
weshalb ich die Kamera gekauft habe.
Aber glücklicherweise wurden die Funktionen nur ausgeschaltet,
nicht ausgebaut.
Aber, und jetzt kommts,
damit...
damit man die Funktionen einschalten kann, also.
über über den media port 9000 reden kann also app installiert auf dem handy mich
mit der kamera verbunden gegen glücklicherweise auch keine
einstellungen zu sehen bis ich dann herausgefunden habe man braucht allen
ernstes damit man das umstellen kann windows only desktop app mit der kann
man sich dann wieder auf die kamera verbinden und das web interface und
rtsp einschalten direkt reverse engineering open source tool dafür man
ich habe schon gestern beim suchen ein news eintrag gefunden von jemand der das
gemacht hat aber da ging es darum cloud only kameras es gibt einen
tv moji update jetzt habt wie moji gleich gucken
ich suche aber den twin tv moji fork guck mal es gab ein neues update
15.1 die freandeliefer zur port von new emoji infСunterdays
in die 2015 punkt 1 aha and proof signal warum braucht eine
mochi von type script derソftware steinen und was soll das überhaupt sein
für einen emoji bei den meisten dem ort sich habe ich ja noch irgendwie
halbwegs verständnis beim ersten mal dreht er sich gerade im kreis oder kopf
das ist kopf schütteln und das ist nixen oder was
ok
es leute mit einem stock und leute im rollator okay package updates gemacht das kann man an
dem moment noch nicht alles noch nicht alles durch ja aber schlimm oder dass die einfach beim
firmware update alle funktionen das halte ich mir die kamera gekauft habe ausschalten nicht
ausbauen aber ausschalten richtig hängen geblieben das habe ich nicht ausprobiert ich wollte es erst
ausprobieren aber nachdem die so komischen installer verwenden und sowas ist die chance
wahrscheinlich nicht sonderlich hoch dass es mit wein einfach so geht aber vielleicht vielleicht
hätte das funktioniert mit wein ich weiß es nicht aber das ging mir schon wieder enorm auf den sack
dankeschön für den sap hier ich habe irgendwas habe ich gerade übersehen oder auch nicht habe
ich nicht irgendjemand übersehen kann oder war das mein eigener team sound nicht angemacht hat
einer von euch kuba net ist zu hause laufen nein warum soll ich kuba net ist daheim laufen lassen
da muss der techno thema auf youtube angucken der hat fünf cluster daheim und muss ich immer
fragen was geht mit dem typ ab auf youtube ja auf die frage warum nicht rast was keine gescheite
möglichkeit gibt den sp 32 10 mit rast zu programmieren ach hier der der moritz hatte
hat subscribe ist noch da ich hab dich gar nicht ich habe das gar nicht gesehen da war ich glaube
ich gerade auf dem klo oder so wenn ich wenn du schon wieder weg bist
dann ich habe es gar nicht gesehen echt jetzt aber nicht offiziell android oder proxmox kommt
drauf an wo dein fokus drauf liegt ist ein fokus hauptsächlich virtualisierung und vms oder eher
allround und auch netzwerk storage dann ist klar ob das eine oder das andere pauschal kann man das
nicht sagen ohne zu wissen was du machen willst also leute falls irgendwas übersehen red ones of
doch in xz tools echt ernsthaft ich habe ist das in april scherz xz tools ist doch ist das
so ein extrahierungs ding das ist april scherz das ist schon ein verfrühter april scherz oder
wobei moment in the latest xz utils data compression tools and libraries wow aha
ok da müssen wir gleich mal gucken was geht hier ab habe ich das installiert gleich mal checken xz
oh fuck monkaers me Manga is komme hier 561 gleich an den stallen fakte wird von ffm pack
required ich muss daproblem ja weil löschen kannst du klicken das brauche alles aber was sind das was
ist das problem wenn ich mich dass er dauert man downgrade xz er ist das ding es war was haben wir
denn hier 54165 tt Halloween im tipp text eint piraten ist via fanpage der tat gleich geweiht de întit olvhell
346, okay.
Aha.
Zeig mal her, das ist jetzt interessant.
Kritische Sicherheits-Förderer.
Ja, ist das jetzt nur Fedora oder ist das allgemein das Package?
Hat das nur einer in Red Hat eingeschleust oder ist das allgemein ein Problem davon?
Ne, Moment, Debian ist ja auch schon.
Jetzt bin ich aber...
XZTools GitHub.
Ist das das hier?
Ich check's noch nicht so ganz, ehrlich gesagt.
Was ist da? Was ist da los?
Also mich würde jetzt erstmal die Auswirkung interessieren.
So, haben wir irgendwo...
Hier, CVE.
Base-Score 10, na dann.
Wenn sonst nix ist.
Ich will kein Red Hat Ding.
Ist das ein Pre-Built-Objekt-File von einem SkySS-File existent, welches dann zu Modify-spezifische Funktionen genutzt wird?
Okay.
Das Ergebnis ist in einer Modified Library.
Bei Any...
Okay, also alles, was LibLZ benutzt hat, hat gelitten.
Das haben wir dann erstmal wieder downgraded.
Wunderlich, er ist in Red Hat...
Ja, Red Hat...
Alter, wie mir Red Hat immer auf den Sack geht mit ihrem Gelaber da.
Was juckt mich das, was in Red Hat ist?
Äh...
Okay.
Äh...
Äh...
Also sprich, der Typ, dem auch das GitHub-Repo gehört, hä?
The Git distribution lacks the M4-Macro that triggers the build-off.
It was found that it interfered open SSH-Demon, while it is not directly linked.
Okay.
Ja, aber so richtig klar, was da Sache ist, hab ich immer noch nicht verstanden.
Ja, gut, ich hab jetzt downgraded.
Okay, alles klar.
Haben wir downgraded.
Was es für Auswirkungen sind, hab ich's noch nicht ganz...
Aha.
Also, wenn man einen Server mit public...
Ja, Moment, das ist eine der möglichen Ausnutzungen.
Ich weiß jetzt ja nicht, ob...
Man weiß ja nicht, ob das alles...
Wo nur eine Sache ist, ist vielleicht auch noch eine andere Sache.
Gaming on Linux, was doch immer das für eine Seite ist, Mann.
Lass mal bei Hacker News reingucken, was da drin steht.
Okay, das ist der Typ, der es ursprünglich gefunden hat.
Hier ist das Script.
Ja.
Okay, da gebe ich jetzt auf, rauszufinden, was das genau...
Inject.
Inject, was steht da?
TXT.
Okay.
Ich bin immer etwas verwirrt.
Was jetzt eigentlich Sache ist?
Ah, obviously, alles klar.
Gucken wir mal auf GitHub.
Was ist da los?
Das ist ja hier wohl das offizielle Repo.
SimplifySecurityMD.
Was wurde da simplified?
Gut, das weiß man nicht, ob das der Contributor ist.
Das ist ja ein anderer...
Gut, man weiß es nicht, wer es jetzt wirklich gewesen ist.
Oh, das...
Er hat es schon als Bug getaggt.
So, so.
Ja, man weiß noch nicht so richtig viel, oder?
Aha.
Okay, hier gibt es noch ein bisschen mehr drüber.
Ich habe glücklicherweise keinen Debit.
Ich habe glücklicherweise keinen Debit.
Ich habe nur noch Debian und sowas, was so neu ist.
Ich habe das nur auf ArchVMs.
Na, jetzt, da ist viel...
Also, es geht anscheinend wirklich zum größten Teil um SSH-Verbindungen.
Wo man sich dann...
Das ist natürlich für alles, was public im Internet ist, schon mal richtig mies.
Ich bin aber Desktop-mäßig auf einer Rolling Release.
Also, wie gesagt, OpenSSH auf meinem Desktop hier juckt mich jetzt nicht so.
Aber, wie gesagt, wo eine Sache ist, können auch noch mehr Sachen.
Die nur bloß noch keiner entdeckt hat.
Fragt mich, was da jetzt noch rauskommt, ja.
Na gut.
Gibt es mal wieder Highscore.
10 von 10, das gibt es jetzt ja auch nicht immer alle Tage.
Gut, das hatten wir gerade schon.
Arch, by the way.
Jetzt mal wieder hier.
Einmal ein Problem durch Rolling Release gehabt bis jetzt.
Interesting.
Na gut.
So, jetzt haben wir erstmal...
Jetzt haben wir erstmal Down gecradet.
Auf 5, 4, 6, 1.
Ich überlege gerade, habe ich noch irgendwo VMs, wo das Neue drauf ist?
Eigentlich nicht.
Auf meinen Kisten, auf meinen Serverkisten, habe ich nur Deviant Bookworm.
Das ist nicht betroffen.
Und der Arbeit ist witzigerweise halt auch nichts, weil Red Hat und uraltes Red Hat und noch älteres Red Hat.
Bin ich mal gespannt, was da jetzt noch rauskommt.
Gut.
Hätten wir das auch, beziehungsweise wir wissen, dass wir nicht allzu viel wissen.
Ich bin mal gespannt, ob da noch ein bisschen mehr rauskommt, die nächsten.
Tage über.
An hauptsächlich was mit SSH zu tun.
Ja, so hätte ich das jetzt auch interpretiert.
So hätte ich das auch interpretiert, aber das sollte sich glücklicherweise in Grenzen halten.
Serversysteme mit SSH nach außen, die Rolling Release Arch verwenden.
Wobei Alpine, Alpine kann durchaus sein.
Redis ist nicht mehr Open Source.
Ja, dann.
Ich benutze selten sowas.
Also ich habe Redis bisher nur als Dependency benutzt.
Weil es irgendwelche Projekte gebraucht haben.
Aber ich habe selbst noch nie was gegen Redis gebaut.
Durch welchen Comet ist es entstanden?
Ich glaube gar nicht durch einen Comet.
So wie ich das verstanden habe, ist in dem Tar ein zusätzliches Makro, was beim Build komische Dinger macht.
Ich glaube nicht, dass es im Git-Repo selbst drin ist.
Ach ja.
Arch, by the way.
Upgraded systems and containers.
In the images now.
As many of you have already read the upstream releases.
Ich habe vor 5 Minuten upgradet.
Also war ich safe, oder wie?
War ich safe?
Moment, da müssen wir selbst nochmal nachgucken.
Muss ich nochmal im Stream nachgucken, weil meine...
Muss ich nochmal im Stream nachgucken, weil meine...
Max, Max, Max.
Nicht doppelt und dreifach.
Weil ich habe doch...
Ihr habt mal noch gerade im Stream gesehen, welche Version ich vorher installiert hatte.
Zeigt mal.
Aber hier habe ich schon Down gecreated.
So, was hatte ich installiert?
Ja, Leute, ich war nie betroffen.
5, 6, 1, minus 2 hatte ich.
Easy.
Easy.
Easy.
Dodged.
Easy.
Wir waren so Bleeding Edge, dass wir schon moderner als die super Bleeding Edge Sicherheitslücke waren, ja?
Arch, by the way.
Okay.
Okay.
Star included extra Makro-Files.
Ja, wäre das mal in Rust programmiert, ne?
Na gut, ein Vorteil hätte das.
In Rust hättest du nicht so einfach ein M4-Makro einschleusen können und keiner hätte sich was bei gedacht.
Da hätten sie ja gerade, hä?
Vor allem, das würde ja während keinem Bild, ist es dort normal, dass irgendwelche M4-Makros ausgeführt werden.
Okay, also das heißt, ich kann jetzt wieder ganz normal upgraden, weil ich schon das gefixte habe, alles klar.
Gut.
Und nochmal Reboot.
Ich glaube, ich glaube, dann bin ich safe auf meinem System.
Ich wüsste nicht, wo ich diese zwei Versionen haben könnte.
Ich habe für alle Images, die ich baue, meistens auch Debian Bookworm.
Auf den Servern Debian Bookworm noch bestimmt irgendwo 20.04er Ubuntus oder sowas.
Aber nix.
Nichts, was das irgendwie hat.
Okay, wir sind safe.
Alles klar.
Gut.
So.
Jetzt, äh, Chat, jetzt kann ich euch erzählen, was wir heute machen.
Ich mache hier erstmal alles, alles starten.
Also, ich habe mir was gekauft.
Und da will ich heute mal ein bisschen mit rumbasteln.
Beziehungsweise gucken, wie man da, wie man da was gescheit basteln kann.
Ich möchte mir nämlich ein eigenes Zigbee-Gerät bauen.
Benutzt ihr auch Raw-Height?
Das, äh, das Dings, ähm, das Testing Fedora?
Der benutzt, der benutzt wirklich Fedora?
Alter.
Früher hat der immer auf alles geschimpft.
Gut, der hat aber auch spezielle Anforderungen.
Ich, ich mag Fedora gar nicht, äh.
Ich habe da vielleicht so eine Abneigung wegen Red Hat dagegen.
Okay.
Also, ich habe mir was gekauft.
Ich zeige euch das mal kurz.
Und zwar, ich habe mir gekauft ein ESP32 C6.
So ein Board, äh, nicht, nicht Battle, Beetle.
Das Teil habe ich mir gekauft.
Drei Stück.
Ihr wisst, ich kaufe mir nie eins.
Ich kaufe mir sonst immer drei, weil dann machen wir aber schnell immer irgendwelche Boards kaputt.
Und das ist ein ESP32 C6 Board.
Das hat integriertes WiFi 6, integriertes Bluetooth, Bluetooth BLE.
Man kann, äh, hat, äh, Ladeelektronik für, äh, Solar.
Und das Geilste ist, es hat Zigbee.
Zigbee Onboard.
Und was mir schon eine Weile vorschwebt, ich will ein eigenes Zigbee-Gerät bauen.
Jetzt nicht irgendwie was, was ich vertreiben will oder so.
Also nicht falsch verstehen.
Ich möchte von meinem Fischteich im Garten die Temperatur übertragen.
Dass ich weiß, wann ich den im Winter zudecken muss.
Ich habe da bisher verschiedene Lösungen im Einsatz gehabt.
Aber so richtig gut hat nichts davon funktioniert.
Gerade weil das halt auch Batterie laufen muss.
Und hinten eben.
Ja, im Garten, im Gras quasi liegt.
Und deswegen habe ich mir gedacht, wir bauen einfach ein eigenes Zigbee-Device.
Da kommt ein, äh, da kommt ein Temperatursensor dann dran.
Ein DS28, oh, wie heißt die hier mit Temperature?
DS18B20 kommt da dran.
In der wasserdichten Version habe ich hier noch genug rumliegen.
So welche hier, das ist ein Temperatursensor.
Den hängst du dann einfach oben ins Wasser.
Zigbee-Regensensor, da gibt es bestimmt auch schon fertig.
So.
So.
Das hängt man dann ins Wasser.
Hier kommt der ESP dran.
Und dann kommt das Ganze in eine wasserdichte Box.
Eine 800mAh Batterie dran.
Denn das Nice an diesem Board ist, nicht nur, dass der alles das hier kann.
Der ist auch so gebaut, dass der im Deep Sleep nur,
also mal die offizielle Herstellerseite angucken,
dass der im Deep Sleep, und selbst wenn die Hersteller nur ein bisschen Mist erzählen,
16 Mikroampere braucht.
Das heißt, du willst nichts sagen, aber, oh, das ist bestimmt Upfuck, oder?
Gibt es da irgendwie ein Getting Started?
Ja, da kannst du die Hälfte wahrscheinlich nicht mitmachen.
Da ist doch bestimmt die Hälfte wieder nicht implementiert.
Kein Zigbee und nichts.
Das ist das letzte Mal, als ich mir das Projekt angeguckt habe, war schon auch das, dass die
Hälfte an Sachen gefehlt hat.
Ja, nur weil das Ding den ESP32C6 unterstützt, heißt das nicht, dass das Ding nicht mehr
funktioniert.
Heißt das nicht, dass es automatisch beispielsweise Zigbee damit kann.
Ich sehe ja auch nichts von Zigbee, weil man das ja nicht weiß, ja.
Da müsste man das, die Docks sind halt ein bisschen leicht, ne, kannst du damit wahrscheinlich
nicht machen.
Das ist immer das Problem dabei.
Du hast keine Beispiele dafür, weil du weißt eh schon, wie es richtig funktioniert bei
den ganzen Controller-Geschichten, wenn du da nicht jahrelang mit arbeitest.
Die Hälfte davon ist nicht unterstützt und du findest keine Hilfe zu.
Also so sehr ich auch C++ hasse in dem Fall, oder eigentlich sogar nur RAW C, das offizielle
Framework davon, da müssen wir, müssen wir durch.
So, aber wo ich gerade dabei war, das Ding braucht im Deep Sleep plus 16 Micro Ampere,
das heißt IOT Battery Calculator aufmachen.
Gehen wir jetzt mal hier was realistisches ein.
Ja, das ist das.
Wir machen etwas realistisches ein.
Wir machen eine, machen wir mal die größere Batterie, ok, komm, ne, wir machen die, wobei
ich glaube, ich habe nur eine 1200mAh Batterie, Akku muss man ja sagen, Akku, Battery ist ja
nur so.
Also 1200mAh Akku, mal 20% ist ok.
So, jetzt tragen wir da mal was realistisches ein, Consumption during Code Execution 100
mA.
Wohlgemerkt, man achte hier auf den Unterschied.
Milliamper.
Das ist ein kleiner Unterschied.
So, Duration of Code Execution 2 Sekunden ist relativ realistisch, 2 Sekunden reichen
dem Ding dicke dicke aus, um zu starten, ich wollte gerade sagen zu booten, aber wirklich
kann man das ja nicht so nennen, wobei offiziell immer noch einen Bootloader hatten, ESP32,
also 2 Sekunden reichen dem Ding dicke, um zu starten, um die Temperatur auszulesen und
per ZigBee zu sticken.
Es ist ja nicht, bei Wifi ist es immer ein bisschen schwierig, bei Wifi musst du ja erstmal
deine ganzen Credentials austauschen, IP-Adresse bekommen und so, Wifi dauert immer ein bisschen
länger, das kriegst du selten unter einer Sekunde hin, aber hier so 2, easy, easy.
So, Sleep Time, Consumption im Sleep Mode, tragen wir mal ein, 16 mA, was der Hersteller
sagt und jetzt, und jetzt passt mal auf, wenn man das Ding alle 2 Minuten aufwachen lässt,
dann hält die Batterie nur 2 Tage 7 Stunden.
Das ist natürlich Mist, so, aber es reicht ja, wenn das Ding alle 4 Stunden aufwacht,
ja, sagen wir mal 4, äh, 2 Seconds sind alle 14.440 Sekunden, äh, ups, äh, 24 Tage, 24
Tage, 24 Tage ist aber auch Kacke, 24 Tage ist aber auch Kacke, das ist halt auch richtig,
richtiger Schrott, ja, aber, jetzt passt mal auf, wenn man das nur alle 4 Stunden einmal
aufwachen lässt.
Da hält's, äh, das ist nicht realistisch, ja, das Ding entlädt sich auch beim Rumstehen
alle, aber das hält einfach mal locker über ein Jahr oder wahrscheinlich zwei, wenn das
im Garten steht, ordentlich, ordentlich wasserdicht.
Und selbst wenn du das hier alles ein bisschen großzügiger, äh, hier auslegst, ja, dass
man mal 20 braucht und so, du kommst da schon drauf, ne, also, sagen wir mal die 800 mAh
Batterie, du kommst halt schon so auf 2 Jahre, wo das Ding an der Batterie läuft.
Das ist wirklich sehr großzügig jetzt alles, ja, das ist nice und sowas will ich mir zusammen
basteln.
Alle 4 Stunden aufwachen, äh, oder alle, ja, alle 4 Stunden aufwachen, Temperatur messen,
ZigBee verschicken und tschüss.
Dazu müssen wir allerdings das Ding erstmal zum Laufen bekommen.
Ich hol jetzt mal die Kiste, wobei, ich hol nicht die Kiste, die Kiste hol ich später,
wir installieren jetzt erstmal die ganze Entwicklungsumgebung und sowas.
Also.
Und das letzte Mal, als ich ESP32 Sachen programmiert hab, könnt ihr euch noch an den Stream erinnern,
wo wir ESP32 und das Display hatten?
Ja, weißt du was das Gute ist, weißt du was das Gute ist?
Naja, nee, ähm, weißt du was das Gute ist, das Board hat sogar Ladeelektronik für Solarzellen
verbaut.
Du kannst den einfach anschließen an die Batterie, lötest, lötest, ich weiß nicht an welche
Pins, die hier.
Man sieht's hier irgendwie, die, die Solarzellen dran und dann kann das Ding sogar über die
eingebaute Ladeelektronik die Batterie chargen mit einem Solarpanel.
Was sagt denn das Datenblatt der Batterie zu Temperaturen unter 20 Grad?
Keine Ahnung.
Wahrscheinlich findet ihr das nicht so geil.
Mal gucken wie lang es hält.
Ich bin, ich bin gespannt.
Und was immer eine Option ist.
Einfach den Kabel zum, das Kabel vom Sensor verlängern.
Und das Ding in den Stall legen.
Da ist dann auch noch trocken zusätzlich.
Theoretisch könnte ich dort einfach auch einen USB Anschluss reinstecken und dann ist
alles gut.
Dann kann sich's per USB Strom versorgen, dann brauch ich den Rest nicht.
Hast du einen Akku bestellt?
Ja, ich hab, ich hab schon seit Jahren hier paar Akkus rumliegen, die ich selten brauche.
Das sind so diese, diese kleinen viereckigen Dinger, diese, die, die, nee, äh, wie heißen
diese Teile denn?
Ähm, diese, ja, diese Dinger hier, genau.
Diese, solche Dinger habe ich hier in unterschiedlichster Ausführung bestimmt sechs, sieben Stück
rumliegen und die brauche ich selten.
Das passt wunderbar auch rein, die Dinger sind klein, die kommen in so eine Box mit,
mit dem Controller rein.
Ich meine, das Ding ist doppelt so groß wie der Controller, aber, who cares.
Ja.
Zumindest jetzt müssen wir erstmal die Entwicklungsumgebung in den ganzen Krempel zum Laufen.
Also, das letzte Mal, wo ich ESP-Sachen programmiert habe, vielleicht erinnert sich noch einer
an den Stream, wo wir das wichtigste Projekt überhaupt programmiert haben, nämlich, man
sieht's hier in der Vorschau, oder?
Ihr seht's schon, glaube ich.
Das wichtigste Projekt überhaupt.
ESP32 mit dem Display drauf.
Ich weiß gar nicht mehr, wofür ich das verwenden wollte.
Das Board?
Ah, für, für, für, für meinen LoRa, für meine LoRa-Experimente wollte ich das Board
verwenden.
Korrekt.
Ich erinnere mich wieder.
Ja.
Aber das habe ich aufgegeben.
Also, es hat funktioniert, aber irgendwie hatte ich nie Bock, das fertig, fertig zu
machen.
Ich sehe da C++-Shit.
Da muss ich schon wieder gleich, aber gut, da müssen wir dann wahrscheinlich auch durch.
Ja.
Also.
Ja.
Aber ja, so.
So, ich versuche aber jetzt das zu machen auf einem Plattform-IO-Programm.
Das Ding ist nur, ich habe gelesen, Plattform-IO unterstützt den ESP32C6 noch nicht komplett.
Die unterstützen, die unterstützen den nur mit, äh, ESP-IDF und dann gibt's auch einige
Probleme, wie man auf GitHub lesen kann.
Ich habe da heute Mittag schon ein bisschen rumgeguckt.
Ich habe da heute Mittag schon ein bisschen rumgeguckt.
Das heißt, wir werden das diesmal sein lassen.
mit Plattform I.O., sondern direkt ESP-EDF verwenden.
ESP-EDF ist das offizielle, Entwicklungsumgebung kann man das nicht nennen,
das offizielle SDK von Espressif, um für das Teil Software zu entwickeln.
Ich habe ESP-EDF schon mal verwendet, vor einer ganzen Weile.
Da war das gar nicht so übel.
Die EDE-Unterstützung war aber Schrott.
Wir haben ein eigenes SIGBI-SDK.
Ach, das ist eine Komponente, ne?
Das ist eine ESP-EDF-Komponente.
Ja, dann ist gut, das können wir gleich integrieren.
Hä?
Ne, ob ESP-Home das schon kann, weiß ich nicht.
Ne, ne, wir programmieren die Firmware komplett selbst.
So, und...
Deswegen machen wir ESP-EDF jetzt manuell, so wie der Hersteller sich das gedacht hat,
ohne Plattform I.O.
Und meine Lieblingskombination ist eigentlich ESP-EDF plus die Arduino-Komponente.
Weil dann kannst du den ganzen Krempel von Arduino verwenden,
was in manchen Fällen doch schon sehr viel angenehmer ist,
als das RAW-C-Only-EDF.
ESP-32-SDK.
Das muss man aber auch erstmal zum Laufen bekommen.
Und das ist in Plattform I.O. auch immer so richtiger, richtiger Krampf.
Und ich habe im Vorfeld schon geguckt,
wir müssen eine Alpha-Version verwenden,
weil der Arduino-Core,
also der, ne, muss ich sagen,
quasi die Arduino-Implementierung für den ESP-32 unterstützt,
erst sein...
...seit der Alpha-Version 3.0,
äh, seit der Alpha-3 von Version 3.0,
den ESP-32-C6.
Das ist also höchst bleeding edge, was wir hier verwenden.
Bin ich mal gespannt.
Deswegen ist es auch gut, dass wir es ohne Plattform I.O. machen,
da ist weniger Krempel dazwischen, der schief gehen kann.
Da bin ich mal gespannt, wie das funktioniert.
Und ich habe im Vorfeld gesehen, da bin ich mal gespannt, ob das taugt.
Es gibt jetzt...
...es gibt jetzt...
...ein offizielles Espressif,
also Espressif ist der Hersteller von den ESP-32-Boards.
Es gibt jetzt ein offizielles Visual Studio Code-Plugin.
Ich bin mir gar nicht sicher, wo...
...ESP...
...getting started?
Ja.
Weiß gar nicht, wo ich es gelesen habe.
Hier irgendwo.
Build your first project.
Genau, hier.
Also, Eclipse-Plugin werden wir schon mal nicht machen.
Nice.
Nicht, falsches, falsches, falsches Emotion.
Entschuldigung, Leute.
Oh mein Gott.
Also, Eclipse, das Eclipse-Plugin werden wir auf jeden Fall, also, auf gar keinen Fall verwenden, ja.
Wir könnten das, wir könnten die VS Code-Extension verwenden.
Oder, was ich ja persönlich bevorzugen würde, ist, wir gucken uns die VS...
Leute, was haltet ihr davon?
Wir gucken uns die VS Code-Extension mal an und gucken, ob die taugt.
Allerdings muss ich sagen, C&C++ in Visual Studio Code...
...geht, aber schön ist es nicht.
Und außerdem muss ich ja mal mein JetBrains IDE, All IDE Package ordentlich ausnutzen.
Und, äh, C-Line installieren.
Oh, fuck!
Der Bug ist wieder da!
Nein, shit!
Der Forever Bug ist wieder da, shit!
Och, der ist schon wieder.
Okay.
Warum, warum?
Warum passiert das manchmal?
Was ist das für ein Schrott, ey?
Und es geht wirklich...
Der Witz ist, das dreht nur auf, wenn ich in der Linux-VM die JetBrains-Toolbox aufmache.
Ich hab echt absolut keinen blassen Schimmer, woran das liegt, was das Problem ist.
Toolchain in Emacs, ja, natürlich, ist klar.
Ja, Stalmon approved.
Leute, klärt mich auf, was ist SE80?
Aber wenn ihr da so eine Ableitung dagegen habt, ist es bestimmt Oracle oder irgendwie sowas.
Hat Oracle eine eigene Idee?
Was ist SEA...
Oh, SAP!
MonkaS!
Da müsste man...
Ehrlich, Leute?
Da lag ich gar nicht so falsch mit Oracle, oder?
Zwar knapp dran vorbei, aber es ging in die richtige Richtung.
Hast du dir mal OTA Flash mit ESP32 angesehen?
Wir haben sogar im Stream schon einen...
Einen OTA-Flasher programmiert, der über HTTPS flashen konnte.
Encrypted.
Muss man im Streamer schiefgucken.
Da haben wir einen eigenen Mini-HTTP-Server gebastelt, der nicht viel mehr konnte, als 200 OK und Text zurückzuliefern.
Aber er konnte TLS-Verbindungen aufbauen.
CLionova ist echt schick.
Probier mal ausklai.
Okay, jetzt PRAGUE, Leute, PRAGUE.
Toolbox starten.
Ich beweg nix.
Ich lass die Finger von meiner Maus weg.
Ich hoffe, meine VM kackt jetzt nicht ab.
Okay.
Wir machen mal nen Update.
Schadet nix.
Und wir ins...
Okay, CLion...
Was ist denn der Unterschied zwischen CLionova und CLion?
Warum haben die zwei?
Ist das quasi CLion-NG?
Wurde der Flash auch stigniert?
Wurde der Flash auch stigniert?
Haben wir Checksum-Überprüfung gemacht?
Wurde der Flash auch stigniert?
Haben wir Checksum-Überprüfung gemacht?
Das weiß ich nicht mehr.
Das weiß ich nicht mehr.
Das weiß ich nicht mehr.
Doch, ja, haben wir!
Klar haben wir das gemacht.
Die...
Ich bilde mir ein, die...
Die Update-Funktion braucht automatisch ne...
Macht automatisch ne Checksum-Überprüfung...
Ich bilde, ich bilde mir ein, wir haben...
Ich bilde mir ein, wir haben...
Wir haben Checksum-Überprüfung gemacht.
CLionova is a preview of CLion, which uses the reshaping...
Wir haben Checksum-Überprüfung gemacht.
uses the ReSharper C++
Rider C++
Language Engine instead of the... Hä?
Warum hat Rider C++... Moment,
Rider hat C++?
Was? Was?
Ach so!
So mit signiert meinst du?
Nee, das glaube ich nicht, dass wir das
gemacht haben.
Man kann mit Rider C++ Projekte machen?
Nee, oder?
Ich trau mich nicht, das Fenster...
Das Fenster...
Nee, kann man nicht.
Okay, wir installieren C-Line Nova.
Also meine Toolbox ist in der VM
echt ziemlich am Abkacken.
Aber erstmal testen wir trotzdem
das Visual Studio Code Plugin.
Weil, wenn
out of the box funktioniert,
ist ja erst schon mal nicht verkehrt.
Aber ich kann mich noch das letzte Mal
an ESP-EDF erinnern.
Das war
auf der Command-Line echt angenehmer
als in der IDE
zu bedienen.
Ich glaube, das liegt an der OpenGL-Implementierung
oder an dem Durchschleifen von VMware.
Ich habe schon manchmal
einen älteren OpenGL-Standard
geforst per Environment-Variable.
Dann ging es besser.
Okay, machen wir mal Firefox auf.
Restoren wir das Ganze wieder.
Machen wir mal hier einen Ordner.
Moment, Temp haben wir doch sicherlich
schon als Ordner.
mkdir-esp32
mkdir-esp32
mkdir-esp32
mkdir-esp32
mkdir-esp32
mkdir-esp32
mkdir-esp32
mkdir-esp32
mkdir-esp32
mkdir-esp32
mkdir-esp32
mkdir-esp32
mkdir-esp32
mkdir-esp32
mkdir-esp32
mkdir-esp32
mkdir-esp32
mkdir-esp32
mkdir-esp32
mkdir-esp32
mkdir-esp32
mkdir-esp32
mkdir-esp32
mkdir-esp32
mkdir-esp32
mkdir-esp32
mkdir-esp32
mkdir-esp32
mkdir-esp32
mkdir-esp32
Machen wir doch.
Abhängigkeiten.
Alter, was ist mit denen los?
Die China-Chinesen, man.
Die wissen, was geht.
Die haben einfach eine Anleitung für Ubuntu,
Debian, CentOS und Arch Linux.
Richtig Gigachats
am Start.
Ich könnte wetten, ich habe den meisten Krempele schon installiert
davon.
Wenn man jetzt noch sein Passwort richtig eingeben könnte.
Was ist HiRedis?
HiRedis.
Minimalist C-Client
for Redis. Okay, das brauche ich unbedingt
für den ESP32. Ganz wichtig.
So.
Was kommt als nächstes? Download
und install Visual Studio Code. Okay.
Das haben wir auch schon gemacht.
Was meint ihr, taugt das Plugin?
Ich persönlich habe da meine
Zweifel, ehrlich gesagt.
Weil die letzten Versuche, die ich damit
unternommen habe, waren
suboptimal,
um es mal schön zu sagen.
So, Open
Extensions.
Und dann sollen wir was suchen?
Ja, ja, bla bla bla.
Search für die ESP-IDF-Extension.
Ich werde erstmal die ganzen...
Okay, das updatet jetzt erstmal.
Reload.
Ja, danach machen wir es, wenn es wirklich totaler Schrott ist,
machen wir es mit JetBrains.
Okay, wir können, glaube ich, mal ein paar Plugins
MonkeySee,
brauchen wir doch nie wieder.
Und SICK können wir mal aninstallen.
Das YAML
lassen wir drauf.
Aber MonkeySee,
ob ich jemals,
noch mal für meinen Garmin was bauen will,
das war doch eher nur just for fun.
Ich wollte das noch nie wirklich ernsthaft benutzen.
Meinung zu SICK in einem Satz.
Die haben eine komische Pointer-Syntax.
Da musste man irgendwie so komische
Dinger machen.
Sowas musste man da machen. War ganz furchtbar weird.
Da musste man Sternchenpunkt
Sternchen machen in SICK für Pointer.
Das hat mich enorm,
enorm verwirrt.
Warum eigentlich C++?
So eine Mischung aus C und C++.
Äh, C++,
weil Arduino C++ ist.
Und ich ganz gerne auf Arduino-Sachen zurückgreife.
Okay, also ESP-IDF-Extension installieren.
Terraform können wir auch mal wieder runterschmeißen, oder?
Terraform...
Ach, kommt vorbei.
Schadet, schadet auch nix.
ESP-IDF.
Gibt es eigentlich ein JetBrains-Plugin?
Nee, aber man braucht dafür gar kein Plugin.
Man kann ja den ganzen Krempel auch per CLI bedienen
und JetBrains dann nur für C verwenden.
Das ist das, das ist das,
was ich eigentlich auch...
Professional Super IDE.
Alles klar.
Okay, ESP-IDF install.
Wie geht's weiter?
Configure ESP-IDF-Extension.
Configure
ESP-IDF-Extension.
Das ist quasi eher so ein Install Wizard, oder?
Was sollen wir dann
choosen?
Express?
Express Advanced.
Ja, Express, komm her.
Select Download Server.
ShitHub?
Äh, okay.
5.1.3 müssen wir verwenden.
Nicht 5.2.1, wir müssen 5.1.3 verwenden,
weil die Arduino-Komponente, glaube ich,
maximal auf 5.1.3 funktioniert.
Das Ganze soll nach HomeMax-ESP installiert werden
und nach HomeMax.expressive.
Python Version, ja, gut, Install, bam.
Haben sie sich ja richtig Mühe gegeben
mit dem Visual Studio Code Plugin.
Wäre es nicht sinnvoller gewesen,
anstatt so ein Visual Studio Code Plugin zu bauen,
irgendein Shell-Skript zum Installieren oder so?
Das ist weniger fancy,
aber simpler?
Okay, ich meine,
dann geht's nicht für Windows.
Welchen Sensor willst du verwenden?
BME 2080?
Nee.
Ich brauche doch keinen BME...
Nee.
Ich brauche einen wasserdichten Temperatursensor.
Ich benutze den hier.
Leute, ich habe heute was in Go gesehen,
oder in den letzten Tagen, nee, gar nicht heute.
Ich habe in den letzten Tagen was in Go gesehen,
da habe ich mir auch wieder gedacht,
also, ein bisschen abfuck ist die Sprache schon.
Zu 80% finde ich es ja noch irgendwie nachvollziehbar
und bei Go kann man immer sagen,
okay, dann schreibt man es halt explizit hin als mit Magic.
Aber heute habe ich wieder was gesehen,
da habe ich mir auch gedacht,
was ist das für ein Schwachsinn?
Während das installiert,
mal so halb Pseudocode-mäßig,
zeige ich euch das mal.
Wenn man in Go...
Wir tun mal so, als wäre es ein Go-File.
Wenn man in Go sowas hier schreibt...
Ah, nix, okay.
Ja, es ist auch...
Wir tun einfach, sind wir in der Funktion drin.
Wenn man hier sowas schreibt,
wenn man eine Vorschleife macht...
Ich weiß die neue Syntax nicht, Leute.
Ist das richtig?
Und dann sagt man...
Irgendwie Max...
Max...
In 64 oder so?
Zumindest...
Ja, das ist...
Ja, das ist...
Ja, das ist...
Ja, das ist...
Zumindest Iterate...
Also so ungefähr.
Ja, so ungefähr sieht das aus.
Ich bin mir nicht ganz sicher, aber ist egal.
Also sprich, wir counten...
Vielleicht muss man auch...
Ich glaube, man muss doch 0.
Punkt oder irgendwie...
Oder wie geht denn das?
Ich schreibe es jetzt einfach mal so hin,
weil ich zu Pepega bin,
Go aus dem Kopf richtig zu können, ja?
Go-Range-Loop.
Okay, also anscheinend nur so.
Also, was Go hier macht, ist...
Das zählt von 0,
bis...
Ja...
Maximum von...
Was in N64 reinpasst.
Und jetzt kommt der Hit.
Leute, ratet mal.
Welchen Typ hat I?
Das finde ich auch.
Das finde ich gut so.
Jetzt kommt der Hit.
Ratet mal, welchen Typ hat I?
Man wird sich denken, ja, N64,
weil wie soll das sonst funktionieren bis N64?
Nein!
Es ist N32.
Es ist N32.
Ja, glaubt ihr mir nicht?
Moment.
Ich kann es euch demonstrieren.
Hier haben wir noch, hier haben wir noch Krempel.
Was ist das denn hier, was wir da am Start haben?
Okay.
Also.
Range.
Vor.
Vor Range?
Okay, nice.
Nicht Collection.
Ja.
In N64 oder...
Boah, wie heißt denn das?
N64.
N64.
In Go, Mann.
Max.
Int.
Max.
Int.
64.
Okay.
I ist vom Typ Int.
Untyped Int?
What?
Was auch immer ein Untyped Int sein soll.
Whatever.
Zumindest ist es definiert, dass die Count-Variable in einer Range-Loop,
das sagt der Go-Standard, immer ein Int sein muss und nie ein Int64.
Das Ding ist...
War es so?
Ne, das geht nicht.
Da ist er, das ist ja nur...
Moment, weil?
Hä?
Ne.
Was ich mich frage ist, was passiert, wenn man bei Max Int 32 angekommen ist?
Guck, war Int.
Seht ihr das?
Crasht...
Ich habe keine Ahnung, was passiert.
Ich gehe davon aus, es läuft einfach über und fängt wieder von vorne an.
Oder von unten an.
Würde ich jetzt mal vermuten.
Ich würde vermuten, dass Overflow ist.
Gut.
Es ist aber witzig, dass das funktioniert.
Und es ist auch witzig, dass Max Int 64 nur ein Int ist.
Also entweder habe ich was ganz grundsätzlich falsch verstanden,
aber damit hatte ich letztens Probleme,
weil ich ein Int 64 als Index verwenden wollte und er das nicht wollte.
Also wir können es ja mal ausprobieren.
Ja?
Überlegt mal.
Map.
Ach, Go, Alter.
Dieses Go-Syntax ist teilweise so abartig, ich kann mir den Scheiß einfach nicht merken.
Hier.
Int 64, String oder so.
Hier.
Var, Blub, gleich, Make.
So ging das doch, gell?
So.
Blub ist quasi jetzt ein Dictionary mit KeyInt und einem Value String.
Und jetzt passt mal auf.
Wenn ich jetzt versuche...
...das hier als Index zu verwenden...
...sagen wir hier fnt brindeln...
...dann funktioniert's?
Sicher?
Weil ich hatte ein ähnliches Problem und da ging's nicht, weil Int...
...kein Int 64...
Ach, Moment.
Ja, doch.
So rum funktioniert's ja logischerweise, weil ein Int 32 logischerweise immer in Int 64 passt.
Was habe ich denn dann letztens...
Aber es macht trotzdem noch keinen Sinn.
Egal.
Wir verhalten uns jetzt nicht mit...
Zumindest macht's an der Stelle keinen Sinn, dass es ein Int ist.
Wenn man ein I nicht braucht, schon, aber...
Wenn man ein I braucht?
Ach ja, und wenn ich jetzt eine Range mache über meine Map, die ich eben hatte, dann
ist es ein Int 64.
Okay.
So.
Wo sind wir stehen geblieben?
Eigentlich wollten wir uns mit dem ESP 32 auseinandersetzen.
Ja, aber das ist nicht nur in Go so.
Das ist nicht nur in Go so.
Das ist...
Wie heißt das Ding?
Ähm...
I triple I floating point gedöns...
Ich weiß nicht, wie das Standard heißt.
Ja, genau.
754.
Das klingt gut.
Das stimmt wahrscheinlich sogar.
Ja, äh, nee.
Ja, doch.
Ja.
Dort, wo es sowas wie...
Ja, genau.
Dort, wo es sowas wie...
Ja, genau.
Dort, wo es sowas wie...
Ja, genau.
Ja, genau.
Ja, genau.
Ja, genau.
Ja, genau.
Ja, genau.
Ja, genau.
Dort, wo es sowas wie negativ unendlich und positiv unendlich gibt und solche Dinger.
Also, wie geht's denn jetzt weiter?
ESP 32.
Bam.
Express haben wir gemacht.
If you choose express mode, haben wir, haben wir, haben wir, haben wir alles gemacht.
Haben wir auch.
Download ist fertig.
Manual configuration.
All settings have been configured.
ja ok basic usage show example projects ich meine das ist ja cool dass sie das hier alles
eingebaut haben aber ok hello world example das schadet nie was warum muss so was unbedingt über
visual studio code laufen man was schau link nene wir wollen nichts blinken lassen hallo world
reicht mir alter das ist ja mal das ist ja mal hardcore kompliziert über visual studio code zu
zu set up weißt du was scheiße auf visual studio code wir machen es jetzt über die command line
guck ob ich das noch auf die reihe kriege das war irgendwie idf ach so in welchem ordner hat
er den krempel jetzt überhaupt installiert
esp da stand doch new project ja aber dann das ganze geklinge hier da trist ja durch bei
aus irgendwelchen gründen hatte die extension nicht mehr oder new project enter project name
open ocd configuration files was ist denn open ocd ach das ist debugging krempel oder
ja
komm das mit nee das ist mir zu weird champ ich mache das über command line da da drehst du
da drehst du doch durch hier bei die haben doch irgendwo example projekte esp idf getting started
ich habe das schon mal gemacht das ist lange her hier start project start a project und linux und
windows hier da steht es doch also wir müssen in das example projekt idf path so wo ist das
ganze installiert hier also cp sp sp edf und gibt es da jetzt einen projects example oder sonst
was mit der irgendwas mit example hier example getting started was soll man kopieren getting
started hello world ja perfekt packen wir doch noch hier rein dann sind wir am start hello world
So, und das öffnen wir jetzt, komm, scheiß auf, wirst du das so gekonnt, und das öffnen wir jetzt in CLion, CLion ESP-IDF, ah, guck mal, die haben da auch was, was, Install, achso, ne, das ist wie man den Kram installiert, ja, das haben wir ja schon gemacht, Menü-Config, das können wir dann machen, oder, ah, man muss doch Environment-Variablen exportieren,
okay, wo ist das, Export, boah, Alter, mein Kopf platzt, was, oh, Moment, jetzt, jetzt, blinke ich nicht mehr durch, das ist wahrscheinlich auch der Grund, warum es kein IDF-Command gibt, also, was muss ich exportieren, ESP, IDF, Export.sh, gibt es da sowas, Export, but, ah, das Script should be sourced, okay,
ah,
jetzt hat er auch die Dinger gesetzt, und jetzt funktioniert das auch, oder, IDF, äh, Python-Build, ja, äh, einfach mal 902 Source-Files bauen, alles klar, let's go, why not, aber immerhin, also, das ging deutlich, deutlich, extrem viel einfacher, als meine letzten Versuche mit ESP-IDFF, Command-Line-Beste hier, so,
und jetzt, wo kann man jetzt einstellen, was man für ein, Set-Target, ah, hier, Set-Target, ESP32, ESP32, C3, C6, ne, C6, ups, 900 plus Files für Hello World, ja, das ist fast wie JavaScript, ja, aber gut, der muss halt sein ganzes SDK einmal kompilieren, halt viel, auch, ob das brauchst du oder nicht,
okay, Set-Target, ESP32, C, darf man das nachträglich noch ändern, wenn man schon mal gebildet hat, anscheinend, okay, nice, ich hab nix gesagt, Compile Magic, hat funktioniert, Menü-Config, ja, das machen wir dann, da kann man dann zig, zig Sachen einstellen, okay, Configure, ESP, CMake-Project in C-Line,
also, wir sollen das einfach öffnen, wenn ich das richtig, richtig sehe, C-Line, wobei, wir öffnen das mal lieber so, was haben wir denn hier noch offen, ach, das war, wo wir Advent, äh, Advent of Code mal in C++ probiert haben und ich so gekotzt habe, dass ich aufgehört habe, ja, Open, Moment, wie hieß das, wo war, wo hatte ich das, Temp, ESP32,
Hello World, Open, Trust, kannst du überschreiben, okay, Projekt ist auf, ähm, ne, Bild mach ich über Command-Line, ich brauch hier kein Bild, okay, was soll ich, was soll ich machen, Source the Environment, Go to Settings, Toolchain, Toolchain, Settings, hä?
Was wollen die von mir? Add Environment soll ich anklicken, ach, hier, Add Environment from File und da soll jetzt das Export rein, also, quasi, äh, nicht wirklich, ähm, hab ich das hier oben irgendwie, ach, hier doch, ist es doch und das funstern einfach so?
Ey, das ist um Längen einfacher geworden, wie das letzte Mal, das letzte Mal ist schon vier, fünf Jahre her und vier, vier Jahre her bestimmt und das war richtig abfakt, das zum Laufen zu bekommen.
Okay, das war's jetzt, oder was? Und jetzt, Main, Hello World, Punkt C und der erkennt jetzt alles, oder was? Ne, der erkennt nix, das wär ja auch zu einfach gewesen.
Ne.
Uncomplete und sonst was.
Ich, ich, ich mach das nochmal zu und wieder auf.
Ups, nochmal Visual Studio Code.
Reloaden das nochmal, vielleicht geht's dann.
Ich will kein Profil.
Ne, das ist, das ist broken.
Das macht einfach gar nix an der Stelle.
Hab ich irgendwas vergessen?
Toolchain.
Ne.
Vielleicht, vielleicht ist Nova noch ein bisschen verbuggt und deswegen funktioniert das nicht?
Reset Cache, ja, okay.
Reset Cache, hat er schon gemacht.
Ne, gibt kein Autocomplete und nix.
Das ist natürlich ein bisschen doof.
Dann, muss ich einmal ein Bild machen, vielleicht, ja.
Bild, aber hab ich ja schon.
Äh, ich glaub nicht, dass es, äh, ich glaube, das liegt hier an, an Nova, oder?
Ja.
Unten steht Context Loading, wo?
Hier, ja, der, der lautet nix.
Resolve Context.
Ja, ich glaube, da ist, ich glaube, da ist irgendwie noch kaputt.
Was heißt hier oben off?
Ja, ich glaube, ich glaube, das ist noch ein bisschen kaputt, kann das sein?
Wir installieren einfach mal normales C-Line und gucken, wie es da ist.
Ne, das Endscript hat ja funktioniert.
Ich trau mich nicht, das anzuklicken.
Komm, wir machen das normale C-Line.
Weil, ich glaube, das ist noch kaputt.
Weil, ich mein, zumindest ein bisschen Autocomplete und sowas ist schon nicht, ist schon nicht verkehrt.
Setup Emacs.
Alter, hört mir mal auf, man.
Emacs hab ich Jahre nicht mehr verwendet.
Ich hab auch nicht wieder vor, damit jemals was zu machen.
Okay, Exit.
Normale C-Line starten.
Do not import settings.
Okay, Open.
Max.
Temp.
ESP 2.
Wenn man das auch richtig schreiben kann.
ESP 32.
Hello World.
Hello World.
Okay, wir trusten.
Ach, hier ploppt es jetzt gleich auf.
Environment from file.
Zack.
Next.
Aber er hat das, er hat ja den Kram.
Guck mal, wenn ich da Mist reinschreibe.
Ja, ja, dann geht's auch kaputt.
Next.
Add profile debug.
Ich lass das hier auch mal weg und gucke, ob's dann funktioniert.
Okay, Main.
C.
Ah, ja, das sieht schon besser aus.
Okay.
Das scheint mir irgendein Problem mit Nova noch zu sein.
Font.
Erstmal das Allerwichtigste.
Ja, Jetbrains Mono soll mir recht sein.
Ein bisschen größer, wenn's geht, ja.
18.
Ah, da erkennt man wenigstens was.
Also, das hat schon mal funktioniert.
Jetzt können wir hier C++-Stells verwenden.
Welcher C++-Standard ist da eigentlich jetzt angesagt?
Gibt es irgendeine?
Irgendwie die Möglichkeit, in C++ selber auszulesen, was für ein C++.
C++, ähm, ein C++-Version.
Standard, Standard.
I'm using.
Okay, ja.
How to, das ist zwar, das ist zwar 14 Jahre her, aber das ist C++, da gibt's das immer noch.
Underscore, Underscore C++.
Obviously.
Weiß doch jeder.
Und das steht bei mir auf, auf gar nix.
Nice.
Ach, Moment, das ist ja auch kein C++-File, das ist ja ein C-File.
Moment.
Wie stell ich das jetzt um auf C++?
Kann ich hier sagen, Main?
C-U, C-U-H?
Was ist denn das?
C-U?
Was ist das für ein File?
Ach, CUDA-Kram.
Okay.
Main?
Main?
Add to Targets.
Ey, mach lieber nicht an meiner CMake-Config rum, das magst, äh, okay, just C++-Things,
ich hab keine Ahnung, was das hier sein soll, warum das da und weshalb.
Klar ist so ein Kack da, geh mal fort.
Ich will einfach nur wissen, achso, nee, wie heißt der Kram hier jetzt?
Void App Main.
Okay.
C plus...
Moment, Main.
H?
Was zum...
Alter, geh weg.
Delete.
Main.
C++.
Genau.
Perfekt.
So.
C...
Hier.
C++.
Steht auf welcher Version?
Wat?
Okay, muss ich den Kram jetzt da noch rüberkopieren?
Was?
Cannot...
Warum nicht?
Warum kann er das nicht auflösen?
Ich will wissen, welche C++-Version ich verwende.
Okay.
Ja.
Wir machen mal das...
Die Anleitung.
Die Anleitung weiter.
Ja.
Also das, das haben wir hier schon.
Build a Project.
Flashdown, aber das brauchen wir nicht.
Das mach ich über CNI.
Doch, das ist bestimmt...
So.
Das hier weg.
So.
Getting started.
Das haben wir kopiert.
Connect your device.
Das brauchen wir...
Das mach ich dann, wenn wir den Kram eingehen.
So.
Set target.
Das hab ich schon gemacht.
Set target.
Set target.
Moment hier.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Set target.
Get 있p32c.
Haben wir schon gemacht.
Ah!
Vielleicht muss erst mal manuconfig machen.
Das kann natürlich sein.
Da muss man dann so Dinge einstellen, wie...
Ja...
Was...
Was muss man standardmäßig einstellen?
Ehrlich gesagt fällt mir gar nicht so viel ein.
Die...
Die Flash-Size.
Die könnten wir standardmäßig einstellen.
Isp 32c6.
Was hat denn das Ding?
Für eine Flash-Size. Ja, die Konsolen.
Das lasse ich default.
Flash.
Flash-Size. 4 MB. Okay.
Oh, nices
Encurses-Interface.
Okay, was gibt es hier alles?
Gibt es das Ding eigentlich auch im Moment?
Da gucken wir jetzt mal, ob es den Kram
jetzt auch in Visual Studio Code gibt.
Eventuell ist das hier
in Visual Studio Code ganz nice zu benutzen
als Plugin.
Menu-Config? Ah, gibt es
natürlich auch. Nice.
Äh.
Aber Error irgendwie.
Gut, dass ich das über Command-Line mache, Leute.
Gut, dass ich das über Command-Line mache.
Du hast kein Projekt
angelegt? Na klar, hier.
Ich habe sogar den Ordner offen mit dem Projekt drin.
Moment.
Der guckt im falschen Ordner.
Der guckt im falschen Ordner.
Ähm.
Kann man das nicht sagen?
Kann man das nicht sagen?
Open diesen Ordner.
Open Folder.
ESP32. Hello, World.
Menu-Config.
Ah.
Oh, guck mal da.
Okay, das ist vielleicht schon ein bisschen
besser.
Jetzt habe ich diesen doofen VS Code-Ordner, man.
Das ist dann schon ein bisschen besser,
glaube ich, hier. Wobei, Leute,
was meint ihr, was mich
weniger nerven wird?
Das Encurses-Interface
oder Visual Studio Code?
Bin ich unschlüssig?
Beides wird mich nerven.
Okay, ja, ich wollte Flash-Size einstellen.
Okay, hier kann man oben suchen.
Flash-Size 2 MB.
Wir haben 4 MB.
Was?
Okay, ich meine von der Idee her.
Was gibt es hier alles zur Auswahl?
Bootloader-Config juckt mich so überhaupt nicht.
Kann man hier drinnen auch suchen?
Ah, vielleicht. Guck mal hier.
Prozent.
Flash-Size.
Naja, das ist eklig.
Das ist...
Da finde ich schon gar nicht...
Ach doch, das erste.
Flash-Size.
Hier.
Ah, Serial-Flasher-Config.
Da hätte ich selbst drauf kommen können,
dass das da drunter steht, oder?
Easy.
Okay, und jetzt, dann machen wir das...
Komm, wir machen Visual Studio Code jetzt komplett zu.
Und jetzt sagen wir Save.
Alter, wie lange?
Save denn das?
Ach nee, das...
Man muss einfach Enter drücken, dann ist es fertig.
Quit.
Alles klar.
So.
Kann ich jetzt nochmal bilden?
Okay, erstmal 925 C++-Dinger übersetzen.
Und jedes Mal neu. Easy.
Weil es geht.
Okay, gut.
So, okay.
Dann hole ich doch jetzt mal.
Dann hole ich doch jetzt mal eine Box mit dem Controller drin.
Und pack den mal aus.
Nice Packaging für so ein kleines Scheißding.
Muss man sagen.
Also, drin in der Box.
Ich habe heute keine Kamera und ich habe keinen Bock hier die GoPro aufzuhängen und das Ringlicht anzumachen.
Man sieht eh nichts.
Man sieht eigentlich nur, dass ich dieses Ding hier auspacke.
Ja, genau so sieht es auch aus in echt.
So.
Es wird geliefert.
Eigentlich.
In einer nahezu leeren.
Karton.
So kleinen Schachtel.
Aus Pappe.
Das einzige, was dabei ist, ist.
Zwei Pinheader.
Für da und da.
Das war es.
Mehr ist nicht dabei.
Bei dem anderen ist eine Plastiktüte.
ASMR-Video.
Nee, noch nicht.
Und eine Plastiktüte.
Warum das nochmal in einer Plastiktüte drin ist, weiß ich auch nicht.
Plastiktüte mit dem Board drin.
Boah.
Alter.
Boah.
Die geht kaum auf.
Okay.
Aber USB-C-Anschluss.
Schon mal nice.
Jetzt brauche ich einen USB-C-Stecker.
Und jetzt machen wir mal.
Blum, blum, blum, blum.
Den Computer dran.
Und dann grillst du meinen USB-Controller.
Oh, da ist eine LED drauf.
Die blinkt, Leute.
Schauen wir doch mal gerade, ob sich das Ganze auch USB-mäßig angemeldet hat.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
Ja.
Wir haben erkannt einen Espressif USB Serial Debug Unit auf TTY-ACM Null.
Obviously.
Was?
Auch sonst.
OK.
ESP?
Cai.
Gibt es sowas wie Monitoring oder Monitor oder Serial oder sowas?
Clean?
Bläh, Flash brauchen wir dann.
Was ich damit vorhabe,
einen Temperatursensor für meinen Fischteich zu bauen.
Der über Zigbee
die Temperatur schickt.
Debug UI im Browser.
Leute, debuggen. Ich glaube, es geht los.
Da wird Printf
debuggt, sonst nix.
Monitor.
Okay. Also,
ESPF Monitor.
Da muss man jetzt bestimmt noch,
wie hieß das Ding, ACM?
Irgendwas. Ah, ich hab's mit da hier.
Doch, ich hab's mal kopiert.
No ports found.
Yeah.
Minus minus help.
Oh, Gott.
Port
Def
TTY
ACM 0.
Was?
Stimmt, es kann sein, dass ich nicht in der richtigen Gruppe bin.
Ich bin nicht in der richtigen Gruppe.
Ich bin nicht in der richtigen Gruppe.
Ich muss
in UUCP rein.
Da bin ich garantiert nicht drin.
Punkt.
Permission denied.
Die Fehlermeldung ist natürlich ein bisschen doof, aber
das möchte er mir bestimmt sagen.
Und jetzt die große Frage, Leute.
Add user?
Oder user add?
User add.
User add UU
ID. Max.
War das doch add user?
Ich weiß, dass es mit user mod geht.
Aber es ging mit user add oder add user
ging das auch.
Und ist ja doof.
Und wisst ihr, was die richtig coolen Leute machen?
Die machen das gar nicht mit irgendwelchen
Tools. Die gehen in etc.group
und suchen sich das raus
und schreiben dann
den User hinten dran.
Bam.
So machen das die
richtig. Alles andere ist
bloat.
Wer benutzt schon
ne?
Leute, Command Line Tools.
Wenn man das auch mit Wim machen kann.
Ich fürchte aber, ich muss jetzt re-loggen.
Oder kann ich, kann ich ich selbst werden?
Dann funzt das nämlich, glaube ich.
Ja.
Was ist das?
Wait a minute.
Ich kann das Ding ketten und da kommt
der Output raus?
Ich brauche dieses komische IDF Monitor Zeug gar nicht.
Das ist definitiv neu.
Das ist neu.
Das ging früher nicht.
Ja, das ist ja mega.
Da brauchen wir den ganzen
Kram gar nicht. Lassen wir einfach hier oben
immer ein Monitor laufen. Fertig.
Ja, easy.
Das war jetzt Zufall, dass das funktioniert.
Also, dass ich das rausgekickt hab.
So, Bild.
Äh, warte mal.
Oh, kurz zu.
TMP.
ESP32. Hello World.
Bild.
Bild.
Äh, Export.
Bild.
Und jetzt Flash.
Wahrscheinlich einfach nur.
Okay, Flash.
Bam.
Okay, B.
DEV.
Äh, das ist nicht B.
Sondern.
Äh, P meine ich nicht B.
A B gibt's auch.
P.
Äh, wollte ich eigentlich auch schreiben.
Ach so.
Ja.
Weil ich ja noch nicht
meine Berechtigung refreshed.
Ich müsste mal re-loggen für meine Berechtigung.
Achso. Ja. Weil ich ja noch nicht meine Berechtigung refreshed.
Ich müsste mal re-loggen für meine Berechtigung.
berechtigung export okay jetzt geht es bestimmt mit dem flaschen auch so aha port ist in use
guck mal hier oben hat er hat er auch schon kann man okay wir brauchen noch mal kurz menü konflikt
brauchen noch mal menü konflikt weil ich glaube man kann den port setzen den er verwenden soll
serie flasher konflikt wo setzt man den port seht ihr irgendwie irgendwo was dort dort könnte
man das setzen da da da man kann das doch garantiert irgendwo irgendwo hardcoded reinschreiben dass
er immer immer das nimmt ohne dass man das angeben muss oder die df menü konflikt set
series
ja gut dann gehen wir es halt an das haben wir ja baut monitor baut raid ja
man am monitor suchen das ist ja mal aber nicht er findet man da nix hier drin wo könnte wo
könnten das sein hier da nicht da bootloader auch bestimmt security features auch nicht
ab gut rum serial flasher konflikt wo sonst oder compiler options vielleicht komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
komponent
Ja, was könnte man da suchen?
Doch, wie das Code verwenden.
Driver Configuration.
Boah, ey, da raste ich.
Ne, ne, ne, da raste ich aus.
Ich geb das jetzt, ich geb das jetzt weiterhin an.
Dev Tutorial.
So.
Flasht der jetzt?
Ah.
Ne.
Also, es ist auf jeden Fall interessant, dass ich das einfach ketten kann.
Jetzt, jetzt nicht, weil er gerade flasht.
Muss ich vielleicht, muss ich vielleicht resetten?
Muss ich, muss ich Reset drücken oder sowas, dass der flasht?
Mal hier.
Ah.
Okay.
Er flasht.
Flashtchamp.
Man muss da einmal Reset drücken.
Vielleicht, vielleicht, dass der Initial mal in, in den Flash-Modus kommt.
Und warum bricht es jetzt ab?
Okay, ich glaube, ich muss doch.
Steht da was von Restarting in?
Ja, das kommt da.
Okay.
Muss ich da vielleicht ein Tail oder so drauf machen?
Ja.
Tatsächlich.
Guck mal, das funzt.
Jetzt flashen wir nochmal.
Was passiert dann mit dem Tail?
Das kann man einfach offen lassen.
Ey, das ist ja Premium.
Guck mal.
Das Tail connectet sich einfach neu, nachdem man geflasht hat.
Ist ja viel einfacher.
Guck mal hier.
Hello World, this is ESP Chip 1 CPU Core, WiFi, Bluetooth, ZigBee.
Sehe ich das richtig?
Das hat das Ding, hat das Ding mehr Speicher als der alte ESP32?
Ich meine, ich vermute mal,
dass der 512, 512K hatte.
ESP32 Memory Size.
Was hat denn der gehabt?
Okay, der hat sogar ein bisschen, sogar ein bisschen.
C6.
Okay.
Das ist der Flash-Speicher.
Seht ihr hier irgendwas?
Memory Size?
Ja, 505, okay, minimal, minimal weniger, glaube ich, als der ESP, der alte ESP32.
Wobei der alte, der alte ESP32,
ist von der Hardware immer noch schneller.
Aber nicht, dass es da irgendwie, dass es das irgendwie bräuchte, ja.
Okay, als nächstes müssen wir irgendwie gucken, wie wir da Arduino reinkriegen.
Also, es läuft.
Wie, ja, okay, machen wir das hier mal weg.
Ganze blub, blub, kommt mal hier weg.
Und wir stellen das jetzt mal um, auf meine Main C++ Geschichte.
Wie kriege ich den jetzt dazu gebracht,
dass er nicht hello world main.c ausführt,
sondern main.c++?
Muss man da in die CMake-Config rein, oder?
Ich habe da überhaupt keinen Plan von.
What?
Add main to CMake-Project?
What?
Kann ich hier einfach reinschreiben, main.cpp?
Also, dieses Build-System ist ja schon wirklich wie aus dem letzten Jahrhundert, ey.
Und ich habe mir sagen lassen, CMake ist der, ist der angesagte Scheiß in C++.
Aber das, ja, ich meine, C++ ist halt das meiste Schrott.
So, Build.
Puddeln ja auch noch mit Header-Files rum den ganzen Tag.
Funktiert das jetzt?
Oh fuck, das ging nicht, weil undefined reference to app main.
Hä?
Da ist es doch.
Undefined reference?
Lass uns doch mal das, das getting started angucken.
Konfiguriert, das haben wir gemacht.
Build a project, flash onto device.
Muss das, muss das vielleicht...
Ich habe eine Idee.
Der findet app main nicht.
Könnte das daran liegen, dass C++...
...die Funktion randomized beim Kompilieren den Namen...
...und man das dem irgendwie abgewöhnen muss?
Stop C++ from randomizing function names.
Oh nee, wie heißt, wie heißt denn das?
C++ macht doch so komischen Shit beim Kompilieren, dass die Funktion anders heißt.
Und er findet bestimmt seinen Einstiegspunkt nicht, wenn es ein C++-File ist.
Oh, wie nennt sich der Kram denn?
Compile function names.
ESP, EDF, C++.
Support C++.
EDF...
Wat?
Stimmt, in welchem Standard wird das eigentlich kompiliert?
Ja genau, Friedrich Merz, das meine ich.
Ach hier, guckt mal. Combining C- und C++-Code in order for C++ function to be callable from C...
...extern C.
Ah ja.
Das macht bestimmt das, was ich mir gedacht habe.
Gerade mit dem, dass die Namen gleich bleiben.
Easy.
Build complete.
Org.
Nice, hat funktioniert.
Dann flashen wir es doch gleich mal.
Kann man eigentlich auch flash einfach so machen?
Ich geb trotzdem den Port an.
Guck mal, hat gefunzt.
Ja.
Returning von App...
Ja gut, da ist ja auch nix drinne.
Klar, dass du da returnst.
Können wir Printf oder sowas machen?
Ne, da muss man... Was muss man includen?
Include?
Moment, das ist...
Ähm...
Printf?
Das funzt bestimmt so nicht hier, Keckel.
Das wäre zu einfach, wenn man da einfach Printf machen könnte, oder?
Das geht?
Das geht einfach.
Man kann einfach Printf schreiben.
Und da macht er eine Ausgabe.
Easy.
Easy as fuck.
So, jetzt die große Preisfrage.
Wie kriege ich die aktuelle Arduino-Komponente da rein?
Arduino.
Ich suche in C++-Shops.
Ich würde im Leben nicht arbeiten wollen.
Und täglich was...
C++ machen wollen, dann kriege ich ja Anfälle.
Also, Donut haben wir gemacht.
Haben wir gemacht.
Create a new folder called Composites.
Components.
Okay, mkdir components.
Da macht er ja hier schon.
Gucken wir mal, ob ich es richtig geschrieben habe.
Ja.
Lieber Windows oder C++?
Das ist eine schwierige Frage.
Die kann ich nicht beantworten.
Es ist beides unglaublich scheiße, wenn man das den ganzen Tag benutzen muss.
Also, ich meine, ich benutze Windows den ganzen Tag über.
Aber halt nur für Sachen, wo Windows ganz brauchbar ist.
Puh.
Äh, ich sag mal Windows.
Weil bei C++ drehe ich auf jeden Fall durch.
Ja.
Haben wir am Anfang des Streams uns angeguckt.
Und festgestellt, dass Arch Linux so aktuell ist, dass sie es schon wieder gepatcht haben.
Okay, also jetzt klonen wir das Arduino da rein.
Dann geht man in Arduino, sagt submodule init.
Alter.
Was für ein riesen Repo ist denn das bitteschön?
C++ ist auf Windows sogar einfacher.
Es mag vielleicht manche Sachen einfacher sein.
Aber allein schon, dass du permanent unter Windows entwickeln musst, ist garantiert nicht einfacher.
Allein schon, allein schon das hier.
Terminal auf, gesplittet, oben was, gucken unten.
Mach das mal unter Windows.
Mit einer angenehmen Shell.
No chance.
Das fängt schon an.
Alter, was für ein riesen Repo ist das denn?
Was ist denn da alles drin?
Der hat schon ein halbes Gigabyte runtergeladen gerade.
Und ist erst mal 30 Prozent.
Was lädt der da runter?
Passt wie bei JavaScript.
Erst mal 40 Gigabyte Node-Modules.
Shit ist ordentlich am rödeln.
Ja, der meint im Hintergrund irgendwas.
Vielleicht, vielleicht ist es ja die XZ-Tools Remote Code Execution, wobei ist es ja gar nicht.
Je nachdem, mit SSH in Kombination.
Vielleicht benutzt es ja XZ-Tools und ich werde gerade Hackerman.
Chat, wer von euch ist es?
Stimmt, ich sollte das vielleicht klonen ohne die komplette History.
Das wäre deutlich sinnvoller.
Anstatt das komplette Repo zu klonen.
Aber was machen die da rein, Mann?
1,2 Gig?
Und ich mein, der lädt gerade mit, mit, ja, 10 MB die Sekunde.
Das ist ja nicht mal, dass der langsam laden würde.
Muss schneller als USB-Sticks früher billige transfert haben.
USB-2 waren so ungefähr 25 MB die Sekunde.
Maximal.
Und die China-Chinesen-Sticks sind eingebrochen nach, nach 10 Sekunden.
Also ich bin echt schockiert, was da alles drin ist, ey.
Ich will jetzt auch nicht abbrechen und nochmal neu klonen.
Okay, Leute, wir gehen auf die Zielgerade zu 90 Prozent.
92, 93, jetzt gibt er Gas, 97, jetzt, jetzt, jetzt ist er aber.
Kaum noch zu halten.
Please don't commit any binaries.
Ja, da haben die keinen Bock, sich dran zu halten.
Da hat einer sein, da hat einer sein Webcam-Archiv wahrscheinlich committet aus Versehen, ha?
Okay, wir haben es runter, ja, jetzt CD.
Dann Submodules init.
CD, eins wieder, zwei nach oben, okay.
Und jetzt Menu-Config, nochmal.
Okay.
Und jetzt?
Ach, jetzt kann man das, jetzt kann man hier Component-Config Arduino machen.
Arduino, äh, äh, kann man nicht.
Muss ich vielleicht noch Build machen vorher?
Build?
Ich meine, vorher waren es 925 Files.
Und jetzt sind es?
Postchamp?
Äh, hat der jetzt, hat der jetzt Arduino?
What the f...
What?
Ah, ESP Arduino requires was?
Free, Free TOS?
Ah, nee, Free RTOS, okay.
Monka RTOS.
Hallo, nein, nein, nein, nein, ich will Menu-Config machen, nicht Build.
Äh.
Wait a minute.
Warum kann ich Menu-Config...
Moment, Moment, Moment, Moment.
Ich bin jetzt, ich bin deadlocked, quasi.
Ich muss Menu-Config öffnen, um das zu fixen.
Aber ich kann Menu-Config nicht öffnen, weil das das Problem hat.
Ups, falscher Knopf.
Jetzt, okay, jetzt hat es mich kaputt gemacht hier.
Mein Projekt.
Vielleicht, vielleicht kann, okay.
Wir löschen das einfach nochmal.
Wir löschen, nee, nee, nee, wir löschen das jetzt einfach nochmal.
Oh, nee, ich lösche das nicht.
Moment, ich benenne den Components-Ordner um.
Ich benenne den Components-Ordner um.
Okay, okay.
Ha, close, close.
Weil sonst hätte ich es fast gelöscht.
Und nochmal, und dann hätte ich nochmal neu...
...dann runterladen müssen.
Okay, Menu-Config.
So, und was?
Riertos Clock?
Nee.
Was, mit Herz oder so?
Ah, hier.
Nee, was musste, jetzt habe ich es vergessen, ey, was?
Was musste hier?
Doch, Riertos Herz.
Riertos Herz.
Riertos...
Okay.
Whatever das auch immer macht jetzt, aber...
...alles klar.
Okay, und jetzt kann ich das wieder umbenennen in Components.
Und jetzt darf ich ein Bild machen, oder?
Pregel, Pregel.
Ah, jetzt sind es auch 1307 Dateien, die kompiliert werden müssen, logischerweise.
Weil es ist ja, es ist ja mehr.
Oh, was haben wir hier?
What?
Warnings.
Please keine Errors.
Warnings sind mir egal.
Build complete.
Easy.
So, was will der hier?
Warning.
Please call Menu-Config, then TLS enable pre-shared key cipher suites.
Äh, wahrscheinlich für, für Wifi und sowas, hä?
Das lassen wir erstmal aus, das brauchen wir jetzt nicht.
Okay.
Dann können wir doch mal checken, ob Arduino jetzt funktioniert.
Hier.
Setup, Loop oder Using App Main.
Wir usen App Main.
Okay.
Include Arduino.
Also, finden tut das schon mal nicht.
Mal gucken, ich bin mal gespannt.
Aber das, mal gucken, ob er das checkt.
Äh, mein Auto complete ist wieder kaputt, oder?
Der erkennt das nicht.
Okay, geht das jetzt?
Build complete.
Also, sag mal so, C-Line checkt es nicht?
Kann das sein, dass C-Line irgendwie nicht meine...
Dass er die, die, die Fahne und so nicht findet?
3H Setup, ja, das ist normal.
Also, readme und den Scheiß brauchen wir schon mal nicht.
Manage compo...
What?
Was zum...
Leute, ich will einfach zwei Dateien löschen.
C-Line, geh mal nicht auf den Keks, äh.
Wo ist denn...
Ey.
Wo hat er denn...
Delete.
Eigentlich save, delete.
Einfach löschen.
Kann das sein?
Dass man das nochmal öffnen muss?
Warum platt...
Weil Plattform.io das noch nicht unterstützt.
Da ist, äh, der C6 eh schon...
Neu?
Ist das sinnvoll?
Ach, jetzt erkennt das.
Okay.
Alles klar.
Man muss das einfach nochmal neu laden.
Ähm, weil Plattform.io das Ding, äh, nicht richtig unterstützt.
Die C6-Unterstützung ist noch sehr neu.
Und die Arduino-Komponente kann das noch gar nicht.
Das ist...
Da, da mussten wir auch extra eine Alpha-Version installieren von.
Ansonsten mach ich auch ganz gern Plattform.io.
Wobei mir C++ in Visual Studio auf den Keks geht.
So finde ich das gar nicht so schlecht.
Okay.
Init Arduino.
Da können wir doch gleich schon mal was sagen.
Serial.
Beginn.
Was hat denn der standardmäßig eingestellt?
Machen wir einfach...
Keine Ahnung.
While.
True.
Inspect Endless Loop.
Ne.
Serial.
Brinden.
Kegway.
Okay.
Perfekt.
Build.
Okay.
So.
Build.
Ah, ne.
Wir können auch gleich sagen Flash.
Ähm.
Wait a minute.
Jetzt mal...
Jetzt...
Also, jetzt bin ich...
Jetzt bin ich...
Jetzt fällt mir grad was auf.
Warum kann ich überhaupt mit TAIL das Ding hier aufmachen?
Also, früher war das immer eine serielle Verbindung, wo Boutrade und das ganze Zeug eingestellt
werden muss.
Ist das jetzt keine?
Klar ist das nicht.
Aber...
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Klassische...
Seriell Verbindung mehr?
Ist das jetzt irgendwas anderes?
Weil, warum geht das?
Das ging bei den alten nie.
Dass man...
Dass man irgendwie den TAIL drauf macht und...
Und das auslesen kann.
Aber TAIL hat keine Default-Werte.
TAIL öffnet eine Datei.
Das...
Das heißt, es muss schon richtig rauskommen aus der Datei.
Und das ganz ohne Einstellung.
Vielleicht ist das kein Seriel-Interface mehr jetzt, sondern echtes USB?
Vielleicht?
Wobei, was soll echtes USB sein überhaupt?
USB ist es.
Ich weiß nicht, ob es ein Native-USB-Textübertragungsding gibt.
Ich finde es auf jeden Fall sehr spannend, dass man einfach Tail draufmacht.
Zumindest mein Printline funktioniert nicht.
Aber, okay, wir machen mal kurz Delay.
Keine Ahnung, Delay von 100 Millisekunden.
Und dann machen wir nochmal Print, Print F, Lulwe.
Beste, Uline.
Und jetzt schauen wir mal, ob das funktioniert.
Der gibt nur Lulwe aus.
Und auch immer nur in so komischen Etappen.
Wahrscheinlich, wenn er das Serial-Interface fluscht.
Also, Serial geht nicht.
Das Arduino-Serial.
Aber guck mal, da muss man ja auch irgendeine Baudrate einstellen.
Das macht ja gar keinen Sinn.
Wenn man auch einfach die Datei öffnet.
Das geht garantiert irgendwie anders.
Mittlerweile.
Mit der Hardware.
Gibt es irgendwie so Hardware-Serial haben wir?
Ist das ein Unterschied?
Ne, das ist egal.
Was haben wir noch? Serial 0?
Haben wir Serial 1?
Ich weiß nicht.
Gibt es... Moment, Serial...
Serial 0 haben wir.
Und das ist Hardware-Serial...
Aber...
Hä?
Ich mein...
Können wir das mal ausprobieren?
Dass das irgendwie ein anderes Serial-Interface ist?
Gibt es nicht sowas wie Write oder so?
Oder Clear, Clear Buffer oder...
Buffer?
Gibt es noch bestimmt sowas wie hier End?
Macht das?
Es gibt halt auch keine Hilfe, ne, dabei.
Weiß man nicht, was das... was das macht.
Aber da gab es sowas wie Flush, habe ich gerade gesehen.
Flush.
Flush ist da immer gut.
So, mal kurz gucken.
Ah, Alter.
Heute bin ich aber echt nice im Vergessen von Semikolons.
So viel Go die letzten Tage.
Ne?
Das gibt einfach das Serial-Zeug nicht aus.
Hä? Was ist das denn?
Warum nicht?
Was ist das denn? Warum nicht?
Was ist das denn? Warum nicht?
Was ist das denn? Warum nicht?
Was ist das denn? Warum nicht?
Ich meine... witzigerweise wird PrintF...
PrintF?
Ok, wenn PrintF geht dann gucken wir mal, ob die ESP Funktionen vergehen.
Die haben doch auch sowas wie hier ...
... Log oder ESP Log.
ESP Log?
bastard
ESP Law
Kann auch einfach seien ihr
hier, genau ESP LOW für Warning.
hier, genau ESP LOW für Warning.
Aber was muss ich da inkluden, für das es funktioniert?
Muss ich da für irgendwas, irgendwas, irgendwas inkluden?
ESP.
Ach, guck mal, ich bin ja auch blöd.
Ich habe ja die ganzen Sachen da gelöscht.
Ähm, tja.
Ich gucke noch mal kurz in das, in das Default.
ESP-Log.h, okay.
Ich gucke mal hier rein.
Die hatten doch hier so ein Exempel, Beispiel.
Getting started.
Was hatte ich hier?
Exempel-Scannings.
Hä?
Getting started, hello world.
Und da hier Main.
Was hatten die hier alles drin?
Hier, ESP-Flash.
Aber die machen ja alles mit Print, Print-F.
Ach, guck mal, gibt das?
Aber warum bietet mir das denn?
Ziel eigentlich von sich aus an.
ESP.
Hä?
Ey, das ist ja, das ist ja richtig mies.
Der findet.
Der findet ja gar nix.
Muss ich, muss ich ernsthaft jedes Mal die fucking IDE neu starten, dass der da was erkennt oder was?
Das kann's doch nicht sein.
Wenn du CMake nicht, was soll ich denn da groß einrichten?
Ich hab, ich hab, äh, das Environment hinzugefügt bei meinen Toolchains.
Das, das reicht laut den, ja, Include.
Ah ja, jetzt erkennt er Zeug.
ESP.
Oh.
Das ist jetzt Funst mit Bild.
Bild.
Okay, aber den Header hat er gefunden anscheinend.
Nee.
Moment, ESP-Log requires.
Der hat's doch gefunden.
Hä, warum, warum?
Was ist das für ein Schrott?
Es kann doch nicht sein, dass ich das jetzt jedes Mal neu starten muss.
Doch, es gibt CMake-Files.
Muss, will der, dass ich hier irgendwas mache?
Okay.
Ah, okay.
Der checkt das einfach nicht.
Was ist das denn?
Ey, das ist ja grausam.
Warum detectet er denn den Kran?
Was ist denn jetzt?
Ich hab's ja zugemacht.
Hä?
Hat er jetzt die Abhängigkeiten gerade erkannt oder was?
Ach, guck mal.
Jetzt, jetzt hat er's erkannt.
Jetzt hat er's gecheckt.
Jetzt, jetzt highlightet er das auch alles ordentlich und sowas.
Ja, ja, okay.
Okay.
Ja, jetzt hat er's gecheckt.
Alter, okay.
Das ist ja Painz-Champ.
Jetzt erkennt er den Kram auch.
Okay.
So, und da müssen wir jetzt was.
Tag.
Sehr, sehr, sehr nice Hilfe-Funktion.
Omega.
Tag.
Beste.
So, und das werden wir jetzt auch printen in der Schleife.
Okay.
Flash.
Ich will eigentlich mit, mit C-Line nicht an den CMake-Sachen rumwurschten, wenn das
...
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Enjoy, suffer.
Have a great adventure!
Jansen schuar candidate.
Warum Burgh��ler?
Was ist das für Br інernag?
Was glaubt ihr?
Guck mal, das hast du ja.
So Karin!
War die Projektушf belt.
Was heißt das Architekturen?
Writing Pakistan?
Was heißt das?
Das..
warum du das überhaupt willst
weiß ich nicht weil ich eigentlich gesagt also warum ich das will weil
die meisten arduino libraries so funktionieren dass die irgendwie printable implementieren und dann kannst du die so ausgeben
falls sie was falls sie was haben
und ich finde das ehrlich gesagt so
hier mit den ganzen overloads die man sich irgendwie sicherlich auch anzeigen lassen kann
warum kann wie kann man sich denn die die overloads davon anzeigen lassen man
das ist ja nicht nur da gibt es ja noch mehr da gibt es auch ins und und alles mögliche ja
Wie lässt man sich denn hier anzeigen was es für
gibt es
ja da kann es dann auch hier einfach zahlen konnte was control
Ich will eigentlich einfach nur dass er mir anzeigt guck mal das hier will ich dass der mir anzeigen
du hast rings du hast
du hast
So ist es über das ist eigentlich ganz angenehm damit zu bringen also um sachen auszugeben
Und früher oder später braucht man das wenn man arduino sachen benutzt
also frage ich mich jetzt warum geht das arduino print line nicht
aber
das ergibt doch gar keinen sinn
das geht und sogar print f geht aber
Aber
Das geht nicht
Vielleicht ein bug ja ja es könnte sein was alpha oder oder ich mache das falsch weil es ist ja offensichtlich kein serial mehr
Sonst könnte ich nicht detail auf einer datei machen und da kommt der output raus
Geht das arduino zeug mit dem monitor das ist eine gute frage idf punkt
pdf und ein
idf monitor
und
nö
wie komme ich da wieder raus
steuerung c ist das nicht
IDF pi monitor exit wie kommt man da wieder raus
was
exit
control eckige
Alter ist das euer ernst
ja das funktioniert
control eckige klammer zu
ist ja wie bei telnet
telnet musste aufhören
Bei Tellnet musst du auch eckige Klammer machen,
dass du in den Command-Modus kommst.
Aber warum?
Warum nicht einfach Ctrl-C,
wie jeder normale Mensch?
Das sind ja keine Amis.
Das sind Chinesen.
China-Chinesen bei Espressif.
Okay, man kann da mehrere
Commands senden.
Also ich bin jetzt
sehr, sehr verwirrt.
Warum?
Du kannst nichts auswählen?
Auch nicht mit Pfeiltasten?
Du kannst
diese Sachen
interaktiv abfragen, kannst du ausschalten.
Dann nimmt der immer
die Standardantwort.
Das ist vielleicht aber nicht das, was du willst.
Aber über SSH sollte
das normale Auswahlzeug auch funktionieren.
Dann würde ich
vielleicht ein anderes Terminal mal testen, wenn das nicht tut.
So, warum geht
die Ausgabe mit Arduino nicht?
Da suchen wir mal danach.
ESP32-C6
Arduino
Serial
Output
Establish Serial
CMake-List
anpassen. Für was?
Warum? Weshalb?
Was?
Wie jetzt?
Hat das was mit meinem Output zu tun?
Was?
Clone the Nested
Tiny USB?
What?
Ich verstehe nicht.
Ich verstehe nicht, was du mir sagen willst.
Was soll ich woran passen?
Set in the...
Keine Ahnung.
Wo muss ich was einfügen?
Hier?
CMake-List.
Aber der erkennt ja...
Der erkennt ja den Arduino-Krempel.
Ich lasse da jetzt die Finger vorn.
Das funktioniert ja gerade alles.
Okay, was?
USB on development board?
Was?
Board flashing?
Connect to...
Ja, das haben wir gemacht.
CMake erkennt den Kram auch.
Sonst würde es ja nicht kompilieren,
wenn ich Arduino-Zeug verwende.
Verify serial connection.
Ich bin enorm verwirrt.
ESP...
No output.
Serial monitor not working.
Es muss auf jeden Fall ein ESP32-C6 sein.
Aha.
Was? Moment.
Oh, meine Augen.
Ah, yes.
Leute, jetzt ist alles klar.
Jetzt weiß ich Bescheid.
Obviously.
Jetzt ist klar.
Natürlich.
Also, wir haben einmal
ein USB Type-C
Port
und ein USB Type-C
to UART
Port.
Das ist wirklich das Problem, Leute.
Ich glaube, das ist echt das Problem.
Arduino denkt,
der Output soll
an Serial gehen.
In Wirklichkeit
muss das an
USB gehen.
Und das muss man dem jetzt
irgendwie beibringen,
dass der das
quasi mit Serial Print nicht an
Serial Ports oder
irgendwas Pins oder so schickt,
sondern an den
USB Output.
Ich habe doch eben irgendwas
auf gehabt, wo irgendeiner was...
I had the same
on a C3.
USB JTAG
Thing enabling CDC.
Was zum Teufel ist
CDC?
USB Communications API.
USB Konsole.
What?
Das ist der S3. Das ist was anderes.
Ich brauche den C6.
Aha, guck mal da.
ESP32
C6 Support.
Serial.
Compilation is upload is okay.
Serial Port no output.
What is your Serial Port?
Ich setz mal diese Option
da jetzt gleich.
The USB Serial JTAG Controller
can be used as the Serial Port
by selecting
USB...
Okay. Menu Config.
Michael Fünfspilian, moin!
Serial
JTAG. Serial
JTAG.
Ah!
Aber da stand doch was von Secondary gerade.
Hier. USB Serial
JTAG Port.
Wo stand hier was von Secondary?
Ach, hier ist Secondary. USB Serial JTAG
Port.
Okay. Ach, jetzt versteh ich's.
Okay. Der sendet das
standardmäßig
an den Serial Port.
Also an die Serial Pins
wahrscheinlich.
Und aber auch
zusätzlich noch per USB
an diesen Port.
Deswegen funktioniert das
mit TAIL. Jetzt ergibt das
Sinn. Ja?
TAIL liest nicht per Serial.
TAIL liest das gerade aus der Datei
die über diesen
anderen USB Krempel
läuft. Frag mich nicht genau
was da passiert. Das heißt wir
stellen das jetzt mal um, dass der
defaultmäßig direkt auf diesen
JTAG Pins geht.
Okay. Flash.
Frage ist jetzt nur, wenn das
nicht funktioniert.
Muss ich nochmal RESET drücken?
Oder was ist hier los?
Warum bildet es
jetzt erstmal eine halbe Stunde?
Und warum kann ich gerade nicht mehr flashen?
Port macht gleich Badge.
Ja sieht so aus, aber ich hab noch gar nicht geflasht.
Das ist das Ding ja. Ah okay, jetzt flasht er.
Jetzt geht's
auch wieder. Okay.
Aber die Ausgabe geht immer noch nicht.
Das wird's nicht sein. Was haben
die hier geschrieben mit?
Irgendeiner hat doch was mit
komischen Environment Variablen geschrieben.
Wo ist es denn hier gerade?
Arduino USB
CDC on boot.
Arduino USB Mode
brauchen wir.
Alles klar. Logisch.
Was sonst?
Wir können das mal ausprobieren.
Die große Preisfrage ist,
wo setz ich das denn?
Wo setz ich Buildflex in diesem Shit hier?
Der Benutzplattform IO.
Aber das sind ganz normale
Buildflex,
die man für das Arduino,
für die Arduino Komponente verwenden kann.
Das Ding ist nur...
Hä?
Wie setzt man denn hier überhaupt irgendwas?
Hier CMake? Main?
Hier?
Hier drinnen? CMake?
Aber wie?
Okay. CMake
Deprocessing
Define
Define
Das sind JVM-Parameter, die mit D anfangen.
Nein, nein, das sind keine JVM-Parameter.
Das sind GCC-Parameter.
Sieht vielleicht so ähnlich aus, sind's aber nicht.
Okay. Add Definitions.
Use Add Compile
Definitions to add
Pre-Processor. Okay.
Okay. Alles klar.
Add Compile
Definitions
Und jetzt?
What?
Alter, wer hat sich diesen Scheiß ausgedacht?
Da kommste dir ja vor, wie
1985
Jede normale Programmiersprache
hat mittlerweile einen gescheiten Package-Manager
und ein halbwegs gescheites Bildsystem.
Am besten schon eingeba...
Was ist das denn?
Wer hat sich diesen Schrott denn wieder ausgedacht, Mann?
Da krieg ich wieder Anfälle,
wenn ich mir den Scheiß angucken muss, ey.
Wie funktioniert das?
Aha.
Okay, einfach...
Einfach reinschreiben, ohne Klammern, ohne irgendwas.
Okay.
Also, was müssen wir da jetzt reinschreiben?
On Boot?
Okay, wahrscheinlich... Machen wir mal...
Tja.
Einfach die Feinen oder nicht?
Was hat... Haben die was...
Haben die was geschrieben?
Gleich 1 haben die geschrieben, oder?
Gleich 1.
Wobei, wir machen das nicht in die globale CMake rein.
Das macht ja keinen Sinn.
Das machen wir in meine CMake hier rein.
So.
Und was war das andere?
Arduino USB Mode.
Logisch.
Was sonst? Klar.
Klar. Okay.
Bild.
Jetzt erst mal wieder
1400 Dateien kompilieren gleich.
Okay.
1256 sind es diesmal nur.
Du könntest die Pre-Prozessor auch
vor dem Include...
Geht das? Funds das wirklich? Ja?
Dann mach ich das.
Oh.
So viele Warnings.
Äh. Failed.
Warum?
Ah, guck mal.
HWDC Serial.
Der macht prinzipiell schon mal
das Richtige.
Aber dann doch nicht.
Also, er will irgendwas mit Serial machen.
Okay.
Wo meinst du, kann ich das definieren?
Okay. Wenn es nicht im CMake ist...
Du meinst quasi
hier davor?
Quasi define?
Dann so?
Warum geht gleich eins nicht?
Widespace.
Ja, welchen C++ Standard haben wir eigentlich?
So?
Das soll funktionieren?
Näh, im Leben nicht.
Das Problem ist,
der Included hier nur den Header.
Der kompiliert ja das Arduino Projekt davor.
Und davor hat er die Sachen im Arduino Projekt
noch gar nicht gesetzt.
Der kompiliert das Arduino Projekt mit den
Standard Settings und bei mir
erst wenn mein Programm läuft, dann
macht er das.
Das kann eigentlich nicht funktionieren, oder?
Mal gucken.
Nee, funktioniert nicht.
Okay, also müssen wir das doch in CMake
reinschreiben.
Aber nicht in mein...
Okay, ich hab's mir doch gerade selbst beantwortet.
Das muss nicht in mein CMake rein.
Das muss einfach in die globale CMake rein.
Und dann am besten, bevor der hier unten irgendwas
macht.
Passt mal auf, jetzt geht's, easy.
Easy, first try.
Guck mal, es sind jetzt auf einmal
1.318.
Es sind mehr.
Daraus schlussfolgere ich jetzt einfach, es funktioniert.
Weil es
mehr Dateien sind.
Brake, Brake,
Brake, Brake.
Ah, nee.
Ha!
Es hat funktioniert!
Pog!
Habe ich jetzt irgendwie auch Zugriff 4 drin?
Hier drauf, Arduino.
Nee.
Doch.
USB.
Warum kann ich nicht springen?
Warum kann ich hier nicht sagen
Go to?
Warum geht das nicht?
Okay, das funzt, aber...
Moment.
Moment, es gibt Log...
Warum kann man hier nicht zu den
Definitions springen?
Was ist das für ein Schrott?
Es ist überhaupt nicht undeclared.
Und warum kann ich hier nicht drauf?
Was ist denn das?
Oh, ey.
Aber er erkennt, dass das wohl da ist.
Muss ich irgendwie mal ein CMake-File ändern,
dass er denkt, er muss es neu einlesen oder so?
Ich wette mit euch, wenn ich jetzt neu starte,
ne?
Das ist ja absolut grausamst,
Mann.
Kann ich eigentlich jetzt
C++ auslesen?
Kann ich nicht irgendwas
includen, was einfach nur...
Okay, das erkennt...
Was ist C++23?
Was gibt's da Neues?
Und dann gucken wir, ob das da ist.
Ich beheise, Mann.
Da gab's ein Setting.
Ja, das hab ich aber gesetzt gehabt.
Das hatte ich gesetzt,
dass der was...
Oh.
Jetzt hab ich irgendwas
gebildet?
Was wollte ich eigentlich nicht?
Dezimal...
Dezimal...
Na gut, das kann das Ding bestimmt nicht.
Gibt's hier nicht irgendwas...
Ja, Keyword.
Das ist eine gute Idee.
Features. Wir suchen Features.
Ja, beste.
New libraries. Was haben wir denn hier?
New Headers. Expected.
Mal gucken, ob der da ist.
Include.
Expected.
Okay.
Heißt das jetzt, wir sind auf C++23,
wenn er da ist?
Und warum kompiliert er grad nochmal alles?
Ja, haben wir schon.
Haben wir uns auch angeguckt am Anfang vom Stream.
Was?
CMakeAutoReload?
Äh, das hatten wir. Das haben wir schon gesetzt.
Ah, es hat funktioniert.
Nice.
CMakeAuto...
Ja, hatten wir.
Ich kann aus irgendwelchen Gründen nicht zu diesen Makros springen,
obwohl es die gibt.
Egal.
Dann machen wir jetzt doch einfach mal eine Ausgabe hier.
Und zwar...
printf
Oder hier, machen wir mal so...
Kann ich jetzt...
Darf ich jetzt hier drin eine Zahl angeben?
Also quasi...
Oh man!
Alter, das ist ja...
Geht das?
Ne.
Okay.
Wie geht das? Prozent D?
Und dann?
Ne. Prozent I?
Ne, was will er?
Long. L. L.
Tag? Format?
Ja, ist doch richtig.
What?
Das ist ja...
Okay.
printf long. Wie geht das?
L. I?
What?
Das weiß doch keiner aus dem Kopf, Mann.
L. I? Okay.
Obviously L. I. Alles klar.
Flash.
So, welche C++ Version habe ich denn jetzt?
Warum muss der
für jeden Scheiß eigentlich neu kompilieren immer?
Alles komplett?
Ich habe doch gar nichts groß geändert gerade.
Das Board hat sich gerade disconnected.
Was ist jetzt?
Okay, vielleicht doch IDF Monitor.
Der Output geht!
Der Output geht!
Das war dieses komische...
Dieses Arduino Boot
irgendwas. Okay.
Was ist das für eine bescheuerte Gesche...
Okay. Was ist das?
C++
Standard...
Hä?
Alter, warum ist...
Ich raste aus.
Warum ist es in C++...
Bitteschön...
Das Anzeigen
welcher Version ich verwende
schon eine
Wissenschaft für sich?
Wollen die mich verarschen?
Was soll das
überhaupt bedeuten?
Februar 2021.
So.
C++
2B.
Okay, was zum Teufel ist C++ 2B?
Moment.
C++ 2B ist C++ 23
und die Versionsnummer
ist 2021
00?
What the fuck?
Jetzt mal ernsthaft.
Hat dir irgendjemand ins Hirn geschissen oder was?
Was zum Teufel?
Wer denkt sich...
Das kannst du dir nicht ausdenken.
Das kannst du dir nicht aus...
Was ist denn mit den Leuten los?
Boah.
Das ist doch nicht normal.
Wie um alles in der Welt soll man drauf kommen,
dass 2021
00
für C++
2B steht,
was dann wiederum für C++
23 steht?
Oh.
Das ist doch wirklich nicht...
Wer macht sowas denn?
Wie kann man das einfach
über Jahre
so verscheißen?
Ich mein, Javascript war auch mal
echt nervig.
Aber mit den neuen Standards
haben die das eigentlich ganz gut hinbekommen.
Ich mein, da ist immer noch viel Stuss dabei.
So nach dem Motto
leeres Array ist nicht gleich leeres Array
und sowas. Okay.
Aber da hat's viel Gutes drinne getan
in Javascript.
Und C++, das wird immer weiter
verschlimmbessert, ohne irgendwie
was
zu ver...
Rust, ja.
Ich glaub, da hätten wir dann andere Probleme gehabt.
Gut.
Aber.
Das eigentliche, was wir machen wollten...
Also mich regt's immer noch ein bisschen
auf, dass ich...
Guck mal, er erkennt,
dass es das Makro gibt, ne?
Aber er kann
das nicht auflösen. Auch das
hier nicht.
Das ist schon sehr weird, Champ.
Gut.
Zumindest das eigentliche
dass ich was ausgeben will.
Das hat ja funktioniert.
Flashen.
Aber drüber flashen.
Moment, kompi...
Kann mir irgendjemand schlüssig erklären,
warum der jedes Mal
das gesamte Drecksprojekt
kompiliert, anstatt
einfach nur die Datei,
die sich geändert hat?
Was ist denn da los?
Am Anfang hat er das doch noch gemacht.
Was geht denn eigentlich
im Hintergrund ab?
Okay, Jetbrains macht komische Dinger.
Hä?
Ah, das geht mit
Tail...
Was hat er denn jetzt für Schmerzen, Mensch?
Okay.
Ach, kann das sein,
das Monitor, das resettet das Ding?
Hä? Und jetzt ist es
wieder da? Ich bin super
verwirrt. Guck mal!
Der kompiliert jedes Mal das gesamte
Projekt neu.
Ich...
Das ist doch einfach hängengeblieben.
Hier kackt er
immer nice ab.
Okay, der reconnectet sich neu.
Machen wir doch mal sowas wie...
Flash?
Ich glaub, man kann das
hintereinander schreiben.
Okay, dann ist das mit dem Monitor-Funktion doch ein bisschen besser.
Als mit meinem.
Aber dann
ist die Frage, warum es
vorher überhaupt die ganze Zeit
funktioniert hat.
Trotz Flashen. Ja, weil...
Vorher...
Vorhin konnte ich tailen auf das Ding.
Konnte auch...
Konnte auch flashen, das war überhaupt kein
Problem. Aber...
Nachdem ich jetzt das Arduino-Zeug umgestellt
hab...
Guck, jetzt mag er nicht mehr.
Vorher war es
USB und nicht seriell. Ich hab ja an dem Gerät
selber nichts umgestellt.
Ich hab ne Arduino-Option
gesetzt, dass er die benutzen soll.
Guck, da kommt jetzt nichts raus.
Hä?
Wollt ihr mich verarschen?
Warum geht cat und tail
geht nicht?
Okay, da bricht ab.
Okay, ich glaub mit dem Monitor-Command ist es
doch besser. Ja.
Da sagt man Flash, Flash
und Monitor.
Und dann flasht er und dann
connectet er sich direkt.
Ja, das ist okay.
Aber guck mal.
Der macht irgendwas
USB-mäßiges. Blum, blum, blum, blum.
Der reconnectet sich.
Ihr hört es ja im Hintergrund.
War das nicht gesetzt?
Doch, hab ich doch gemacht.
Haben wir doch schon
gemacht. Seit ich
diese komische Arduino-Option gesetzt
hab... Oh, oh.
Jetzt hab ich's
gebraked.
Okay, jetzt war...
Okay, passt mal. Guck mal, ich ändere
jetzt ein Buchstaben und mal
gucken, ob der jetzt alles neu kompilieren will.
Ja, will er. Nee, will er nicht.
Doch, warum?
Wollt ihr mich verarschen?
Warum kompiliert der
alles neu?
Das hat er doch am Anfang auch nicht gemacht.
Mr. Krabs,
danke für den Sub.
Ich kann doch nicht jedes Mal
zwei Minuten warten, bis der
alles wieder um...
Vor allem wozu?
Also ich sehe schon, die Development
Experience ist wieder einfach
absolut geil.
Natürlich
geht das bestimmt alles
irgendwie, wenn man weiß wie,
aber die machen es einem echt nicht einfach.
Wir gucken jetzt noch mal.
Ich schmeiß noch mal
hier aus dem CMake,
ich schmeiß jetzt noch mal
diese Variablen raus.
Dann geht der Output
wieder nicht.
Aber okay.
Aufgeben.
Weil, dass er es jetzt kompilieren muss, verstehe
ich ja, wenn ich das main CMake
schreibe.
Das ist halt so weird.
Ich wette mit euch, jetzt geht auch Tail wieder.
Diese Arduino Option macht irgendwelche
komischen Reconnect Dinger.
Guck hier, alles
gut.
So, und wenn ich jetzt eine Sache ändere,
kompiliert das dann auch wieder alles neu?
Ja.
Ne, oder?
Ey, ganz ehrlich, das ist doch
unusable der Scheiß, oder?
Das kann doch nicht euer Ernst sein.
Machen wir jetzt mal hier nur so.
Sachen rein. Gucken, ob das weiterhin
daran liegt.
Oh. Und Arduino
kommt weg.
So, mehr Basic geht ja wohl kaum.
Oh.
Ich habe irgendwas kaputt gemacht.
Am Anfang hat er nicht jedes Mal neu
kompiliert. Ich weiß nicht, wo das Problem ist, ehrlich
gesagt.
Ich könnte mir vorstellen, dass Rider
da gerade irgendwas
irgendwo rumsaut bei
so, eine Datei geändert.
Weil Rider jetzt irgendwie die
Timestamps
refreshed oder sowas.
Hä? Ne.
Guck mal. Hä?
Manchmal, manchmal
muss man alles
kompilieren und manchmal nicht. Obwohl
ich immer nur den Output ändere.
Hä?
So, und jetzt hier machen wir mal das rein.
Und jetzt? Kompiliert der jetzt wieder alles?
Das kompiliert er auch wieder alles.
Ich check den Scheiß wirklich nicht.
Ich mach mal den Bildordner weg.
Das ist echt abartig.
Ähm.
Ich mach mal das
CMake-Auto-Refresh aus.
Ähm, wie?
Moment, wie ging das jetzt
nochmal? Profiles
oder irgendwie? Ne, hier, ne? Edit.
So.
Das kommt auch wieder weg.
Da hat er wenigstens nicht immer
wieder alles neu kompiliert.
Jetzt habe ich vielleicht kein
Auto-Complete mehr.
So, einmal darfst du neu kompilieren, weil ich habe
den Bildordner gelöscht, aber danach nicht mehr.
Also, ich hab da, ich hab jetzt schon
ehrlich gesagt relativ wenig Bock
mein eigenes ZigBee-Gerät zu bauen,
wenn das schon so nice ist
da drin zu entwickeln.
Bin ich mal sicher, ob das, das ist bestimmt
Irgend, also
Warum auch immer?
Er refresht da irgendwelche Dateien?
Warum, Moment, Moment, Moment.
Warum wird SDK-Config
Warum wird
SDK-Config hier nochmal
angepasst?
Soll
das so?
Weil an der hat sich ja eigentlich nix geändert.
Hat sich nix, ist nix, ah ok.
Main.
Vielleicht, vielleicht liegt es an dem IDE-Ordner.
Dass der denkt, es kam ein neuer
Ordner dazu.
Das ist ne gute Idee, jaja.
Jetzt hat er nicht alles neu kompiliert, habt ihr das gesehen?
Jetzt nicht!
Das hat irgendwas mit
meiner IDE und
CMake zu tun.
Ich habe jetzt vergessen, was ich
machen muss,
um das wieder hinzugefügt
hinzugefügt zu bekommen. Was muss ich
edit? Ne, oh fuck.
Alter, keine Ahnung.
CMake
Wie ging, wie ging das jetzt nochmal?
CMake Set. Ah Mann, Alter, wo
ist das denn? CMake
Reload. Wo war ich
denn eben drinne?
Configuration, new.
Ne, das war doch nicht das, was ich eben
hatte. War doch was ganz anderes.
Alter.
Wo war ich denn eben drinne
in den Options, Mann?
Ich hab doch eben irgendwas gelöscht.
Ne.
Hier, da war ich eben drinne.
So.
Das liegt bestimmt da dran, weil der hier irgendwelchen
Shit jetzt einliest.
Ah.
Jetzt habe ich, jetzt habe ich Auto Complete
und so Zeug hier.
Demnächst irgendwann, ja. Jetzt habe ich Auto Complete
und jetzt nervt er
bestimmt auch wiederum mit
Kompilieren, ja.
Das liegt, das liegt da...
Das liegt irgendwann dran, was
CLion macht.
Guck mal, SDK Config, hat die sich vorher auch geändert?
Ne, vorher
hat sich die SDK Config nicht geändert.
Jetzt hat die sich auch wieder...
Das ist sehr, sehr weird.
Ich meine, weil das hältst du ja im Kopf nicht aus,
wenn hier bei jeder Änderung
jetzt hat sich SDK Config
vielleicht geändert, okay.
Guck mal, bei jeder fucking Änderung
kompiliert er neu.
Also, ich meine,
es muss, wir können das jetzt mal ausprobieren.
Ich ändere das jetzt mal
tatsächlich nicht in CLion, sondern
direkt hier, weil das...
Du bist ja verrückt, Boy.
CMake Build Debug.
Wo kommt denn das überhaupt her?
Das,
das kommt von...
Wo steht das denn?
Woher weiß
der überhaupt, dass er das anlegen soll?
Alter,
C++ macht mich fertig, ey.
Also, guck mal, wenn ich das jetzt
hier drinne ändere,
dann, so,
einfach direkt einfach in Wim
alles machen, dann
nix, guck, überhaupt kein Problem.
Hier drinne
geändert, dann wird nur, nur
das main File neu compiled.
So, und wenn ich das
in CLion mach, dann wird aus
irgendwelchen Gründen alles neu
kompiliert. So.
Das liegt an diesem
Debug-Projekt wahrscheinlich.
So,
Problem ist, jetzt liest er die Sachen nicht mal ein, oder?
Ey, ich bin komplett
verwirrt, ey.
Guck mal, ich hab jetzt nix geändert, Leute.
Ich hab nix geändert, ich hab, guck, ich hab,
ähm, und
reicht das jetzt schon zum...
Ja, jetzt baut er neu.
Und an diesem Bild,
ja, ja, ja. Also, wisst ihr,
was ich mich frage? Ich
kompiliere das nicht über CLion.
Warum legt er einen
CMake Build Debug an?
Jetzt, jetzt nicht mehr.
Aber wenn ich hier wieder was eintrage,
so...
Ach, Moment, das hat er einfach nur eben
angelegt. Ne, jetzt
geht's, jetzt geht's. Das lag an diesem
komischen Ordner. Guckt, jetzt kann ich
hier drin ändern, was ich will.
Und jetzt juckt's hier nicht mehr. Jetzt,
jetzt geht's. Ey, das ist doch, das ist
doch wirklich immer voll von Arsch.
Ey, aber jetzt findet
er meine... Ey, ich raste aus hier.
Dafür ist jetzt die Code
Completion kaputt, ja.
Muss das irg...
Ich mein, wir sind im Jahr
2024,
Mann. Was macht denn
das C++ Gremium die letzten
150 Jahre?
Es ist doch vollkommen
egal, in was meine IDE
läuft.
Die kann, die kann auf Erlang-Basis
laufen. Wie?
Ist nicht egal.
Was juckt's denn? Ich kann das
auch in Emacs machen.
Aber, was, was juckt, was
juckt das CLion überhaupt?
Was fummelt er, was fummelt er an
meinem fucking Projekt hier rum?
Wie sieht denn die CMake-List...
An den macht er ja gar nichts. Guck, da macht er
nichts dran. Das juckt, das juckt den nicht.
Warum geht denn, warum geht denn die
Completion
nur, wenn
ich da ne
Operation drin hab?
Ich mein, das liegt bestimmt auch mit daran, dass ich nicht weiß,
was ich mach.
Und den Scheiß auch gar nicht finde hier
in den Options.
Alter.
Compile in der CLion-Shell
und alle Probleme sind gelöst, meinste?
Da bin ich jetzt mal gespannt.
Okay.
Ja. Dann mach ich das wieder an.
So.
Okay.
So, und jetzt geht, jetzt geht die
Autocompletion wieder.
Autocompletion ist immer noch kaputt. Ah, der, der.
Moment, Moment, Moment. Der, der updatet
noch. Warum brauche ich überhaupt ein Profil,
dass das richtig funktioniert?
Updating Symbols.
Okay, hat er jetzt drinne?
Okay, jetzt macht er gar nichts mehr.
Okay. Include.
Arduino. Jetzt hat er die
Code-Completion gecheckt.
Okay. So, aber was sagst du jetzt, wenn ich das
im Terminal von C...
Das kann ich mir nicht vorstellen, dass das irgendwas
damit zu tun hat. Achso.
Existama.
Jetzt muss ich das hier wieder exportieren.
Das ist doch genau das gleiche.
Da findet er doch nicht mal...
Wisst ihr was, Leute?
Man, man, man
weiß ja nicht, ja?
Oh Leute, es ist 23 Uhr, ich muss gleich ins Bett.
Ja, mit Rust wird das...
äh, hätten wir andere Probleme.
Wahrscheinlich wird das gar nicht gescheit funktionieren damit.
In Lisp, genau.
Mensch, und dann Lisp. Und dann in Emacs.
Okay.
Und dann kommt das auf. Wo müssen wir hin?
TMP.
Ah, geh weg.
Export.
Ah, lass was hier mal weg.
Also ich sag, das hat nichts mit dem Terminal
zu tun in C-Line.
Kann ich jetzt zu...
Nein, kann ich auch nicht.
Okay. So. Export.
Build.
PDF.
Flash.
Und... nein, er
gibt wieder alles.
Und ich wette mir dir, wenn ich das jetzt hier mal...
Weil, das ist meine ganz normale Shell da unten.
Da merkt doch... das ist doch egal, ob das jetzt aus C-Line
kommt oder nicht.
Zack. Und jetzt nochmal hier was eintragen.
Das liegt an diesem komischen
Ordner hier.
Guck, jetzt wird wieder alles kompiliert.
Das liegt an diesem komischen Ordner.
Das macht...
Das verwirrt.
ESP-IDF.
Wo kommt der...
Ja, weil da... genau, weil da noch...
Weil da auch CMake-Files und sowas drinne...
drinne sind.
Was macht das überhaupt da?
Warum brauch ich den Müll?
Was?
Hello World?
Edit CMake-Profiles.
Und wenn ich das
rausschmeiße,
dann ist...
das Auto komplett kaputt.
Ey, was ist denn das für ein Schrott?
Das kann doch echt nicht sein, oder?
Das ist doch mal einfach nur
komplett für den Arsch. Wer hat sich das ausgebildet?
Ich mach jetzt nicht weiter.
Ich geh jetzt auf.
Es ist 23 Uhr 11, Mann.
Ja, aber das ist doch scheiße.
Das ist doch abgrundtiefe Scheiße.
Ich mein, das ist unbenutzbar.
Das ist doch...
Das ist doch nicht möglich, sowas.
Kannst du den Ordner ändern? Ja, aber vielleicht.
Das wäre natürlich gut.
Wie auch immer.
VS Code würde tatsächlich funktionieren, ja.
Ich kann den Output
nicht ändern, oder?
Das ist nicht angenehm.
Es ist auf jeden Fall für den Arsch,
wenn das eine das andere beeinflusst.
Ich mein...
Jetzt mal ernsthaft.
Warum muss überhaupt
ein Projekt,
ein Profil angelegt sein,
damit Auto komplett
funktioniert?
Das geht über die Toolchains hier.
Das ergibt überhaupt gar keinen
Sinn, dass da
ein Projekt angelegt sein muss.
Die Toolchain ist richtig
konfiguriert, so.
Und fertig. Das muss reichen.
Sonst nix.
Das muss reichen.
Aber jetzt... Aber dann...
Ist die...
Dann ist die Autocompletion kaputt.
Gleich.
Guck, jetzt ist die Autocompletion kaputt.
Das ist ja absolut dämlich, ey.
Naja.
Gut. Ich geh jetzt pennen, Leute.
Bis morgen. See you.

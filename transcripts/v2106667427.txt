So, exzellent, so, heute war ich schnell, Leute, massive, ist mir gar nicht so aufgefallen, dass ich so schnell war, mein Garmin meint New Personal Record über eine Meile, wie viel ist eigentlich eine Meile, Sekunde, Kekone Einheiten, aha, 1,6 Kilometer, na, obviously, warte mal, eine Meile, zwei Kilometer,
1,609344 Kilometer, Alter, wer denkt sich denn sowas aus, Mann, okay, ich meine, mir ist klar, wie man sich das ausdenkt, unabhängig voneinander, die Amis, Alter, aber die geben ja auch das Gewicht von einer Maus, die man bei Amazon bestellt, also Computer-Maus, ja, geben die auch in Ounces an und so einen Blödsinn,
naja, zumindest ist Garmin da, meine, heute war ein Rekord,
über eine Meile, und zwar in 8 Minuten 37, und ich hätte fast aus Versehen meinen 5 Kilometer Rekord geknackt, wenn ich den ersten Kilometer ein bisschen schneller gerannt wäre, und das, obwohl ich es eigentlich gar nicht drauf angelegt habe, also das zahlt sich doch aus, das regelmäßig, also, ich renne jetzt ja mehr als früher,
ja,
ja,
ja,
ja,
ja,
ja,
ja,
ja,
ja,
ja,
ja,
ja,
ja,
ja,
ja,
ja,
ja,
ja,
ja,
ja,
ja,
ja,
ja,
ja,
ja,
ja,
ja,
ja,
ja,
das habe ich hingehauen, sodass es oftmals, so jeden zweiten bis dritten Tag, manchmal auch, ja, manchmal drei Tage Pause, und so war, und jetzt, und jetzt mache ich,
es so, ich habe so einen Trainingsplan auf meiner Garmin-Uhr, den kann man sich da generieren
lassen, kann man so ein Ziel angeben und dann errechne das anhand, wie gut man geschlafen
hat, wobei ganz ehrlich, ich habe die Uhr so gut wie nicht an beim Pennen, errechne
das dann, was jetzt sinnvoll ist und ich mache das eine Weile jetzt schon, das ist super
angenehm, weil da sind viele nicht so anstrengende Sachen dabei, also zum Beispiel 47 Minuten
Rennen mit 37 und sowas, das ist easy, da komme ich zwar ein bisschen ins Schwitzen,
aber das ist null anstrengend und das kann man tatsächlich jeden Tag machen, früher
habe ich den Fehler gemacht, ich bin dann wirklich so alle 2-3 Tage oder manchmal hat
es auch nicht hingehauen und dann habe ich immer so volle Pulle gerannt, das ist viel
besser.
Und dadurch kann ich jetzt insgesamt mehr Rennen, ja, also ich kann quasi 5 Tage oder
so am Stück immer was machen und dann mal einen Tag Pause und das lohnt sich wirklich.
Ich bin heute fast 5 Kilometer Rekord gerannt, sagt mir meine Uhr und ich hätte, also und
das war nicht bis zum Umfallen, das letzte Mal, wo ich das gelaufen bin, war das wirklich
kurz vor Dettke.
Heute war das so, ich renne einfach mal nicht nach Planen.
So schnell, wie ich Bock habe und das ging erstaunlich gut, die ersten, die ersten 3 Kilometer,
danach wurde es ein bisschen anstrengender, aber nicht so, dass ich gesagt hätte, oh,
ich kann jetzt gar nicht mehr, als ich daheim angekommen bin und es war nur ganz knapp langsamer
als der Rekord, also das lohnt sich echt, die Masse macht es, man glaubt es gar nicht,
selbst, selbst wenn man zu, keine Ahnung, 70 Prozent sich nicht groß anstrengt, Hauptsache,
man macht es.
Hätte ich auch nicht gedacht.
Na gut, mein Ziel, mein Ziel für nächstes, nächstes, ich mache mal kurz Package Updates.
Oh, C++ Shit, Alter, geh mal weg, ich will es nicht sehen, Mann, hau ab, zisch, zisch ab,
weg, weg, warum geht es nicht zu, weg.
Mein Ziel für die nächsten Monate ist, Package Updates, Mann, mein Ziel für die nächsten
Monate ist einmal von Hanau nach Seligenstadt rennen, das ist ein schöner Weg und ist hin
und zurück.
Das geht natürlich nicht sonderlich schnell oder so, aber mal gucken, so, so lange bin
ich noch nie, so lange, so weit bin ich noch nie gerannt, so lange auch nicht, also ich
schätze, ich brauch da so zweieinhalb, zweieinhalb Stunden, ja doch, aber ich gehe davon aus,
dass ich das schaffe.
Das längste, was ich bisher gerannt bin, waren 14 Kilometer.
und danach sind mir noch nicht die beine abgefallen also werde ich einmalig 8
mehr auch packen hoffe ich guck mal ansonsten muss ich heimfahren
zwischendurch irgendwie oder mich abholen lassen oder so keine ahnung ich
habe sogar überlegt ob ich nicht mehr irgendwie eine gopro umhänge und das
macht das verfahren aufnehme einfach nur damit ich mir selbst angucken kann
oder vielleicht irgendwie ein video draufschneiden lassen kann
das skaliert nicht ja ja mal gucken mal gucken ja aber ich denke doch dass es
geht und ich glaube nicht dass es zu übertrieben ist weil die 14 kilometer
bin ich deutlich schneller gerannt als das was ich vor habe die 22 kilometer zu
rennen
also die 22 kilometer renne ich somit keine ahnung sieben minuten oder so pro
kilometer und danach muss ich wahrscheinlich eine woche pause machen
weil mir die beine wehtut mal gucken übrigens leute ich habe den hardcore
progress stets gemacht die letzten tage ohne euch dass das konnte ich nicht im
stream machen erstens weil ich mich wirklich konzentrieren muss und zweitens
weil ich sachen für meine für meine kamera
programmiert habe hier für meine surveillance kameras und da sieht man die
kamera ist die ganze zeit im browser und ich will nicht dass ihr bei mir das
katzenklo angucken könnt und den hof angucken könnt und die eingangstür
angucken könnt und den flur angucken können und die terrasse angucken könnt
und zeug ich habe hier dran ich habe hier dran weiter programmiert ich habe
es aber ich habe nichts gepusht ja
ich habe hier dran weiter gebaut das punct übrigens leute wir haben doch
erinnert ihr euch dran wir haben doch webrtc in rust gemacht hier und das ging
und das ging eigentlich auch ganz ganz brauchbar wo es meine main wo ist meine
main-datei nach der es ja noch webrtc
programmiert hier man sie sagt und ohne mist das funktioniert richtig es funzt
nicht also es funktioniert schon aber es hat massive probleme auf ios und die die paketierung
oder wie auch immer man das man das nennt ist irgendwie kaputt für web rtc wenn man das hier
mitmacht das ruckelt einfach nur wie sauer um deswegen habe ich das jetzt einfach weggeschmissen
mit rust und macht es wieder in go und schon funktioniert wunderbar funktioniert besser wie
jedes andere projekt was ich bisher in der richtung gesehen habe auf github es gibt ja
zig projekte die webcam streams nehmen und in web rtc verpacken aber die funktionieren alle
richtig schrottig mit meinen webcams ich habe ich habe 34 ausprobiert alles müll die können
die können entweder die connections nicht multiplexen so dass du alle udp ports irgendwo
in freigeben muss was echt pein pein
in bobo ist für firewall huls und auch irgendwie doof ja und unser können irgendwas nicht und
jetzt mache ich das wieder mit go und und dort net für das web frontend easy ja wer weiß ich
bis heute nicht warum beim laufen ja war ich vielleicht vielleicht gehe ich heute sogar noch
eine runde fahrrad fahren das wetter sieht eigentlich ganz brauchbar aus ich kann mal
kurz checken das wetter
in hanau sonnenschein exzellent exzellent und es bleibt auch noch ganz brauchbar die nächsten in
nächster zeit nach heute nachmittag kommt ein bisschen wolken und so vielleicht mache ich auch
einfach rogers rogers stellt und dann und dann triathlon fertig ja klar die sie bei 100 kilometer
gar kein ding ich glaube dass ich habe das weiteste
was ich bisher fahrrad gefahren wenn man irgendwie 60 doch 55 oder so und 50 kilometer da wäre einfach
jetzt mal das doppelte davon wir haben uns das letzten sie im stream angeguckt aber ich sehe
da kein problem weil man alte red hat versionen alte demian versionen benutzt und meine ganzen
desktopsachen habe ich auch schon upgrade wir können mal kurz gucken ob wir noch ein bisschen
was auf github mit den xxc tools das repository has been disabled mittlerweile er war letzt war
letzter stream schon thema wir haben das sonst ganz frisch gestern nie wann war ich nicht gestern vor
gestern der freitag freitag haben wir das ganz frisch gesehen als es rausgekommen ist da war
das da war der post irgendwie keine ahnung erst 30 minuten alt oder so und damals war es so also
war die kenntnislage so es betrifft wohl es nur ssh und wenn man die server public hat weil ansonsten
kann man da nichts nix ausnutzen wobei ich weiß man halt nicht ob das ob das stimmt also weiß ich
ob sich irgendwas getan hat mittlerweile vor zwei tagen aber geguckt mehr steht da nicht mal gucken
wir mittlerweile heise auch was dazu geschrieben hat ok auch die haben es mittlerweile auch gecheckt
ja es geht echt nur messersache
Also ganz ehrlich, ich muss da am Dienstag keine...
Ich muss da am Dienstag keine Server untersuchen.
Wir haben alle Redhead.
Irgendein olles Redhead und Debian, olles Ubuntu.
Die sind davon nicht betroffen.
Ja, das habe ich auch gesehen.
Das war in irgendeinem Forum.
Wie hieß das? Mono oder so? Mono?
Ne, ähm...
Ich habe den Original-Forums-Post gesehen.
Den haben wir uns am Freitag angeguckt.
Moin.
Das haben wir uns angeguckt, ja.
Da habe ich mir auch gedacht, wie merkt man sowas?
Einmal 5 Millisekunden ist schon ganz schön bloated, oder?
Container-Images können auch betroffen sein.
Also ganz ehrlich, ich habe keine Container-Images, die...
Übrigens ein weiterer Grund, keinen Alpine zu verwenden.
Ich lästere ja immer ganz gerne über Alpine-Container-Images, ja?
Ein weiterer Grund, keine Alpine-Container-Images zu benutzen.
Nachdem ich keine Alpine-Container-Images baue, bin ich nicht davon betroffen.
Meine Container-Images basieren in der Regel zu 99% auf Debian-Bookworm.
Und dann Multistage-Build und am Ende fällt halt ein Image raus, was, keine Ahnung, 5 MB größer ist als Alpine.
Aber mir nicht so sehr auf den Sack geht wie Alpine.
Also insofern...
Meine Container-Images sind nicht betroffen.
Und mal ganz davon abgesehen sind Container-Images wahrscheinlich ja auch nicht direkt betroffen,
weil selten irgendwelche Container-offene SSH-Ports und so haben.
Wobei ich glaube noch keiner so richtig 100%ig sagen kann, ob das rein SSH ist,
was die Lücke letztendlich problematisch macht, ja?
Aber ich habe sogar noch ein Video dazu aufgemacht in der History hier.
Ja.
Kann man sich mal angucken.
Das Video ist gestern...
Ja, ja, ja.
Das kann potenziell...
Also alles, was XXZ oder LipZX oder wie auch immer das Ding heißt, LZ oder so, ja, hier steht es doch, benutzt, kann potenziell Probleme haben.
So richtig 100%ig analysiert ist der Kram ja, glaube ich, noch nicht.
Bei Heise kann man ja auch nicht wirklich was drauf geben.
Die fassen die Sachen zwar immer meistens ganz gut zusammen.
Aber wenn es im Original verwirrend ist, ist es bei Heise meistens nicht klarer.
Oh, das ist natürlich interessant hier.
Der Angriff war von langer Hand geplant.
Der Angreifer hier...
Sind das die China-Chinesen hier wieder?
Gut, bei dem Namen...
Ich meine, Namen sagen ja eh bei sowas nie was aus.
Aber kommen wir jetzt am Start.
Sein GitHub-Konto im...
Okay.
Er stellte sein GitHub-Konto im Jahr 2021.
Und konzentrierte sich ab 2022 auf das XZ-Projekt.
Er hat mithilfe mehrerer Komplizen oder Fake-Accounts, was die psychologischen Druck auf die Hauptentwickler aufgebaut,
haben nicht nur Kontrolle über das Projekt erlangt, sondern auch Linux-Distributionen dazu gedrängt, die von ihm präparierten Versionen der Pakete schnellstmöglich in ihre Systeme zu übernehmen.
So sei er bei einem Fedora-Autor vorstellig geworden habe, diesen aufgrund toller Features überzeugen wollen.
Er hat mit dem
XZ-5600 in die RPM...
Das ist ja witzig, guck mal.
Der ist zum Fedora-Maintainer von diesem Package gegangen und hat gesagt, boah, gibt ganz viele tolle neuen Features, nehmt das mal auf.
Und dann ist dem Typ halt aufgefallen, es gibt irgendwelche Memory-Probleme.
Und die wollten dem helfen, das Memory-Problem zu fixen.
Was die nicht wussten ist, dass das Memory-Problem durch den Backdoor-Algorithmus oder Backdoor-Mechanics ausgelöst wurde.
Und das ist dann auch so.
Ich habe keine Ahnung, ob es eine ältere Version von XZ gibt.
Ja, lustig.
Ein Komplize mit dem Pseudonym Janssen, nee, nicht Janssen, Hans Janssen, der ist zu Debian gegangen und...
Aber eins muss man ja mal sagen, die Maintainer sind da wirklich schon auf Zack, ne?
Die konnten sie alle nicht verarschen.
Die Hintertür wird jedoch nur bei Debian- und RPM-basierten Distributionen als Teil des Paketes.
Paketerstellungsprozess scharf gehalten, Moment.
Also...
Also war ich mit Archlinux sogar nie betroffen.
Das ist, das ist schon wirklich Next Level, ne?
Soll ich mal in meine ETC-Environment reingucken?
Less ETC, was steht denn da überhaupt so drinne?
Nix, okay.
Nice.
Das ist, glaube ich, gut, wenn da nichts drinne steht.
Okay, der hat quasi...
Ach, GitHub war gar nicht das Original-Repo.
GitHub hat einfach nur ein GitHub-Repo mit dem Namen angelegt und hat so getan, als ist das quasi das Eig...
What the fuck?
Man muss aber mal echt sagen, das Ganze ist noch alles halbwegs glimpflich abgelaufen, oder?
So wie es jetzt aussieht.
Check mal, welche Version du installiert hast.
Nicht die Betroffene.
Ich hab ne neuere als die Betroffene installiert.
Ich hab am Freitag schon geupdatet.
30 Minuten oder 2 Stunden oder so.
Nachdem der Original-Post rausgekommen ist,
gab's für Artstealung schon nen Patch.
Nämlich 5.6.1.2 oder sowas.
Ja.
5.6.1.2.
Das ist nicht betroffen.
5.6.1.1 ist betroffen.
5.6.1.2 nicht.
Das haben die Artstealungsleute schon gepatcht.
Ja.
Aber...
Das ist, wenn man es mal genau nimmt,
das ist doch noch relativ glimpflich abgelaufen, oder?
Die Maintainer von Debian und Fedora haben...
Man kann nicht sagen...
Doch, die haben schon aufgepasst.
Die haben vielleicht nicht an der richtigen Stelle das alles realisiert.
Aber anderweitig haben sie aufgepasst, weil irgendwas nicht gestimmt hat mit dem Package.
Wenn das wirklich in Stable Builds gekommen wäre,
dann wären wir gefickt gewesen.
Dann wären so gut wie alle öffentlichen Server im Internet offen gewesen.
Also hättest das beispielsweise in die nächste Debian-Version gepackt,
oder hättest das irgendwie in so kleine Red-Hat-Release gepackt oder so,
dann wäre echt die Kacke am Dampfen gewesen,
weil dann wären einfach alle Server im Internet gefühlt verwundbar gewesen.
Was doch schon ein paar sind.
Was so ungefähr wahrscheinlich so 80% des Internets sind.
Also an.
An.
Linux-Kisten.
Nicht jede Domain und IP gleich Server, ja?
Das wäre natürlich kacke gewesen.
Es ist aber noch relativ glimpflich ausgegangen, würde ich sagen.
Wenn das alles ist.
Vielleicht bestätigt sich das ja, was der Fedora-Guy da meint.
Er hat ja geschrieben, das war so sophisticated und advanced, was der Typ da gebaut hat,
er wäre sich nicht mal sicher, ob ältere XZ-Versionen nicht auch irgendwas beinhalten.
Übrigens benutzt ZFS nicht auch das hier?
Für...
Compression?
ZFS unterstützt doch drei, vier verschiedene Kompressionssachen.
Ich bilde mir ein, einer davon ist das.
Glaubt ihr, da ist irgendein Start mit dem Spiel?
Da wird's jetzt Keck-Alu-Zeit, würde ich sagen.
Ganz ehrlich?
Indirekt kann ich mir das gut vorstellen.
Das wirkt auf mich nicht so, wie ein privater Hackermans, der da einfach nur Bock drauf hat.
Stimmt, das Saarland, ja, genau.
Das Saarland habe ich auch im Verdacht.
Was sonst?
Wir gucken uns gleich das Video dazu noch an.
Mal gucken, ob der noch ein bisschen mehr...
...Infos dazu hatte, als das, was wir hatten.
Was wir am Freitag auf die Schnelle rausgefunden haben und jetzt.
Zumindest ist glücklicherweise von meinen Kisten nichts betroffen.
Meine Images sind nahezu alle Debian.
Meine Public-Sachen sind Debian und Ubuntu.
Auf der Arbeit ist alles mehr oder weniger Red Hat.
Aber wenn das das in Stable-Release geschafft hätte, wären wir echt am Arsch gewesen.
Na gut.
Hm.
Excellent.
Oder auch nicht, je nachdem, wie man es sieht.
Schau dir den Link zu dem Blog aus meiner vorletzten Nachricht an.
Ach, er hier.
Der macht doch auch YouTube-Videos.
Okay, das ist mir vielleicht jetzt ein bisschen zu advanced, mich da durchzukämpfen.
Ich mein, guck mal, das ist auch busy.
Alter.
Das ist advanceder Shit, man.
Das wäre dir mit nem Rust, mit nem Tool written in Rust nicht passiert, oder Leute?
Was meint ihr?
Ich mein, potenziell, potenziell kann einem das überall passieren, dass Sachen eingeschleust sind.
Allerdings würde man sich hardcore wundern, warum in einem Rust-Build-Prozess irgendwelche M4-Makros drin sind.
Hier check ich gar nicht, was da überhaupt abgeht.
Er replaced irgendwelche Newlines oder so?
Nee.
Das ist halt das Problem.
Du machst dir wahrscheinlich bei einem C-Tool-Build-Prozess keine Gedanken über so einen Scheiß, weil da jeder irgendwie rumfrickelt.
Okay, das Tool extrahiert was.
Sieht aber sehr unbedarft aus.
Sieht jetzt nicht aus, als passiert irgendwas Schlimmes.
Okay.
Es ist nicht random, Leute.
Das rechte ist random, das linke ist nicht random.
Whatever.
Alter.
Alles klar.
Was passiert?
Ich hab selbst keine Ahnung, was hier passiert.
Ich hab selbst keine Ahnung, was hier passiert.
Das ist so...
Das sieht mir...
Also ganz ehrlich, warum sollte das ein Solo-Typ machen, nur weil es ihm danach ist?
Da steckt irgendwas...
Da steckt mehr dahinter.
Keck-Alu.
Es hört ja gar nicht mehr...
Oje.
AWK-Stells.
Interessant.
Nee, wir haben schon rausgekriegt, dass Saarland steckt dahinter.
Der Chat hat es vorhin bestätigt.
Guck.
Wenn der Twitch-Chat bei mir das bestätigt, dann muss das so sein.
Okay.
Dann würde ich sagen, gucken wir uns doch mal an, was diese Woche auf Shithub so trendet.
Github trending weekly.
Aha.
AI wird geskippt.
AI.
AI.
AI.
AI.
AI.
Nee, ist es AI?
Ah.
Äh.
Das ist...
Das ist das Microsoft Redis.
Was die zufälligerweise jetzt gerade pushen, wo Redis selbst nicht mehr Open Source ist.
Beziehungsweise Reddit...
Hab ich gesagt Redis?
Redis.
Redis.
Nicht Reddit.
Meine Güte.
Wobei Redis nicht mehr Open Source ist, stimmt ja auch nur zur Hälfte.
Es ist nicht mehr Open Source im Sinne von, dass es eine anerkannte Open Source Lizenz ist, dieser Linux...
Nee, nicht der Linux Foundation.
Der irgendeiner anderen...
Keine Ahnung.
Aber selbst kannst du auf den Code noch zugreifen.
Ja ey, mir gefällt das auch nicht.
Du meinst gar nicht gefällt dir?
Nicht?
Sondern das Reddit.
Ach so.
Das gefällt dir gar nicht.
Ich bin zu dumm, Leute.
Ich habe es nicht gecheckt.
Zu braindadged heute Morgen.
Das ging an mir vorbei.
Ja.
Ich weiß doch nicht, ob es mir gar nicht gefällt.
Ausprobiert.
AI.
AI.
Krypto.
Ja.
Ja.
Ja.
Ja.
Ja.
Verwährungsstellen AI.
AI.
AI.
Also.
Re-
Redis selber trennt auch noch?
Kommt noch ein Video zu XZ und eventuell Auswicklung auf Windows.
Also.
Also Auswirkungen auf Windows habe ich bis jetzt noch überhaupt nicht erkennen können.
Ich weiß nicht, ob ich dazu ein Video machen soll.
Das Thema ist nicht uninteressant.
Ich glaube aber, das geht so, wie sagt man so, über die Köpfe drüber der meisten Leute auf YouTube.
Zumindest auf meinem Channel.
Und alle, die es wissen wollen, haben es wahrscheinlich schon mitbekommen.
In der Zwischenzeit.
Angeblich ist die Lib auch im Update enthalten.
Also, wenn das, was man bisher weiß, stimmt, dann ist nichts davon aktiv auf Windows.
Ja, zumindest nicht per SSH irgendwie.
Man weiß halt nicht, was da noch so drin ist und wie das alles sich auswirkt und wechselwirkt mit anderen Sachen.
Müssen wir erstmal ein bisschen warten, bis das noch tiefgreifender analysiert wurde alles.
Bisher sieht es halt aus, als betrifft es nur RPM und Debian-Basen.
Das heißt, es gibt nur die passierte Distribution und dort dann auch nur SSH, wenn quasi alles richtig drumherum konfiguriert ist, das greift.
Also, es ist noch relativ glimpflich abgelaufen.
Wir wären aber wirklich ziemlich gefickt gewesen, hätte es das in irgendeinen Red Hat oder Debian Stable Release gepackt.
Dann wäre einfach 80% des Internets angreifbar gewesen.
Ich habe einen Debian V-Server bei Headstand.
Darauf Cloud-Panels.
Cloud-Panel für Web-Hostings.
Warum braucht man sowas?
Hast du einen Tipp, wie ich das Resonant oder als Replika aufbauen kann, um Ausfallsicherheit zu haben?
Keine Ahnung.
Wann benutzt man Cloud-Panels?
Was ist das?
Ist das sowas wie Plesk?
Oder wie das früher hieß, das Zeug?
Wo ich mich auch damals schon gefragt habe, warum braucht man sowas?
Wenn ich irgendwie eine Seite hosten will, dann starte ich einen Web-Server über SSH und schiebe die Sachen ins richtige Verzeichnis und gut ist, da brauche ich kein Web-Interface für.
Ja, ich kenne diese Dinger.
Ich weiß nur nicht, wozu man das braucht.
Ist das, wenn man seinen Server weitervermietet?
Ach, du vermietest den...
Bist du dir...
Jetzt mal...
Jetzt mal ernst gemeine Frage.
Bist du dir sicher, dass du wirklich als Dienstleister fungieren willst hier?
Weil du bist auch immer der Gearschte, wenn irgendwer...
Also, wenn man einfach so einen Random-Server mietet bei Hetzner und das dann verkauft, ich weiß nicht.
Aber ich meine, du musst was wissen.
Also, wie kann man sowas hochverfügbar aufbauen?
Das ist, glaube ich, weniger das Problem des Panels, sondern was dahinter läuft, oder?
Weil ich gehe mal davon aus, dass wenn da Web-Hosting-Sachen drauflaufen, da hängen ja wahrscheinlich auch die ein oder anderen professionierten Datenbanken und sowas dran.
Oder ist es reines...
Eine Static-Web-Space mit, keine Ahnung, PHP oder sowas.
Dann würde ich mir eher da Gedanken machen, wie man das redundant aufbaut.
Ansonsten, prinzipiell, wie man Linux-Server redundant aufbaut, das Einfachste ist immer zwei Systeme mit Lautbalancer davor.
Das geht so pauschal eigentlich für fast alles.
Das ist, wenn man nichts Spezifisches weiß, zwei Systeme mit Lautbalancer davor geht eigentlich immer.
Problematisch wird es, wenn die Systeme irgendwie untereinander sich austauschen.
Zum Beispiel, weil du eine User-Datenbank hast, die du irgendwie noch syncen musst.
Oder du brauchst halt dann eine dritte Datenbankkiste, wo beide drauf zugreifen.
Als wäre das Problem, wie machst du die rennen?
Und dann, das artet relativ schnell aus.
Also, wenn du mit etwas Downtime leben kannst, ist Cold Standby gar nicht so doof, wie es sich anhört.
Quasi ein zweiter geklonter Server neben dran stehen haben, den man...
Oder ein Backup, sagen wir mal, ein Backup und ein Snapshot haben.
Ja.
Ja, aus dem man relativ schnell ein System restauren kann.
Dann hast du keinerlei Probleme, was Lautbalancing angeht, Konfiguration angeht, Shared State oder sonst was angeht.
Du musst einfach nur gucken, dass du regelmäßig Backups machst und aus den Backups ein neues System restauren kannst innerhalb von 2-3 Minuten.
Dann hast du 2-3 Minuten Ausfall, aber du umgehst sehr viel Konfigurationen und Kopfschmerzen.
Und wenn das reicht, ist das aus meiner Sicht die bessere Lösung.
Ja, darfst du, klar.
Warum nicht?
Also, ich weiß es nicht, aber mich würde es sehr wundern, wenn du das nicht darfst.
Du darfst darauf alles betreiben, was du willst.
Außer Kryptosachen.
Stimmt gar nicht, was ich gesagt habe.
Kryptosachen mag Hetzner nicht.
Obwohl, witzigerweise, gerade viel Polygon-Sachen auf Hetzner läuft.
Obwohl man eigentlich Kryptosachen nicht machen darf.
Ja, das reicht.
Also, wenn du mit ein paar Minuten Ausfall, wenn wirklich was kaputt geht, leben kannst,
dann ist das wahrscheinlich das Beste.
Eines würde ich aber an deiner Stelle trotzdem noch machen.
Dadurch, dass da nicht nur deine Sachen dranhängen, sondern im Zweifelsfall auch Geld
und du im Zweifelsfall verklagt wirst, wenn irgendwas ist, was du nicht einhältst.
Ich würde noch ein paar Offsite-Backups machen.
Dass du im Zweifelsfall das bei einem anderen Cloud-Anbieter easy restoren kannst, die Kiste.
Also, ich würde mich nicht rein...
Ich würde mich auf die Snapshots verlassen, aber sollte Hetzner mal komplett down sein,
und dann geht das auch mit den Snapshots.
Deswegen, ich würde mir ab und zu mal offline irgendwie ein paar Backups ziehen noch,
dass ich zur Not, wenn es wirklich hart auf hart kommt,
zu irgendeinem anderen Cloud-Anbieter gehen kann und dort die Kiste starten,
sei es nur für ein paar Tage.
Boah.
Ich verdiene indirekt mit Kryptosachen ja sogar mein Geld mittlerweile.
Wie gesagt, ich arbeite bei einer Versicherung in Frankfurt
und ich bin da eigentlich zu 80% in Blockchain- und Krypto-Projekten.
Ich selbst besitze aber keine Krypto-Projekte.
Keinerlei Krypto-Currency oder sonst was.
Ich kümmere mich um die Infrastruktur, wo beispielsweise unsere Polygon-Nodes drauflaufen und...
Ich weiß, ich überlege jetzt nicht, da ich jetzt zu viel, zu viel Kram erzähle.
Dann haben wir noch ein paar private Blockchain-Sachen mit Partnern am Start.
Ja, mehr erzähle ich nicht.
Was machen die damit?
Tja, das kann ich so nicht erzählen.
Ohne, dass man googeln kann danach.
Ne, ich habe gerade danach gegoogelt.
Wenn ich das so sage, dann findet man es.
Ja.
Ja, wir haben auch ein paar Banken als Partner am Start.
Generell, also es gibt ja viele Finanzdienstleister, die sich dafür interessieren.
Und dementsprechend ist da in Frankfurt auch viel los.
Warum ist das die perfekte Antwort?
Das ist...
Okay.
Jetzt weiß ich, woher das kommt.
Okay.
Habe ich nie geguckt, die Serie.
Ich muss auch sagen, ich...
Ich habe mal versucht, das Original...
Wobei, das ist nicht das Original.
Das gibt...
Also, Stromberg ist ja quasi die deutsche Version von The Office.
Und The Office gibt es ja auch als britische und...
US-Serie.
Ich habe mal versucht, die US-Serie zu gucken.
Ich fand das so cringe und anstrengend.
Ich konnte mir das nicht geben.
Das ist echt so eine Serie, wo ich nicht verstehe, warum die so gehypt war.
Keine Ahnung.
Ich habe keine davon geguckt.
Ich habe es mal probiert, quasi die US-Variante zu gucken.
Und das fand ich irgendwie einfach nur cringe.
Und anstrengend.
Da hatte ich keinen Bock drauf.
Naja.
So.
Habe ich jetzt eigentlich schon rebooted.
Aber Reboot schadet nichts.
Übrigens, ich habe die letzten Tage, habe ich ja schon gesagt, richtig Hardcore-Progress-Progress-Stells gemacht.
Off-Stream für meine Webcams.
Und mir ist aufgefallen, was mich am Programmieren und Softwareentwickeln eigentlich so interessiert.
Während ich das gemacht habe.
Home-Office-Leute können da nicht relaten.
Die Serie ist so alt, da war Home-Office noch kein Thema.
Und zu der Zeit habe ich auch noch kein Home-Office gemacht.
Ja.
Aber mir ist aufgefallen, was mich daran so begeistert oder so fasziniert, die letzten Tage über wieder.
Und zwar das ist, vor allem, wenn man halt kein Mainstream-Zeug macht, ja.
Wenn man jetzt die 0815 nächste To-Do-App im neuen JavaScript-Framework nachbaut, dann ist das nicht so spannend.
Aber wenn man sich mit wirklich komplizierten Sachen beschäftigt.
Also was ich gemacht habe, ich habe mein Webcam zu WebRTC-Programm verbessert, so dass es jetzt wirklich ganz gut funktioniert.
Besser als alles andere, was ich bisher so auf GitHub gefunden habe, in der Richtung.
Mittlerweile nicht mehr in Rust das WebRTC-Zeug, sondern wieder in Go, weil die Rust-Library nicht richtig funktioniert hat.
Zumindest, was mich daran echt fasziniert hat, ist, wenn man sich tiefgreifend mit was weiß ich was denkt.
Wenn man sich tiefgreifend mit was weiß ich was denkt.
Wenn man sich tiefgreifend mit was weiß ich was denkt.
Wenn man sich tiefgreifend mit was weiß ich was denkt.
Wenn man sich tiefgreifend mit was weiß ich was denkt.
Wenn man sich tiefgreifend mit was weiß ich was denkt.
Wenn man sich tiefgreifend mit was weiß ich was denkt.
Wenn man sich tiefgreifend mit was weiß ich was denkt.
Wenn man sich tiefgreifend mit was weiß ich was denkt.
Wenn man sich tiefgreifend mit was weiß ich was denkt.
Wenn man sich tiefgreifend mit was weiß ich was denkt.
Wenn man sich tiefgreifend mit was weiß ich was denkt.
Wenn man sich tiefgreifend mit was weiß ich was denkt.
Wenn man sich tiefgreifend mit was weiß ich was denkt.
Wenn man sich tiefgreifend mit was weiß ich was denkt.
Und bestätigt wird, dass man fast alles hinbekommen kann, wenn man sich nur tiefgreifend genug damit beschäftigt, auch wenn man sich am Anfang denkt, scheiße, warum funktioniert das nicht oder wie soll ich denn das jemals hinkriegen, nach 2-3 Tagen 24-7 sich um nichts anderes Gedanken gemacht, kriegt man die Sachen doch meistens hin.
Also das bestätigt einen immer wieder, egal wie kompliziert das ist, wenn man sich nur tiefgreifend genug damit beschäftigt, man bekommt das meiste hin oder man bekommt fast alles hin, das aller aller meiste und das zweite ist, nachdem man das hinbekommen hat, realisiert man, dass man vielleicht jetzt zu eventuell 100 Leuten auf der Welt gehört oder so, die wissen um was es in diesem Themenbereich geht.
Wir programmieren vielleicht auch mit ein bisschen weiter dran, weil noch nicht alles so ist.
Ich habe zum Beispiel an irgendeiner Stelle glaube ich noch einen Memory-Leak in der FFM-Pack-RTSP-Auslesegeschichte und ich weiß nicht genau wo, aber das ist nicht so schlimm, das ist bloß, ich hatte das jetzt über Nacht laufen und das hat vielleicht 40 MB Memory geleakt, das kann nichts Großes sein, vielleicht irgendwo, dass irgendwelche Metadaten für Packages nicht richtig freed werden oder so, was auch immer.
Ja und das zweite ist...
Man realisiert, nachdem man sich mit so komplizierten Sachen beschäftigt hat, dass man danach vielleicht zu, keine Ahnung, zu vielleicht 100 Leuten auf der Welt gehört, die wissen um was es konkret in diesem einen Thema geht, weil sich sonst niemand damit beschäftigt hat.
Genauso wie zum Beispiel eine Sache, die wir hier auch mal im Stream gemacht haben, die in die ähnliche Kerbe geschlagen hat, die ich auch mega big brain fand, ist der FFM-Pack-Video-Player über WebAssembly.
Erinnert sich da noch einer dran?
Das war glaube ich eines der five-headigsten Sachen, die wir je gebaut haben im Stream.
Und wir haben nicht einfach nur WebAssembly FFM-Pack programmiert, so wie das in 100.000 Tutorials drin steht.
Nein, nein, wir haben das versucht mit WebWorkers Multithreader zu machen und streamen vom Server, nicht irgendeine Datei hochladen in der Webseite.
Das war super kompliziert.
Danach hatte ich auch das Gefühl, okay Chat, wir gehören jetzt zu 100 Leuten auf der Welt, die sowas schon mal gemacht haben, wenn es hochkommt.
Und man merkt das.
Man merkt das unter anderem daran, dass wenn man danach sucht bei Google, quasi keine Ergebnisse findet und auch wenn man Codeschnipsel sucht oder Funktionsnamen sucht und man mit Zusatz Stack Overflow, Reddit, was auch immer oder auch mal Chat-GPT, wobei Chat-GPT so einen Schwachsinn teilweise erzählt, von was sollst du das auch lernen, wenn es nicht mal Google-Ergebnisse gibt.
Daran merkt man, dass man wirklich jetzt sehr auserwähltes Knowledge hat.
Wo es nicht viel auf der Welt gibt, die da Ahnung von haben.
Also ich habe mich im Detail beschäftigt die letzten Tage über mit, einmal mit was nicht so super kompliziert ist, wenn man weiß wie es geht, aber was auch super pfeifert ist, Custom Logging Output für FFmpeg.
Ihr kennt das vielleicht, wenn man FFmpeg benutzt.
Also wenn ihr jetzt, wobei, ha, ja was, kann ich überhaupt irgendwas mit FFmpeg hier abspielen?
Ich weiß nicht, gibt es da irgendwas, irgendwas im Hinter...
Äh.
Ich habe jede Menge FFmpeg-Builds.
FFmpeg hat doch manchmal so doofe Ausgaben, so Mist, Mist Package, Timestamp Number, Dropping Package und sowas, da FFmpeg spammt immer ganz gerne.
Und Custom Log Output für FFmpeg zu definieren, wo man auslesen kann, also beispielsweise, wenn man FFmpeg, gibt es eine Demo-RTSP, gibt es irgendwie Stream-Tests?
Okay, ich habe keine Ahnung, was das ist.
Äh.
Kann man das abspielen?
Ich traue mich nicht, das abzuspielen, Leute.
Kann ich das, kann ich das abspielen?
Wo, wo komme ich dann raus?
Hoffentlich läuft da jetzt kein...
Okay, ne, darf ich nicht, ja.
Äh.
Gibt es irgendein F...
RTSP, irgendein freies RTSP-Stream, den ich mal abspielen kann zum zeigen?
Keine Ahnung.
Ja, ich weiß nicht.
Hört mir...
Keine Ahnung.
Ich will meine Webcam jetzt nicht abspielen, ne.
Und einen RTSP-Server starten will ich auch nicht.
Zumindest...
Hier, hier.
Guck mal, das, das ist die Ausgabe, das meine ich.
Also.
Das hier ist eine Log...
Das, das hier gehört übrigens nicht mehr dazu, ja.
Das hier ist eine Log-Ausgabe von FFmpeg.
Die habt ihr wahrscheinlich alle schon mal gesehen, die FFmpeg benutzt haben.
FFmpeg spammt, spammt gerne Logs, die so aussehen hier im Endeffekt, ja.
So.
So in der Richtung sehen die Logs immer aus.
Sniper, willst du mich veräppeln?
Das ist doch genau das, was ich gerade versucht habe zu starten.
Aber letztendlich, wir haben ja, wir haben ja hier die, die, die Ausgabe.
So.
Und jetzt ist das Ding...
Deswegen versucht mal, wenn ihr Multithreaded FFmpeg benutzt.
Also nicht das gleiche, sondern ihr startet FFmpeg aus mehreren Threads.
Das heißt, ihr bekommt jetzt, mal angenommen, ihr startet parallel 3 bis 4 RTSP-Streams über FFmpeg.
Und ich meine jetzt nicht über die Command-Line, sondern mit der FFmpeg, mit der, mit dem eigentlichen FFmpeg, mit der C-Library.
So.
Und dann habt ihr ganz viele Sachen, die so aussehen hier.
In der Ausgabe.
In der Ausgabe.
So.
Spamst die ganze Zeit FFmpeg.
Und ihr wisst jetzt nicht, ja von welchem Stream kommt denn das jetzt eigentlich?
Es ist ja schön und gut, dass irgendwas fällt.
Aber von welchem der vier Kamerastreams ist es jetzt eigentlich?
Und ich habe gestern versucht, die FFmpeg-Log-Ausgabe anzureichern mit der Information...
Woher kommt denn die Fehlermeldung eigentlich?
Und Leute, es soll euch gesagt sein, das ist bei weitem nicht so straightforward, wie man denkt.
Da muss man dann sowas machen wie AVZ-Log-Callback und dann braucht man eine Funktion, die die richtigen Parameter hat und dann muss man schauen, wie der Kontext heißt, den Kontext casten zum eigentlichen Kontext und dann kann man reingucken.
Super weird, ja.
Da gibt es wahrscheinlich auch wieder 100 Leute auf der Welt, die checken, wie das funktioniert, man.
So, das war das eine.
Dann habe ich mich damit beschäftigt, wie Package-Reordering funktioniert bei RTSP-Streams über FFmpeg.
Weil meine Kameras sind so China-Chinesen-Billig-Kram, dass die RTSP-Timestamps oftmals nicht richtig stimmen.
Der Witz ist, die Packages werden in der richtigen Reihenfolge geschickt, die Timestamps sind oftmals falsch, weil die Software auf den Kameras wahrscheinlich einfach Schrott ist.
Meine Raspberry Pi-Kamera zum Beispiel hat überhaupt gar keine Probleme, die funzt einfach.
Aber die Billig-China-Chinesen-Kameras, die sind kacke, was das angeht.
Deswegen habe ich bei denen das Reordering ausgeschaltet.
Musste man auch erstmal rauskriegen, wie das Ganze geht.
Ja, und solche Sachen.
Also, das war echt nicht easy.
Ich pushe das vielleicht nachher mal, das Projekt.
Und eventuell basteln wir heute im Stream auch ein bisschen weiter dran.
Weil es gibt noch ein paar Sachen, die nice wären einzubauen.
Ja, aber das ist das, was mir echt so am Programmieren immer gefällt.
Dass wenn man so komplizierte Sachen macht, beziehungsweise sich mit...
Generell muss man sagen, ja wahrscheinlich schon.
Generell muss man sagen...
WebRTC bauen ist allein eh schon, wenn man nicht einfach von Browser zu Browser macht.
Sondern von irgendeiner Server-Seite zu Browser eh schon ein bisschen kompliziert.
Und dann noch mit dem ganzen FFmpeg-Shit ist schon sehr advanced aus meiner Sicht.
Und ich finde das immer wieder nice, dass man darin bestätigt wird,
wenn man sich da zwei, drei Tage reingebissen hat und mich beschäftigt hat.
Man bekommt echt fast alles hin, wenn man sich einfach nur mit beschäftigt.
Ich habe keine Ahnung, über welchen Stream ich rauskomme, wenn ich das aufmache.
Das mache ich jetzt nicht auf.
Wollen wir...
Hab mich beruflich mal viel mit Köln PowerShell besp...
Ja.
Ja.
Gibt viele coole Sachen.
Moin, hab jetzt seit gestern vor MWR hast du Tipps.
Wie jetzt? Welches?
Du meinst vor MWR Workstation?
Oder was?
Vor MWR.
Mein Vor MWR hat viel...
Außerdem ist es ja gar nicht mehr Vor MWR, sondern Broadcom.
Ja.
Vor MWR Workstation hast du irgendwelche Tipps?
Ja.
Benutz regelmäßig Snapshots.
Bevor du was ausprobierst.
Und wenn es Schrott ist,
dann...
Dann...
Dann...
Dann...
Dann...
Dann...
Dann...
Dann...
Dann...
Dann...
Dann...
Dann...
rein und dann geht das guck mal kannst du sie kannst du jedoch angucken schau
mal task manager sortieren nach cpu achtung machen wir mal was was stress
habe ich das ziel dress dress wie ging das noch mal ich benutze das zu selten
stress auf einer cpu du siehst vor allem der workstation benutzt zehn prozent cpu
insgesamt auch so ich habe info ich habe 88 katt rock cpu info ich habe
acht kerne aktuell drinnen das ist aber nur mitteilott glaube ich zumindest
vorne ich habe tatsächlich acht kerne in meiner vm drin hängen aber stress 22
kerner wenn man uns elf prozent und sowas ist ja auch hier kommt also meine
vor allem denke ich hab acht kerne jetzt mach mal mal
Jetzt ist meine VM komplett ausgelastet, wie du hier siehst, aber insgesamt ist das Ganze nur zu 40% ausgelastet, weil ich habe ja, wie viel habe ich eigentlich CPU-Kerne? Ich habe, ähm, seht ihr es irgendwo? Hier, 24, aber davon sind glaube ich nur 8 High-Performance-Cores und 16 E-Cores, gell?
Ja, irgendwie so ist das glaube ich, wenn ich das richtig im Kopf habe. Ja, und die 8 haben auch Hyper-Threading, deswegen 32 Logical, was dann dazu führt, dass meine CPU nur zu 44% ausgelastet ist, obwohl es eigentlich 8, äh, whatever.
Also man sieht, das kannst du wunderbar, kannst du in VMWare mehrere Kerne hinzufügen, aber das geht mit VirtualBox genauso, das ist jetzt nichts VMWare-spezifisches, trotzdem finde ich VMWare Workstation viel angenehmer als VirtualBox.
Ist deine gekaufte VMWare-Lizenz noch aktuell? Ja, aber ich habe noch nicht upgradet, ich bin immer noch auf 17. Ich sehe auch gerade nicht ein, dass ich upgraden sollte, es funktioniert alles nahezu perfekt.
Das Einzige, was nicht funktioniert und immer dann auftritt, wenn ich die JetBrains Toolbox aufmache, meine VM hat manchmal Grafik-Ausgaben-mäßig Probleme.
Jetzt, jetzt nicht, jetzt nicht, jetzt funktioniert das witzigerweise. Oh ne, shit, es ist wieder aufgedreht, guckt mal.
JetBrains, nur wenn ich die JetBrains Toolbox aufmache, kackt meine VM ab.
Aber ich sage euch, das ist kein Problem von der JetBrains Toolbox, weil das kannst du ja gar nicht in einem Programm in der VM.
Ich wette mit euch, das liegt daran, dass es eine Kombination aus VMWare und ich, meine persönliche Vermutung ist, Grafik, also Grafik, ähm, Implementierungssachen von VMWare.
Weil das Ding rendert über OpenGL und irgendwie buggt das die VMWare-Instanz, wenn es das verwendet.
Soweit, dass man VMWare Workstation tatsächlich beenden muss und dann kann man es wieder neu starten.
Sehr merkwürdig, keine Ahnung, woran das liegt.
Wir könnten, ja, ich will jetzt auch nicht weiter basteln.
Also, ich habe das ausgeschaltet.
Das geht, aber das hat bei mir Probleme gemacht.
Ich habe, ich habe die Windows-Virtualisierungsgeschichten ausgeschaltet bei mir, weil das immer wieder Probleme, also es geht, aber es gab, es war problematisch.
Witzigerweise mit Windows 10 ging alles noch, mit Windows 11 macht es Probleme.
Ja.
Aber ich verwende den Windows-Krempel nicht, also, insofern.
Also ich habe das aus.
Ich glaube, ich bin der Einzige, der seine grafische Oberfläche manuell über die Shell mitsteigt.
Also, ich habe den Windows-Krempel nicht.
Ich habe die Windows-Krempel nicht.
Ich weiß nicht, wie das ohne die Backgrounds gehen sollte.
Ist der Rackman am Start?
Habe ich irgendwelche, habe ich irgendwelche Backgrounds übersehen?
Nur, nur, nur, nur Frage.
Habe ich irgendwas übersehen?
Weil du hast ja schon mal ein paar geschickt.
Und ich habe jetzt den letzter
Ja, habe ich mittlerweile alle drinnen
Die du gebaut hast
Hoffe ich
Nutzt du kein Wayland, ne
Ich benutze kein Wayland
Ich benutze kein Wayland, weil das
Also hauptsächlich das Problem, weil das in VR
Nicht richtig funktioniert
Ich weiß nicht, welche Settings
Zum Beispiel Fedora oder
Ubuntu
Und Mint und so benutzen
Wobei Mint hat kein Wayland
Dort läuft das in der VM
Ja
Aber hier so selbst installiert
Funktiert das nicht, das ist ziemlich
Im Arsch
Doch, ich glaube sogar ein paar, also Ubuntu hat
Mittlerweile Wayland by default und Fedora
Glaube ich auch
Gar nicht mehr so wenige
Übrigens, wer die Backgrounds nice
Findet, die sind auf Github
Da sind jede Menge drin
Für alle
Täglichen
Äh
Lebenslagen, so
Der Pepo, der Hamburger futtert
Kekse futtert
Der an seinem Birtencomputer arbeitet
Der Lirdchamp
Energydrinkt
Selbstverständlich
Ach Leute, wisst ihr, was es heute gibt?
Ihr kommt nie drauf
Nudeln mit Lachs futtert
Bügelt
Gewichte hebt
Einfach nur Template für nächstes
Nächstes?
Der Daily Scrum macht
Und dann gibts das auch noch in unterschiedlichen
Ausführungen für ins Bett gehen oder aufstehen und schlafen und träumen und
Zähne putzen
Und Max FPS gucken
So, also dann lasst uns mal ein paar Sachen gucken
Auf Youtube
Ich wollte mir doch das Video zu SSH
Ja, das wollte ich mir doch angucken
Wahrscheinlich wird da auch nicht mehr drinne vorliegen
Aber ich bin schon auf dem Weg
Wahrscheinlich wird da auch nicht mehr drinne vorkommen
Als das, was wir am Freitag schon rausbekommen haben
Aber
Gucken wir mal
A backdoor has been found within LibLZMA
A package within the XZ library
That does a lot of the compression on the internet
Now the reason why this is such a big deal
Is that the XZ library
In this version of LibLZMA
Tut das wirklich
A lot of the compression on the internet?
Ich dachte die meiste Compression im Internet
Ist immer noch
ZLib
Und Gzip
Wobei Gzip ist ZLib
Oder?
ZMA is used in Open SSH
You know the package that allows you
To have an SSH server
That gives people access to your server
Provided they have credentials
Aber glücklicherweise hat keiner so einen neuen Server im Internet stehen
Dass er die betroffenen Packages hat
A backdoor in the compression library
It effectively gives that person
Unfettered access provided they speak
The right sequence of words into the backdoor
This story is still developing
We're still learning a lot as we go
But in this video I want to talk about
Why this is such a big deal
How the person who found it discovered this backdoor
And what this means for the
Weil seine SSH Verbindung 5 Millisekunden langsamer war
Future of contributions to open source projects
Let's dive right into it
Also if you're new here, hi
This is a level learning channel where I talk about
Programming, cyber security and a bunch of other stuff
If you like that or just want to hang out with me
Hit that sub button, really appreciate it
Also, we're going to talk about
Open wall lists on OSS security
Open source
Ach, open wall hieß das
Genau, den Post haben wir uns am Freitag schon angeguckt
Software security, which is a big
Alter, was ist denn das für eine Zeitzone
Minus 7
Thread where people can submit requests and submit comments
About open source projects
As it applies to the security of systems
Now, this list here is by Andres Froon
I'm probably going to butcher your name, dude, I'm sorry
Ja
Aber
He's not a security researcher
He's not a malware reverse engineer
Ich get it, Freund auszusprechen
Ist tatsächlich schwierig
Genauso, wisst ihr was das
Wisst ihr was der komplizierteste
Name ist für Amis auszusprechen
Schon paar mal gesagt, das ist Uwe
Uwe, können die einfach nicht aussprechen
Uwe
Uwe
Die kriegen es einfach nicht hin Uwe auszusprechen
He's just a guy
And as we'll see in his list
The reason why he dove down this rabbit hole
Is because he noticed a few odd symptoms
Was nutzt du eigentlich von JetBrains
Alles
Also, naja, alles ist übertrieben
Was ich von JetBrains
Ich würde es dir gerne zeigen
Wenn die JetBrains Toolbox
Nicht wieder meine 4M crasht
Hände weg
Hände weg vom Rechner
Brake
Okay, also aktuell habe ich installiert
Rider, Pycharm, Goland und Sea Lion
Darf ich klicken?
Oh, ich darf klicken, nice!
Ich glaube
Diesmal ist es nicht kaputt gegangen
Fuck!
Warum geht das immer kaputt
Wenn ich die JetBrains Toolbox aufmache
Mann
Was ist das für ein Scheiß
Das ist nur wenn ich die JetBrains
Nur, sonst nirgendswo
Nur wenn ich die JetBrains Toolbox aufmache
Ich verstehe das Problem nicht
Mann
Also wie gesagt, ich tippe drauf
Dass es an der OpenGL Implementierung von 4M liegt
Vielleicht wäre es sogar mit dem Update gefixt
Aber ich traue mich nicht zu updaten
Also ich habe das
JetBrains All Desktop
Pack
Und jeder
Der auch nur entfernt
Sein Geld
Oder auch nur seinen Spaß
An Softwareentwicklung
Hat
Und Technologien benutzt
Die hier unterstützt werden
Denen kann ich das nur empfehlen
Einfach
Ja, Toolbox Backdoor 100 Pro
Also das
All Products Pack
Kostet euch
Also ich bin jetzt mittlerweile schon hier im dritten Jahr
Kostet euch 289 Euro im Jahr
Deswegen denke ich mal
Für einen der einfach nur Hobbymäßig
Einmal im Monat
Ein bisschen was in Go bastelt
Oder in Python scriptet
Ist das vielleicht etwas Overkill
Doch VSCode benutze ich auch
Ich benutze VSCode für
Frontend Sachen
Ich mag WebStorm nicht
Deswegen habe ich es auch nicht installiert
Also ich benutze für
Die ganzen Backend Sachen
Und also hier
Microcontroller Zeug C-Line
Wobei ich dafür manchmal auch VSCode verwende
C-Line
Goland für Go
PyCharm
Wobei PyCharm gibt es auch
In der Community Version kostenlos
Die im Prinzip keinen großen Unterschied ist
Zur kostenpflichtigen
Version
Und Rider
Rider benutze ich mit Abstand am meisten
Weil ich sehr viel in DotNet mache
Früher habe ich noch Ruby Mine regelmäßig verwendet
Aber ich habe ewig nichts mit Ruby gemacht
WebStorm ist nicht so meins
Deswegen ich benutze so
Ich benutze eigentlich viele Sachen
Relativ regelmäßig daraus
C-Line, PyCharm, Goland und Rider
Und für mich allein schon
Allein schon für Goland und Rider lohnt sich das
Weil DotNet in Visual Studio Code
Und ich finde
Zumindest früher hat Go
In Visual Studio auch
Ach übrigens Rust Rover haben wir auch benutzt
Das ist noch nicht offiziell dabei
Weil das noch Preview ist
Das werde ich dann aber auch benutzen sobald es rauskommt
Also ich benutze jetzt schon die Preview Version
Fünf Sachen sind es
C-Line, Goland, Rider, PyCharm und Rust Rover
DotNet in Visual Studio Code
Ist pain in the ass
Kannste knicken
Go in Visual Studio Code war früher auch ganz abartig
Also
Mittlerweile ist es wohl deutlich besser geworden
Sodass man vielleicht sagen kann
Dafür bräuchte man es eigentlich nicht
Also eines der größten Probleme
Die ich früher hatte mit Go in Visual Studio Code
Ist, dass der
Go Language Server öfters gerne mal gecrashed ist
Und dann kein Autocomplete mehr ging
Regelmäßig so nach 20 Minuten
20, 30 Minuten
Ne den AI Assistent habe ich nicht aktiv
Nach 20, 30 Minuten ist dann der
Language Server von Go gecrashed
Und ging Visual Studio Code
Außerdem war das eh ultra laggy die Code Completion
Für Go in Visual Studio Code
Früher sag ich früher
Ich habe es jetzt schon eine ganze Weile nicht mehr probiert
Und das zweite war
Sobald du Interop Sachen mit Go gemacht hast
Also wenn du beispielsweise
Go Funktionen als C kompatible
Funktionen exportiert hast
Da musst du ja in Go
Weil das ist halt Go
Und Go ist teilweise etwas weird champ
Wenn man das benutzt
Kann man nämlich wenn man hier
Ja wenn man hier mal beispielsweise reinguckt
Hier Go
Da kann man solche Sachen hier machen
Man kann quasi
Go Funktionen exportieren als C Funktionen
Das funktioniert so
Ich finde das sehr unintuitiv
Zu benutzen ehrlich gesagt
Aber wie einiges in Go
Haben sich die Go Leute halt gedacht
Das ist eine gute Idee
So und dann muss man hier teilweise auch so
C Definitionen reinschreiben
In sein Go File
Und dadurch das das hier oben steht
Und am Anfang Import C steht
Erkennt Go dass das irgendwie so eine
Interop Projekt ist
Und er C sei
Whatever
Allein schon wenn das in der Datei drinnen gestanden hat
Hat dafür gesorgt dass der Visual Studio Go Language Server
Instant gecrashed ist
Nach 30 Sekunden
Dementsprechend ich konnte gar kein Language Server benutzen
Also kein Go Plugin
Für Visual Studio Code benutzen
Das war Schrott
Und dann habe ich angefangen
Go Land zu verwenden
Und seitdem bin ich
Gestickt mit Go Land
Und es hat funktioniert
Also wenn man da Spaß dran hat
Oder auch nur entfernt
Damit irgendwie ein bisschen
Sein Geld verdient
Ich bin nicht hauptberuflicher Softwareentwickler
Aber ich arbeite in dem Bereich
Wo es sehr sinnvoll ist
Auch ein bisschen Softwareentwicklung
Skills zu haben
Dann lohnt sich das für mich
Ich habe versucht auf der alten Arbeit
Mal
Die Firma dazu zu bekommen
Das Package zu kaufen
Die haben es aber bis heute nicht hinbekommen
Also bis ich dort weg bin haben sie es nicht hinbekommen
Mal ein paar Jahreslizenzen
Zu kaufen
War ein Ding der Unmöglichkeit für die
Ja die haben Fleet rausgebracht
Aber da sehe ich noch nicht
Dass das in irgendeiner Art und Weise Visual Studio Code Killer wird
Es gibt ja auch noch mehr
Es gibt doch jetzt diesen
Wie heißt das andere Ding
Wo die ganzen Mac Entwickler jetzt so drauf schwören
Ich habe es schon wieder vergessen
Blazingly Fast
Written in Rust Edit Z
Ist das eigentlich mittlerweile für Linux
Linux Build Crash
Ist das schon offizielles Linux Build
Ich glaube es ja nicht
Nö gibt es nicht
Das wird alles
Kein Visual Studio Code Killer
Visual Studio Code hat einen
Riesen Vorteil
Und Nachteil in einem
Kann man ja auch meinetwegen so sehen
Und zwar Javascript
Beziehungsweise halt
Browserbasiert und ein bisschen NodeJS Krempel
Früher war es Elektron based
Mittlerweile ist es
Ja Microsoft Elektron based
Weiß nicht wie das heißt
Aber es ist quasi ein bisschen
Leichtgewichtigeres Elektron
Also der große Vorteil
Von Visual Studio Code ist Javascript
Du kannst das Ding
Easy erweitern und Plugins erstellen
In Javascript
Und Javascript ist einfach die mit Abstand
Weit verbreitetste Sprache
Um sowas zu machen
Und es bietet sich auch extrem an
Dass der Editor selbst in Javascript programmiert ist
Das heißt du kannst deine Plugins
Und alles in der gleichen Sprache
Wie der Editor
Das ist einfach wie gemacht füreinander
Also die Extensibility ist einfach
Das Killer Ding schlechthin
Bei Visual Studio Code
Der Rest von Visual Studio Code
Sorgt eigentlich einfach nur dafür
Das es nicht zu abschreckend ist
Das Ding ist nicht das schnellste Editor
Aber schnell genug
Die Features out of the box
Reichen für das meiste
Was Frontend-Entwicklung angeht
Ist das richtig gut out of the box
Und das gepaart
Mit den ganzen Plugins
Die es für alles mögliche gibt
Macht das Visual Studio Code
Einfach zu einem richtig guten
Default-Wahl für sowas
Dementsprechend
Wird es aus meiner Sicht in der nächsten Zeit
Keinen Visual Studio Code Killer geben
Weil das ganze Ökosystem
Einfach zu ausgereift ist
Und das Ding an sich auch
Ganz gut funktioniert
Es ist nice
Das es immer wieder neue Versuche
Und Ansätze und alles gibt
Aber Geschwindigkeit alleine
Bei einem Code Editor
Auch wenn einem das manchmal die NeoWim Leute
Oder irgendwie alle erzählen wollen
Ist halt nicht alles
Wenn Geschwindigkeit bei einem Text Editor
Das einzige wäre was zählen würde
Oder das was mit Abstand am wichtigsten ist
Dann würden alle Sublime Text verwenden
Und keiner
Oder hätten
Keine Müde Chatbrain Idees verwenden
Ist es aber nicht
Weil
Programmieren
Und selbst wenn es nur HTML erstellen ist
Wo ich überhaupt keine Probleme habe
Das dabei zu zählen
Gibt ja Leute die tun dann immer so wichtig
Haha HTML Programmieren
Das ist kein Programmieren
Streng genommen mag das so sein
Aber das ist mittlerweile so komplex und kompliziert
Das es in
Ja Hirn was man braucht
Der der Sache richtigem Programmieren auch nicht nachsteht
Also das meiste
Die meiste Zeit verbringt man nicht mit tippen
Sondern mit denken
Und für das was man dann tippt
Ist es im Prinzip ziemlich egal
Ob das jetzt
Moment da haben die doch witzigerweise
So ein Benchmark bei sich auf der Seite
Ja
Es ist vollkommen egal
Ob
Der Buchstabe den du tippst
In 97 Millisekunden
Angezeigt wird
In 58 Millisekunden
Das macht
Legit keinerlei Unterschied
Das ist um richtig zu sagen
Scheiß egal
Wisst ihr wenn ich hier irgendwo davor sitze
Ja Hups
Und machen wir jetzt
20 30 Sekunden Gedanken
Moment wie muss ich das jetzt schreiben
Ah ok FNT so
Und ob jetzt FNT Printline
Oder was auch immer ich da tippen will
Ob das jetzt 40 Millisekunden
Früher oder später erscheint ist vollkommen egal
Ja
Startup Time ist halt Paintschamp in Visual Studio Code
Das stimmt schon
Aber Startup Time ist auch nicht
Das einzig entscheidende
Das ist halt das Ding
Die Kombination machts bei einem Texteditor
Wow
Seht ihr das
Hat grad rumgebackt hier oben
Ist auch für Chrome Auslastung Bäm
Das ist halt auch nicht das Ding
Die Kombination machts
Und ganz ehrlich die Kombination
Findet ja gut
Ok das ist was
Das lass ich mir gefallen
Ja die Memory Auslastung ist übertrieben
Visual Studio Code ist die Memory Auslastung echt
Krasser Shit
Und das war zu Elektron Zeiten noch mehr
CLion
Wundert mich nicht
Das Ding startet zig Prozesse
Und ist selbst in Java programmiert
Und hat zig Java Threads und Runtimes laufen
Dass es funktioniert
Das ist tatsächlich finde ich
Der einzige Nachteil von diesen
Jetbrains Sachen
Wenn du drei Sachen laufen hast
Dann
Hast du schon ganz schön viel RAM
Verbrauch
Also was ich
Teilweise ganz gerne in Kombination verwende
Sagen wir mal
Wir machen hier Rider auf
Wir machen
OKS
Wir machen Rider auf
Dann machen wir auf dem zweiten Desktop
Oder hier mal noch Goland auf
Weil wir in irgendwelchen
Dingern auch noch Go brauchen
Und dann machen wir noch Visual Studio Code auf
Und dann hast du halt auf einen Schlag
Jetzt erstmal
Vier Gigabyte RAM voll
Einfach
Vom puren
Offen haben
Der IDE ist unter Editors
Das stimmt schon
Das ist schon ein bisschen Paints Champig
Wobei so richtig sehen tut man es
Jetzt ja nicht
Man weiß ja nicht wie viel es vorher waren
Gucken wir mal
Jetzt machen wir den Kram mal wieder zu
Wir könnten auch
Wir könnten auch mit Hardtop gucken
Guck mal
Vier Gigabyte
Vier Komma Fünf
Sogar ungefähr
Vier Komma Fünf Gigabyte RAM Usage
Nur für
Meine IDEs
Auf der anderen Seite ist es aber auch wurscht
Weil sogar meine fucking VM
Hat 24 Gig RAM
Und mein eigentliches System
Hat 64 Gig RAM
Und es könnte sogar noch viel mehr geben
Also ja das ist doof
Aber das ist auch nicht schlimm
Das es so viel RAM benutzt
Weil Systeme heute haben viel RAM
Also deswegen muss ich halt sagen
Rein mit Performance Sachen
Musste halt
Kannste alleine auch nicht punkten
Weil die anderen sind schnell genug
So das es nicht so sehr nervt
Als das man sagt ey
Das ist so viel angenehmer
Das es jetzt 40 Millisekunden schneller erscheint
Ja
Wäre Visual Studio Code jetzt
Keine Ahnung 250 Millisekunden
Und das 58
Das würdest du richtig spüren
250 Millisekunden Delay beim tippen
Und das spürst du richtig
Aber so
Juckt nicht
Welche Funktionen
Fehlen deiner Meinung nach bei Visual Studio Code
Fällt mir jetzt nichts ein
Da müsste ich
Jetzt längere Zeit was am Stück gerade heute
Mit gemacht haben
Weiß nicht
Eine Sache die ich witzig finde
Das es die nicht gibt
Warum gibt es keinen Browser in Visual Studio Code
Nicht das man es braucht
Mir persönlich ist es egal
Weil ich kann einfach
Visual Studio Code aufmachen
Und
Daneben einen Chromium Browser
Und wenn ich Frontend entwickle
Geht das so genauso
Ich brauch den nicht eingebaut
Aber es gibt keinen Browser
In Visual Studio Code
Und da verstehe ich nicht warum
Weil Visual Studio Code selber ist ein Browser
Deswegen verstehe ich nicht warum es keine Browser Funktionalität gibt
Ja gibt es
Das Ding ist von Microsoft
Das hatte glaube ich tatsächlich die erste Integration überhaupt
Ja im Gaming würdest du das spüren
Aber da ist es ja auch nicht so
Dass du 80%
Denkst und 20% tippst
Da machst du eher Sachen parallel
Denken und
Inputen
Und beim Programmieren denkst du zu 80%
Und dann schreibst du was
50-30
Die 50 Millisekunden könnten ein Backdoor sein
Ja mittlerweile
Weiß man nie
Ok ich hab mich jetzt etwas
Sidetracken lassen
Programming E-Sport
Du wirst lachen sowas gibt es
Hier
Nennt sich
Competitive
Programming
Und die coolen Leute
Die coolen Leute
Das ist eher
Das ist eher ein ganz krasser Dude hier
Die coolen Leute wisst ihr was die benutzen
Chat ratet mal
Ratet mal
Jetzt mal für die Leute die es nicht wissen
Ratet mal welche Programmiersprache
Und welchen Editor
Sehr beliebt ist
Welche Kombination sehr beliebt ist
In Competitive Programming
Editor und Programmiersprache
Zwei Sachen
Eine Sache verstehe ich sofort
Andere weniger
Ja
Also Splixer hat Recht
Es ist C++ und Vim
Es ist nicht Go
Es ist nicht was anderes
Und das liegt daran
Vim ist so beliebt weil Vim
Reines Editieren
Wenn man quasi
So programmiert wie es Competitive Programmer machen
Nämlich Gehirn zu Text
Also
Die machen das ja wirklich parallel
Denken und Tippen
Weil Vim mit Abstand
Sie hat von Hirn zu Text
Wenn man das verinnerlicht hat
Und C++
Liegt daran
Das hat mehrere Gründe
Zum Ersten
Weil das relativ schnell ist
Weil das wenig Speicher braucht
Was gut ist für die ganzen
Validierungsgeschichten die es gibt
Also wenn du an irgendeiner Competitive Programming
Competition teilnimmst
Dann bekommst du eine Aufgabe
Und am Ende
Da steht dann sowas drin wie
In ihrer Garage stehen 5 Weihnachtsbäume
Und 30 Elfen warten vor der Tür
Und wie geben sie
Also da gibt es dann so komische Beschreibungen
Von dem Problem
Und am Ende
Dann musst du was programmieren
Und
Wenn es ausgeführt wird
Ist halt auch wichtig
Dass du innerhalb von Ausführungszeit
Und Memory Requirements brauchst
Von diesen Prüfungstools
Dein Code wird dann überprüft
Ob das den Output liegt
Und wer den Code liefert
Den es liefern soll
Und
Damit diese Validierung
Alles drum herum schneller geht
Bietet es sich an das in C++ zu machen
Weil das schnell ist
Und wenig Memory hat
Dazu kommt man sich fragen
Warum machen das die Leute nicht in Rust
Und warum machen das die Leute nicht in C
Das ist einfach die Kombination aus
Geschwindigkeit
Memory Verbrauch
Vom C++
Streng genommen
Für sich ist die C++ Standardlibrary
Verglichen mit der .NET Standardlibrary
Einfach nur abgrundtief schrottig
Aber für so die Standarddinger
Für die Standardprobleme
Die in solchen Competitive Programming Aufgaben
Drankommen
Ist die ganz nice
Und die Kombination macht es
Deswegen ist C++ enorm beliebt
Und WIM
Weil Gehirn zu Text einfach am schnellsten geht
Das sieht dann ungefähr so aus
Ja
Der Typ liest jetzt das Problem
Und dann geht es los
Gleich macht der WIM auf und startet
Was
Übrigens
So schnell wie der scrollt liest er das
Und versteht er das
Die Typen sind absolut next level 5 head
Let's go
Jetzt wird das gebaut
Achja und übrigens
Was bei denen auch sehr beliebt ist
Abkürzungen verwenden
Da wird nix irgendwie ordentlich benannt
Da wird alles abgekürzt
T
I V
D
Und die sind so abgedreht
Das die mittlerweile sogar Makros haben
For each life
Weil die
Eingebauten C++
Also das ist wirklich ganz ganz abgedreht
Also
Der Typ hier besonders
Die sind super krass drauf
Guckt euch das mal an! What?
Es geht nicht um Lesbarkeit
Es geht um schnell fertig werden mit der Ausgabe
Mit dem Programm
Wusstet ihr überhaupt
Das was Tilde I überhaupt macht
In C++
Ich hab keine Ahnung was Tilde I macht
Was macht Tilde I
Ist das irgendwie negate oder sowas
Oder was ist das überhaupt
Warum ist das gültige Syntax an der Stelle
Geht das auch gegen KI
Ich glaube in der heutigen Zeit
Hast du bei Competitive Programming
Sicherlich Probleme dass
Leute versuchen die Aufgaben von KI
Lösen zu lassen
Aber ich glaube die sind einfach noch nicht gut genug dafür
Ich hab keine Ahnung was Tilde I macht
In C++
Man versteht das Programm nicht
Er versteht es
Reicht ja auch
Ja und das ist übrigens ein weiteres
Argument dafür
Das das stimmt
Was ich immer über Rust sage
Das Rust eine coole Programmiersprache ist
Aber das Rust keine Programmiersprache ist
In der du schnell entwickelst
Wenn das nicht stimmt
Würden die Leute auch garantiert Competitive Programming
Mit Rust
Als Main Sprache betreiben
Aber die Rust Standard Library ist einfach nicht
Umfangreich genug
Und die Entwicklungsgeschwindigkeit ist einfach nicht
Umfangreich genug
Der ist auch unter Windows glaube ich unterwegs
Da verstehe ich die Welt nicht
Aber der Erfolg gibt ihm Recht
Werde ich nichts gegen sagen
Ok wo sind wir eigentlich stehen geblieben
Wir wollten uns das Video angucken
Zur SSH Sicherheitslücke
Erstens
Das haben wir auch schon gesehen
Basically he found that his logins
To his SSH Er CDU
Yeah das haben wir auch schon gesehen
Ja das haben wir auch schon gesehen
Yeah das haben wir auch schon gesehen
Memo
memory
analyse
OH ok
Er guckt sich einfach nur den Blogpost an
Das haben wir am Freitag schon gemacht
30 Minuten nach dem der Kram veröffentlicht war
Also
Die E-Mail ist von
8 Uhr 51
Minus 7
Minus 7
Was haben wir denn jetzt
Wir haben jetzt Sommerzeit oder
Seit heute
Also CET
CEST
Wie heißt denn das dann
Tja wie macht man ordentlich
World Time Buddy
What the fuck
Was ist denn Minus 7
Ach komm scheiß drauf
Wurscht
Vielleicht waren wir auch 2 Stunden später
Aber wir waren am Freitag genauso weit wie das Video
Da ist er ja schon wieder
Das können wir uns schenken
Das Video
Was haben wir denn sonst noch hier
Was ist das denn
World Fastest
Lego Technik Autoklicker
Hat mir YouTube empfohlen
Vorher dachte ich mir sieht ganz interessant aus
Das ist ja
Die Leute
Ich weiß auch nicht
Warum ich das so lustig finde
Vielleicht ist es das Geräusch oder so
Keine Ahnung
Moment
Ist das
Also
Ist das quasi so das Gutspedal
Ja oder
Ja
Geile.
Okay, ich hoffe, er macht das mit einer alten Maus, weil wahrscheinlich ist die danach im Arsch.
Oh Mann, Alter.
Was ist das für eine Maus, Leute?
Von der Form her hätte ich gesagt, eine olle Logitech.
Habt ihr erkannt, was es für eine ist?
Könnte aber auch genau so Zoe oder was, wobei.
Okay, eine billige Dell-Maus.
Moment, die Lego-Technik-Motoren haben mittlerweile LEDs?
Okay, Moment, Moment.
Das muss ich mal ausführen.
CBS-Tests, okay.
Das machen wir mal in Chrome, weil kleinster Input-Lag.
Okay.
Okay.
Achtung, ich probiere mal.
Let's go.
Alter, das ist anstrengend.
Okay, 10 CPS.
Auf geht's.
Boah, meine Finger, Mann.
Okay, komm.
Wir machen mal, mal gucken, ob ich alt geworden bin, Leute.
Mal gucken, ob ich alt geworden bin, okay?
Mal gucken, wie schnell ich heute bin.
Aha.
Ups.
Ich war schon mal schneller.
Ah.
Nicht schlecht, oder?
Ich bin fast 40 Jahre.
Schnelle Reaktionszeit hat manche mit 20.
Statistik.
Guck mal.
The average reaction time ist 273 Millisekunden.
Ja, guck mal.
250, also ich bin deutlich schneller.
Als die, als der Durchschnitt.
Und das mit 40.
So, Reaktionszeit noch on point hier.
Okay, weiter.
Na, das ist denn schnell genug.
Ach so, was hatte ich eigentlich für einen Rank?
Wisst ihr noch?
Was kam noch mal raus jetzt?
Cheater hatte ich auch, okay.
Äh.
Ja.
Oh, nee, das funzt nicht, oder?
Das ist so wackelig, das bricht gleich ab.
Also noch kann ich schneller klicken als der Lego-Technik-Motor.
Aber das ist bald vorbei, vermute ich.
Jetzt kommt die noch eine größere Übersetzung.
Jawoll.
Wisst ihr?
Wisst ihr, ich glaube, die Maus-Hersteller, die haben auch sowas.
Nämlich zur Belastungstest von Mäusen.
Sowas in der Richtung haben die.
Bestimmt.
Um zu testen, wie viel die Mäuse im Durchschnitt aushalten, bis sie kaputt gehen.
Sogar mit Zeitlupe.
Na, schon besser.
Schon besser.
Das ist auch irgendwann quasi durch die Feder im Button beschränkt, wie schnell die denn wieder hochdrückt.
Warum?
Warum braucht er das mit Control?
Macht das Bild?
Ist fancier, oder wie?
Gab es nicht, oder ist es nicht sogar noch in MW3 so, oder in MW2 so gewesen,
dass man mit manchen Singleschusswaffen,
äh, unendlich schnell triggern konnte?
Weil, die wieder pepeger waren mit dem Programmieren?
Das es quasi keine Geschwindigkeits-, keine Schussgeschwindigkeitsbegrenzung gab bei manchen Singletriggerwaffen?
Für sowas ist das doch quasi ein undetectable, undetectable Cheat.
Wo es halt nur die Maus noch gescheit bewegen können mit.
Wisst ihr, was ich mich schon immer gefragt hab bei diesen, äh, RPM-Testern?
Wie funktionieren die?
Hab keine Vorstellung davon, wie so ein RPM-Test funktioniert.
Die Dinger gehen ja auch ohne, dass da ein weißer Strich drauf ist.
Ach, du brauchst Reflektorfolie.
Ja, weil ansonsten wüsste ich auch nicht, wie das gehen soll.
Ja, und vor allem geht das bei der Geschwindigkeit, fliegt es direkt auseinander.
Wisst ihr, was eigentlich fast noch einfacher wäre an der Stelle?
Einen Microcontroller nehmen, der USB kann,
den sich als USB-Maus registrieren lassen,
und dann einfach über die Firmware dort das Klick-Signal schicken.
Du musst ja nicht wirklich klicken, dass es als Klick registriert wird.
So schnell klicken kann keiner mit einem physischen Gerät.
Das kann man dann aber nicht mit Lego bauen, das stimmt.
Okay, deutlich advancedere Konstruktion.
Oh, sogar mit Federung, hä?
Boah, five hat time.
Ja, gleich bricht die Maustaste ab.
Oh, 50.
Leute, die Seite macht schon gar nicht mehr mit.
Die Seite kackt schon ab.
Die Webseite kommt schon immer mit.
70.
Ja, soll er nicht langlebig, ist das Ding natürlich nicht.
Ja, aber es ist rein kleinseitig, da passiert ja nichts.
Interesting.
Moment, ich will kein Autoplay.
Michael, 50 Billionen, danke schön für den Sub.
Ich habe übrigens heute noch gar nicht reingeguckt in meinen Subscriber.
Cybermanager.
Aber ich glaube, ich habe nichts übersehen.
Mr. Krabs!
Nee, das war heute gar nicht.
Das war letzter Stream noch.
Ja, Leute, VIP-Watcher, Viewer am Start.
Neue Badge.
Es wird echt mal Zeit, ne?
Ich glaube, meine Emote-Erstellerin kann aber gerade nicht.
Die kommt so weit, ich weiß, aus der Ukraine.
Die haben ja andere Probleme gerade, als Twitch-Emotes erstellen.
Das wäre geil, ne?
Wenn dann über 20 das Ganze zu Cheater werden würde.
Workout-Champ.
So, was haben wir denn sonst noch hier?
The Downfall of Redis.
Da hatten wir es doch gerade von.
Redis ist nicht mehr Open Source.
Da gucken wir uns das jetzt noch an.
Was ist das?
Why this works?
Hä?
Warum sollte das nicht, warum sollte das nicht wirken?
Außer, außer, dass ich immer nicht mehr so viel Zeit habe.
Außer, dass ich immer nicht mehr so viel Zeit habe.
Außer, dass ich immer nicht mehr so viel Zeit habe.
Außer, dass ich immer nicht mehr so viel Zeit habe.
Außer, dass ich immer nicht mehr so viel Zeit habe.
Weil ich immer nicht merken kann, ob es Prozent D oder Prozent I oder was auch immer ist.
Kommt da noch irgendeine...
What the f...
What?
Das geht?
Egal, Downfall of Redis.
Redis ist nicht mehr Open Source.
Beziehungsweise, so ganz stimmt das ja auch nicht.
Wenn man Open Source so definiert, wie diese Open Source Foundation oder wie die heißen, dann nicht.
Wenn man das so definiert ist, man hat die Möglichkeit, sich den Source-Code anzugucken, dann schon.
Aber gucken wir uns das mal wirklich in Ruhe an.
Denn ich muss ehrlich sagen, ich habe von dem ganzen Drama gar nichts großartig mitbekommen.
Wie sieht es denn da aktuell auf Shithub aus?
Die haben bestimmt den Threads geschlossen, hä?
Ja, hier, da gab es doch garantiert mehr Diskussionen.
Das haben die 100 pro geclosed.
Switch to Apache-License.
Das haben die abgelehnt, hä?
Hier gibt es bestimmt Diskussionen drunter.
Ja.
Ja.
Ja, hier gab es...
Jetzt wird er richtig hart runtergetrollt, oder?
Was ist mit Redis?
Redis ist zu einer streng genommen nicht mehr Open Source-Lizenz geswitcht.
Gucken wir uns mal das Video an.
Da kriegen wir es hoffentlich etwas genauer erklärt.
Weil ich habe das Drama auch nur so am Rande mitbekommen.
Das weiß ich.
Das weiß ich.
Redis heute ist die Firma Redis.
Und Redis selbst wurde halt von irgendeinem Typ erstellt, der, keine Ahnung, wahrscheinlich
dann irgendwann die Redis-Firma gegründet hat.
Right.
A right that ended in the very recent events of Redis changing their license to actually
not be Open Source anymore.
And scamming their community, contributors and even the founder of Redis himself.
Okay.
It all started in 2007.
When Salvador Sanfilippo, better known as Anti-Rez on the Internet, was building a tool called
LLOOGG.
It was a very early...
LOG...
I need GG.
LOG?
LOG?
...competitor to Google Analytics.
The main selling point of LLOOGG was their real-time visitor tracking feature, which
Google Analytics did not support until years later.
Because of the...
...massive amounts of data written to the database, they ran into performance issues
using MySQL.
And her...
Ach, daher kommt das.
...believed that using memory instead of the hardware to store the data, like MySQL...
Ist ja nicht das erste Projekt, was so aus dem...
Wieso soll ich sagen, so dem Bedarf geboren wurde, weil es noch nichts gab.
Also, also sprich...
Redis wurde erfunden...
...als Caching für einen Google-Analytik-Konkurrent, der Echtzeit-Tracking quasi ermöglicht.
Ergibt schon irgendwie Sinn, ja?
Wenn's...
Das war ja sonst...
Weiß ich nicht, hat er ein Ja gesagt?
Muss schon ein bisschen her gewesen sein.
...would solve the problem and program the first prototype of what we will later know
as Redis.
In 2009, Anti-Rez published the Redis Core on GitHub.
To say it with his own words...
At this point, the server may not have been perfectly stable, but soon it will be an essential
part of many web applications and massively impact how we design modern software architecture
to this day.
The first hacker-news-posting of Redis did not get much attention at all, only 23 uploads
and a few...
Guck.
2009.
...were Leute Ruby programmiert haben.
Heute interessiert sich niemand mehr für Ruby, was zum größten Teil daran liegt, dass
niemand mehr neue Sachen in Ruby on Rails macht.
Es gibt noch ein paar Legacy-Projekte.
Und man findet eventuell, wenn man Glück hat, auch noch einen Job, wenn man Bock hat
auf Ruby, aber...
Leider ist es ziemlich dead.
Was ich sehr schade finde.
Ich persönlich mochte Ruby on Rails und Ruby als Programmiersprache vor allem.
Rails...
...könnte ich damit leben, dass das den Bach runter geht.
Aber Ruby selbst, finde ich, ist eine mega-nice Programmiersprache.
Wird sogar fast so weit gehen, dass es neben C-Sharp meine Lieblingsprogrammiersprache überhaupt
ist.
Leider kann ich die letzten Jahre über nichts mehr in Ruby machen, weil halt...
Ruby Null Angel sagt es.
Comments.
But Anti-Rez continued to work on Redis.
And soon, Redis started to spread in the Ruby community and attracted startups, who will
later turn out to be unicorns.
Instagram was entirely built on Redis in its history.
Instagram was entirely built on Redis in its history.
Ah, wusste ich nicht...
...Ruby on Rails in its early years.
GitHub used it to build the job-queuing system, and Twitter improved their timeline-page-performance
using Redis.
After gaining...
War GitHub nicht eh, äh, nicht GitHub...
War GitHub nicht...
Ruby on Rails am Anfang und Twitter auch...
Ich glaube, beide waren am Anfang Ruby on Rails.
Ich glaube, GitHub ist heute teilweise immer noch ein bisschen Ruby und Twitter gar nicht
mehr.
glaube ich, auf Java-Geschichten
umgeschwenkt. Dann versuch doch
einen Trend zu starten.
Du meinst den Ruby-Trend?
Nee.
Dafür müsste ich mich
mehr mit Ruby wieder beschäftigen und
Sachen in Ruby machen,
wo meine Zeit wahrscheinlich
bei anderen Sachen besser aufgehoben
wäre.
Der Zug ist abgefahren.
Ruby war beliebt,
wurde immer beliebter durch
Rails, aber dadurch, dass Rails jetzt
weg ist, ist halt das große Problem,
dass es kein so richtig großen
herausstechendes
Merkmal
von Ruby gibt,
warum man das verwenden
sollte. Bei Python kannst
du immer noch sagen, ja, das ist halt
im wissenschaftlichen Bereich sehr beliebt,
das ist bei Machine Learning sehr beliebt, ultra viele
Frameworks dafür. Aber Go
kannst du sagen, Command Line Tools für Server,
Cloud Sachen und so. Das hat alles so ein bisschen
seine
beliebte Anwendung.
Aber Ruby fällt mir halt nichts
davor ein. Aber ich mag Ruby als
Sprache.
Wisst ihr, was in Ruby auch schön ist?
Ruby Range
Counter.
Da gibt es ja kein Beispiel.
Als Function.
Ja.
Das finde ich sehr schick.
Sehr schick in Ruby.
Die Syntax ist ein bisschen
gewöhnungsbedürftig.
GitLab war mal Ruby on Rails.
Ich glaube, es ist auch tatsächlich einiges.
Immer noch.
VMware started to sponsor
Redis and hired Antiraz
to continue his work on the
Oh je. Ja, dann wundert mich
nichts mehr. Wenn das VMware ist,
das VMware ist jetzt Broadcom und wahrscheinlich
haben die es irgendwie verkackt.
Database. In 2013
he got sponsored by
the VMware spin-off
Pivotal Software. In the same time
period around 2011
companies started to offer consulting
services for Redis. One of
them was Guarantia Data.
Which will play an essential
role in this entire story.
In 2014
Guarantia Data tried to rebrand
to RedisDB. But after
the pushback of Antiraz, they
reverted the... Moment, die wollten ihre
Firma RedisDB nennen, obwohl sie
nichts mit Redis zu tun haben und einfach nur Redis
Dienstleistungen verkaufen. Oh pfeif, fett move, oder?
...rebranding and
rebranded to Redis Labs
instead. Which... Das ist ja
noch schlimmer. ...is still very confusing.
Around this time, Redis Labs
Das heißt auch Redis Labs
war nicht quasi der Erfinder,
also nicht der Hersteller. Boah, das ist ja super
weird, dass das einfach nur Dienstleister
ist. Redis Labs also transitioned away
from offering consulting services
and focused on providing hosted
Redis services on top of AWS
instead. In 2015
a common investor of
Pivotal Software and Redis Labs
suggested moving Antiraz to
Redis Labs, which employed him
shortly after that and sponsored
Redis from this point on.
Investors play a crucial role
in Redis Labs, because that company
is stacked. Stacked
up with VC money.
They raised over 347
million US dollars
in 7 rounds, from Goldman Sachs,
the Silicon Valley Bank and
more. To set this into perspective,
if we wanted to just fund
the open source project with, let's say
5 developers, each a salary
of 400.000 dollars a year,
...Armee Gehälter,
this would come to
26 million dollars over the span
of 13 years. Less
than a tenth of the funding of
Redis Labs.
Ach so, meinte der 5 zusammen
oder 400k
für jeden Einzel?
This would come to
26 million dollars, let's say 5
developers, each a salary of
400.000 dollars a year.
This would come to
26 million dollars
over the span of 13 years.
Less than a tenth of the funding of
Redis Labs.
After Antiraz transferred over the
Redis IP and Trademarks to
Redis Labs, he left the project
in 2020. In a blogpost
he explained the reasons for stepping
back. He never wanted to be a
...
...
Okay, an der Stelle wusste er eigentlich, das Projekt ist
done, oder? Das werden die
dem hoffentlich ordentlich bezahlt
haben, die Namensrechte
an Redis und die
...
...
...
An der Stelle wusste er wahrscheinlich,
ab hier geht's den Bach runter.
Vielleicht hat er sich auch gedacht,
ich hab eh
nicht mehr so Bock da drauf
und ich hab jetzt hier
die einmalige Chance so im Endeffekt
aus der Sache rauszukommen, auf
die ich eh keinen Bock mehr habe
und ich kann auch mal Stonks machen
für mich selbst.
Weil das werden die dem schon ganz gut bezahlt haben.
Redis Labs, he left the
project in 2020.
In a blog. Okay, er hat wahrscheinlich
2018 geistig damit abgeschlossen
schon, dann haben die noch
2 Jahre über, wie soll man sagen,
die haben wahrscheinlich 2018,
er hatte wahrscheinlich keinen Bock
mehr, die haben 2018
den Transfer der Namensrechte und alles
gemacht, er hat Kohle bekommen und wahrscheinlich
war irgendwie in diesem Vertrag mit geregelt.
Da ist er noch 2 Jahre
dort weiter irgendwie
Post, he explained the reasons for stepping back.
He never wanted to be a software maintainer and used code to express himself.
But one quote inside of his goodbye blog post hits quite a lot harder today.
I believe I'm not just leaving Redis in the hands of a community of expert programmers,
but also in the hands of people who care about the legacy of the community spirit of Redis.
In their goodbye blog post, Redis Labs stated that the core of the Redis project will remain
under the three-class BSD license, as it has always been.
But this will only hold true for a few more years.
Redis was now led by a team of five people.
Three of them are from Redis Labs.
One of them from Alibaba.
And one from AWS.
One year later, Redis Labs officially re-rendered to just Redis, which clearly is what they
wanted all along.
Redis the company was still developing hosted Redis services on top of popular cloud providers,
essentially competing with AWS Elastic Cache.
And we'll find out soon that they were probably not very successful in doing so.
Or at least not successful enough.
While the Redis core team remains small, Redis the company has grown to over 700 employees
today.
Moment, die haben vier Leute, ne drei Leute, drei Leute, die an Redis arbeiten.
Einer ist von Amazon, einer von Alibaba.
Was machen denn die anderen 697?
Wenn ihr Kerngeschäft eigentlich Redis ist.
Meetings.
Ja.
Die haben wahrscheinlich den ganzen Tag mit gemietet, ey.
Today, I could not even make up roles for all of those people if I wanted to, but browsing
through the Wayback Machine snapshots of the Redis website makes me think, quite a few
of them were busy updating their webdesign a concerning amount of time.
And on March the 20th, 2024, the day arrived where VC money defeated open source in the
company.
Redis announced in a blog post that they will be re-branding Redis.
They will move away from the three-class BSD license.
Ich muss mir diesen Blogpost mal angucken.
Mal schnell drüber scrollen.
Der Typ heißt Rowan Troll.
Troll, Troll, Trollope.
Da weißt du schon, was los ist.
Bald kommt raus, das war nur ein April-Scherz mit der Redis-Lizenz.
Alter, wie viel Text.
Um nix, das lesen wir jetzt nicht.
Im Prinzip wird wahrscheinlich einfach nur das ganze schön geredet.
Genauso wie das andere.
Ich weiß nicht, was da los ist.
Ich weiß nicht.
Ich weiß nicht.
Ich weiß nicht.
Ich weiß nicht.
Ich weiß nicht.
Ich weiß nicht.
Ich weiß nicht.
Ich weiß nicht.
Ich weiß nicht.
Ich weiß nicht.
Ich weiß nicht.
Ich weiß nicht.
Ich weiß nicht.
Das lesen wir jetzt nicht.
Im Prinzip wird wahrscheinlich einfach nur das ganze schön geredet, genauso wie das
Unreal jetzt kein Subscription-Model hat.
Obwohl sie'n Subscription-Modell haben.
Na gut, les ich jetzt nicht.
Moment.
Es gibt eine LSP, eine Server-Side-Public-License und eine V2 Redis-Source Available-License,
die Dinge haben immer Namen mann.
welches das niedrigste Schlechtes ist.
Während die 3-Klaus-BSD-Lizenz
eine der erlaubten von der Open Source Initiative ist,
sind die neuen Lizenzen nicht erlaubt,
die sie in der Erkennung akzeptiert haben.
Deshalb wird Redis nicht mehr...
in der Erkennung akzeptiert.
Ja, ich auch nicht.
Moment, das ist die MongoDB-Lizenz?
Gab's da nicht auch mal ein bisschen Stress
um die Lizenz vor ein paar Jahren?
Moment, was, was?
As part of the service?
Also...
Heißt im Endeffekt,
das ist ein bisschen so,
also um die Probleme auszuschließen,
die es bei Elasticsearch gab, oder?
Das ist jetzt zwar MongoDB,
aber erinnert sich noch einer an den Stress mit Elasticsearch?
Dass Amazon quasi gesagt hat, sie bieten Elasticsearch an?
Ja.
Nee, wie war das bei Amazon nochmal?
Sie bieten Elasticsearch an
und nennen es Elasticsearch,
obwohl es mit Elasticsearch nichts zu tun hat?
Irgendwie, es gab Stress zwischen Amazon und Elasticsearch,
das weiß ich noch.
Daraufhin haben die auch gesagt,
es kann doch nicht sein,
dass sie mit unserer Arbeit Kohle machen.
Vielleicht war das eine ähnliche Sache hier.
...without limitations,
all management software,
user interfaces,
application program interfaces,
automation software,
monitoring software,
backup software...
Okay, du musst quasi...
Alles gelesen.
...and hosting software.
Was keiner machen wird.
...user can run an instance of the service
using the service source code you made available.
Well, this sounds like a nightmare,
especially if you have some sort of
proprietary license software in your stack,
that you simply cannot open source for legal reasons.
After the SSPL was submitted to the open source initiative,
as they wanted to become an approved open source license,
the open source initiative made a hit piece
calling it a FoxPen Source License,
because it restricts who can use it.
The other license in question
is the Redis Source Available License 2.0.
This license does not require you to...
Warum 2.0?
Es gab doch 1.0 nie.
...publish the source code,
but it restricts who can use it directly.
In the license terms it says,
you may not make the functionality of the software
or a modified version available to third parties.
Ja, das ist im Prinzip sowas ähnliches,
was Elasticsearch auch gemacht hat,
dass Amazon jetzt nicht Kohle damit machen kann.
Das finde ich auch erstmal gar nicht so schlimm.
Frage ist, ob du es weiterverwenden kannst
als Part eines Services, was quasi nicht...
Also, wenn dein Service quasi ist,
ich biete eine, keine Ahnung,
ein Terminplaner as a Service an,
dann kann ich das nicht machen.
Aber wenn ich ein Service anbiete,
der quasi ein Redis-Konkurrent ist,
der unter der Haube aber selbst Redis verwendet,
dann darf ich das nicht.
Das würde ich verstehen,
aber so generell ist das natürlich doof.
Reaktion, Jan, danke für den Prime-Sub.
You may not make the functionality of the software
or modified version available...
Ja, das ist natürlich doof,
aber wenn du es nicht machst,
dann kannst du es auch nicht machen.
Ja, sowas meinen die damit, oder?
Das ist das, was Elasticsearch auch gemacht hat gegen Amazon.
Er hat gesagt, die Veränderung sollte dich nicht beeinflussen.
Aber wenn nicht Redis selbst mir mit Sicherheit sagen kann...
Wie ist das eigentlich?
Chat, überlegt euch mal.
Stellt euch mal vor,
ihr habt vor einem Jahr oder so bei Redis mitgewirkt.
Ihr habt einen Pull-Request gemacht auf GitHub,
weil ihr einen Fehler gefunden habt,
ihr habt den gefixt, Pull-Requests eingereicht,
oder sei es auch nur,
ihr habt an der Dokumentation mitgewirkt, was auch immer.
Ihr habt Contributed zu Redis.
Das heißt, ihr habt den Lizenzbedingungen von Redis
zu dem damaligen Zeitpunkt zugestimmt.
Was ist denn, wenn ihr nicht RSA-LV2 zustimmt,
aber eure Sache ist ja immer noch drinnen?
Wie geht denn das überhaupt?
Ich mein, klar, bis zu dem Zeitpunkt der Umstellung
ist das kein Problem gewesen.
Und bis zu diesem Zeitpunkt
könnte auch jeder Redis nehmen und Redis forken, sozusagen.
Aber eure Sache ist ja nach wie vor drinnen.
Darf das einfach re-licensed werden,
obwohl es eure Sache ist,
unter einer anderen Lizenz, der ihr nicht zugestimmt hat?
Ey, das ist, glaube ich, ziemlich kompliziert rechtlich, oder?
You can.
No matter where exactly the limits are,
it is very clear that under none of the new licenses
cloud providers like AWS will be able to provide
hosted Redis services without paying a fee.
Ja.
Which was obviously the goal.
But it is also important to note something else.
If Redis would have had this license
from the very beginning,
Guarantia Data would have never been able
to offer the services in the first place
Moin, Feierabend, Spezi.
to open sourcing their entire infrastructure.
They destroyed the very thing
that made their company exist in the first place.
Ja gut, aber die wollen halt Geld machen.
Wahrscheinlich wird's so sein,
die Cloud-Services von Redis Labs kauft keiner.
Die Leute kaufen AWS-Cache, Google-Cache, Microsoft-Cache,
was auch immer.
Und denen ist egal, ob da unten drunter Redis läuft.
Und letztendlich wollen die so halt Stonks abgreifen.
Die wollen Kohle machen.
Das ist wahrscheinlich die einzige Möglichkeit,
für die gescheit Kohle zu machen,
wenn ihre Services selbst nicht so gut ankommen.
Change.
AWS-Mitarbeiterin Madeleine Olsen,
die vier Jahre lang auf dem Projekt gearbeitet hat,
hat erklärt, dass sie nicht mehr
auf dem Projekt arbeiten kann
und dass es einen echten Preis zu bezahlen war,
so ein geliebtes Open-Source-Projekt zu verlieren.
Aber nicht nur das.
Einige der Hauptkontributoren sind nicht zufrieden mit der Veränderung.
Die Anmeldung für die Veränderung
wird von nicht zufriedenen Kontributoren
und Redis-Händlern verblüfft.
Wieder einmal, das ist kein legales Vorschlag,
aber Redis hat nur re-licensierte Code,
das unter einer komplett anderen Lizenz betrieben wurde.
Und sie haben alle BSD-Lizenz-
Redis ist ein Key-Value-Store quasi.
In-Memory-Key-Value-Store.
Kann man das so sagen?
Oder Chat, wie würdet ihr das definieren?
Notices, die von der 3-Klaus-BSD-Lizenz benötigt werden.
Ich kann mir nicht vorstellen,
dass Antiras das bezeichnet hat,
als er darüber sprach,
um die Legazie des Community-Gesetzes von Redis zu kümmern.
Ja.
Dem Typ wird es egal sein.
Der hat seine Kohle bekommen
bei der Übergabe der Namensrechte.
Legal uncertainty.
People will look for alternatives.
And it is safe to say that they will find them.
100 pro.
There is already KeyDB.
Moment.
Wie viele Forks von Redis gibt es eigentlich mittlerweile?
Ich habe mindestens 3 gesehen auf GitHub.
20?
Ah.
KeyDB, Reddit, Redis.
Ja, die habe ich.
Genau.
Was ist aus dem Fork eigentlich geworden von Terraform?
Open Tofu hieß das doch, gell?
Und was ist aus dem Fork von...
Von...
Das, was habe ich da gefunden zufällig?
Von Rust?
Interessiert niemand, oder?
Wurde halt einfach mal geforkt.
Interessiert aber niemand.
Weil vor 2 Monaten.
Hätte man sich auch sparen können, oder?
Der Terraform Fork geht aber wohl ganz gut.
A cash store that can be used with existing Redis clients.
Both of them are open.
Ah, hier.
Gar nicht.
Source.
And it would really...
Ich meine, es kann natürlich auch sein,
dass sie sich schon ein bisschen so die eigene Bedeutungs...
Bedeutung absegen.
Durch den Move.
Ich kann es aber aus der Sicht von der Firma schon verstehen.
Die finden es halt kacke, dass AWS mit Redis Geld macht.
Und ihre Redis Services nicht so beliebt sind.
Und dementsprechend hätten sie gerne Lizenzgebühren dafür.
Ja.
Das kann durchaus sein, dass Amazon das forkt.
Ja, ja.
Es ist aber auch ein No-Brainer,
für jemanden, der ein neues Projekt startet,
jede Alternative zu verwenden.
Und für den meisten Teil,
kannst du sie wahrscheinlich auch in deinem Existenzprojekt verwenden.
Ohne Probleme.
Ja gut, jetzt wissen wir Bescheid.
Also, so sieht es bei Redis aus.
Wie das langfristig für die Bedeutung des Projekts sein wird,
kann ich echt schwer einschätzen.
Auf der anderen Seite, ich denke mir, Redis ist halt so bekannt und default für viele Leute,
ich kann mir vorstellen, dass es auch weiterhin an Bedeutung behalten wird.
Wobei ich es mir jetzt wirklich überlegen würde,
bei einem neuen Projekt,
es gibt ja jetzt auch schon einige Redis-Alternativen.
Also sprich, warum muss es da noch Redis sein?
Es gibt aber viele Projekte, die haben Redis als Dependency.
GitLab glaube ich zumindest.
Also wenn man es ein bisschen größer,
aber GitLab ist eh absolut Pain in Pobo.
In the ass zu installieren.
Guck mal hier.
Guck mal hier, was haben wir denn?
Triple A Gaming on your Smartphone.
Warum ist das eigentlich auf englisch der Titel?
Ich glaube, mein Browser macht nur wieder ganz komische Geschichten damit.
Triple A Gaming on your Smartphone.
Warum?
But why?
Man könnte...
Ja gut, Emulation...
Klar, ich meine,
man könnte Triple A Gaming
einfach auf der Plattform betreiben,
die Triple A Gaming gebührt,
nämlich PC.
Einzig und allein PC Master Race.
Brauchen wir nicht.
Haben wir nicht sonst noch.
Ein Fireship-Video haben wir.
Seven Tech Leaders who ended up in prison.
Okay, Fireship-Videos sind immer nice.
Ich wette mit dir, ich weiß mindestens eine,
die dort dabei ist.
Nämlich von dieser...
Ich habe vergessen, wie diese Firma heißt.
Diese eine Blonde...
Ähm...
War das die Entwicklerin?
Oder CEOlerin?
Von dieser Firma,
die diese Blutuntersuchungsgeräte herstellen wollte.
Terranos!
Ja, ja, ja, genau das meine ich.
Genau.
Ja.
Dann fällt mir noch,
also einer, der auch im Knast gelandet ist,
der kommt aber wahrscheinlich nicht da drinnen vor,
weil das zu unbedeutend war.
Der Typ, der Reiser FS entwickelt hat.
Das war mal ein Filesystem unter Linux.
Also ich kenne...
Da gab man ein Filesystem unter Linux,
nannte sich Reiser FS.
Das Ganze wurde von Hans Reiser entwickelt.
Das Problem ist nur,
Hans Reiser hat seine Frau umgebracht
und ist im Knast gelandet.
Und danach hat niemand mehr
das Filesystem weiterentwickelt.
Okay, zeig mal.
Das ist Trevor Milton.
Er ist ein Tech-Bro,
der jedem erzählt hat,
dass er eine vollständige elektrische Systeme gebaut hat.
Ach ja, und?
Die Typen von dieser...
von dieser einen Cryptocurrency-Plattform,
die den Bach runtergegangen ist,
die landen oder landeten wahrscheinlich auch schon im Knast.
Wobei, da gab es ja zwei.
Da gab es ja zwei,
die den Bach runtergegangen sind.
Das ist Trevor Milton.
Er ist ein Tech-Bro,
der jedem erzählt hat,
dass er eine vollständige elektrische Semi-Trucke gebaut hat,
die den Welt verändern würde.
Er hat seine Firma Nikola öffentlich mit einer Spac
und wurde über Nacht super reich.
Das einzige Problem ist,
dass diese vollständige elektrische Trucke,
die eigentlich funktionierbar ist,
besser als eine unabhängige Pile von Garbage zu beschreiben ist.
Und jetzt spart er vier Jahre in einem federalen Gefängnis,
um Investoren zu lügen.
Es ist ein primäres Beispiel,
dass es falsch geht,
wenn man es faken muss,
bis man es macht.
Und heute...
Wisst ihr,
wisst ihr,
was ich bei diesen ganzen Scamsachen
immer so geil finde?
Ich meine das nicht explizit dem,
weil es gibt auch viele Sachen,
die einfach,
wie soll man sagen,
so out of hand geraten sind,
die gar nicht wirklich mit
dem Gedanken,
Leute zu scammen,
angefangen haben.
Aber wisst ihr eine Sache,
die mich immer wieder fast
fasziniert ist?
Wie einfach die Leute
ihr Geld an Scammer geben.
Das verstehe ich einfach nicht.
Ich sage nur...
Ja?
Ich meine,
hat ernsthaft irgendjemand
diese Präsentation gesehen
und hat sich gedacht...
Leute,
jetzt mal ernsthaft,
lasst mal diese 44 Sekunden
auf euch wirken
und danach stelle ich euch eine Frage.
Hey,
hey,
hey,
hey,
hey,
hey,
hey.
Hey,
hey,
hey,
hey,
hey,
hey,
hey,
hey,
hey,
hey,
hey,
hey.
Okay,
das reicht.
Jetzt die Frage.
Hättet ihr denen
all eures,
Hättet ihr denen
all eures,
ich kann den Satz nicht,
ich wollte ihn nicht mal formulieren.
Hättet ihr dieser Firma
Ich bin immer wieder begeistert, wie schnell man die Leute davon begeistern kann.
Earth 2, ja das ist auch so ein Ding, Alter.
Ich bin immer wieder begeistert davon, wie schnell man die Leute dazu bringen kann, auf irgendwelche Scams reinzufallen.
Okay, gucken wir mal weiter.
Pile of garbage.
And now he's spending four years in federal prison for lying to investors.
It's a prime example of when fake it till you make it goes wrong.
And in today's video, we'll look at seven other tech bros who had to do hard time.
So hopefully you can learn something and not get caught by the law with your own shady business ideas.
It is March 21st.
And you're watching The Code Report.
A little over a year ago, this guy was one of the richest people in the world with an 11-figure net worth.
But just a few days ago, Sam Bankman...
Ah ja, das ist der Kryptotyp, oder?
Von dieser einen Kryptobörse, die...
Was war das nochmal?
Ich hab's wieder vergessen.
Ich hab da mal ein Video zugeguckt.
Die haben im Prinzip wieder mehr Kohle in Umlauf gebracht, als sie eigentlich haben.
So unterm Strich war es das.
Das war alles nicht gedeckt und am Ende mussten sie dicht machen.
Da wurde auch...
Beschissenes, fucker.
FTX, ja.
Max, was ist deine shady Investment-Idee?
Sowas hab ich nicht, aber ich kann mal meinen Vater fragen.
Der kennt sich mit sowas bestimmt aus.
Mein Vater ist der Professional-Scammer, bevor das Wort Scam gab.
Mein Vater hat schon die Leute gescampt, da gab's das Wort nicht.
Dann nannte man das noch Betrug.
Aber er muss dazu sagen, er hat nie jemand offiziell betrogen.
Der ist ja vor Gericht gelandet, mein Vater.
Wurde freigesprochen.
Die Verträge waren einfach zu wasserdicht.
So went down in 2022, those trades didn't do too well,
and the entire house of cards collapsed.
The money in your account, it didn't do too well, it's gone.
FTX got so big, in part because of its aggressive marketing,
that had promoters like Tom Brady, Steph Curry,
and a whole bunch of YouTubers,
but the bigger the scam, the harder it falls.
Despite making major political donations, also in violation of the law,
the totally honest and not corrupt politicians
decided it was best to let Bankman fry.
While most tech-bros tend to be men,
it's also true that most prisoners are men as well.
But there are courageous women in tech, breaking the glass ceiling.
Jetzt kommt Terranos, oder wie das Ding heißt, 100 Pro.
And also breaking back.
Nein.
Doch! Das ist sie! Das ist sie!
Ja, das ist sie, genau.
Die sah auf den Bildern schon immer so leicht.
Weiß ich nicht.
Hatte so ein bisschen so einen leicht wahnsinnigen Blick.
Once called the next Steve Jobs,
and her company Terranos put her in the Forbes 400.
They produced a revolutionary blood...
Das Ding, Alter, das war so...
Das ist auch was, Leute, wo ich mir denke,
ich hab da mal ein Video drüber geguckt,
dass das nicht von Anfang an als Scam geplant war.
Das ist einfach aus dem Ruder gelaufen mit der Zeit
und die konnten nicht mehr zurück.
Zumindest war das meine Auffassung der Sache,
nachdem ich das Video damals geguckt hab.
Das Ding war, die haben ein Gerät hergestellt,
wo du quasi eine Blutprobe reingestellt hast
oder einen Finger gestochen hast und Blut analysiert hast
und das konnte angeblich aus einer ganz einfachen Blutuntersuchung
konnte das quasi ganz viele tolle Sachen machen.
Ob du Krankheiten hast, ob du anfällig bist für Krankheiten,
alles mögliche, also super krasse Versprechungen,
die ja geradezu revolutionieren.
Das Problem bei der Sache war nur am Ende,
es haben dann Leute versucht, es gab irgendeine, glaube ich,
da bin ich mir aber nicht ganz sicher,
ob ich das aus dem Kopf noch richtig zusammenbekomme,
es gab so eine Hotelkette, die hat das Probeweis im Einsatz gehabt,
da konntest du quasi so ein Wellness-Wochenende buchen
und konntest dann auch so einen Test machen oder so.
Das Problem war nur, dass das Ding festgestellt hat,
du warst top gesund, ja,
und das Ding war so, dass du nicht mehr zurückkommst.
Das Ding hat dir gesagt, ach nee, du hast ein Gehirntumor
oder Brustkrebs oder sowas
und da waren die Leute natürlich nicht mal so wellness danach.
Die Leute hatten nix.
Also die Wahrscheinlichkeit war,
das Ding hat gefühlt random Ergebnisse geliefert.
OpenWRT,
nee, steht bei mir noch auf dem To-Do für meine alten Ubiquity,
die Access-Points, die wollte ich mal OpenWRT flashen.
Wisst ihr, was bei sowas ein bisschen das Problem ist,
was ich da sehe, ist,
dass wenn bei den Leuten die Dollarzeichen in den Augen leuchten,
dass der Realitätscheck oftmals ein bisschen,
ich wollte gar nicht sagen,
der findet einfach nicht statt.
Der findet einfach nicht statt.
Es gab doch auch diese, wie hieß das Ding, Hyperloop von Elon Musk,
wo er jetzt ja nichts mehr mit dazu zu tun hat,
die da irgendwelche Vakuum-Tunnels und so bauen wollen,
wo man sich das, wenn man sich das von Anfang an angeguckt hat,
mal realistisch, ja.
Ich will nicht sagen, dass es noch nie Projekte gab,
wo man dachte, ey, das wird nix und die wurden dann was.
Aber Projekte, wo du von Anfang an sagst, okay,
das ist unter aktuell,
gegebenem Weltbild gar nicht möglich,
sowas gescheit zu bauen, das ist immer schwierig.
Ja, also zum Beispiel habe ich mir das von Anfang an enorm schwierig vorgestellt,
kilometerlange Tunnels zu bauen mit Vakuum drinne,
also Vakuum drinne ist jetzt das falsche Wort,
also ohne was drinne, mit Vakuum, die dicht sind.
Die nicht nur dicht sind,
die auch dem Druck der Atmosphäre von außen standhalten,
weil du brauchst ein richtig gutes Vakuum,
da drinne hast du das Fundst und vor allem,
was passiert, wenn da mal einer Not aussteigen muss in diesem,
also das waren so viele Fragen und keines dieser Fragen
wurde zufriedenstellend beantwortet.
Und das ist bei mir immer so ein Alarmsignal,
wenn du so Projekte siehst, wo du dir denkst,
ey, die klingen fast zu gut, um wahr zu sein,
dann sind die zu 95% auch einfach zu gut, um wahr zu sein,
oder sind die auch einfach nicht wahr.
Aber wenn die dann auf legitime Fragen nur Bullshit-Bingo-Antworten haben,
so nach dem Motto, wir haben die besten Entwickler der Welt
und glaubt an unsere Vision und sowas,
das ist für mich keine überzeugende Antwort.
Also wenn du wirklich, wenn es wirklich grundlegend,
grundlegende Fragen gibt, ja zum Beispiel,
es gab auch mal so ein Projekt, die haben angekündigt,
sie bauen einen Katapult, damit man demnächst
günstiger Satelliten in die Erdumlaufbahn bekommt.
Und da gab es sofort ein paar Dinge, wo ich mich gefragt habe,
wie zum Teufel soll das funktionieren?
Wie soll das funktionieren?
Also erstens, was für ein riesen, krass heftiger Katapult muss das sein?
Wie soll das funktionieren?
Und so wie ist das mit Luftwiderstand und Erdorbit, das ist ganz schön hoch.
Da gab es so viele Dinge, wie ich mir gedacht habe, wie soll das funktionieren?
Und außer coole Render-Trailer hatten die halt keine Erklärung dafür.
Ja, ja, dieser Zentrifugen, genau, dieser Zentrifugen-Stahl.
Ja, und dazu kam ja auch noch die Beschleunigung und alles.
Und die Kräfte, die darauf wirken.
Und beim Beschleunigen im Kreis, da habe ich mir gleich gedacht,
ey, das kann eigentlich nicht funktionieren.
Und außer schöne Render-Trailer hast du nie was davon gehört,
wie sie es eigentlich umsetzen wollen.
Du hast es doch schon quasi selbst beantwortet,
dass die technische Umsetzung sehr wohl ein Problem ist,
wenn die Baukosten quasi nicht managebar hoch sind.
Also natürlich, du kannst sehr vieles machen, wenn du unendlich Geld hast,
aber keiner hat unendlich Geld.
Und irgendwann, du kannst doch sagen,
ja, ich kann alles bauen, wenn ich unendlich Geld,
unendlich Zeit und unendlich Ressourcen habe.
Ja, gut, dann ist nichts ein Problem.
Aber wenn etwas nicht möglich ist mit den unter gegebenen Bedingungen
und Materialien, die man kennt,
wenn quasi erst noch mal ganz neue Sachen erfunden werden müssen,
dafür, dass etwas gebaut werden kann,
dann bin ich da immer skeptisch.
Das sind genauso wie die ganzen Startups,
und ihr lacht jetzt, aber die gibt es wirklich,
Startups,
die einen Weltraum-Fahrstuhl bauen wollen.
Da kam auch noch nichts Gescheites bei raus.
Und das Ding ist halt,
in der Theorie, das ist so ein typischer Fall von,
in der Theorie ist das gar kein Problem, sowas zu bauen.
Praktisch gesehen ist es sehr wohl ein Problem,
einen Weltraum-Fahrstuhl zu bauen.
Befrauding Investors is one way to go to prison,
but it's not the only way.
Anthony Lewandowski is a brilliant engineer,
who co-founded Google's self-driving car program, Waymo,
which gave him access to some...
By the way, ich habe mal eine blöde Frage.
Das mag jetzt vielleicht nicht politisch korrekt sein in der aktuellen Zeit,
aber da hat er auch am Anfang gesagt,
es sind ganz wenige Frauen im Gefängnis und sowas.
Kann ich nicht einfach sagen,
wenn ich was angestellt habe
und ins Gefängnis muss,
dass ich mich jetzt als Frau fühle
und dann kann ich ins Frauengefängnis?
Wäre das nicht in der aktuellen Zeit möglich?
Ich meine, wir sind doch dabei,
dass man das einfach so random ändern kann.
Wäre das nicht was? Geht das?
Mich würde nicht wundern, wenn das sogar geht mittlerweile.
Oder zählt das Geschlecht zum Tatzeitpunkt?
Das könnte natürlich auch sein.
Weiß nicht, ob es dafür schon sinnvolle Regelungen gibt.
Ja, weiter.
Befrauding Investors is one way to go to prison,
but it's not the only way.
Anthony Lewandowski is a brilliant engineer,
who co-founded Google's self-driving car program, Waymo.
Das ist, Chetke, das ist genau das, was ich meine.
Ja, das ist theoretisch möglich.
Das Problem ist aber unter anderem,
dass du, du musst für einen Weltraumfahrstuhl,
du müsstest das nach außen hin breiter bauen.
Also es ist jetzt nicht so, dass man,
also wenn das hier so, so sagen wir so,
das da ist hier so,
hier ist Weltraum, okay, hier ist Weltraum,
so und hier ist, hier ist noch so,
nicht, nicht Weltraum, okay, so ganz simpel gemalt.
So, man, man möchte jetzt, man möchte jetzt einen Fahrstuhl bauen ins Weltall,
so was, dann kann man den nicht einfach,
kann man den nicht einfach so, ups,
dann kann man den nicht einfach so bauen
und dann irgendwie so eine Fahrstuhlkabine da dran hängen.
Ja, ja, ich weiß, ich weiß, ja, Flat Earthers hassen diesen Trick.
Also das erste ist, wie bekommst du überhaupt Strom
an diese Kabine, dass die fahren kann?
Weil mit normalen Kupferkabeln und sowas kannst du das nicht machen.
Man, man hat sich da überlegt, ob man das nicht mit Lasern macht,
dass man quasi einen starken Laser hat,
der von dann da unten von, von der Erde dran strahlt
und das mit, mit Strom versorgt.
Das eigentliche Problem ist auch,
dass das so schlicht und ergreifend nicht stabil genug ist.
Ja, deswegen müsste man das theoretisch,
ähm, macht man das jetzt gescheit?
Deswegen, Alter, ich will,
kann man nicht einfach einen fucking Dreieck in die richtige Richtung malen?
Also, ja, gut, was auch immer.
Deswegen müsste man das ungefähr so bauen.
Äh, Schwachsinn, das ist falsch rum.
Ich will das, warum kann man das denn drehen?
Kann man das, kann man, ey, Paint!
Wie drehe ich denn was in Paint?
Hat irgendjemand eine Ahnung, wie ich das, wie ich das drehe in Paint?
Drehen, wie dreht man was in Paint?
Wie ist das?
Was ist das?
Man muss doch in Paint was drehen können, Mann.
Rotate.
Ha.
Man müsste das so bauen.
Man, man müsste das so bauen im Endeffekt.
Was meinst du, oben ist ein Punkt?
Ey, hier kann man nicht, kann man nicht drehen.
Ja.
Man müsste das so bauen und das müsste,
also ich, äh, ich kann euch das jetzt aus dem Kopf nicht sagen,
wie, wie das, ich hab das nie ausgerechnet,
geschweige denn, dass ich das ausrechnen könnte.
Man müsste,
man müsste das im Endeffekt,
ich, ich mach das immer noch falsch, Mann.
Rotate.
So, man müsste das so bauen im Endeffekt.
Ja, das muss immer stabiler werden mit der Höhe
und, ähm, es braucht quasi noch,
es muss noch eine ganze Ecke weiter gehen
als das, wo man eigentlich hinfahren will.
So, und das ist einfach materialtechnisch
und, ja, bautechnisch ist das aktuell,
einfach nicht möglich, sowas zu bauen.
Und das ist halt so, so ein Ding,
theoretisch möglich, praktisch hat man halt keine Antworten
drauf gefunden, sowas wirklich bauen zu können.
Ja, aber gucken wir weiter.
Deutscher Autolan.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
that showed how Uber was copying Waymo's LiDAR design.
Google sued Uber, but the Department of Justice also filed criminal charges against Lewandowski.
He was sentenced to 18 months in prison and had to pay a $95,000 fine,
but luckily got a presidential pardon from Donald Trump.
Now, normally I like to tell kids that crime doesn't pay,
but in his case it was probably worth it.
A good saying in life is it's not what you know, but who you know.
And Raj Rajaratnam is a good example of this.
He was a hedge fund manager with deep connections to big tech.
Companies like Intel, IBM, AMD, and many others.
He too became one of the richest men in the world,
thanks to his brilliant trading strategy that relied on confidential information from tech insiders.
Unfortunately, this strategy is illegal,
and he was arrested in 2009 for insider trading and sentenced to 11 years in prison.
Insider trading is a great infinite money glitch,
but you can really only get away with it if you're in politics.
My advice is to just follow the trades of Congress and do as they do.
That is financial advice, by the way, although I am not qualified to give it.
I'd be extremely disappointed, though,
if you went to prison without using the programming skills.
Es gibt echt so Stock-Fotos davon.
You've learned on this channel.
Stock-Videos.
Max Butler, also known as Max Vision or Iceman,
was a cybersecurity consultant who did penetration testing.
While doing work on federal government websites,
he installed a backdoor on a Bind-Server-Demon,
which is a set of tools for managing the phonebook of the internet,
the domain name system.
He was eventually caught by the Air Force and sentenced to 18 months in federal prison.
But he didn't stop there.
Undeterred, he continued to develop his hacking skills
and launched a website,
called Carter's Market,
where criminals could illegally trade stolen credit card details.
The website was responsible for 86 million dollars in fraudulent purchases.
In 2007 he was arrested and sentenced to 13 years in prison
and ordered to pay 27 million in rent.
Also da muss man sagen, da sind die Amis ja richtig krass drauf.
Wenn du bei den Amis zum zweiten Mal für solche Sachen verurteilt wirst,
dann geht's immer ab.
So nach dem Motto, ja, erstes Mal kommst du zwei Jahre in den Knast,
das nächste Mal kommst du 50 Jahre in den Knast.
Duchenne.
At the time, it was the longest prison sentence,
Duchenne. At the time, it was the longest prison sentence,
ever handed down for hacking.
That punishment may seem harsh,
but it's nothing compared to Ross Ulbrich.
In 2011 he launched a website built with PHP.
He was likely inspired by all the other PHP developers out there driving Lambos.
His website was unique though,
because it allowed anyone to trade any type of good
without any type of regulation anonymously with cryptocurrency.
It was a true free market that was used to facilitate all kinds of illegal activity.
The website was only online for about two years,
but had a sales volume of nearly 10 billion Bitcoins.
Back then,
Bitcoin was only a few bucks,
but in today's money, with Bitcoin at $69,420,
Ross would easily be the richest man in the world,
but unfortunately he got caught.
In the early days, he used his personal email to promote the Silk Road,
which investigators used to identify him.
On the website, he was known as Dread Pirate Roberts,
but in 2013 was arrested at a public library in San Francisco,
while logged into the Silk Road as an admin.
This case was a huge embarrassment to the Feds in the war on drugs,
and Ross ultimately received two life sentences without the possibility of parole plus 40 years.
He'll die in prison for creating a PHP-website.
PHP-
Da, die Armees sind da hart drauf!
PHP-Haters say that's justified, but many believe a sentence is too harsh.
And that gives us seven tech bros who went to prison.
Huge shout out to the US Department of Justice and the for-profit prison industry
for making this video possible.
And if you want to learn how to accept payments in your own application,
check out my brand new course on Fireship.io
that will teach you everything you need to know about implementing payments
into a software-as-a-service product.
This has been The Code Report.
Thanks for watching, and I will see you in the next one.
Also, eins muss man eben sagen, Fireship schneidet die Videos immer gut zusammen.
Oder packt auch immer recht viel Content in kurze Videos.
Ich guck das immer gerne.
Naja, es war die erste große Darknet-Plattform für illegale Sachen.
Ich finde schon, dass es ein Tech-Leader ist.
Vielleicht jetzt nicht sonderlich, ja, kein sonderlich glänzendes Beispiel, ja?
Strahlendes Beispiel in guter Sache, aber schon.
Kann man schon so sagen.
Top-Gehalt als Fluglotse.
Boah, das ist Stress, glaube ich.
USB-Kill.
Was ist USB-Kill?
Auf ShitHub.
Ist das?
Vor acht Jahren.
USB-Kill ist ein Anti-Forensic-Kill-Switch,
der auf den USB-Porten aufwächst und dann im Mediastat zu einem Computer...
Okay.
Also sobald, sobald einer den Stick rauszieht...
Aber wieso, hä?
Ach nee, Moment.
Sobald, sobald irgendwas sich ändert an USB wird das ausgelöst.
Eigentlich gar keine schlechte Idee, das Ding.
Also wenn man Angst haben muss, dass demnächst einen die Polizei ins Gefängnis steckt, dann
muss ich kein...
Vielleicht was, was man benutzen sollte.
So.
Ich hab Hunger.
Wie viel Uhr war es gestern, Leute?
War es gestern erst zwölf oder schon vierzehn Uhr?
Gestern war es erst zwölf, ne?
Da sollte ich eigentlich noch gar nicht so viel Hunger haben.
Auf der anderen Seite, ich bin heute zur normalen Zeit aufgestanden.
Was heißt gleiche Zeit wach...
Also auch gleiche Zeit Hunger.
Ich hab geplant, dass wir heute Mittag noch ein bisschen weiter Proggers-Stells machen.
Deswegen geh ich jetzt, glaub ich, oft was essen und komm nachher wieder on.
Kannst nicht hundertprozentig versprechen.
Ihr wisst, manchmal verlässt mich so die Motivation.
Nachmittag.
Nachmittags nochmal zu streamen.
Was?
Wir schalten das jetzt mal aus.
Warum sollen wir die VM immer im Standby lassen, wenn die eigentlich gar nicht an sein
muss?
Und Windows ME können wir auch mal ausschalten.
Wobei, das braucht nicht viel RAM, aber Proggers können wir ausschalten.
Proggers, Proggers brauchen wir nicht mehr.
Power off.
Okay.
Warum?
Überzeugt mich.
Change my mind, Chat.
Init null versus Power off.
Okay, ein Argument dafür wäre, es funktioniert auch unter Legacy-Systemen wie Solaris, aber
auf den bin ich nicht unterwegs.
Change my mind, Chat.
Init null versus Power off.
Die coolen Leute, die verwenden eh weder Init null noch Power off.
Ich zeige euch mal, was die coolen Leute verwenden.
Die coolen Leute...
Nein, nein, nein, nein.
Nicht Shutdown.
Die coolen Leute machen das anders.
Die richtig nicen Hackermans fahren ihr Linux so runter.
Passt mal auf.
Ich zeige euch jetzt mal was.
Nur richtig cool.
Nur richtig krasse Linux-Command-Line-Pros machen das so.
Auf VM.
Ohne Pepo-Hintergrund kann ich nicht arbeiten.
Excellent.
Okay, passt mal auf.
Die richtig krassen Pros, die machen Echo O nach Prog-Sys-AQ-Trigger.
Okay?
So machen das die richtig krassen Hackermans.
Bam.
Rechner aus.
Hand hoch im Chat, wer das kannte.
Und äh, Daumen hoch im Chat, wer es kannte.
Daumen runter im Chat, wer es nicht kannte.
Oder, ihr könnt doch einfach schreiben, kannte ich, kannte ich nicht.
Wer, wer, wer kennt das und wer kennt das nicht?
Zwei.
Okay.
Kann er das nicht?
Was?
Afg.
Ich zeige euch erst mal den, den Hintergrund.
Prog-Sys-AQ-Trigger.
Okay.
So.
Also, man kann da folgende Sachen reinpipen.
Man kann da folgende Sachen reinpipen.
Was ist das da?
Und O ist, will shut, will shut your system off.
Das ist quasi Power aus am Netzteil, wenn man es so will.
Das ist nicht Power off drücken und runterfahren, das ist wirklich Power off Signal.
Mainboard schalte Netzteil aus Signal ist das.
Das sorgt auch dafür, dass nichts, was irgendwie im Cache ist, noch auf die, guck jetzt ist
zum Beispiel meine Bash-History kaputt dadurch.
Meine, meine ZSH-History ist dadurch kaputt.
Doch, doch, das ist unsicher, das sollte man nicht verwenden normalerweise.
Das, das kann man aber verwenden, wenn man, wenn man beispielsweise Remote einen Server
hat.
Wobei ich das dann eher mit B verwenden würde.
B ist glaube ich B.
B ist glaube ich Reboot.
B ist Reboot.
Ja.
Ja.
Will immediately reboot the system without syncing or unblocking your disk.
Das ist zum Beispiel gut, wenn das File System read only ist oder irgendwas so kaputt ist,
dass du nur noch per SSH draufkommst, aber das System an sich in einem Zustand ist, dass
es nicht mehr funktioniert.
Du kannst nicht normal rebooten, du kannst nicht Power off machen, du kannst nichts machen.
Du kommst vielleicht auch Remote gerade nicht an eine Management-Konsole dran.
Dann sagst du echo b proc sysrqträger und das Ding rebootet.
Ja, guck, ich habe jetzt nichts wichtiges offen, meine Bash-History findet das nicht
so geil.
Wobei die Meldung schlimmer aussieht, als es ist.
Du musst natürlich logischerweise root dafür sein.
Ja, echo b nach proc sysrqträger und jetzt, vor allem, wer hat auch erkannt, dass da was
passiert?
Reboot.
Das sollte man normalerweise nicht machen, wenn es andere Möglichkeiten gibt, das sage
ich euch gleich.
Aber es ist gut zu wissen, dass es das gibt, falls man wirklich mal ein System hat, was
komplett im Arsch ist und hängt.
Es gibt hier noch viel mehr, aber B und O sind die, EO ist übrigens glaube ich für
off.
Link zur Seite, such nach sysrqträger, aber komm, weil ihr es seid.
Ja, so sieht es aus, wieder was gelernt.
Aber wie gesagt, ich würde es euch nicht empfehlen, es sei denn, es geht nicht anders.
Aber wenn ihr beispielsweise irgendeinen Cloud-Server habt, der komplett im Arsch ist und hängt,
aber nur noch per SSH drauf kommt, dann ist das ganz gut zum Abschießen.
Die nächste Stufe wäre wirklich bloß noch Netzteil ausschalten oder Reset-Knopf drücken.
Es passiert auch in der Regel nichts, wenn du allerdings viele Sachen laufen hast, unter
anderem auch, die viel Disk-IO machen und noch im Cache sind, dann kann es dazu führen,
dass im Zweifelsfall deine Datenbank kaputt ist danach oder zumindest sehr kaputt, richtig
kaputt wird die nicht sein, aber die wird ein bisschen meckern, dass sie irgendwelche
not finished Sachen oder so hat.
Wenn das System einfach nur rumeidelt oder kaputt ist, dann kann man das in der Regel
safe machen.
Richtig.
Das ist aber echt nur was für Notfälle.
So, Chatgear, ich würde sagen, ich gehe jetzt was essen und dann sehen wir uns vielleicht,
wenn das nach Plan läuft, heute Abend beziehungsweise Nachmittag wieder.
Bis dann, macht's gut, CU.

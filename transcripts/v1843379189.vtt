WEBVTT

19:00.000 --> 19:02.760
1.

19:02.760 --> 19:04.760
.

19:04.760 --> 19:06.760
.

19:06.760 --> 19:08.760
.

19:08.760 --> 19:10.760
.

19:10.760 --> 19:12.760
.

19:12.760 --> 19:14.760
.

19:14.760 --> 19:16.760
.

19:16.760 --> 19:18.760
.

19:18.760 --> 19:20.760
.

19:20.760 --> 19:22.760
.

19:22.760 --> 19:24.760
.

19:24.760 --> 19:26.760
.

19:26.760 --> 19:28.760
.

19:28.760 --> 19:33.760
was viele Leute halt dazu gebracht hat, auch mal Desktop-Anwendungen erstellen zu können.

19:33.760 --> 19:36.760
Ja, sowas wie Elektron, genau so, genau, das meine ich.

19:36.760 --> 19:40.760
Dass die Dinger automatisch auf so gut wie allen Betriebssystemen und Mobile-Geräten laufen.

19:40.760 --> 19:44.760
Aber, und das war bestimmt eines der großen Vorteile,

19:44.760 --> 19:49.760
man konnte sie auch gut unter Windows laufen lassen, ohne dass man sich zwischen entscheiden musste,

19:49.760 --> 19:54.760
nehme ich was total Outdatedes von Microsoft Supportedes für Windows,

19:54.760 --> 20:01.760
oder nehme ich was Neues, was mich so einschränkt, dass ich nicht alles machen kann, nämlich UWP.

20:01.760 --> 20:05.760
Und deswegen haben ganz viele angefangen Elektron-Anwendungen zu bauen

20:05.760 --> 20:09.760
und wir haben heute Anwendungen, die halt für einfachste Dinger 400 MB RAM brauchen,

20:09.760 --> 20:12.760
weil halt erstmal Node.js, Browser und alles mögliche hiermit gestartet werden muss.

20:12.760 --> 20:17.760
Ich bin mir relativ sicher, dass dieses Vakuum an Windows-UI-Frameworks

20:17.760 --> 20:22.760
mit, also entscheidend mit beigetragen hat dazu, dass Elektron sich so verbreitet hat.

20:23.760 --> 20:29.760
Irgendwann ist das Microsoft auch gedämmert, ich würde mal sagen so im Dreh,

20:29.760 --> 20:40.760
vielleicht von Windows 10, weil Anfang Windows 10 haben die immer noch versucht UWP zu pushen,

20:40.760 --> 20:44.760
aber sagen wir mal so, ungefähr mit Windows 10 ist es, oder ein bisschen später,

20:44.760 --> 20:49.760
sagen wir mal so, Windows 10 und ein paar Patches, ist es dann irgendwann gedämmert,

20:49.760 --> 20:53.760
dass UWP halt wirklich keine Sau haben will und sich das auch nie durchsetzen wird.

20:53.760 --> 20:57.760
Lag wahrscheinlich auch ein bisschen am Wechsel von Microsoft Chef und allem.

20:57.760 --> 21:05.760
Und dann sind sie auf die Idee gekommen, ok, lasst uns doch versuchen, UWP in die Tonne zu hauen

21:05.760 --> 21:11.760
und den UI-Part von UWP, also quasi der UI-Part ist halt unter anderem das,

21:11.760 --> 21:19.760
worauf Calculator hier basiert oder viele Windows-Internet-Tools mittlerweile auch basieren,

21:19.760 --> 21:34.760
lasst uns doch den UI-Part nehmen und das UWP daraus entfernen.

21:35.760 --> 21:42.760
Und das hat Microsoft dann gemacht und da kam dann WinUI bei raus.

21:42.760 --> 21:50.760
Und WinUI ist seit ein paar Jahren der Versuch von Microsoft, endlich mal wieder ein gescheites UI-Framework

21:50.760 --> 21:53.760
für komplette Anwendungen für Windows herzustellen.

21:53.760 --> 21:59.760
Das Problem war nur, dass WinUI in den ersten zwei Versionen noch sehr UWP-fokussiert war

22:00.760 --> 22:05.760
und es dementsprechend, sie haben es sich geschafft, das richtig von UWP zu lösen

22:05.760 --> 22:08.760
und dementsprechend wollte das am Anfang auch keiner haben.

22:08.760 --> 22:12.760
Dann haben sie ewig gebraucht, ich glaube es kam erst vor zwei Jahren oder so,

22:12.760 --> 22:15.760
oder vor einem Jahr oder sowas kam erst WinUI 3 raus.

22:15.760 --> 22:22.760
Und mit WinUI 3 ist es zum ersten Mal seit 10 Jahren vielleicht, oder länger,

22:24.760 --> 22:26.760
sagen wir mal seit 10 Jahren,

22:26.760 --> 22:33.760
es ist zum ersten Mal seit 10 Jahren möglich, wieder komplette, vollständige Windows-Anwendungen zu erstellen.

22:33.760 --> 22:41.760
Ohne Sandbox und ohne Geschiss und ohne Codesigning-Zertifikat und alle möglichen Gedöns.

22:41.760 --> 22:44.760
Also ich glaube man kann mittlerweile, ich bin mir da gar nicht so sicher,

22:44.760 --> 22:47.760
weil das haben sie auch wieder verschoben, man kann mittlerweile ganz normale,

22:48.760 --> 22:57.760
unpackaged Win32 oder sollte man besser sagen Win64 Anwendungen erstellen mit UI unter Windows,

22:57.760 --> 23:03.760
ohne Sandbox, ohne Zertifikate, ohne Geschiss, also das, was die meisten Leute eben für Windows machen wollen.

23:05.760 --> 23:09.760
So, also nachdem es über 10 Jahre kein gescheites UI-Framework für Windows gab,

23:10.760 --> 23:12.760
daher kommt das.

23:12.760 --> 23:16.760
Deswegen hat sich unter anderem, bin mir zumindest relativ sicher,

23:16.760 --> 23:23.760
Elektron soweit durchgesetzt und deswegen ist UI-Entwicklung unter Windows so unglaublich Pains Champ.

23:23.760 --> 23:28.760
Du kannst natürlich Cross-Plattform-Frameworks benutzen, sowas wie Elektron, du kannst vielleicht Qt benutzen.

23:29.760 --> 23:33.760
Aber es wäre halt cool, wenn man eine Windows-Anwendung für Windows machen will,

23:33.760 --> 23:37.760
wenn man dann kein Cross-Plattform-Framework benutzen muss, sondern irgendwas benutzen könnte,

23:37.760 --> 23:39.760
was eben richtig gut funktioniert.

23:39.760 --> 23:45.760
Halt nur Windows-Only, aber halt gescheit und dafür halt komplett alles, was Windows so kann.

23:45.760 --> 23:50.760
Das gab es ja lange Zeit nicht und deswegen ist Windows-UI-Anwendung, Programmieren einfach so Shit.

23:50.760 --> 23:52.760
Und ist es immer noch.

23:54.760 --> 23:59.760
Weil Microsoft es über 10 Jahre nicht hinbekommen hat und versucht hat, eine Technologie zu pushen, die keiner haben wollte.

24:03.760 --> 24:06.760
Ja, aber der beste, jetzt kommen wir mal zur eigentlichen Frage,

24:06.760 --> 24:11.760
der beste Weg Windows-Anwendungen zu erstellen ist, dadurch durch dieses ganze jahrzehntelange Geschäft,

24:11.760 --> 24:13.760
überleg dir halt, was du machen willst.

24:13.760 --> 24:16.760
Willst du hauptsächlich eigene Inhalte rendern, nimm Windows Forms.

24:16.760 --> 24:20.760
Ansonsten, wenn du es einfacher haben willst, nimm trotzdem Windows Forms

24:20.760 --> 24:24.760
und gleichst da halt vielleicht ein bisschen was drüber, dass es moderner aussieht.

24:25.760 --> 24:27.760
Oder schau dir WinUI 3 an.

24:28.760 --> 24:37.760
Dann hast du das Neueste von Microsoft, was der Weg, der gedachte Weg ist,

24:37.760 --> 24:39.760
von Microsoft Windows-Anwendungen zu entwickeln.

24:42.760 --> 24:43.760
Ja.

24:49.760 --> 24:51.760
Und in welcher Sprache du das dann schreibst, ist eigentlich egal.

24:51.760 --> 24:55.760
Ich persönlich würde dir wahrscheinlich empfehlen, das auf .NET-Basis in C-Sharp zu machen,

24:55.760 --> 25:02.760
weil C-Sharp eine deutlich angenehmere und schönere und einfach angenehmere, bessere Sprache ist als C++.

25:02.760 --> 25:11.760
Und das .NET-Framework auch die deutlich bessere Standard-Library ist als die Standard-Lib in C++.

25:11.760 --> 25:19.760
Und es auch einfach viel weniger Gehirnzerbrechen und angenehmer ist und insgesamt einfach besser ist als C++.

25:19.760 --> 25:20.760
Ja.

25:20.760 --> 25:24.760
Und du bekommst mit Visual Studio auch eine gescheite Windows-kostenlose IDE,

25:24.760 --> 25:28.760
die auch nur unter Windows funktioniert, ohne dass du dir Rider kaufen musst.

25:28.760 --> 25:33.760
Also ich würde sagen, mach das auf .NET-Basis und guck dir mal WinUI 3 an.

25:33.760 --> 25:36.760
Und dann kannst du eine halbwegs moderne Anwendung erstellen.

25:38.760 --> 25:39.760
So.

25:40.760 --> 25:43.760
Ja, wie gesagt, es macht ja in manchen Fällen auch Sinn.

25:45.760 --> 25:47.760
Zum Beispiel bei sowas, ja.

25:47.760 --> 25:48.760
Moin.

25:48.760 --> 25:49.760
Ans Trinken erinnern.

25:49.760 --> 25:50.760
Pog.

25:50.760 --> 25:51.760
Moment.

25:53.760 --> 25:55.760
C++ ist nur für High-IQ-Leute.

25:55.760 --> 25:57.760
Okay, das lasse ich mir insofern sogar gefallen.

25:57.760 --> 25:58.760
Ja, das stimmt.

25:58.760 --> 26:01.760
Alle anderen sind hoffnungslos am Verzweifeln.

26:01.760 --> 26:08.760
Aber du musst trotzdem ein bisschen so selbstquälermäßig veranlagt sein, dass du C++ benutzt.

26:08.760 --> 26:11.760
Wenn es andere Möglichkeiten gibt.

26:11.760 --> 26:15.760
Wenn es keine anderen Möglichkeiten gibt als C++, ja gut, da bleibt ja mal nichts anderes übrig.

26:15.760 --> 26:20.760
Also wenn man beispielsweise irgendeinen ESP32 programmieren will,

26:21.760 --> 26:25.760
und Arduino, also mit dem Arduino-Kern dafür,

26:25.760 --> 26:27.760
dann bleibt ja nichts anderes übrig als C++.

26:40.760 --> 26:43.760
Ja, WPF ist auch unglaublich komplex und kompliziert.

26:43.760 --> 26:46.760
Also das liegt aber auch mit daran, weil Microsoft halt ewig nichts richtig dran gemacht hat.

26:46.760 --> 26:49.760
Also man müsste es gar nicht so ultra kompliziert machen.

26:50.760 --> 26:51.760
Das war halt eines der...

26:51.760 --> 26:56.760
Man muss sagen, WPF war damals wirklich weit vorne von den Funktionen, ja.

26:56.760 --> 26:59.760
Die haben beispielsweise als einer der ersten das übernommen,

26:59.760 --> 27:02.760
dass du dein UI in einer Markup-Language machen kannst.

27:02.760 --> 27:05.760
Du kannst deine einzelnen Komponenten themen,

27:05.760 --> 27:08.760
wobei das nicht Themes heißt bei WPF, das heißt Shape.

27:09.760 --> 27:11.760
Wie heißt das? Styles?

27:11.760 --> 27:13.760
Heißt das, glaube ich, bei WPF?

27:13.760 --> 27:15.760
Du hast so zwei verschiedene Sachen bei WPF.

27:15.760 --> 27:17.760
Du hast Styles und du hast...

27:20.760 --> 27:21.760
Layouts?

27:21.760 --> 27:22.760
Ach, ich meine...

27:22.760 --> 27:25.760
Templates! Genau, Templates. Das meine ich, ja.

27:25.760 --> 27:28.760
Ja, das ist halt schon ziemlich kompliziert.

27:28.760 --> 27:34.760
Und man hat ja auch Jahre, Jahrzehnte quasi jetzt daraus lernen können.

27:34.760 --> 27:36.760
Es gibt ja schon fast 20 Jahre oder so.

27:36.760 --> 27:38.760
Ich glaube, WPF kam 2006 oder so raus.

27:38.760 --> 27:40.760
15 Jahre.

27:40.760 --> 27:41.760
Und...

27:43.760 --> 27:45.760
Vieles davon braucht man da standardmäßig gar nicht.

27:45.760 --> 27:46.760
Man könnte es doch besser machen können.

27:46.760 --> 27:48.760
Also WPF ist unglaublich kompliziert.

27:49.760 --> 27:51.760
Und die waren halt damals eine der Ersten,

27:51.760 --> 27:53.760
die vieles neu gemacht haben.

27:53.760 --> 27:55.760
Und auch mit ihrem Two-Way-Data-Binding und sowas.

27:55.760 --> 27:59.760
Was es so in der Form bei den meisten UI-Frameworks gar nicht gegeben hat.

27:59.760 --> 28:02.760
Aber man hat jetzt einiges gelernt mittlerweile daraus.

28:02.760 --> 28:03.760
Was man ja auch daran sieht ist...

28:03.760 --> 28:04.760
Guckt mal, Leute.

28:04.760 --> 28:05.760
Wir haben gestern...

28:06.760 --> 28:08.760
Wir haben gestern Spell Kit programmiert

28:08.760 --> 28:10.760
und ein bisschen Browser UI gemacht.

28:10.760 --> 28:13.760
Man muss sagen, das ist vom Ansatz her

28:13.760 --> 28:16.760
gar nicht mal so viel Unterschied...

28:16.760 --> 28:18.760
Also von den Sprachen, die man benutzt, schon.

28:18.760 --> 28:24.760
Aber von der Design-Idee ist das gar nicht mal so viel anders als WPF.

28:25.760 --> 28:28.760
Aber von der Handhabung her viel angenehmer.

28:29.760 --> 28:30.760
Ist für heute was geplant?

28:30.760 --> 28:31.760
Ja, das Gleiche.

28:31.760 --> 28:33.760
Oh, ich habe den falschen Titel genommen für den Stream.

28:33.760 --> 28:34.760
Fällt mir gerade auf.

28:34.760 --> 28:36.760
Ich habe WhitePepoHappy als Stream genommen.

28:37.760 --> 28:38.760
Das ist ja falsch.

28:38.760 --> 28:39.760
Wir haben Aufwachen-Stream.

28:39.760 --> 28:40.760
Was ist denn da los?

28:40.760 --> 28:42.760
Chat, warum sagt das keiner?

28:43.760 --> 28:45.760
Chatgiz, was ist hier los?

28:46.760 --> 28:48.760
Alle noch sleepge.

28:50.760 --> 28:53.760
Aufwachen-Stream ist ja eigentlich das Richtige.

29:04.760 --> 29:05.760
So.

29:08.760 --> 29:09.760
Excellent.

29:09.760 --> 29:10.760
Jetzt sind wir Aufwachen-Stream.

29:12.760 --> 29:14.760
Ja, das ist auch so ein Ding bei Microsoft.

29:15.760 --> 29:17.760
Jack, danke für den Sub.

29:17.760 --> 29:20.760
Ich glaube, das ist bei Microsoft immer noch so ein bisschen problematisch.

29:21.760 --> 29:24.760
Die haben halt ganz viele unterschiedliche Internet-Teams,

29:24.760 --> 29:26.760
die voneinander nicht viel wissen wollen.

29:26.760 --> 29:27.760
Zumindest hört man das immer wieder.

29:28.760 --> 29:29.760
Moin, Mario.

29:29.760 --> 29:32.760
Und dazu kommt, dass Microsoft dazu neigt,

29:32.760 --> 29:34.760
ihre eigenen Sachen anzupreisen,

29:34.760 --> 29:37.760
allerdings nicht so richtig zu verwenden.

29:37.760 --> 29:39.760
Ich meine, ihr könnt die UWP-Anwendungen,

29:39.760 --> 29:42.760
die großen UWP-Anwendungen von Microsoft in den

29:42.760 --> 29:43.760
– fragt mich nicht –

29:43.760 --> 29:45.760
fast 10 Jahren, wo sie versucht haben,

29:45.760 --> 29:47.760
diese Technologie zu pushen,

29:47.760 --> 29:49.760
ihr könnt die an einer Hand abzielen.

29:49.760 --> 29:51.760
Oder wahrscheinlich sogar an zwei Fingern oder so.

29:51.760 --> 29:52.760
Da gibt es keine.

29:52.760 --> 29:55.760
Ich weiß nicht, was es für große UWP-Anwendungen von Microsoft gibt.

29:55.760 --> 29:56.760
Mir fällt keine ein.

29:58.760 --> 30:01.760
Office ist auch keine richtige UWP-Anwendung.

30:01.760 --> 30:03.760
Es gibt, glaube ich, keine.

30:04.760 --> 30:05.760
Visual Studio ist keine.

30:05.760 --> 30:08.760
Ich glaube, mittlerweile ist Visual Studio, glaube ich,

30:08.760 --> 30:10.760
teilweise WinUI.

30:10.760 --> 30:11.760
Da bin ich mir aber auch nicht sicher.

30:11.760 --> 30:14.760
Es gibt – also Microsoft benutzt selbst ihren Kram nicht.

30:14.760 --> 30:16.760
So, und mal als Beispiel.

30:16.760 --> 30:18.760
Als Beispiel, was Microsoft –

30:19.760 --> 30:20.760
Nee, nee, nee, im Store kannst du mittlerweile

30:20.760 --> 30:22.760
sogar Windows Forms-Sachen veröffentlichen.

30:22.760 --> 30:23.760
Das haben sie ja mittlerweile geöffnet.

30:23.760 --> 30:24.760
Deswegen kannst du ja auch VLC und sowas

30:24.760 --> 30:26.760
über den Store mittlerweile installieren.

30:29.760 --> 30:30.760
So, und woran man sieht,

30:30.760 --> 30:32.760
dass die Microsoft-Idee,

30:32.760 --> 30:33.760
so, und woran man sieht,

30:33.760 --> 30:36.760
dass die Microsoft-Ideen oftmals halt nicht funktionieren,

30:36.760 --> 30:37.760
bei ihren eigenen Sachen schon,

30:37.760 --> 30:38.760
hätte Microsoft –

30:38.760 --> 30:40.760
Der Store ist in UWP, ja, das stimmt.

30:40.760 --> 30:42.760
Der Store selbst, das kann sein.

30:47.760 --> 30:49.760
Die Settings, ja, das kann auch sein.

30:51.760 --> 30:52.760
So, was wollte ich jetzt sagen?

30:52.760 --> 30:55.760
Ja, also, so ein Beispiel für, guckt mal.

30:58.760 --> 31:00.760
Der Installer.

31:02.760 --> 31:03.760
Für Visual Studio.

31:03.760 --> 31:05.760
Visual Studio Code und solche Geschichten.

31:05.760 --> 31:07.760
Okay, nennen wir mal Visual Studio.

31:07.760 --> 31:09.760
Der Installer für Visual Studio war jahrelang,

31:09.760 --> 31:10.760
und glaube ich, ist es immer noch,

31:10.760 --> 31:12.760
eine Browser-Anwendung.

31:16.760 --> 31:19.760
Irgendwelche Dinger von Microsoft

31:19.760 --> 31:20.760
sucht man da vergebens,

31:20.760 --> 31:21.760
wo man sich halt denkt,

31:21.760 --> 31:23.760
okay, wenn ihr merkt,

31:23.760 --> 31:25.760
dass halt euer Kram viel zu restriktiv ist,

31:25.760 --> 31:27.760
selbst für eure eigenen Anwendungen,

31:27.760 --> 31:29.760
dann könnte man auf die Idee kommen,

31:29.760 --> 31:30.760
dass vielleicht auch niemand anderes

31:30.760 --> 31:31.760
Anwendungen dafür bauen will.

31:33.760 --> 31:36.760
Und die haben dann einen Web-Installer

31:36.760 --> 31:37.760
für Visual Studio gebaut und sowas,

31:37.760 --> 31:38.760
wo man sich dann denkt,

31:38.760 --> 31:40.760
okay, jetzt hat es schon einen Grund,

31:40.760 --> 31:41.760
dass die Leute keinen Bock hatten,

31:41.760 --> 31:43.760
UWP-Anwendungen zu bauen.

31:43.760 --> 31:44.760
Weil du dank der Sendbox

31:44.760 --> 31:46.760
nichts machen kannst, gescheit.

31:47.760 --> 31:48.760
Und das hätte Microsoft

31:48.760 --> 31:50.760
eigentlich viel früher kapieren müssen, ja.

31:50.760 --> 31:51.760
Und die benutzen oftmals

31:51.760 --> 31:52.760
ihre eigenen Sachen nicht,

31:52.760 --> 31:54.760
was kein Aushängeschild ist.

31:54.760 --> 31:56.760
Ich meine, man muss sich mal angucken,

31:56.760 --> 31:57.760
so die großen Dinger,

31:57.760 --> 31:59.760
die bekannt geworden sind,

31:59.760 --> 32:00.760
so React,

32:00.760 --> 32:01.760
zum Beispiel, ja.

32:01.760 --> 32:02.760
Die sind ja alle

32:03.760 --> 32:05.760
nicht nur bekannt geworden,

32:06.760 --> 32:08.760
weil sie eben ein Problem gut lösen.

32:09.760 --> 32:10.760
Ja, genau.

32:10.760 --> 32:12.760
Ja, und WinUI 3 hatte,

32:12.760 --> 32:14.760
Viagra, take Viagra, die hat,

32:15.760 --> 32:16.760
WinUI 3 hatte ja auch

32:16.760 --> 32:18.760
auf lange Zeit das Problem,

32:18.760 --> 32:20.760
dass sie dieses Packaging

32:20.760 --> 32:23.760
von UWP mit übernommen haben,

32:23.760 --> 32:24.760
dass selbst wenn du quasi

32:24.760 --> 32:26.760
eine Unsendbox der Application

32:26.760 --> 32:27.760
bauen wolltest,

32:27.760 --> 32:28.760
du trotzdem ein Komponent

32:28.760 --> 32:29.760
der Application bauen wolltest,

32:29.760 --> 32:31.760
du trotzdem ein Code Signing Zertifikat gebraucht hast.

32:31.760 --> 32:32.760
Ich glaube,

32:32.760 --> 32:34.760
das ist jetzt seit 1, 1,5, 2 Jahren

32:34.760 --> 32:36.760
höchstens nicht mehr der Fall,

32:36.760 --> 32:38.760
dass du unpackaged Apps bauen kannst

32:38.760 --> 32:39.760
für,

32:41.760 --> 32:42.760
mit WinUI 3.

32:42.760 --> 32:43.760
Glaube ich.

32:43.760 --> 32:44.760
Ich habe mir das schon eine ganze Weile

32:44.760 --> 32:45.760
nicht mehr angeguckt.

32:47.760 --> 32:48.760
Ja, Microsoft benutzt

32:48.760 --> 32:49.760
den eigenen Scheiß nicht.

32:49.760 --> 32:50.760
Ja, was ich sagen wollte ist,

32:50.760 --> 32:51.760
guckt euch mal React an.

32:51.760 --> 32:52.760
React ist nicht

32:53.760 --> 32:55.760
nur so erfolgreich geworden,

32:55.760 --> 32:57.760
weil sie relativ früh am Start waren

32:57.760 --> 32:59.760
und ein Problem gut und

32:59.760 --> 33:01.760
halbwegs gut benutzbar gelöst haben.

33:01.760 --> 33:02.760
Nein,

33:02.760 --> 33:04.760
React ist auch mit bekannt geworden,

33:04.760 --> 33:06.760
weil das einen riesen Anwendungsfall hatte,

33:06.760 --> 33:08.760
wo die Leute gesehen haben,

33:08.760 --> 33:10.760
ey, wenn das bei Facebook funktioniert,

33:12.760 --> 33:14.760
dann wird das auch im großen Stil funktionieren.

33:15.760 --> 33:16.760
Also sprich,

33:16.760 --> 33:17.760
es ist immer sinnvoll,

33:17.760 --> 33:18.760
wenn du halt

33:18.760 --> 33:20.760
nicht nur die Technologie hast,

33:20.760 --> 33:21.760
sondern auch gleichzeitig

33:21.760 --> 33:23.760
so ein Aushängeschild dafür hast,

33:23.760 --> 33:24.760
dass du sagen kannst,

33:24.760 --> 33:25.760
ey, guck mal,

33:25.760 --> 33:26.760
das geht.

33:26.760 --> 33:28.760
Ich bin auch überzeugt davon,

33:28.760 --> 33:30.760
dass sich Git als Versionsverwaltungssystem

33:31.760 --> 33:32.760
unter anderem

33:32.760 --> 33:34.760
nicht nur, weil es gut ist,

33:34.760 --> 33:35.760
so schnell durchgesetzt hat,

33:35.760 --> 33:36.760
sondern weil man gesehen hat,

33:36.760 --> 33:39.760
ey, wenn das für den Linux-Kernel funktioniert,

33:39.760 --> 33:41.760
dann wird das für alles andere

33:41.760 --> 33:42.760
auch irgendwie funktionieren.

33:43.760 --> 33:45.760
Und Git hat ganz viel Zeug drin,

33:45.760 --> 33:46.760
was eben

33:47.760 --> 33:49.760
man kann nicht sagen spezifisch

33:49.760 --> 33:51.760
für die Linux-Kernel-Entwicklung ist,

33:51.760 --> 33:53.760
aber schon sehr daran angelehnt ist.

33:53.760 --> 33:54.760
Zum Beispiel

33:54.760 --> 33:55.760
hast du in Git

33:55.760 --> 33:56.760
die Möglichkeit,

33:56.760 --> 33:58.760
Patches auszutauschen

33:58.760 --> 34:00.760
und die dann per E-Mail zu schicken und sowas.

34:00.760 --> 34:01.760
Das macht keiner,

34:01.760 --> 34:03.760
der noch halbwegs bei Verstand ist,

34:03.760 --> 34:05.760
außer dass es der Linux-Kernel

34:05.760 --> 34:07.760
zum damaligen Zeitpunkt gemacht hat.

34:07.760 --> 34:08.760
Die waren ja damals

34:08.760 --> 34:10.760
nicht auf GitHub oder sowas.

34:10.760 --> 34:12.760
Die hatten eine Mailing-Liste,

34:12.760 --> 34:14.760
haben in ihrem Git Sachen committed

34:14.760 --> 34:16.760
und haben dann ein Patch generiert

34:16.760 --> 34:17.760
und den Patch haben sie

34:17.760 --> 34:18.760
eine E-Mail dran gehängt

34:18.760 --> 34:21.760
und dann in die Mailing-Liste gepostet.

34:21.760 --> 34:22.760
Und der Patch wurde dann

34:22.760 --> 34:23.760
aus der Mailing-Liste runtergeladen

34:23.760 --> 34:24.760
und dann applied

34:25.760 --> 34:26.760
Das sind so ganz komische Dinge,

34:26.760 --> 34:28.760
die niemand in Git eigentlich verwendet,

34:28.760 --> 34:29.760
die aber da drin sind,

34:29.760 --> 34:30.760
weil das halt damals

34:30.760 --> 34:31.760
für die Kernel-Entwicklung

34:31.760 --> 34:32.760
sinnvoll gewesen ist.

34:33.760 --> 34:34.760
Aber man hat gesehen,

34:34.760 --> 34:35.760
ey guck mal,

34:35.760 --> 34:37.760
du kannst damit alles verwalten,

34:37.760 --> 34:39.760
weil wenn du den Linux-Kernel

34:39.760 --> 34:40.760
damit verwalten kannst,

34:40.760 --> 34:41.760
das gut funktioniert,

34:41.760 --> 34:42.760
dann kannst du schlägergreifend

34:42.760 --> 34:44.760
alles andere damit auch verwalten.

34:45.760 --> 34:46.760
Also sprich, ich denke,

34:46.760 --> 34:47.760
es ist wirklich sinnvoll,

34:48.760 --> 34:50.760
wenn nicht nur neue Technologie

34:50.760 --> 34:51.760
rausgehauen wird,

34:51.760 --> 34:52.760
sondern gleichermaßen

34:52.760 --> 34:54.760
die gebackt ist dadurch

34:54.760 --> 34:57.760
oder halt belegt wird dadurch,

34:57.760 --> 34:58.760
dass die was taugen,

34:58.760 --> 35:00.760
indem es eben gescheite Anwendungen gibt.

35:00.760 --> 35:01.760
Und deswegen denke ich,

35:01.760 --> 35:03.760
hat sich Git relativ schnell durchgesetzt,

35:03.760 --> 35:04.760
weil du gesehen hast,

35:04.760 --> 35:05.760
es geht mit dem Linux-Kernel,

35:05.760 --> 35:06.760
da geht es für alles.

35:06.760 --> 35:07.760
Hat sich React so gut durchgesetzt,

35:07.760 --> 35:08.760
weil es eben ein sehr spezifisches Problem

35:08.760 --> 35:09.760
gut gelöst hat

35:09.760 --> 35:11.760
und quasi so komplette Ära

35:11.760 --> 35:14.760
von neuen Anwendungen mit eingeläutet hat.

35:15.760 --> 35:16.760
Und dass man gesehen hat,

35:16.760 --> 35:17.760
ey guck mal,

35:17.760 --> 35:18.760
das ist von Facebook,

35:18.760 --> 35:19.760
die benutzen das auch,

35:19.760 --> 35:20.760
das funktioniert ja.

35:23.760 --> 35:24.760
Ja und das ist das,

35:24.760 --> 35:26.760
was Microsoft lange nicht richtig

35:26.760 --> 35:28.760
bei ihren Technologien hinbekommen hat.

35:29.760 --> 35:30.760
Dass man sieht,

35:30.760 --> 35:31.760
ah guck mal, die benutzen den Kram ja selbst.

35:31.760 --> 35:32.760
Ich meine,

35:32.760 --> 35:34.760
was gibt es für ein besseres Aushängeschild

35:34.760 --> 35:35.760
für ein Windows-UI-Framework,

35:35.760 --> 35:36.760
wenn du sagen kannst,

35:36.760 --> 35:38.760
Office benutzt das,

35:38.760 --> 35:40.760
Visual Studio benutzt das.

35:42.760 --> 35:43.760
Dann weißt du,

35:43.760 --> 35:44.760
ey, das sind große,

35:44.760 --> 35:46.760
komplexe Anwendungen,

35:47.760 --> 35:49.760
die Millionen Leute benutzen

35:50.760 --> 35:51.760
und das scheint was zu taugen,

35:51.760 --> 35:53.760
wenn du das damit machen kannst.

35:55.760 --> 35:56.760
Da muss ich mir keine Gedanken machen,

35:56.760 --> 35:57.760
das zu benutzen.

35:57.760 --> 35:59.760
Das wird prinzipiell funktionieren.

35:59.760 --> 36:00.760
Und das hat halt Microsoft

36:00.760 --> 36:01.760
lange nicht hingekriegt.

36:01.760 --> 36:02.760
Die haben halt den eigenen Scheiß

36:02.760 --> 36:03.760
nicht benutzt.

36:03.760 --> 36:04.760
Und dementsprechend waren die Leute

36:04.760 --> 36:05.760
nicht nur skeptisch,

36:05.760 --> 36:06.760
weil die Technologie scheiße war,

36:06.760 --> 36:07.760
wie bei UWP,

36:08.760 --> 36:10.760
sondern sie waren auch bestätigt dadurch,

36:10.760 --> 36:11.760
dass Microsoft den eigenen Krempel

36:11.760 --> 36:12.760
nicht benutzt hat.

36:13.760 --> 36:14.760
Und dementsprechend haben die Leute gesagt,

36:14.760 --> 36:15.760
ja gut, also guck mal,

36:15.760 --> 36:16.760
ich finde das scheiße,

36:16.760 --> 36:18.760
Microsoft selbst scheint es ja auch scheiße zu finden,

36:18.760 --> 36:20.760
deswegen benutzen sie es nicht

36:20.760 --> 36:24.760
und es hat keine richtige Adoption erfahren.

36:26.760 --> 36:28.760
Und viel zu lange.

36:30.760 --> 36:31.760
Ja, das ist WinUI,

36:31.760 --> 36:33.760
was du hier verlinkt hast, genau.

36:38.760 --> 36:40.760
Mittlerweile ist es tatsächlich sehr sinnig,

36:40.760 --> 36:41.760
ja, gebe ich dir recht.

36:41.760 --> 36:42.760
Gerade wenn du dir Anwendungen

36:42.760 --> 36:44.760
wie Discord anguckst,

36:45.760 --> 36:46.760
wenn ihr euch mal überlegt,

36:51.760 --> 36:52.760
Okay.

36:56.760 --> 36:58.760
Ähm, was wollte ich jetzt gerade sagen?

36:59.760 --> 37:01.760
Ich hab gerade auf den zweiten Monitor geguckt.

37:01.760 --> 37:02.760
Genau.

37:02.760 --> 37:05.760
Ja, mittlerweile ist es tatsächlich auch erforderlich,

37:05.760 --> 37:08.760
denn wenn man sich mal Anwendungen

37:08.760 --> 37:09.760
wie Discord anguckt,

37:09.760 --> 37:13.760
Discord ist ja im Prinzip eine Webanwendung

37:13.760 --> 37:14.760
in ein eigenes Fenster gepackt

37:14.760 --> 37:16.760
und als Desktopanwendung getarnt.

37:21.760 --> 37:23.760
Es sieht jetzt mal auf den ersten Blick

37:23.760 --> 37:24.760
gar nicht so unterschiedlich aus

37:24.760 --> 37:26.760
zur Discord-Web-Version.

37:26.760 --> 37:28.760
Also Discord-Web und Discord-Desktop

37:28.760 --> 37:30.760
ist mehr oder weniger die gleiche Anwendung,

37:30.760 --> 37:31.760
allerdings nicht komplett.

37:31.760 --> 37:33.760
Die Desktop-Anwendung von Discord

37:33.760 --> 37:36.760
hat ein paar zusätzliche Tricks, ja.

37:36.760 --> 37:40.760
Zum Beispiel haben die eigene Node-Module,

37:40.760 --> 37:41.760
die sie laden,

37:41.760 --> 37:43.760
native Node-Module,

37:43.760 --> 37:44.760
die sie laden dafür und so was.

37:44.760 --> 37:46.760
Die haben ja schon ein bisschen getrickst.

37:46.760 --> 37:48.760
Aber der riesen Vorteil,

37:48.760 --> 37:50.760
den man hat, wenn man einen Browser

37:50.760 --> 37:53.760
als Grundlage für seine Anwendung nimmt,

37:53.760 --> 37:55.760
gerade wenn man sowas wie Discord machen will,

37:55.760 --> 37:57.760
ist, du kannst dich auf alles verlassen,

37:57.760 --> 37:58.760
was in dem Browser drin ist,

37:58.760 --> 38:00.760
dass es auf allen Plattformen funktioniert.

38:00.760 --> 38:02.760
Und gerade für Discord ist das wichtig.

38:02.760 --> 38:04.760
Weil überlegt mal, Discord ist eine,

38:04.760 --> 38:08.760
nennen wir es mal, Audio-Video-Multimedia-Anwendung.

38:08.760 --> 38:09.760
Du kannst chatten,

38:09.760 --> 38:11.760
das ist noch nicht so das Ding,

38:11.760 --> 38:12.760
du kannst voice callen,

38:12.760 --> 38:14.760
du kannst Desktop sharen,

38:14.760 --> 38:17.760
du kannst wahrscheinlich sogar Video callen mittlerweile,

38:17.760 --> 38:18.760
bestimmt macht bloß keiner.

38:18.760 --> 38:20.760
Also du kannst Videos übertragen,

38:20.760 --> 38:22.760
Audio übertragen.

38:22.760 --> 38:24.760
So, und jetzt überlegt euch mal,

38:24.760 --> 38:26.760
Discord läuft auf Android,

38:26.760 --> 38:27.760
wahrscheinlich gab es,

38:27.760 --> 38:29.760
gab es mal eine Windows-Phone-Anwendung von Discord?

38:29.760 --> 38:31.760
Keine Sorge, benutzt eh keiner mehr.

38:31.760 --> 38:34.760
Es gibt Android, es gibt iOS-Discord.

38:34.760 --> 38:39.760
Es gibt Windows, Linux, Mac-Discord.

38:39.760 --> 38:41.760
Wahrscheinlich funktioniert der Mist

38:41.760 --> 38:43.760
sogar auf Android-TV und sonstigen Geschichten.

38:43.760 --> 38:45.760
Und jetzt überlegt euch mal,

38:45.760 --> 38:48.760
die hätten für alle diese Plattformen

38:48.760 --> 38:52.760
ihre Multimedia-Sachen selbst programmieren müssen.

38:52.760 --> 38:53.760
Oder es sei es nur,

38:53.760 --> 38:55.760
sich irgendein Zwischen-Framework suchen,

38:55.760 --> 38:57.760
was das kann und das dann ansprechen.

38:57.760 --> 38:59.760
Die wären heute noch nicht bei der ersten Version

38:59.760 --> 39:01.760
zum Releasen von ihrer Anwendung.

39:01.760 --> 39:02.760
Die müssten allen Ernstes,

39:02.760 --> 39:08.760
die müssten Audio-Video unter Windows, Mac, Linux keckeln.

39:08.760 --> 39:09.760
Ja?

39:09.760 --> 39:10.760
Und Linux ist ja das Schrecklichste,

39:10.760 --> 39:11.760
was ich mir vorstellen könnte,

39:11.760 --> 39:13.760
Audio-Video-Sachen zu entwickeln.

39:13.760 --> 39:15.760
Da musst du dich mit auseinandersetzen,

39:15.760 --> 39:17.760
so nach dem Motto, hat der Wayland, hat der X,

39:17.760 --> 39:19.760
hat der Puls-Audio, hat der was?

39:19.760 --> 39:21.760
Also ganz ehrlich, das würde ich im Leben nicht machen.

39:21.760 --> 39:24.760
Da ist es wahrscheinlich unter Windows noch deutlich einfacher.

39:24.760 --> 39:25.760
Dann musst du das gucken,

39:25.760 --> 39:26.760
okay, wie mache ich das unter Android,

39:26.760 --> 39:28.760
wie mache ich das unter iOS?

39:28.760 --> 39:29.760
Die würden durchdrehen.

39:29.760 --> 39:30.760
Die hätten noch nicht mal die erste Version

39:30.760 --> 39:31.760
von ihrer App raus.

39:31.760 --> 39:33.760
Hätten sie diesen ganzen Kram selbst machen müssen

39:33.760 --> 39:35.760
und hätten sich nicht auf das verlassen können,

39:35.760 --> 39:37.760
was der Browser schon bietet.

39:37.760 --> 39:38.760
Also aus dem Gesichtspunkt,

39:38.760 --> 39:40.760
für so Sachen wie Discord ist es extrem sinnvoll,

39:40.760 --> 39:42.760
einen Browser als Grundlage zu nehmen.

39:42.760 --> 39:45.760
Pipewire, was du nicht alles hast, ja.

39:46.760 --> 39:48.760
Das wäre ein kompletter Abfuck gewesen.

39:50.760 --> 39:51.760
Ich glaube,

39:51.760 --> 39:53.760
Alsa ist noch eine Stufe unten drunter, Fips.

39:53.760 --> 39:55.760
Ich glaube, das ist irgendwas...

39:56.760 --> 39:59.760
Linux, sowas ist da echt undurchsichtig.

40:00.760 --> 40:02.760
Also es macht schon Sinn, ja.

40:05.760 --> 40:06.760
Ja, das stimmt,

40:06.760 --> 40:08.760
WinUI hat kein Linux-Support,

40:08.760 --> 40:10.760
was aber auch der Name schon irgendwie

40:11.760 --> 40:13.760
so erahnen lässt, ja.

40:14.760 --> 40:15.760
Welche VM benutzt du noch mal?

40:15.760 --> 40:17.760
Virtualisierungstechnologie, meinst du?

40:17.760 --> 40:18.760
Das ist...

40:18.760 --> 40:20.760
Ich benutze VMware Workstation.

40:20.760 --> 40:22.760
Ich habe das mal gekauft,

40:22.760 --> 40:24.760
bei so einem billigen Key-Seller

40:24.760 --> 40:26.760
für irgendwie 7,20€ oder so den Key.

40:28.760 --> 40:30.760
Auf VMware Workstation Professional.

40:33.760 --> 40:35.760
Das machen wir jetzt nicht.

40:41.760 --> 40:43.760
Es gibt ein...

40:43.760 --> 40:45.760
ein Projekt auf GitHub,

40:45.760 --> 40:47.760
das nennt sich so, glaube ich.

40:54.760 --> 40:55.760
Nee.

40:58.760 --> 40:59.760
Ähm.

41:00.760 --> 41:02.760
Ich habe vergessen, wie es heißt.

41:03.760 --> 41:05.760
Nee, ähm.

41:05.760 --> 41:06.760
Wie heißt denn das?

41:06.760 --> 41:07.760
Flat...

41:07.760 --> 41:08.760
Wie heißt denn das?

41:08.760 --> 41:09.760
Flat...

41:13.760 --> 41:14.760
B-Flat.

41:14.760 --> 41:16.760
B-Flat, genau.

41:17.760 --> 41:19.760
Die versuchen quasi,

41:19.760 --> 41:21.760
einen alternativen C-Sharp-Compiler

41:21.760 --> 41:23.760
irgendwie zu...

41:23.760 --> 41:25.760
bauen.

41:27.760 --> 41:29.760
Dass du Native-Anwendungen bauen kannst

41:29.760 --> 41:31.760
mit C-Sharp, die besonders klein sind.

41:32.760 --> 41:34.760
Und die sind Go-Inspired.

41:34.760 --> 41:36.760
Habe ich noch nie ausprobiert.

41:36.760 --> 41:38.760
Ich weiß nicht, was da und wie gut

41:38.760 --> 41:40.760
das alles funktioniert.

42:00.760 --> 42:02.760
Moin, kennst du Gither und hast du eine Meinung dazu?

42:02.760 --> 42:04.760
Ja, ich habe das selbst bei mir laufen

42:04.760 --> 42:06.760
in den letzten Jahren schon lokal.

42:06.760 --> 42:08.760
Also für einfache Sachen,

42:08.760 --> 42:10.760
wenn du einfach bei dir ein lokales...

42:10.760 --> 42:12.760
Gut, ich meine, für ein lokales Git-Repro

42:12.760 --> 42:14.760
brauchst du nicht unbedingt ein Webfrontend,

42:14.760 --> 42:16.760
aber ist doch ganz praktisch.

42:16.760 --> 42:18.760
Wenn du einfach lokale Repros brauchst,

42:18.760 --> 42:20.760
um schnell mal was zu pushen,

42:20.760 --> 42:22.760
dann ist das eine super Geschichte.

42:22.760 --> 42:24.760
Ich benutze das zum Beispiel so,

42:24.760 --> 42:26.760
wenn ich was für den Stream vorbereite,

42:26.760 --> 42:28.760
dann mache ich das ja oftmals nicht sonderlich hübsch

42:28.760 --> 42:30.760
und ich habe auch nie vor, das irgendwie zu veröffentlichen.

42:30.760 --> 42:32.760
Meinetwegen zum Beispiel

42:32.760 --> 42:34.760
für den Stream gestern.

42:34.760 --> 42:36.760
Ich habe mir ein paar kleine Sachen im Vorfeld schon angeguckt,

42:36.760 --> 42:38.760
da ich nicht komplett planlos bin.

42:38.760 --> 42:40.760
Habe das wild zusammengewurscht und habe es dann gepusht

42:40.760 --> 42:42.760
in mein lokales Repro hier,

42:42.760 --> 42:44.760
was auch auf Gither-Basis läuft

42:44.760 --> 42:46.760
und habe das dann nebenbei

42:46.760 --> 42:48.760
auf dem zweiten Bildschirm offen,

42:48.760 --> 42:50.760
da ich so ein paar Sachen mir abgucken kann.

42:50.760 --> 42:52.760
Ja, benutze ich lang.

42:52.760 --> 42:54.760
Mittlerweile kannst du damit ja auch

42:54.760 --> 42:56.760
ein bisschen advancere Sachen machen.

42:56.760 --> 42:58.760
Ich habe gelesen, die haben seit der letzten

42:58.760 --> 43:00.760
oder seit den letzten Versionen

43:00.760 --> 43:02.760
haben die sogar die Möglichkeit

43:02.760 --> 43:04.760
Github Runner, also zumindest

43:04.760 --> 43:06.760
die Github

43:06.760 --> 43:08.760
die Github Actions

43:08.760 --> 43:10.760
Syntax

43:10.760 --> 43:12.760
Runner, die

43:12.760 --> 43:14.760
die Github Actions Syntax unterstützen

43:14.760 --> 43:16.760
auch

43:16.760 --> 43:18.760
einzubinden.

43:18.760 --> 43:20.760
Was ich ganz cool finde, weil so ein bisschen

43:20.760 --> 43:22.760
CI hat dem Ganzen tatsächlich noch

43:22.760 --> 43:24.760
gefehlt. Ich denke, das ist jetzt

43:24.760 --> 43:26.760
ein ziemlich gutes Komplettpaket,

43:26.760 --> 43:28.760
was sich auch easy hosten lässt.

43:30.760 --> 43:32.760
Wie wäre es mal ein Softwareprojekt

43:32.760 --> 43:34.760
für ein Stream, in dem du nach deinen Ansprüchen

43:34.760 --> 43:36.760
Das kann ich nicht, weil ich bin

43:36.760 --> 43:38.760
kein hauptberuflicher Softwareentwickler.

43:38.760 --> 43:40.760
Ich habe da keinen

43:40.760 --> 43:42.760
Anspruch in dem Sinn. Also ich kann euch

43:42.760 --> 43:44.760
achso, ach das hier, ja gut.

43:44.760 --> 43:46.760
Das stimmt tatsächlich,

43:46.760 --> 43:48.760
das könnte man machen.

43:50.760 --> 43:52.760
Ich habe mich ja jahrelang um unsere Softwareverwaltung

43:52.760 --> 43:54.760
und Pullrequests und

43:54.760 --> 43:56.760
Serverautomatisierung

43:56.760 --> 43:58.760
und unsere Softwarerepos gekümmert.

43:58.760 --> 44:00.760
Im alten Job.

44:00.760 --> 44:02.760
Und habe auch Leute genervt, wenn man

44:02.760 --> 44:04.760
beispielsweise ihre Changelog-Sachen nicht verstanden hat

44:04.760 --> 44:06.760
und sowas.

44:06.760 --> 44:08.760
Die Sache ist bloß die,

44:08.760 --> 44:10.760
ihr kennt mich,

44:10.760 --> 44:12.760
nur weil ich das haben möchte,

44:12.760 --> 44:14.760
heißt das noch lange nicht,

44:14.760 --> 44:16.760
dass ich das selbst gerne mache.

44:16.760 --> 44:18.760
Ich meine, ich habe es natürlich, wenn ich denn,

44:18.760 --> 44:20.760
okay, ich muss sagen, ich war ja da teilweise

44:20.760 --> 44:22.760
ein bisschen

44:22.760 --> 44:24.760
Drecksack beim alten Job,

44:24.760 --> 44:26.760
ja, also

44:26.760 --> 44:28.760
es durfte ja außer mir und

44:28.760 --> 44:30.760
meinem Kollege durfte ja keiner beispielsweise

44:30.760 --> 44:32.760
direkt pushen nach Master.

44:32.760 --> 44:34.760
Und ich habe zu allen immer gesagt,

44:34.760 --> 44:36.760
also nicht zu allen,

44:36.760 --> 44:38.760
wenn es wirklich kleine Sachen waren,

44:38.760 --> 44:40.760
wie irgendwelche Schreibfehler oder sowas,

44:40.760 --> 44:42.760
da habe ich auch manchmal gesagt, ey, weißt du was,

44:42.760 --> 44:44.760
komm mal kurz rüber, sag mir, wie es richtig ist,

44:44.760 --> 44:46.760
wir committen das und pushen das direkt,

44:46.760 --> 44:48.760
du brauchst keinen extra Branchen, Pullrequests

44:48.760 --> 44:50.760
und man kann es auf die Schnelle machen.

44:50.760 --> 44:52.760
So nach dem Motto, wenn einer,

44:52.760 --> 44:54.760
keine Ahnung, wenn einer

44:54.760 --> 44:56.760
Amster geschrieben hat, anstatt Master

44:56.760 --> 44:58.760
und sowas, dann

44:58.760 --> 45:00.760
ist das okay.

45:00.760 --> 45:02.760
Und dann haben wir das gemacht. Aber normalerweise

45:02.760 --> 45:04.760
habe ich halt immer gesagt, hier, guck mal,

45:04.760 --> 45:06.760
Branchen nicht richtig benannt,

45:06.760 --> 45:08.760
weiß ich nicht, von wem das kommt,

45:08.760 --> 45:10.760
Commit-Message ist nicht richtig,

45:10.760 --> 45:12.760
wenn ich manchmal mich vertippt habe,

45:12.760 --> 45:14.760
oder wenn ich vielleicht zu früh

45:14.760 --> 45:16.760
was committet habe und aus Versehen,

45:16.760 --> 45:18.760
ich habe immer direkt den Master,

45:18.760 --> 45:20.760
ich habe die Dinger immer

45:20.760 --> 45:22.760
direkt den Master gepusht.

45:22.760 --> 45:24.760
Aber das liegt ja auch daran,

45:24.760 --> 45:26.760
weil wir haben es ja hier gelernt im Stream, Leute,

45:28.760 --> 45:30.760
wir programmieren ja ohne Fehler, das heißt,

45:30.760 --> 45:32.760
man kann das auch direkt den Master pushen.

45:32.760 --> 45:34.760
Also insofern war das

45:34.760 --> 45:36.760
eigentlich vollkommen gerechtfertigt.

45:38.760 --> 45:40.760
Hast du mitbekommen,

45:40.760 --> 45:42.760
dass Reddit seine Preise, ja, das habe ich mitbekommen,

45:42.760 --> 45:44.760
schon lange mitbekommen und mich damals schon gefragt,

45:44.760 --> 45:46.760
also Twitter hat das ja auch gemacht,

45:46.760 --> 45:48.760
aber

45:48.760 --> 45:50.760
Reddit habe ich auch mitbekommen,

45:50.760 --> 45:52.760
und mich damals schon gefragt, wie das Apps wie Apollo

45:52.760 --> 45:54.760
und so machen wollen und jetzt kam halt raus,

45:54.760 --> 45:56.760
die wird es dann einfach nicht mehr geben.

45:56.760 --> 45:58.760
Was ich scheiße finde, richtig scheiße finde,

45:58.760 --> 46:00.760
das kann man auch nicht anders nennen,

46:00.760 --> 46:02.760
finde ich mega beschissen finde, weil

46:02.760 --> 46:04.760
die offizielle Reddit-App,

46:04.760 --> 46:06.760
die ist besser geworden die letzten Jahre,

46:06.760 --> 46:08.760
aber ich finde die Handhabung immer noch

46:10.760 --> 46:12.760
Apollo ist auch nicht der Weisheitsletzter Schluss

46:12.760 --> 46:14.760
irgendwie, ja,

46:14.760 --> 46:16.760
also die

46:16.760 --> 46:18.760
besser integriert ist die offizielle Reddit-App

46:18.760 --> 46:20.760
aber allein schon,

46:20.760 --> 46:22.760
dass es keinen gescheiten Vor- und Zurück-Button gibt

46:22.760 --> 46:24.760
und sowas, das ist so ganz weird,

46:24.760 --> 46:26.760
die offizielle Reddit-App, die ist besser als noch

46:26.760 --> 46:28.760
vor ein paar Jahren, vor ein paar Jahren war die komplett

46:28.760 --> 46:30.760
unusable

46:36.760 --> 46:38.760
Keine Ahnung, was die sich dabei gedacht haben.

46:38.760 --> 46:40.760
Ich meine, ich benutze auch mittlerweile

46:40.760 --> 46:42.760
tatsächlich hauptsächlich die offizielle Reddit-App

46:42.760 --> 46:44.760
und reg mich jedes Mal auf,

46:44.760 --> 46:46.760
wenn irgendwas mal wieder nicht so ist, wie ich mir das gerne

46:46.760 --> 46:48.760
gewünscht hätte, aber

46:48.760 --> 46:50.760
ich kann jeden verstehen, der

46:50.760 --> 46:52.760
Apollo verwendet

46:52.760 --> 46:54.760
und wenn du jetzt noch nicht mal mehr auf die

46:54.760 --> 46:56.760
API-Gescheit zugreifen kannst, dann ist halt

46:56.760 --> 46:58.760
RIP alle Third-Party-Apps

46:58.760 --> 47:00.760
Ja, das

47:00.760 --> 47:02.760
finde ich kacke

47:02.760 --> 47:04.760
Es wollen ja ab morgen

47:04.760 --> 47:06.760
einige Subreddits streiken,

47:06.760 --> 47:08.760
habe ich gelesen auf Reddit, so nach dem Motto,

47:08.760 --> 47:10.760
das Subreddit wird geschlossen für irgendwie

47:10.760 --> 47:12.760
paar Tage, Wochen, was auch immer

47:12.760 --> 47:14.760
Ich denke

47:14.760 --> 47:16.760
nicht, dass das irgendwie Erfolg hat

47:16.760 --> 47:18.760
Diese Versuche

47:18.760 --> 47:20.760
gab es ja schon an anderen Stellen

47:20.760 --> 47:22.760
Beispielsweise

47:22.760 --> 47:24.760
gab es ja, es gab ja auch

47:24.760 --> 47:26.760
Ich glaube

47:26.760 --> 47:28.760
die letzte Variante

47:30.760 --> 47:32.760
Was war das Letzte, wo die Leute

47:32.760 --> 47:34.760
so Blackout-Sachen probiert haben?

47:34.760 --> 47:36.760
War das nicht zu Hogwarts Legacy?

47:36.760 --> 47:38.760
So nach dem Motto, wir blockieren,

47:38.760 --> 47:40.760
wir streamen einen Tag nicht oder sowas

47:40.760 --> 47:42.760
Keine Ahnung, das hat

47:42.760 --> 47:44.760
meistens nichts gebracht

47:46.760 --> 47:48.760
Weil man muss ehrlich sagen

47:48.760 --> 47:50.760
der Aufschrei ist

47:50.760 --> 47:52.760
groß und der Aufschrei ist

47:52.760 --> 47:54.760
berechtigt, aber

47:54.760 --> 47:56.760
wahrscheinlich tangiert es 95%

47:56.760 --> 47:58.760
der Reddit-User nicht

47:58.760 --> 48:00.760
und die werden sich einfach

48:00.760 --> 48:02.760
nur wundern, also im Endeffekt schaden sich die

48:02.760 --> 48:04.760
Subreddits wahrscheinlich sogar selbst

48:04.760 --> 48:06.760
weil die Leute

48:06.760 --> 48:08.760
eventuell woanders hingehen und

48:08.760 --> 48:10.760
dann da hängen bleiben

48:10.760 --> 48:12.760
Das ist in Reddit nicht so schlimm

48:12.760 --> 48:14.760
Du kannst ja mehrere Sachen abonnieren

48:14.760 --> 48:16.760
und dir angucken

48:16.760 --> 48:18.760
Also

48:20.760 --> 48:22.760
Ja, da gibt es bald ein neues

48:22.760 --> 48:24.760
Also ich glaube nicht

48:24.760 --> 48:26.760
dass das

48:26.760 --> 48:28.760
irgendeinen Effekt

48:28.760 --> 48:30.760
erzielt, ich fände es gut

48:30.760 --> 48:32.760
weil ich es bescheuert finde, dass

48:32.760 --> 48:34.760
Party-Apps ausgesperrt werden

48:34.760 --> 48:36.760
und die Reddit-App halt in vielen Belangen immer noch

48:36.760 --> 48:38.760
sackt

48:40.760 --> 48:42.760
Aber ich glaube nicht

48:42.760 --> 48:44.760
dass es irgendwas ändern wird

48:48.760 --> 48:50.760
Naja

48:50.760 --> 48:52.760
Gut

48:52.760 --> 48:54.760
Chat-Gil

48:54.760 --> 48:56.760
So, habe ich eigentlich meine

48:56.760 --> 48:58.760
Trending-Repos schon durchgeguckt? Nehmen wir mal ganz schnell

48:58.760 --> 49:00.760
AI AI AI AI AI AI AI AI AI AI

49:00.760 --> 49:02.760
Das ist das

49:02.760 --> 49:04.760
schlimmste AI-Programm Leute, kennt das jemand?

49:10.760 --> 49:12.760
Nein

49:12.760 --> 49:14.760
Nein, das hat mit

49:14.760 --> 49:16.760
der AI überhaupt nichts zu tun

49:18.760 --> 49:20.760
Das ist eher was für Weep-Musik

49:24.760 --> 49:26.760
Was ist

49:26.760 --> 49:28.760
GotPotato?

49:28.760 --> 49:30.760
Hat keine Beschreibung, hat das nicht letzte Woche schon gesehen?

49:30.760 --> 49:32.760
Hat keine Beschreibung

49:32.760 --> 49:34.760
Ah

49:34.760 --> 49:36.760
Security-Kram

49:40.760 --> 49:42.760
Ja Leute, Osu! ist kein

49:42.760 --> 49:44.760
AI

49:44.760 --> 49:46.760
Kein AI-Programm, das ist

49:46.760 --> 49:48.760
irgendein Rhythmus-Game, wo die

49:48.760 --> 49:50.760
meisten irgendwelche Anime-Musik drinnen spielen

49:52.760 --> 49:54.760
Das ist quasi

49:56.760 --> 49:58.760
Aim-Training

49:58.760 --> 50:00.760
für Anime-Musik

50:00.760 --> 50:02.760
Fans

50:02.760 --> 50:04.760
Osu!

50:04.760 --> 50:06.760
So

50:06.760 --> 50:08.760
Was

50:08.760 --> 50:10.760
empfiehlt uns

50:10.760 --> 50:12.760
Youtube denn heute? Ich habe schon ein paar Sachen

50:12.760 --> 50:14.760
aufgemacht, falls uns Youtube nichts Gescheites empfiehlt

50:14.760 --> 50:16.760
Äh, nope

50:16.760 --> 50:18.760
Debian 12 Tutorial

50:18.760 --> 50:20.760
für Einsteiger? Ne

50:20.760 --> 50:22.760
Das gucken wir jetzt nicht

50:22.760 --> 50:24.760
Keine 22 Minuten, außer dem Chat

50:24.760 --> 50:26.760
Wir sind ja hier keine Einsteiger, wir sind ja alle

50:26.760 --> 50:28.760
Way too high IQ

50:28.760 --> 50:30.760
für Einsteiger

50:30.760 --> 50:32.760
Ne, wir gucken

50:32.760 --> 50:34.760
Was soll an einem Debian-Einsteiger

50:34.760 --> 50:36.760
mäßig anders sein, als jedem

50:36.760 --> 50:38.760
x-beliebigen anderen Linux? Okay, ja

50:38.760 --> 50:40.760
Die Installation und sowas, aber danach

50:40.760 --> 50:42.760
macht es auch keinen großen Unterschied

50:42.760 --> 50:44.760
Ach

50:44.760 --> 50:46.760
Mit vierfacher Beschleunigung angucken

50:46.760 --> 50:48.760
Kann Youtube überhaupt vierfach beschleunigt?

50:52.760 --> 50:54.760
Die Debian

50:54.760 --> 50:56.760
12, Isus, Debian 12 kam doch

50:56.760 --> 50:58.760
gestern raus, dachte ich

50:58.760 --> 51:00.760
Okay

51:00.760 --> 51:02.760
Ich kriege wieder irgendwelche Grills

51:02.760 --> 51:04.760
empfohlen

51:08.760 --> 51:10.760
Ja

51:10.760 --> 51:12.760
Und wohlgemerkt, nicht nur Microsoft

51:12.760 --> 51:14.760
Achso, ne, ne, doch, in dem Fall

51:14.760 --> 51:16.760
wahrscheinlich nur Microsoft

51:16.760 --> 51:18.760
Hier geht es wahrscheinlich um die Geschichte, dass Microsoft

51:18.760 --> 51:20.760
Zip-Passwörter

51:20.760 --> 51:22.760
extrahiert

51:22.760 --> 51:24.760
Also Microsoft ist da wirklich clever

51:24.760 --> 51:26.760
Also wenn ihr

51:26.760 --> 51:28.760
Wenn ihr ein Zip verschickt

51:28.760 --> 51:30.760
Ein verschlüsseltes Zip über Microsoft Services

51:30.760 --> 51:32.760
Dann machen die folgendes

51:32.760 --> 51:34.760
Die extrahieren aus den

51:34.760 --> 51:36.760
Chatnachrichten und aus den

51:36.760 --> 51:38.760
E-Mails das Passwort, falls es da drin steht

51:38.760 --> 51:40.760
Und

51:40.760 --> 51:42.760
Da bin ich mir jetzt aber nicht sicher, ob das stimmt

51:42.760 --> 51:44.760
Ich glaube, die probieren sogar

51:44.760 --> 51:46.760
eine Liste aus Default-Kennwörtern

51:46.760 --> 51:48.760
durch, um das zu entschlüsseln

51:50.760 --> 51:52.760
Und das natürlich alles

51:52.760 --> 51:54.760
unter der Flagge

51:54.760 --> 51:56.760
von Sicherheit

51:58.760 --> 52:00.760
Weil Virenscanner und

52:00.760 --> 52:02.760
Tja, was wird denn da sonst

52:02.760 --> 52:04.760
noch immer gerne als Beispiel genannt

52:04.760 --> 52:06.760
Ja gut, der Klassiker

52:06.760 --> 52:08.760
schleicht hin, wenn es um Security-Themen geht

52:08.760 --> 52:10.760
ist natürlich

52:10.760 --> 52:12.760
Kinderpornos finden und

52:12.760 --> 52:14.760
Terroristen finden und

52:14.760 --> 52:16.760
Morde aufklären und sowas in der Richtung

52:16.760 --> 52:18.760
Das wird ja immer in den Ring geworfen

52:18.760 --> 52:20.760
Jedes Mal, ist euch das eigentlich mal aufgefallen?

52:20.760 --> 52:22.760
Jedes Mal, wenn es um irgendwelche

52:22.760 --> 52:24.760
mehr oder wenig

52:24.760 --> 52:26.760
stark ausgeprägten Einschneidungen

52:26.760 --> 52:28.760
in der Privatsphäre geht, kommt als erstes

52:28.760 --> 52:30.760
Terroristen

52:30.760 --> 52:32.760
Kinderpornos, Morde

52:34.760 --> 52:36.760
Das kannst du theoretisch, sobald

52:36.760 --> 52:38.760
so ein Thema aufkommt, kannst du eigentlich

52:38.760 --> 52:40.760
schon so eine Stoppuhr stellen oder irgendwie

52:40.760 --> 52:42.760
so einen Countdown machen, wann der erste

52:42.760 --> 52:44.760
mit einem dieser drei Sachen um die Ecken

52:44.760 --> 52:46.760
kommt, ja

52:52.760 --> 53:04.760
...

53:04.760 --> 53:06.760
So, nix spannendes dabei

53:06.760 --> 53:12.760
...

53:12.760 --> 53:14.760
...

53:14.760 --> 53:16.760
...

53:16.760 --> 53:18.760
Also die Seite ist an sich schon sehr

53:18.760 --> 53:20.760
sus, ja

53:20.760 --> 53:22.760
...

53:22.760 --> 53:24.760
Da weißt du halt nie, ob der Key

53:24.760 --> 53:26.760
am Ende funktioniert oder nicht

53:26.760 --> 53:28.760
...

53:28.760 --> 53:30.760
Ich mein, ich hab mein Key damals auch billig bei so einer

53:30.760 --> 53:32.760
Keyshop-Seite gekauft

53:32.760 --> 53:34.760
Chat, wir

53:34.760 --> 53:36.760
posten aber, ich sag euch gleich

53:36.760 --> 53:38.760
Wir posten hier im Chat keine Links

53:38.760 --> 53:40.760
zu irgendwelchen Serial-Keys

53:40.760 --> 53:42.760
...

53:42.760 --> 53:44.760
Weil das ist wahrscheinlich

53:44.760 --> 53:46.760
nicht erlaubt

53:46.760 --> 53:48.760
Aber ich bin mir

53:48.760 --> 53:50.760
Ich bin zuversichtlich

53:50.760 --> 53:52.760
...

53:52.760 --> 53:54.760
dass ihr in der Lage seid

53:54.760 --> 53:56.760
euch selbst zu

53:56.760 --> 53:58.760
helfen und im Zweifelsfall die Software

53:58.760 --> 54:00.760
einfach auch kauft, wenn euch nix einfällt

54:00.760 --> 54:02.760
oder wenn ihr sie wirklich viel

54:02.760 --> 54:04.760
benutzt

54:04.760 --> 54:06.760
...

54:06.760 --> 54:08.760
...

54:08.760 --> 54:10.760
...

54:10.760 --> 54:12.760
...

54:12.760 --> 54:14.760
...

54:14.760 --> 54:16.760
...

54:16.760 --> 54:18.760
...

54:18.760 --> 54:20.760
...

54:20.760 --> 54:22.760
...

54:22.760 --> 54:24.760
...

54:24.760 --> 54:26.760
...

54:26.760 --> 54:28.760
...

54:28.760 --> 54:30.760
...

54:30.760 --> 54:32.760
...

54:32.760 --> 54:34.760
...

54:34.760 --> 54:36.760
...

54:36.760 --> 54:38.760
...

54:38.760 --> 54:40.760
...

54:40.760 --> 54:42.760
...

54:42.760 --> 54:44.760
...

54:44.760 --> 54:53.960
einfach nicht lassen ich weiß ich weiß ich weiß wo schon grund warum er irgendwie

54:53.960 --> 54:57.360
schon in den siebten discord account braucht weil er überall immer gebannt ist

54:57.360 --> 55:07.560
das war jetzt aber echt mit ansage das hat man sich sparen können

55:07.560 --> 55:13.040
so in fünf minuten ist er wieder am start

55:13.040 --> 55:24.600
die zukunft ist hier ok also lass mal kurz schauen was haben wir denn hier schönes warum

55:24.600 --> 55:31.000
du in deckung doch noch doch was

55:31.000 --> 55:35.800
warum du in deckung doch noch down ist ja das wollte ich gucken weil ich vermute dass

55:35.800 --> 55:39.440
hier ein bisschen was zu kleinzeit hit detection und sowas versucht wird für

55:39.440 --> 55:44.600
noobs zu verpacken da will ich ein bisschen meckern falls die falls die

55:44.600 --> 55:52.040
erklärung nicht korrekt sind so was haben wir als nächstes noch advanced

55:52.040 --> 55:55.280
windows feature you should know

55:56.240 --> 56:04.680
ok das sind immer gbade videos das sind immer gbade videos aber kommt neun

56:04.680 --> 56:08.160
minuten das können wir uns schnell gehen

56:08.160 --> 56:23.840
was auch richtig richtig advance ist in windows also falls ihr euch mal gefragt

56:23.840 --> 56:28.560
habt wie man custom icons vergeben kann für ordner und sowas das geht seit

56:28.560 --> 56:33.080
windows 95 oder wahrscheinlich seit windows 3 11 oder so und das problem ist

56:33.080 --> 56:36.440
dass sich der dialog seit windows 95 nicht geändert hat guckt euch das mal an

56:36.440 --> 56:40.360
das wissen das wissen wenige und das ist super advance pass mal auf krasse krasse

56:40.360 --> 56:45.040
windows hacks zeige ich euch jetzt ja guck mal wir gehen jetzt hier drauf

56:45.040 --> 56:48.920
rechtsklick natürlich selbstverständlich schau more options

56:48.920 --> 57:00.120
properties customize change icon und jetzt kommt ihr halt straight aus windows

57:00.120 --> 57:08.240
95 der dialog und die icons und die wurden die wurden auch ohne scheiß die

57:08.240 --> 57:12.760
wurden 20 jahre auch nicht oder ja länger die wurden auch 30 jahre nicht

57:12.760 --> 57:19.440
mehr updatet hier die eigens vielleicht ein paar aber das sind immer noch da

57:19.440 --> 57:21.480
sind immer noch die richtigen oldschool eigens drin

57:21.480 --> 57:25.500
wobei sie wo ich mich ernsthaft frage warum ist das eigentlich so eine

57:25.500 --> 57:29.720
lächerlich kleine und zum größten teil absolut müllige sammlung aus

57:29.720 --> 57:37.560
eikens ich meine warum um alles in der welt sollte ich meine eiken so machen

57:39.880 --> 57:44.080
ja hier pretty pretty advances windows moment geht das eigentlich auch hier

57:44.080 --> 57:51.920
mit properties ja nee pretty advances feature würde ich sagen

57:59.720 --> 58:06.840
und es gibt hier den ordner es gibt hier den ordner es gibt hier den ordner und

58:06.840 --> 58:11.440
hier den ordner symbol da blickt doch keiner mal durch noch mehr ordner

58:11.440 --> 58:26.360
noch ein ordner noch ein ordner noch ein ordner noch zwei ordner

58:27.360 --> 58:37.880
ja man weiß es nicht ja windows logik so okay jetzt lassen wir uns das mal

58:37.880 --> 58:40.640
alles gucken wir uns das mal an die advancen features

58:40.640 --> 58:44.440
in case you do come across a problem that you have no idea how to deal with

58:44.440 --> 58:49.000
then one of these might ring a bell and might lead you to a possible solution or

58:49.000 --> 58:51.920
at least a place to start and this is not going to be a detail

58:52.920 --> 58:58.000
wie wir fahren sie ist more of just a quick overview of each and if you have

58:58.000 --> 59:02.200
been channel for a while you may have heard me mention these before but it's

59:02.200 --> 59:05.880
always good to have a refresher so let's just jump in first up we have the disk

59:05.880 --> 59:09.600
management menu which actually is important to know about because if you

59:09.600 --> 59:13.640
ever go to the house windows xp kommt auch straight aus windows xp und buy

59:13.640 --> 59:18.680
a new hard drive or new ssd that's completely blank you may plug it in and

59:18.680 --> 59:21.680
realize wait a minute it's not showing up anywhere and that's because you

59:21.680 --> 59:25.200
probably need to initialize it using the disk management so it's good to know

59:25.200 --> 59:28.080
that that's a thing it's to do that it's actually pretty simple you basically

59:28.080 --> 59:34.560
just right click okay next quite a bit more this part trade off of

59:34.560 --> 59:38.480
loiter ich habe frei verder wir müssen das video gar nicht gucken der hat seine

59:38.480 --> 59:42.280
vorschau dinge ordentlich benannt okay das part also wer ernsthaft ist part

59:42.280 --> 59:46.040
benutzt hat die kontrolle über sein leben verloren bevor ich disk part

59:46.040 --> 59:54.680
benutzte seriously da würde ich eher linux booten g partet oder irgendwas

59:54.680 --> 01:00:02.200
benutzt bevor ich dieses ding da benutze fdisk bevor ich das da benutze

01:00:03.020 --> 01:00:11.560
House Files Ja House Files halt Task Scheduler Keckle advantage Feature

01:00:17.080 --> 01:00:19.040
Servicemen What kind of thing.

01:00:21.520 --> 01:00:25.160
Ach nee der meint diese Service Management Konsole oder sowas jetzt.

01:00:29.740 --> 01:00:31.880
Servicemen

01:00:32.200 --> 01:00:43.500
Ja, das ist jetzt auch nix Neues. Sieht auch aus wie aus Windows XP, weil es direkt aus Windows XP ist, aber das ist, also das weiß ja sogar ich und ich bin kein Windows Admin und ich werde auch nie Windows Admin, ich will auch nie Windows Admin werden.

01:00:43.500 --> 01:00:50.000
Bei mir auf der Arbeit haben sie letztens schon erzählt, wir sollen uns jetzt um Microsoft SQL Sachen unter Windows vielleicht kümmern.

01:00:50.000 --> 01:00:54.000
Naja, kümmert euch mal, aber ich kümmere mich da nicht drum.

01:00:54.300 --> 01:01:04.300
Okay, ich meine natürlich würde ich einem helfen bei, wenn irgendwas wäre und ich wüsste dazu was, aber ich weiß dazu nix und ehrlich gesagt, das ist auch ein Thema, wo ich mich ungern mit beschäftigen will.

01:01:08.300 --> 01:01:12.800
Okay, Event Viewer, ja, eines der hässlichsten Anwendungen ever, Leute.

01:01:12.800 --> 01:01:15.300
Den kann ich jetzt nicht aufmachen, da leake ich bestimmt irgendwas.

01:01:15.300 --> 01:01:21.300
Event Viewer, das ist also sowohl vom Layout her, als auch von der Optik, eines der hässlichsten Anwendungen, die ich je gesehen habe.

01:01:21.600 --> 01:01:30.600
Memory Diagnostics Tool, ja, das brauche ich nicht, da würde ich einfach meinen, ach guck mal, die haben quasi MemTest auch jetzt eingebaut, würde ich einfach MemTest booten und gut ist.

01:01:30.600 --> 01:01:35.600
Okay, Resource Monitor, okay, wenn man es braucht.

01:01:37.600 --> 01:01:42.100
Reliability Monitor, who the fuck braucht denn das?

01:01:42.100 --> 01:01:49.600
Okay, nice, Video durch, GG Eats, nice, siehste, so geht das, einfach in der Schnelle durchgeguckt.

01:01:49.900 --> 01:01:51.900
Warum du, okay, dann gucken wir, was haben wir denn sonst noch zu bieten.

01:01:51.900 --> 01:01:55.900
Blizzard fällt, nee, Overwatch 2 fällt auseinander.

01:01:55.900 --> 01:01:57.900
Oh ja, das stimmt.

01:01:57.900 --> 01:02:03.900
Also generell fällt, also Overwatch 2 war schon nicht unerfolgreich.

01:02:05.900 --> 01:02:09.900
Konnte einem Riesenhype nicht anknüpfen und ich weiß nicht, was Blizzard da wieder gemacht hat.

01:02:09.900 --> 01:02:11.900
Ich mein, Papa Jeff ist weg.

01:02:12.900 --> 01:02:14.900
PvE wurde eingestampft.

01:02:14.900 --> 01:02:16.900
Was haben wir hier zu bieten?

01:02:17.200 --> 01:02:22.200
Highschool student makes React a million times faster.

01:02:22.200 --> 01:02:27.200
Okay, wir können uns eine Runde of Fireship angucken, kam erst vor 11 Minuten, geht nur 2 Minuten 46.

01:02:27.200 --> 01:02:29.200
You're watching the Code Report.

01:02:34.200 --> 01:02:37.200
Willst du Diablo 4 anfassen? Ich bin immer noch unschlüssig.

01:02:40.200 --> 01:02:41.200
Das stimmt.

01:02:41.500 --> 01:02:45.500
Das stimmt wohl, das habe ich auch gestern gesagt, als wir ein bisschen das Feld gebastelt haben.

01:02:45.500 --> 01:02:51.500
React ist nach wie vor das mit Abstand verbreitetste Framework überhaupt.

01:02:52.500 --> 01:02:59.500
Also für so, für Frontend, kleinseitige Anwendungen und auch für Fullstack Sachen mit Next.js und sowas.

01:02:59.500 --> 01:03:01.500
Das ist sehr verbreitet.

01:03:03.500 --> 01:03:05.500
Ja, das Welt hat gar keine.

01:03:05.800 --> 01:03:07.800
Ja, keine virtual DOM mehr.

01:03:16.800 --> 01:03:18.800
Okay, nur mal so, dass ich das jetzt verstehe.

01:03:18.800 --> 01:03:21.800
Hat der jetzt React geforgt, um es schneller zu machen?

01:03:21.800 --> 01:03:23.800
Oder ist das ein Plugin für React?

01:03:23.800 --> 01:03:33.800
Okay, nur mal so, da ich das jetzt verstehe. Hat der jetzt React geforkt, um es schneller zu machen, oder ist das ein Plugin für React?

01:03:33.800 --> 01:03:38.800
Das ist ein Fork, oder? So was.

01:03:54.800 --> 01:03:59.800
Okay, also, um es schneller zu machen, oder? So was.

01:03:59.800 --> 01:04:07.800
Hat der jetzt React geforkt, oder? So, das ist ein Fork, oder? So was.

01:04:07.800 --> 01:04:12.800
Hat der jetzt React geforkt, oder? So was.

01:04:12.800 --> 01:04:19.800
Okay, also, um es schneller zu machen, oder? So etwas.

01:04:19.800 --> 01:04:24.480
Updates faster in den update everything all at once it's kind of like finalizing all your changes on a

01:04:24.480 --> 01:04:29.040
Ich würde mal interessieren wie er das jetzt gemacht hat blueprint before you go tearing out walls in a building

01:04:29.040 --> 01:04:35.160
But all this happens at runtime and there's a lot of unnecessary work trying to figure out what changed million js takes a more surgical

01:04:35.160 --> 01:04:41.280
Approach by introducing a compiler that can perform static analysis to figure out exactly where the dynamic data is in advance

01:04:41.280 --> 01:04:45.760
It creates an edit. Wie funktioniert das denn app to represent the state of the okay?

01:04:45.760 --> 01:04:51.600
Das ist das ist richtig high IQ shit the application which can then determine what has changed with far less computation required

01:04:51.600 --> 01:04:58.320
This approach is inspired by other framework. Okay. Okay. Ich rate jetzt einfach mal wie das eventuell funktionieren könnte

01:04:58.840 --> 01:05:04.360
Der guckt sich an wie die elemente von der seite aufgebaut sind dann analysiert er irgendwie

01:05:05.040 --> 01:05:09.800
Was interaktiv an der seite ist und wie sich die elemente ändern könnten

01:05:11.480 --> 01:05:13.480
Und dafür

01:05:13.840 --> 01:05:15.840
Was weiß ich

01:05:16.080 --> 01:05:21.840
Und für diese also für die änderungen die theoretisch möglich sind recht berechnet er schon mal im vorfeld

01:05:22.800 --> 01:05:24.760
quasi die

01:05:24.760 --> 01:05:26.760
Die defs oder so was in der richtung

01:05:27.520 --> 01:05:31.680
Keine ahnung ob ich das jetzt richtig kapiert aber sowas sowas in der richtung wahrscheinlich

01:05:32.320 --> 01:05:39.160
Likes felt and solid which also rely on a compiler to achieve these surgical dom updates and million was also inspired by the prior

01:05:39.160 --> 01:05:44.880
Work of a library called blocked on what's also cool about million is that it's only four kilobytes and extremely easy to use

01:05:44.880 --> 01:05:50.880
All you do is take an existing react component and wrap it inside this block function to create a higher order component

01:05:50.880 --> 01:05:54.140
Which will block out the virtual dom and let million magically take over

01:05:54.360 --> 01:05:59.680
Basically after the component is mounted it makes a reference to the underlying dom element then does all the subsequent

01:05:59.840 --> 01:06:02.240
Rendering and change detection on its own in addition

01:06:02.240 --> 01:06:06.360
It has a built-in for component which is used to render a list of blocks pretty simple

01:06:06.360 --> 01:06:07.600
But before you get too excited

01:06:07.600 --> 01:06:13.520
Ich will es nicht sagen dass ich es kapiert hätte the creator of this project admits that it's not a silver bullet when using blocks

01:06:13.520 --> 01:06:15.480
You need to follow a specific set of rules

01:06:15.480 --> 01:06:21.320
And if you break those rules, it'll revert back to reacts virtual dom and you'll lose all your massive gains overall million

01:06:21.320 --> 01:06:22.800
Js looks like an awesome project

01:06:22.800 --> 01:06:28.840
But most importantly it gives me hope that gen z is not actually tech illiterate and might actually one day be able to fix react

01:06:28.840 --> 01:06:32.560
This has been the code report. Thanks for watching and I will see you in the next one

01:06:36.360 --> 01:06:38.360
You

01:06:38.720 --> 01:06:42.160
Yes, we know further front-end framework

01:06:45.560 --> 01:06:48.000
Actually, actually, you can make a video like that every day

01:06:51.440 --> 01:06:57.960
That channel I'm not that smart either react is now much faster

01:07:02.320 --> 01:07:05.920
Blazingly fast and that without being written in rust

01:07:07.360 --> 01:07:14.040
Ist auch nicht alle tage weil eigentlich ist ja place jetzt das haben ja die rast leute tatsächlich für sich schon gepachtet

01:07:14.680 --> 01:07:16.680
nur rast ist blazingly fast

01:07:17.040 --> 01:07:20.320
Alles andere mag auch blazingly fast sein muss es aber irgendwie anders nennen

01:07:23.800 --> 01:07:31.640
Und es hat jemand ernsthaft ein acht stunden video gemacht um die ganzen half-life 1 erweiterung zu synchronisieren

01:07:32.560 --> 01:07:35.080
Geil die leute haben teilweise echt zu viel zeit

01:07:35.240 --> 01:07:37.240
Geil die leute haben teilweise echt zu viel zeit

01:07:58.000 --> 01:08:03.080
Why we should why we should stop using javascript

01:08:06.080 --> 01:08:09.000
Jojo die sache ist bloß die

01:08:12.720 --> 01:08:14.720
Es gibt halt nichts anderes

01:08:16.640 --> 01:08:20.640
Was was willst du was ich meine es ist ja schön und gut wenn man sagt

01:08:22.760 --> 01:08:25.880
Man soll kein javascript mehr verwenden aber es gibt halt keine

01:08:27.040 --> 01:08:30.960
Keine alternative zu javascript also was willst du machen

01:08:31.960 --> 01:08:34.480
Im übrigen ist das nicht ist das nicht der jason erfinder

01:08:35.800 --> 01:08:38.600
Der der gesagt hat dass man jason eigentlich

01:08:40.080 --> 01:08:42.080
Jason aussprechen soll

01:08:43.280 --> 01:08:45.280
Ich glaube schon dass der das ist

01:08:45.760 --> 01:08:47.760
Du hast nochmal zwei sekunden

01:09:02.040 --> 01:09:08.840
Okay es geht nur 2 minuten lass es mal kurstrassen neu. Kommen warum warum wir keinen javascript meh Benutzen sollen

01:09:08.840 --> 01:09:21.840
Das hat sich ja im Endeffekt sogar bewahrheitet.

01:09:21.840 --> 01:09:27.400
Ich meine, man musste viel an Javascript drehen, das Javascript, der dort angekommen ist, wo

01:09:27.400 --> 01:09:28.400
es heute steht.

01:09:28.400 --> 01:09:34.320
Aber die haben bei Javascript die letzten Jahre tatsächlich genau das Gegenteil geschafft

01:09:34.320 --> 01:09:35.320
von C++.

01:09:35.320 --> 01:09:39.240
C++ hat die Sprache immer komplizierter und schlechter gemacht.

01:09:39.240 --> 01:09:46.320
Schlechter kann man nicht sagen, aber immer unlogischer, immer komplizierter und im Gesamtpaket

01:09:46.320 --> 01:09:47.320
dadurch schlechter.

01:09:47.320 --> 01:09:52.000
Und Javascript wurde die letzten Jahre über immer besser und sinnvoll erweitert.

01:09:52.000 --> 01:10:08.040
Und was soll man stattdessen machen?

01:10:08.040 --> 01:10:09.040
Alles in WebAssembly.

01:10:09.040 --> 01:10:14.000
Das Problem an WebAssembly ist, du kannst halt keine Webseiten mit manipulieren so richtig.

01:10:15.000 --> 01:10:19.000
Es hat so viele kongenitive Fehler.

01:10:19.000 --> 01:10:22.000
Es ist wirklich eine riechende Sprache.

01:10:22.000 --> 01:10:25.000
Es gibt einfach viel Scheiße.

01:10:25.000 --> 01:10:33.000
Und es ist vielleicht immer noch für sein Bereich der Anwendung.

01:10:33.000 --> 01:10:37.000
Es ist die beste Sprache der Welt für solche Dinge.

01:10:37.000 --> 01:10:38.000
Aber das ist nicht genug.

01:10:38.000 --> 01:10:41.000
Wir sollten in die nächste Generation von Sprachen wechseln.

01:10:42.000 --> 01:10:46.000
Ah ok, er sagt, Javascript sagt, aber wir sollten Javascript durch ein neueres Javascript

01:10:46.000 --> 01:10:48.000
ersetzen, was die Probleme nicht hat.

01:10:48.000 --> 01:10:58.000
Ich meine, ist es nicht besser vom Ansatz her tatsächlich weiterhin Javascript zu verbessern?

01:10:58.000 --> 01:11:03.000
Ok, man könnte jetzt natürlich sagen, du kannst viele Sachen in Javascript nicht verbessern,

01:11:03.000 --> 01:11:11.000
weil sie eben schon so lange da sind, dass die, es gibt halt so viele Seiten, die sich

01:11:11.000 --> 01:11:16.000
darauf verlassen, dass die Dinger sich merkwürdig verhalten, weil die schon immer merkwürdig

01:11:16.000 --> 01:11:17.000
waren in Javascript.

01:11:17.000 --> 01:11:23.000
Aber ich meine, anstatt eine komplett neue Sprache zu bauen, wie wäre es denn beispielsweise

01:11:23.000 --> 01:11:29.000
mit irgendeinem Kompatibilitätsflag oder sowas.

01:11:30.000 --> 01:11:34.000
Ich meine, eine neue Sprache ist ja im Prinzip auch nichts anderes.

01:11:34.000 --> 01:11:40.000
Nur mit dem Unterschied, dass da wieder eine neue Sprache lernen muss und das ganze Javascript

01:11:40.000 --> 01:11:43.000
Library Ökosystem weggeschmissen wird.

01:11:43.000 --> 01:11:47.000
Wäre nicht das gleiche wie zwei Sprachen?

01:11:47.000 --> 01:11:49.000
Ja, nicht ganz.

01:11:49.000 --> 01:11:52.000
Neue Sprache hat halt alles neu.

01:11:52.000 --> 01:11:56.000
Hast eine neue Sprache, hast einen neuen Compiler, hast ein neues Format, hast neue Libraries,

01:11:56.000 --> 01:11:57.000
die du brauchst.

01:11:57.000 --> 01:12:07.000
Wenn du quasi eher so einen Clean Javascript bauen würdest, dann würden zumindest die

01:12:07.000 --> 01:12:11.000
großen Libraries nach und nach darauf umsteigen.

01:12:11.000 --> 01:12:15.000
Man müsste es halt wirklich gut planen.

01:12:15.000 --> 01:12:21.000
Man müsste das in fließenden Übergang machen, man müsste dann auch erlauben, das feilweise

01:12:21.000 --> 01:12:23.000
einzuschalten und sowas.

01:12:24.000 --> 01:12:26.000
Ähnlich wie Python 2 und 3.

01:12:26.000 --> 01:12:28.000
Ja, das hat ja auch nicht wirklich gut funktioniert.

01:12:28.000 --> 01:12:29.000
Ne, ich weiß nicht.

01:12:29.000 --> 01:12:34.000
Vielleicht hat er auch einfach recht und man sollte wirklich was komplett Neues bauen.

01:12:36.000 --> 01:12:38.000
Ich meine, es ist immerhin der Jason-Erfinder.

01:12:38.000 --> 01:12:42.000
Und auch jemand, der bei Javascript mitbeteiligt war.

01:12:42.000 --> 01:12:43.000
Ich weiß nicht, ob es der Java...

01:12:43.000 --> 01:12:45.000
Ne, hier steht doch Jason-Erfinder sogar dabei.

01:12:46.000 --> 01:12:47.000
Ja.

01:12:51.000 --> 01:12:52.000
Ja.

01:12:53.000 --> 01:12:54.000
Kobold.

01:13:15.000 --> 01:13:20.000
Wir sind gerade mit diesem Scheiß verbunden und es gibt immer neue Sachen.

01:13:45.000 --> 01:13:51.000
Und ich gehe mal ganz stark davon aus, dass du...

01:13:51.000 --> 01:13:54.000
Ich meine, du kannst ja nicht einfach das wegschmeißen, was da ist.

01:13:54.000 --> 01:13:57.000
Willst du jetzt einfach Linux wegschmeißen und neu entwickeln?

01:13:57.000 --> 01:14:02.000
Weil irgendjemand gesagt, der sich so denkt, okay, also C ist eigentlich...

01:14:02.000 --> 01:14:08.000
Sind wir so stuck mit C und wir nehmen jetzt super krasse neue Sprache und machen Linux

01:14:08.000 --> 01:14:09.000
neu in der.

01:14:09.000 --> 01:14:10.000
Das kannst du vergessen.

01:14:10.000 --> 01:14:12.000
Ich meine, das ist eine Arbeit von Jahrzehnten.

01:14:12.000 --> 01:14:14.000
Das wird es so ohne weiteres nicht geben.

01:14:14.000 --> 01:14:17.000
Ich meine, das unter Linux sind sie schon ein bisschen...

01:14:20.000 --> 01:14:21.000
Mache ich in zwei Streams.

01:14:21.000 --> 01:14:22.000
Easy.

01:14:22.000 --> 01:14:23.000
Ja.

01:14:23.000 --> 01:14:25.000
Ja, aber experimentell juckt doch im Endeffekt keinem.

01:14:25.000 --> 01:14:27.000
Es gibt sehr viele experimentelle Sachen.

01:14:27.000 --> 01:14:29.000
Tempel-OS zum Beispiel.

01:14:33.000 --> 01:14:34.000
Aber das benutzt ja dann keiner.

01:14:36.000 --> 01:14:42.000
Also die Idee, man müsste jetzt 20, 30 Jahre entwickeln.

01:14:42.000 --> 01:14:45.000
Linux gibt es ja 1993 oder irgendwie sowas.

01:14:46.000 --> 01:14:48.000
First Linux Version.

01:14:51.000 --> 01:14:53.000
30 Jahre gibt es den Kram jetzt schon.

01:14:54.000 --> 01:14:56.000
Das musst du ja nicht wegschmeißen.

01:14:58.000 --> 01:15:04.000
Ich bin der Ansicht, dass ein kompletter Rewrite oftmals nicht der richtige Ansatz ist.

01:15:06.000 --> 01:15:07.000
Man sollte allerdings nicht...

01:15:08.000 --> 01:15:12.000
Okay, also ein kompletter Rewrite finde ich selten einen guten Ansatz.

01:15:13.000 --> 01:15:16.000
Was ich aber manchmal nicht verkehrt finde, ist, dass man sagt,

01:15:16.000 --> 01:15:21.000
hey, alte Dinge, die eh kaum jemand benutzt, die kann man auch mal rausschmeißen.

01:15:30.000 --> 01:15:33.000
Das könnte C++ beispielsweise auch mal ruhig machen.

01:15:37.000 --> 01:15:42.000
Ja, irgendwann kommt GNU Hurt raus und dann wird alles besser.

01:16:08.000 --> 01:16:10.000
Haben wir ja schon halbwegs.

01:16:10.000 --> 01:16:13.000
Ich meine, wir haben sowas wie WebAssembly jetzt am Start,

01:16:13.000 --> 01:16:15.000
was keine eigene Sprache in dem Sinn ist.

01:16:15.000 --> 01:16:17.000
Ich weiß, man kann Low-Level WebAssembly machen,

01:16:17.000 --> 01:16:20.000
aber es gibt ja auch schon Sachen, die mehr oder weniger 1 zu 1

01:16:20.000 --> 01:16:22.000
sich zu WebAssembly translaten und sowas.

01:16:22.000 --> 01:16:25.000
Wir haben ja mit WebAssembly was in der Richtung,

01:16:25.000 --> 01:16:30.000
nur, dass WebAssembly nicht dafür gedacht ist, Webseiten zu bauen,

01:16:30.000 --> 01:16:32.000
obwohl es im Browser läuft.

01:16:33.000 --> 01:16:35.000
Das ist halt der Unterschied zu JavaScript.

01:16:35.000 --> 01:16:38.000
JavaScript ist dafür gedacht, Webseiten zu bauen

01:16:38.000 --> 01:16:40.000
beziehungsweise Webseiten interaktiv zu machen.

01:16:40.000 --> 01:16:45.000
WebAssembly ist dafür gedacht, eher im Hintergrund zu agieren

01:16:45.000 --> 01:16:50.000
und wenn es dann fertig ist, die Sachen nach JavaScript rüber zu schicken.

01:16:51.000 --> 01:16:55.000
Also zum Beispiel kannst du irgendeine C++-Lei,

01:16:55.000 --> 01:17:01.000
du kannst FFmpeg nehmen und in WebAssembly kompilieren

01:17:01.000 --> 01:17:03.000
und dann FFmpeg im Browser benutzen.

01:17:03.000 --> 01:17:08.000
Aber sobald FFmpeg ein Frame gerendert hat,

01:17:08.000 --> 01:17:10.000
muss es das übergeben nach JavaScript

01:17:10.000 --> 01:17:16.000
und JavaScript schiebt das dann in irgendein Canvas-Element,

01:17:16.000 --> 01:17:18.000
in ein HTML-Canvas-Element rein.

01:17:19.000 --> 01:17:22.000
Also wir haben ja quasi schon eine neue Sprache im Browser

01:17:22.000 --> 01:17:26.000
oder zumindest eine neue Runtime in der Runtime, wenn man es so will,

01:17:26.000 --> 01:17:28.000
mit WebAssembly die letzten Jahre über.

01:17:28.000 --> 01:17:31.000
Und das hat ja auch ziemlich Fahrt aufgenommen.

01:17:31.000 --> 01:17:36.000
Also WebAssembly-Entwicklung und auch an Technologien, was es dazu gibt,

01:17:36.000 --> 01:17:38.000
hat sich in den letzten Jahren über einiges getan.

01:17:38.000 --> 01:17:40.000
Und wisst ihr, was der Witz ist?

01:17:40.000 --> 01:17:46.000
Dass tatsächlich C++ für WebAssembly in der Tat eines der besten Sprachen ist.

01:17:46.000 --> 01:17:49.000
Rust ist auch nice, aber C++, muss ich ehrlich sagen,

01:17:49.000 --> 01:17:52.000
ist so eines der Punkte,

01:17:56.000 --> 01:17:59.000
C++ und WebAssembly passen tatsächlich ganz gut zusammen.

01:18:02.000 --> 01:18:06.000
Dass ich das doch mal sage, aber in dem Fall ist so.

01:18:06.000 --> 01:18:10.000
Wir haben ja auch schon im Stream ein bisschen C++ WebAssembly gemacht mit FFmpeg

01:18:10.000 --> 01:18:17.000
und neben den üblichen C++-Merkwürdigkeiten ging das erstaunlich gut

01:18:17.000 --> 01:18:20.000
und es ging erstaunlich viel auf Anhieb.

01:18:20.000 --> 01:18:23.000
Ich meine, wir haben einen Videoplayer gebaut in C++,

01:18:26.000 --> 01:18:29.000
der in WebAssembly im Browser gelaufen ist

01:18:31.000 --> 01:18:34.000
und Rames gerendert hat, an JavaScript übergeben hat

01:18:34.000 --> 01:18:36.000
und JavaScript hat es dann gerendert.

01:18:38.000 --> 01:18:40.000
Kannst du WebAssembly ein bisschen erklären?

01:18:40.000 --> 01:18:42.000
WebAssembly ist eine extra Runtime im Browser,

01:18:42.000 --> 01:18:45.000
also quasi eine Runtime in der Runtime,

01:18:45.000 --> 01:18:49.000
die nicht dafür gedacht ist, dass du sie selbst benutzt,

01:18:49.000 --> 01:18:52.000
also dass du quasi WebAssembly von Hand programmierst,

01:18:52.000 --> 01:18:55.000
sondern dass du andere Programmiersprachen nimmst

01:18:55.000 --> 01:18:57.000
und die kompilierst du dann in WebAssembly.

01:18:57.000 --> 01:19:00.000
Also zum Beispiel, du hast ein C++-Programm.

01:19:00.000 --> 01:19:05.000
Das kannst du kompilieren, entweder in Native-Code für ARM-Plattformen,

01:19:05.000 --> 01:19:10.000
in Native-Code für x86-CPUs oder was weiß ich, für iOS oder sonst was.

01:19:10.000 --> 01:19:13.000
Du nimmst dann C++-Source-Code,

01:19:13.000 --> 01:19:15.000
kompilierst das für irgendeine Target-Plattform

01:19:15.000 --> 01:19:19.000
und WebAssembly ist halt eines dieser Targets.

01:19:19.000 --> 01:19:22.000
WebAssembly ist quasi so eine Art Runtime,

01:19:22.000 --> 01:19:30.000
so eine Art JDK im Browser.

01:19:30.000 --> 01:19:33.000
Nee, nicht wirklich. Das trifft es vielleicht nicht so genau.

01:19:33.000 --> 01:19:36.000
JVM im Browser.

01:19:36.000 --> 01:19:43.000
Das ist eine Runtime, die du als Compiler-Target benutzen kannst.

01:19:43.000 --> 01:19:47.000
Du kannst dein C++-Programm kompilieren in WebAssembly

01:19:47.000 --> 01:19:52.000
und da kommt dann irgendwelches Binary-Geschwurbel raus,

01:19:52.000 --> 01:19:55.000
was die WebAssembly-Runtime im Browser versteht

01:19:55.000 --> 01:19:57.000
und dass du es ausführen kannst.

01:19:57.000 --> 01:20:01.000
Du kannst beispielsweise ein Hello-World-Programm in C++ programmieren

01:20:01.000 --> 01:20:06.000
und dann nimmst du einen C++ zu WebAssembly-Compiler.

01:20:06.000 --> 01:20:10.000
Da gibt es zum Beispiel das Ding.

01:20:10.000 --> 01:20:19.000
Das ist ein C++ zu WebAssembly-Compiler

01:20:19.000 --> 01:20:22.000
und dann nimmst du dein Hello-World-C++,

01:20:22.000 --> 01:20:26.000
schmeißt es da rein und rauskommt Binary-Code,

01:20:26.000 --> 01:20:30.000
was die WebAssembly-Runtime im Browser ausführen kann.

01:20:30.000 --> 01:20:34.000
Man muss dazu sagen, WebAssembly ist sehr stark reglementiert,

01:20:34.000 --> 01:20:36.000
was es darf und was es nicht darf.

01:20:36.000 --> 01:20:38.000
Es läuft nach wie vor in der Sandbox.

01:20:38.000 --> 01:20:40.000
Du kannst nicht einfach auf die Platte zugreifen oder sowas.

01:20:40.000 --> 01:20:42.000
Ist ja klar, es ist immer noch ein Browser

01:20:42.000 --> 01:20:45.000
und es ist immer noch fremder Code, der zum größten Teil ausgeführt wird.

01:20:45.000 --> 01:20:50.000
Allerdings kann WebAssembly auch nicht mit der Webseite interagieren,

01:20:50.000 --> 01:20:52.000
in dessen Kontext das vielleicht läuft,

01:20:52.000 --> 01:20:56.000
sondern WebAssembly ist mehr so eine Art Background-Thread,

01:20:56.000 --> 01:20:58.000
könnte man sagen.

01:20:58.000 --> 01:21:03.000
So ein eigener Prozess, eine eigene Runtime, die im Browser läuft

01:21:03.000 --> 01:21:07.000
und wenn die irgendwas an In- und Output braucht,

01:21:07.000 --> 01:21:09.000
dann muss das über Javascript passieren.

01:21:14.000 --> 01:21:16.000
Ne, das ist wieder was anderes.

01:21:17.000 --> 01:21:21.000
Also zum Beispiel, wenn du einen FFmpeg-Videoplayer machen willst.

01:21:21.000 --> 01:21:24.000
So, FFmpeg selbst ist eine C-Library.

01:21:26.000 --> 01:21:28.000
Und im Angenommen, du willst einen Videoplayer machen,

01:21:28.000 --> 01:21:30.000
ich nehme das als Beispiel absichtlich,

01:21:30.000 --> 01:21:32.000
weil das haben wir im Streamer gemacht.

01:21:32.000 --> 01:21:34.000
Also im Angenommen, du willst einen Videoplayer machen,

01:21:34.000 --> 01:21:36.000
der Formate abspielen kann,

01:21:36.000 --> 01:21:39.000
aber die der Browser standardmäßig nicht unterstützt.

01:21:39.000 --> 01:21:41.000
Das heißt, du musst das Video runterladen,

01:21:41.000 --> 01:21:44.000
du musst in FFmpeg die Videoframes einlesen,

01:21:44.000 --> 01:21:48.000
du musst in FFmpeg die Videoframes decoden als RGB

01:21:48.000 --> 01:21:51.000
und dann diesen RGB-Frame in die Webseite,

01:21:51.000 --> 01:21:53.000
in irgendein Canvas-Element rendern

01:21:53.000 --> 01:21:57.000
oder mit WebGL in irgendein 2D-Kontext rendern.

01:21:57.000 --> 01:22:00.000
Genau das gleiche haben wir gemacht und das lief folgendermaßen.

01:22:00.000 --> 01:22:04.000
Javascript ging her, hat angefangen das Video runterzuladen.

01:22:05.000 --> 01:22:15.000
Alle Megabyte, also das Megabyte, was runtergeladen wurde in Javascript,

01:22:15.000 --> 01:22:20.000
wurde über einen Funktionsaufruf zu WebAssembly

01:22:20.000 --> 01:22:27.000
quasi rübergeschickt als Byte-Array in die WebAssembly-Runtime.

01:22:27.000 --> 01:22:30.000
Also du musstest vorher erstmal das Ganze initialisieren

01:22:30.000 --> 01:22:33.000
und sowas, dass dann FFmpeg läuft und alles mögliche.

01:22:33.000 --> 01:22:36.000
Du hattest dann halt dort was gestartet,

01:22:36.000 --> 01:22:38.000
was darauf wartet, dass es Input bekommt.

01:22:38.000 --> 01:22:45.000
Dein FFmpeg, was du quasi kompiliert hast zu WebAssembly,

01:22:45.000 --> 01:22:48.000
das hast du gestartet, das wartete dann auf Input,

01:22:48.000 --> 01:22:53.000
das wurde dann von Javascript ausgefüttert mit Raw Video Bytes,

01:22:53.000 --> 01:22:55.000
die Javascript im Hintergrund runtergeladen hat.

01:22:55.000 --> 01:22:58.000
Dann ging das Ganze in FFmpeg rein.

01:22:58.000 --> 01:23:01.000
FFmpeg hat die Sachen decoded,

01:23:01.000 --> 01:23:05.000
beispielsweise MPEG-2 oder sowas, das kann ja ein Browser nicht abspielen.

01:23:05.000 --> 01:23:08.000
MPEG-2, Sachen hast du runtergeladen über Javascript,

01:23:08.000 --> 01:23:12.000
reingepackt in WebAssembly, FFmpeg hat das decoded

01:23:12.000 --> 01:23:14.000
und sobald FFmpeg ein Frame decoded hatte,

01:23:14.000 --> 01:23:18.000
gab es ein Callback zurück in Javascript.

01:23:18.000 --> 01:23:22.000
Es wurden die Bytes, die decodeten Bytes als RGB, glaube ich,

01:23:22.000 --> 01:23:27.000
oder wahrscheinlich als RGB-Frame, wurden übergeben an Javascript.

01:23:27.000 --> 01:23:29.000
Javascript hat das Ganze genommen

01:23:29.000 --> 01:23:34.000
und dann in einen WebGL-Kontext gerendert für einen Videoplayer.

01:23:34.000 --> 01:23:38.000
Und so haben wir im Stream, ich kann euch das auch mal zeigen,

01:23:38.000 --> 01:23:45.000
Archive, WebAssembly,

01:23:45.000 --> 01:23:50.000
okay, man braucht komplette Wörter anscheinend,

01:23:50.000 --> 01:23:53.000
ja, guck mal, ist 12 Monate her.

01:23:53.000 --> 01:23:57.000
So, und da haben wir einen Videoplayer gebaut, guckt euch das mal an.

01:23:58.000 --> 01:24:02.000
Ja, wir haben einen Videoplayer gebaut, ihr seht es hier irgendwo, guck,

01:24:02.000 --> 01:24:04.000
das ist ein Videoplayer.

01:24:04.000 --> 01:24:07.000
Ich habe ein Video runtergeladen in einem Dateiformat,

01:24:07.000 --> 01:24:11.000
das der Browser normalerweise nicht abspielen kann.

01:24:11.000 --> 01:24:14.000
Javascript lädt im Hintergrund das Video runter, guck,

01:24:14.000 --> 01:24:20.000
das wird TS-Video, also MPEG-2-Video, das kann das Ganze nicht.

01:24:20.000 --> 01:24:25.000
Und wir haben das, guck hier, das wird hier runtergeladen.

01:24:25.000 --> 01:24:28.000
Javascript lädt das Video runter, schickt es an WebAssembly,

01:24:28.000 --> 01:24:32.000
in WebAssembly ist hier C++, irgendwo, wo haben wir es, hier oben,

01:24:32.000 --> 01:24:37.000
ja, hier, da, in der Teil, C++ zu WebAssembly,

01:24:37.000 --> 01:24:41.000
decoded das Video und schickt es dann an einen WebGL-Kontext

01:24:41.000 --> 01:24:43.000
zum Rendern für das Video.

01:24:43.000 --> 01:24:45.000
Das war extremer 5-Fact-Shit.

01:24:45.000 --> 01:24:48.000
Wir haben, glaube ich, 10 Stunden oder so daran rumgebaut insgesamt,

01:24:48.000 --> 01:24:50.000
bis das funktioniert hat.

01:24:50.000 --> 01:24:52.000
Aber ihr seht, wir haben hier einen Videoplayer,

01:24:52.000 --> 01:24:54.000
der wirklich auch sehr performant lief,

01:24:54.000 --> 01:24:56.000
dass es einfach im Browser ist.

01:24:56.000 --> 01:24:58.000
Wir haben dort, glaube ich, 4K-Videos,

01:24:58.000 --> 01:25:01.000
4K-60fps-Videos haben wir gerendert,

01:25:01.000 --> 01:25:07.000
und die liefen mit ungefähr Hälfte der Geschwindigkeit.

01:25:07.000 --> 01:25:10.000
Also man konnte damals auf dem alten Rechner bei mir,

01:25:10.000 --> 01:25:12.000
also das ist auch sehr performant, muss man sagen,

01:25:12.000 --> 01:25:15.000
man konnte damals bei mir auf dem alten Rechner

01:25:15.000 --> 01:25:20.000
ein 1080p-Video 60fps ruckelfrei abspielen im Browser,

01:25:20.000 --> 01:25:22.000
hat natürlich ordentlich CPU gefressen,

01:25:22.000 --> 01:25:25.000
in einem Videoformat, das der Browser normalerweise nicht unterstützt.

01:25:25.000 --> 01:25:28.000
Also WebAssembly, FFmpeg hat das Ganze decoded,

01:25:28.000 --> 01:25:32.000
und dann wurde es per WebGL gerendert.

01:25:32.000 --> 01:25:37.000
Das ist, wie gesagt, echt nicht ohne gewesen.

01:25:37.000 --> 01:25:40.000
Man sieht auch, dass es teilweise ein paar kleine Slowdowns drin hat und sowas.

01:25:40.000 --> 01:25:42.000
Das ist echt nicht ohne gewesen,

01:25:42.000 --> 01:25:47.000
aber es hat gut funktioniert, verhältnismäßig gut.

01:25:47.000 --> 01:25:49.000
Und dafür ist das einfach geil.

01:25:50.000 --> 01:25:52.000
Wenn du dir überlegst,

01:25:52.000 --> 01:25:55.000
wie willst du ordentliches Videodecoding machen im Browser?

01:25:55.000 --> 01:25:56.000
Gar nicht.

01:25:56.000 --> 01:26:01.000
Es gibt kein JavaScript-Gegenstück zu FFmpeg.

01:26:01.000 --> 01:26:03.000
Hat noch keiner gebaut.

01:26:03.000 --> 01:26:05.000
Wird wahrscheinlich auch keiner bauen.

01:26:05.000 --> 01:26:07.000
Also was ist das naheliegendste?

01:26:07.000 --> 01:26:11.000
Du nimmst FFmpeg selbst und übersetzt das in irgendein Format,

01:26:11.000 --> 01:26:13.000
was dein Browser versteht.

01:26:13.000 --> 01:26:16.000
Und das bietet sich WebAssembly halt an,

01:26:16.000 --> 01:26:18.000
weil WebAssembly explizit dafür gedacht ist,

01:26:18.000 --> 01:26:22.000
quasi als Compiler-Target zu fungieren.

01:26:22.000 --> 01:26:26.000
Also du kannst deine C++-Programme, Rust-Programme übersetzen

01:26:26.000 --> 01:26:28.000
und den WebAssembly dann im Browser laufen lassen.

01:26:28.000 --> 01:26:30.000
Aber wie gesagt, es ist sehr stark reglementiert.

01:26:30.000 --> 01:26:32.000
Du kannst damit nicht so ohne weiteres

01:26:32.000 --> 01:26:34.000
direkt aus WebAssembly mit Webseiten interagieren.

01:26:34.000 --> 01:26:36.000
Ja, und WebGL ist wieder was anderes.

01:26:36.000 --> 01:26:38.000
WebGL ist zum Rendern für,

01:26:38.000 --> 01:26:43.000
sagen wir mal, wenn du was GPU-beschleunigt rendern willst.

01:26:44.000 --> 01:26:46.000
Das war richtig high-IQ-Shit.

01:26:46.000 --> 01:26:48.000
Ich glaube, das war eines der kompliziertesten Sachen,

01:26:48.000 --> 01:26:50.000
die wir je im Stream gemacht haben,

01:26:50.000 --> 01:26:52.000
den WebAssembly-Videoplayer.

01:26:54.000 --> 01:26:56.000
Wo sind wir jetzt eigentlich stehen geblieben?

01:27:01.000 --> 01:27:03.000
Ach nee, das Video war fertig, gell?

01:27:03.000 --> 01:27:05.000
Wir sind gar nicht stehen geblieben.

01:27:09.000 --> 01:27:11.000
So, next.

01:27:12.000 --> 01:27:14.000
Jetzt habe ich gleich instant 40 Leute verschreckt.

01:27:14.000 --> 01:27:16.000
Wir hatten knapp über 200,

01:27:16.000 --> 01:27:18.000
jetzt haben wir 187.

01:27:22.000 --> 01:27:24.000
Okay, was haben wir denn sonst noch?

01:27:25.000 --> 01:27:27.000
Wollen wir uns das mal angucken.

01:27:27.000 --> 01:27:29.000
Ich mecker jetzt mal ein bisschen über das Video.

01:27:29.000 --> 01:27:31.000
Ihr wisst, ich bin manchmal viel zu kleinlich,

01:27:31.000 --> 01:27:33.000
was solche Technik-Videos angeht.

01:27:33.000 --> 01:27:35.000
Und ich gehe davon aus, hier ist einiges vereinfacht,

01:27:35.000 --> 01:27:37.000
weil das eben ein Video ist,

01:27:37.000 --> 01:27:39.000
was sich an alle richtet

01:27:39.000 --> 01:27:41.000
und nicht Leute, die ein bisschen Netzwerkahnung haben

01:27:41.000 --> 01:27:43.000
oder ein bisschen Ahnung von

01:27:45.000 --> 01:27:47.000
Netzwerkprotokollen und sowas.

01:27:47.000 --> 01:27:49.000
Wir gucken uns das mal an.

01:27:49.000 --> 01:27:51.000
Ich mecke aber sowas immer gerne.

01:27:51.000 --> 01:27:53.000
Also mal gucken.

01:27:59.000 --> 01:28:01.000
Das kann an vielen Sachen liegen.

01:28:01.000 --> 01:28:03.000
In modernen Games

01:28:03.000 --> 01:28:05.000
oftmals hauptsächlich

01:28:05.000 --> 01:28:07.000
Kleinzeit-Hit-Detection.

01:28:07.000 --> 01:28:09.000
Natürlich kann das auch an ganz anderen Sachen liegen.

01:28:09.000 --> 01:28:11.000
Aber bei modernen Games

01:28:11.000 --> 01:28:13.000
wahrscheinlich eher Kleinzeit-Hit-Detection.

01:28:17.000 --> 01:28:19.000
Nicht zwangsläufig.

01:28:19.000 --> 01:28:21.000
Okay, wenn ich in dem Tempo weitermache,

01:28:21.000 --> 01:28:23.000
dann kommen wir durch das Video nie durch.

01:28:25.000 --> 01:28:27.000
Lag bedeutet eigentlich in der Regel eher

01:28:29.000 --> 01:28:31.000
entweder Server-Side-Lag

01:28:31.000 --> 01:28:33.000
und damit ist eigentlich in der Regel gemeint,

01:28:33.000 --> 01:28:35.000
wenn man von Lag spricht,

01:28:35.000 --> 01:28:37.000
das Server ist schlicht und ergreifend

01:28:37.000 --> 01:28:39.000
überlastet und kann nicht alles verarbeiten

01:28:39.000 --> 01:28:41.000
und muss Sachen droppen

01:28:41.000 --> 01:28:43.000
oder kann es nur langsamer verarbeiten

01:28:43.000 --> 01:28:45.000
und irgendwelche Queues laufen voll

01:28:45.000 --> 01:28:47.000
oder aber

01:28:47.000 --> 01:28:49.000
Paketverlust.

01:28:49.000 --> 01:28:51.000
Also Sachen werden nicht abgearbeitet.

01:28:51.000 --> 01:28:53.000
Das ist eigentlich in der Regel Lag

01:28:53.000 --> 01:28:55.000
oder halt nur verzögert.

01:28:55.000 --> 01:28:57.000
Du wirst um die Ecke getroffen,

01:28:57.000 --> 01:28:59.000
ist nicht zwangsläufig Lag,

01:28:59.000 --> 01:29:01.000
sondern eher

01:29:01.000 --> 01:29:03.000
Kleinzeit-Hit-Detection

01:29:03.000 --> 01:29:05.000
mit sehr großzügig

01:29:05.000 --> 01:29:07.000
eingebauten Zeitfenstern,

01:29:07.000 --> 01:29:09.000
wie das noch bearbeitet wird.

01:29:11.000 --> 01:29:13.000
Früher hattest du das Problem nicht.

01:29:13.000 --> 01:29:15.000
Da war alles serverseitig.

01:29:15.000 --> 01:29:17.000
Das Problem war nur,

01:29:17.000 --> 01:29:19.000
dass du halt

01:29:19.000 --> 01:29:21.000
das oftmals schlecht spielen konntest,

01:29:21.000 --> 01:29:23.000
weil du halt

01:29:23.000 --> 01:29:25.000
nicht dorthin geschossen hast, wo du hingeschossen hast,

01:29:25.000 --> 01:29:27.000
weil es auf dem Server woanders war

01:29:27.000 --> 01:29:29.000
beziehungsweise auch

01:29:29.000 --> 01:29:31.000
du dann mit einem Ping von 150

01:29:31.000 --> 01:29:33.000
halt echt gelitten hast

01:29:33.000 --> 01:29:35.000
gegen einen mit einem Ping von 20, wo ich ja

01:29:35.000 --> 01:29:37.000
persönlich der Meinung bin, das sollte auch

01:29:37.000 --> 01:29:39.000
so sein. Die Leute sollten

01:29:39.000 --> 01:29:41.000
schlicht und ergreifend einfach auf dem Server bei ihnen in der Nähe

01:29:41.000 --> 01:29:43.000
spielen. Kann ja nicht sein,

01:29:43.000 --> 01:29:45.000
dass du

01:29:45.000 --> 01:29:47.000
gegen Leute

01:29:47.000 --> 01:29:49.000
spielen musst mit einem Dran oder Ping teilweise.

01:29:49.000 --> 01:29:51.000
Das haben sie in Overwatch ganz gut

01:29:51.000 --> 01:29:53.000
gelöst. In Overwatch haben sie es glaube ich

01:29:53.000 --> 01:29:55.000
bei 100 Millisekunden gecappt.

01:29:55.000 --> 01:29:57.000
Also der Server erlaubt nur noch Sachen,

01:29:57.000 --> 01:29:59.000
die 100 Millisekunden zurückliegen

01:29:59.000 --> 01:30:01.000
als Hits, obwohl das bei ihm

01:30:01.000 --> 01:30:03.000
ein kleinseitiger Hit gewesen ist.

01:30:03.000 --> 01:30:05.000
Ich muss auch ehrlich sagen, im Nachhinein betrachte,

01:30:05.000 --> 01:30:07.000
ich hab ja wirklich ganz ganz lange Overwatch gegrindet,

01:30:07.000 --> 01:30:09.000
ich muss sagen,

01:30:09.000 --> 01:30:11.000
netzwerktechnisch finde ich

01:30:11.000 --> 01:30:13.000
Overwatch eines der besten Games,

01:30:13.000 --> 01:30:15.000
Multiplayer Games, die es je gegeben hat.

01:30:15.000 --> 01:30:17.000
Also mir fällt kein Game ein

01:30:17.000 --> 01:30:19.000
in der Geschwindigkeit

01:30:19.000 --> 01:30:21.000
und in der Genauigkeit

01:30:21.000 --> 01:30:23.000
und wie selten dort

01:30:23.000 --> 01:30:25.000
Bullshit passiert. Klar, du hast

01:30:25.000 --> 01:30:27.000
in Overwatch auch die üblichen Verdächtigen.

01:30:27.000 --> 01:30:29.000
Du schießt mit McCree

01:30:29.000 --> 01:30:31.000
direkt durch den Kopf von irgendeinem Typ durch, aber

01:30:31.000 --> 01:30:33.000
das passiert

01:30:33.000 --> 01:30:35.000
verhältnismäßig

01:30:35.000 --> 01:30:37.000
selten.

01:30:37.000 --> 01:30:39.000
Also,

01:30:39.000 --> 01:30:41.000
ich muss sagen,

01:30:41.000 --> 01:30:43.000
Overwatch netzwerktechnisch ist

01:30:43.000 --> 01:30:45.000
eines der besten, technisch

01:30:45.000 --> 01:30:47.000
saubersten Sachen, die ich je gesehen habe,

01:30:47.000 --> 01:30:49.000
Multiplayer Gaming mäßig.

01:30:49.000 --> 01:30:51.000
Es schließt man oft Türen hinter sich

01:30:51.000 --> 01:30:53.000
und wird trotzdem noch verzögert getroffen.

01:30:53.000 --> 01:30:55.000
Unglaublich mühsam und unverständlich

01:30:55.000 --> 01:30:57.000
wie das... Auch nicht CSGO.

01:30:57.000 --> 01:30:59.000
Also ohne Scheiß, Overwatch ist

01:30:59.000 --> 01:31:01.000
mit das Beste, was ich... Gut, ich muss sagen,

01:31:01.000 --> 01:31:03.000
ich hab CSGO, also auch CS...

01:31:03.000 --> 01:31:05.000
CS... CSGO 2

01:31:05.000 --> 01:31:07.000
hab ich noch nie angeguckt.

01:31:07.000 --> 01:31:09.000
Vielleicht, den haben die ja mittlerweile aufgeholt.

01:31:09.000 --> 01:31:11.000
Aber es hat sich noch kein Game

01:31:11.000 --> 01:31:13.000
so

01:31:13.000 --> 01:31:15.000
gut netzwerktechnisch für mich angefühlt

01:31:15.000 --> 01:31:17.000
und so sauber angefühlt wie

01:31:17.000 --> 01:31:19.000
Overwatch.

01:31:25.000 --> 01:31:27.000
Ja, hab ich.

01:31:31.000 --> 01:31:33.000
Naja, gut.

01:31:33.000 --> 01:31:35.000
Hundertprozentig kannst du's

01:31:35.000 --> 01:31:37.000
ja nicht wissen, weil du nicht weißt, wie das Spiel das

01:31:37.000 --> 01:31:39.000
handelt. Gut, es sei denn, du machst

01:31:39.000 --> 01:31:41.000
extrem krass detaillierte

01:31:41.000 --> 01:31:43.000
Analyse. Aber ja, ich hab mir da schon öfters

01:31:43.000 --> 01:31:45.000
Gedanken drüber gemacht, warum das so passiert.

01:31:45.000 --> 01:31:47.000
Ich hab da sogar schon für über 10 Jahren Videos

01:31:47.000 --> 01:31:49.000
zugemacht, dass die meisten Leute,

01:31:49.000 --> 01:31:51.000
die was von lag schreien, eigentlich gar nicht

01:31:51.000 --> 01:31:53.000
lag meinen.

01:31:53.000 --> 01:31:55.000
Du sitzt ja auch direkt in

01:31:55.000 --> 01:31:57.000
Frankfurt an der Quelle. Das stimmt wohl,

01:31:57.000 --> 01:31:59.000
in Battlefield 3, zu den Servern

01:31:59.000 --> 01:32:01.000
hatte ich teilweise einen Fünferping,

01:32:01.000 --> 01:32:03.000
wenn die Server in Frankfurt oder Köln standen.

01:32:03.000 --> 01:32:05.000
Fünferping ist auch schon nice,

01:32:05.000 --> 01:32:07.000
oder?

01:32:15.000 --> 01:32:17.000
Also ein bisschen höhere Bitrate

01:32:17.000 --> 01:32:19.000
für ihr Video hätten sie vielleicht nehmen können.

01:32:45.000 --> 01:32:47.000
Hm.

01:33:03.000 --> 01:33:05.000
Okay, wenigstens das ist schon mal richtig.

01:33:05.000 --> 01:33:07.000
Eigentlich ist die Erklärung bis jetzt

01:33:07.000 --> 01:33:09.000
echt nicht übel.

01:33:09.000 --> 01:33:11.000
Bis jetzt. Ich mecker gerne

01:33:11.000 --> 01:33:13.000
bei sowas, wisst ihr ja.

01:33:15.000 --> 01:33:17.000
Ja.

01:33:27.000 --> 01:33:29.000
Leute, ich hab mich grad, ich weiß nicht,

01:33:29.000 --> 01:33:31.000
ob es euch auch so geht.

01:33:31.000 --> 01:33:33.000
Ich hab mich bei diesem Bild

01:33:33.000 --> 01:33:35.000
grad ein wenig

01:33:35.000 --> 01:33:37.000
verguckt. Ich dachte,

01:33:37.000 --> 01:33:39.000
das hier ist der Kopf,

01:33:39.000 --> 01:33:41.000
das hier ist der Rücken

01:33:41.000 --> 01:33:43.000
und dann dachte ich mir so, okay, was ist...

01:33:43.000 --> 01:33:45.000
Okay, das ist der Bau, da dachte ich mir so,

01:33:45.000 --> 01:33:47.000
was ist das?

01:33:47.000 --> 01:33:49.000
Erkennt ihr das vielleicht, was ich gesehen habe?

01:33:51.000 --> 01:33:53.000
Yep.

01:33:55.000 --> 01:33:57.000
Moment.

01:33:57.000 --> 01:33:59.000
Aber ja, das ist ein Gesicht

01:33:59.000 --> 01:34:01.000
in der Richtung, dann ergibt das viel eher Sinn.

01:34:13.000 --> 01:34:15.000
Das soll, wisst ihr was?

01:34:15.000 --> 01:34:17.000
Dann soll Spieler 1 halt

01:34:17.000 --> 01:34:19.000
auf nem gescheiten Server in seiner Nähe spielen. Easy.

01:34:33.000 --> 01:34:35.000
Nö.

01:34:35.000 --> 01:34:37.000
Ist er nicht.

01:34:39.000 --> 01:34:41.000
Der ist vielleicht

01:34:41.000 --> 01:34:43.000
zum Teil dafür zuständig.

01:34:45.000 --> 01:34:47.000
Aber nicht für die ganze Route zum Server.

01:34:47.000 --> 01:34:49.000
Wahrscheinlich noch nicht mal für

01:34:49.000 --> 01:34:51.000
nen Drittel der Route zum Server.

01:34:53.000 --> 01:34:55.000
Was sein Internetprovider

01:34:55.000 --> 01:34:57.000
machen kann ist, dafür zu sorgen,

01:34:57.000 --> 01:34:59.000
und das ist das, wo die Telekom Richtung

01:34:59.000 --> 01:35:01.000
YouTube letzten Jahre über Probleme hat,

01:35:01.000 --> 01:35:03.000
was sein Internetprovider machen kann ist,

01:35:03.000 --> 01:35:05.000
dass er,

01:35:05.000 --> 01:35:07.000
okay, sagen wir es mal umgangssprachlich,

01:35:07.000 --> 01:35:09.000
genug Bandbreite hat,

01:35:11.000 --> 01:35:13.000
zu den Netzwerken,

01:35:13.000 --> 01:35:15.000
über die deine Pakete

01:35:15.000 --> 01:35:17.000
gehen müssen, dass da nix

01:35:17.000 --> 01:35:19.000
an die Grenze kommt. Da hatte

01:35:19.000 --> 01:35:21.000
die Telekom, und auch Vodafone,

01:35:21.000 --> 01:35:23.000
gerade am Anfang von Corona, könnt ihr euch noch dran

01:35:23.000 --> 01:35:25.000
erinnern, wo am Anfang von Corona

01:35:25.000 --> 01:35:27.000
die Standardwiedergabequalität

01:35:27.000 --> 01:35:29.000
bei YouTube standardmäßig auf 480p

01:35:29.000 --> 01:35:31.000
gesetzt wurde, wo die Provider Probleme hatten,

01:35:31.000 --> 01:35:33.000
weil auf einmal, huch, die Leute

01:35:33.000 --> 01:35:35.000
benutzen ja auch ihre Bandbreite daheim,

01:35:35.000 --> 01:35:37.000
diese Probleme hatten, und so

01:35:37.000 --> 01:35:39.000
nach dem Motto, Mist, jetzt benutzen die Leute

01:35:39.000 --> 01:35:41.000
Bandbreite für Videos, und die wollen

01:35:41.000 --> 01:35:43.000
Homeoffice arbeiten, fuck, Alter, das

01:35:43.000 --> 01:35:45.000
funktioniert ja nicht.

01:35:45.000 --> 01:35:47.000
Also die können quasi gucken, sagen wir es mal ganz billig,

01:35:47.000 --> 01:35:49.000
dass ihr Uplink ordentlich

01:35:49.000 --> 01:35:51.000
dimensioniert ist. Das ist natürlich nicht ganz

01:35:51.000 --> 01:35:53.000
richtig, weil es ist nicht nur ein Uplink, es sind

01:35:53.000 --> 01:35:55.000
mehrere, und ich hab so einen Peering

01:35:55.000 --> 01:35:57.000
schon mal live gesehen, ich hatte ja

01:35:57.000 --> 01:35:59.000
die Ehre, ich durfte ja schon mal,

01:35:59.000 --> 01:36:01.000
das hat doch YouTube

01:36:01.000 --> 01:36:03.000
gemacht und nicht der ESP, das ist richtig,

01:36:03.000 --> 01:36:05.000
das ist richtig, das hat nicht der, das, ja,

01:36:05.000 --> 01:36:07.000
das hat YouTube gemacht standardmäßig, aber es war

01:36:07.000 --> 01:36:09.000
aus diesem Grund, weil es

01:36:09.000 --> 01:36:11.000
Bandbreitenprobleme es fuck gegeben hat, und auch

01:36:11.000 --> 01:36:13.000
viele Leute nicht mehr richtig im Homeoffice arbeiten konnten.

01:36:13.000 --> 01:36:15.000
Das war wahrscheinlich was, was Hand

01:36:15.000 --> 01:36:17.000
in Hand ging, ja, das hat YouTube gemacht,

01:36:17.000 --> 01:36:19.000
aber das war nicht einfach

01:36:19.000 --> 01:36:21.000
nur, weil YouTube sich

01:36:21.000 --> 01:36:23.000
gedacht hat, oh ja, heute wär's mal ein schöner

01:36:23.000 --> 01:36:25.000
Tag, die Qualität auf 480p zu setzen.

01:36:25.000 --> 01:36:27.000
Das hatte externe Umstände, warum

01:36:27.000 --> 01:36:29.000
YouTube es ausgerechnet dann gemacht hat.

01:36:29.000 --> 01:36:31.000
Und die hatten ja auch Bandbreitenprobleme,

01:36:31.000 --> 01:36:33.000
und

01:36:33.000 --> 01:36:35.000
was wollte ich jetzt sagen?

01:36:35.000 --> 01:36:37.000
Ja, ich hatte, ich hatte ja

01:36:37.000 --> 01:36:39.000
das Glück, ein paar mal ins Dezix zu dürfen

01:36:39.000 --> 01:36:41.000
in Frankfurt, als ich noch beim Provider gearbeitet

01:36:41.000 --> 01:36:43.000
habe, und ich habe so Peering Links

01:36:43.000 --> 01:36:45.000
tatsächlich schon, Peering Ports

01:36:45.000 --> 01:36:47.000
tatsächlich schon gesehen. Das ist oftmals

01:36:47.000 --> 01:36:49.000
total unspektakulär.

01:36:49.000 --> 01:36:51.000
Wir hatten zum Beispiel ein Kabel, damals,

01:36:51.000 --> 01:36:53.000
weiß ich noch, haben wir neu gepatcht zu

01:36:53.000 --> 01:36:55.000
Freenet. Da ist man hingegangen,

01:36:55.000 --> 01:36:57.000
an seinen Rack im

01:36:57.000 --> 01:36:59.000
Dezix, hat ein Kabel

01:36:59.000 --> 01:37:01.000
genommen und an den Switch gesteckt,

01:37:01.000 --> 01:37:03.000
und in den passenden anderen

01:37:03.000 --> 01:37:05.000
Port reingesteckt.

01:37:05.000 --> 01:37:07.000
So, und der kam dann auf, was weiß ich,

01:37:07.000 --> 01:37:09.000
drei Racks weiter

01:37:09.000 --> 01:37:11.000
raus, bei irgendwas, was Freenet gemietet

01:37:11.000 --> 01:37:13.000
hat, das war glaube ich noch, bevor es

01:37:13.000 --> 01:37:15.000
alles United Internet war,

01:37:15.000 --> 01:37:17.000
und ging bei Freenet dann in den

01:37:17.000 --> 01:37:19.000
ihren Switch rein.

01:37:19.000 --> 01:37:21.000
So.

01:37:21.000 --> 01:37:23.000
So sah so ein Peering Link aus.

01:37:23.000 --> 01:37:25.000
Das sah äußerst unspektakulär aus.

01:37:25.000 --> 01:37:27.000
So, und da können natürlich,

01:37:27.000 --> 01:37:29.000
das ist das, was die Internet Provider

01:37:29.000 --> 01:37:31.000
machen können, die können natürlich

01:37:31.000 --> 01:37:33.000
gucken, dass sie

01:37:33.000 --> 01:37:35.000
ordentlich vernetzt sind

01:37:35.000 --> 01:37:37.000
mit anderen Providern, aber

01:37:37.000 --> 01:37:39.000
über die Route entscheiden

01:37:39.000 --> 01:37:41.000
die nur zum Teil.

01:37:41.000 --> 01:37:43.000
Weil, wenn das

01:37:43.000 --> 01:37:45.000
das Netz des Internet Providers verlässt,

01:37:45.000 --> 01:37:47.000
hat der Internet Provider da

01:37:47.000 --> 01:37:49.000
erstmal keinen großen Einfluss drauf,

01:37:49.000 --> 01:37:51.000
wohin das Ganze

01:37:51.000 --> 01:37:53.000
geht.

01:37:53.000 --> 01:37:55.000
Der kann nur sagen, hier, da,

01:37:55.000 --> 01:37:57.000
Exit-Router, was weiß ich,

01:37:57.000 --> 01:37:59.000
nächstes, nächstes Target

01:37:59.000 --> 01:38:01.000
ist autonomes

01:38:01.000 --> 01:38:03.000
Netz 573,

01:38:03.000 --> 01:38:05.000
und da geht's

01:38:05.000 --> 01:38:07.000
jetzt hin. So, zack, bumm, dann ist

01:38:07.000 --> 01:38:09.000
das da, und dann entscheidet der Nächste, wie er es

01:38:09.000 --> 01:38:11.000
weiter routet. Okay, wir brauchen aber viel zu lang

01:38:11.000 --> 01:38:13.000
für. Also, wie gesagt,

01:38:13.000 --> 01:38:15.000
das stimmt nicht, der Provider ist nicht für

01:38:15.000 --> 01:38:17.000
die Route zum Ziel verantwortlich. Zum Teil,

01:38:17.000 --> 01:38:19.000
aber bei weitem nicht für die ganze Route.

01:38:19.000 --> 01:38:21.000
Wenn hier eine gute Route

01:38:21.000 --> 01:38:23.000
gewählt wird, mit möglichst wenigen...

01:38:23.000 --> 01:38:25.000
Das ist ja auch der Grund, warum so Sachen wie

01:38:25.000 --> 01:38:27.000
Gaming-VPNs teilweise

01:38:27.000 --> 01:38:29.000
was bringen können, wenn

01:38:29.000 --> 01:38:31.000
der Provider euch über

01:38:31.000 --> 01:38:33.000
Sibirien routet.

01:38:33.000 --> 01:38:35.000
Also,

01:38:35.000 --> 01:38:37.000
es gibt ja Gaming-VPN-Anbieter, die haben

01:38:37.000 --> 01:38:39.000
halt ein paar Server weltweit verteilt,

01:38:39.000 --> 01:38:41.000
und das muss nicht

01:38:41.000 --> 01:38:43.000
immer gut sein. Also, zum Beispiel, wenn ich von

01:38:43.000 --> 01:38:45.000
hier zu einem Server in Köln oder von hier zu einem Server

01:38:45.000 --> 01:38:47.000
in Frankfurt gehe, dann werde ich

01:38:47.000 --> 01:38:49.000
höchstwahrscheinlich hier in mein Provider-Netz

01:38:49.000 --> 01:38:51.000
und in meinem Provider-Netz in Frankfurt auch wieder rauskommen.

01:38:51.000 --> 01:38:53.000
Aber wenn das ein bisschen

01:38:53.000 --> 01:38:55.000
weiter weg ist, wenn ich jetzt beispielsweise

01:38:55.000 --> 01:38:57.000
irgendwelche koreanischen MMOs in

01:38:57.000 --> 01:38:59.000
Korea spiele, oder auf dem

01:38:59.000 --> 01:39:01.000
asiatischen Server,

01:39:01.000 --> 01:39:03.000
dann ist mein Provider

01:39:03.000 --> 01:39:05.000
nicht dafür zuständig, das Paket von

01:39:05.000 --> 01:39:07.000
mir dorthin zu bringen, zumindest nicht die ganze

01:39:07.000 --> 01:39:09.000
Strecke. Und da können Gaming-VPN-

01:39:09.000 --> 01:39:11.000
Anbieter was bringen, weil,

01:39:11.000 --> 01:39:13.000
mal angenommen, ich werde wirklich mega beschissen geroutet,

01:39:13.000 --> 01:39:15.000
ja, keine Ahnung, ich werde von hier

01:39:15.000 --> 01:39:17.000
nach New York und von New York dann

01:39:17.000 --> 01:39:19.000
wieder zurück nach Russland und von Russland

01:39:19.000 --> 01:39:21.000
über China dann nach Südkorea, so, was auch

01:39:21.000 --> 01:39:23.000
immer, ja, dann ist das natürlich eine ziemlich beschissene

01:39:23.000 --> 01:39:25.000
Route und dann habe ich einen Ping von 450

01:39:25.000 --> 01:39:27.000
oder sowas, oder von 500

01:39:27.000 --> 01:39:29.000
oder sowas, und das

01:39:29.000 --> 01:39:31.000
ist halt kacke.

01:39:31.000 --> 01:39:33.000
Und wenn ich einen Gaming-VPN-Anbieter benutze,

01:39:33.000 --> 01:39:35.000
dann kann das anders

01:39:35.000 --> 01:39:37.000
sein, dann gehe ich hier zum nächstgelegenen

01:39:37.000 --> 01:39:39.000
VPN-Endpunkt, der vielleicht

01:39:39.000 --> 01:39:41.000
in Frankfurt steht, und dann händle das

01:39:41.000 --> 01:39:43.000
Routing der Gaming-VPN-

01:39:43.000 --> 01:39:45.000
Anbieter über seine

01:39:45.000 --> 01:39:47.000
Server, die er quasi weltweit stehen hat.

01:39:47.000 --> 01:39:49.000
Das funktioniert,

01:39:49.000 --> 01:39:51.000
das können die machen.

01:39:51.000 --> 01:39:53.000
Das ist dann vielleicht eine etwas optimiertere

01:39:53.000 --> 01:39:55.000
Route zu dem asiatischen

01:39:55.000 --> 01:39:57.000
MMO-Server.

01:39:57.000 --> 01:39:59.000
Ja, aber so

01:39:59.000 --> 01:40:01.000
macht das ja mein Provider nicht. Mein Provider schickt das

01:40:01.000 --> 01:40:03.000
aus seinem Netz raus, und danach ist es ihm egal.

01:40:19.000 --> 01:40:21.000
Höheren Ping.

01:40:25.000 --> 01:40:27.000
Ja.

01:40:29.000 --> 01:40:31.000
Das stimmt.

01:40:33.000 --> 01:40:35.000
Richtig.

01:40:39.000 --> 01:40:41.000
Beim Gaming,

01:40:41.000 --> 01:40:43.000
beziehungsweise beim Server,

01:40:43.000 --> 01:40:45.000
nennt sich das Ganze einfach

01:40:45.000 --> 01:40:47.000
Packet-Loss. Und die meisten Games

01:40:47.000 --> 01:40:49.000
haben mittlerweile sogar

01:40:49.000 --> 01:40:51.000
ein eigenes Symbol, wenn das passiert.

01:40:51.000 --> 01:40:53.000
Dass solche Pakete am Weg verschwinden,

01:40:53.000 --> 01:40:55.000
liegt übrigens so gut wie nie

01:40:55.000 --> 01:40:57.000
am Spiel, beziehungsweise an deren...

01:40:57.000 --> 01:40:59.000
Das finde ich gut. Das finde ich

01:40:59.000 --> 01:41:01.000
wirklich gut, dass er das mal sagt.

01:41:01.000 --> 01:41:03.000
Die meisten Leute haben übelste Panik,

01:41:03.000 --> 01:41:05.000
dass bei ihnen daheim irgendwas schiefläuft,

01:41:05.000 --> 01:41:07.000
wenn Pakete verloren gehen. Und ich habe auch

01:41:07.000 --> 01:41:09.000
schon jahrelang in Videos immer wieder gesagt,

01:41:09.000 --> 01:41:11.000
Leute, macht euch ja nicht so viel Gedanken,

01:41:11.000 --> 01:41:13.000
höchstwahrscheinlich

01:41:13.000 --> 01:41:15.000
liegt das Problem nicht in

01:41:15.000 --> 01:41:17.000
euren eigenen vier Wänden.

01:41:19.000 --> 01:41:21.000
Und wisst ihr, was ich auch

01:41:21.000 --> 01:41:23.000
immer witzig finde?

01:41:23.000 --> 01:41:25.000
Wenn die Leute einen Traceroute machen,

01:41:25.000 --> 01:41:27.000
und sagen, oh, Packet-Loss!

01:41:27.000 --> 01:41:29.000
Traceroute! Ich seh's!

01:41:29.000 --> 01:41:31.000
Genau! Packet-Loss! Passt mal auf,

01:41:31.000 --> 01:41:33.000
wir machen jetzt mal was.

01:41:35.000 --> 01:41:37.000
Das ist immer extrem, extrem

01:41:37.000 --> 01:41:39.000
Cack-Wait-Moment.

01:41:45.000 --> 01:41:47.000
Ich leake keine IP bei Traceroute,

01:41:47.000 --> 01:41:49.000
weil man ja nicht meine Absender-IP sieht.

01:41:53.000 --> 01:41:55.000
Und selbst wenn, scheiß drauf.

01:41:55.000 --> 01:41:57.000
Aber ich zeige euch das jetzt mal.

01:41:57.000 --> 01:41:59.000
Ein Fehler, den

01:41:59.000 --> 01:42:01.000
viele Leute machen, wenn's um

01:42:01.000 --> 01:42:03.000
Traceroute, wenn's um Packet-Loss geht.

01:42:03.000 --> 01:42:05.000
So, passt mal auf.

01:42:05.000 --> 01:42:07.000
Wir geben jetzt Traceroute...

01:42:07.000 --> 01:42:09.000
Wie?

01:42:09.000 --> 01:42:11.000
Hab ich das nicht mal installiert?

01:42:11.000 --> 01:42:13.000
Pack-Wait...

01:42:13.000 --> 01:42:15.000
Traceroute...

01:42:15.000 --> 01:42:17.000
zu...

01:42:17.000 --> 01:42:19.000
ähm...

01:42:21.000 --> 01:42:23.000
Sagt mir mal irgendeine China-Seite.

01:42:23.000 --> 01:42:25.000
Was ist eine schöne

01:42:25.000 --> 01:42:27.000
China-Chinesen-Seite, Leute?

01:42:31.000 --> 01:42:33.000
Aber AliExpress

01:42:33.000 --> 01:42:35.000
ist doch bestimmt nicht nur in China. Die haben doch bestimmt

01:42:35.000 --> 01:42:37.000
mehrere Server weltweit. Okay.

01:42:37.000 --> 01:42:39.000
AliExpress.com. So.

01:42:39.000 --> 01:42:41.000
Okay.

01:42:41.000 --> 01:42:43.000
Hier haben wir das erste schon.

01:42:43.000 --> 01:42:45.000
So.

01:42:45.000 --> 01:42:47.000
Das hier ist mein Router.

01:42:47.000 --> 01:42:49.000
So viel ist das einfach.

01:42:49.000 --> 01:42:51.000
Das hier ist bei mir im Netz.

01:42:51.000 --> 01:42:53.000
Also, das ist mein Router.

01:42:53.000 --> 01:42:55.000
Und das hier ist wahrscheinlich

01:42:55.000 --> 01:42:57.000
mein

01:42:57.000 --> 01:42:59.000
Vodafone-DSL-Modem-Router-

01:42:59.000 --> 01:43:01.000
Kombi-Gerät, gehe ich mal von aus.

01:43:01.000 --> 01:43:03.000
Also, so viel ist es easy.

01:43:03.000 --> 01:43:05.000
Das ist noch alles bei mir lokal.

01:43:05.000 --> 01:43:07.000
Wir können's ja mal

01:43:07.000 --> 01:43:09.000
kurz fertig laufen lassen.

01:43:09.000 --> 01:43:11.000
Okay. So, das ist

01:43:11.000 --> 01:43:13.000
alles noch bei mir lokal. Easy.

01:43:13.000 --> 01:43:15.000
Der nächste Hop bei Unity Media

01:43:15.000 --> 01:43:17.000
kommen die Leute jetzt auf die Idee und sagen

01:43:17.000 --> 01:43:19.000
Aha! Hier! Hier! Packet-Loss!

01:43:19.000 --> 01:43:21.000
Packet-Loss! Das ist kein Packet-Loss,

01:43:21.000 --> 01:43:23.000
Leute. Ich mein,

01:43:23.000 --> 01:43:25.000
es kann ja schlicht und ergreifend auch

01:43:25.000 --> 01:43:27.000
kein Packet-Loss so wirklich sein,

01:43:27.000 --> 01:43:29.000
wenn der nächste Hop dann auf einmal funktioniert.

01:43:29.000 --> 01:43:31.000
Klar könnte man sagen, hier gab's einmal

01:43:31.000 --> 01:43:33.000
Packet-Loss, beim nächsten Paket ging's...

01:43:33.000 --> 01:43:35.000
Das ist aber Schwachsinn. Das ist nicht das...

01:43:35.000 --> 01:43:37.000
Guck mal, das Paket kommt ja angeblich auch nie an.

01:43:37.000 --> 01:43:39.000
Aber witzigerweise, wenn...

01:43:39.000 --> 01:43:41.000
Ups, was hab ich jetzt gemacht? Aber wenn ich...

01:43:41.000 --> 01:43:43.000
Alter!

01:43:43.000 --> 01:43:45.000
Ich hab zu viel

01:43:45.000 --> 01:43:47.000
Koffee gepastet. Aber wenn ich AliExpress

01:43:47.000 --> 01:43:49.000
pinge, dann funktioniert das Ganze. Wenn auch

01:43:49.000 --> 01:43:51.000
mit einem ziemlich... Okay.

01:43:51.000 --> 01:43:53.000
Das ist erstaunlich schnell.

01:43:53.000 --> 01:43:55.000
Also, man sieht schon irgendwie, das kann

01:43:55.000 --> 01:43:57.000
nicht so wirklich Packet-Loss sein an der Stelle.

01:43:57.000 --> 01:43:59.000
Und viele Leute gucken sich das dann an

01:43:59.000 --> 01:44:01.000
und denken sich, oh nein!

01:44:01.000 --> 01:44:03.000
Mon KS!

01:44:03.000 --> 01:44:05.000
Ich hab ja

01:44:05.000 --> 01:44:07.000
ganz schlechtes Internet, so viel

01:44:07.000 --> 01:44:09.000
Packet-Loss und so viel Geld verloren

01:44:09.000 --> 01:44:11.000
und eieiei, ganz schlimm.

01:44:11.000 --> 01:44:13.000
Das ist aber überhaupt nicht

01:44:13.000 --> 01:44:15.000
der Fall. Was man hier

01:44:15.000 --> 01:44:17.000
wirklich sieht, ist,

01:44:17.000 --> 01:44:19.000
welcher Zwischenschritt

01:44:19.000 --> 01:44:21.000
ICMP-Error-

01:44:21.000 --> 01:44:23.000
Packages

01:44:23.000 --> 01:44:25.000
verschickt, wenn das defaultmäßig

01:44:25.000 --> 01:44:27.000
noch... Ich geh mal davon aus, dass es standardmäßig noch

01:44:27.000 --> 01:44:29.000
auf ICMP...

01:44:29.000 --> 01:44:31.000
Dass es standardmäßig noch die ICMP-

01:44:31.000 --> 01:44:33.000
Variante benutzt,

01:44:33.000 --> 01:44:35.000
um Route festzustellen.

01:44:35.000 --> 01:44:37.000
Ne, was du hier siehst, ist,

01:44:37.000 --> 01:44:39.000
welche ICMP...

01:44:39.000 --> 01:44:41.000
Also, welche Knoten ICMP

01:44:41.000 --> 01:44:43.000
Packages

01:44:43.000 --> 01:44:45.000
oder Sachen antworten,

01:44:45.000 --> 01:44:47.000
Fehler zurückschicken.

01:44:47.000 --> 01:44:49.000
Weil das funktioniert folgendermaßen,

01:44:49.000 --> 01:44:51.000
so eine Traceroute.

01:44:51.000 --> 01:44:53.000
Es wird ein Paket-Loss geschickt,

01:44:53.000 --> 01:44:55.000
gibt's dann eine andere...

01:44:55.000 --> 01:44:57.000
Ja, du kannst doch irgendwelches...

01:44:57.000 --> 01:44:59.000
Irgendwelches...

01:45:03.000 --> 01:45:05.000
TCP-basiertes...

01:45:09.000 --> 01:45:11.000
Machen...

01:45:11.000 --> 01:45:13.000
Auch mit

01:45:13.000 --> 01:45:15.000
Time-to-Live und sowas, das geht irgendwie.

01:45:15.000 --> 01:45:17.000
Aber im Prinzip funktioniert es

01:45:17.000 --> 01:45:19.000
relativ easy.

01:45:19.000 --> 01:45:21.000
Es wird ein Paket-Loss geschickt, mit

01:45:21.000 --> 01:45:23.000
einer Time-to-Live von 1.

01:45:23.000 --> 01:45:25.000
Time-to-Live von 1

01:45:25.000 --> 01:45:27.000
bedeutet... Also es wird immer ein Paket-Loss geschickt

01:45:27.000 --> 01:45:29.000
hier zu diesem Ziel.

01:45:29.000 --> 01:45:31.000
Time-to-Live von 1. Time-to-Live ist ein Feld,

01:45:31.000 --> 01:45:33.000
ist ein Header-Feld.

01:45:33.000 --> 01:45:35.000
Fragt mich jetzt bitte nicht genau,

01:45:35.000 --> 01:45:37.000
ich glaube, im IP-Header...

01:45:37.000 --> 01:45:39.000
Glaube ich.

01:45:41.000 --> 01:45:43.000
TTL.

01:45:43.000 --> 01:45:45.000
Bin ich mir aus dem Kopf nicht so... Wahrscheinlich.

01:45:45.000 --> 01:45:47.000
IP-Header gibt den größten Sinn.

01:45:47.000 --> 01:45:49.000
Du hast im Header

01:45:49.000 --> 01:45:51.000
ein Time-to-Live-Feld. Und was passiert ist,

01:45:51.000 --> 01:45:53.000
jedes Mal, wenn dieses

01:45:53.000 --> 01:45:55.000
Paket von einem Router weitergeschickt

01:45:55.000 --> 01:45:57.000
wird, wird die Time-to-Live

01:45:57.000 --> 01:45:59.000
1 abgezogen.

01:45:59.000 --> 01:46:01.000
Und wenn die Time-to-Live bei 0 angekommen ist,

01:46:01.000 --> 01:46:03.000
schickt der Router

01:46:03.000 --> 01:46:05.000
auf dem das... Also das Paket wird dann verworfen.

01:46:05.000 --> 01:46:07.000
Time-to-Live 0.

01:46:07.000 --> 01:46:09.000
Chat, wer ist high IQ? Wer weiß, warum man

01:46:09.000 --> 01:46:11.000
eine Time-to-Live-Setting überhaupt hat?

01:46:11.000 --> 01:46:13.000
Woran könnte das liegen?

01:46:13.000 --> 01:46:15.000
Für alle, die es nicht wissen, können sich das Emote angucken.

01:46:15.000 --> 01:46:17.000
Also eines der Gründe,

01:46:17.000 --> 01:46:19.000
warum es sinnvoll ist, eine Time-to-Live in einem Paket

01:46:19.000 --> 01:46:21.000
zu haben. Schleifen. Richtig. Genau.

01:46:21.000 --> 01:46:23.000
Dass, falls aus irgendwelchen Gründen im Kreis

01:46:23.000 --> 01:46:25.000
geroutet wird, dass die Pakete

01:46:25.000 --> 01:46:27.000
irgendwann weggeschmissen werden.

01:46:27.000 --> 01:46:29.000
Falls es wirklich mal

01:46:29.000 --> 01:46:31.000
Koggerskreise gibt.

01:46:33.000 --> 01:46:35.000
So, die Time-to-Live wird runtergezählt.

01:46:35.000 --> 01:46:37.000
Und der Router, der die Time-to-Live auf 0 runterzählt,

01:46:37.000 --> 01:46:39.000
der

01:46:39.000 --> 01:46:41.000
verwirft das Paket, aber

01:46:41.000 --> 01:46:43.000
schickt eine

01:46:43.000 --> 01:46:45.000
Error-Message zurück

01:46:45.000 --> 01:46:47.000
an den Absender.

01:46:47.000 --> 01:46:49.000
Irgendeine ICMP-Error-Message.

01:46:49.000 --> 01:46:51.000
Irgendeine ICMP-Error-Message.

01:46:51.000 --> 01:46:53.000
Ich weiß, ich hab keine Ahnung, ehrlich gesagt.

01:46:53.000 --> 01:46:55.000
Welche genau. Aber du bekommst

01:46:55.000 --> 01:46:57.000
Destination Unreachable oder so.

01:46:57.000 --> 01:46:59.000
Ach, keine Ahnung. Du bekommst

01:46:59.000 --> 01:47:01.000
zumindest ein Fehlerpaket

01:47:01.000 --> 01:47:03.000
zurückgeschickt, dass dein Paket verworfen wurde.

01:47:03.000 --> 01:47:05.000
So. Und

01:47:05.000 --> 01:47:07.000
das ist dann

01:47:07.000 --> 01:47:09.000
der Fall hier, wo man sieht,

01:47:09.000 --> 01:47:11.000
aha, hier wurde mein Paket verworfen.

01:47:13.000 --> 01:47:15.000
Und da gibt es natürlich ein paar Informationen zwischendurch.

01:47:15.000 --> 01:47:17.000
Weil normalerweise bekomme ich ja gar nicht mit,

01:47:17.000 --> 01:47:19.000
wie die Zwischenhops heißen.

01:47:19.000 --> 01:47:21.000
Also ich route ja nicht explizit

01:47:21.000 --> 01:47:23.000
von da nach da, von da nach da, von da nach da.

01:47:23.000 --> 01:47:25.000
Ich sag ja nur, ich will hierhin.

01:47:25.000 --> 01:47:27.000
An die IP-Adresse von AliExpress.

01:47:27.000 --> 01:47:29.000
Damit ich jetzt die Zwischenschritte rausbekomme,

01:47:29.000 --> 01:47:31.000
muss ich mir

01:47:31.000 --> 01:47:33.000
die IP angucken, welcher

01:47:33.000 --> 01:47:35.000
Router hat mir die Error-Message

01:47:35.000 --> 01:47:37.000
geschickt. Also der Router

01:47:37.000 --> 01:47:39.000
zählt die TimeToLive auf 0 runter

01:47:39.000 --> 01:47:41.000
und schickt dir eine Error-Message

01:47:41.000 --> 01:47:43.000
zurück. Und in der Error-Message

01:47:43.000 --> 01:47:45.000
steht dann die Absender-IP des

01:47:45.000 --> 01:47:47.000
Routers drin, der die Error-Message

01:47:47.000 --> 01:47:49.000
generiert hat. Also das hier ist

01:47:49.000 --> 01:47:51.000
ein Paket

01:47:51.000 --> 01:47:53.000
TimeToLive 1. Mein Router

01:47:53.000 --> 01:47:55.000
verwirft das Ganze, schickt mir eine Error-Message zurück

01:47:55.000 --> 01:47:57.000
und ich sehe, das ist der Router.

01:47:57.000 --> 01:47:59.000
TimeToLive von 2, TimeToLive von 3, TimeToLive

01:47:59.000 --> 01:48:01.000
von 4 und so weiter.

01:48:01.000 --> 01:48:03.000
Und ich schicke mir das alles zurück.

01:48:03.000 --> 01:48:05.000
Und was das hier jetzt bedeutet, wenn hier nichts zurückkommt,

01:48:05.000 --> 01:48:07.000
heißt nicht, dass es diesen Zwischenhop

01:48:07.000 --> 01:48:09.000
nicht gibt.

01:48:09.000 --> 01:48:11.000
Sondern, das bedeutet einfach nur,

01:48:11.000 --> 01:48:13.000
dass dieser Zwischenhop, und das dürfte

01:48:13.000 --> 01:48:15.000
wahrscheinlich der Unity-Media,

01:48:15.000 --> 01:48:17.000
der Eingangsrouter von Unity-Media,

01:48:17.000 --> 01:48:19.000
der erste Unity-Media-Hop an der Stelle,

01:48:19.000 --> 01:48:21.000
der antwortet schlicht und ergreifend

01:48:21.000 --> 01:48:23.000
mit keinem Fehler, wenn er das Paket

01:48:23.000 --> 01:48:25.000
verwirft. Der verwirft das Paket,

01:48:25.000 --> 01:48:27.000
schickt mir aber keine Fehlermeldung

01:48:27.000 --> 01:48:29.000
zurück. Das ist kein PacketLoss.

01:48:29.000 --> 01:48:31.000
Das ist einfach nur

01:48:31.000 --> 01:48:33.000
so konfiguriert, dass dieser

01:48:33.000 --> 01:48:35.000
Eintrag hier, also dass dieser Router an der

01:48:35.000 --> 01:48:37.000
Stelle keine Fehlermeldung

01:48:37.000 --> 01:48:39.000
zurückliefert, wenn er ein Paket

01:48:39.000 --> 01:48:41.000
verwirft. Das ist nicht

01:48:41.000 --> 01:48:43.000
gleich PacketLoss. Das ist eine

01:48:43.000 --> 01:48:45.000
Konfigurationssache des jeweiligen

01:48:45.000 --> 01:48:47.000
Routers. Und wie man

01:48:47.000 --> 01:48:49.000
hier sieht, alle anderen danach machen

01:48:49.000 --> 01:48:51.000
das auch so. Und nachdem man

01:48:51.000 --> 01:48:53.000
keine Antwort jemals wieder bekommt,

01:48:53.000 --> 01:48:55.000
weiß man auch nicht, wie viele

01:48:55.000 --> 01:48:57.000
dazwischen liegen. Weil ja AliExpress, der

01:48:57.000 --> 01:48:59.000
letzte Router, das anscheinend auch nicht macht.

01:48:59.000 --> 01:49:01.000
Also, easy.

01:49:01.000 --> 01:49:03.000
Okay, wir können das theoretisch

01:49:03.000 --> 01:49:05.000
glaube ich sogar noch hochstellen,

01:49:05.000 --> 01:49:07.000
irgendwie.

01:49:07.000 --> 01:49:09.000
Dass wir dann vielleicht doch irgendwann mal eine Antwort kriegen.

01:49:09.000 --> 01:49:11.000
Aber das ist der Sinn

01:49:11.000 --> 01:49:13.000
wie...

01:49:13.000 --> 01:49:15.000
Also das ist der Hintergrund

01:49:15.000 --> 01:49:17.000
und der Sinn von sowas wie Traceroute.

01:49:17.000 --> 01:49:19.000
Das dient nicht dazu, PacketLoss

01:49:19.000 --> 01:49:21.000
irgendwie aufzudecken. Das dient dazu, dass man so

01:49:21.000 --> 01:49:23.000
grob eine Ahnung hat, wo seine Pakete rumgeroutet

01:49:23.000 --> 01:49:25.000
werden. Das kann natürlich sinnvoll

01:49:25.000 --> 01:49:27.000
sein,

01:49:27.000 --> 01:49:29.000
um rauszubekommen,

01:49:29.000 --> 01:49:31.000
ob man zum Server,

01:49:31.000 --> 01:49:33.000
zum koreanischen MMO

01:49:33.000 --> 01:49:35.000
Server, eine schlechte Route

01:49:35.000 --> 01:49:37.000
nimmt. Wie gesagt, erst nach New York,

01:49:37.000 --> 01:49:39.000
dann rüber nach Russland, dann runter nach

01:49:39.000 --> 01:49:41.000
China und dann nach Korea.

01:49:41.000 --> 01:49:43.000
Das könnte man daran, wenn du

01:49:43.000 --> 01:49:45.000
auf der Strecke Router hast,

01:49:45.000 --> 01:49:47.000
die Antworten mit Error-Messages, könnte man

01:49:47.000 --> 01:49:49.000
das halbwegs nachvollziehen. Aber das

01:49:49.000 --> 01:49:51.000
bedeutet nicht PacketLoss. So, das

01:49:51.000 --> 01:49:53.000
muss man an der Stelle nochmal sagen. Das behaupten

01:49:53.000 --> 01:49:55.000
sie nicht in dem Video. Also ich

01:49:55.000 --> 01:49:57.000
erzähle das jetzt hier nicht, weil sie das in dem Video gesagt hätten.

01:49:57.000 --> 01:49:59.000
Sondern nur, weil viele Leute denken,

01:49:59.000 --> 01:50:01.000
dass das damit was zu tun hat.

01:50:01.000 --> 01:50:03.000
Hat aber nix damit zu tun.

01:50:03.000 --> 01:50:05.000
Und es gibt

01:50:05.000 --> 01:50:07.000
noch ein zweiter Grund für PacketLoss.

01:50:07.000 --> 01:50:09.000
Der

01:50:09.000 --> 01:50:11.000
wird auch oftmals missverstanden.

01:50:11.000 --> 01:50:13.000
Wobei

01:50:13.000 --> 01:50:15.000
der bei Spielen jetzt weniger

01:50:15.000 --> 01:50:17.000
weniger auftritt.

01:50:17.000 --> 01:50:19.000
Man kann auch schlicht

01:50:19.000 --> 01:50:21.000
und ergreifend mehr Daten verschicken, als auf dem

01:50:21.000 --> 01:50:23.000
Weg irgendwo durchpassen.

01:50:23.000 --> 01:50:25.000
Das ist dann kein PacketLoss in Form von

01:50:25.000 --> 01:50:27.000
Kabel ist kaputt oder sowas in der Richtung.

01:50:27.000 --> 01:50:29.000
Oder irgendwas anderes ist furchtbar kaputt.

01:50:29.000 --> 01:50:31.000
Nein, irgendwo auf dem Weg

01:50:31.000 --> 01:50:33.000
ist schlicht und ergreifend die Bandbreite zu gering,

01:50:33.000 --> 01:50:35.000
dass Pakete getroppt werden müssen.

01:50:35.000 --> 01:50:37.000
Das kann man ganz einfach lokal

01:50:37.000 --> 01:50:39.000
demonstrieren. Das mache ich jetzt nicht im Stream.

01:50:39.000 --> 01:50:41.000
Ich erzähle euch das bloß, weil ich keinen

01:50:41.000 --> 01:50:43.000
Server mit dem ich das hier ausprobieren könnte.

01:50:43.000 --> 01:50:45.000
Das kann man ganz einfach lokal demonstrieren.

01:50:45.000 --> 01:50:47.000
Man

01:50:47.000 --> 01:50:49.000
macht beispielsweise mal ein

01:50:49.000 --> 01:50:51.000
iPerf oder sowas auf.

01:50:51.000 --> 01:50:53.000
Bei sich auf dem Raspberry Pi oder sonst wo.

01:50:53.000 --> 01:50:55.000
Und schickt dann mal

01:50:55.000 --> 01:50:57.000
UDP-Messages.

01:50:57.000 --> 01:50:59.000
Also man sagt iPerf,

01:50:59.000 --> 01:51:01.000
man hat einen 1 Gigabit

01:51:01.000 --> 01:51:03.000
Netzwerkport und man sagt iPerf

01:51:03.000 --> 01:51:05.000
generiere mal 2 Gigabit die Sekunde

01:51:05.000 --> 01:51:07.000
an Traffic und versucht es rüber zu schicken.

01:51:07.000 --> 01:51:09.000
Dann werdet ihr sehen, ihr habt ungefähr 50%

01:51:09.000 --> 01:51:11.000
Packet Loss. Wahrscheinlich sind es, realistisch betrachtet,

01:51:11.000 --> 01:51:13.000
eher sogar 60%.

01:51:13.000 --> 01:51:15.000
Warum habt ihr 60% Packet Loss? Naja,

01:51:15.000 --> 01:51:17.000
weil ihr schlicht und ergreifend viel mehr schickt als durchpasst.

01:51:17.000 --> 01:51:19.000
Was soll

01:51:19.000 --> 01:51:21.000
man sonst haben als Packet Loss?

01:51:21.000 --> 01:51:23.000
Wo sollen die hin, die Dinger?

01:51:27.000 --> 01:51:29.000
Okay, auf geht's.

01:51:29.000 --> 01:51:31.000
Weiter.

01:51:31.000 --> 01:51:33.000
Game Server am Weg verschwinden liegt übrigens

01:51:33.000 --> 01:51:35.000
so gut wie nie am Spiel

01:51:35.000 --> 01:51:37.000
bzw. an deren Game Server, sondern

01:51:37.000 --> 01:51:39.000
in 99% der Fälle

01:51:39.000 --> 01:51:41.000
am Weg davor.

01:51:41.000 --> 01:51:43.000
Ja, aber

01:51:43.000 --> 01:51:45.000
nicht bei euch

01:51:45.000 --> 01:51:47.000
in der Wohnung, meistens zumindest.

01:51:47.000 --> 01:51:49.000
Das ist jetzt ein bisschen blöd dargestellt,

01:51:49.000 --> 01:51:51.000
weil das irgendwie so

01:51:51.000 --> 01:51:53.000
ein Kabel ist, was die Leute bei sich

01:51:53.000 --> 01:51:55.000
daheim haben. Es liegt in der Regel nicht bei euch

01:51:55.000 --> 01:51:57.000
am Kabel oder bei euch daheim. Natürlich,

01:51:57.000 --> 01:51:59.000
es kann immer sein,

01:51:59.000 --> 01:52:01.000
es kann sein, dass eure Fritzbox-Party den Abgang

01:52:01.000 --> 01:52:03.000
macht, aber das äußert sich meistens anders.

01:52:03.000 --> 01:52:05.000
Es kann sein, dass ihr irgendwelche

01:52:05.000 --> 01:52:07.000
ultra alten, kaputten Kabel habt.

01:52:07.000 --> 01:52:09.000
Das lässt sich aber meistens

01:52:09.000 --> 01:52:11.000
relativ schnell ausschließen

01:52:11.000 --> 01:52:13.000
oder miesen

01:52:13.000 --> 01:52:15.000
WLAN-Empfang, und wer über WLAN spielt,

01:52:15.000 --> 01:52:17.000
hat eh die Kontrolle über sein Leben verloren.

01:52:17.000 --> 01:52:19.000
Aber

01:52:19.000 --> 01:52:21.000
das Problem lässt sich ja meistens relativ einfach ausschließen.

01:52:21.000 --> 01:52:23.000
Man stöpselt sich

01:52:23.000 --> 01:52:25.000
möglichst direkt mit einem Kabel,

01:52:25.000 --> 01:52:27.000
was halt funktioniert, an

01:52:27.000 --> 01:52:29.000
seine Fritzbox an

01:52:29.000 --> 01:52:31.000
und guckt, ob das immer noch so ist.

01:52:31.000 --> 01:52:33.000
Und wenn es dann weg ist,

01:52:33.000 --> 01:52:35.000
mag es an irgendeiner Verkabelung liegen,

01:52:35.000 --> 01:52:37.000
oder am WLAN oder sonst was, aber in der

01:52:37.000 --> 01:52:39.000
Regel liegt es nicht bei euch in den eigenen

01:52:39.000 --> 01:52:41.000
vier Wänden.

01:52:41.000 --> 01:52:43.000
Irgendwo auf dem Weg

01:52:43.000 --> 01:52:45.000
dazwischen. Ich meine, je nachdem, wie weit

01:52:45.000 --> 01:52:47.000
das Server weg ist, kann da schon ein bisschen was passieren.

01:52:53.000 --> 01:52:55.000
Und außerdem,

01:52:55.000 --> 01:52:57.000
wenn ihr so krasse Netzwerkprobleme habt,

01:52:57.000 --> 01:52:59.000
dass das schon bei Spielen auffällt,

01:52:59.000 --> 01:53:01.000
ich meine, Spiele haben wirklich

01:53:01.000 --> 01:53:03.000
keine allzu hohe Bandbreitenanforderung,

01:53:05.000 --> 01:53:07.000
dann kopiert mal was

01:53:07.000 --> 01:53:09.000
übers Netzwerk auf irgendeinen NAS oder so.

01:53:09.000 --> 01:53:11.000
Wenn ihr so ein beschissenes Kabel habt,

01:53:11.000 --> 01:53:13.000
dann habt ihr wahrscheinlich von eurem

01:53:13.000 --> 01:53:15.000
Gigabit

01:53:15.000 --> 01:53:17.000
im Endeffekt beim Transfer

01:53:17.000 --> 01:53:19.000
von der Datei noch, keine Ahnung,

01:53:19.000 --> 01:53:21.000
150 MBit übrig

01:53:21.000 --> 01:53:23.000
oder sowas. Also das fällt dann schon auf.

01:53:23.000 --> 01:53:25.000
Und das lässt sich auch einfach...

01:53:25.000 --> 01:53:27.000
Aber ansonsten wird es höchstwahrscheinlich

01:53:27.000 --> 01:53:29.000
bei euch in den eigenen vier Wänden liegen.

01:53:29.000 --> 01:53:31.000
So, okay, weiter.

01:53:33.000 --> 01:53:35.000
Das macht auch

01:53:35.000 --> 01:53:37.000
meistens nix.

01:53:37.000 --> 01:53:39.000
Also ganz ehrlich, das juckt...

01:53:39.000 --> 01:53:41.000
Also das da...

01:53:41.000 --> 01:53:43.000
Also das da

01:53:43.000 --> 01:53:45.000
juckt ein Netzwerkkabel in der Regel mal gar nix.

01:53:45.000 --> 01:53:47.000
Natürlich sollte man Netzwerkkabel

01:53:47.000 --> 01:53:49.000
nicht krass abknicken

01:53:49.000 --> 01:53:51.000
und mehrfach hin und her

01:53:51.000 --> 01:53:53.000
links knick rechts, links knick rechts.

01:53:53.000 --> 01:53:55.000
Nee, das ist klar.

01:53:55.000 --> 01:53:57.000
Drinnen sind auch nur Kupfer...

01:53:57.000 --> 01:53:59.000
Kupfer...

01:53:59.000 --> 01:54:01.000
Kupferdrähtchen, ja? Die können auch kaputt gehen.

01:54:01.000 --> 01:54:03.000
Aber so mal so ein kleines...

01:54:03.000 --> 01:54:05.000
Das macht dem Netzwerkkabel eigentlich nicht wirklich

01:54:05.000 --> 01:54:07.000
viel aus.

01:54:07.000 --> 01:54:09.000
Okay, bei Glasfaserkabeln sollte man

01:54:09.000 --> 01:54:11.000
das natürlich nicht machen. Dann kriegst du es relativ schnell kaputt.

01:54:19.000 --> 01:54:21.000
Ja, das ist eine bescheuerte Idee, WLAN.

01:54:25.000 --> 01:54:27.000
Aber der Internetprovider wählt die Route

01:54:27.000 --> 01:54:29.000
gar nicht. Der Internetprovider ist nur dafür

01:54:29.000 --> 01:54:31.000
zuständig, bis es bei ihm aus dem Netzwerk rausgeht.

01:54:31.000 --> 01:54:33.000
Natürlich kann ein Internetprovider

01:54:33.000 --> 01:54:35.000
das steuern,

01:54:35.000 --> 01:54:37.000
wo es das weiter schickt.

01:54:37.000 --> 01:54:39.000
Aber wenn danach

01:54:39.000 --> 01:54:41.000
Mist passiert, kann der Provider nicht

01:54:41.000 --> 01:54:43.000
viel machen dagegen.

01:54:43.000 --> 01:54:45.000
Ihr könnt es ganz woanders

01:54:45.000 --> 01:54:47.000
rausschicken und hoffen, dass es dann einen anderen

01:54:47.000 --> 01:54:49.000
Weg nimmt. Ja, ein bisschen Einfluss hat

01:54:49.000 --> 01:54:51.000
der Internetprovider schon drauf. Aber es ist nicht so, dass

01:54:51.000 --> 01:54:53.000
euer Internetprovider zuständig wäre für die komplette

01:54:53.000 --> 01:54:55.000
Route von euch zum Ziel.

01:54:55.000 --> 01:54:57.000
Je länger die Lieferkette, desto

01:54:57.000 --> 01:54:59.000
mehr geht am Weg verloren. Wenn

01:54:59.000 --> 01:55:01.000
euer Internetprovider

01:55:01.000 --> 01:55:03.000
komplett lost ist, was durchaus

01:55:03.000 --> 01:55:05.000
mal vorkommen kann, dann gibt es... Aber wenn es

01:55:05.000 --> 01:55:07.000
Vodafone ist zum Beispiel, die

01:55:07.000 --> 01:55:09.000
oftmals in ihrem eigenen Netz genug Probleme haben.

01:55:09.000 --> 01:55:11.000
...auch noch eine Lösung, eure Packet-Lost-

01:55:11.000 --> 01:55:13.000
Probleme easy in den Griff zu bekommen.

01:55:13.000 --> 01:55:15.000
Passend zum Thema haben wir uns nämlich für dieses Video

01:55:15.000 --> 01:55:17.000
den Partner NordVPN geholt, weil

01:55:17.000 --> 01:55:19.000
man damit sein Routing teilweise selbst

01:55:19.000 --> 01:55:21.000
besser lösen kann als der... Das

01:55:21.000 --> 01:55:23.000
ist nicht gelogen, das stimmt.

01:55:23.000 --> 01:55:25.000
Die Chancen, dass es

01:55:25.000 --> 01:55:27.000
was bringt, in dem Fall, würde ich sagen,

01:55:27.000 --> 01:55:29.000
ist recht gering, aber...

01:55:29.000 --> 01:55:31.000
Ich meine, das ist nicht

01:55:31.000 --> 01:55:33.000
falsch.

01:55:33.000 --> 01:55:35.000
...der eigene Internetprovider. Der Ping

01:55:35.000 --> 01:55:37.000
ist dann natürlich auch andere Vorteile, wie

01:55:37.000 --> 01:55:39.000
dass ihr Online selbst besser lösen kann als

01:55:39.000 --> 01:55:41.000
der eigene Internetprovider. Wir gucken uns das Placement trotzdem mal an.

01:55:41.000 --> 01:55:43.000
Der Ping ist dann vielleicht höher, das Spiel läuft

01:55:43.000 --> 01:55:45.000
aber trotzdem besser, weil kein Packet-Lost.

01:55:45.000 --> 01:55:47.000
Dazu kommen natürlich auch andere

01:55:47.000 --> 01:55:49.000
Vorteile, wie dass ihr Online-Inhalte ansehen könnt,

01:55:49.000 --> 01:55:51.000
die eigentlich in eurem Land nicht verfügbar sind,

01:55:51.000 --> 01:55:53.000
was definitiv... Ja, was für mich der einzige

01:55:53.000 --> 01:55:55.000
wirklich sinnige Grund für einen VPN

01:55:55.000 --> 01:55:57.000
übrigens ist. Ein Major Win

01:55:57.000 --> 01:55:59.000
ist bei zum Beispiel Netflix.

01:55:59.000 --> 01:56:01.000
Außerdem habt ihr generell einen verbesserten

01:56:01.000 --> 01:56:03.000
Schutz eurer Daten, auch wenn ihr nicht mal mit einem

01:56:03.000 --> 01:56:05.000
VPN-Server verbunden seid.

01:56:05.000 --> 01:56:07.000
Was? Was haben wir?

01:56:07.000 --> 01:56:09.000
Warum? Auch wenn ihr nicht mal

01:56:09.000 --> 01:56:11.000
mit einem VPN-Server verbunden seid.

01:56:11.000 --> 01:56:13.000
Warum? Habt ihr generell einen verbesserten Schutz

01:56:13.000 --> 01:56:15.000
eurer Daten, auch wenn ihr nicht mal mit einem VPN-Server

01:56:15.000 --> 01:56:17.000
verbunden seid. Inwiefern?

01:56:19.000 --> 01:56:21.000
Ich meine, es ist ja nicht mal, dass

01:56:21.000 --> 01:56:23.000
meine Daten besser geschützt werden mit einem

01:56:23.000 --> 01:56:25.000
VPN.

01:56:27.000 --> 01:56:29.000
Also insofern...

01:56:29.000 --> 01:56:31.000
Also das ist ja auch so ein Trugschluss, dass die Daten

01:56:31.000 --> 01:56:33.000
besser geschützt werden mit einem VPN.

01:56:33.000 --> 01:56:35.000
Also der einzige Weg,

01:56:35.000 --> 01:56:37.000
der vielleicht besser geschützt ist,

01:56:37.000 --> 01:56:39.000
ist

01:56:41.000 --> 01:56:43.000
die Strecke, die eure Daten

01:56:43.000 --> 01:56:45.000
nehmen, vom Eingang

01:56:45.000 --> 01:56:47.000
des VPNs bis zum

01:56:47.000 --> 01:56:49.000
Ausgang des VPNs.

01:56:49.000 --> 01:56:51.000
Dafür

01:56:51.000 --> 01:56:53.000
handelt ihr euch Probleme ein mit,

01:56:53.000 --> 01:56:55.000
dass euer VPN-Anbieter

01:56:55.000 --> 01:56:57.000
vielleicht komische Dinge

01:56:57.000 --> 01:56:59.000
macht. Das heißt, ihr müsst eurem VPN-Anbieter

01:56:59.000 --> 01:57:01.000
trauen. Wer weiß, was die machen.

01:57:01.000 --> 01:57:03.000
Also das Problem machst du

01:57:03.000 --> 01:57:05.000
sonst nicht. Und das nächste ist,

01:57:05.000 --> 01:57:07.000
dass jetzt die Daten nennenswert

01:57:07.000 --> 01:57:09.000
irgendwie

01:57:09.000 --> 01:57:11.000
auf dem Weg

01:57:11.000 --> 01:57:13.000
datenschutzrechtlich bedenklich

01:57:13.000 --> 01:57:15.000
irgendwie verarbeitet oder

01:57:15.000 --> 01:57:17.000
gespeichert werden. Es sei denn,

01:57:17.000 --> 01:57:19.000
es ist irgendwie der Geheimdienst am Start oder so.

01:57:19.000 --> 01:57:21.000
Der kann sich aber auch einfach

01:57:21.000 --> 01:57:23.000
vorm...

01:57:23.000 --> 01:57:25.000
da irgendwie

01:57:25.000 --> 01:57:27.000
anderweitig...

01:57:27.000 --> 01:57:29.000
Wenn ihr wirklich Angst vorm Geheimdienst

01:57:29.000 --> 01:57:31.000
habt, dann...

01:57:35.000 --> 01:57:37.000
Dann habt ihr wahrscheinlich auch andere Probleme,

01:57:37.000 --> 01:57:39.000
weil ihr komische

01:57:39.000 --> 01:57:41.000
Dinge macht. Aber ja, okay.

01:57:41.000 --> 01:57:43.000
Sagen wir mal, ihr habt Angst vorm Geheimdienst.

01:57:43.000 --> 01:57:45.000
Dann könnt ihr die Sachen natürlich

01:57:45.000 --> 01:57:47.000
über den VPN schicken.

01:57:47.000 --> 01:57:49.000
Aber spätestens beim Ausgang

01:57:49.000 --> 01:57:51.000
des VPNs

01:57:53.000 --> 01:57:55.000
können die Dinger wieder abgegriffen werden.

01:57:55.000 --> 01:57:57.000
Also da hast du eh keine Chancen.

01:57:57.000 --> 01:57:59.000
So, das heißt, die Chance, dass eure Daten

01:57:59.000 --> 01:58:01.000
irgendwie aufgezeichnet und

01:58:01.000 --> 01:58:03.000
verarbeitet werden und für irgendwelche

01:58:03.000 --> 01:58:05.000
was weiß ich, sagen wir mal

01:58:05.000 --> 01:58:07.000
Analysen

01:58:07.000 --> 01:58:09.000
und Werbeanrufe,

01:58:09.000 --> 01:58:11.000
keine Ahnung, was auch immer,

01:58:11.000 --> 01:58:13.000
ist relativ gering, dass das

01:58:13.000 --> 01:58:15.000
auf dem Weg,

01:58:15.000 --> 01:58:17.000
auf dem reinen Netzwerkrouting-Weg

01:58:17.000 --> 01:58:19.000
unterwegs passiert.

01:58:19.000 --> 01:58:21.000
Wo das eher passiert ist,

01:58:21.000 --> 01:58:23.000
den Service, den ihr eigentlich benutzen wollt,

01:58:23.000 --> 01:58:25.000
und der kann ja eure Daten nach wie vor

01:58:25.000 --> 01:58:27.000
lesen, ob VPN

01:58:27.000 --> 01:58:29.000
oder nicht. Ich meine,

01:58:29.000 --> 01:58:31.000
ihr geht rein in euer VPN

01:58:31.000 --> 01:58:33.000
und irgendwann

01:58:33.000 --> 01:58:35.000
muss das auch mal wieder raus.

01:58:35.000 --> 01:58:37.000
Und in dem Moment

01:58:37.000 --> 01:58:39.000
wurde das VPN verlässt, weil ich meine,

01:58:39.000 --> 01:58:41.000
euer VPN, das ist ja

01:58:41.000 --> 01:58:43.000
auch mal irgendwann, also

01:58:43.000 --> 01:58:45.000
euer VPN terminiert ja nicht direkt auf

01:58:45.000 --> 01:58:47.000
dem Webserver von Google.

01:58:47.000 --> 01:58:49.000
Sondern irgendwo, bei irgendeinem

01:58:49.000 --> 01:58:51.000
Exit-Ding, Router-Exit

01:58:51.000 --> 01:58:53.000
von diesem VPN-Provider.

01:58:53.000 --> 01:58:55.000
Spätestens da ist

01:58:55.000 --> 01:58:57.000
vorbei mit VPN und

01:58:57.000 --> 01:58:59.000
der Anbieter bekommt eure Daten

01:58:59.000 --> 01:59:01.000
so, wie wenn ihr normal drauf zugreifen würdet

01:59:01.000 --> 01:59:03.000
und wenn der jetzt der Meinung ist,

01:59:03.000 --> 01:59:05.000
die Daten speichern zu müssen und verkaufen zu müssen,

01:59:05.000 --> 01:59:07.000
dann kann das trotzdem passieren.

01:59:07.000 --> 01:59:09.000
Und das ist auch viel eher das,

01:59:09.000 --> 01:59:11.000
wo irgendwelche Daten geleakt werden.

01:59:11.000 --> 01:59:13.000
Nämlich von den Anbietern, nicht irgendwie

01:59:13.000 --> 01:59:15.000
unterwegs oder so. Also sprich,

01:59:15.000 --> 01:59:17.000
der einzige Fall, wo das

01:59:17.000 --> 01:59:19.000
tatsächlich sinnvoll sein könnte,

01:59:19.000 --> 01:59:21.000
wäre sowas wie,

01:59:21.000 --> 01:59:23.000
man sitzt im Krankenhaus

01:59:23.000 --> 01:59:25.000
oder in einem Café und die haben ein offenes WLAN

01:59:25.000 --> 01:59:27.000
und, also mit offen meine ich ein unverschlüsseltes

01:59:27.000 --> 01:59:29.000
WLAN

01:59:29.000 --> 01:59:31.000
oder noch ein

01:59:31.000 --> 01:59:33.000
WEP-verschlüsseltes WLAN oder sowas.

01:59:33.000 --> 01:59:35.000
Also wenn man sich da netzwerktechnisch

01:59:35.000 --> 01:59:37.000
nicht ganz, dann mag das vielleicht Sinn

01:59:37.000 --> 01:59:39.000
machen, wobei man da halt auch sagen muss,

01:59:39.000 --> 01:59:41.000
wenn man Seiten besucht, die über

01:59:41.000 --> 01:59:43.000
harte TPS gehen, also die TLS-verschlüsselt sind,

01:59:43.000 --> 01:59:45.000
was die meisten Seiten sind,

01:59:45.000 --> 01:59:47.000
dann ist das auch kein Problem.

01:59:47.000 --> 01:59:49.000
Aber dann kann man sich tatsächlich

01:59:49.000 --> 01:59:51.000
überlegen, dann muss es aber auch nicht wirklich NordVPN

01:59:51.000 --> 01:59:53.000
sein für diesen Zweck, sondern man kann auch

01:59:53.000 --> 01:59:55.000
ein VPN aufbauen, beispielsweise zu einer

01:59:55.000 --> 01:59:57.000
eigenen Kiste oder zu seiner

01:59:57.000 --> 01:59:59.000
Fritzbox daheim mit irgendeiner App und das geht auch.

01:59:59.000 --> 02:00:01.000
Dann braucht es die NordVPN.

02:00:01.000 --> 02:00:03.000
Für die eigentlichen

02:00:03.000 --> 02:00:05.000
Gefahren, dass Anbieter

02:00:05.000 --> 02:00:07.000
eure Daten leaken, da kann

02:00:07.000 --> 02:00:09.000
NordVPN überhaupt nichts dagegen

02:00:09.000 --> 02:00:11.000
machen, weil ihr müsst ja den

02:00:11.000 --> 02:00:13.000
Service benutzen, den ihr benutzen

02:00:13.000 --> 02:00:15.000
wollt. Also mal angenommen, ihr benutzt

02:00:15.000 --> 02:00:17.000
irgendeinen Service, um eure Termine zu

02:00:17.000 --> 02:00:19.000
managen.

02:00:19.000 --> 02:00:21.000
Irgendeinen Online-Kalender.

02:00:21.000 --> 02:00:23.000
Dann müssen eure Daten ja

02:00:23.000 --> 02:00:25.000
zu diesem Anbieter und wenn

02:00:25.000 --> 02:00:27.000
dieser Anbieter mal irgendwie zufälligerweise

02:00:27.000 --> 02:00:29.000
seine Datenbank im Darknet findet,

02:00:29.000 --> 02:00:31.000
dann sind eure ganzen

02:00:31.000 --> 02:00:33.000
Daten geleakt. Unabhängig davon,

02:00:33.000 --> 02:00:35.000
ob ihr diese Daten zum Anbieter

02:00:35.000 --> 02:00:37.000
über NordVPN geschickt habt oder ob

02:00:37.000 --> 02:00:39.000
das ganz normal über das Internet geroutet zum Anbieter.

02:00:39.000 --> 02:00:41.000
Das ist wurscht. Also NordVPN

02:00:41.000 --> 02:00:43.000
kann, auch wenn das immer so, oder generell

02:00:43.000 --> 02:00:45.000
nicht nur NordVPN, VPNs an sich

02:00:45.000 --> 02:00:47.000
können, auch wenn das immer so als super krasse

02:00:47.000 --> 02:00:49.000
Security-Sache verkauft wird,

02:00:49.000 --> 02:00:51.000
erstaunlich wenig mehr

02:00:51.000 --> 02:00:53.000
Sicherheit bieten. Also es wird

02:00:53.000 --> 02:00:55.000
als viel mehr verkauft,

02:00:55.000 --> 02:00:57.000
als es letztendlich ist.

02:00:57.000 --> 02:00:59.000
Der Hauptanwendungsfall, den ich

02:00:59.000 --> 02:01:01.000
bei VPN sehe, ist

02:01:01.000 --> 02:01:03.000
tatsächlich, man möchte auf

02:01:03.000 --> 02:01:05.000
irgendwelche geoblockten

02:01:05.000 --> 02:01:07.000
Sachen oder Region-

02:01:07.000 --> 02:01:09.000
lockten Sachen zugreifen.

02:01:09.000 --> 02:01:11.000
Also ich möchte jetzt

02:01:11.000 --> 02:01:13.000
beispielsweise auf irgendwelchen

02:01:13.000 --> 02:01:15.000
koreanischen Servern spielen,

02:01:15.000 --> 02:01:17.000
die nur Leute

02:01:17.000 --> 02:01:19.000
aus Asien drauflassen oder

02:01:19.000 --> 02:01:21.000
ich will Netflix gucken

02:01:21.000 --> 02:01:23.000
in einem anderen Land.

02:01:23.000 --> 02:01:25.000
Ich will Filme gucken, die in Deutschland

02:01:25.000 --> 02:01:27.000
noch nicht released sind und das über irgendeinen

02:01:27.000 --> 02:01:29.000
Watch-Service in Indien,

02:01:29.000 --> 02:01:31.000
was auch immer, irgendwas.

02:01:31.000 --> 02:01:33.000
Dafür ist VPN sinnvoll.

02:01:33.000 --> 02:01:35.000
VPN kann auch sinnvoll

02:01:35.000 --> 02:01:37.000
sein, wenn man so

02:01:37.000 --> 02:01:39.000
halblegale

02:01:39.000 --> 02:01:41.000
Sachen macht, weil BitTorrent

02:01:41.000 --> 02:01:43.000
an sich und P2P-Sharing

02:01:43.000 --> 02:01:45.000
ist ja an sich nicht illegal.

02:01:45.000 --> 02:01:47.000
Wir laden selbstverständlich alle nur, ich muss ehrlich

02:01:47.000 --> 02:01:49.000
sagen, ich habe es ewig nicht mehr benutzt.

02:01:49.000 --> 02:01:51.000
Ich habe noch nicht mal meinen BitTorrent-Client installiert.

02:01:51.000 --> 02:01:53.000
Aber wenn überhaupt, laden wir uns natürlich alle nur

02:01:53.000 --> 02:01:55.000
Linux-ISOs runter.

02:01:55.000 --> 02:01:57.000
Und so auch nur alles Linux-ISOs.

02:01:59.000 --> 02:02:01.000
Für sowas

02:02:01.000 --> 02:02:03.000
kann das sinnvoll sein, ein VPN zu benutzen.

02:02:03.000 --> 02:02:05.000
Man handelt sich mit einem VPN

02:02:05.000 --> 02:02:07.000
aber immer jemand ein, und das muss einem klar sein,

02:02:07.000 --> 02:02:09.000
man handelt sich immer jemand ein,

02:02:09.000 --> 02:02:11.000
der dazwischen sitzt.

02:02:11.000 --> 02:02:13.000
Der potenziell selber alles, was

02:02:13.000 --> 02:02:15.000
ihr übertragt, sofern es nicht nochmal

02:02:15.000 --> 02:02:17.000
verschlüsselt ist,

02:02:17.000 --> 02:02:19.000
beispielsweise, weil ihr über

02:02:19.000 --> 02:02:21.000
TLS geht, über HTTPS

02:02:21.000 --> 02:02:23.000
geht, kann euer VPN-Anbieter

02:02:23.000 --> 02:02:25.000
alles mitlesen,

02:02:25.000 --> 02:02:27.000
was ihr verschickt.

02:02:27.000 --> 02:02:29.000
Ob er das macht,

02:02:29.000 --> 02:02:31.000
ob er daraus irgendwie Kapital schlägt,

02:02:31.000 --> 02:02:33.000
ob er euch, was auch immer.

02:02:33.000 --> 02:02:35.000
Das können wir nicht wissen,

02:02:35.000 --> 02:02:37.000
das ist offen.

02:02:39.000 --> 02:02:41.000
Das ist quasi man in the middle as a service,

02:02:41.000 --> 02:02:43.000
wenn man das so will.

02:02:47.000 --> 02:02:49.000
Natürlich ist es dann auch wiederum nicht ganz

02:02:49.000 --> 02:02:51.000
so einfach.

02:02:51.000 --> 02:02:53.000
Ich meine,

02:02:53.000 --> 02:02:55.000
je nachdem, was das für eine VPN-Technologie

02:02:55.000 --> 02:02:57.000
verwendet und

02:02:57.000 --> 02:02:59.000
wie die Zertifikatsgenerierung

02:02:59.000 --> 02:03:01.000
alles läuft, eventuell ist es auch nicht

02:03:01.000 --> 02:03:03.000
möglich, für den VPN-Anbieter

02:03:03.000 --> 02:03:05.000
das Ganze mitzulesen, aber

02:03:05.000 --> 02:03:07.000
ihr wisst ja halt nicht genau,

02:03:07.000 --> 02:03:09.000
was unter der Haube passiert.

02:03:11.000 --> 02:03:13.000
Es kommt immer wieder zum gleichen Punkt,

02:03:13.000 --> 02:03:15.000
ihr müsst diesem VPN-Anbieter komplett

02:03:15.000 --> 02:03:17.000
trauen, mit allem, was ihr

02:03:17.000 --> 02:03:19.000
darüber übertragt.

02:03:19.000 --> 02:03:21.000
Und da weiß ich halt nicht,

02:03:21.000 --> 02:03:23.000
ob man jetzt im NordVPN

02:03:23.000 --> 02:03:25.000
da wirklich mehr trauen kann,

02:03:25.000 --> 02:03:27.000
als irgendwelchen etablierten

02:03:27.000 --> 02:03:29.000
Service-Providern und

02:03:29.000 --> 02:03:31.000
Carrier-Netzwerken und was es

02:03:31.000 --> 02:03:33.000
nicht alles gibt,

02:03:33.000 --> 02:03:35.000
da was komisches zu machen.

02:03:35.000 --> 02:03:37.000
Da muss man sich überlegen.

02:03:37.000 --> 02:03:39.000
Also es hat seine Daseinsberechtigung VPN,

02:03:39.000 --> 02:03:41.000
aber diese Sache mit

02:03:41.000 --> 02:03:43.000
es macht alles so viel wahnsinnig sicherer,

02:03:43.000 --> 02:03:45.000
ist viel Einbildung

02:03:45.000 --> 02:03:47.000
dabei. Also es macht wenig sicherer.

02:03:47.000 --> 02:03:49.000
Also es macht erstaunlich wenig

02:03:49.000 --> 02:03:51.000
für die Sicherheit,

02:03:51.000 --> 02:03:53.000
das zu benutzen.

02:03:53.000 --> 02:03:55.000
Im Vergleich zu dem, wie es immer angepriesen wird.

02:03:55.000 --> 02:03:57.000
So, weiter.

02:04:13.000 --> 02:04:15.000
Da bin ich immer gespannt,

02:04:15.000 --> 02:04:17.000
wie sehr das sich da wirklich dran gehalten wird,

02:04:17.000 --> 02:04:19.000
weil sagen, dass man das macht, ist das eine

02:04:19.000 --> 02:04:21.000
und das dann wirklich einlösen, keine Ahnung.

02:04:27.000 --> 02:04:29.000
Ja, ja klar, Chad, natürlich, wie gesagt,

02:04:29.000 --> 02:04:31.000
für solche Sachen, wir haben ja gerade

02:04:31.000 --> 02:04:33.000
angesprochen, warum man vielleicht seine IP

02:04:33.000 --> 02:04:35.000
verschleiern will, da macht das durchaus Sinn.

02:04:35.000 --> 02:04:37.000
Anonymer ist man dadurch

02:04:37.000 --> 02:04:39.000
auch nicht.

02:04:39.000 --> 02:04:41.000
Also anonymer

02:04:41.000 --> 02:04:43.000
in der Form,

02:04:43.000 --> 02:04:45.000
dass man das euch nicht zuordnen kann,

02:04:45.000 --> 02:04:47.000
weil ich meine, ihr habt zwar eine andere IP,

02:04:47.000 --> 02:04:49.000
aber ihr habt immer noch die gleiche IP,

02:04:49.000 --> 02:04:51.000
immer längere Zeit die gleiche Exit-IP

02:04:51.000 --> 02:04:53.000
und die Anbieter

02:04:53.000 --> 02:04:55.000
selbst erkennen euch ja nicht

02:04:55.000 --> 02:04:57.000
anhand der IP primär,

02:04:57.000 --> 02:04:59.000
sondern entweder ihr lockt euch ein,

02:04:59.000 --> 02:05:01.000
dann ist vollkommen egal, von welcher

02:05:01.000 --> 02:05:03.000
IP ihr euch einlockt, die wissen,

02:05:03.000 --> 02:05:05.000
dass ihr das seid, oder aber

02:05:05.000 --> 02:05:07.000
im Zeitalter von

02:05:07.000 --> 02:05:09.000
Browser, Fingerprinting

02:05:09.000 --> 02:05:11.000
und alle möglichen Geschichten

02:05:11.000 --> 02:05:13.000
findet man

02:05:13.000 --> 02:05:15.000
auch recht gut raus,

02:05:15.000 --> 02:05:17.000
wenn einen User besuchen von unterschiedlichen

02:05:17.000 --> 02:05:19.000
IPs,

02:05:19.000 --> 02:05:21.000
ob es die gleichen User sind, und da gibt es echt

02:05:21.000 --> 02:05:23.000
die abgedrehtesten Sachen,

02:05:23.000 --> 02:05:25.000
eines der coolsten Sachen, die ich mal

02:05:25.000 --> 02:05:27.000
gelesen habe in den letzten

02:05:27.000 --> 02:05:29.000
Jahren, wie man User

02:05:29.000 --> 02:05:31.000
identifizieren kann, oder zumindest

02:05:31.000 --> 02:05:33.000
sehr stark eingrenzen kann,

02:05:33.000 --> 02:05:35.000
nachdem Browser ja mittlerweile

02:05:35.000 --> 02:05:37.000
Schutzmechanismen eingebaut haben,

02:05:37.000 --> 02:05:39.000
dass man nicht mehr so einfach Schriftarten

02:05:39.000 --> 02:05:41.000
auslesen kann und sowas, die installiert sind,

02:05:41.000 --> 02:05:43.000
war

02:05:43.000 --> 02:05:45.000
folgendes, das kann ich euch

02:05:45.000 --> 02:05:47.000
mal kurz zwei Minuten erzählen, also, wenn ein

02:05:47.000 --> 02:05:49.000
Anbieter feststellen will,

02:05:49.000 --> 02:05:51.000
welche User die

02:05:51.000 --> 02:05:53.000
Seite regelmäßig besuchen, und das ohne Account

02:05:53.000 --> 02:05:55.000
und ohne

02:05:55.000 --> 02:05:57.000
sich auf die IP zu verlassen

02:05:57.000 --> 02:05:59.000
und ohne auf den User Agent,

02:05:59.000 --> 02:06:01.000
da gibt es verschiedene Varianten, und

02:06:01.000 --> 02:06:03.000
eine Sache, die ich letztens gelesen habe, die war wirklich

02:06:03.000 --> 02:06:05.000
sehr high IQ, und zwar

02:06:05.000 --> 02:06:07.000
korrekt.

02:06:07.000 --> 02:06:09.000
Was die machen ist,

02:06:09.000 --> 02:06:11.000
die rendern auf ihrer Webseite

02:06:11.000 --> 02:06:13.000
offscreen oder ganz

02:06:13.000 --> 02:06:15.000
klein oder nahezu unsichtbar,

02:06:15.000 --> 02:06:17.000
legen

02:06:17.000 --> 02:06:19.000
die ein Canvas Element

02:06:19.000 --> 02:06:21.000
an, Canvas Element ist

02:06:21.000 --> 02:06:23.000
auf HTML Seiten sowas, wo

02:06:23.000 --> 02:06:25.000
Webseiten eigene Sachen

02:06:25.000 --> 02:06:27.000
drinnen malen können, also sprich, das

02:06:27.000 --> 02:06:29.000
benutzt man zum Beispiel, also

02:06:29.000 --> 02:06:31.000
das hier ist zum Beispiel ein

02:06:31.000 --> 02:06:33.000
Canvas Element.

02:06:33.000 --> 02:06:35.000
Hier, das ganze Ding hier

02:06:35.000 --> 02:06:37.000
ist ein Canvas. Also das hier höchst

02:06:37.000 --> 02:06:39.000
wahrscheinlich auch drumherum.

02:06:39.000 --> 02:06:41.000
So, und

02:06:41.000 --> 02:06:43.000
was

02:06:43.000 --> 02:06:45.000
man dann machen kann ist,

02:06:45.000 --> 02:06:47.000
die rendern Emojis

02:06:47.000 --> 02:06:49.000
in

02:06:49.000 --> 02:06:51.000
dieses Canvas.

02:06:51.000 --> 02:06:53.000
Und

02:06:53.000 --> 02:06:55.000
mal gucken, wer von euch

02:06:55.000 --> 02:06:57.000
im Chat

02:06:57.000 --> 02:06:59.000
heute massive

02:06:59.000 --> 02:07:01.000
highest IQ ist.

02:07:01.000 --> 02:07:03.000
Was ist das Erste, was euch

02:07:03.000 --> 02:07:05.000
mal ein Emoji verrät

02:07:05.000 --> 02:07:07.000
über den Anwender?

02:07:07.000 --> 02:07:09.000
Ohne, dass du ins Detail gehen

02:07:09.000 --> 02:07:11.000
musst. Was verrät euch erstmal ein Emoji

02:07:11.000 --> 02:07:13.000
relativ sicher über den Anwender?

02:07:13.000 --> 02:07:15.000
Was

02:07:15.000 --> 02:07:17.000
er für ein Betriebssystem benutzt? Ja.

02:07:17.000 --> 02:07:19.000
Ja. Oder

02:07:19.000 --> 02:07:21.000
sagen wir mal, vielleicht auch ein bisschen was über den

02:07:21.000 --> 02:07:23.000
Browser. Aber es verrät

02:07:23.000 --> 02:07:25.000
euch in der Regel erstmal

02:07:25.000 --> 02:07:27.000
ja, das auch,

02:07:27.000 --> 02:07:29.000
aber es verrät euch erstmal sowas wie

02:07:29.000 --> 02:07:31.000
was der höchstwahrscheinlich

02:07:31.000 --> 02:07:33.000
was er für eine Plattform benutzt.

02:07:33.000 --> 02:07:35.000
Weil

02:07:35.000 --> 02:07:37.000
Emojis sehen überall unterschiedlich

02:07:37.000 --> 02:07:39.000
aus. Also man kann an Emojis relativ

02:07:39.000 --> 02:07:41.000
einfach erkennen, ob jemand Windows 10, Windows

02:07:41.000 --> 02:07:43.000
11, gut Firefox

02:07:43.000 --> 02:07:45.000
hat was eigenes, Android

02:07:45.000 --> 02:07:47.000
oder iOS benutzt. Die sehen alle

02:07:47.000 --> 02:07:49.000
ein bisschen anders aus. Und wenn jemand

02:07:49.000 --> 02:07:51.000
den Twitter Emoji Font

02:07:51.000 --> 02:07:53.000
verwendet, ist höchstwahrscheinlich, dass der Linux benutzt.

02:07:53.000 --> 02:07:55.000
Also man erkennt anhand des

02:07:55.000 --> 02:07:57.000
rein der Optik wie ein Emoji aussieht

02:07:57.000 --> 02:07:59.000
schon relativ easy, was

02:07:59.000 --> 02:08:01.000
derjenige für einen OS benutzt.

02:08:01.000 --> 02:08:03.000
Eventuell, wenn es die Firefox Emojis sind, auch

02:08:03.000 --> 02:08:05.000
was er für einen Browser benutzt. Das ist ja schon mal

02:08:05.000 --> 02:08:07.000
nicht schlecht. So. Und jetzt geht

02:08:07.000 --> 02:08:09.000
das Ganze noch, man kann auch

02:08:09.000 --> 02:08:11.000
vielleicht ganz outdated Sachen erkennen, ob die

02:08:11.000 --> 02:08:13.000
Emojis nur schwarz-weiß gemalt werden oder sowas.

02:08:13.000 --> 02:08:15.000
So.

02:08:15.000 --> 02:08:17.000
Aber, weil es

02:08:17.000 --> 02:08:19.000
mich interessiert, und ich denke nicht verkehrt

02:08:19.000 --> 02:08:21.000
ist, über sowas ein bisschen Bescheid zu wissen. Deswegen

02:08:21.000 --> 02:08:23.000
erzähle ich es euch jetzt ja, Chatge.

02:08:23.000 --> 02:08:25.000
Wir wissen, ich meine, wir müssen doch hier

02:08:25.000 --> 02:08:27.000
immerhin zumindest ein bisschen highest IQ

02:08:27.000 --> 02:08:29.000
Chat auf Twitch gerecht werden.

02:08:29.000 --> 02:08:31.000
Und ihr wisst ja, dass jeder Prime

02:08:31.000 --> 02:08:33.000
Sub den

02:08:33.000 --> 02:08:35.000
GesamteIQ des Chats steigert.

02:08:35.000 --> 02:08:37.000
Das heißt, wenn ihr noch einen Prime Sub übrig

02:08:37.000 --> 02:08:39.000
habt, ich freue mich natürlich über jeden Sub,

02:08:39.000 --> 02:08:41.000
aber ich freue mich auch, dass ihr da seid.

02:08:41.000 --> 02:08:43.000
Also auch wenn ihr keinen Prime Sub habt, ist schön,

02:08:43.000 --> 02:08:45.000
dass ihr da seid, ja.

02:08:45.000 --> 02:08:47.000
Aber ich muss ab und zu mal ein bisschen

02:08:47.000 --> 02:08:49.000
Sellout machen, so läuft das Twitch Game einfach.

02:08:49.000 --> 02:08:51.000
Und selbst, und jetzt mal ernsthaft,

02:08:51.000 --> 02:08:53.000
selbst wenn ihr einen Prime Sub habt und denkt, ey,

02:08:53.000 --> 02:08:55.000
keine Ahnung, dem Max will ich den Prime Sub nicht geben,

02:08:55.000 --> 02:08:57.000
dann gebt den Prime Sub zumindest

02:08:57.000 --> 02:08:59.000
irgendjemand anderem auf Twitch, weil

02:08:59.000 --> 02:09:01.000
es ist Blödsinn, den Prime Sub nicht rauszuhauen.

02:09:01.000 --> 02:09:03.000
Das ist quasi geschenkte

02:09:03.000 --> 02:09:05.000
4€ für Beso aus dem Monat.

02:09:05.000 --> 02:09:07.000
Nein, gut, eigentlich kriegt der, also 2€.

02:09:07.000 --> 02:09:09.000
Gestern wieder für,

02:09:09.000 --> 02:09:11.000
Dankeschön für den Sub.

02:09:11.000 --> 02:09:13.000
Ähm, was wollte ich erzählen? Genau, Browser Fingerprinting.

02:09:13.000 --> 02:09:15.000
So, als erstes mit Emojis,

02:09:15.000 --> 02:09:17.000
und das Ganze wird noch viel abgedrehter.

02:09:19.000 --> 02:09:21.000
Yuzo, Porga Subscription.

02:09:21.000 --> 02:09:23.000
Kann ich nur sagen.

02:09:23.000 --> 02:09:25.000
Nice.

02:09:25.000 --> 02:09:27.000
Nice.

02:09:27.000 --> 02:09:29.000
Sani auch wieder am Start.

02:09:29.000 --> 02:09:31.000
Und hast du die Ausbildungsstelle gekriegt?

02:09:31.000 --> 02:09:33.000
So manche Sachen merke ich mir irgendwie im Hinterkopf.

02:09:33.000 --> 02:09:35.000
So, aber nochmal zurück zu Browser Fingerprinting.

02:09:35.000 --> 02:09:37.000
Also jetzt haben wir schon mal relativ easy rausgekriegt

02:09:37.000 --> 02:09:39.000
mit Emojis, was für eine Plattform

02:09:39.000 --> 02:09:41.000
der jeweilige Anwender benutzt.

02:09:41.000 --> 02:09:43.000
Und jetzt wird's abgedreht. Man kann jetzt mit

02:09:45.000 --> 02:09:47.000
mehr oder weniger

02:09:47.000 --> 02:09:49.000
detaillierten

02:09:49.000 --> 02:09:51.000
mit mehr oder weniger

02:09:51.000 --> 02:09:53.000
detaillierten

02:09:53.000 --> 02:09:55.000
Analysen, kann man jetzt auch

02:09:55.000 --> 02:09:57.000
rausfinden, ungefähr

02:09:57.000 --> 02:09:59.000
was für eine Hardware

02:09:59.000 --> 02:10:01.000
der jeweilige Client

02:10:01.000 --> 02:10:03.000
benutzt.

02:10:03.000 --> 02:10:05.000
Und

02:10:05.000 --> 02:10:07.000
da gibt es

02:10:07.000 --> 02:10:09.000
Tabellen und da gibt es Tests,

02:10:09.000 --> 02:10:11.000
die haben mit dem Rändern von

02:10:11.000 --> 02:10:13.000
Emojis oder generell mit dem Rändern

02:10:13.000 --> 02:10:15.000
in einem Canvas Element im Browser

02:10:15.000 --> 02:10:17.000
haben die gemessen,

02:10:17.000 --> 02:10:19.000
dass du relativ gut

02:10:19.000 --> 02:10:21.000
beispielsweise sagen kannst,

02:10:21.000 --> 02:10:23.000
an der Geschwindigkeit, wie gerendert

02:10:23.000 --> 02:10:25.000
wird und

02:10:25.000 --> 02:10:27.000
an irgendwelchen Timings, wie

02:10:27.000 --> 02:10:29.000
gerendert wird und alles mögliche,

02:10:29.000 --> 02:10:31.000
kannst du relativ gut bestimmen, was für eine

02:10:31.000 --> 02:10:33.000
Grafikkarte

02:10:33.000 --> 02:10:35.000
der jeweilige User benutzt

02:10:35.000 --> 02:10:37.000
und noch viel mehr.

02:10:37.000 --> 02:10:39.000
Also du kannst, es gibt wirklich

02:10:39.000 --> 02:10:41.000
sehr viele Tricks, dass du

02:10:41.000 --> 02:10:43.000
im Browser feststellen kannst,

02:10:43.000 --> 02:10:45.000
zum Beispiel, welchen Browser

02:10:45.000 --> 02:10:47.000
benutzt der Anwender, welches Betriebssystem

02:10:47.000 --> 02:10:49.000
benutzt der Anwender, welche Hardware

02:10:49.000 --> 02:10:51.000
hat der Anwender eingebaut.

02:10:51.000 --> 02:10:53.000
Und das alles zusammengefasst,

02:10:53.000 --> 02:10:55.000
sagen wir mal, du bekommst

02:10:55.000 --> 02:10:57.000
so 7, 8 verschiedene

02:10:57.000 --> 02:10:59.000
Merkmale raus und die in Kombination

02:10:59.000 --> 02:11:01.000
sind

02:11:01.000 --> 02:11:03.000
dann, wenn nicht 100%

02:11:03.000 --> 02:11:05.000
eindeutig, aber relativ eindeutig.

02:11:05.000 --> 02:11:07.000
Überlegt euch mal,

02:11:07.000 --> 02:11:09.000
ihr habt 8, 9 verschiedene

02:11:09.000 --> 02:11:11.000
Merkmale,

02:11:11.000 --> 02:11:13.000
die auch unterschiedlich

02:11:13.000 --> 02:11:15.000
sein können, nicht nur binary.

02:11:15.000 --> 02:11:17.000
Und da

02:11:17.000 --> 02:11:19.000
gibt es sehr viele Kombinationsmöglichkeiten

02:11:19.000 --> 02:11:21.000
und wenn ihr dann jemanden findet,

02:11:21.000 --> 02:11:23.000
der zufälligerweise von einer anderen IP

02:11:23.000 --> 02:11:25.000
kommt, aber exakt die gleichen Merkmale aufweist,

02:11:25.000 --> 02:11:27.000
da könnt ihr euch

02:11:27.000 --> 02:11:29.000
relativ sicher sein,

02:11:29.000 --> 02:11:31.000
dass das wahrscheinlich der gleiche User

02:11:31.000 --> 02:11:33.000
ist.

02:11:33.000 --> 02:11:35.000
Also es geht,

02:11:35.000 --> 02:11:37.000
man kriegt das raus.

02:11:37.000 --> 02:11:39.000
Und das ist auch eher das,

02:11:39.000 --> 02:11:41.000
worauf sich Seiten verlassen, die wirklich

02:11:41.000 --> 02:11:43.000
User tracken wollen.

02:11:43.000 --> 02:11:45.000
Und die verlassen sich nicht

02:11:45.000 --> 02:11:47.000
auf die Absender-IP oder nicht nur auf die

02:11:47.000 --> 02:11:49.000
Absender-IP.

02:11:49.000 --> 02:11:51.000
Twitter-Emojis,

02:11:51.000 --> 02:11:53.000
doch unter Linux sind Twitter-Emojis sehr beliebt.

02:11:53.000 --> 02:11:55.000
Guck hier, ich habe auch Twitter-Emojis unter

02:11:57.000 --> 02:11:59.000
unter Linux.

02:12:01.000 --> 02:12:03.000
Twimoji

02:12:03.000 --> 02:12:05.000
ist eigentlich, wir müssen gerade mal kurz was gucken,

02:12:05.000 --> 02:12:07.000
Twimoji,

02:12:07.000 --> 02:12:09.000
der Twimoji-Fork

02:12:11.000 --> 02:12:13.000
ist der,

02:12:13.000 --> 02:12:15.000
wie hieß der Twimoji-Fork?

02:12:25.000 --> 02:12:27.000
Ich habe es vergessen.

02:12:27.000 --> 02:12:29.000
Es gibt nämlich

02:12:29.000 --> 02:12:31.000
den neuen Twimoji-Fork.

02:12:33.000 --> 02:12:35.000
Hat irgendjemand eine Ahnung?

02:12:35.000 --> 02:12:37.000
Ja, das hier, da ist er doch.

02:12:37.000 --> 02:12:39.000
Twimoji-Fork.

02:12:39.000 --> 02:12:41.000
2015 ist der immer noch nicht drin.

02:12:41.000 --> 02:12:43.000
Es gibt nämlich einen Twimoji-Fork,

02:12:43.000 --> 02:12:45.000
der auch die neuesten Unicode-Emojis

02:12:45.000 --> 02:12:47.000
unterstützen wird.

02:12:47.000 --> 02:12:49.000
Warum ist das notwendig?

02:12:49.000 --> 02:12:51.000
Weil Twitter

02:12:51.000 --> 02:12:53.000
alle, die an diesem Emoji-Fond gearbeitet haben,

02:12:53.000 --> 02:12:55.000
entlassen hat.

02:12:55.000 --> 02:12:57.000
Dementsprechend gibt es

02:12:57.000 --> 02:12:59.000
keine Updates mehr für

02:12:59.000 --> 02:13:01.000
für Twimoji.

02:13:01.000 --> 02:13:03.000
Und wir haben kein Unicode-15.

02:13:03.000 --> 02:13:05.000
Aber,

02:13:05.000 --> 02:13:07.000
ich meine, die haben immer noch

02:13:07.000 --> 02:13:09.000
kein Goose-Emoji.

02:13:09.000 --> 02:13:11.000
Ich weiß nicht, wie es da aussieht.

02:13:17.000 --> 02:13:19.000
Aber es sieht so aus, als hätten die

02:13:19.000 --> 02:13:21.000
immer noch einige Emojis nicht drin.

02:13:21.000 --> 02:13:23.000
Ja.

02:13:23.000 --> 02:13:25.000
Ist halt blöd, ne?

02:13:25.000 --> 02:13:27.000
Wenn Twitter die alle

02:13:27.000 --> 02:13:29.000
rausschmeißt.

02:13:29.000 --> 02:13:31.000
Guck mal, zuletzt im Januar aktualisiert.

02:13:31.000 --> 02:13:33.000
Da wird es keine Updates mehr so geben.

02:13:33.000 --> 02:13:35.000
Ohne weiteres.

02:13:35.000 --> 02:13:37.000
Ad-Support Unicode International

02:13:37.000 --> 02:13:39.000
gibt es nicht mehr.

02:13:39.000 --> 02:13:41.000
Also, das ist halt

02:13:41.000 --> 02:13:43.000
auch so ein Ding.

02:13:43.000 --> 02:13:45.000
Ja, und damit kann man theoretisch auch Sachen rausbekommen

02:13:45.000 --> 02:13:47.000
über den User, wo wir gerade

02:13:47.000 --> 02:13:49.000
dabei sind.

02:13:51.000 --> 02:13:53.000
Du hast einen Denkfehler.

02:13:53.000 --> 02:13:55.000
Emojis werden auf dem Client gerendert.

02:13:55.000 --> 02:13:57.000
Ja, das ist ja gerade das Ding.

02:13:57.000 --> 02:13:59.000
Das ist ja auch der Grund, warum das funktioniert.

02:13:59.000 --> 02:14:01.000
Ja, das ist richtig.

02:14:01.000 --> 02:14:03.000
Aber das ist kein Denkfehler.

02:14:03.000 --> 02:14:05.000
Das ist Voraussetzung dafür, dass das überhaupt funktioniert,

02:14:05.000 --> 02:14:07.000
was ich gerade beschrieben habe.

02:14:07.000 --> 02:14:09.000
Der Client muss das rendern.

02:14:09.000 --> 02:14:11.000
Du willst ja auch was über den Client rauskriegen und nicht

02:14:11.000 --> 02:14:13.000
über deinen Server.

02:14:19.000 --> 02:14:21.000
Du hast die Ausbildungsstelle gekriegt.

02:14:21.000 --> 02:14:23.000
Exzellent.

02:14:23.000 --> 02:14:25.000
Das ist...

02:14:25.000 --> 02:14:27.000
Ja, eigentlich auch.

02:14:29.000 --> 02:14:31.000
Jetzt gibt es sogar mehr Geld, ja dann.

02:14:31.000 --> 02:14:33.000
Das ist die beste Kombination.

02:14:41.000 --> 02:14:43.000
Ja, es gibt noch ein paar andere Möglichkeiten,

02:14:43.000 --> 02:14:45.000
aber Canvas ist, glaube ich, das beliebteste.

02:14:47.000 --> 02:14:49.000
Ja gut, Javascript komplett blocken

02:14:49.000 --> 02:14:51.000
ist halt nicht praktikabel, weil kaum eine Webseite

02:14:51.000 --> 02:14:53.000
noch funktioniert ohne Javascript.

02:14:55.000 --> 02:14:57.000
29 Monate.

02:14:57.000 --> 02:14:59.000
Exzellent.

02:15:01.000 --> 02:15:03.000
Max ans Trinken erinnern.

02:15:03.000 --> 02:15:05.000
So, jetzt...

02:15:05.000 --> 02:15:07.000
Ich weiß, ich habe mich jetzt sehr lange sidetracked lassen

02:15:07.000 --> 02:15:09.000
von diesem Video hier.

02:15:09.000 --> 02:15:11.000
Aber ich hoffe,

02:15:11.000 --> 02:15:13.000
es hat euch trotzdem interessiert.

02:15:13.000 --> 02:15:15.000
Ich denke, es war für die einen oder anderen was Spannendes dabei.

02:15:17.000 --> 02:15:19.000
Exzellent.

02:15:19.000 --> 02:15:21.000
Weiter geht's.

02:15:23.000 --> 02:15:25.000
Oh, oh, oh, jetzt hier.

02:15:25.000 --> 02:15:27.000
Javascriptchen.

02:15:29.000 --> 02:15:31.000
Hat eine gute Möglichkeit,

02:15:31.000 --> 02:15:33.000
eine gute Sammlung.

02:15:33.000 --> 02:15:35.000
Ja, es gibt einige Seiten, die sowas haben,

02:15:35.000 --> 02:15:37.000
aber die kann ich jetzt hier nicht im Stream aufmachen,

02:15:37.000 --> 02:15:39.000
weil die dann auch solche Sachen leaken wie

02:15:39.000 --> 02:15:41.000
IP und alle möglichen Dinger,

02:15:41.000 --> 02:15:43.000
die ich vielleicht jetzt nicht so unbedingt

02:15:43.000 --> 02:15:45.000
public haben will.

02:15:47.000 --> 02:15:49.000
Ja.

02:15:49.000 --> 02:15:51.000
Ja, danke für die Subs.

02:15:51.000 --> 02:15:53.000
Wir hatten das Glück gehabt und wer hat gedodged?

02:15:53.000 --> 02:15:55.000
Gutbeutel. Ja, der hat schon mal...

02:15:55.000 --> 02:15:57.000
Der sackt alles ein, oder?

02:15:57.000 --> 02:15:59.000
Der Cartman Nuxa

02:15:59.000 --> 02:16:01.000
Bags vor... Ach, guck mal.

02:16:01.000 --> 02:16:03.000
Hat er Glück gehabt. Der ist erst seit ein paar Tagen hier im Stream

02:16:03.000 --> 02:16:05.000
und gleich schon, gleich schon

02:16:05.000 --> 02:16:07.000
den Sub gecatcht.

02:16:07.000 --> 02:16:09.000
Phaseron, der ist öfters da. Den kenne ich vom Namen her.

02:16:09.000 --> 02:16:11.000
Der stellt's dir öfters rum.

02:16:11.000 --> 02:16:13.000
Und die Gartenkralle

02:16:13.000 --> 02:16:15.000
ist auch am Start. Danke für den Sub.

02:16:15.000 --> 02:16:17.000
Exzellent, exzellent.

02:16:19.000 --> 02:16:21.000
Okay, gucken wir das Video mal weiter.

02:16:21.000 --> 02:16:23.000
Next.

02:16:23.000 --> 02:16:25.000
Lack.

02:16:25.000 --> 02:16:27.000
Lack-Champ.

02:16:33.000 --> 02:16:35.000
Ja.

02:16:43.000 --> 02:16:45.000
Naja, die Informationen vom...

02:16:45.000 --> 02:16:47.000
Wie gesagt, ich hab schon angehört, ich werde meckern.

02:16:47.000 --> 02:16:49.000
Die Informationen vom Server werden natürlich nie

02:16:49.000 --> 02:16:51.000
direkt in ein Bild umgewandelt.

02:16:51.000 --> 02:16:53.000
Ja, Blödsinn.

02:16:53.000 --> 02:16:55.000
Ist ja nicht so, als würde der Server euer Game rendern.

02:16:55.000 --> 02:16:57.000
Aber wir wissen, was gemeint ist.

02:16:57.000 --> 02:16:59.000
GS Paul, danke schön für den Sub.

02:17:27.000 --> 02:17:29.000
Spiele laufen auch zum größten Teil

02:17:29.000 --> 02:17:31.000
über UDP.

02:17:31.000 --> 02:17:33.000
Er meint nicht, dass das Paket neu angefordert wird.

02:17:33.000 --> 02:17:35.000
Er meint, dass das Game sich irgendwas ausdenkt,

02:17:35.000 --> 02:17:37.000
was Sinn macht.

02:17:37.000 --> 02:17:39.000
So nach dem Motto, ich hab als letzte Information,

02:17:39.000 --> 02:17:41.000
der Character läuft gerade mit diesem Speed

02:17:41.000 --> 02:17:43.000
in diese Richtung,

02:17:43.000 --> 02:17:45.000
dann füllt er einfach das hier auf mit

02:17:45.000 --> 02:17:47.000
der Character läuft halt einfach weiter in diese Richtung,

02:17:47.000 --> 02:17:49.000
bis ich die nächste Information kriege.

02:17:49.000 --> 02:17:51.000
Wenn das natürlich zu oft passiert,

02:17:51.000 --> 02:17:53.000
kann man sich vorstellen,

02:17:53.000 --> 02:17:55.000
dann ruckelt's halt ein bisschen rum.

02:17:55.000 --> 02:17:57.000
Ruckeln ist ja nicht lag,

02:17:57.000 --> 02:17:59.000
aber ihr wisst, was ich meine.

02:18:01.000 --> 02:18:03.000
Dann füllt er das auf,

02:18:03.000 --> 02:18:05.000
Character läuft weiter in die Richtung,

02:18:05.000 --> 02:18:07.000
Character läuft weiter in die Richtung,

02:18:07.000 --> 02:18:09.000
und irgendwann kommt dann wieder ein Package vom Server durch,

02:18:09.000 --> 02:18:11.000
wo drin steht, Moment, der ist gar nicht weiter

02:18:11.000 --> 02:18:13.000
in die Richtung gelaufen, sondern in die Richtung,

02:18:13.000 --> 02:18:15.000
und dann macht's dann auf einmal,

02:18:15.000 --> 02:18:17.000
läuft weiter, läuft weiter, läuft weiter,

02:18:17.000 --> 02:18:19.000
jetzt ist er auf einmal da unten.

02:18:19.000 --> 02:18:21.000
Also, ja,

02:18:21.000 --> 02:18:23.000
das stimmt schon, was der hier erzählt hat.

02:18:23.000 --> 02:18:25.000
Ja, das stimmt schon, was der hier erzählt,

02:18:25.000 --> 02:18:27.000
das ist eigentlich ganz gut dargestellt.

02:18:49.000 --> 02:18:51.000
Ja.

02:18:53.000 --> 02:18:55.000
Ja.

02:18:57.000 --> 02:18:59.000
Ja.

02:18:59.000 --> 02:19:01.000
Das ist halt, das ist so ein bisschen was,

02:19:01.000 --> 02:19:03.000
wo sich das die letzten Jahre über,

02:19:03.000 --> 02:19:05.000
die letzten Jahre ist jetzt übertrieben,

02:19:05.000 --> 02:19:07.000
ist schon deutlich länger,

02:19:07.000 --> 02:19:09.000
sich ein bisschen verschoben hat, ja.

02:19:09.000 --> 02:19:11.000
Früher war Server State,

02:19:11.000 --> 02:19:13.000
das, sagen wir mal so,

02:19:13.000 --> 02:19:15.000
das, wie der Server die Dinger gesehen hat,

02:19:15.000 --> 02:19:17.000
das einzig wahre.

02:19:17.000 --> 02:19:19.000
Könntest du das Video reinposten?

02:19:19.000 --> 02:19:21.000
Ja.

02:19:21.000 --> 02:19:23.000
Städtisch gemacht. So nach dem Motto,

02:19:23.000 --> 02:19:25.000
da wurde hingeschossen,

02:19:25.000 --> 02:19:27.000
Server guckt, ist der Typ bei meinem State gerade

02:19:27.000 --> 02:19:29.000
da? Nö, vorbeigeschossen,

02:19:29.000 --> 02:19:31.000
obwohl du drauf warst.

02:19:31.000 --> 02:19:33.000
Man ist jetzt ein bisschen da hingegangen, das alles etwas

02:19:33.000 --> 02:19:35.000
großzügiger zu machen.

02:19:35.000 --> 02:19:37.000
Nämlich, dass da nicht nur übermittelt

02:19:37.000 --> 02:19:39.000
wird, so nach dem Motto, ja, ich habe da oder

02:19:39.000 --> 02:19:41.000
hingeschossen, sondern, vielleicht auch noch,

02:19:41.000 --> 02:19:43.000
ich habe da oder hingeschossen, und bei mir

02:19:43.000 --> 02:19:45.000
habe ich getroffen. Ja, und dann kann

02:19:45.000 --> 02:19:47.000
der Server dann entscheiden, okay,

02:19:47.000 --> 02:19:49.000
wie groß ist die Latenz, will ich das noch beachten,

02:19:49.000 --> 02:19:53.440
will ich das nicht beachten und das war so die Verschiebung, die wir die letzten

02:19:53.440 --> 02:19:56.960
zehn Jahre über gesehen haben, auch so ein bisschen von reinem Serverseitigem

02:19:56.960 --> 02:20:01.400
State zu, ja immer noch, Master Server muss letztendlich entscheiden, was Sache

02:20:01.400 --> 02:20:05.600
ist, aber auch mit Client-Side-Hit-Detection immer mehr, immer präsenter.

02:20:05.600 --> 02:20:11.440
Was dann schon das Spiel auch für Leute mit bisschen höherer Latenz besser

02:20:11.440 --> 02:20:16.800
spielbar gemacht hat, aber es noch mehr dazu geführt hat, zumindest wenn das

02:20:16.800 --> 02:20:23.240
übertrieben wurde, wie da noch Sachen akzeptiert wurden, für teilweise, ich bin

02:20:23.240 --> 02:20:28.960
schon um zwei Ecken und auf einmal werde ich zurückgeportet und gekillt.

02:20:28.960 --> 02:20:33.440
Es gab ja zwischenzeitlich, wenn es übertrieben wurde, sogar mal Spiele, da

02:20:33.440 --> 02:20:37.440
hattest du einen Vorteil, wenn du mit 400er Ping spielst und sowas, das sollte

02:20:37.440 --> 02:20:40.360
dann nun wirklich nett sein.

02:20:42.000 --> 02:20:46.280
Wenn ich also auf wen schieße, dann soll direkt zu sehen sein, was passiert.

02:20:46.280 --> 02:20:49.440
Ja gut, Lag-Switches war nochmal was ganz was anderes.

02:20:49.440 --> 02:20:54.360
Lag-Switches sind eigentlich so Dinger, die sollten eigentlich gar nicht

02:20:54.360 --> 02:21:00.520
funktionieren. Also die ursprünglichen Lag-Switches in Call of Duty

02:21:00.520 --> 02:21:11.160
waren ja wirklich teilweise Hardware-Modifikationen, die das Kabel zum

02:21:11.160 --> 02:21:16.040
Empfangen von Daten unterbrochen haben und das vom Senden von Daten

02:21:16.040 --> 02:21:21.560
quasi intakt gelassen haben. So nach dem Motto, ich kann senden, wie ich mich

02:21:21.560 --> 02:21:24.720
bewege und wie ich Damage mache, ich kann aber keine Damage auf mich mehr

02:21:24.720 --> 02:21:30.080
empfangen. Dass sowas überhaupt geht, ist schon eine Fail-Implementierung

02:21:30.080 --> 02:21:32.880
sondergleichen.

02:21:37.760 --> 02:21:43.280
Ja, zumindest war das in Call of Duty damals so.

02:21:44.280 --> 02:21:46.280
Ja.

02:21:50.120 --> 02:21:58.440
Also es gab damals zu Xbox-Zeiten tatsächlich reale, reale physische Lag-Switches.

02:21:58.440 --> 02:22:04.640
Dass das überhaupt funktioniert, ist halt schon bescheuert.

02:22:04.640 --> 02:22:08.600
Das funktioniert prinzipiell nur bei UDP-Packages, aber selbst das könnte man

02:22:08.720 --> 02:22:13.520
easy verhindern. Du könntest zum Beispiel irgendwelche Server-Messages

02:22:13.520 --> 02:22:18.720
einbauen, auf die dein Client replyen muss und wenn er so und so viele Replies

02:22:18.720 --> 02:22:22.000
verpasst, dann wird er nicht mal beachtet. Also man kann da durchaus

02:22:22.000 --> 02:22:25.400
Sicherheitsmechanismen, aber das hatte Call of Duty halt damals, gerade

02:22:25.400 --> 02:22:31.200
als es halt noch diese irgendeine Xbox-Hosted-Variante hatte,

02:22:31.720 --> 02:22:36.520
konntest du halt komplett vergessen. Das waren Zeiten, da waren physische

02:22:36.520 --> 02:22:38.560
Lag-Switche tatsächlich ein Ding.

02:23:06.520 --> 02:23:16.680
Trotzdem solltest du immer, wenn ihr Head-on-Head ballert, ja, gewinnen.

02:23:18.680 --> 02:23:20.680
Wenn es gescheit gemacht ist.

02:23:20.840 --> 02:23:25.240
Und ein Spieler mit hohem Ping dich trifft auf seinem Bildschirm, dann wird

02:23:25.240 --> 02:23:29.560
der Hit registriert. Egal, wo du tatsächlich bist. Damit das nicht zu

02:23:29.560 --> 02:23:34.560
heftig wird, haben einige Spiele hier ein Limit. Ich glaube, Overwatch hat es

02:23:34.560 --> 02:23:39.240
glaube ich ab 100 oder 150 Millisekunden Zeit registriert wird, sondern Server-Side.

02:23:39.240 --> 02:23:43.680
Das bedeutet, wenn du in manchen Spielen einen sehr hohen Ping hast und scheinbar

02:23:43.680 --> 02:23:47.920
zwar triffst, registrieren deine Schüsse einfach nicht. Um zu treffen, müsstest du

02:23:47.920 --> 02:23:52.000
an die tatsächliche Position des Gegners laut Server-Daten schießen. Also

02:23:52.000 --> 02:23:55.920
eigentlich ein bisschen vor dem Gegner. Das Video ist wirklich nicht schlecht gemacht.

02:23:55.920 --> 02:23:59.080
Muss ich jetzt mal sagen. Wie gesagt, ich habe es schon angekündigt, ich werde ein bisschen meckern.

02:23:59.080 --> 02:24:04.520
Das Video ist nicht schlecht gemacht. Kannst nichts sagen. Also, die haben sich

02:24:04.520 --> 02:24:08.080
wirklich Mühe gegeben, das so zu verpacken, ohne jetzt so übertriebenen

02:24:08.080 --> 02:24:12.000
Blödsinn zu erzählen, um es gar so krass zu vereinfachen. Ist vollkommen in Ordnung.

02:24:12.000 --> 02:24:18.720
Also kann man sagen, ist Wobblers approved. Und wer jetzt glaubt, es ist unfair mit hohem

02:24:18.720 --> 02:24:21.720
Ping zu spielen, weil ja Leute... Ich weiß, Ragnar, deswegen habe ich ja gesagt,

02:24:21.720 --> 02:24:24.600
ich werde jetzt ein bisschen meckern. Aber insgesamt ist das echt nicht schlecht gemacht.

02:24:24.600 --> 02:24:29.960
Du schon weg bist, dann denk mal umgekehrt. Wenn ihr diejenigen seid, die zuerst um eine

02:24:29.960 --> 02:24:35.160
Ecke kommen, dann seht ihr den High-Ping-Spieler lange, bevor er euch sieht. Ihr könnt den ersten

02:24:35.160 --> 02:24:40.520
Schuss abgeben, bevor ihr überhaupt am Bildschirm des Gegners erscheint. In Valorant ist es zum

02:24:40.520 --> 02:24:45.160
Beispiel tatsächlich so, dass der Spieler mit dem besseren Ping den Kill macht, wenn beide

02:24:45.160 --> 02:24:49.160
gleichzeitig schießen. Ja, finde ich aber auch irgendwo sinnig. Klar, kannst du sehen, in Overwatch

02:24:49.160 --> 02:24:53.960
haben sie es auch ein bisschen gebuffert und alles. Aber ich finde, es sollte irgendwie so sein. Weil

02:24:53.960 --> 02:24:58.120
ganz im Ernst, die Leute sollen halt auch auf dem Server spielen, wo sie gescheite Connection zu

02:24:58.120 --> 02:25:03.080
haben. Ja, wenn wir hier im Bereich von 50 Millisekunden reden, also sage ich nichts

02:25:03.080 --> 02:25:08.320
dagegen. Aber wenn er es teilweise dann auf 300 Millisekunden raucht, das kann es nicht sein.

02:25:08.600 --> 02:25:10.360
Ja, das fühlt sich scheiße an.

02:25:10.360 --> 02:25:17.760
Der eigentlich korrekte Input des High-Ping-Spielers wird einfach durch den Ton...

02:25:17.760 --> 02:25:23.120
Ich kann gerne mal ein Video machen, das noch tiefer geht. Nee, kann ich nicht, weil erstens

02:25:23.120 --> 02:25:25.920
müsste ich mich dann selbst viel zu sehr in der Tiefe damit zu beschäftigen, da hätte ich auch

02:25:25.920 --> 02:25:31.000
keinen Mist erzählen. Und zweitens sind solche Videos enorm aufwendig. Und da bin ich zu faul

02:25:31.000 --> 02:25:34.240
für, weil solche Videos auch kaum geguckt werden, witzigerweise. Das ist halt so ein bisschen das

02:25:34.240 --> 02:25:38.560
Dilemma, was man auch mit Technik-Videos auf YouTube hat. Wenn man wirklich gute,

02:25:38.560 --> 02:25:47.800
tiefgreifende Erklärvideos macht, die werden oftmals im Verhältnis von Aufwand zu Leuten,

02:25:47.800 --> 02:25:53.800
die das gucken, viel weniger geschaut. Natürlich könnte man jetzt sagen,

02:25:53.800 --> 02:25:56.120
ich mache das trotzdem, aber ich glaube, da bin ich zu faul für.

02:25:56.120 --> 02:26:01.040
Gecancelt. Manche Spiele machen das aber auch anders.

02:26:01.040 --> 02:26:05.640
Neues Video. Ich habe es schon hochgeladen. Als nächstes habe ich einen Zusammenschnitt

02:26:05.640 --> 02:26:11.680
anfertigen lassen über den Half-Life-Speedrun, den wir geguckt haben. Den werde ich als nächstes

02:26:11.680 --> 02:26:17.000
hochladen. Geht 38 Minuten. Und danach muss ich tatsächlich mal was über Battlefield 6 Season...

02:26:17.000 --> 02:26:27.240
Battlefield 2042 Season... Nein! Battlefield 2042 Season 5 und das Season 6 Ankündigung erzählen.

02:26:27.360 --> 02:26:27.840
Meine Güte.

02:26:27.840 --> 02:26:33.760
... Spielern gekillt werden, die eigentlich schon tot sind. Auf all den Lag, den wir bisher hatten,

02:26:33.760 --> 02:26:38.640
kommt aber jetzt noch eine letzte Sache drauf. Die Geschwindigkeit, in der das Server selbst

02:26:38.640 --> 02:26:41.600
updatet, beziehungsweise Paketempfänger... Ich dachte, jetzt wird das sowas wie Tickrate

02:26:41.600 --> 02:26:45.240
oder sowas haben. Ich dachte, jetzt kommt noch Input-Lag oder sowas mit dabei. Weil dann wäre

02:26:45.240 --> 02:26:49.320
es echt abgedreht geworden, wenn jetzt noch sowas kommt wie Refresh-Rate vom Bildschirm,

02:26:49.320 --> 02:26:54.000
Rendering, Maus-Input und so weiter. Da kannst du eine komplette Wissenschaft draus machen.

02:26:54.000 --> 02:26:59.600
... und wieder schickt. Ihr kennt das vielleicht als Tickrate. Manche Games geben es aber auch

02:26:59.600 --> 02:27:05.200
einfach in Hertz an. Das ist die Zeit, die der Server braucht, um alle Pakete zu öffnen,

02:27:05.200 --> 02:27:10.560
die Infos zu sammeln, beziehungsweise miteinander abzugleichen und wieder an die Spieler loszuschalten.

02:27:10.560 --> 02:27:16.000
Normal sind heutzutage Tickrates von 64 Millisekunden oder bei manchen Games auch

02:27:16.000 --> 02:27:23.320
als 60 Hertz bezeichnet. Das sind 60 Pakete pro Sekunde und damit 16,66 Millisekunden

02:27:23.320 --> 02:27:30.360
zwischen jedem Paket als zusätzlicher Lag. Das heißt, ihr bekommt nur alle 16,6 Millisekunden

02:27:30.360 --> 02:27:37.480
ein Paket geschickt und die Zeit bis zum nächsten Paket ist zusätzlicher Lag, denn da passiert nichts

02:27:37.480 --> 02:27:44.840
Neues. Wird die Tickrate weniger, zum Beispiel 30 Hertz, kommt dementsprechend mehr Lag und Top für alle dazu.

02:27:44.840 --> 02:27:50.640
Aber da geht es eigentlich um wenige Millisekunden. Viele meinen zum Beispiel, dass ein Upgrade von

02:27:50.640 --> 02:27:59.480
64 Tick auf 128 Tick alles besser machen würde und die haben zwar schon recht, allerdings halt nur ein wenig recht.

02:27:59.480 --> 02:28:07.760
Naja, das kommt drauf an. Es hat manchmal auch Auswirkungen darauf, wie das Spiel selbst Sachen

02:28:07.760 --> 02:28:14.000
interpretiert. Also ich weiß nicht, ob es in CS immer noch so ist, aber ich weiß, dass es definitiv

02:28:14.360 --> 02:28:21.400
in CS mal so war, dass bestimmte Movement Tricks gar nicht möglich waren mit der normalen. Ich habe mal ein Video

02:28:21.400 --> 02:28:27.680
geguckt von irgendeinem Pro, der das gezeigt hat. Der hat gezeigt, dass manche Movement Tricks,

02:28:27.680 --> 02:28:32.000
irgendwelche Sprünge von irgendeinem Autodach auf irgendeinem Mauer und sowas, dass die mit der

02:28:32.000 --> 02:28:37.480
normalen Matchmaking Tickrate gar nicht möglich sind oder nur sehr unreliable möglich sind,

02:28:37.480 --> 02:28:44.600
aber mit 128 Tickrate tatsächlich relativ konsistent ausgeführt werden können. Also macht

02:28:44.600 --> 02:28:52.000
schon einen Unterschied. Also es kommt ein bisschen darauf an, wie das Spiel das am Ende sich verhält.

02:28:52.000 --> 02:28:57.840
Natürlich auf den ersten Blick macht es jetzt nicht so den krassen Unterschied und ich würde auch sagen,

02:28:58.160 --> 02:29:07.480
je nach Game ist es auch nicht wirklich. Also zum Beispiel, ob jetzt ein Battlefield mit 64 Tick oder

02:29:07.480 --> 02:29:16.040
mit 128 Tickrate läuft, naja, das ist wahrscheinlich nicht so der große Unterschied. Battlefield ist

02:29:16.040 --> 02:29:22.880
ja auch was, wo es weniger jetzt dieses 1-on-1 auf den Kopf geklickt gibt. Das ist wahrscheinlich

02:29:22.880 --> 02:29:29.000
nicht so das Ding. Und man hat es bei Venice gesehen, dass es gab 128 Tickrate Surfer, die hatten

02:29:29.000 --> 02:29:44.360
aber ultra CPU Anforderungen wohl. Es ist immer sinnvoll, so viel FPS zu haben wie möglich. Also

02:29:44.360 --> 02:29:50.200
erst mal zumindest bis zu deiner Monitor Refresh Rate, aber selbst da drauf macht es noch Sinn.

02:29:50.360 --> 02:29:53.200
Also eigentlich ist mehr FPS immer besser.

02:29:58.520 --> 02:30:05.640
Und ansonsten FPS und Tickrate, gut, nachdem dein Monitor nicht gesunkt ist mit der Server Tickrate,

02:30:05.640 --> 02:30:23.920
also umso mehr FPS, umso besser. Warum High Refresh Max FPS? Naja, also das ist ein ähnlicher Grund,

02:30:23.920 --> 02:30:27.920
das ist ein ähnlicher Grund, wie das es bei 60 Hertz Monitoren auch sinnvoll macht,

02:30:27.920 --> 02:30:33.640
die sinnvoll ist, durchaus die Spiele in höhere Framerate zu rendern. Also erstens ist das ja

02:30:33.640 --> 02:30:41.840
nicht gesunkt aneinander. Nur weil ein Server mit 60 Manisekunde Refresh und euer Game 60 Manisekunde

02:30:41.840 --> 02:30:47.520
das Bild neu aufbaut, ist das ja nicht gesunkt. Wie soll das auch gehen zwischen 32, 64 Spieler.

02:30:47.520 --> 02:30:55.200
Und umso schneller jetzt euer lokaler FPS und auch lokale Refresh Rate vom Monitor ist, je früher

02:30:55.200 --> 02:31:01.320
seht ihr natürlich auch ein Update. Weil es kann ja trotzdem sein, dass gerade bei euch der Refresh

02:31:01.320 --> 02:31:08.280
durch ist und jetzt neue Informationen vom Server kommen und dann müsst ihr auf den nächsten Refresh

02:31:08.280 --> 02:31:15.320
warten. Unabhängig davon. Also wie gesagt, das ist ja nicht direkt gesunkt. Und so ist es auch, wenn

02:31:15.320 --> 02:31:19.520
ihr euer Game schneller rendert, als euer Monitor anzeigen kann. Wenn euer Game schneller rendert,

02:31:19.520 --> 02:31:27.440
als der Monitor anzeigen kann, dann ist euer Game State quasi schon aktueller am Zeitpunkt dran,

02:31:27.440 --> 02:31:37.520
am echten Zeitpunkt dran, wenn der nächste Monitor Refresh kommt. Also das macht schon Sinn,

02:31:37.520 --> 02:31:46.000
dass in der Regel mit low Graphics und so viel FPS wie möglich. Das macht eigentlich fast immer

02:31:46.000 --> 02:31:50.480
Sinn. Also gerade in Spielen, die Multiplayer sind, die ein bisschen competitive sind, da würde ich

02:31:50.480 --> 02:31:58.400
auch sagen, wie Battlefield, darunter zählen. Mehr FPS ist in der Regel immer besser. Pauschal,

02:31:58.400 --> 02:31:59.640
kann man das eigentlich so sagen.

02:31:59.640 --> 02:32:10.120
Ich recht, denn der Unterschied ist wirklich, wirklich gering. Ungefähr 7 Millisekunden hätten

02:32:10.120 --> 02:32:17.160
wir dadurch weniger Lag. Ob das wirklich viele Probleme löst? Naja, zumindest ein paar kleine

02:32:17.280 --> 02:32:23.200
Probleme. Oder durchschnittliche Probleme. Dass wir also manchmal hinter der Deckung gekillt werden

02:32:23.200 --> 02:32:27.840
oder unsere Shots, wo wir eigentlich drauf waren, nicht zählen, ist einfach notwendig,

02:32:27.840 --> 02:32:32.400
damit überhaupt online sinnvoll miteinander gespielt werden kann. Die Verzögerungen sind

02:32:32.400 --> 02:32:36.960
teilweise naturgegeben wegen der Geschwindigkeit, in der Daten nun mal maximal von A nach B kommen

02:32:36.960 --> 02:32:42.160
und teilweise künstlich, damit auch die Spieler Spaß haben können, die nicht zufällig direkt

02:32:42.160 --> 02:32:46.640
neben dem Gameserver sitzen. Aber wir haben eine interessante Idee bekommen, durch eine neue

02:32:46.760 --> 02:32:52.120
Technologie, die momentan nur in Fighting Games verwendet wird. Dort wird die Zukunft vorhergesagt,

02:32:52.120 --> 02:32:54.640
um Lag zu eliminieren. Ja, wirklich.

02:32:54.640 --> 02:32:58.440
Moment, ich dachte, ich dachte, das geht nur bei Google Stadia, Negativ-Latency.

02:32:58.440 --> 02:33:07.480
Wie, das können andere jetzt auf einmal auch? Was, glaub ich nicht. Aber solche Prediction-Sachen,

02:33:07.480 --> 02:33:14.840
also ich würde, ich würde mal behaupten, dass Fighting Games, also gut, in Fighting Games bietet

02:33:14.840 --> 02:33:19.200
sich es wahrscheinlich an. Es ist ganz klar, One-on-One und das Moveset ist irgendwie begrenzt

02:33:19.200 --> 02:33:23.720
und das, was passieren kann, ist begrenzt. Also dieses Zukunft-Predicten, dass es in Fighting Games

02:33:23.720 --> 02:33:29.720
angewandt wird, wundert mich jetzt nicht. Aber ich würde mal behaupten, das ist nicht das Einzige,

02:33:29.720 --> 02:33:34.840
wo man zumindest so Sachen in der Richtung schon probiert oder probiert hat.

02:33:39.120 --> 02:33:44.080
Stellt euch mal vor, es gibt ein Delay auf eine Animation eines Schlags. Wenn euer Gegner dann

02:33:44.080 --> 02:33:49.240
wirklich die ganze Animation erst verspätet sieht, wird das Ganze unmöglich zu spielen.

02:33:49.240 --> 02:33:53.880
Aber was, wenn man einfach den Delay vorne von der Animation abschneidet und sie mittendrin

02:33:53.880 --> 02:33:59.880
beginnen lässt? Klingt komisch, sieht man aber im Full-Speed überhaupt nicht. Dieses System nimmt

02:33:59.880 --> 02:34:04.320
außerdem vor den Inputs den nächsten wahrscheinlichen Schritt an und zeigt ihm den Gegner.

02:34:04.320 --> 02:34:08.800
Momentan nimmt das System einfach an, dass das, was man gerade macht, auch das nächste ist,

02:34:08.800 --> 02:34:12.720
was man macht. Das heißt, wenn ich gerade stehe, nimmt das Game an, dass ich auch im

02:34:12.720 --> 02:34:17.640
nächsten Frame noch stehe. Klingt sehr simpel, ist aber bei Fighting Games ein Game Changer.

02:34:17.640 --> 02:34:23.040
Was wir jetzt in den Raum stellen, ist, dass mit der aktuellen Entwicklung von AI das auch bei

02:34:23.040 --> 02:34:30.360
allen anderen Games möglich sein könnte. Könnte eine AI sinnvoll? Also den Zusammenhang würde

02:34:30.360 --> 02:34:35.280
ich jetzt erst mal nicht sehen so richtig. Und mit guter Trefferquote die nächsten Schritte

02:34:35.280 --> 02:34:39.600
der Spieler vorhersagen? Könnten wir dann, auch wenn es im Hintergrund Lag gibt,

02:34:39.640 --> 02:34:45.600
ihn optisch fürs menschliche... Also ich sehe den Zusammenhang zwischen AI und...

02:34:45.600 --> 02:34:47.720
...weiß nicht...

02:34:51.040 --> 02:34:55.600
...weniger AI, was wir uns jetzt in Form von Chat-GPT vorstellen...

02:35:00.760 --> 02:35:06.040
...was ja immer um Sachen geht, die schon passiert sind. So dieses Zukunftsvoraussagen, klar. Ich meine,

02:35:06.080 --> 02:35:13.480
guckt euch mal an, wie Schachcomputer und Schachprogramme seit Jahrzehnten funktionieren.

02:35:13.480 --> 02:35:21.160
Da wird versucht, die Zukunft vorauszusagen. Also umso mehr die, ich glaube Zugtiefe nennt

02:35:21.160 --> 02:35:27.680
sich das dort, umso besser ist so ein Schachprogramm. Ja, das ist theoretisch sicherlich

02:35:27.680 --> 02:35:34.360
auch in vielen anderen Games möglich, aber das muss ja immer noch on the fly für den aktuellen

02:35:34.400 --> 02:35:41.640
State irgendwie berechnet werden. Du wirst nie eine komplette Partie Battlefield komplett lösen

02:35:41.640 --> 02:35:48.880
können. Also komplett lösen würde ja bedeuten, du hast den State, den eine Partie Battlefield

02:35:48.880 --> 02:35:55.640
haben kann. 32 vs. 32 Caspian Border. Wenn du das komplett lösen würdest, bedeutet das,

02:35:55.640 --> 02:36:02.240
sobald das Spiel anfängt, bis zum Ende des Spiels, du hast alle nur erdenklichen Kombinationen

02:36:02.400 --> 02:36:10.800
im Vorfeld ausgerechnet. Und das geht offensichtlich nicht bei einer Partie Battlefield.

02:36:10.800 --> 02:36:20.840
Jede kleinste Pixelbewegung von jedem der Spieler, jede Aktion, das zieht eine

02:36:20.840 --> 02:36:27.760
Trillionenfache andere Möglichkeiten nach sich. Also das kannst du nicht im Vorfeld komplett

02:36:27.880 --> 02:36:35.440
durchrechnen. Es gibt Spiele, das geht das. Ich glaube Mühle ist komplett gelöst. Also 4

02:36:35.440 --> 02:36:42.080
gewinnt ist auf jeden Fall komplett gelöst, das weiß ich. Ich glaube Mühle auch. Also sprich,

02:36:42.080 --> 02:36:55.560
es ist jede nur erdenklich mögliche Spielstate bekannt und analysiert und man weiß immer,

02:36:55.600 --> 02:37:01.040
wie man 100% perfekt spielt. D.h. daraus kannst du dann auch z.B. ableiten,

02:37:01.040 --> 02:37:09.760
wie weißer Spieler gewinnt immer. Aber ich meine zwischen 4 gewinnt und einer Runde 32 vs. 32

02:37:09.760 --> 02:37:14.400
Battlefield Caspian Border gibt es halt ein bisschen mehr States oder Möglichkeiten,

02:37:14.400 --> 02:37:18.040
was passieren kann. Also dass man eine komplette Runde Battlefield im Vorfeld

02:37:18.040 --> 02:37:22.520
schon komplett prediktet hat, ist eigentlich nahezu unmöglich.

02:37:25.560 --> 02:37:32.040
Bei Fighting Games sieht das allerdings schon ein bisschen anders aus. Fighting Games sind

02:37:32.040 --> 02:37:35.160
natürlich deutlich weniger, also selbst Fighting Games kannst du nicht komplett predikten. Aber

02:37:35.160 --> 02:37:41.640
Fighting Games, es sollte glaube ich offensichtlich sein, dass die möglichen Züge, nennen wir es mal,

02:37:41.640 --> 02:37:50.280
in einem Fighting Game deutlich geringer sind die Anzahl als beispielsweise 32 vs. 32 Battlefield.

02:37:50.280 --> 02:38:11.520
Wie schaut es mit MMOs aus? Ups, MMOs ist ein schlechtes Beispiel dafür,

02:38:11.680 --> 02:38:20.440
weil MMOs in der Regel tatsächlich synchron sind. Vielleicht mittlerweile nicht mehr so krass wie

02:38:20.440 --> 02:38:30.320
früher, aber MMOs sind ziemlich synchronisiert. Also sprich, du hast Server Tics und anhand dieser

02:38:30.320 --> 02:38:36.240
Server Tics passieren Dinge. Ja natürlich, Clients interpolieren das noch ein bisschen,

02:38:36.560 --> 02:38:43.160
dass es flüssiger, flüssiger aussieht alles. Aber in MMOs ist es auch so,

02:38:43.160 --> 02:38:48.440
dass wenn ich sage, hey ich baue jetzt hier irgendwie ein bisschen Eisenerz ab,

02:38:48.440 --> 02:38:55.200
dann passiert das einfach nicht. Wenn der Server mit dem nächsten Tic nicht sagt,

02:38:55.200 --> 02:39:05.480
du baust jetzt Eisenerz ab. Und das ist ja auch der Grund, warum MMOs jahrelang so träge waren.

02:39:06.200 --> 02:39:12.800
Erinnert sich noch einer an die früheren MMOs von Tab-Target-Ding und einzelne Ziele auswählen

02:39:12.800 --> 02:39:20.080
und dann Input drücken und der Spell wird gecastet und so. MMOs waren und sind auch immer noch bis auf

02:39:20.080 --> 02:39:25.640
ein paar Ausnahmen sehr gemächlich. Und das liegt daran, weil MMOs mehr oder weniger synchronisiert

02:39:25.640 --> 02:39:33.040
laufen für alle Spieler. Es gibt mittlerweile schon ein paar Games, die das trickreicher machen

02:39:33.160 --> 02:39:39.160
oder in den letzten Jahren auch über mehr oder weniger so interaktive Kampfsysteme haben

02:39:39.160 --> 02:39:46.400
im MMOs. Aber insgesamt kann man sagen, sind MMOs immer noch deutlich gemächlicher und träger als

02:39:46.400 --> 02:39:53.400
beispielsweise jetzt in Battlefield. Und das liegt mit daran, weil MMOs ziemlich synchronisiert

02:39:53.400 --> 02:40:03.520
laufen. Das ist halt auch eine der Eigenschaften von MMOs. Okay, was haben wir denn hier sonst noch

02:40:03.520 --> 02:40:09.560
Interessantes? Overwatch 2 fällt auseinander. Was haben wir sonst noch hier? Volle Konzentration

02:40:09.560 --> 02:40:16.200
Mitternacht. Apple Vision Pro angeschaut. Bei diesem Ding bin ich ja auch skeptisch. Ich meine,

02:40:16.200 --> 02:40:21.520
es ist halt eine 3D-Brille. Auch wenn Apple das irgendwie super krass nicht... Die nennen es...

02:40:22.000 --> 02:40:29.680
Apple nennt das Ding ja nicht Virtual Reality Brille, sondern Spatial Reality. Apple hat da

02:40:29.680 --> 02:40:33.120
wieder so ein ganz geiles Wort dafür empfunden. Aber im Endeffekt ist es halt eine VR-Brille.

02:40:33.120 --> 02:40:42.560
Und ich weiß nicht, ob das so ein Ding ist, was sich so toll durchsetzt. Ja, es ist von Apple und

02:40:42.560 --> 02:40:50.120
viele Leute kaufen Dinger, weil sie von Apple sind, aber es ist abfuckteuer. Ich weiß nicht,

02:40:50.120 --> 02:41:11.520
ich bin skeptisch, ob das ein großer Erfolg wird, das Ding. Volle Konzentration. Ich flamer

02:41:11.520 --> 02:41:18.560
noch ein bisschen über Overwatch mal schnell. Das ist auch so ein Thema. Also ich flamer ganz

02:41:18.560 --> 02:41:23.280
gerne über C++ und ich flamer auch ganz gerne über Overwatch. Es ist wieder Zeit, über meine

02:41:23.280 --> 02:41:27.520
Lieblingsvideospielfirma zu reden. Nachdem Overwatch seit Jahren in einer ziemlichen

02:41:27.520 --> 02:41:31.760
Abwärtsspirale war, hat man sich gedacht, man reißt das Ruder rum mit einem zweiten Teil.

02:41:31.760 --> 02:41:38.160
Ein komplett neues Spiel, viele Neuerungen und unfassbare... Komplett neues Spiel, ja. Das war

02:41:38.160 --> 02:41:43.360
wohl nix. PvE wird es nicht geben und der Multiplayer ist halt erst mal der Overwatch

02:41:43.680 --> 02:41:48.600
Multiplayer zu 90 Prozent, wo man halt jetzt endlich mal wieder ein paar Erweiterungen bringt,

02:41:48.600 --> 02:41:52.880
was man ja jahrelang hat schleifen lassen für Overwatch 1. Und ja, man hat die Grafik ein

02:41:52.880 --> 02:41:58.800
bisschen verbessert. Und der Rest ist ja halt mehr Microsoft, Microsoft Transaction heavy.

02:41:58.800 --> 02:42:05.040
Spielspaß. Nur, dass es kein komplett neues Spiel ist, es auch keine vielen Neuerungen gibt und den

02:42:05.040 --> 02:42:09.600
Spielspaß können wir vielleicht irgendwie einklammern. Es ist viel um dieses Sequel

02:42:09.600 --> 02:42:14.160
passiert und wir schauen uns mal an, wieso die reinste Existenz davon ein ziemliches Mess ist.

02:42:14.160 --> 02:42:17.360
Ein ziemliches Mess ist das auch ein geiler Satz, Alter.

02:42:17.360 --> 02:42:29.440
Bevor wir anfangen, erstmal eine schnelle Brief History zu Overwatch 1. Als das Spiel 2016 raus

02:42:29.440 --> 02:42:35.240
gekommen ist, waren alle gehypt und glücklich. Ich wusste, dass er das sagt. Ich auch. Und ich

02:42:35.240 --> 02:42:40.520
habe das, glaube ich, so krass gegrindet wie kaum ein anderes Game die letzten Jahre über. Ich habe

02:42:40.520 --> 02:42:44.840
das, ich habe das bestimmt zwei Jahre am Stück einfach nur 24, nein, 24 sieben nicht. Ich musste

02:42:44.840 --> 02:42:50.160
immer noch arbeiten gehen, aber jede freie Minute gespielt. Mit Heroes und Abilities gab es in der

02:42:50.160 --> 02:42:54.600
Form vor allem. Ich meine, ich war Level, keine Ahnung, 400 oder so in der Beta allein schon.

02:42:54.600 --> 02:43:00.600
So gut noch nie und eine riesige Community hat sich angefangen, um dieses Spiel zu bilden. Große

02:43:00.600 --> 02:43:04.920
Persönlichkeiten schossen um dieses Spiel herum aus dem Boden und nicht lange nach Release hat

02:43:05.000 --> 02:43:10.160
sich die Overwatch League gebildet. Overwatch League ist auch so ein Ding, ich fand es nie gut.

02:43:10.160 --> 02:43:18.320
Von Anfang an nicht. Das System. Ich weiß jetzt nicht, ob ich da ausholen soll, aber zwei Sachen.

02:43:18.320 --> 02:43:26.480
Erstens, dass es quasi egal ist, ob du gut oder schlecht warst, weil es keinen Aufstieg und Abstieg

02:43:26.480 --> 02:43:33.480
gibt und das geht mit dem nächsten zweiten Punkt einher. Es gibt keine Tier 2 Szene. Dadurch,

02:43:33.480 --> 02:43:38.280
dass es nur Overwatch League und nur den Fokus auf Overwatch League gibt. Ich weiß, dass es eine

02:43:38.280 --> 02:43:45.680
Tier 2, Tier 3 Szene gibt, aber niemand interessiert sich dafür. Wer hat schon mal Contenders von euch

02:43:45.680 --> 02:43:52.920
geguckt? Und selbst wenn du Contenders gewinnst, heißt es ja nichts. Das heißt nicht, dass du

02:43:52.920 --> 02:43:57.360
dann aufsteigst mit deinem Team in die Overwatch League. Du kannst Werbung für dich machen, dass

02:43:57.360 --> 02:44:01.600
dein Team auseinandergerissen wird, weil manche Spieler halt von Overwatch League Teams gekauft

02:44:01.640 --> 02:44:07.560
werden. Das ist alles. Also ich fand das Overwatch League System nicht gut. Von Anfang an nicht. Und

02:44:07.560 --> 02:44:14.080
der Fokus darauf, dass du im Prinzip kein Tier 2, Tier 3 hast und auch keine Competition so richtig

02:44:14.080 --> 02:44:20.760
sinnig in dem Game hast, außer eben Overwatch League. Die haben sehr viel, also gerade was

02:44:20.760 --> 02:44:27.760
eSport vergeht, die haben unglaublich viel verschenkt. Dadurch, dass Overwatch League so gepusht wurde,

02:44:27.760 --> 02:44:33.040
gab es dann irgendwann quasi auch, das weiß ich nicht, ob es wirklich das Verbot war, aber es wurde

02:44:33.040 --> 02:44:41.440
anderen Anbietern sehr schwer gemacht, Overwatch Turniere zu bringen und irgendwann hat auch die

02:44:41.440 --> 02:44:45.840
ESL sogar die Weeklys eingestellt und sowas. Hey, wir waren immerhin mal deutscher Weekly-Gewinner

02:44:45.840 --> 02:44:51.480
damals. Wir waren im Vergleich zu internationalen Teams nie wirklich gut, muss man auch

02:44:51.480 --> 02:44:57.480
Fairness halber sagen. Aber ich würde sagen, wir haben damals Overwatch schon ganz brauchbar

02:44:57.480 --> 02:45:01.960
gespielt, ja. Aber es gab halt irgendwann, es gab auch keine richtige Competition mehr. Es gab

02:45:01.960 --> 02:45:10.480
Overwatch League und spätestens seit Overwatch League gab es sonst nichts anderes mehr. Und Tier 2 juckt

02:45:10.480 --> 02:45:15.720
keine Sau, Tier 3 gibt es nicht und die haben auch viel verschenkt in Overwatch selbst. Warum, und das

02:45:15.720 --> 02:45:23.720
frage ich mich bis heute, warum hat man nicht versucht... Ich meine, Overwatch wollte von Anfang an

02:45:23.720 --> 02:45:29.720
ja irgendwie schon ein bisschen ein eSport-Game sein, ja. Warum hat man nicht um diesen Ranking-Modus

02:45:29.720 --> 02:45:37.720
was aufgebaut? Warum gab es nicht automatisch erstellte Weekly-Turniere, die promotet wurden intern

02:45:37.720 --> 02:45:43.720
für die jeweilige Liga, in der du gespielt hast? Oder warum gab es nicht irgendwelche, sagen wir,

02:45:43.720 --> 02:45:57.720
automatischen Top-100-Aufstiegsspiel-Irgendwas? Du hättest so viel automatisch generierten Content

02:45:57.720 --> 02:46:04.720
in den Overwatch-Ranking-Modus einbauen können, der halt ein gewisses Competition-Level schafft,

02:46:04.720 --> 02:46:13.720
eben auf allen Bereichen. Weil so war es einfach nur toxic as fuck. Jeder dachte, er ist nur in der

02:46:13.720 --> 02:46:21.720
jeweiligen League, weil seine Teammates scheiße sind, hat die ganze Zeit rumgeflamed, ähm, hat GG

02:46:21.720 --> 02:46:27.720
nach zwei Sekunden, wenn der erste Push nicht funktioniert hat. Es war einfach nur von Arsch, wie sie

02:46:27.720 --> 02:46:40.720
das gemacht haben. Es war auch viel zu roh, es gab drumherum auch nix. Das Einzige, was es gab, Top-500-Badges,

02:46:40.720 --> 02:46:47.720
ja geil, da kann ich mir jetzt was davon kaufen, da ich Season 1 Top-500-Badge hab. Oder was heißt

02:46:47.720 --> 02:46:55.720
davon kaufen, ist das falsche Wort. Das war das Einzige. Die hätten Competition auf jedem Level schaffen

02:46:55.720 --> 02:47:06.720
müssen. Und auch automatisch generierte Turnierbäume. Du hättest so viel, du hättest so viel machen können

02:47:06.720 --> 02:47:13.720
mit Competitive Overwatch. Auf allen Ebenen. Aber sowas wie FaceIt oder sowas, das ist natürlich undenkbar

02:47:13.720 --> 02:47:18.720
mit sowas wie ner Overwatch-League, wenn das irgendjemand anderes Competition-E-Sport-Sachen machen

02:47:18.720 --> 02:47:27.720
darf aus Blizzard selbst. Es ist scheiße gemanagt worden. Das fuckt mich heute auch immer noch richtig ab.

02:47:27.720 --> 02:47:34.720
Das hatte so viel Potenzial und irgendwann haben sie einfach gar nix mehr gemacht. Irgendwann haben sie

02:47:34.720 --> 02:47:38.720
auch einfach gar nix mehr gemacht. Gab's halt einfach nix Neues mehr. Ab und zu gab's noch n' Comic, ja super.

02:47:38.720 --> 02:47:47.720
So, und eines der größten Probleme für Leute, die jetzt nicht, ähm, da irgendwie den harten Overwatch-Rankgrind

02:47:47.720 --> 02:47:53.720
gemacht haben, wie wir damals, sondern die einfach nur Overwatch Just for Fun gespielt haben oder bisschen Ranked

02:47:53.720 --> 02:48:00.720
ab und zu und dann irgendwie, was weiß ich, mal irgendwie Diamond gepiekt sind oder sowas. So, ähm, was für die

02:48:00.720 --> 02:48:07.720
beschissen war, und das muss man sagen, das ist heute zum Teil immer noch so, Overwatch-League war nicht, nicht,

02:48:07.720 --> 02:48:15.720
wie soll man, wie sagt man das auf Schottisch, so unwatchable, so, das war nicht richtig schaubar einfach.

02:48:15.720 --> 02:48:25.720
Du hast nicht verstanden, was passiert. Zumal die auch jahrelang total bescheuerte Metas hatten.

02:48:25.720 --> 02:48:33.720
Erinnert sich noch jemand an Goals oder erinnert sich noch jemand an die Beta, äh, Double Winston, Double Reaper

02:48:33.720 --> 02:48:41.720
und so'n Geschiss? Die hatten teilweise monatelang, wenn nicht sogar, ähm, seasonslang Metas, die du nicht

02:48:41.720 --> 02:48:48.720
gucken konntest in der, habt ihr mal einen Goals-Match gesehen in der Overwatch-League? Das war nicht schaubar.

02:48:48.720 --> 02:48:55.720
Du hast nicht verstanden, was passiert. Du hast zwei Teams aufeinanderrennen sehen mit Tanks, die sich im Prinzip

02:48:55.720 --> 02:49:02.720
die, die Körper eingeschlagen haben, bis irgendwo die Shields all waren, bis irgendwie einer mal ein gutes,

02:49:02.720 --> 02:49:08.720
gutes, äh, Gravity Field, ich hab vergessen, wie die Saria-Ult heißt, äh, gesetzt haben und dann, und selbst,

02:49:08.720 --> 02:49:16.720
das war nicht, das, das konntest du nicht gucken. Es ist nicht so, dass die Struktur hinter der Overwatch-League,

02:49:16.720 --> 02:49:20.720
also unabhängig davon, dass mir das System nicht gefallen hat, dass das irgendwie so wahnsinnig schlechter

02:49:20.720 --> 02:49:27.720
oder irgendwie die Events schlecht organisiert waren oder sowas. Das Spiel, das Kern, der Kern eines Turniers

02:49:27.720 --> 02:49:37.720
war scheiße zu gucken. Und wer guckt sich ein E-Sport an, wo das vielleicht gut organisiert ist, aber der Kern des

02:49:37.720 --> 02:49:42.720
Ganzen, nämlich die Matches, scheiße zu gucken sind. Niemand, niemand guckt sich das große an.

02:49:42.720 --> 02:49:51.720
Die ersten paar Overwatch-Leaks waren auch echt gut, äh, gut besucht, ja, ähm, zu, äh, auch als das noch neu war

02:49:51.720 --> 02:49:58.720
und es noch einen richtigen Hype hatte und man auch noch so ein bisschen dieses Korea vs. NA vs. EU-Player und so hatte, ja.

02:49:58.720 --> 02:50:05.720
Aber danach, das ging rapide runter, das ging wirklich zzzzzzzzzppp. Das war fast so wie die Zahlen von New World auf Steam,

02:50:05.720 --> 02:50:10.720
ging da so runter mit den Viewern von der Overwatch-League. Und ja, die, die, die Overwatch-League hat sich vielleicht

02:50:10.720 --> 02:50:15.720
am Anfang, äh, ist so vielleicht sogar besser gestartet, als man das erwartet hat, aber das ging rapide runter.

02:50:15.720 --> 02:50:22.720
Und irgendwann sind die ja dann auch gewechselt von Twitch auf YouTube und ab dem Zeitpunkt habe ich keine Ahnung mehr,

02:50:22.720 --> 02:50:27.720
wie Overwatch-Leak gelaufen ist. Ich habe nicht ein Match, legit Leute, ich habe, ich habe früher ab und zu noch geguckt,

02:50:27.720 --> 02:50:35.720
aber seit es von Twitch auf YouTube gegangen ist, die Overwatch-Leak, nichts, nichts, ich habe nichts mehr davon verfolgt,

02:50:35.720 --> 02:50:41.720
nichts mehr davon mitbekommen, nichts mehr geschaut. Das, das war für mich einfach nur dead.

02:50:42.720 --> 02:50:43.720
So.

02:50:44.720 --> 02:50:46.720
So viel zum Thema Overwatch-E-Sport.

02:50:46.720 --> 02:50:50.720
Ihr, ihr merkt, das ist ein Thema, was mich immer noch ein bisschen aufregt, wie verkackt sie das haben.

02:50:50.720 --> 02:50:52.720
Obwohl das Spiel unglaubliches Potenzial gehabt hat.

02:50:55.720 --> 02:50:59.720
Ich will jetzt nicht weitergehen, warum ich denke, dass es so ist und so, das artet aus.

02:50:59.720 --> 02:51:01.720
Moin, Moin Michael, 50 Billion.

02:51:01.720 --> 02:51:02.720
Pogu.

02:51:05.720 --> 02:51:07.720
Raum für Competitive Teams.

02:51:07.720 --> 02:51:14.720
Es lief alles also ziemlich gut, bis alles auf einmal nicht mehr ziemlich gut lief und immer weniger Spieler Bock auf das Game hatten.

02:51:14.720 --> 02:51:18.720
Es kamen immer mehr Charakter dazu, die das Game komplett auf den Kopf gestellt haben, wie Brig,

02:51:18.720 --> 02:51:21.720
die komplett broken war, als sie rausgekommen ist.

02:51:21.720 --> 02:51:23.720
Eine Sache, für die das Overwatch-Team bekannt war.

02:51:23.720 --> 02:51:26.720
Das ist auch so ein Ding, ich muss da jetzt einfach nochmal reinkritschen.

02:51:26.720 --> 02:51:31.720
Die neuen Helden, die rausgekommen sind, das muss man, okay, ich muss erstmal was Positives sagen dazu.

02:51:31.720 --> 02:51:34.720
Moin, Hyper, Noob, Nob.

02:51:35.720 --> 02:51:37.720
Ich muss erstmal was Positives dazu sagen.

02:51:39.720 --> 02:51:45.720
Die Helden, die released wurden, und die Sachen, die released wurden, die waren zumindest meistens gut gemacht.

02:51:45.720 --> 02:51:53.720
Ich finde nach wie vor, dass viele Maps in Overwatch komplett Banane, Pepega, wie auch immer man das nennen mag, sind.

02:51:53.720 --> 02:52:02.720
Die wurden von Leuten erstellt, die noch nie, nennen wir es mal, tja, FPS kann man nicht wirklich sagen, nennen wir es mal FPS,

02:52:02.720 --> 02:52:04.720
die noch nie FPS-Maps erstellt haben.

02:52:04.720 --> 02:52:08.720
Die ersten Valorant-Maps, die ich gesehen habe, ich habe Valorant nie gespielt, waren auch,

02:52:08.720 --> 02:52:13.720
okay, die ersten Valorant-Maps, die waren genau das Gegenteil zu den ersten Overwatch-Maps.

02:52:13.720 --> 02:52:20.720
Die ersten Overwatch-Maps, die sahen gut aus, guckt euch sowas wie Kings Row an, finde ich heute immer noch eines der besten Maps,

02:52:20.720 --> 02:52:25.720
die sahen gut aus, waren aber vom Gameplay her lahm.

02:52:25.720 --> 02:52:31.720
So, die ersten Valorant-Maps, kann ich nur sagen aus Zuschauerperspektive, weil ich das Spiel nie gespielt habe,

02:52:31.720 --> 02:52:39.720
die ersten Valorant-Maps waren handwerklich schlecht gemacht von der Optik her und wie die aussahen, aber spielerisch ganz brauchbar.

02:52:39.720 --> 02:52:41.720
Das war das komplette Gegenteil.

02:52:41.720 --> 02:52:44.720
Und Overwatch-Maps sind langweilig.

02:52:44.720 --> 02:52:52.720
Das ist auch so ein Punkt, den habe ich damals nicht verstanden, wie die an diesem Map-Konzept immer dran festhalten konnten.

02:52:52.720 --> 02:52:54.720
Die sind langweilig.

02:52:54.720 --> 02:52:58.720
Overwatch-Maps bestehen in der Regel aus einem Weg.

02:52:59.720 --> 02:53:07.720
Mit, wenn es hochkommt mal, einer oder zwei ab und zu Flanking-Routen, wo sich eine davon gar nicht lohnt.

02:53:07.720 --> 02:53:11.720
Es gibt eigentlich in Overwatch immer einen Weg, den man läuft.

02:53:11.720 --> 02:53:23.720
Und Overwatch-Maps, gerade die Payload-Maps, waren, und nicht nur die Payload, alle Maps, alle Maps, waren rein auf Choke-Points ausgelegt.

02:53:23.720 --> 02:53:27.720
Temple of Anubis, du hast den Choke-Point nicht gehalten, erster Punkt war weg.

02:53:27.720 --> 02:53:30.720
King's Row, du hast den, war weg.

02:53:30.720 --> 02:53:32.720
Also Overwatch-Maps waren langweilig.

02:53:32.720 --> 02:53:38.720
Die waren basiert auf einem klaren Weg, voll mit Choke-Points, wo du durch musstest.

02:53:38.720 --> 02:53:41.720
Ich fand das Map-Design noch nie gut in Overwatch.

02:53:41.720 --> 02:53:44.720
Bei den neueren Maps hat sich ein bisschen gebessert.

02:53:44.720 --> 02:53:49.720
Und dann kamen noch so Spielmodus wie 2CP dabei.

02:53:49.720 --> 02:53:54.720
Das war nicht nur bei vielen unbeliebt, das war, finde ich, auch ein richtiger Kack-Spielmodus.

02:53:54.720 --> 02:54:05.720
Wie kommt man auf die Idee, Temple of Anubis, wie kommt man auf die Idee, einen Defender-Spawn direkt hinter den letzten Capture-Punkt zu setzen?

02:54:05.720 --> 02:54:09.720
Da kommen diese komischen Overtime-Regeln dabei.

02:54:09.720 --> 02:54:14.720
Und das war alles irgendwie nur mäßig, mäßig gut.

02:54:14.720 --> 02:54:21.720
Getragen wurde Overwatch im Endeffekt durch die unterschiedlichen Helden und die Dynamik, die sich daraus ergeben hat.

02:54:21.720 --> 02:54:32.720
Problematisch war, dass du oftmals mehr oder weniger das Gleiche auf beiden Seiten gespielt hast und das auf jeder Map bei jedem Match.

02:54:32.720 --> 02:54:34.720
Obwohl es recht viele Helden gab.

02:54:34.720 --> 02:54:38.720
Was dazu geführt hat, dass es einfach langweilig war.

02:54:39.720 --> 02:54:43.720
Und in Kombination, dass du es nicht, du konntest es nicht gucken.

02:54:43.720 --> 02:54:47.720
Du konntest Overwatch einfach, Overwatch eSport konntest du dir nicht angucken.

02:54:47.720 --> 02:54:49.720
Du hast nicht verstanden, was passiert.

02:54:49.720 --> 02:54:53.720
Das hast du bei den Castern gemerkt, die random Bullshit gelabert haben.

02:54:53.720 --> 02:54:55.720
Ich hätte es nicht besser gekonnt, ja, keine Frage.

02:54:55.720 --> 02:54:58.720
Weil ich hätte auch nicht verstanden, was passiert, außer ich hätte mitgespielt.

02:54:58.720 --> 02:55:03.720
Und die Spectator und so, die waren alle komplett lost.

02:55:03.720 --> 02:55:09.720
Also ich meine, ohne Mist, habt ihr euch mal zu Ghosts Zeiten Overwatch Matches angeguckt, ja?

02:55:09.720 --> 02:55:13.720
Und Casts, im Prinzip war das reines, ich hype permanent durch im Cast.

02:55:13.720 --> 02:55:15.720
So, oah, was macht der denn jetzt?

02:55:15.720 --> 02:55:17.720
Oah, yay, Crypter, oah, nein, er hat überlebt.

02:55:17.720 --> 02:55:18.720
Oah, jetzt kommt wieder was.

02:55:18.720 --> 02:55:20.720
Oah, jetzt ist einer gestorben.

02:55:20.720 --> 02:55:24.720
Die sind komplett ausgeflippt die ganze Zeit, weil die nichts zu dem Game sagen konnten.

02:55:24.720 --> 02:55:26.720
Du konntest zu dem Game nichts sagen.

02:55:26.720 --> 02:55:29.720
Vergleich das mal mit einem ordentlichen CSGO Cast.

02:55:29.720 --> 02:55:31.720
Die können dir sinnvoll was zu dem Game sagen.

02:55:31.720 --> 02:55:35.720
Erstens ist CS vielleicht auch ein bisschen einfacher zu observen, ja?

02:55:35.720 --> 02:55:39.720
Du hast gute Observer, die verstehen wann, wie, wo was passiert, dass die kaum Engagements verpassen.

02:55:39.720 --> 02:55:41.720
Oder kaum Trades verpassen.

02:55:43.720 --> 02:55:46.720
Und die können dir das auch sagen in CS.

02:55:46.720 --> 02:55:52.720
Ja, die können dir auch sagen, so nach dem Motto hier, was weiß ich, die Positionen misst der normalerweise nie.

02:55:52.720 --> 02:56:00.720
Seine Sniper Shots und das hat er jetzt so gespielt, weil irgendwie der dritte Pixel von rechts von der Smoke Granate

02:56:00.720 --> 02:56:02.720
nicht richtig den Balkon gecovert hat und sozusagen.

02:56:02.720 --> 02:56:04.720
Das können die dir in CS erzählen.

02:56:04.720 --> 02:56:10.720
Das konnte niemand in dieser Tiefe und sonst was zu Overwatch erzählen.

02:56:10.720 --> 02:56:13.720
Das war halt einfach nicht schön zu gucken und das ging dann bergab.

02:56:15.720 --> 02:56:20.720
Und das ist was, was mich heute wirklich noch aufregt, weil ich das Spiel gern gespielt hab

02:56:20.720 --> 02:56:24.720
und das Spiel so unglaublich großes Potential hat, was man hier ausgeschöpft hat.

02:56:25.720 --> 02:56:27.720
Ja, egal, weiter geht's.

02:56:27.720 --> 02:56:31.720
War es auf jeden Fall nicht, ihr Spiel gut zu balancen.

02:56:31.720 --> 02:56:33.720
Ja, ja gut.

02:56:33.720 --> 02:56:35.720
Overwatch Balance ist typische Blizzard Balance.

02:56:35.720 --> 02:56:39.720
Typische Blizzard Balance hab ich euch ja schon ein paar mal erklärt.

02:56:39.720 --> 02:56:41.720
Typische Blizzard Balance gehen so, ja.

02:56:41.720 --> 02:56:45.720
Also das hier ist OP und das hier ist Sucked.

02:56:46.720 --> 02:56:47.720
Sucked.

02:56:47.720 --> 02:56:49.720
So und Blizzard Balance war so.

02:56:52.720 --> 02:56:53.720
Das ging nicht gescheit.

02:56:53.720 --> 02:56:55.720
Entweder war was OP oder es war scheiße.

02:56:57.720 --> 02:57:03.720
Ich will nicht sagen immer, aber in diese Falle sind sie halt oft getappt.

02:57:04.720 --> 02:57:07.720
Ich würde sagen, ein Spiel, was man wirklich als gutes Beispiel

02:57:07.720 --> 02:57:12.720
und da könnt ihr mir widersprechen, wenn ihr da richtig voll dabei seid,

02:57:12.720 --> 02:57:17.720
aber rein wieder aus Beobachterperspektive und als jemand, der ab und zu ein paar Dota-Streams guckt.

02:57:19.720 --> 02:57:24.720
Ich finde ein Spiel, wo man wirklich sagen kann, dass es balancing-technisch halbwegs auf die Reihe kriegt, ist Dota 2.

02:57:25.720 --> 02:57:27.720
Ich gucke immer mal on-off ein bisschen Dota.

02:57:27.720 --> 02:57:31.720
Ihr wisst, ich spiele eigentlich so gut wie keine MOBAs, ich spiele Dota auch nicht selbst.

02:57:31.720 --> 02:57:37.720
Ich gucke mir beispielsweise die jährlichen offiziellen Turniere an, die es dazu gibt.

02:57:37.720 --> 02:57:42.720
Und was man bei Dota sagen muss ist, die haben es irgendwie geschafft.

02:57:42.720 --> 02:57:48.720
Klar, es gibt Meta-Picks, gibt es immer, aber die sind bei Dota doch relativ vielfältig.

02:57:48.720 --> 02:57:59.720
Also wenn man sich beispielsweise mal anguckt, so die Hero-Picks über die letzten Turniermonate,

02:57:59.720 --> 02:58:06.720
da wird man feststellen, die spielen halt nicht nur irgendwie 10 Helden oder so,

02:58:06.720 --> 02:58:11.720
die spielen halt, keine Ahnung, vielleicht lasst es mal 25 Helden sein.

02:58:11.720 --> 02:58:14.720
Klar, mein Dota hat massig Helden, viele von denen werden professionell auch nicht gepickt,

02:58:14.720 --> 02:58:20.720
aber es ist vielfach besser, vielfältiger als das, was die Overwatch hinfabriziert haben.

02:58:28.720 --> 02:58:34.720
Aber wenn 80 der 120 Heroes OP sind, spricht das doch schon mal für das Game, oder?

02:58:36.720 --> 02:58:40.720
Aber selbst im E-Sport-Bereich, ich weiß nicht, wie die Pick-Rates sind,

02:58:40.720 --> 02:58:43.720
aber ich glaube, so um die 30 Heroes oder so wurden gepickt.

02:58:43.720 --> 02:58:47.720
Ich habe letztens mal so eine Tabelle gesehen und das ist ja schon wirklich sehr vielfältig

02:58:47.720 --> 02:58:49.720
im Vergleich zu dem, was man in Overwatch gesehen hat.

02:58:49.720 --> 02:58:54.720
In Overwatch hast du die gleichen 6 Helden, wirst die gleichen 6 Helden jede Runde, jedes Match gehabt.

02:58:55.720 --> 02:59:00.720
Kam viel zu oft vor, dass es bestimmte Metas gab und wenn man irgendwas außerhalb dieser Meta gespielt hat,

02:59:00.720 --> 02:59:02.720
wurde man komplett gefickt.

02:59:02.720 --> 02:59:06.720
Die GOATS-Meta war lange ein Bestandteil vom Daily-Business in Overwatch.

02:59:06.720 --> 02:59:12.720
Man hat statt DPS, Healer und Tanks einfach nur noch Healer und Tanks gespielt, weil wer braucht so ein DPS?

02:59:13.720 --> 02:59:16.720
Ach ja, ich habe eine Sache noch vergessen zu sagen.

02:59:16.720 --> 02:59:20.720
Ich muss jetzt tatsächlich ein bisschen über Overwatch meckern,

02:59:20.720 --> 02:59:22.720
weil ich sagen wollte, ich wollte ja noch was Positives sagen.

02:59:22.720 --> 02:59:26.720
Ich fand, neben dem, was ich eben gesagt habe, die Helden, die sie eingeführt haben,

02:59:26.720 --> 02:59:30.720
alle immer gut, rein von der Idee hinter den Helden.

02:59:30.720 --> 02:59:33.720
Das Problem mit den neuen Helden war, die sie eingeführt haben,

02:59:33.720 --> 02:59:39.720
dass das meistens, nicht immer, aber das waren so Helden,

02:59:39.720 --> 02:59:45.720
Helden, die waren mega stark mit einfachen Abilities.

02:59:46.720 --> 02:59:48.720
Also hast du zum Beispiel sowas wie Brigitte.

02:59:48.720 --> 02:59:52.720
Du stellst dich vor den Gegner, drückst den Knopf, der ist gestunt.

02:59:53.720 --> 02:59:55.720
Dazu musstest du nichts machen.

02:59:55.720 --> 02:59:58.720
Bei McCree mit dem Flashbang musste er zumindest noch am Schild vorbei werfen.

03:00:00.720 --> 03:00:04.720
Du bist hin, du hast dein Schild gehabt, du hast den Gegner gestunt.

03:00:04.720 --> 03:00:06.720
Du musstest einen Knopf drücken, den Gegner zu stunten.

03:00:06.720 --> 03:00:09.720
Das war Counter zu nahezu allem, was es in dem Game gab.

03:00:11.720 --> 03:00:13.720
Und es war easy, als Fuck zu spielen.

03:00:14.720 --> 03:00:17.720
Du musstest es auch spielen, obwohl es eigentlich gar keinen Bock gemacht hat.

03:00:18.720 --> 03:00:22.720
Ich bin ja immer noch der Meinung, hier, bestes Overwatch-Grill und so.

03:00:22.720 --> 03:00:25.720
Aber die Mechanik, das war voll für den Arsch.

03:00:26.720 --> 03:00:28.720
Und es gab einige solche Helden.

03:00:28.720 --> 03:00:30.720
Maids to the Face, genau.

03:00:30.720 --> 03:00:32.720
Es gab einige solche Helden.

03:00:32.720 --> 03:00:34.720
Es gab so Sachen wie Doomfest, das ist ein bisschen rausgefallen.

03:00:34.720 --> 03:00:36.720
Das war halt auch lächerlich zwischenzeitlich.

03:00:37.720 --> 03:00:40.720
So mit Aufladen und quer durch die Map dashen und alles so wegklatschen.

03:00:41.720 --> 03:00:43.720
Aber Doomfest gut zu spielen war schon nicht einfach.

03:00:44.720 --> 03:00:45.720
Konnte ich nie.

03:00:46.720 --> 03:00:49.720
Aber so Sachen wie Breach, das muss einfach nicht sein.

03:00:50.720 --> 03:00:53.720
Und das Problem bei Overwatch war halt, das war dann erstmal ein Dreivierteljahr im Game,

03:00:54.720 --> 03:00:56.720
bis Blizzard auf die Idee gekommen ist, man könnte ja mal was dran ändern.

03:00:57.720 --> 03:01:01.720
Man hatte quasi unendlich Leben und die Tanks und Healer haben schon irgendwie genug Damage gemacht,

03:01:02.720 --> 03:01:05.720
weshalb alle die PS-Heroes über ein Jahr lang quasi komplett ausgestorben sind in dem Spiel.

03:01:06.720 --> 03:01:09.720
Wenn irgendwas in dem Spiel falsch lief, hat das Overwatch-Team erstens viel zu lange gebraucht,

03:01:10.720 --> 03:01:11.720
um das Problem zu fixen.

03:01:12.720 --> 03:01:14.720
Ja, auf jeden Fall, die haben ewig gebraucht mit Patches teilweise.

03:01:15.720 --> 03:01:18.720
Und zweitens, bei dem Versuch es zu fixen, gleichzeitig zehn andere Probleme erzeugt.

03:01:19.720 --> 03:01:22.720
Die Antwort auf die Goats-Meta war beispielsweise rollenbezogene Rankings,

03:01:22.720 --> 03:01:23.720
Was ist das?

03:01:24.720 --> 03:01:25.720
Ich bin gar nicht mehr so sicher jetzt.

03:01:26.720 --> 03:01:28.720
Das kam so in dem Dreh irgendwann, ja.

03:01:29.720 --> 03:01:32.720
Vorher war es unmöglich, die PS zu spielen und jetzt umso mehr,

03:01:33.720 --> 03:01:36.720
da man fucking Viertelstunde plus auf ein Game warten musste.

03:01:37.720 --> 03:01:40.720
Von solchen Sachen gab es ab dem Punkt am laufenden Bande welche in Overwatch,

03:01:41.720 --> 03:01:44.720
weshalb immer mehr große Persönlichkeiten zu anderen Games wechselten,

03:01:45.720 --> 03:01:46.720
genauso wie die Spieler es taten.

03:01:47.720 --> 03:01:49.720
Es hat irgendwann so ein Problem mit der PS,

03:01:49.720 --> 03:01:51.720
es hat irgendwann wirklich gar keinen Spaß mehr gemacht,

03:01:52.720 --> 03:01:53.720
dieses Spiel zu spielen.

03:01:54.720 --> 03:01:55.720
Der einzige Teil an Overwatch ...

03:01:56.720 --> 03:01:59.720
Overwatch hat keinen Spaß mehr gemacht, Overwatch hat nur noch aufgeregt.

03:02:00.720 --> 03:02:02.720
Und das war der Zeitpunkt, wo ich keinen Bock mehr hatte.

03:02:03.720 --> 03:02:04.720
Das ist bei mir oft so.

03:02:05.720 --> 03:02:08.720
Egal ob ich Games spiele oder ob ich Serien gucke oder sonst was,

03:02:09.720 --> 03:02:12.720
manchmal kommt der Moment, wo ich Sachen einfach nicht mehr nachvollziehen kann,

03:02:13.720 --> 03:02:14.720
einfach nicht mehr mitmachen will.

03:02:15.720 --> 03:02:17.720
Beispielsweise gibt es auch Serien, wenn ich die gucke

03:02:17.720 --> 03:02:19.720
und dann irgendwie Staffel 3 ist und ich bedenke,

03:02:20.720 --> 03:02:22.720
Alter, warum verhalten die sich jetzt alle so komplett entgegengesetzt

03:02:23.720 --> 03:02:24.720
zu dem wie es in Staffel 1 und 2 war und Alter,

03:02:25.720 --> 03:02:26.720
warum ergibt das jetzt alles gar keinen Sinn mehr?

03:02:27.720 --> 03:02:28.720
Dann nervt es mich nur noch, dann macht es mir keinen Spaß mehr zu gucken,

03:02:29.720 --> 03:02:31.720
dann nervt es mich nur noch und dann höre ich auf die Serie zu gucken.

03:02:32.720 --> 03:02:33.720
Ich muss nicht zwangsläufig alles bis zum Schluss gucken.

03:02:34.720 --> 03:02:36.720
Und bei Games ist es auch so, wenn mich ein Game nur noch nervt

03:02:37.720 --> 03:02:42.720
oder nur noch aufregt, dann kann ich es mir einfach nicht mehr geben.

03:02:43.720 --> 03:02:46.720
Und das ging nicht nur mir so.

03:02:47.720 --> 03:02:51.720
Es gab viele Overwatch-Bros, die ihr Geld damit verdient haben,

03:02:52.720 --> 03:02:55.720
die immer wieder auch in ihren Spielen, in ihren Sachen geflamed haben,

03:02:56.720 --> 03:02:57.720
so nach dem Motto, Alter, wenn ich...

03:02:58.720 --> 03:03:00.720
die haben in ihren Streams dann teilweise CS gespielt

03:03:01.720 --> 03:03:04.720
und haben halt gesagt, oh fuck, Alter, ich hab gleich Overwatch-Training.

03:03:05.720 --> 03:03:06.720
Seriously, ernsthaft, das ist kein Spaß.

03:03:07.720 --> 03:03:08.720
Überleg dir mal, du hast ein Overwatch-Bro,

03:03:09.720 --> 03:03:10.720
der spielt was anderes on-Stream und du sagst,

03:03:10.720 --> 03:03:12.720
scheiße, Alter, gleich ist es wieder Overwatch-Training.

03:03:13.720 --> 03:03:15.720
Oder so, Alter, ich spiele diesen Kack doch eh nur,

03:03:16.720 --> 03:03:17.720
weil ich Geld dafür kriege.

03:03:18.720 --> 03:03:19.720
Das ist vorgekommen, die haben da auch keinen Bock drauf.

03:03:22.720 --> 03:03:23.720
Die haben das nur gespielt, weil es Geld bringt.

03:03:24.720 --> 03:03:26.720
Gut, ist ja nicht verwerflich, aber bezeichnend für das Spiel.

03:03:27.720 --> 03:03:30.720
Nicht totes ist die Porno-Industrie, aber Rettung wahren.

03:03:31.720 --> 03:03:33.720
Der einzige Teil an Overwatch, der nicht tot ist,

03:03:34.720 --> 03:03:35.720
ist die Porno-Industrie.

03:03:36.720 --> 03:03:37.720
Wundert mich nicht.

03:03:38.720 --> 03:03:39.720
Da geht er mal.

03:03:40.720 --> 03:03:43.720
Und mich würde nicht wundern, wenn es in Valorant genauso aussieht.

03:03:44.720 --> 03:03:45.720
Ich will jetzt nicht googeln,

03:03:46.720 --> 03:03:47.720
weil das ist auf jeden Fall Monkathoss.

03:03:48.720 --> 03:03:50.720
Aber ich wette mit euch, bei Valorant ist es genauso.

03:03:51.720 --> 03:03:52.720
Das ist klar.

03:03:53.720 --> 03:03:54.720
Aber Rettung wahren, Sicht.

03:03:55.720 --> 03:03:58.720
Overwatch 2 wurde auf der BlizzCon 2019 angekündigt.

03:03:59.720 --> 03:04:00.720
Episch großer Trailer.

03:04:01.720 --> 03:04:03.720
Und dann war es erst mal irgendwie drei Jahre Funkstille drum

03:04:04.720 --> 03:04:05.720
und jetzt gibt es nicht mal mehr PVE,

03:04:05.720 --> 03:04:07.720
was eigentlich der Seller werden sollte für Overwatch.

03:04:08.720 --> 03:04:09.720
Es wurde darüber geredet,

03:04:10.720 --> 03:04:11.720
wie viel Liebe in das Game geflossen ist.

03:04:12.720 --> 03:04:13.720
Neue Heroes.

03:04:14.720 --> 03:04:16.720
Und dann ist Jeff weg und sie haben das Game wahrscheinlich umgeklampelt.

03:04:17.720 --> 03:04:19.720
Und der große Knaller, verschiedene PVE-Game-Modi.

03:04:20.720 --> 03:04:21.720
Das war quasi das ausschlaggebende Argument,

03:04:22.720 --> 03:04:23.720
wieso das Sequel überhaupt erscheint.

03:04:24.720 --> 03:04:25.720
Es soll nun eine große Kampagne

03:04:26.720 --> 03:04:28.720
mit richtiger Story und richtigen Missionen geben.

03:04:29.720 --> 03:04:30.720
Jeder Hero soll ein Skill-Tree bekommen.

03:04:30.720 --> 03:04:32.720
Ich fand die Idee mit dem Skill-Tree nice.

03:04:33.720 --> 03:04:35.720
Das war wahrscheinlich nur für PVE gedacht.

03:04:36.720 --> 03:04:37.720
Aber die Idee dahinter,

03:04:38.720 --> 03:04:41.720
dass man Helden nicht nur picken kann,

03:04:42.720 --> 03:04:44.720
sondern ein bisschen customisen kann,

03:04:45.720 --> 03:04:48.720
fand ich sehr gut.

03:04:49.720 --> 03:04:52.720
Weil ich hatte mich in Overwatch schon damit abgefunden,

03:04:53.720 --> 03:04:55.720
dass mehr oder weniger die gleichen Helden immer gespielt werden

03:04:56.720 --> 03:04:57.720
gegen mehr oder weniger immer die gleichen Helden.

03:04:57.720 --> 03:04:58.720
Aber vielleicht hätte man mit Skill-Trees

03:04:59.720 --> 03:05:00.720
schon noch ein bisschen Varianz da reinbringen können.

03:05:01.720 --> 03:05:02.720
Das fand ich eine gute Idee.

03:05:03.720 --> 03:05:04.720
Auch wenn es erst mal nur für PVE gedacht war.

03:05:05.720 --> 03:05:06.720
Aber vom Grundansatz her fand ich es eine gute Sache.

03:05:07.720 --> 03:05:09.720
Es ist halt leider auch komplett weg jetzt.

03:05:10.720 --> 03:05:12.720
Komm, den man mit der Zeit immer weiter aufleveln kann.

03:05:13.720 --> 03:05:16.720
Im Zuge der BlizzCon wurde sogar direkt die erste PVE-Mission gezeigt.

03:05:17.720 --> 03:05:18.720
Rio de Janeiro wurde das Ganze genannt.

03:05:19.720 --> 03:05:20.720
Es war ein Spektakel,

03:05:21.720 --> 03:05:22.720
gemischt aus gut gemachten CGI-Cutscenes

03:05:23.720 --> 03:05:24.720
und verschiedenen Charakteren.

03:05:24.720 --> 03:05:25.720
Es war ein Spektakel,

03:05:26.720 --> 03:05:27.720
gemischt aus gut gemachten CGI-Cutscenes

03:05:28.720 --> 03:05:29.720
und verschiedenen Etappen,

03:05:30.720 --> 03:05:31.720
in denen man gegen Wellen an Bots kämpfen musste.

03:05:32.720 --> 03:05:33.720
Ich muss ehrlich sagen,

03:05:34.720 --> 03:05:35.720
ich fand das damals auch schon nicht sonderlich innovativ und toll aus.

03:05:36.720 --> 03:05:37.720
Ich weiß, viele haben das gefeiert.

03:05:38.720 --> 03:05:40.720
Ich fand das damals schon ein bisschen uninspiriert aus.

03:05:41.720 --> 03:05:42.720
Nach dem Motto,

03:05:43.720 --> 03:05:44.720
das spielst du einmal und dann nie wieder.

03:05:45.720 --> 03:05:46.720
Wirklich sehr vielversprechend.

03:05:47.720 --> 03:05:48.720
Fand ich nicht.

03:05:49.720 --> 03:05:50.720
Aber es war eine gute Sache.

03:05:51.720 --> 03:05:52.720
Einen PVE-Modus fand ich eine gute Sache,

03:05:52.720 --> 03:05:53.720
weil ich immer noch der Meinung bin,

03:05:54.720 --> 03:05:55.720
dass die Welt von Overwatch

03:05:56.720 --> 03:05:57.720
durchaus eine gute Singleplayer-Kampagne hergeben würde.

03:05:58.720 --> 03:05:59.720
Und das ist ja auch etwas, was Blizzard eigentlich kann.

03:06:00.720 --> 03:06:01.720
Das ist ja das, worauf ich ein bisschen gehofft habe.

03:06:02.720 --> 03:06:04.720
So ein competitive PVE-Horde-Modus, schön und gut.

03:06:05.720 --> 03:06:06.720
Aber eine Singleplayer-Kampagne

03:06:07.720 --> 03:06:09.720
wäre wirklich richtig geil gewesen für Overwatch.

03:06:10.720 --> 03:06:12.720
Also Blizzard, was eine gute Singleplayer-Kampagne machen kann.

03:06:13.720 --> 03:06:14.720
Die Welt hätte es hergegeben

03:06:15.720 --> 03:06:16.720
und die unterschiedlichen Helden und so

03:06:17.720 --> 03:06:18.720
hätten sicherlich auch eine interessante Story hergegeben.

03:06:19.720 --> 03:06:20.720
Hat sich aber Blizzard gedacht,

03:06:20.720 --> 03:06:21.720
damit lässt sich kein Geld verdienen.

03:06:22.720 --> 03:06:23.720
Außerdem reden wir hier von Blizzard.

03:06:24.720 --> 03:06:25.720
Auch wenn in den letzten Jahren

03:06:26.720 --> 03:06:28.720
ein paar unvorteilhafte Dinge passiert sind,

03:06:29.720 --> 03:06:30.720
kann man ihnen nicht absprechen,

03:06:31.720 --> 03:06:32.720
wie gut viele Videospiele von ihnen sind.

03:06:33.720 --> 03:06:34.720
Vor allem aus dem PVE-Segment.

03:06:35.720 --> 03:06:36.720
Die können das einfach.

03:06:37.720 --> 03:06:38.720
Die Jahre nach der Ankündigung sind also vorbeigezogen

03:06:39.720 --> 03:06:40.720
und man hat sich langsam gefragt, wo das Spiel nun bleibt.

03:06:41.720 --> 03:06:42.720
Viel Gutes hat Blizzard ja auch in den letzten Jahren

03:06:43.720 --> 03:06:44.720
nicht hinbekommen.

03:06:45.720 --> 03:06:46.720
Die haben jetzt mal wieder mit Diablo 4 endlich was,

03:06:47.720 --> 03:06:48.720
was anscheinend nicht nur

03:06:48.720 --> 03:06:49.720
auf den ersten Blick was taugt,

03:06:50.720 --> 03:06:51.720
sondern wohl auch ein bisschen Substanz hat.

03:06:52.720 --> 03:06:53.720
Mal gucken, wie es in ein paar Monaten aussieht.

03:06:54.720 --> 03:06:56.720
Das Einzige, was sich in den Jahren nach der Ankündigung so getan hat,

03:06:57.720 --> 03:06:58.720
ist, dass Overwatch 1 komplett krepiert ist.

03:06:59.720 --> 03:07:00.720
Immer weniger Spieler haben es gespürt.

03:07:01.720 --> 03:07:02.720
Es gab nichts dafür.

03:07:03.720 --> 03:07:04.720
Es gab ja auch kein Content.

03:07:05.720 --> 03:07:06.720
Es kam förmlich gar kein Update mehr für das Spiel raus.

03:07:07.720 --> 03:07:08.720
Man hat gemerkt,

03:07:09.720 --> 03:07:10.720
dass das Spiel für Blizzard selbst ein sinkendes Schiff ist

03:07:11.720 --> 03:07:12.720
und man dachte,

03:07:13.720 --> 03:07:14.720
dass halt jede Manpower nun zu Overwatch 2 geschickt wird,

03:07:15.720 --> 03:07:16.720
um dort halt den ganzen neuen Content zu entwickeln.

03:07:16.720 --> 03:07:17.720
Den es sich geht.

03:07:18.720 --> 03:07:19.720
2022 war es endlich soweit

03:07:20.720 --> 03:07:21.720
und die Beta zu Overwatch 2 ging an den Start.

03:07:22.720 --> 03:07:23.720
Twitch-Zuschauerzahlen explodierten,

03:07:24.720 --> 03:07:25.720
da man als User einen Beta-Key bekommen hat,

03:07:26.720 --> 03:07:27.720
wenn man für mehrere Stunden einen Streamer geschaut hat,

03:07:28.720 --> 03:07:29.720
der die Beta spielt.

03:07:30.720 --> 03:07:31.720
Nach 5 Stunden XQC konnte ich selbst auch endlich

03:07:32.720 --> 03:07:33.720
in die Overwatch 2-Beta reingehen

03:07:34.720 --> 03:07:35.720
und ich sag's euch ganz ehrlich,

03:07:36.720 --> 03:07:37.720
es hat wirklich Spaß gemacht.

03:07:38.720 --> 03:07:39.720
Es hat sich so angefühlt, als wäre wieder 2016.

03:07:40.720 --> 03:07:41.720
Ich und die Boys einfach ein paar Runden Overwatch grinden.

03:07:42.720 --> 03:07:44.720
Ich selbst habe das Spiel seit Jahren halt auch nicht mehr gespielt,

03:07:44.720 --> 03:07:45.720
da der erste Teil ab einem gewissen Punkt

03:07:46.720 --> 03:07:47.720
wie gesagt wirklich gar keinen Spaß mehr gemacht hat.

03:07:48.720 --> 03:07:49.720
Ich hatte keinen Spaß an der Beta,

03:07:50.720 --> 03:07:51.720
weil es jetzt irgendwie ein krasses Sequel war,

03:07:52.720 --> 03:07:53.720
sondern einfach, weil es Overwatch war

03:07:54.720 --> 03:07:55.720
und Overwatch ist an und für sich halt wirklich kein schlechtes Spiel.

03:07:56.720 --> 03:07:57.720
Und mal wieder in Neu.

03:07:58.720 --> 03:07:59.720
Am 4. Oktober 2022 kam Overwatch 2 endlich für jeden raus

03:08:00.720 --> 03:08:01.720
und die Leute waren...

03:08:02.720 --> 03:08:03.720
Chat, woher kennt man diesen Sound hier?

03:08:04.720 --> 03:08:05.720
Am 4. Oktober 2022 kam Overwatch 2 endlich für jeden raus

03:08:06.720 --> 03:08:07.720
und die Leute waren...

03:08:08.720 --> 03:08:09.720
Chat, woher kennt man diesen Sound hier?

03:08:10.720 --> 03:08:11.720
Am 4. Oktober 2022 kam Overwatch 2 endlich für jeden raus

03:08:12.720 --> 03:08:13.720
und die Leute waren...

03:08:14.720 --> 03:08:15.720
Chat, woher kennt man diesen Sound hier?

03:08:16.720 --> 03:08:17.720
Am 4. Oktober 202...

03:08:18.720 --> 03:08:19.720
Friendrequest in irgendeinem Game?

03:08:26.720 --> 03:08:27.720
Menü!

03:08:27.720 --> 03:08:28.720
Ja!

03:08:30.720 --> 03:08:31.720
Das kann sein.

03:08:32.720 --> 03:08:33.720
Das klingt gut.

03:08:34.720 --> 03:08:35.720
Menü aufmachen.

03:08:35.720 --> 03:08:37.720
Ja, ja, ja, das kann durchaus sein, ja.

03:08:38.720 --> 03:08:39.720
Im Jahr 2022 kam Overwatch 2 endlich für jeden raus

03:08:40.720 --> 03:08:41.720
und die Leute waren...

03:08:42.720 --> 03:08:43.720
Beziehungsweise,

03:08:44.720 --> 03:08:51.720
Naja, nicht wirklich gehypt, weil der große Point von Overwatch 2, die PvE-Modi, nicht existent waren.

03:08:51.720 --> 03:08:56.220
Man hat also jetzt schon sein Spiel so halbraus gebracht, weil Overwatch 1 halt wirklich...

03:08:56.220 --> 03:09:00.220
Könnte man nicht sagen, dass die Hälfte von Overwatch 2 eigentlich Overwatch 1 ist?

03:09:01.220 --> 03:09:04.720
...krankverrecktes und naja, Geld ist immer noch Geld.

03:09:04.720 --> 03:09:08.220
Aber was sind jetzt wirklich die Unterschiede zwischen den beiden Spielen?

03:09:08.220 --> 03:09:12.720
Es gibt drei neue Heroes, sechs neue Maps und einen komplett neuen Modus namens Push.

03:09:13.220 --> 03:09:15.220
Außerdem grundlegende Balance-Anpassungen.

03:09:15.220 --> 03:09:17.720
Aber das ist nix, wofür man vier Jahre gebraucht hat, oder?

03:09:17.720 --> 03:09:19.220
Nee. Ja.

03:09:19.220 --> 03:09:21.720
Mit ein paar Reworks von Heroes einhergingen.

03:09:21.720 --> 03:09:24.720
Ein paar davon sehr subtil, wie ein bisschen mehr Damage, ein paar...

03:09:24.720 --> 03:09:30.220
Ja, die mussten die Heroes ja reworken, weil es jetzt ein Spieler weniger auf jeder Seite ist.

03:09:30.220 --> 03:09:32.220
Das ging ja gar nicht anders.

03:09:33.220 --> 03:09:34.220
Mussten sie ja reworken.

03:09:34.220 --> 03:09:39.720
Aber auch sehr groß mit Heroes wie Orisa, die sich so ziemlich gar nicht mehr wieder vorgespielt haben.

03:09:39.720 --> 03:09:44.220
Der größte Change ist aber der Fakt, dass nun 5 gegen 5 statt 6 gegen 6 gespielt wird.

03:09:44.220 --> 03:09:45.220
Deswegen musstest du das anpassen.

03:09:45.220 --> 03:09:46.720
Man spielt jetzt nur noch mit einem Tank.

03:09:46.720 --> 03:09:49.720
Ich persönlich habe auf jeden Fall gar nichts gegen diese Entscheidung,

03:09:49.720 --> 03:09:53.220
dass sich jedes Teammitglied nun etwas wichtiger anfühlt.

03:09:53.220 --> 03:09:57.720
Man hat das Game jetzt ein bisschen mehr selbst in der Hand und hat das Gefühl, mehr beeinflussen zu können.

03:09:57.720 --> 03:09:59.220
Das war's aber so ziemlich.

03:09:59.220 --> 03:10:03.720
Ein paar nette Änderungen, die drei Jahre Wartezeit auf jeden Fall rechtfertigen.

03:10:03.720 --> 03:10:08.220
Haltet euch fest, aber ich hab von der größten Neuerung noch gar nicht geredet.

03:10:08.720 --> 03:10:10.220
Nämlich der Shop.

03:10:10.220 --> 03:10:15.220
Es gibt nun ein Battle Pass, mit dem man zahlreiche Sachen freischalten kann, wie neue Heroes.

03:10:15.220 --> 03:10:16.220
Ganz recht.

03:10:16.220 --> 03:10:19.720
Da das Spiel nun Free-to-Play ist, hat man nicht mehr alle Charaktere von Anfang an,

03:10:19.720 --> 03:10:25.720
sondern muss diese erst freischalten oder, naja, ein paar Euronen investieren.

03:10:25.720 --> 03:10:27.720
Außerdem kannst du Skins kaufen.

03:10:27.720 --> 03:10:31.720
Skins gibt es allgemein so ziemlich jedem Free-to-Play-Online-Game zu kaufen.

03:10:31.720 --> 03:10:35.220
Aber in Fortnite bezahle ich 10 Euro dafür, dass ich Vegeta spielen kann

03:10:35.220 --> 03:10:37.720
und mich in einen fucking Super Saiyajin Blue verwandle,

03:10:37.720 --> 03:10:42.220
während ich in Overwatch 2 20 Euro dafür belege, dass meine Winston rot ist.

03:10:42.220 --> 03:10:47.220
Und auch wenn es durchaus ein paar neue Sachen in Overwatch 2 gibt,

03:10:47.220 --> 03:10:53.720
in Diablo 4 kostet ja auch irgendwie ein Set 28 Euro und sowas.

03:10:53.720 --> 03:10:58.220
2 gibt wurden auch viele Sachen willkürlich aus dem ersten Teil entfernt.

03:10:58.220 --> 03:11:00.720
Das Level-System wurde komplett entfernt.

03:11:00.720 --> 03:11:03.720
Ich meine, es gibt ja jetzt den Battle Pass, den man leveln kann.

03:11:04.220 --> 03:11:07.220
Aber auch blöd, man sieht nicht, wie lange die Leute das schon grinden.

03:11:07.220 --> 03:11:09.220
Man kann nicht mehr sehen, ob Leute Premade sind.

03:11:09.220 --> 03:11:11.220
Man kann nicht mehr on fire sein.

03:11:11.220 --> 03:11:13.720
Es gibt keine Zusammenfassung mehr am Ende von Matches,

03:11:13.720 --> 03:11:15.720
geschweige denn die Karten und Auszeichnungen.

03:11:15.720 --> 03:11:18.220
Man kann seine Waffen nicht ingame auschecken,

03:11:18.220 --> 03:11:21.220
obwohl genau das in den Trailern gezeigt wurde.

03:11:21.220 --> 03:11:24.220
Die haben das in den Trailern drin, aber nicht im eigentlichen Spiel.

03:11:24.220 --> 03:11:28.220
Es gibt jetzt zwar 6 neue Maps, aber dafür wurden 5 alte komplett...

03:11:28.220 --> 03:11:31.720
Ja, 2CP wurde entfernt. 2CP ist auch Ultraschrott, Alter.

03:11:31.720 --> 03:11:35.720
Ich hätte es cooler gefunden, sie hätten vielleicht die 2CP-Maps

03:11:35.720 --> 03:11:38.720
irgendwie zusammengefasst zu einer Push-Map oder irgendwas anderes.

03:11:38.720 --> 03:11:40.220
Ganz rauswerfen ist doof.

03:11:40.220 --> 03:11:42.720
Sie gehören für mich irgendwie immer noch in Overwatch dazu,

03:11:42.720 --> 03:11:44.220
aber 2CP war so ein Schrottmodus, Alter.

03:11:44.220 --> 03:11:45.220
...entfernt.

03:11:45.220 --> 03:11:47.720
Man könnte meinen, dass der Re-Release unter Overwatch...

03:11:47.720 --> 03:11:49.220
2CP ist wieder drin?!

03:11:49.220 --> 03:11:50.220
What?!

03:11:52.720 --> 03:11:53.720
Oh, nee.

03:11:53.720 --> 03:11:54.720
Schrott, Alter.

03:11:54.720 --> 03:11:57.220
...Watch 2 nur Blizzards Entschuldigung dafür ist,

03:11:57.220 --> 03:11:59.220
das Spiel Free2Play rauszubringen,

03:11:59.220 --> 03:12:02.720
um so noch mehr Geld aus dem Ganzen abmelken zu können.

03:12:02.720 --> 03:12:05.720
Außerdem halte ich es für einen Industriestandard,

03:12:05.720 --> 03:12:09.720
solche Sachen wie neuen Content oder Balancing in ein Game reinzupatchen,

03:12:09.720 --> 03:12:12.720
statt direkt ein komplett neues Spiel rauszuhauen.

03:12:12.720 --> 03:12:14.220
Die Sachen, die hier dazu gekommen sind,

03:12:14.220 --> 03:12:16.720
rechtfertigen auf gar keinen Fall ein neues Game.

03:12:16.720 --> 03:12:19.220
Das Einzige, was mich jetzt noch optimistisch stimmt,

03:12:19.220 --> 03:12:21.720
ist der angekündigte PvE-Story-Modus.

03:12:21.720 --> 03:12:25.220
Man merkt, dass wirklich viel Liebe darin geflossen ist,

03:12:25.220 --> 03:12:28.720
und das wäre immerhin eine Begründung für ein komplett neues Spiel.

03:12:29.720 --> 03:12:30.220
Bruh.

03:12:30.220 --> 03:12:32.220
Der große Point an Overwatch 2,

03:12:32.220 --> 03:12:34.220
der Grund, wieso dieses Spiel überhaupt existiert,

03:12:34.220 --> 03:12:36.220
wurde einfach so aus dem Nichts gecancelt.

03:12:41.220 --> 03:12:42.220
Die Begründung war,

03:12:42.220 --> 03:12:45.220
dass immer mehr Ressourcen weg vom Online-Game gezogen wurden

03:12:45.220 --> 03:12:47.220
und man den Fokus verloren habe.

03:12:47.220 --> 03:12:49.720
Man könne sich nicht um den PvE-Modus kümmern,

03:12:49.720 --> 03:12:50.720
ohne den Pv...

03:12:50.720 --> 03:12:51.720
Ihr...

03:12:51.720 --> 03:12:56.220
Also, diese Pressemeldungen oder diese Statements sind immer so pp-ge, Alter.

03:12:56.220 --> 03:12:59.220
Wisst ihr, was für mich eines der krassesten pp-ge-Statements

03:12:59.220 --> 03:13:02.220
in letzter Zeit war, die rausgekommen sind?

03:13:04.720 --> 03:13:06.220
Hat jemand von euch

03:13:06.720 --> 03:13:09.220
das Gollum-Game mitbekommen?

03:13:12.220 --> 03:13:13.220
Nur mal so

03:13:13.720 --> 03:13:15.220
am Rande gefragt.

03:13:17.220 --> 03:13:18.220
Es gab nämlich...

03:13:18.220 --> 03:13:19.220
Nein.

03:13:21.220 --> 03:13:23.220
Also, es gab mal wieder ein Herr der Ringe...

03:13:23.220 --> 03:13:25.220
ein Game im Herr der Ringe-Universum

03:13:25.220 --> 03:13:26.220
und man hat Gollum gespielt.

03:13:26.220 --> 03:13:27.220
Ich hab's mir nicht gekauft.

03:13:27.220 --> 03:13:28.220
Ich werd's mir auch nicht kaufen.

03:13:28.220 --> 03:13:29.220
Zumindest...

03:13:29.220 --> 03:13:31.220
Das Game sah von Anfang an übelst,

03:13:31.220 --> 03:13:32.220
übelst für'n Arsch aus.

03:13:32.220 --> 03:13:34.220
Das Game ist rausgekommen, war halt uninspiriert

03:13:34.220 --> 03:13:36.220
und für'n Arsch.

03:13:36.220 --> 03:13:38.220
Da wurde quasi schon direkt

03:13:38.220 --> 03:13:40.220
paar Tage nach Release

03:13:40.220 --> 03:13:43.220
wurde ein Entschuldigungsstatement rausgehauen

03:13:43.220 --> 03:13:45.220
und dass man jetzt hart daran arbeiten wird,

03:13:45.220 --> 03:13:47.220
so alle Expectations zu erfüllen

03:13:47.220 --> 03:13:49.220
und sonst was in der Richtung.

03:13:49.220 --> 03:13:50.220
Und...

03:13:50.220 --> 03:13:53.220
Es war sofort klar, als man diese Meldung gelesen hat,

03:13:54.220 --> 03:13:56.220
dieses Statement,

03:13:56.220 --> 03:13:58.220
das wurde schon geschrieben

03:13:58.220 --> 03:13:59.220
während der Entwicklung.

03:13:59.220 --> 03:14:01.220
Die wussten, dass das Scheiße ankommt.

03:14:01.220 --> 03:14:04.220
Die wussten, dass es ein Kack-Game ist.

03:14:04.220 --> 03:14:06.220
Die haben quasi das Statement...

03:14:06.220 --> 03:14:09.220
Das Statement wurde quasi parallel zum Game schon geschrieben.

03:14:09.220 --> 03:14:11.220
Anders kann's...

03:14:11.220 --> 03:14:12.220
Echter Wahnsinn.

03:14:12.220 --> 03:14:14.220
So ein Pepega-Kram.

03:14:15.220 --> 03:14:16.220
Die haben mittlerweile...

03:14:16.220 --> 03:14:18.220
Das ist wirklich AAA-Development heutzutage.

03:14:18.220 --> 03:14:20.220
Man schreibt die Entschuldigung

03:14:20.220 --> 03:14:22.220
an die Community

03:14:22.220 --> 03:14:24.220
und man gelobt Besserung

03:14:24.220 --> 03:14:26.220
schon bevor das Game überhaupt fertig ist.

03:14:26.220 --> 03:14:27.220
Das ist schon fertig geschrieben.

03:14:27.220 --> 03:14:29.220
Liegt in der Schublade.

03:14:29.220 --> 03:14:31.220
Das liegt in der Schublade ungefähr so,

03:14:31.220 --> 03:14:33.220
wie...

03:14:33.220 --> 03:14:35.220
Ich hab mal ne Doku gesehen zur Mondlandung.

03:14:35.220 --> 03:14:37.220
Leute...

03:14:37.220 --> 03:14:39.220
Also...

03:14:39.220 --> 03:14:40.220
Flache Erde und so.

03:14:40.220 --> 03:14:42.220
Wir lassen's jetzt mal komplett raus,

03:14:42.220 --> 03:14:45.220
aber ich hab mal ne Doku gesehen zur Mondlandung.

03:14:45.220 --> 03:14:47.220
Von der ich persönlich auch denke,

03:14:47.220 --> 03:14:49.220
dass sie stattgefunden hat.

03:14:49.220 --> 03:14:50.220
Zumindest...

03:14:50.220 --> 03:14:52.220
Jetzt mal Spaß beiseite.

03:14:52.220 --> 03:14:54.220
Und dort wurde erzählt,

03:14:54.220 --> 03:14:56.220
dass selbst Experten

03:14:56.220 --> 03:14:58.220
gesagt haben,

03:14:58.220 --> 03:15:00.220
wenn sie optimistisch sind,

03:15:00.220 --> 03:15:02.220
sie rechnen mit ner 50-50 Chance,

03:15:02.220 --> 03:15:04.220
dass das klappt.

03:15:04.220 --> 03:15:06.220
Und nicht nur ner 50-50 Chance, dass das klappt,

03:15:06.220 --> 03:15:08.220
sondern ner 50-50 Chance,

03:15:08.220 --> 03:15:10.220
dass die Astronauten wieder lebend heimkommen.

03:15:10.220 --> 03:15:12.220
Und es wurde damals schon

03:15:12.220 --> 03:15:14.220
für

03:15:14.220 --> 03:15:16.220
mehrere Fälle

03:15:16.220 --> 03:15:18.220
wurden Reden

03:15:18.220 --> 03:15:20.220
vorgeschrieben,

03:15:20.220 --> 03:15:22.220
für den Fall der Fälle, dass das passiert.

03:15:22.220 --> 03:15:24.220
Rakete explodiert beim Start,

03:15:24.220 --> 03:15:26.220
sie kommen nicht mehr zurück,

03:15:26.220 --> 03:15:28.220
sie stranden auf dem Mond.

03:15:28.220 --> 03:15:30.220
Da wurden im Vorfeld schon Pressemeldungen

03:15:30.220 --> 03:15:32.220
und Reden geschrieben.

03:15:32.220 --> 03:15:34.220
Die lagen dort in der Schublade.

03:15:34.220 --> 03:15:36.220
Und so ungefähr

03:15:36.220 --> 03:15:38.220
stelle ich mir das aktuell bei AAA-Entwicklung vor.

03:15:40.220 --> 03:15:42.220
Man schreibt die Entschuldigung schon mal im Voraus,

03:15:42.220 --> 03:15:44.220
dass man sich ordentlich Gedanken zumachen kann.

03:15:44.220 --> 03:15:46.220
Und sobald es dann eintritt,

03:15:46.220 --> 03:15:48.220
kann man sich den Voraus holen und direkt auf Twitter posten.

03:15:48.220 --> 03:15:50.220
So wirkt das für mich mittlerweile.

03:15:50.220 --> 03:15:52.220
Das ist halt leider mittlerweile so AAA-Game-Development.

03:15:54.220 --> 03:15:56.220
So.

03:15:56.220 --> 03:15:58.220
PvP-Modus zu vernachlässigen.

03:15:58.220 --> 03:16:00.220
Wo ich mich frage, wozu zum Fick

03:16:00.220 --> 03:16:02.220
wurde Overwatch 2 überhaupt schon veröffentlicht,

03:16:02.220 --> 03:16:04.220
statt zu warten und sich in Ruhe

03:16:04.220 --> 03:16:06.220
um den PvE-Mode zu kümmern.

03:16:06.220 --> 03:16:08.220
Zu all dem Ganzen muss man aber sagen,

03:16:08.220 --> 03:16:10.220
dass das Team von Overwatch 1 oder selbst das Team

03:16:10.220 --> 03:16:12.220
von Overwatch 2 am Anfang

03:16:12.220 --> 03:16:14.220
gar nichts mehr mit dem heutigen

03:16:14.220 --> 03:16:16.220
Overwatch 2-Team zu tun hat.

03:16:16.220 --> 03:16:18.220
Super viele Leute haben im Laufe der letzten Monate

03:16:18.220 --> 03:16:20.220
und Jahre das Team verlassen.

03:16:20.220 --> 03:16:22.220
Und ich kann mir vorstellen, warum.

03:16:22.220 --> 03:16:24.220
So wie das alles hier verlaufen ist,

03:16:24.220 --> 03:16:26.220
hat sich das bestimmt niemand aus dem Team gewünscht.

03:16:26.220 --> 03:16:28.220
Man kann sehen, wie passioniert und talentiert

03:16:28.220 --> 03:16:30.220
viele in der Crew sind.

03:16:30.220 --> 03:16:32.220
Die Trailer sehen teilweise so cool aus.

03:16:32.220 --> 03:16:34.220
Man weiß, dass die Leute

03:16:34.220 --> 03:16:36.220
etwas Großes aus dem Spiel machen wollten.

03:16:36.220 --> 03:16:38.220
Und das stelle ich mir

03:16:38.220 --> 03:16:40.220
extrem demotivierend vor.

03:16:40.220 --> 03:16:42.220
Du steckst da wirklich drei Jahre vollste Energie rein

03:16:42.220 --> 03:16:44.220
und dann wird sowas draus gemacht.

03:16:44.220 --> 03:16:46.220
Man weiß leider aber auch, dass die Bosse

03:16:46.220 --> 03:16:48.220
von oben vor allem eins wollten.

03:16:48.220 --> 03:16:50.220
Nämlich Geld. Und zwar so schnell wie möglich.

03:16:50.220 --> 03:16:52.220
Jetzt sehen wir ein Produkt, das eigentlich

03:16:52.220 --> 03:16:54.220
so gut hätte werden können, komplett unfertig

03:16:54.220 --> 03:16:56.220
und unter seinem Potenzial rausgeballert wurde.

03:16:56.220 --> 03:16:58.220
Es ist einfach nur schade.

03:16:58.220 --> 03:17:00.220
Und ein perfektes Sinnbild für den aktuellen Stand

03:17:00.220 --> 03:17:02.220
der Gaming-Industrie.

03:17:02.220 --> 03:17:04.220
Da hat er recht.

03:17:06.220 --> 03:17:08.220
Ja, da würde ich ihm recht geben.

03:17:08.220 --> 03:17:10.220
Es ist 12 Uhr, Leute.

03:17:12.220 --> 03:17:14.220
Ich hab Hunger.

03:17:14.220 --> 03:17:16.220
Ratet mal, was es heute gibt.

03:17:18.220 --> 03:17:20.220
Ihr kommt nicht drauf.

03:17:24.220 --> 03:17:26.220
Lachs mit Nudeln, korrekt.

03:17:30.220 --> 03:17:32.220
Ihr habt es zuschaut.

03:17:32.220 --> 03:17:34.220
Ihr seht schon, ihr habt das Pattern erkannt.

03:17:34.220 --> 03:17:36.220
Auch ohne Regex.

03:17:36.220 --> 03:17:38.220
Ich erinnere dich nicht dran,

03:17:38.220 --> 03:17:40.220
aber du hast dich gerade selbst daran erinnert.

03:17:48.220 --> 03:17:50.220
Alles klar, Leute.

03:17:50.220 --> 03:17:52.220
So.

03:17:52.220 --> 03:17:54.220
Gibt es irgendjemanden, den wir hosten können?

03:17:54.220 --> 03:17:56.220
Mal auf die Schnelle geguckt.

03:17:56.220 --> 03:17:58.220
Wem followe ich denn?

03:17:58.220 --> 03:18:00.220
Der gerade on ist.

03:18:00.220 --> 03:18:02.220
Leicht deutschsprachig

03:18:02.220 --> 03:18:04.220
und nicht ganz.

03:18:04.220 --> 03:18:06.220
Mal gucken.

03:18:22.220 --> 03:18:24.220
Sehe ich jetzt niemanden?

03:18:24.220 --> 03:18:26.220
Gut, dann gehe ich jetzt off.

03:18:26.220 --> 03:18:28.220
Ich hab Hunger, Leute.

03:18:28.220 --> 03:18:30.220
Bis dann.

03:18:30.220 --> 03:18:32.220
Macht's gut.

03:18:32.220 --> 03:18:34.220
Untertitel im Auftrag des ZDF, 2021

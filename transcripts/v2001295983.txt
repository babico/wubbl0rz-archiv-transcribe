Herr Quaid.
Michael, fünf Spielejahren auch am Start.
Weeps in.
Ich bin bei Tag 3.
Nicht sonderlich weit.
Ich bezweifle auch, dass ich bis zum 25. fertig werde.
Aber das ist ja nicht wild.
Ich meine, es ist jetzt nicht, als bin ich da irgendwie bei den Toplisten oder so dabei.
Kannst du ein Keyboard empfehlen?
Für was ist die Frage?
Zum Spielen?
Zum Programmieren?
Universal?
Zu viel Sidetracked, ja.
Also grundsätzlich gesagt, brauchst du ein Keyboard eher zum Tippen, Programmieren, Basteln, was auch immer.
Achso, ich kann dir die zwei Keyboards empfehlen, die ich habe.
Ich habe eins zum Spielen.
Wir müssen gar nicht lang rumreden, weil viele Sachen kann ich eh nicht ausprobieren.
Viele Sachen habe ich eh nicht ausprobiert die letzten Jahre.
Also ich kann euch gar nicht so viel empfehlen.
Ich mache mal kurz die...
Die Musik, Alter.
So, ich warte mal kurz, bis das gestartet ist.
Also, ich habe zwei Tastaturen.
Einmal, zum Spielen habe ich eine Logitech G513.
Wobei ich sagen muss, rein zum Programmieren und rein zum Tippen und so würde ich die nicht unbedingt benutzen.
Die ist ganz gut wegen der Treibhaussoftware und was für Möglichkeiten.
Also theoretisch kannst du auch RGB-Features benutzen, aber ganz ehrlich, ich habe das Ding einfach auf durchgehend blau stehen und gut ist.
So, und das habe ich hier daheim auf der Arbeit, wo ich tatsächlich nur am Basteln, am Administrieren, am Programmieren, am Tippen bin, Terminal benutzen.
Da habe ich eine Ducky One Skyline.
Ich habe allerdings die erste Variante und zwar die mit NumBlock.
Also die, die man jetzt hier irgendwie nicht sieht drauf.
Hier, hier.
Ne.
Aber mit der normalen Enter-Taste.
Also meine sieht so aus, nur hat sie noch einen NumBlock.
Tja, wenn ich die jetzt mal finden würde irgendwie.
Hier.
So sieht meine aus.
Full Size mit diesem, ja, irgendwie fast rechtdeckigen Enter-Knopf.
Weiß nicht, was es mit diesem Enter-Knopf auf sich hat, den mag ich aber nicht.
Ich habe hier Full Size.
Gut.
Die kann ich tatsächlich auch empfehlen.
Wenn du den ganzen Tag am Tippen bist.
Die finde ich gut.
Einzige Sache, die ich gemacht habe, ist, nachdem ich die auf der Arbeit benutze.
Ja, meine hat eher auch so die Farbe, Farbgebung.
Die einzige Sache, die ich gemacht habe, weil ich die auch auf der Arbeit benutze, ist, ich habe so Silikonringe.
Tastatur, Silikonringe.
Weiß nicht, ob man das so findet.
Oh, fuck.
Achso, Silikonringe.
Silikonringe.
So was habe ich da drunter, unter manchen Tasten.
Unter manchen Tasten, nicht unter allen.
Unter...
Warum genau hält er sich gerade den Ellenbogen fest?
Was hat das mit seinem Ellenbogen zu tun?
Die haben irgendein Stockfoto genommen, oder?
Ah, das reduziert Fingererschöpfung.
Ja, ganz bestimmt.
Ja, alles klar.
Also, der Grund, warum ich das drunter habe, ist, bei manchen Tasten neige ich dazu.
So feste drauf zu hauen, und damit ich den Leuten auf der Arbeit nicht gar so sehr auf den Sack gehe.
Wow, wow, wow, wow, ja gut.
Habe ich mir gedacht, ich mache da mal sowas drunter.
Aber die Ducky One Skyline kann ich dir wirklich empfehlen.
Das ist eine nice Tastatur.
Du kannst mit der...
Ich habe noch die Einser.
Du kannst mit der Zweier, habe ich gelesen.
Mit der Einser auch irgendwie.
Mit der Zweier ist es wohl einfacher.
Hast du gar so einen integrierten Microcontroller für Makros, falls man sowas braucht.
Das sind dann so richtige Hardware.
So Makros.
Ohne Windows-Treiber-Software.
Du hast recht, du hast Handgelenk.
Wie komme ich auf Ellenbogen?
Ellenbogen ist halt viel weiter unten.
Ja, geht mittlerweile halbwegs.
Ist schon mal ein bisschen merkwürdig, so ohne Cuts.
Muss man sich auch wieder erst dran gewöhnen.
Gucken, vielleicht hole ich mir nächstes Frühjahr wieder eine aus dem Tierheim.
Erstmal updaten hier.
Reboot.
Darf ich fragen?
Was für ein Chrome-Branche?
Gar kein Chrome.
Ich benutze Chromium zum größten Teil.
Und Chrome.
Und Firefox.
Und Edge habe ich installiert, aber benutze ich nicht.
So.
Oh, ich habe schon gedacht.
Das hängt beim Starten.
Ja, Chico lebt nicht mehr.
Chico ist...
Ich überlege gerade.
Heute ist Montag.
Heute ist Montag.
Am Freitag ist Chico gestorben.
Ja.
Z...
Zetsch.
Ich frage es immer noch.
Zetke oder Zetsch?
Ja, Chico hatte alles.
Chico hatte Schilddrüsenprobleme, Nierenprobleme, zu hohen Blutdruck, Augenprobleme, zu wenige rote Blutkörperchen.
Chico hatte alles.
Und das aber alles auf einmal irgendwie.
Das war halt zu viel für die Cuts.
Also, Firefox könnte das nächste Jahr über tatsächlich wieder richtig Fahrt aufnehmen.
Also, wenn Mozilla.
Ja.
Wenn, ähm...
Also, wenn...
Wenn Mozilla irgendwie...
Irgendwie, ähm...
Ja, wenn man Mozilla-Aktien kaufen könnte, sagen wir es mal so.
Also, wenn ich, wenn Mozilla-Aktien, Aktien hätte, also wenn, wenn Mozilla an der Börse wäre, würde ich für nächstes Jahr tatsächlich Mozilla-Aktien kaufen.
Weil ich habe die Vermutung, dass die Firefox...
Die Firefox-Usage nächstes Jahr ein bisschen zunehmen wird, im Vergleich zu diesem Jahr.
Ob sich das dann auf den Aktienkurs gut auswirken würde, sei mal wieder was anderes.
Aber, das würde ich machen, weil Google ist gerade so in ihrem Element, was wir nutzen aus, dass wir Google sind, ist, auch mit dem Schwermachen von Adblockern und sowas,
dass es in Zukunft eventuell dazu führen könnte, was sicher ist man sicher da nie, dass Google wieder anfängt mit ihren blöden Sachen.
Das haben sie ja schon angekündigt.
Von wegen...
Manifest V3 und APIs entfernen, dass Adblock nicht mehr richtig funktioniert.
Sie haben zwar schon jetzt wieder mal, mal wieder zurückgerudert, bei dieser Aktion hat Google ja schon irgendwie fünfmal zurückgerudert, aber so langsam aber sicher, ähm, kommt da immer mehr.
Und wenn das der Fall ist, ja, dann werde ich einfach nur noch Firefox benutzen, ganz einfach.
Deswegen ist es auch unglaublich wichtig, richtig und wichtig, wie man heutzutage so schön sagt, dass es noch einen alternativen Browser gibt.
Ja.
Das kann ich dir nicht erklären.
Da bin ich nicht Ansible-feifert genug.
Unter Collections verstehe ich eigentlich sowas wie Listen.
Wahrscheinlich ist es eine Collections-Zusammenfassung von mehreren Playbooks, wo unterschiedliche...
Ah, ich habe keine Ahnung.
Das weiß ich nicht.
Das weiß ich...
Tatsächlich ist es wirklich was, was mir nichts nicht sagt.
Ich habe zwar Ansible...
Äh, Ansible...
Ansible, Leute.
Ansible.
Ich habe Ansible schon öfters benutzt.
Aber jetzt so in diesen ganzen Ansible-Metagramm von eigenen Module erstellen und irgendwo anbieten...
Das habe ich alles noch nicht.
Ich benutze Ansible, um meine Server zu konfigurieren.
Ich benutze Ansible, um da ein paar Sachen einzustellen.
Aber so im großen Ansible-Game bin ich jetzt nicht.
Ah ja.
Ach so, okay.
Siehst du, wenn du deine Sachen veröffentlichen möchtest als Ansible.
Quasi Third-Party-Module.
So machen die das.
Genau das.
So Salami-Taktik.
Sie gehen den Leuten so lange auf den Keks, bis dann irgendwie so...
Bis die Leute nicht mehr können und dann irgendwas durchkommt, was sie eigentlich gar nicht wollen.
Ja.
Deswegen ist es echt wichtig, dass es Firefox gibt.
Und ich habe die blöde Vermutung, dass es nächstes Jahr soweit sein wird, dass es in Google immer schwieriger wird.
Ordentliche Add-ons, die was machen, was Google nicht mag.
Und es ist relativ einfach, was zu machen, was Google nicht mag.
Ja, Add-ons, die Google nicht mag.
Und dann schließe ich daraus, ich vermute zumindest, dass dadurch die Firefox-Usage etwas zunehmen wird.
Also wenn ich, wenn Mozilla Aktien hätte, dann würde ich tatsächlich...
Ich würde jetzt ein paar Mozilla Aktien kaufen, mal auf gut Glück.
Aber haben sie ja nicht.
Dein Take zu...
Oh, ich sehe den Sinn dieses Browsers nicht.
Seriously.
Ich weiß gar nicht, warum denn so viele verwenden.
Die haben mich ja auch mal angefragt.
Das war witzig.
Ich habe sogar gesagt, Leute, kein Ding.
Doch, doch.
Ich weiß nicht, ob es immer noch der größte Geldgeber ist, aber wahrscheinlich, ja.
Google...
Also Mozilla verdient hauptsächlich Kohle halt über Google.
Also über Google...
Über Traffic, den sie auf Google bringen.
So rum, muss man das vielleicht sagen.
Ja, also...
Ja, wie gesagt, mein Take zu Opera GX ist, ich verstehe nicht, warum das jemand verwendet.
Also was ist der Vorteil von Opera GX?
Zum Beispiel, was ist Firefox oder gegen irgendeinen Chrome, wo Google Sachen...
Also ich verstehe es eigentlich nicht.
Das Einzige, was Mozilla...
Nein, ist es nicht.
Ist es nicht.
Ist es nicht.
Also ich meine, im Kern, natürlich, die Browser-Engine, das ist Plink, also quasi Chrome.
Aber die Sachen drumherum, die sind nicht Open Source.
Ich meine, okay, ich sehe ein paar, sagen wir mal, ein paar oberflächliche Vorteile.
Oh, ich muss mal andere Musik anmachen.
Kirby geht mir gerade auf den Keks.
Einmal so.
Also ich sehe ein paar oberflächliche Vorteile von Opera GX.
Ich sehe zum Beispiel den Vorteil, dass du da in irgendeiner Art und Weise deine RGBs mitsteuern, RGB-Beleuchtung mitsteuern kannst.
Wozu auch immer ich das im Browser brauche.
Dann hast du irgendwie die Möglichkeit, dass man...
Nee, das war es doch...
War es eigentlich schon.
Du hattest mal die Möglichkeit...
Du hattest mal die Möglichkeit, verschiedene Background-Tabs quasi schlafen zu legen.
Aber das können die meisten anderen Browser mittlerweile auch.
Bett-Getabs.
Und ansonsten, was ist der Vorteil von Opera GX?
Mir fällt wirklich keiner ein.
Wir kommen uns das jetzt mal an zusammen.
So, der Gaming-Browser.
Warum es auch immer der Gaming-Browser ist.
So, also was ist der große Vorteil von Opera GX?
Was wollen sie uns erklären?
Hier, CPU-Limiter, RAM-Limiter.
Das sind einfach nur...
Das sind nur schöne Kosmetik-Sachen, die niemand braucht.
Ganz ehrlich, wenn ich irgendeine JavaScript-Seite im Hintergrund habe,
die permanent irgendwelche Schleifen laufen lässt
und nennenswerte CPU zieht, auch im Idle,
dann mache ich die einfach zu.
Und RAM-Limiter ist heute auch nicht das großartige Problem.
Du kannst ja mit...
Also die meisten Browser schicken ja inaktive Tabs in...
Ja.
Werfen inaktive Tabs aus dem RAM raus.
Also das braucht eigentlich keiner.
Ich behaupte jetzt einfach mal...
Ich beachte auch nirgends, wo deine Games schneller.
So.
Dann...
Ja, das Theming braucht auch kein Mensch.
Custom-Themes, wen juckt's?
Ja.
Weil davon abgesehen, geht sogar in Firefox.
Game-Deals braucht auch keiner.
Twitch.
Wozu brauche ich Twitch?
Ich kann Twitch auch einfach so aufmachen.
Discord.
Ich kann Discord einfach so aufmachen.
Musikplayer.
Okay, wer es braucht, kann man aber schlicht...
Einfach stinknormal auf der Webseite von Spotify oder von Amazon Music oder von YouTube Music machen.
Messengers kann man sich so installieren, brauche ich nicht im Browser.
Aber davon abgesehen, was bei dem ganzen Ding ja immer mitschwebt ist,
möchte ich Opera GX wirklich meine Zugangsdaten zu all diesen Services geben.
Das ist ja auch hochgradig fragwürdig.
Keine Ahnung, wozu man das braucht.
QR-Code-Scanner gibt es auch.
Tausend alternativen Fast Navigation.
Ich habe andere Browser auch.
VPN.
Was ich von den meisten VPN-Sachen halte, wisst ihr ja.
Und Adblocker ist auch easy integriert mit anderen Sachen.
Also ich sehe legit, jetzt ernsthaft, ich sehe keinen Vorteil davon, Opera GX zu benutzen
und sich dem China-Chinesen-Zwei-Ware-Zeug auszusetzen.
Also ich habe...
Hast du mal Brave benutzt?
Ganz kurz glaube ich damals auf dem Android-Tablet.
Danach nie wieder und da habe ich auch jetzt den großen Vorteil nicht erkannt.
Also wenn du mich fragst, ich fahre ganz gut mit der Kombination aus Chromium und Firefox
plus für manche DRM-Sachen Chrome direkt, weil man mit Chromium Probleme hat.
Beispielsweise mit Amazon, Amazon DRM und solche Geschichten kann man Chrome direkt verwenden.
Ansonsten Firefox plus Chrome.
Es gibt für mich ernsthaft keine sinnvollen Argumente für irgendwelche China-Chinesen-Browser
mit Sachen, wo man nicht weiß.
Man darf nicht vergessen.
Die meisten Leute leben im Browser, direkt oder indirekt.
Die Leute sind dort angemeldet in ihren ganzen Social-Media-Accounts,
Livestream, YouTube, Twitch, alle möglichen Sachen, TikTok, Facebook, Instagram, alle möglichen Dinger.
Willst du wirklich so einen Browser, wo keiner genau weiß, was er macht,
die Zugangsdaten, Passwort-Manager ist ja auch noch teilweise mit drin.
Willst du wirklich so quasi dem...
Browser, die die Zugangsdaten zu deinem Leben geben?
Ich weiß nicht.
Wenn überhaupt, dann nur einem Open-Source-Browser.
Und ich mache es so, ich bin auch nicht permanent auf allen Browsern mit allem eingeloggt.
Ich benutze Browser für unterschiedliche Sachen.
Ich habe Firefox beispielsweise, also YouTube, Firefox.
YouTube mache ich prinzipiell nur unter Linux, weil da habe ich viel zu viel Schiss,
dass mal echt irgendwas ist und irgendwelche Session-Cookies geklaut werden oder sowas.
Da mache ich mir unter Linux am wenigsten Gedanken.
YouTube bin ich nur unter Linux eingeloggt.
Twitch bin ich nur in Chromium eingeloggt zum Beispiel.
Und mit dem zweiten YouTube-Account bin ich in Chrome eingeloggt.
Und Amazon bin ich auch in Chrome eingeloggt für DRM-Geschichten.
Twitch, Chromium.
Ja, also ich habe da...
Ich habe das ein bisschen verteilt alles.
Das würde ich...
Ich kann es nicht beweisen,
aber es gibt genug Leute, die Opera untersuchen.
Und zumindest, wenn man sich die Hintergründe anguckt, wer da alles mit dabei hängt.
Allein schon das ist nicht sonderlich vertrauenswürdig.
Ob man jetzt wirklich schon jemand mal genau im Detail analysiert hat,
was wie geschickt wird, weiß ich nicht.
Aber spätestens, wenn man dieses komische Opera VPN benutzt,
dann geht ja alles direkt nach China.
Also da hätte ich gar keinen Bock drauf.
Also Opera, also Opera GX kommt mir echt nicht in die Tüte.
Der Witz ist ja, die haben mich auch mal angefragt,
ob ich nicht Werbung machen möchte für die.
Habe ich gesagt, easy, mache ich.
Kein Problem, Werbung, nice.
Wir waren uns sogar schon über die Kohle einig.
Chat, ich würde es euch sagen.
Ich würde es euch sagen, ich weiß es aber nicht mal, wie viel es gewesen ist.
Schon zwei Jahre her oder so.
Ich glaube, das haben wir sogar mal zusammen geguckt, das Video.
Zumindest waren wir uns schon einig.
Und am Ende haben die gesagt, ja, also für das Werbevideo
müsste ich halt selbst Opera GX runterladen und benutzen.
Und dann quasi sagen, was mir daran so besonders,
was mir persönlich besonders gut geht.
Was mir besonders gut gefällt.
Und da habe ich halt gesagt, ich habe persönlich aber kein Interesse daran,
Opera GX zu benutzen.
Und dann haben die geantwortet, ist auch fair,
es ist auch eine respektable Aussage, die jetzt kommt.
Haben sie gesagt, nee, sie wollen lieber mit Leuten zusammenarbeiten,
die auch begeistert sind über die Produkte.
Okay, dann machen wir es halt nicht.
Finde ich auch in Ordnung, dass man das sagt.
Aber ich habe denen halt klar gesagt,
ich bin nicht so ein Fan von Opera GX.
Ich bin nicht so ein Fan von Opera GX.
Ich bin nicht so ein Fan von Opera GX.
Ich bin nicht so ein Fan von Opera GX.
Ich bin nicht so ein Fan von Opera GX.
Ich bin nicht so ein Fan von Opera GX.
Ich bin nicht so ein Fan von Opera GX.
Im Prinzip haben wir die gefragt,
also im Prinzip haben wir gesagt,
wir machen ein Werbevideo für euch,
aber ich will es nicht benutzen.
Und das wollten sie nicht.
Den meisten ist das in der Tat egal.
Ich habe Werbung gemacht für irgendein komisches Mobile Game
vor nicht allzu langer Zeit.
Ich war auch noch nie in einer Wüste und alles mögliche.
Das hat alles Stock-Footage und drüber reden getan.
Ich musste das nie selbst spielen.
Aber auch nicht nice.
Warum?
Gibt Geld.
Ich stelle mich ja nirgendwo hin,
und sage, Leute, meine persönliche Empfehlung,
ich benutze das schon seit 15 Jahren,
ist dieser und dieser Browser.
Ich sage das, was gesagt werden soll,
und dann ist es gut.
Aber selbst verwenden will ich es nicht.
Aber das wollten sie nicht.
Was ich echt respektabel finde,
zu sagen, ey, dann nicht.
Wir haben bei Kunden
Suse, Ubuntu, Red Hat, Rocky System
auf den Softwaren.
Wir zuhören Postgres und schreiben unsere Krypto-Räume.
Achso, ja, okay.
Das ging jetzt gar nicht an mich.
Excellent.
Excellent.
Excellent.
Okay.
Also.
Wo sind wir stehen geblieben?
Wir machen jetzt folgendes.
Ihr seht es ja heute.
Ihr seht es ja schon im Titel.
Wir gucken uns heute einmal DOCGE an.
DOCGE.
Das wollte ich eigentlich gestern schon machen.
DOCGE.
Das ist von dem gleichen Typ, der Uptime Kuma programmiert hat, wie man hier sieht.
Repositories.
Das ist auch was, was ich gerne potenziell da, also, ich habe es ja schon mal benutzt,
ja.
Ich würde es gerne daheim benutzen.
Das Problem ist, dass es mir ein bisschen zu rudimentär ist in vielen Bereichen.
Für die meisten Leute mag das gut sein.
Aber ich will zum Beispiel in dem Monitoring-System auch sehen, wie mein Festplattenverlauf ist
oder sonst was bei manchen Systemen.
Das geht halt hier nicht.
Du kannst nicht Langzeitdaten speichern.
Und du kannst auch nicht was anderes außer Up und Down speichern.
Ich meine, du kannst theoretisch mit so einem, quasi, eigens gebastelten Check abfragen, was
du willst.
Aber ich finde es trotzdem ein bisschen, bisschen zu rudimentär für meine Sachen.
Aber wofür es da ist, ist gut.
So, zumindest der gleiche Typ hat ein Docker-Webinterface gebaut.
Das ist ehrlich gesagt nichts, was ich dauerhaft benutzen würde, lokal bei mir daheim, weil
ich habe zur Zeit nicht so wirklich viele Anwendungszwecke dafür.
Aber es ist immer gut zu wissen, was gerade so abgeht.
Und vielleicht entdeckt man ja auch das ein oder andere Projekt, was einem gefällt.
Das ist wohl ein Docker-Compose-File-Manager.
Ich weiß nicht, in wie viel Überschneidung das mit Portena hat.
Ich persönlich hoffe möglichst wenig, weil ich mag Portena nicht.
Ohne, dass ich jetzt wirklich exakt den Finger drauf legen kann, warum ich Portena nicht mag.
Ich mag es nicht.
Ich weiß nicht, wie es euch geht.
Jemand von euch Portena-Enjoyer und mag das?
Ich mag es nicht.
So, das gucken wir uns an.
Und davor machen wir den ersten Part von Advent of Code 2023.
CLI-Portena sehe ich auch so.
Wir machen den ersten Part von Advent of Code 2023.
Warum nur den ersten Part?
Ist ganz einfach.
Ist ganz einfach.
Erstens, weil ich mir die Aufgabe schon mal durchgelesen habe.
Und mir auch schon ungefähr überlegt habe, wie man das machen könnte.
Also ist es jetzt nicht, dass ich das komplett blind mache.
Ich habe mir das vorhin angeguckt und habe mir schon was überlegt.
Und habe auch was kleines gebastelt, um zu gucken, ob das vom Ansatz her funktionieren würde.
Ob es wirklich funktioniert, weiß ich nicht.
Aber ich gehe davon aus, dass das funktioniert.
Und Part 2 kenne ich noch nicht.
Also ich habe auch keine Ergebnisse für Part 1.
Also ich kenne Part 2 legit nicht.
Aber nachdem ich Part 2...
Nachdem Part 2 immer ein bisschen komplizierter ist,
wie Part 1 und Part 1 an Tag 3 schon relativ kompliziert wirkt,
habe ich da glaube ich keinen Bock drauf.
Wenn ich das machen würde, noch Part 2,
dann wäre ich glaube ich durch.
Da könnten wir uns heute Docke nicht mehr angucken.
Scripted Stream, ja.
Ich sage es ja.
Angekündigter Scripted Stream.
Das ist nicht nur Scripted Stream, Max.
Das ist vielleicht sogar eine Aufzeichnung.
Und die Message ist jetzt hier nur drin, dass es nicht wirkt wie eine Aufzeichnung.
Ich habe das vorher mit...
Ich meine, du bist ja Mod.
Wir haben das vorher einfach gescriptet zusammen.
Ich auch nicht.
Ich habe auch keinen Bock auf Kubernetes.
Single Node Kubernetes irgendwie.
Da habe ich auch keinen Bock drauf.
Ganz ehrlich, ich persönlich mag ganz normales Docker CLI.
Command Line.
Oder im Zweifelsfall mal Docker Compose.
Aber ehrlich gesagt, Docker Command Line reicht mir voll und ganz aus.
Und nachdem ich ja auf meiner HP Microserver Kiste seit über einem Jahr jetzt Unraid laufen habe,
ist das recht easy, welches Docker Interface ich benutze.
Nämlich das Web Interface von Unraid.
Ich bin mit Unraid auch nicht hundertprozentig glücklich.
Ich habe Unraid ja immer ein bisschen ausgelacht in der Vergangenheit.
Also welche Noobs verwenden das?
Jetzt muss ich sagen, ich finde es nicht schlecht.
Ich finde es aber auch jetzt nicht komplett sorgenfrei.
Ja, also es gibt...
Es gibt auch ein paar eklige Sachen an Unraid.
Zum Beispiel eine Sache, die mir an Unraid überhaupt nicht gefällt.
Also ich rede...
Ich rede da drüber.
Weiß nicht, ob die vielleicht ein Web Interface Screenshot haben, dass man das sieht.
Haben wir auch schon im Stream...
MonkaS, Alter, was ist mit der Zeit los?
Haben wir uns auch schon im Stream angeguckt.
Also eine Sache, die mir persönlich an Unraid überhaupt nicht gefällt.
Und das liegt nicht am eigentlichen Produkt, sondern am Hersteller.
Dass die manchmal enorm lange brauchen, um...
Wie soll man sagen?
Grobe Schnitzer, die auftauchen, auszubügeln.
Zum Beispiel gab es vor ein paar Versionen das Problem,
dass wenn man Container hat laufen lassen über Unraid,
dass die sich irgendwie...
Ich weiß nicht, wie ich euch das besser beschreiben soll.
Dass die irgendwie nicht mehr erkannt haben,
dass es Updates in dem Upstream...
Docker File...
Nicht Docker File, dass es in dem Upstream Docker Repo neue Versionen gab.
Und da stand dann eben...
Irgendwie immer so ein Disconnected Link stand da drin.
Und da haben die, glaube ich, echt 3 oder 4 Monate für gebraucht, um das zu fixen.
Und da denke ich mir halt, hey, ich kann meine Container nicht mehr updaten.
Neue Container machen teilweise Probleme beim Starten.
Das ist eines von 3 Hauptfunktionalitäten von dem Ding.
Das kann nicht sein, dass das 3 bis 4 Monate braucht, bis das gefixt ist.
Also das ist eine Sache, die mir auf den Keks geht.
Und das Webinterface wirkt auch ein bisschen altbacken.
Aber ansonsten ist Unraid insgesamt echt okay.
Wie wechselst du eigentlich zwischen Windows und Linux hin und her?
Sind das zwei verschiedene Rechner?
Ne, das ist ein Rechner.
Also, Host ist Windows mit verschiedenen Desktops.
Wie man hier sieht, verschiedene Desktops.
Und hier, ich zeige es dir, wenn ich aus dem Fullscreen rausgehe, sieht man es besser.
Und hier läuft einfach eine VM im Fullscreen.
Benutzt du auch macOS?
Ne, ich habe kein Mac.
Ich hatte mal eine Zeit lang einen selbstinstallierten Mac auf so einer alten...
ähm...
nicht wirklich thin client, sondern so einem NUC-Verschnitt.
Mit Nvidia-Karte hatte ich mal so ein selbstinstalliertes macOS laufen.
Aber ich habe da nie den großartigen, wie soll ich sagen, den großartigen Spaß daran gefunden.
Und auch für mich persönlich nicht den großen Anwendungszweck.
Ist Proxmox und Unraid vergleichbar oder ist Unraid etwas anderes?
Es ist schon in gewisser Weise vergleichbar.
Wobei man sagen muss, der Hauptfokus liegt woanders.
Bei Proxmox ist es eindeutig Virtualisierung.
Und bei Unraid ist es dreigeteilt.
Virtualisierung, Docker-Container und Raid-Netzwerk-Shares.
Es hat natürlich ein paar Überschneidungen.
Beides sind unter der Haube Linux-Distribution mit Web-Interface, um das Ganze zu verwalten.
Proxmox ist ein...
Ich glaube Debian.
Und Unraid ist, glaube ich, soweit ich weiß, ein Slackware.
Unraid ist tatsächlich das einzige Produkt, was ich kenne, was mir so spontan einfällt.
Auch was Slackware unten drunter verwendet.
Keine Ahnung, warum, wie die da drauf gekommen sind.
Warum es ausgerechnet Slackware sein muss.
Debian wäre wahrscheinlich angenehmer gewesen.
Ansonsten haben beide ein Web-Interface, um Container zu verwalten.
Und beide ein Web-Interface, um...
VMs zu verwalten.
Wobei man halt sagen muss, wenn es um Virtualisierung geht, ist Proxmox halt viel, viel angenehmer als Unraid.
Dafür kannst Du mit Unraid Deine ganzen Disks einrichten und Deine Netzwerk-Shares einrichten.
Docker-Container über das Web-Interface verwalten und nebenbei auch VMs.
Proxmox ist ja im Endeffekt rein für VMs.
Ja, Du kannst in Proxmox, ich weiß, kannst auch Container anlegen, sind aber keine Docker-Container.
Das heißt, im Endeffekt wirst Du wahrscheinlich eine VM erstellen und darin dann irgendwie auch wieder Docker-Compose oder sonst was machen.
Oder manch einer auch gleich in lokalen Kubernetes.
Also, wenn Dein Hauptaugenmerk Virtualisierung ist, dann ist eindeutig Proxmox das Bessere.
Wenn Du so ein Universal-Ding haben willst, dann ist Unraid, glaube ich, eher das.
Gibt ja noch verschiedene Alternativen, die man sich angucken kann.
Gibt Open Media World zum Beispiel noch.
Oder es gibt ja auch diesen Synology NAS.
Ich will es nicht Fork nennen, weil das ist es nicht.
Diesen, dieses...
Dieses inoffizielle Synology NAS zum Selbstinstallieren.
Dann gibt es noch FreeNAS, TrueNAS und solche Geschichten.
Hat alles ein bisschen unterschiedliche Schwerpunkte, unterschiedliche Stärken und Schwächen.
So die ultimative Lösung habe ich noch nicht gefunden.
Für mich ist Unraid ganz gut, weil es hat alles, was ich brauche.
Ich kann easy über das Webinterface ein paar Netzwerkshares anlegen.
Ich kann direkt darüber meine Flag...
Meine Platte mit Lux verschlüsseln direkt beim Starten.
Kann meine Container drauflaufen lassen und ein paar VMs und das war's.
Das Webinterface von Unraid wirkt halt schon ein bisschen oldschool.
Aber schon in...
Also es ist...
Es wirkt nicht, als wäre es wirklich aus 1995.
Aber die Optik ist ein bisschen 1995.
Oder sagen wir mal so 2005, nicht 1995.
Aber insgesamt finde ich es ganz gut.
Von allen Sachen, die ich bisher angeguckt habe, auch wenn ich es früher immer so ein bisschen belächelt habe,
ist Unraid echt noch mit so das Unproblematischste und vom Gesamtpaket her das Beste für meinen Anwendungszweck.
Je nachdem, was ihr machen wollt, kann das bei euch anders aussehen.
Kannst du ein Projekt empfehlen, um Lebenslauf aufzubessern?
Ich will in den DevOps-Bereich wechseln, habe aber keine nennenswerte Erfahrung in dem Bereich.
DevOps ist jetzt auch relativ groß, ja.
Also...
Willst du jetzt eher was Richtung Continuous Integration, Delivery machen?
Willst du jetzt eher was Richtung, sagen wir mal, Cloud-Infrastruktur-Automatisierung machen?
Was ist denn so das, was du machen willst?
So pauschal ist es sehr schwer zu sagen, ja.
ESX ist nice.
Ich habe aber bis heute noch nicht genau die Lizenzbedingungen von ESXI gecheckt.
Die Basic-Version ist ja, glaube ich, kostenlos.
Ich weiß aber nicht, ab wann man was bezahlen muss.
So viele habe ich nicht, aber 10 oder so müssten es auch sein.
Eher Automatisierung.
Ja, dann ist für die Skill-Liste...
Übrigens, ich habe es so gemacht, ich habe in meinem Lebenslauf gar nicht reingeschrieben, was ich kann,
sondern ich habe eine Extra-Liste mit Skills gemacht.
Die haben wir irgendwo auch hier.
Das ist nicht original, die Liste, muss ich gleich dazu sagen.
Das ist nicht original, die Liste, die ich bei meiner Bewerbung mitgeschickt habe,
aber zu 98% ist es das.
Ich habe sowas hier mitgeschickt.
Was ist das?
Was zum Teufel will Edge von mir?
Ja, also ich habe das hier beispielsweise.
Und da habe ich Best of...
Ich habe das am Ende noch, wie gesagt,
nur 98% ist das gleich.
Ich habe noch ein bisschen was gedreht, bevor ich es wirklich in die Bewerbung gepostet habe,
aber das habe ich gerade nicht hier.
So, und wenn du hier im DevOps-Bereich guckst,
da habe ich halt einfach mal so Best of alles reingeschrieben,
womit ich aber auch schon was gemacht habe.
Also ich habe dort wirklich nur Sachen reingeschrieben,
wo ich auch was mitgemacht habe
und womit ich auch schon was gemacht habe.
Und wo man mich auch was mitmachen lassen könnte.
Also wenn du was Richtung Automatisierung machen willst...
Also wenn du was Richtung Automatisierung machen willst...
Genau, was ich sagen wollte ist,
vielleicht, je nachdem wie viele Sachen du kannst,
ist es vielleicht auch für dich sinnvoll,
eine extra Liste mitzuschicken, was du kannst
und nicht so sehr im Lebenslauf das reinzupappen.
Was natürlich immer sinnvoll ist,
und das habe ich bei mir auch gemacht,
ich habe bei mir auch einen Lebenslauf geschrieben,
was ich bei den einzelnen Arbeitgebern
so für Schwerpunkte hatte.
Also wenn du was machen willst mit Automatisierung,
dann kannst du dich mit Terraform beschäftigen,
das ist immer sinnvoll,
mit Terraform und Cloud-Infrastruktur
oder auch mit Ansible und Linux-Servern.
Wobei ich ehrlich gesagt sagen würde,
HIPPA ist auf jeden Fall Cloud-Infrastruktur mit Terraform,
aber spätestens wenn es mal ein paar Linux-VMs gibt
und die wird es immer geben
und die ein bisschen komplizierter sind,
dann ist es auch nicht verkehrt Ansible zu kennen.
Also ich würde mir tatsächlich irgendwas überlegen,
was ich an Cloud-Infrastruktur aufbauen könnte mit Terraform
und dann musst du dir halt irgendwas kleines überlegen,
was da drauf laufen lässt,
um mal so diesen kompletten,
diesen kompletten, wie soll man es nennen,
das komplette Szenario durchzuspielen.
Also du kannst zum Beispiel
irgendwie eine Mini-Beispiel-Anwendung programmieren,
das ist ja auch, wenn du im Bereich DevOps willst,
würde ich sagen fast schon Pflicht,
dass du mal zumindest eine Programmiersprache,
halbwegs auf die Reihe kriegst
und du kannst eine kleine Beispiel-Anwendung programmieren,
das muss wirklich nichts Wildes sein,
was im Stile von Hello World,
es muss wirklich nichts Großartiges sein,
irgendeine Web-Anwendung kannst du bauen,
dann setzt du mit Terraform die Cloud-Infrastruktur auf,
um die Anwendung laufen zu lassen,
es können im Endeffekt auch zwei VMs sein,
baust zwei VMs auf,
lässt bei Terraform noch einen Cloud-Cloud-Balancer provisionieren,
und dann richtest du noch ein GitHub-Repo ein
und machst dann dort per GitHub Actions
quasi automatisches Build und Deploy von dieser Anwendung,
oder automatisches Build kannst du zumindest machen von der Anwendung,
und dann händisches Deployment auf die Server
und so, dass das Ganze halt nicht kaputt geht.
Also du baust quasi mal eine hochverfügbare Umgebung
in der Cloud auf mit Terraform und Linux,
mit einer kleinen Beispiel-Anwendung,
dann hast du alles abgedeckt,
so grundumschlagmäßig,
wo man ein bisschen was reinschreiben kann,
du kannst reinschreiben,
du kennst dich mit GitHub Actions,
Continuous Integration Delivery aus,
kannst reinschreiben,
du kennst dich mit Terraform aus,
du kennst dich mit Linux aus,
ich meine auskennen ist jetzt immer noch in Anführungszeichen zu sehen,
nur weil du was kleines aufgebaut hast,
würde ich jetzt, ne,
würde ich mich nicht gar so sehr aus dem Fenster lehnen,
und bei überall irgendwie,
Expertenlevel dran schreiben oder sowas,
aber da hast du schon mal rundumschlag was gemacht,
was auf jeden Fall in den DevOps-Bereich passt.
GitHub Actions, Continuous Integration Delivery
ist immer ein Thema,
das kannst du immer reinschreiben,
da gucken die drauf,
Terraform auf jeden Fall auch,
es muss auch nicht Terraform sein,
es kann auch Open Tofu sein,
stell dir mal vor,
ich würde ein Vorstellungs-,
wir würden jetzt ein Vorstellungsgespräch führen,
und ich würde dich fragen,
was ist der Unterschied zwischen Terraform und Linux,
Terraform und Open Tofu,
dann würde ich erwarten,
als angehender DevOps-Engineer,
dass du mir das sagen kannst,
beziehungsweise,
warum gibt es das eine überhaupt,
wie bist du eigentlich beruflich in Cloud-Technologien gekommen,
schrittweise,
ich habe keine Weiterbildung oder Zertifikate gemacht,
ich habe mir das einfach angeguckt,
und damit gearbeitet,
und rumgebastelt,
also,
es interessiert mich privat,
es interessiert mich hier auch für den Stream,
ich habe auf der Arbeit,
war ich von Anfang an dabei,
wenn es um Cloud-Geschichten geht,
also,
ja,
schrittweise halt,
es ist immer ein bisschen schwierig,
wenn es was schon gibt,
ja, also,
stellt euch mal vor,
ihr seid jetzt fertig mit der Ausbildung,
ihr habt bisher nur Windows-Administration gemacht,
und dann sagt einer zu euch,
ey,
morgen fängst du an,
unsere Infrastruktur in die Cloud umzuziehen,
dann wirst du dann erstmal sagen so,
äh,
what,
was wollt ihr,
und dann fangen die Leute an,
im Webinterface VMs zusammenzuklicken,
und sowas,
ja,
man braucht,
ich würde,
ich würde es anders formulieren,
ja,
man braucht ein Handy,
ich würde sagen,
man muss sich dafür interessieren,
sonst ist das,
sonst ist das eher Quälerei,
weil,
vieles in der Cloud ist auch echt nervig,
ja,
wenn du dir Unterschiede zwischen Cloud-Anbietern anguckst,
wenn du,
wenn du dir beispielsweise anguckst,
wie super redundant,
oder so,
so repetitiv da so Terraform-Sachen teilweise aufgebaut sind,
wie unlogisch manche Sachen sind,
bei Cloud-Anbietern,
wie schlecht manchmal auch Sachen beschrieben sind,
ich habe euch ja das Problem erzählt von Google-SSDs,
die eigentlich gar keine SSDs sind,
ne,
das habe ich euch,
habe ich euch erzählt,
also bei Google,
wenn ihr bei Google sagt,
ähm,
Google Cloud SSD,
ich weiß,
ich,
ich schweife jetzt etwas,
etwas ab,
aber,
ich schweife etwas ab,
dü,
dü,
dü,
dü,
ja,
aber,
aber,
aber,
aber,
aber,
aber,
aber,
aber,
aber,
wenn ihr bei Google so guckt,
nach SSDs
bei Google,
da werdet ihr vielleicht feststellen,
dass ihr gerade geflashbangwurtet
von der Google-Seite,
alter,
please,
Dark-Reader,
ja,
da haben die,
da haben die hier sowas,
Laufwerkpreise,
eh,
ent,
alter,
die Google-Dokumentation,
es ist so schrecklich,
man,
du findest nix,
also,
ich kann es,
Hier, Storage Options.
Das ist das eigentliche, was ich gesucht habe hier.
Storage Options, genau.
Also, Google hat folgende Sachen.
Es gibt, können wir das Ganze vielleicht auf Englisch stellen, please?
So.
Google hat verschiedene Storage-Optionen,
wenn ihr beispielsweise VMs oder Kubernetes-Cluster
oder Zeug in der Google Cloud aufbaut.
Die haben Balance-Persistent-Disk.
Die haben SSD-Persistent-Disk.
Also, die haben ganz viele verschiedene Sachen.
Und jetzt habe ich noch eine Frage.
An euch, Chat.
Was meint ihr, wie viele von diesen Sachen hier
sehen nicht nur nach SSDs aus,
sondern sind wirklich auch SSDs?
So, wie man es sich vorstellt.
Okay, die Frage ist falsch gestellt.
Es sind fast alle SSDs.
Aber, also, worauf ich raus will,
wo das echt nicht ganz klar ist,
also, das hier, das schreiben sie auch,
das sind Oldschool-Festplatten.
Ja, ich muss das anders erklären.
Das sind Oldschool-Festplatten, ist egal.
Also, man würde ja,
man würde ja erwarten, dass SSD,
also, SSD-Persistent-Disk,
nehmen wir das jetzt mal als Beispiel.
Da steht ja auch, dass das,
wobei, ich bin mir gar nicht sicher,
ob da wirklich dabei steht, dass es auch SSDs sind.
So, zumindest, wenn du bei Google
eine VM anlegst und hängst dir
eine SSD-Persistent-Disk dran,
dann hast du unter Linux
sowas wie, hier,
Dev, SDA, sonst was.
Du bekommst ein richtiges Device,
was auch aussieht wie SSDs.
Unter der Haube werden es
auch SSDs sein,
aber es sind keine,
wie soll man sagen, keine SSDs,
wie man sich das vorstellt,
sondern es ist Netzwerk-Storage,
obwohl es als Block-Device bei dir
in Linux drinnen hängt.
Also, nur weil ihr in der VM bei euch,
in der Google ist übrigens bei Azure genauso
und bei AWS zum größten Teil auch so.
Wenn ihr beispielsweise eine Google-VM habt
und dort Dev, SDA, SDB,
auch wenn es nach SSD aussieht,
das ist Netzwerkspeicher.
Das ist Netzwerkspeicher,
mit den Vor- und Nachteilen,
die Netzwerkspeicher so hat.
Also, wenn ihr jetzt erwartet,
ihr habt dort eine VM mit einer SSD dran in der Cloud,
die sich so verhält,
wie bei euch lokal eine Kiste mit SSD drinnen.
Das ist nicht so.
Das verhält sich auch ganz anders,
hat Vor- und Nachteile.
Du kannst easy Snapshots machen und sowas zum Beispiel,
das easy Klonen von einer Zone in die andere.
Das kannst du ja mit einer SSD bei dir lokal
jetzt in der Kiste nicht.
Aber es sind keine echten SSDs,
die an deiner Kiste sind.
Die an deiner Kiste, beziehungsweise an deine VM gemappt sind.
Das ist Netzwerk-Storage.
Und das merkst du bei einer Sache ganz extrem,
wenn du niedrige Latency brauchst.
Hier, ich zeig's euch mal.
IOPing ist installiert.
IOPing, IOPing,
ähm,
IOPing, ja,
Minus D, Minus W. Guckt mal hier.
Ich hab in meiner VM,
und das ist eine VM bei mir lokal, ja.
Ich hab in meiner VM
ungefähr
100, ja,
schwankt so ein bisschen.
130, 200
irgendwie Mikrosekunden
Latency.
Bei so einer Schreiboperation.
Das ist für lokale NVMe SSDs
tatsächlich sogar noch ein bisschen lahm.
Das liegt jetzt aber an der VM.
Wenn ich das auf Bare Metal machen würde, hätte ich so 80
Mikrosekunden oder sowas.
So, und bei Google habt ihr, jetzt haltet euch fest,
man würde jetzt erwarten,
wenn ihr Latency-Tests macht bei Google
auf so eine SSD, Persistent Disk,
dann habt ihr auch so in dem Dreh 100,
150 Mikrosekunden Verzögerung.
Aber nein, ihr habt 7, 8 Millisekunden
IO-Latency.
Was halt um ein
viel, viel, vielfaches mehr ist,
als 180
oder 80 bis 150
Mikrosekunden. Es ist
deutlich mehr. So, und
dementsprechend
muss man das wissen, dass das Netzwerk-Storage
ist. Auch wenn da steht Fast and Reliable
Block Storage. Nein, es ist Block Storage
im System, aber es ist Netzwerk-Storage.
Und
das ist was, was mich bei Cloud-Anbietern oftmals
echt abfuckt, dass du solche Sachen
nirgendswo direkt siehst,
oder zumindest nur, wenn du sehr tief,
tief gräbst es findest
und meistens nur durch selbst ausprobieren
dahinter kommst. Das einzige, was
hier drinnen wirklich SSDs sind, ist
das hier, in dieser ganzen Liste.
Das sind echte SSDs
durchgereicht an deine
VM. Leider mit
ein bisschen, mit nicht sonderlich
hohem Storage-Limit.
Man kriegt nämlich maximal
ich glaube
12 mal
nee
24 mal, ja
24 mal 375 Gig
als einzelne
als einzelne Partition quasi reingehängt
wie man dann selbst, das ist
auch eklig. Das sind so Dinger, die sind
in der Cloud unglaublich teuer. Also generell
Storage, wenn ihr große Storage-Blocks
also viel Storage, und zwar
richtig schnelle Storage. Ich rede nicht von
reinen IOPS, sondern wirklich auch von Latency
braucht, wenn ihr Low Latency
Storage in der VM braucht
also wenn ihr
viel
Low Latency Storage in der Cloud
braucht, seid ihr eigentlich verloren.
Es gibt keinen Cloud-Anbieter, den ihr dafür
gescheit verwenden könnt. Was ihr machen
könnt, ihr könnt euch bei Hetzner zum Beispiel
ein Server konfigurieren
bei
Hetzner in der Cloud
also bei Hetzner Cloud bin ich mir da
nicht sicher. Ich vermute
die Storage-Box oder diese Storage-Box
Sachen, die man an die VMs dranhängen kann, sind auch
Netzwerk-Storage. Vermute ich, weiß
ich aber nicht. Was bei Hetzner auf jeden
Fall echte SSDs sind, ist, wenn
du dir einen Server kaufst
und machst da
NVMe-Storage rein, dann kriegst du ja Zugriff auf
die Kiste. Da kannst du dir für 3-400
Euro im Monat was richtig Fettes kaufen,
was um ein Vielfaches billiger ist
als sowas in der Cloud. Also wenn du
in der Cloud was haben willst, hier mit
12 TB Storage, das
kann gut und gern mal 3-4.000, 5.000
Euro im Monat kosten.
Ja, aber S3-Storage ist auch nicht Low-Latency.
Also wenn du wirklich Low-Latency
Block-Storage brauchst,
ist das pepega.
Gerade mal beim Archiv getestet, das hat 14
Millisekunden Write-Latency. Ja,
weil das Netzwerk-Storage ist. Es sieht aus
wie SSD, es ist
auch SSD, aber SSD über Netzwerk.
Ne, nicht die Bandbreite,
die Latenz ist tatsächlich das Problem.
Wenn du, also wenn du wirklich
Low-Latency-Storage brauchst, was man nicht
bei jedem Anwendungsfall braucht, aber wenn du
Low-Latency-Storage brauchst, bist du in der
Cloud verloren. Und das sind halt so Dinger, das
nervt mich bei vielen Cloud-Anbietern auch,
dass solche Infos ganz tief in
irgendeiner Dokumentation drinstecken, wenn sie
überhaupt irgendwo stehen und du nur durch
tagelanges Ausprobieren dahinter kommst
und das Ausprobieren, das
kostet dich halt dann allein schon beim Ausprobieren
irgendwie 30-40.000 Euro für den Monat.
Weil ausprobier das.
Nun ja, soweit so gut.
Dann mal zum eigentlichen Thema zurück.
Wie gesagt, es geht ja auch nicht um
unbedingt rein um IOPS und Bandbreite,
es geht um IO-Latency.
Also du hast ja im Prinzip drei verschiedene Sachen,
die hängen alle zwar ein bisschen miteinander zusammen,
aber jetzt nicht
unbedingt eins
zu eins.
Also, wenn du,
das ist ja eher was, was dich interessiert
sequenziell, das ist eher, wenn du
viel parallel machen kannst,
sind IOPS
wichtig, wichtig und
richtig. Und wenn du
aber einzelne Steps hast, zum Beispiel,
die
viel IO machen, aber die nicht so
viel parallelisieren
können, dann ist
Latency auch nicht verkehrt.
Also richtig fette IOPS lohnen sich
halt nur, wenn du irgendeine Anwendung
hast, die sagen wir mal
64
Lese-Write
Thread hat und ganz viel parallel machen
kann. Da kriegst du unglaublich, da kriegst du
die abgedrehtsten IOPS
Zahlen raus. Aber wenn du was
hast, was Storage-mäßig, sag mal
sequenziell ist, aber halt
in kleinen Happen jetzt nicht,
dass du sagen kannst, also was, was
sequenziell, nee, sequenziell
ist falsch, was quasi
sequenziell im Programmier, also in
Programmier-Logik
mehr oder weniger
Random-Reads oder sowas macht,
das ist echt
Kacke auf
Cloud-Platten.
Ich weiß nicht, konkretes Beispiel,
wenn du, also bei manchen
Blockchain, bei manchen Blockchain-Technologien
ist das so, dass sie verschiedene
Steps haben und einer
der Steps, zumindest bei Polygon ist das
so, einer der Steps ist
rein sequenziell, null
Multithreaded, aber
sehr Latency-intensiv,
also sehr, sehr Latency-kritisch, was
die Platte angeht. Weil
die halt alles sequenziell machen in ihrem Code
an der Stelle, aber
die, die Reads
halt quasi random Seeks
durch die, durch die
Arbeit Blockchain-History sind.
Und dementsprechend
bist du da mit
IO-Latency eher der limitierende
Faktor.
Max, was würdest du einem angehenden Fachinformatiker
Systemintegration sagen,
was er vor der Ausbildung wissen sollte?
Ja,
die IHK ist scheiße,
die IHK ist Kacke,
Berufsschule
ist easy as fuck,
und
die Abschluss-,
die Zwischenprüfung zählt mittlerweile
in die Abschlussprüf-, in die Abschlussnote
irgendwie mit rein, hab ich gehört.
Und wenn du fertig bist,
mach Abschlussprüfung
als Übung.
Verlass dich nicht drauf, nur weil du Ahnung hast,
dass du die Abschlussprüfung gut hinkriegst.
Aber ansonsten,
komm auf die Firma an.
Komm auf den Betrieb an, wo du gelandet bist.
Ja,
das sind auch so Dinger, ja.
Also es lohnt sich, es lohnt sich nicht immer
die Sachen, also ganz ehrlich, ich würd sogar
sagen, es lohnt sich preislich
in
sagen wir mal in der Hälfte
der Fälle nicht rein,
deswegen für Kosten in die Cloud
zu gehen. Es gibt sicherlich auch
viele Sachen, wo es sich lohnt, also
ein Punkt, wo sich es enorm
lohnt, in die Cloud zu gehen, ist
wenn du kurzzeitige
Burst-Workloads hast.
Versuch ich das mal so zu umschreiben.
Mr. Amec, danke für den Sub.
Wenn du zum Beispiel mal ganz kurzfristig
super viel Leistung brauchst
und dann wieder nicht,
dann lohnt sich Cloud eigentlich fast
immer.
Oh, Baumhausstock hat auch resubscribed.
Gar nicht gesehen, danke für den Sub.
Und der Stubenhocker gestern schon.
Pog.
Also wenn du so Burst-Workload hast,
dann lohnt sich eigentlich Cloud fast immer.
Zum Beispiel,
machen wir jetzt mal was ohne hier großartige Microservices
und Skalierungen hast du nicht gesehen,
das ist einfaches Beispiel, was sich glaube ich jeder,
was sich jeder
vorstellen kann,
an Problemstellungen.
Ich wollte mal OpenStreetView
Sachen, also hier.
Ich wollte mal
OpenStreetView Maps
preprocessen, dass man damit
Routenplanung machen kann.
Das Ding ist, OpenStreetView,
die Daten sind relativ groß und die brauchen
zwei Sachen. Die brauchen enorm viele
CPUs und die brauchen fett RAM.
Das heißt das Ding,
gehst du
in die Cloud, mietest
dir dort für 2-3 Stunden
eine
128 GB RAM Kiste
oder eine 256 GB
RAM Kiste
und 64 CPU Cores
und 2 TB SSD
und du hast noch gar nichts verpasst.
Wir haben noch gar nichts gemacht.
Ich schwätze die ganze Zeit nur.
Tatsächlich, wir haben weder
Advent of Code gemacht, noch Dock
bisher. Ja.
Und
oder stellst dir lokal eine Kiste hin,
die das braucht.
Und das Schöne ist halt,
dass du in der Cloud in der Regel
minutengenau oder zumindest stündlich
genaue Abrechnung hast und dann bezahlst du
am Ende halt, wenn du 2-3 Stunden
zum preprocessen einmal im Monat
der OpenStreetView Maps brauchst,
dann oder einmal in der Woche
nur, ja.
Oh, ich habe irgendwas im Auge. Fuck. Ah, shit.
Warte mal.
Okay.
Dann bezahlst du halt für die Kiste,
die kostet zwar im Monat 400 Euro,
aber du brauchst sie bloß ein paar Stunden.
Das ist nice.
Aber du brauchst sie nur ein paar Stunden.
Dementsprechend fährst du da mit der Cloud eindeutig besser
als du stellst dir so eine Kiste hin.
OpenStreetView wird laufend geupdatet.
Also das ist
zum Beispiel ein gutes Beispiel für
wo es billiger ist
in der Cloud.
Kann die Lautstärke mal ein bisschen weniger
schwanken sein?
Genau.
Vorwissen brauchst du nicht.
Nee.
Wichtig ist, dass dich das interessiert.
So.
Falls ich irgendwas übersehen habe,
dann sagt Bescheid.
Hoffentlich.
So.
Dann.
Legen wir mal los.
Wir fangen an mit Advent of Code
und danach gucken wir uns Doge an.
Das wird nicht allzu lange gehen.
Da brauchen wir wahrscheinlich so eine halbe Stunde, 40 Minuten.
Da haben wir uns das angeschaut.
Das sieht jetzt nicht so kompliziert aus.
Beziehungsweise nicht so viel, was man damit machen kann.
Also.
Wir fangen mit Advent of Code an und zwar
Aufgehört haben wir...
Achso. Wer sich meine Ergüsse angucken möchte
dazu.
Max van Grijzelgrind.
Weiß ich noch nicht.
Also. Offstream auf jeden Fall die ganze Zeit.
Aber wer sich meine Ergüsse angucken will,
kann sie sich hier angucken.
Ich bin erst bei Tag 2.
Und jetzt heute kommt Tag 3.
Und Tag 3.
Auch nur den ersten Part.
Weil ich mir da schon ein bisschen Gedanken drum machen konnte.
Und der erste Part schon abfuck aussieht.
Und der zweite Part meistens komplizierter ist.
Alles klar.
Also.
Advent of Code. Was wollen die heute von uns?
Und zwar.
Es ist wieder ganz viel Text.
Ist das eigentlich dein Youtube Kanal mit den Stream Uploads?
Nein. Das ist nicht mein Youtube Kanal.
Ich muss mich an das Ding erinnern.
POG habe ich gerade gemacht.
Ist nicht mein Youtube Kanal.
So. Es gibt wieder ganz viel
Storytelling drum herum.
Dass man irgendwie Gondeln fährt.
Mit irgendeinem Elf und sonst was.
Die eigentliche Aufgabe kommt hier unten.
Also. Ich versuche euch das Ganze mal kurz zu erklären.
So wie ich das verstanden habe.
Es ist
wie die letzten 2 Tage Advent of Code.
Vielleicht ganz kurz am Anfang nochmal.
Advent of Code gibt es einmal im Jahr.
Es sind 25 Tage.
An jedem Tag gibt es
2 kleine Programmieraufgaben.
Die
immer ein bisschen knifflig sind.
Aber meistens
nie so weit gehen, dass es
jetzt irgendwie einen halben Tag braucht zu lösen.
Meistens ist man da in
Ja gut. Die krassen
Competitive Programming Pros sind da in 1,5 Minuten
mit fertig. Aber meistens bist du
in einer Stunde damit durch.
Pro Aufgabe.
Und wenn du 2 Stunden brauchst.
Brauchst du 2 Stunden insgesamt.
Aber meistens bist du sogar ein bisschen schneller.
Je nachdem was es ist.
Ich würde sogar sagen.
Meistens ist man in einer Stunde fertig.
Beides zusammen.
Ungefähr über den Daumen gepeilt würde ich sagen.
30-45 Minuten pro Part.
Ok. Also.
Das gibt es jedes Jahr.
Und die Aufgaben folgen immer
einem ähnlichen Schema.
Ein Input der zur jeweiligen
Aufgabe passt.
Das ist der Input von heute.
Und dann gibt es einen Text dazu.
Der erklärt was man mit dem Input machen soll.
Und am Ende.
Wenn man den Input richtig verarbeitet hat.
Kriegt man eine Lösungszahl.
Die trägt man hier ein.
Und drückt auf Submit.
Und wenn es stimmt. Dann wird die zweite Aufgabe für den Tag
freigeschaltet.
Und wenn das stimmt. Wird der nächste Tag freigeschaltet.
So funktioniert das.
Die Aufgabe an Tag 3.
Also Tag 3 war vor einer Woche.
Wie gesagt.
Ich bin etwas hinten dran.
Tag 3 war vor ziemlich genau einer Woche.
Tag 3 kriegt man so einen Input hier.
Also so einen langen Input.
Hier ist ein kleines Beispiel.
Und zwar.
Muss man mit diesem Input folgendes machen.
Man muss sich aus dem Input angucken.
Welche Zahlen da drin sind.
Und dann muss man schauen.
Angrenzend.
An welche Zahl.
Wenn ich das verstanden habe.
Aus meiner Sicht.
Auf meiner Sicht wieder.
Wenn angrenzend.
Zu dieser Zahl.
Ein Symbol sich befindet.
Dann zählt diese Zahl.
Und am Ende.
Muss man alle Zahlen glaube ich zusammenrechnen.
Genau.
Zum Beispiel.
467 zählt.
Weil angrenzend zu 467.
Ist ein Symbol.
Symbol ist alles was kein Punkt ist.
Alles was keine Zahl ist und kein Punkt ist.
Also Sternchen.
Raute. Dollar.
Also wenn angrenzend zu einer Zahl.
Und diagonal zählt auch.
Also wirklich angrenzend.
Zählt steht da nicht.
What is the sum of all of the part numbers?
Steht da.
Ja.
Gag weight.
Punkt zählt nicht.
Hab ich doch gesagt.
Punkt zählt nicht.
Dollar und Raute.
Wenn Punkt zählen würde wäre das ganze ja witzlos.
Punkt zählt nicht.
Hab ich gesagt Punkt zählt nicht.
Punkt zählt nicht.
Es zählt aber auch diagonal.
Heißt im Endeffekt.
Ich muss gucken.
Was um so eine Zahl drum herum steht.
Und wenn da.
Wenn da um die Zahl drum herum.
Irgendwo ein Sternchen.
Eine Raute.
Oder ein Dollarzeichen steht.
Dann muss ich merken.
Und am Ende muss ich alle Zahlen zusammen rechnen.
Die halt angrenzend zu ihnen.
Ein Symbol haben.
Wir skalieren richtig krass diagonal.
Horizontal. Vertikal. Diagonal.
Orthogonal.
3D. 4D.
Wir skalieren in alle Richtungen.
In alle Dimensionen wird skaliert.
Um Synergieeffekte zu nutzen.
Um die low hanging fruit zu ernten.
Also das ist die Aufgabe.
Hat man es verstanden?
Ich glaube man konnte der ganze Sache folgen.
Ich habe mir das vorher schon mal angeguckt.
Weil ich habe das das letzte mal gelesen.
Und habe mir gedacht.
Alter was wollt ihr überhaupt von mir.
Aber ich glaube das das tatsächlich.
Komplizierter aussieht als es ist.
Weil.
So weit meine Überlegung.
Ich bin mir nicht sicher ob das funktioniert.
So weit meine Überlegung.
Wir müssen uns.
Also wir gehen das Zeile für Zeile durch.
Und suchen uns die Zahlen raus.
Da können wir wieder irgendeinen regex für verwenden.
Wir suchen uns die Zahlen raus.
So.
Wir merken uns.
Die Zeile.
In der die Zahl steht.
Und.
Die Position.
Wo die Zahl anfängt.
Also wir bauen quasi.
So eine Tabelle da draus.
Man könnte das hier auch als Tabelle sehen.
Ja.
Also das hier ist Zeile 1.
Das ist quasi Zeile 0.
Und Spalte 0.
Man könnte das hier auch als Tabelle sehen.
Weil es sind ja quasi alle Zeilen.
Gleich lang.
Und im Endeffekt.
Habe ich mir gedacht.
Wir sehen das mal als Tabelle.
Und.
Wir suchen uns alle Zahlen raus.
Dann merken wir uns die.
Zeile.
Wo das ist.
Und.
Den Index wo das startet.
In der Zeile.
Und die Zahl.
Die merken wir uns auch.
Weil am Ende brauchen wir ja hier.
Die müssen wir die Sachen da zusammen ziehen.
Also Zahl.
Und Startposition.
Also Startposition könnte zum Beispiel sein.
Zweite Zeile.
Zweite Zeile.
Weil das ist 0.
Zeile logischerweise.
Also wir merken uns.
Zweite Zeile.
Das merken wir uns.
Und dann.
Holen wir uns einfach.
Alles umliegende an Text raus.
Also wir wissen zum Beispiel.
Das hier ist Zeile 2.
Index 2.
Und dann können wir im Endeffekt sagen.
Wir wollen uns alle Text rausholen.
Von.
Zeile 2.
Index 1.
Bis Index.
Also.
Zeile 3.
4.
Und das ganze dann noch die Zeile oben drüber.
Also wir ziehen quasi von der aktuellen Zeile 1 ab.
Holen uns.
Und ziehen von dem Startindex 1 ab.
Dann kriegen wir quasi den Startpunkt.
Und wir rechnen von dem.
Index plus Länge 1 drauf.
Und auf die Zeilen 1 drauf.
Dann kriegen wir den Endpunkt.
So.
Das heißt im Endeffekt.
Dieses Dreieck kriegen wir dann an Text.
So.
So kompliziert ist wie es aussieht.
Und wenn wir den Text uns rausgeholt haben.
Angrenzen den gesamten angrenzenden Text.
Zu den Zahlen.
Dann gucken wir einfach.
Ob ein Symbol da drin ist.
Es ist vollkommen egal wo das Symbol steht.
Wenn angrenzend an die Zahl.
Irgendwo ein Symbol drin ist.
Dann interessiert uns die Zahl.
Und wir rechnen die auf unseren.
Ja unsere Gesamtsumme drauf.
Wie weit sollte man.
Als Physi programmieren können.
Was du machen sollst.
Meine persönliche Meinung ist.
Man sollte.
Auch als Physi.
Eine Programmiersprache halbwegs flüssig.
Beherrschen.
Und sei es nur Bash.
Oder PowerShell.
Aber man sollte auch als Physi programmieren können.
Jetzt vielleicht nicht.
So in der Tiefe.
Beispielsweise das du dich super auskennst.
Mit Java, Enterprise, Gedöns.
Oder sonst was.
Du solltest zumindest Programme lesen können.
Verstehen können.
Und du solltest auch.
Zu Automatisierungszwecken.
Selbst was skripten können.
Und dazu ist es einfach hilfreich.
Wenn man eine ordentliche Programmiersprache gut kann.
Ist egal was das ist.
Das kann JavaScript sein.
Das kann Python sein.
Das kann C Sharp sein.
Das kann meinetwegen Java, Go.
Was auch immer sein.
Ist eigentlich vollkommen egal.
Das kann man auch auskennen.
Mit den Skripting Umgebungen.
Seines jeweiligen Betriebssystems.
PowerShell unter Windows.
Man kann denke ich heute sagen.
Bash unter Linux.
Abwärtskompatibel.
Ja es gibt Leute die müssen skripten.
Auch für Systeme wo keine Bash verfügbar ist.
Aber man könnte sagen.
Bash oder PowerShell zusätzlich ist auch noch gut.
Und wenn es nur Bash und PowerShell ist.
Ist es auch nicht so wild.
Aber ich persönlich finde es sinnvoll.
Eine richtige Programmiersprache zu kennen.
Ist JavaScript keine ordentliche Programmiersprache.
Es gibt auch Leute.
Okay Bash würde ich nicht dazu zählen.
Jemand der Bash kann.
Ist wahrscheinlich schon mindestens 50.
Und Leute die Bash gut finden.
Denen ist eh nicht mehr zu helfen.
Mit C Sharp und Bash fährt man gut.
Ja macht man.
Du fährst aber auch.
Mit Go und Bash gut.
Oder mit Python und Bash gut.
Das ist eigentlich egal.
Ich finde es aber sinnvoll.
Eine richtige Programmiersprache zu kennen.
Weil man dann auch viel einfacher.
Sachen lesen und verstehen kann.
Die nicht gerade Shell Script sind.
Also ich finde es sinnvoll.
Auch als Physi programmieren zu können.
Ja das wird wahrscheinlich auch gehen.
So.
Ich würde sagen.
Legen wir los.
Tag 3.
2003.
Mkdir031.
Also bei mir.
Ich habe ja auch mal Physi gelernt.
Ich meine.
PowerShell kriege ich auch zustande.
Ich habe aber keinen Bock drauf.
Bei mir ist es.
Ist doch easy was es bei mir ist.
Bei mir ist es.
C Sharp. Bash. Ruby. Python.
JavaScript. Go. C. C++.
Rust. Java. PHP. Groovy.
Easy.
Können wir nachgucken.
Ich betone C++.
Weil ich so ein großer C++ Fan bin.
Da hast du nicht unrecht.
Deswegen hatte ich eigentlich vor.
Aber ich weiß nicht wie viele.
Und nicht wie viele.
Guck mal hier.
Workout Champ.
Okay. New Console.
Rider of Money.
Nein ich wollte nicht Rider starten.
Ich wollte Chatbrains starten.
Und gucken ob ich irgendwas aktualisieren muss.
Muss ich was aktualisieren?
Nope. Muss ich nicht.
Also öffnen.
Repos.
Advent of Code.
031.
Bam.
Trust.
Any Trusters.
AI Assistant.
Es ist gut Chatbrains.
Lass mich einfach anfangen.
Gut.
Repos. Advent of Code.
031.
Achso 2003.
031. Run.
Okay. Funst.
Alles klar. Wir fangen wieder genau so an.
Wie wir in den letzten Tagen auch angefangen haben.
Und zwar. Wir legen uns eine Datei an.
Wo unser Input Text reinkommt.
Diesmal.
Machen wir aber nicht den Fehler wie das letzte Mal.
Und starten direkt mit dem langen Input.
Sondern.
Wir starten mit dem überschaubaren Input.
Dass man noch.
Dass man noch irgendwie ansatzweise durchblickt.
So.
var input gleich file read
all lines
input txt
Gucken ob es funst.
Inputs.
Und wie viele Zeilen sind es.
Es sollten 10 sein.
Es sind 10 Zeilen. Okay passt.
Alles klar.
Wie fangen wir jetzt am besten an.
Also.
Ich versuche jetzt einfach mal das zu bauen.
Ich muss mal was trinken.
Ich versuche mal das zu bauen.
Was ich eben gerade beschrieben habe.
In der Hoffnung das das klappt.
Also.
Von der Idee her.
Man sollte das hier als Tabelle sehen.
Mit Zeilen und Spalten.
Deswegen machen wir das doch mal.
Fangen wir mal an hier.
Class table.
So und ich würde sagen.
Die Tabelle kriegt im Constructor irgendwie.
Die Zeilen.
Also sagen wir hier table gleich new table.
Input.
So.
Ich meine im Endeffekt haben wir jetzt noch nichts gemacht.
Außer die Textzeilen da.
Reingespeichert.
Neu ist übrigens die Sharp Feature.
Das heißt Primary Constructors.
Aber irgendwie.
Gefällt es mir so immer noch besser.
Da muss ich mich wahrscheinlich erst noch dran gewöhnen.
So.
Also.
Lasst uns mal was ausprobieren.
So.
Wie kriege ich davon jetzt die Zahlen gescheit extra hier.
Da ist wahrscheinlich wieder ein regex.
Ganz sinnvoll.
New regex.
Digit.
Ja die Aufgaben sind sehr regex lastig. Aber was willst du machen.
Und dann gucken wir regex.
Matches.
Line.
Und dann gucken wir mal wie viele.
Matches.
Wir pro Zeile kriegen.
Von der Idee her sollten wir hier 2 Matches kriegen.
Hier gar keinen.
Hier 2 und so weiter.
Wir geben auch die Zeile nochmal aus.
Ja.
6.
What.
Achso.
Was ist das für ein Plus dahinter machen.
0.
Ob es auch ohne regex geht.
Klar geht es ohne regex.
Max mal eine kurze Frage.
Von jemand der keinen hohen IQ hat.
Das stimmt du hast nicht Prime Subt.
Das.
Ja da ist kein Wunder dass du das nicht verstehst.
Cringe.
Also das Add von einem String.
Ist dafür zuständig.
Zu gucken was für Escape Zeichen in dem String gelten.
Und was nicht.
Hier ist ein Backslash.
Und wenn ich das Add weg mache.
Dann zählt der Backslash als Escape Zeichen.
In diesem String.
Also wenn ich zum Beispiel Backslash N machen will.
Für den Zeilenumbruch.
Dann brauche ich den Backslash.
Um zum Escapen.
Wenn ich ein Add davor mache.
Dann zählt es 1 zu 1 so wie es da steht.
Glaub.
Glaube ich zumindest.
Doch doch ich glaube schon.
Das es so ist wie ich gesagt habe.
Also wenn du ein Add davor schreibst.
Dann zählt der Backslash nicht mehr als Escape Zeichen.
Im String.
Und ich glaube.
Ich glaube auch dass der.
Das dann.
Das geschweifte Klammern und so auch nicht zählen.
Also das ist sinnvoll.
Baldios.
Jetzt ist klar.
Jetzt ist das Hirn auch dafür.
Aber das ist so.
Am besten ist wenn du es ganz genau wissen willst.
Tatsächlich würde ich mir die Microsoft Seite dazu angucken.
Aber ich glaube im Großen und Ganzen.
Ist die Bedeutung von manchen Escape Sequenzen.
Im String.
Auf.
Was ganz witzig ist.
Die Kombination aus.
Wo wir gerade dabei sind.
Die Kombination aus Add und Dollar.
Das hebt.
Manche Escape Sequenzen auf.
Aber.
Hier war Blub gleich 1.
Aber String Templating geht dann trotzdem noch.
So und jetzt.
Und jetzt kommt 5Hz die Sharp Logik.
Guckt mal.
Das ist eine Jason String.
Stellt euch mal vor das wäre eine Jason String.
Und Jason hat ja ganz gerne mal sowas hier.
A1.
So.
Sowas hat es ja mal ganz gerne.
So und jetzt gibt es halt so ein kleines Problem.
Weil in C Sharp.
Ist halt.
Geschweifte Klammern.
Auf Escape Sequenzen für String Templates.
Und jetzt haben sie sich.
Was cooles überlegt.
Jetzt haben sie sich was cooles überlegt.
Ups mach ich jetzt.
Man kann auch.
Man kann auch in einem letzten.
Also es gibt ja eh schon mal ein Problem.
Weil hier jetzt Quotes drinne vorkommen.
Jetzt haben sie sich von Python was abgeguckt.
Nämlich.
Das du Triple.
Triple.
Triple Quotes machen kannst.
Und das hier drinne zählt dann als.
String Literal.
Im Endeffekt.
Problem ist.
Mit einem Dollar Zeichen davor.
Ist das einzige was in so einem String Literal.
Noch Escaped wird.
Geschweifte Klammer auf.
Und das ist natürlich.
Doof wenn Geschweifte Klammer auf.
Interpretiert wird als.
Escape Sequenz.
Weil eines der Haupt Anwendungszwecke.
Für solche für lange String Literals.
Dürfte ja unter anderem Embedded JSON sein.
Und da haben sie sich in .net sowas überlegt.
Das du einfach.
Zwei Dollar Zeichen davor machen kannst.
Und das finde ich persönlich die schönste Implementierung.
In allen Programmiersprachen.
Die ich kenne.
Ich glaube selbst in Python.
Haben sie es nicht so schön hingekriegt.
Denn du kannst dir selbst aussuchen.
Ab wann deine Escape Sequenzen zählen.
Und ab wann nicht.
Das Anzahl der Dollar.
Entspricht den Anzahl der öffnenden Klammern.
Die du brauchst um escapen zu können.
Also mal angenommen.
Du hast jetzt eine Datei.
Die ganz viele Klammern enthält.
Aber nie.
Fünf Klammern hintereinander.
Dann schreibst du fünf Fragezeichen davor.
Und dann musst du fünf mal.
Klammer aufmachen.
Das es als Escape Sequenz zählt.
Das ist eigentlich mega nice.
Ich meine das ist jetzt ein total abgedrehtes Beispiel.
Das wird wahrscheinlich so in der Form.
Äußerst selten vorkommen.
Aber wichtig ist das es funktioniert.
Das heißt du kannst echt den Input so wählen.
Das es nicht konfliktet.
Mit deinem Datei Inhalt.
Oder mit deinem String Inhalt.
So.
Jetzt kommen wir zurück.
Zu unserer eigentlichen Aufgabe.
Wir wollten.
Zahlen matchen.
Was auch funktioniert.
Das Problem existiert offensichtlich.
Wenn du JSON in String Literals machen willst.
Guck mal.
So.
Hier würdest du schreiben so.
A Punkt.
So und jetzt.
Was würdest du jetzt machen?
Jetzt würdest du so schreiben.
Und dann ist es kaputt.
Geht aber nicht.
Weil es ein String Literal ist.
Also sagst du okay.
Ich will das es zusätzlich noch ein Template String ist.
Und dann geht es kaputt.
Und dann geht es kaputt an der Stelle.
Weil JSON geschweifte Klammern hat.
Also musst du ihm sagen.
Ich will erst bei 2 Klammern wirklich was einsetzen.
Und dann sieht das Ganze so aus.
Ich finde nicht das es an der Realität vorbei geht.
Das kommt sogar relativ häufig vor.
Gerade in der Kombination.
Ich finde das haben sie richtig gut gemacht.
Mit den.
Mehreren Dollar Zeichen.
Ich glaube nur nicht mal in Python kannst du sowas machen.
Die ja angefangen haben.
Mit diesen Triple Escape Dingern.
Triple Quote Sachen.
Für Literals auch.
Ich finde das eine gute Sache.
So also regex match counts.
Erste Zeile findet er 2 Zahlen.
Zweite Zeile findet er 0.
Dritte Zeile findet er 2.
Das sieht schon mal gut aus.
Also der regex funktioniert.
Massive regex.
Dann hauen wir uns das mal weg.
Und speichern uns den regex mal hier.
Private read only.
Nennen wir ihn mal.
Number.
Numbers.
Number regex.
So.
Und jetzt müssen wir hier irgendwie extrahieren.
Das was ich schon gesagt habe.
Wir müssen.
Wir müssen im Endeffekt.
Jetzt erstmal.
Hier extrahieren.
Hier extrahieren.
Hier die.
Die Stellen extrahieren.
Wo die Zahlen stehen.
Und zwar mit der Information.
Welche Zeile.
Und welche Startspalte.
So.
Und dazu habe ich mir überlegt.
Wir machen sowas.
Wie gesagt.
Ich habe mir im Vorfeld schon ein bisschen Gedanken drüber gemacht.
Nennen wir es mal Selection.
Mir fällt kein besserer Name ein.
So und diese Selection Klasse.
Die braucht Informationen.
Darüber.
Start.
Also braucht die Zeile.
Braucht die Zeile.
Und braucht die Startspalte.
Ja.
Also.
Und.
Und dürfen wir nicht vergessen.
Stimmt.
Und den Value brauchen wir auch noch.
Also machen wir irgendwie so.
Public String Value.
Und sowas wie.
Nennen wir es mal.
Nennen wir es mal.
Column Start.
Nennen wir es mal Row Start.
Man weiß ja nicht was wir damit noch machen wollen.
Wobei.
Es gibt immer nur eine Row.
So.
Und da haben wir alle Informationen drin.
Die wir erstmal brauchen.
Jetzt ist nur die große Preisfrage.
Wie kriegen wir.
Aus den Zeilen.
Jetzt raus.
Diese ganzen Infos.
Okay lasst uns mal was ausprobieren.
Machen wir hier.
Blub.
Blub.
Warum nicht Index.
Wir können es auch Index nennen.
Ja hast recht.
So.
Gut.
Jetzt probieren wir das mal.
Wie könnten wir das auslesen.
Also.
Ich mein das Ziel ist jetzt.
Für jede Zahl.
Das hier zu erzeugen.
Also.
Hier steht die Zahl drinne.
Hier steht die Zeile drinne.
Wo die Zahl gefunden wurde.
Und hier steht der Index drinne.
Quasi.
Wo es in der Zeile los geht.
Also.
Würde ich sagen.
Wir machen mal eine Schleife.
Ne eine For Each Schleife tut es nicht.
Wir brauchen ja die Nummer.
Von der Zeile.
Vor I.
Wir nennen es auch nicht I.
Zahl Länge wäre vielleicht noch sinnvoll.
Zahl Länge wäre vielleicht noch sinnvoll.
Ja gut Länge ist.
Ja wobei.
Ja hast recht.
Du hast recht.
Es wäre tatsächlich sinnvoll.
Wir können das aber dynamisch berechnen.
Wir können das aber dynamisch berechnen.
Und zwar mit.
Int.
Length.
Theoretisch können wir dann nämlich sagen.
Value.
Length.
Aber wir sollten vielleicht.
Ach komm.
Scheiß auf Null Jacks.
Who cares.
Muss man eigentlich die Klammer am Zeilenanfang machen.
Nein musst du nicht.
Es ist nicht Go das es nicht kompilieren würde.
Also jetzt aus der Syntax Feder.
Das kompiliert.
Das kompiliert auch ohne.
Also du kannst es schreiben wie du willst.
Es empfiehlt dir das so.
Du kannst hier irgendwie auch die Formatierregeln.
Du kannst hier irgendwie auch die Formatierregeln.
In Rider anpassen.
Dass der standardmäßig deine.
Deine Zeilen so formatiert.
Ich mag das so.
Liegt aber auch glaube ich daran.
Weil ich das schon Jahre lang so mache.
Und irgendwann mal in einem offiziellen.
Microsoft C Sharp Style Guide stand.
Dass das die sinnvolle Variante ist.
Dass das die sinnvolle Variante ist.
Aber Microsoft sagt viel wenn der Tag lang ist.
Moin Li Foy.
Wie war die Syntax für nicht Null?
Wie war die Syntax für nicht Null?
Ne wie ging das nochmal?
Null ne?
Das ist nicht meckert.
Das ist nicht meckert.
Wobei wir können das eigentlich noch besser machen.
Wobei wir können das eigentlich noch besser machen.
Das wird ein Rekord.
Wir können auch mal neue C Sharp Features verwenden.
Wir können auch mal neue C Sharp Features verwenden.
Int Row.
Int Index.
Int Length.
Achso wobei ne.
Kann man hier Required noch reinschreiben?
Kann man hier Required noch reinschreiben?
Oder die Dinger sind dann Required?
Ja.
Ja das ist doch auch gut so.
So dann machen wir das so.
Das ist schön kurz und knackig.
Alles klar wie kriegen wir das jetzt raus?
Also wir machen mal eine Vorschleife.
Wir machen eine Vorschleife.
Die nennen wir jetzt irgendwie Row Number.
So und wir machen eine Schleife über alle Zeilen.
So und wir machen eine Schleife über alle Zeilen.
So und wir machen eine Schleife über alle Zeilen.
Und dann holen wir uns erstmal den Text raus.
Und dann holen wir uns erstmal den Text raus.
Aus der aktuellen Zeile.
Aus der aktuellen Zeile.
Und jetzt muss ich mal gucken ob das soweit funktioniert.
Und jetzt muss ich mal gucken ob das soweit funktioniert.
Jetzt sollte es einfach nur den Text ausgeben.
Okay es crasht nicht.
Ich hab nix verkackt mit Index und so an der Stelle.
Was will er denn hier von mir?
Convert to for each.
Ne ne ne ne.
Aber hier können wir var verwenden.
Okay also.
Die Anzahl der Zeile und den Inhalt.
Die Anzahl der Zeile und den Inhalt.
Das bedeutet im Endeffekt.
Okay jetzt brauche ich meine Regex.
Also war Matches.
Äh Regex.
Matches.
Das ist das was ich oben auch schon hatte.
Den Text aus der Zeile.
Den Text aus der Zeile.
Jetzt noch mal kurz schauen ob das alles funzt.
Jetzt noch mal kurz schauen ob das alles funzt.
Sollte es gleiche rauskommen wie vorhin.
Sollte es gleiche rauskommen wie vorhin.
Sollte es gleiche rauskommen wie vorhin.
Sollte es gleiche rauskommen wie vorhin.
Zwei Stück in der, Null in der Zeile, zwei in der Zeile.
Zwei Stück in der, Null in der Zeile, zwei in der Zeile.
Das funktioniert alles.
So also das ist die Anzahl der Zeilen.
Äh die Anzahl der Nummern in der Zeile.
Äh die Anzahl der Nummern in der Zeile.
Okay da machen wir jetzt ne Schleife.
Da machen wir jetzt ne for each.
Da machen wir jetzt ne for each Schleife drüber.
Richtig können wir das auch so schreiben.
Brauchen wir die extra Zeile nicht.
For each.
So da haben wir jetzt die Information.
Also wir haben.
Okay wir haben die Information in welcher Zeile es ist.
Okay wir haben die Information in welcher Zeile es ist.
Wir haben die Information.
Ich glaub Match Value.
Wir haben Value Länge.
Wir haben Value Länge.
Und konnte man sich da nicht.
Ach hier Index.
Position in the original string where the first character of the.
Position in the original string where the first character of the.
Genau das wollen wir haben.
Okay heißt im Endeffekt.
Wir können das hier sagen wie.
New Selection.
New Selection.
So Value ist Match.
Weil ich mir nicht sicher bin ob das auch funzt.
Match Value.
Lass mal kurz checken ob das auch wirklich alle Zahlen matcht.
4, 6, 7, 1, 1, 4.
Ja machts.
So Selection.
So was wollen wir dann haben.
Value Row ist Row Number.
Und dann haben wir als letztes.
Haben wir noch Index.
Und das ist Match Index.
Dann brauchen wir noch ne Liste.
Dann brauchen wir noch ne Liste.
Result.
Wir brauchen noch ne Liste mit Selections.
Wir brauchen noch ne Liste mit Selections.
Und dann Return.
Und das sollten wir vielleicht auch nicht Plup nennen.
Und das sollten wir vielleicht auch nicht Plup nennen.
Ja ist eigentlich wurscht wie das heißt.
Plup heißt es jetzt.
Beste Benahmung überhaupt.
Weiß jeder sofort was die Methode macht.
So Selections.
Jetzt haben wir ne Liste.
Jetzt haben wir ne Liste.
Macht das Sinn.
Jetzt haben wir ne Liste mit allen Informationen die wir brauchen.
Jetzt haben wir ne Liste mit allen Informationen die wir brauchen.
Nämlich in welcher Zeile und an welchem Punkt sich die Zahlen befinden.
Nämlich in welcher Zeile und an welchem Punkt sich die Zahlen befinden.
Und jetzt müssen wir quasi nur noch rausfinden.
Und jetzt müssen wir quasi nur noch rausfinden.
Ob irgendwo.
Ob irgendwo angrenzend zu dieser Zahl.
Ob irgendwo angrenzend zu dieser Zahl.
Ein Symbol ist.
Also wir haben jetzt die Position von jeder Zahl.
Ah ich entdecke schon ein Problem.
In der ganzen Geschichte.
Wie ich mir das gedacht hab.
Das funktioniert so nicht wie ich mir das gedacht hab.
Wisst ihr warum?
Weil ich hatte eigentlich vor.
Zu sagen.
Wenn ich ne Zahl gefunden habe.
Dann eins davor.
Eins danach.
Eine Zeile oben.
Eine Zeile unten drunter.
Guck ich ob es ein Symbol gibt.
Das Ding ist nur.
Was ist beispielsweise wenn die Zahl direkt am Anfang steht.
Dann gibt es keine davor.
Und es gibt keine oben drüber.
Ob mein Startindex schon 0 ist.
Und ich muss auch theoretisch checken.
Und ich muss auch theoretisch checken.
Dass die Länge nicht out of bounds geht.
Weil.
Stellt euch mal vor hier steht ne Zahl ganz hinten.
Und ich würde eins hinten dran rechnen wollen.
Dann funktioniert das ja nicht.
Ja das ist.
Das ist pepega.
Komm wir benennen das mal kurz um.
Das ich mir merken kann.
Was das macht.
Get all numbers.
Get all numbers.
Ja wie.
Peluppes guter Name.
Ja genauso wie i und temp.
Alles sehr gute Namen.
Um was geht es.
Also ja kann man einstellen.
Lolo und kekwe.
Ja Lolo und kekwe sind auch gut.
Chat kann man mir halbwegs folgen.
Was ich jetzt eigentlich vor habe.
Weil ich bin gerade selbst verwirrt.
Was ich vor habe.
Ich brauche den high IQ Chat.
Ähm.
Also.
Denke ja das ist gut.
Dann.
Weil.
Also.
Ich will jetzt quasi das.
Das das um.
Den umliegenden Text bekommen.
Ich will den umliegenden Text.
Also was ich vor habe ist folgendes.
Ich habe jetzt.
Die Informationen da drüber.
Wo sich welche Nummer befindet.
Zwar mit Zeilennummer.
Und mit Startindex in der Zeile.
Was ich jetzt machen will ist.
Ich will.
Den umliegenden Text.
Von dieser Nummer auslesen.
Also.
Im Prinzip.
Will ich.
Eine Zeile nach oben.
Und einen Index nach links.
Und einen Index nach rechts.
Und das dann auch noch eine Zeile drüber.
Ich will quasi diese.
Hier.
So.
Das will ich.
Den Text drum herum will ich auslesen.
So also.
Machen wir das doch mal.
Easy.
Ich habe eine Idee.
Ich weiß noch nicht wie es heißt.
Void.
Ich kann euch jetzt auch sagen.
Warum ich Plup gelöscht habe.
Weil ich Plup wieder brauche.
So was brauchen wir da.
Wir brauchen den Startindex.
Wobei wir können da auch einfach irgendwie.
Selection übergeben.
Plup Selection.
So.
Ohne zu wissen was ich da drin jetzt machen will.
Also.
Was will ich haben.
Ich will.
Aus den Zeilen.
Wir machen.
Eine Vorschleife da drüber.
Die ich tatsächlich auch wieder.
So nenne wieder oben.
So.
Kleiner.
Selection.
Row.
Plus.
Moment.
Sekunde.
Das funktioniert so nicht.
Ich brauche Start.
Okay.
Jetzt wird es eklig.
Ich will eine Zeile davor.
Und ich will eine Zeile danach.
Kannst du rund um den Input auch selbst Punkte machen.
Dann ist kein Out of Bounds mehr möglich.
Das Problem ist.
Wenn ich selbst Punkte mache.
Dann ändert sich ja der Text.
Ach nee.
Dann ändert sich ja die Anzahl.
Nee.
Das funktioniert glaube ich nicht.
Pass auf Out of Bounds auf.
Nice Chat.
Dass ihr jetzt auch schon drauf gekommen seid.
Weil ich schon 5 Minuten gesagt habe.
Ja ich weiß.
Das ist das Problem mit Out of Bounds.
Also.
Wir brauchen eine Start Position.
Start Position ist.
Selection.
Row.
Row.
So.
Aber Start Row ist nicht Selection Row.
Sondern minus 1.
Minus 1.
Und jetzt ist das Problem.
Wenn es 0 ist.
Also brauche ich jetzt quasi sowas wie Math.
Min.
Nee. Max.
Also.
Selection Row.
Minus 1.
Oder 0.
End Row.
End Row ist.
Selection.
Plus 1.
Und dann das kleinere.
Es könnte allerdings.
Auch die Länge sein.
Also sprich.
Entweder.
Also hier ist es.
Entweder es ist.
Wenn es Zeile 0 ist.
Dann will ich dort anfangen.
Wenn es die letzte Zeile ist.
Dann müsste das nicht.
Sogar hier auch nochmal.
Minus 1 sein dann.
Weil ich will ja meine Vorschleife quasi.
Inklusive machen.
Müsste das so passen.
Ok. Schauen wir mal.
Schauen wir mal.
Gucken wir mal.
Ob das Sinn ergibt.
Was ich da gebaut habe.
Moment.
Was will ich sehen in meiner Ausgabe.
Passt das?
Ich habe hier 0.
Und letzte Zeile.
Doch.
Ich glaube das stimmt.
Guck mal.
Wie sieht mein Input aus?
Moment.
Ich muss mal kurz hier.
Ein bisschen Space drunter machen.
Also.
Ne.
Quatsch.
Nicht da.
Ok.
Ach so.
Kleiner gleich.
Ja das sieht besser aus.
Das sieht gut aus.
Das sieht gut aus.
So. Erste Zeile. Erste Zahl.
Kommt das hier raus.
Erste Zeile. Zweite Zahl.
Kommt das hier raus.
Ok. Das scheint zu funktionieren.
Letzte Zeile sind wieder 2.
Breakpoints mit Debugger.
Keck. Wait.
Damit fangen wir jetzt nicht an.
Also das sieht passend aus.
Ok. Also.
Wir kriegen jetzt eine Zeile davor.
Und eine Zeile danach.
Jetzt.
Jetzt müssen wir gucken.
Dass wir.
Den richtigen.
Dass wir.
Davor und danach.
Rausholen.
Also im Endeffekt.
Row.
Und jetzt Selection.
Ne Quatsch. WTF.
Selection Index.
Rider Spektrum.
Selection Length.
Irgendwie sowas.
Ergibt das Sinn?
Lass mal kurz gucken.
Ich müsste jetzt die Zahlen zumindest raus.
Ach ne das kann ja.
Moment.
Warum genau ist das jetzt out of bounds?
Ich mein.
Warum ist das out of bounds?
Moment. Jetzt bin ich verwirrt.
Ach. Moment.
Moment. Das ist ja falsch wie ich das benutze.
Lull.
Das ist ja Range.
Range Selector.
Das geht von Index bis Index.
Ja. Ja. Ok.
Ok. Dann ist das schonmal totaler Blödsinn.
Was ich hier gerade probier.
Also.
Ich brauch jetzt. Ich will.
Oh shit man.
Gab's nicht irgendwie so ne.
Es gab doch die Möglichkeit mit Link.
Das irgendwie auszulesen.
Sodass es ihm egal ist.
Wie viel.
C Sharp. String.
Out of.
Out of.
Range. Link.
Konnte das doch.
Das war irgendwas mit Skip.
Ich glaub das war irgendwas mit.
Ich glaub du hast irgendwie erst gesagt Skip.
Und dann Take.
Link. String.
Out of.
Range.
Ja genau.
Irgendwie so.
Link hat in dem Fall bei Skip.
Bounce Check oder sowas.
Dass das nicht kaputt ist.
So von der Zeile.
Wir wollen anfangen.
Wir wollen anfangen bei Selection.
Index.
Minus 1.
Ja das ergibt ja auch Sinn.
Guck mal. Wenn ich sage das ist ein Character Array.
Und überspringe.
Minus 1.
Dann heißt das fange am Anfang an.
Das ergibt sogar Sinn.
Dass das funktioniert.
Ok. Skip. Und Take.
Ja gut. Das sind.
Moment.
Ähm.
Wir wollen 1 davor starten.
Und jetzt wollen wir im Endeffekt.
Selection.
Length.
Plus 1.
Oder.
Ok. String.
Join.
Oh das wird ganz eklig jetzt.
Ok. Fundst du es jetzt?
Aha.
Fast. Fast.
Guckt mal.
Wir kriegen 1 davor.
Aber wir kriegen keins danach.
Muss ich sagen.
Plus 2?
Ist aber auch weird. Hä?
Fuck.
Das ergibt keinen Sinn was ich hier mache.
Oder?
Ich fange bei Minus 1 an.
Ja das ist richtig.
Das Problem ist jetzt nur.
Das ich.
Guckt mal.
Das kann ich so noch nicht machen.
Oh das ist ja doof.
Weil. Das Ding ist.
Wenn ich 1 zurück gehen kann.
Dann ist alles ok.
Dann will ich auch.
Selection plus 2 machen.
Wenn ich allerdings nicht zurück gehen kann.
Ne bei der ersten ist aber auch falsch.
Bei der ersten will ich nur.
1.
Hinten dran.
Oh ne das ist doof.
Das fundst du nicht.
Noch mal weg machen.
Also machen wir noch was anderes.
Startindex gleich.
Das müssen wir glaube ich echt.
Das müssen wir glaube ich echt so machen.
So Startindex.
Ist im Endeffekt.
Das hier.
Im Prinzip genau das gleiche.
Oder 0.
So und.
End.
Endindex.
Ist.
Selection.
1.
Ey Leute die Knorr Werbung kennst.
Hast du auch die Knorr ASMR Werbung bekommen?
Die verstört mich auch immer extrem.
Wenn.
Wenn die Typen dann in der Knorr Werbung anfangen.
Es ist Knorr ASMR.
Das ist.
Das finde ich auch immer.
Höchst verwirrend.
So und der Index.
So zumindest.
So warte mal.
Der Endindex der ist jetzt.
Row.
Length.
Minus 1.
Ne Moment.
Warte mal.
Blödsinn.
Das ist ja abartig.
Es macht keinen Sinn.
Endindex ist.
Selection Index.
Plus 1.
Oder Row Length.
Minus 1.
Ja ok gut.
Alter.
Dann kann man sowas sagen wie Row Substring.
Wahrscheinlich.
Startindex.
Und.
Achso Moment.
Das ist ja nur Länge.
Monkeys.
Ok Row.
Dann machen wir es so.
Startindex.
Ey das ist ja abartig.
Alter.
Das macht Ryder nicht mit.
Endindex.
Moment.
Es muss Startindex.
Plus Selection Länge.
Ja sein.
Und dann plus 1.
Das sieht gut aus.
Ne.
Oder?
755.
Länge plus 2.
Ne.
Ähm.
Äh.
Ich glaube jetzt stimmt es.
664.
Ja.
664.
Also 598.
Gibt einen Punkt davor.
Ok 755.
Sollte quasi das hier ergeben.
755.
Ergibt genau.
Gibt 5 Punkte.
Ok. Ja gut.
Das sieht richtig aus.
Ok.
Dann würde ich sagen.
Schenken wir uns das.
Und.
Brauchen wir wieder eine Liste.
Obwohl schön ist ja echt was anderes.
Haben wir wieder eine Liste.
List gleich new.
String.
List add.
Ok.
Turn.
Ups.
Ne ne wir wollen kein Licht.
Wir wollen ein.
So.
Also schauen wir mal.
Input.
Mit dem Beispiel Input.
Ist eine Summe der gültigen Zahlen.
4061.
Also vielleicht sollten wir das mal nicht Plup nennen.
Sondern.
Wir nennen es einfach 1 zu 1.
Refactor.
Rename.
Irgendwie.
Keine Ahnung.
Get.
Surrounding.
Surrounding Text.
Text.
Get Surrounding Text.
So.
Und jetzt gucken wir.
Pass mal auf.
If.
Any.
Ob irgendein dieser Zeichen.
Symbole enthält.
So und Symbole.
Das machen wir jetzt auch mal ohne Regex.
An der Stelle.
Weil wir wissen ja es sind Sternchen.
Dollar.
Und Plus.
Wobei wissen wir alle Symbole?
Oh ne.
Da sind doch uns und Slashes und so drinne.
Oh die sind.
Der ist gemein.
Der ist gemein.
Alles außer Punkte und Zahlen.
Okay wir brauchen doch noch ein Regex.
Lul.
War ja irgendwie klar.
Um Regex Sachen.
Kommen wir hier nicht drum rum.
Nennen wir es mal irgendwie Symbol Regex.
Rogox.
So.
Was machen wir jetzt?
Okay.
Regex Magic.
Achtung Leute.
Passt mal auf.
Jetzt könnt ihr noch was lernen.
Wer weiß wie man ein nicht macht in Regex?
Ich weiß es zufällig.
Weil ich das.
Das weiß ich schon lange.
Weil ich das mal irgendwie ein paar Tage versucht habe.
Ordentlich hinzubekommen.
Als ich noch Azubi war.
Seitdem habe ich mir das gemerkt.
Toffi.
Fetisch.
Aha.
Alles klar danke für den Sub.
Genau so macht man das.
Also ich glaube man kann es schreiben.
So.
Also wir wollen alles.
Außer.
Außer Digits und außer Punkte.
Wobei ich mir nicht ganz sicher bin.
Ob ich den Punkt an der Stelle.
Escapen muss.
Oder ob an der Stelle ein Punkt.
Ist.
Tja.
Dankeschön Radiant Tracer.
Heute war Linux Kernel 666.
Der Teufel.
Ich glaube man muss es nicht escapen.
Und 665 war dann.
Der Nachbar vom Teufel.
So jetzt gucken wir mal.
Okay machen wir mal Line.
Symbol Regex.
Is Match.
Wenn Any.
Matcht.
Dann.
Das können wir jetzt ja einfach überprüfen.
Ob das funktioniert was wir hier bauen.
Selection Value aus.
Okay also.
Das 467 hat ein Symbol daneben.
Soll drinnen stehen.
114 hat.
Hat 114 da was dabei.
Ne hat nicht.
Soll nicht drinnen stehen.
35 soll drinnen stehen.
633 soll drinnen stehen.
617 soll drinnen stehen.
58.
Soll nicht drinnen stehen.
592 soll drinnen stehen.
755 soll drinnen stehen.
664 soll drinnen stehen.
Und 508.
Das sieht gut aus.
Das sieht.
Was wenn sich zwei Nummern diagonal berühren.
Das ist egal.
Wichtig ist das angrenzend ein Symbol sein muss.
Okay.
Dann zählen wir das doch mal zusammen.
Ob da jetzt das richtige rauskommt.
Ähm.
Count plus gleich int pass.
Das da.
Äh.
Ja.
Count.
So.
Da müsste jetzt rauskommen.
436.
Schauen wir mal.
Sieht gut aus glaube ich.
Ja.
Nice.
Okay.
Großen Input nehmen.
Massive Input.
535.078.
Ne.
Prediction.
Prediction.
Wird das Ergebnis stimmen?
Ja. Nein.
Was denkt ihr?
Stimmt es oder stimmt es nicht?
Die Zahl die wir haben.
Ihr könnt Channel Points wetten.
Du hättest gedacht man muss den Punkt escapen.
Vielleicht gibt es ja noch irgendwie Probleme mit dem Regex.
Ihr seid aber.
Ihr seid aber äußerst zuversichtlich.
Ich möchte euch mal dran erinnern.
Ich glaube ich nie First Try mit dem eigentlichen Test Input funktioniert hat.
Obwohl der.
Wobei doch das letzte Mal hat es glaube ich funktioniert.
First Try.
Obwohl der Test Input funktioniert hat.
Okay. 400.000 Kekse zu 12.
Da können.
Da können.
Wenn jetzt einer ordentlich was setzt.
Nein.
Kann er richtig Geld gewinnen.
Geld. Geld.
Das ist ja ein Casino Stream.
Kein.
Sind Casino Streams eigentlich immer noch so angesagt?
Ich glaube auf Twitch ist es ein bisschen weniger geworden.
Ja die sind jetzt alle auf Kick.
Aha.
Gib doch noch ein paar Daupters.
Gib doch noch ein paar Daupters.
Gute Wahl.
Ich kann mir nämlich auch nicht vorstellen, dass das direkt funktioniert.
Aber.
Ja man weiß nicht.
Und dann sind wieder 400.
480k weg.
Oder 300k weg.
Oder wie MontanaBlack jetzt sagen würde.
Oder wie würde er denn sagen.
Digger wieder 150k weg.
Oder irgendwie sowas.
Auf jeden Fall Digger.
Auf jeden Fall Digger.
Benutzt du eigentlich GitHub Co-Pilot?
Eine Umdrehung Digger.
Was hältst du davon?
Ich benutze tatsächlich.
Ich habe auch kein Co-Pilot Abo.
Was am Anfang mal ausprobiert.
Es ist praktisch.
Aber jetzt nicht essentiell für mich.
Okay. Probieren wir mal aus.
Schauen wir mal ob die Daupters recht haben oder die Enjoyers.
Schauen wir mal ob die Daupters recht haben oder die Enjoyers.
Easy.
Easy.
Easy as fuck.
Easy as fuck.
Easy.
Easy.
Easy.
Easy.
Easy.
Easy.
Okay.
Ich habe selbst gedauptert.
Dass das funktioniert.
Aber man muss sagen.
Schön ist der Source Code nicht, oder?
Schön ist der Source Code nicht, oder?
Nee, wir machen sehr wenig AI Zeug.
Nee, wir machen sehr wenig AI Zeug.
Nee, wir machen sehr wenig AI Zeug.
Wir gucken jetzt Doge an.
Part 2 ertrage ich heute nicht.
Nein, Part 2 mache ich heute nicht.
Wie gesagt, Part 1 war schon abfuck.
Wie gesagt, Part 1 war schon abfuck.
Sonst kommen wir heute wieder nicht dazu uns das andere anzugucken.
Auch wenn ich schon massive finden dran bin.
Auch wenn ich schon massive finden dran bin.
Achso, Modgis.
Moment, wir müssen Prediction.
Max, ich habe keine Ahnung wie man Prediction auflöst.
Kannst du das machen?
Max, ich habe keine Ahnung wie man Prediction auflöst.
Kannst du das machen?
Wir machen da innumerable draus.
Wir machen da innumerable draus.
Einfach wieder slash Prediction.
Achja, choose outcome.
Achja, choose outcome.
Wird das Ergebnis stimmen?
Ja, complete prediction.
Are you sure?
Correct outcome.
Something went wrong.
Hast du schon?
Hast du das schon gemacht?
Hast du das schon gemacht?
Achso.
Ich wollte gerade sagen, warum geht das denn?
Ich wollte gerade sagen, warum geht das denn?
Also schön ist echt was anderes.
Also schön ist echt was anderes.
Also was wir vielleicht machen können,
das können wir noch hier reinschreiben.
Das muss keine eigene Zeile sein.
Das hier unten geht ja.
Aber das gefällt mir halt überhaupt nicht.
Das ist so richtig krass, eklig,
unleserlich alles.
Aber mir fällt jetzt auch nichts anderes ein,
wie man es gescheit machen könnte,
ehrlich gesagt.
Kommentare.
Ich glaube es geht los mit Kommentaren.
Fangen wir nicht an.
Ich habe eine Idee, wie man das vielleicht ein bisschen schöner machen könnte.
Ich habe eine Idee, wie man das vielleicht ein bisschen schöner machen könnte.
Ich glaube nämlich, dass wir uns das hier
sparen können.
Und dafür könnten wir sagen,
Rose,
wir starten,
wir starten hier,
wobei, wir machen das auch so.
Wir skippen so viele Rose
und dann
taken wir immer 3.
Habe ich da nicht das gleiche Problem?
Habe ich da nicht das gleiche Problem?
Da habe ich doch genau das gleiche Problem, oder?
Wie bei den anderen Sachen.
Wie bei den anderen Sachen.
Ne, das funzt glaube ich echt nicht.
String, join.
Das funzt glaube ich nicht.
Wow.
Moment, mal kurz den Input rückgängig machen.
What?
What?
Ah ja.
Ne, passt doch.
Wir joinen das an Newline.
Hä?
Ja.
Oh ne Leute, das funzt nicht.
Ja, das, okay, dann fällt mir nicht ein,
wie man das kürzer und knackiger machen könnte.
wie man das kürzer und knackiger machen könnte.
Weil das ist immer, das macht immer Probleme.
Weil entweder
es geht nicht zurück
und dann ist quasi der Zeiger hier
und es takt die nächsten zwei
oder er geht, wie es sein muss, eins zurück
und takt, ne.
Dann müssen wir es so lassen.
Dann fällt mir jetzt auch erstmal nichts anderes ein,
wie man es machen könnte.
Okay.
Also denn.
Ich werde es mal committen.
Wobei, ich behalte mir mal vor,
das noch irgendwie ein bisschen schöner zu machen.
So richtig nice finde ich es nicht.
Mir gefällt es irgendwie nicht so richtig gut.
Mir gefällt es irgendwie nicht so richtig gut.
Gerade das hier.
Aber kommt, wurscht.
Git Status.
Git Add.
Git Commit.
Day 3.
Push.
Also, Part 2.
Okay, was müssen wir?
Wir gucken mal, was Part 2 ist.
Immerhin.
Mal kurz drüber gucken, was es ist.
Auch wenn ich Part 2 jetzt nicht mehr machen will.
Okay, blablabla.
Missing Part wasn't the only issue.
One of the gears in the engine is wrong.
Aha.
Okay.
A gear is any Sternchen Symbol,
das angrenzend an exakt 2 Nummern ist.
das angrenzend an exakt 2 Nummern ist.
Das angrenzend an exakt 2 Nummern ist.
Da muss man das zusammenrechnen.
Da muss man das zusammenrechnen.
Oah.
Ach du Scheiße, Mann.
KEGG.
Top left, weil angrenzend daran, oh shit, Alter, wie soll denn das funktionieren?
Das ist fast das gleiche wie 1?
Ne, guck mal, ne, ne, ne, das ist nicht fast das gleiche wie 1, guck mal.
Du kannst ein Sternchen an der Zahl dran stehen haben und das macht nix.
Du musst quasi raus, du musst dir quasi raussuchen, an welcher Zahl steht,
okay, wir brauchen Step 1, wir brauchen Step 1, um uns alles rauszuholen, was angrenzend ein Sternchen hat.
Und dann müssen wir gucken, ob in der Zeile darüber ne Zahl steht, die auch daran angrenzend,
boah, ne, das ist, das, also da hab ich jetzt überhaupt keine Idee gerade.
Und vor allem, es könnte ja auch sein, dass zwei Zahlen auf der gleichen Seite,
zwei Zeile nebeneinander stehen.
Also wir müssten, wir müssten uns auf jeden Fall zuerst rausholen,
alle Zahlen mit, mit angrenzendem Sternchen.
Das heißt, wir können schon mal alles rausschmeißen, wo keine Sternchen angrenzen.
So, und jetzt ist nur die große Preisfrage, wie bringe ich die Zahlen dann richtig zusammen?
Also mal angenommen, ich filtere alle Zahlen raus, die, die Sternchen angrenzend haben.
Dann muss ich trotzdem noch entscheiden, welche Zahl ich mit welcher Zahl jetzt zusammenrechne.
Ne, ne, so einfach ist das nicht.
Ich muss nicht alle Zahlen zusammenrechnen, ich muss die richtigen Zahlen zusammenrechnen.
Also mal angenommen, ich suche mir jetzt alle Zahlen raus mit Sternchen, so.
Dann finde ich die Zahlen und die Zahlen und, da finde ich dann die Zahlen, die Zahlen.
So, und jetzt muss ich gucken, dass, dass ich nicht ausversichert,
die Zahlen mit dieser Zahl rechne und so.
Also ich muss im Endeffekt gucken, welche Zahl steht oben drüber, steht unten drunter.
Oh, fuck ich.
Ne, mal muss ich rechnen.
Ich muss 4, 6, 7 mal 35 rechnen.
Aber nicht etwa, ähm, mal 6, boah, kack, also.
Gibt's da irgendeinen Trick?
Also, ja, easy, wartet mal, wartet mal.
Ich hab ne Idee.
Wir müssen, doch, ich hab ne Idee.
Das machen wir trotzdem nicht.
Wir müssten das hier erweitern, und zwar sowas mit, mit Breite und Höhe oder so.
Also nicht wirklich die Selection.
Wir bräuchten, aber der Index muss nicht identisch sein.
Guck, hier ist der Index ganz woanders.
Ähm, wir, also, wir bräuchten, wir bräuchten hierfür, wir bräuchten hierfür nicht einfach nur Text.
Wir bräuchten hierfür quasi.
Eine, ähm, wir bräuchten Selections.
Wir bräuchten Selections für jede, für, für, für das hier, für Surrounding Text.
Und dann müsste ich gucken, äh, überschneiden sich Selections.
Reicht das überhaupt?
Der Index vom Symbol.
Das ist ne gute Idee, das ist ne gute Idee, Chat.
Das ist, das ist ne gute Idee.
Index vom Symbol.
Das ist gut.
Wir müssen uns im Endeffekt, wir, okay, okay.
Wir müssten.
Hier, hier müssten wir quasi noch den Index im, im ursprünglichen Text uns merken.
Und dann überprüfen, ob zwei Zahlen das gleiche, das gleiche Sternchen sich teilen im Endeffekt.
Also wir können quasi das behalten, so wie es ist.
An der Stelle ist das blöd.
Wir können das so behalten, wie es ist.
Nur, dass wir hier, da wo wir Surrounding Text kriegen, brauchen wir, wir brauchen nicht Surrounding Text.
Wir brauchen Surrounding Text plus Index.
Doch, doch, doch, doch, wir machen jetzt, doch, das machen wir das nächste Mal.
Da habe ich heute kein, kein Hirn für.
Ich überlege nur schon mal.
Stimmt, wir, wir brauchen Surrounding Text, also wir brauchen quasi dann nicht nur den Text, sondern Text plus Index.
Und wir können uns das hier im Endeffekt auch sparen.
Sondern wir müssen einfach gucken.
Ob ein Sternchen da ist.
Das heißt, wir brauchen dann so was wie, äh, ja, ja, keine Ahnung, Records.
Ähm, ne, eigentlich, eigentlich gar nicht.
Eigentlich brauchen wir hier nur noch die Positions von dem Sternchen.
Eigentlich bräuchten wir hier nur die Position von dem Sternchen zurückzugeben.
Und uns das merken und dann gucken, okay, hey, das ist doch gar nicht so kompliziert, wie ich gedacht habe.
Wir müssen uns hier die Position von dem Sternchen.
Raussuchen und dann am Ende gucken, welche Zahlen teilen sich einen gemeinsamen Sternchen-Index.
Das müssen wir machen.
Also, machen wir, machen wir nicht jetzt, sondern jetzt gucken wir uns Docke an.
Ja, also fast bringt wahrscheinlich nichts.
Wobei, ja, egal.
Ähm, gucken wir, gucken wir, gucken wir das nächste Mal.
Mein, mein Hirn, mein Hirn ist aufgebraucht.
Wir gucken uns jetzt was Einfaches an.
Gucken wir uns jetzt Docke an.
Das wollte ich mir nämlich die ganze Zeit schon angucken.
Sogar gestern schon, aber gestern habe ich es nicht auf die Reihe gekriegt.
Docke ist ein Webinterface für Docker.
Es gibt sogar ein Video zu.
Aha.
Das habe ich schon mal angehabt.
Got it.
Okay.
Wir gucken uns das einfach ohne Video an.
Docke.
Chat, ich muss mal kurz was essen.
Ich habe Hunger.
Lass mich mal kurz was futtern, damit ich wieder Brain-Kapazität frei habe.
Docke.
Docke angucken und was trinken.
Korrekt.
Excellent.
Chat, können wir uns irgendein ordentliches, haben wir irgendein schönes Video, was ich gucken kann?
Während ich am futtern bin?
Was haben wir denn hier noch übrig?
Google-Suche stirbt.
Warum du nicht mehr findest bei Google?
Weil sinnloser Spam überall.
The slow death of Windows.
Ist das so?
Habe ich da meine Zweifel?
Okay, komm.
Ah, scheiß drauf.
Ich gucke.
Was ist das?
Software-Engineur.
BMW-Stress für den Algorithmus.
Okay, komm.
Komm mal, das.
Wurde auch erst vor fünf Tagen veröffentlicht.
Alles klar.
Leute, ich muss mal kurz was essen.
Dann machen wir weiter.
Das große Ziel meines Programms ist es, quasi dem Fahrzeug beizubehalten.
Was?
Das große Tier?
Also, was haben wir denn hier?
Tobias ist Doktorand bei BMW in München und arbeitet im Bereich Software-Engineering.
Für seine Doktorarbeit versucht er, einen schon existierenden, kamerabasierten Algorithmus so zu verbessern,
dass das Fahrzeug weiß, wo es sich genau befindet.
Macht man das nicht eigentlich über GPS, um zu gucken, wo man sich befindet?
Der Algorithmus soll eine zentimetergenaue Lokalisation des Fahrzeugs sein.
Hat man dafür nicht GPS?
Ich meine, okay, über GPS kann man vielleicht keine Doktorarbeit schreiben.
GPS im Parkhaus und Tunnel.
Ach so.
Ja, ihr habt recht.
Aber im Parkhaus dürfte es sich um die Fahrzeuge handeln.
Aber im Parkhaus dürfte es sich um die Fahrzeuge handeln.
Das dürfte jetzt auch enorm schwierig werden, nur mit Kameras festzustellen, in welchem Parkhaus man jetzt ist.
Egal, wir werden es ja vielleicht lernen in dem Video.
Gucken wir mal.
Ich verstehe immer das große Tiere meines Programms.
Was sagt der?
Das Ziel?
Ich verstehe große Tiere.
Das große Ziel meines Programms ist quasi, dem Fahrzeug beizubringen, wie ein Mensch sich in der Umgebung zu orientieren oder beziehungsweise orientieren zu können.
Hoffentlich funktioniert es dann auch.
Aber ich würde sagen, links, Mitte, rechts, Mitte, rechts.
Jetzt ist es nochmal schon ein kritischer Punkt.
Jetzt kommen wir aus dem Tunnel raus und ins Helle rein.
Schief gehen könnte, dass die Technik einfach nichts aufbaut.
Es ist aufzeichnet.
Hi, ich bin der Tobias und ich arbeite bei BMW in der Software Engineering.
Und heute würde ich gerne auf eine Testfahrt gehen, um zu überprüfen, ob mein Programm, das ich programmiert habe, nicht nur im PC funktioniert, sondern auch in der reellen Welt funktioniert.
Tabelmanagement, wozu?
Dass es irgendeinen Test aufbaut und dann danach wieder rausfliegt.
Haben wir nicht schon mal sowas geguckt?
Wo die mit einem Tablet im Altersheim waren?
Erinnert ihr euch noch?
Da war doch was.
Da waren die mit einem Tablet im Altersheim.
Das ist das Einzige, was ich mir gemerkt habe.
Es ist sehr unwahrscheinlich, dass ein Programm auf Anhieb funktioniert.
Und dann besteht ein Großteil der Arbeit als...
Außer es ist written in Rust.
Dann ist ja belegt, dass es immer instant funktioniert.
Und blazingly fast ist.
In der Problemlösung, um eben diese Programme, die man am Anfang geschrieben hat, dann auch wirklich zum Laufen zu bringen.
Ich esse Toastbrot.
Stimmt, die Fußballer-App hatten wir auch schon.
Und bereit.
Wir schauen kurz drauf, würde ich sagen.
Wir besprechen kurz, wo wir landen.
Wir haben ein Siebener-BMW heute.
Ist das teuer?
Chat, ich habe keine Ahnung von Autos.
Ist ein Siebener-BMW teuer?
Das ist ein Stehtisch.
Da können wir uns ein bisschen hinstellen.
Da können wir uns die Route besprechen, genau.
Da können wir jetzt sehen, worum es geht.
Ja, okay.
Besonders interessant für mich sind zum einen hier der P-Tunnel, weil eben das System ja unterstützen soll, wenn zum Beispiel GPS ausfällt oder ähnliches.
Und da ist im Tunnel ganz interessant.
Dass da einfach eine Situation mit drin ist, in der ich eben Sensorausfall simuliere.
Und im Tunnel ist halt kein GPS vorhanden.
Wo du mir eigentlich am meisten noch während der Fahrt helfen kannst, ist dann, mich hier durchzulotsen, dass wir dann hier wieder rauskommen.
Das könnte sein, dass ich da ein bisschen Probleme bekomme.
Genau, und sonst eigentlich wäre es cool, wenn du einfach ein bisschen mitschaust und unterstützt.
Ja, genau.
Zu BMW bin ich gekommen, indem ich nach dem Tunnel bin.
Da habe ich mich nach einer Werkstattstelle gehalten.
Und ich wollte irgendwas mit Karten machen.
Ich wollte mich mit kartenbasierten Informationen beschäftigen.
Und vielleicht auch irgendwie in eine größere Firma kommen.
Und dann bin ich eben auf BMW gekommen und habe dann eine Stellenanzeige gefunden, wo es um Speedlimits in Kartendatenmaterial ging.
Schauen wir mal in den Keller runter und suchen den Schlüsselkasten.
Da habe ich letztens, haben wir uns im Stream ja auch mit Speedlimits und Kartenmaterial beschäftigt.
Ihr erinnert euch vielleicht noch dunkel.
Wo ich das Plugin für meinen Garmin-Fahrradcomputer programmiert habe.
Da wollte ich ja auch gucken, ob man nicht irgendwie von der AP das Speedlimit zur GPS-Position abfragen kann.
Und ja, das ging, aber es war nur sehr umständlich.
Und ich habe da nie weitergemacht an der Stelle.
Also ich gehe mal davon aus, bei denen muss das etwas professioneller laufen als bei mir.
Und dann können wir starten.
Weil Windows-Logik, Theo.
Das versteht keiner.
Wahrscheinlich nicht mal Microsoft ZEPS.
M-C-I-95-E.
Pass, pass.
Laut dem Ding ist ja irgendwo da hinten gestanden.
Ah, da ist ja das Fahrzeug.
Da steht er in der Ecke.
Dann, ja.
Schön beleuchtetes Parkhaus.
Ah, guck mal.
Elektroauto.
Ogu.
Wir haben hier im Kofferraum noch ein bisschen mehr Technik verbaut.
Ich glaube, das sind hier die Datenlogger.
Das heißt, hier werden die Daten vom Bordnetz aufgezeichnet im Fahrzeug, die wir später auswerten können.
Aber für mich, die eigentlich wichtige Technik ist vor dem Fahrzeug verbaut.
Und zwar würde es hier um diese Kamera gehen in der Windschutzscheibe.
Die Kamera ist in momentan jedem BMW-Fahrzeug verbaut.
Und deswegen ist es sehr interessant für BMW, diese Kamera deutlich mehr zu verwenden, als sie aktuell verwendet wird.
Aktuell wird sie eigentlich hauptsächlich dafür verwendet, um den Abstand zum Vordermann abzuschätzen oder um die Spurmarkierungen zu erkennen.
Ja.
Und um eben die Kamera mehr...
Tatsächlich, mein Fiat auch.
Man kann auch Verkehrsschilder und so Zeug erkennen.
Funktioniert auch recht gut.
...einzubinden, da sie schon vorhanden ist überall.
Möchten wir auch untersuchen, ob sie für den Lokalisationsalgorithmus oder für die Lokalisationsmethodik verwendbar ist.
Ich habe im Studium Fahrzeuglokalisation gehabt.
Das hat mich dann sehr interessiert.
Und deswegen habe ich auch dann die Masterarbeit bei BMW angenommen dann,
als es eben um Fahrzeuglokalisation in Parkgaragen gegangen ist.
Und dann durfte ich sechs Monate lang bei BMW meine Masterarbeit schreiben.
Und aus dieser Masterarbeit ist dann quasi konsekutiv hervorgegangen,
dass ich meine Promotion dann mit einem ähnlichen Thema, wie ich eine Masterarbeit hatte, dann fortsetzen konnte.
Ich möchte Ihnen offiziell meinen neuen Masterstudenten vorstellen.
Das ist Alan Thomas.
Er ist schon seit eineinhalb Wochen hier.
Aber wir hatten keine Chance, ihn offiziell zu treffen.
Also eine offizielle Vorstellung an alle von Ihnen.
Wir sitzen alle in einem Boot.
Ich kann als Software-Ingenieur arbeiten,
weil das ingenieurtechnische Wissen, das ich aus meinem Studium mitgenommen habe,
muss irgendwie auch den Computern bzw. der Technik beigebracht werden.
Man muss zum einen wissen, was möchte ich an der einen Hand, was ich mir geistig überlegt habe, umsetzen.
Was brauche ich hier?
Und zum anderen, was kann denn überhaupt die Programmierung?
Was kann jetzt mein Rechner?
Was kann der Sensor, den ich einsetzen möchte?
Wie kann ich das zusammenbringen?
Und deswegen ist dieses Software...
Ist das ein Ubuntu oder was hat er da am Start?
Das sieht ein bisschen nach Ubuntu-Desktop aus, hier mit der Zeile neben und so.
Auf jeden Fall GNOME, ja.
Ja, die geben ihren Leuten wenigstens gescheite Notebooks und gescheite Betriebssysteme, um darauf zu arbeiten.
Also insofern finde ich das schon mal top.
Für Development auch ein sehr großes Felgen.
Oh Gott, mal da!
C++!
Das wäre ja schon mal wieder upturned für mich.
Aber gut, für Embedded Autogramm C++ verstehe ich ja noch irgendwo.
Wo man nicht nur das Wissen braucht, wie ein Computer funktioniert,
sondern eben auch viel, viel mehr zusammenbringen muss.
Die Ideen von der mathematischen Seite, die Ideen von Ingenieurseite,
die Ideen von irgendwelchen Kunden vielleicht.
Ich weiß mir gar nicht, wo ich mir mehr Gedanken drüber machen soll.
Dass SpaceX mit JavaScript in den Weltall fliegt
oder dass BMW-Sachen auf C++-Basis funktionieren.
Ich meine, seriös, ernsthaft, beides ist kein Problem, ja.
Ja, die ganzen SpaceX-Terminals und sowas
in der Rakete auch, das ist alles irgendeine Elektron-JavaScript-Geschichte.
Aber es gibt auch Buttons dafür, falls es mal wieder nicht funktioniert.
Auf der rechten Seite sieht man eben das Eingangsmaterial.
Und da sieht man hier dann, das sind die Bilder,
die aus der Frontkamera vom Fahrzeug kommen.
Und die grünen Vierecke, die hier sind, sind die extrahierten Features.
Und die Idee ist des Programms, sich über diese Features
Schritt für Schritt bei jedem Bild nach vorne zu hangeln.
Und so die Positionen immer von der vorhergehenden ausgehenden
dann zu berechnen.
Jetzt verstehe ich auch, jetzt verstehe ich auch, was der vorhat.
Jetzt ergibt das ja auch Sinn.
Die gucken per GPS, wo ist das Auto.
Und dann fahren die kurzzeitig in irgendwas rein,
wie den Tunnel zum Beispiel.
Oder im Parkhaus, wo GPS nicht funktioniert.
So.
Und jetzt willst du weiterhin orten,
wo das Auto ist.
Das heißt, die Kamera läuft ja die ganze Zeit mit.
Und die versuchen quasi so zu extrapolieren,
quasi die Position anhand der Merkmale auf dem Bild,
wie die so an der Kamera vorbeiziehen.
Ich meine, das funktioniert natürlich umso schlechter,
umso länger es kein GPS-Signal gibt.
Aber für so ein paar Meter nur geradeaus und so,
kann ich mir durchaus vorstellen, dass das funktioniert.
Smarty McFly, danke für den Sub.
Wupp, wupp, wupp, wupp, wupp, wupp, wupp.
Auf diesem Testdatenmaterial wird dieser Fehler angezeigt.
Und jetzt wieder...
Könnte vielleicht auch C++ liegen.
Bei der Testfahrt möchte ich einfach eigenes Datenmaterial erzeugen,
auf dem ich dann sicher sein kann,
okay, hier und hier habe ich das gemacht,
weil ich bin das Fahrzeug gefahren.
Also wenn die Testfahrt jetzt nicht erfolgreich sein sollte,
müsste ich sie dann in der Folge wiederholen.
Und dann müsste ich alles noch mal vorbereiten
und noch mal Zeit investieren.
Wenn ich da zu lange brauche,
dann kann ich am Ende nicht mehr auf die Daten zugreifen
und ich kann auch nicht mehr auf das BMW-Equipment zugreifen
und müsste dann eigentlich mit dem weiterarbeiten,
was ich schon erstellt habe bzw. ausgewertet habe.
Aber wenn es nicht ausreichend ist, kann es am Ende auch bedeuten,
dass ich meine Doktortitel nicht bekomme.
Wieso hat der Bildschirm und benutzt die nicht?
Wahrscheinlich, weil das ein Wechselarbeitsplatz ist.
Dass wir am Ende zwar die Strecke abgefahren haben,
aber keine Daten haben.
Das wäre natürlich der Worst Case.
Und sonst könnte es noch schiefgehen,
dass es vom Verkehr her nicht möglich ist,
dass ich meine Manöver fahren kann.
Deswegen bin ich zwar guter Dinge,
aber ein bisschen nervös, ob alles hinhaut.
Also dann fahren wir mal raus.
Gucken, ob der Ausweis funktioniert.
Jetzt.
Und wenn dann die Situationen kommen,
ist es wichtig, dass wir darauf achten,
dass wir ordentlich die Zeit verschreiben.
Der andere hat keinen Bock.
Ich glaube, der andere versucht, sich einfach ein bisschen zurückzuhalten,
weil es halt ein Fernsehbeitrag, na, crasht jetzt,
weil es halt ein Fernsehbeitrag über den anderen Typ ist.
...bleiben oder mitdenken, vor allem, was wir gemacht haben.
Deswegen wollen wir ganz wichtig darauf achten,
welche Zeit startet das Manöver,
um es anschließend dann in den Testdaten genau auslesen zu können,
wann wir da gucken müssen.
Und zum anderen, dass wir die Manöver ordentlich fahren, konzentriert fahren,
damit man das dann in der Auswertung gut vergleichen kann.
Und natürlich, dass wir während der Fahrt keinen Unfall bauen.
So, fertig erst.
Man kennt es vielleicht auch vom normalen Navigationsgerät,
wenn man im Urlaub in den Alpen oder so durch einen Tunnel durchfährt,
dass das Navigationsgerät sagt, okay, wir fahren einfach geradeaus weiter,
obwohl es dann gar nicht stimmt,
weil einfach keine Verbindung zu den Satelliten hergestellt werden kann.
Diesen Ausfall möchten wir überbrücken,
indem wir mit meinem System dann hier eben reingehen.
Hoffentlich...
Ich finde, das ist eine gute Idee.
...funktioniert es dann auch.
Also jetzt sind wir hier.
Und als Doktor musst du schon ein bisschen pfeifert sein.
Mit dem Manöver starten dann, sobald es dann dreispurig wird.
Aber ich würde sagen, links, Mitte, rechts, Mitte, rechts oder so.
Ich muss mich gerade kurz konzentrieren, dass ich hier rauskomme.
So, genau.
Also jetzt musste ich gerade darauf achten,
einmal, dass ich den Verkehr nicht störe und da keinen Unfall provoziere.
Jetzt ist noch mal so ein kritischer Punkt hier.
Jetzt kommen wir aus dem Tunnel raus und ins Helle rein.
Und das sind auch immer dann...
...interessante Wechsel für die Kamera.
Die Kamera muss sich genauso wie der Mensch auch erstmal an das Licht quasi gewöhnen.
Und das sind kurze Bereiche, wo es eben dann zu Abbrüchen in der Lokalisation kommen kann.
Wie will er das machen mit Kameras?
Hat er ja vorhin versucht zu erklären.
Die Kamera läuft ja die ganze Zeit.
Und er versucht dann quasi in dem Bild bestimmte Merkmale zu erkennen.
Und die dann quasi von Bild zu Bild zu tracken, bis sie halt aus dem Bild rausgehen.
So würde ich es mal beschreiben.
Also er erkennt dann diese, keine Ahnung, da ist eine Ampel, da ist irgendwie ein Schild, da ist irgendwie was.
Und die bewegen sich ja von Bild zu Bild.
Und anhand dessen kann man tracken, wo man sich befindet.
Also, es klingt schon irgendwie nachvollziehbar, klingt aber auch nicht gerade easy.
Das ist jetzt auch gut.
Jetzt kommen wir nämlich in den Bereich rein, wo links und rechts die Lärmschutzwände sind.
Das heißt, wir haben dann deutlich mehr Punkte wahrscheinlich rundum.
Und wenn dann der LKW vorne dran ist, dann ist es...
Dann ist es durchaus interessant, was dann aus dem Sichtfeld wird tatsächlich.
Ganz ehrlich, wenn ich das Auto so sehen würde, würde ich gar nicht vermuten, dass es einfach 150k kostet.
Anpel, danke schön für den Sub.
Ja, lief ziemlich gut, würde ich sagen.
Wir haben mehr Situationen gefunden, als wir davor gedacht haben.
Da ist ein LKW vor uns gefahren.
Und da haben wir mal gesagt, okay, fahren wir mal hinterher und gucken, ob das irgendwelche Auswirkungen hat.
Vielleicht auf das Punktfeld oder auf den Blickwinkel, den wir aus dem Fahrzeug raus haben.
Ich hoffe, dass das Datenmaterial auch dementsprechend gut ist.
Und genau, sonst mehr sehen wir dann, sobald ich die Daten habe.
Natürlich möchte ich nicht nur die wissenschaftliche Seite bedienen, sondern...
Wie heute bekommt er die Auswertung?
Wie jetzt?
Haben die da nicht gleich irgendwie das Ding mitgenommen mit den Daten?
Cool, was bei BMW auch oft möglich ist, dass Promotionsthemen nach dem Abschluss der Promotion ganz oft auch in der Serienentwicklung landen.
Und man dann eben, auch wenn es dann am Ende funktioniert, stolz darauf sein kann, dass, an dem man seine Doktorarbeit geschrieben hat, Serienanwendung in einem Fahrzeug gefunden hat.
Teams am Start.
Ein bisschen nervös bin ich schon.
Ist natürlich jetzt sehr entscheidend oder sehr interessant, was jetzt wirklich dabei rausgekommen ist.
Ob es jetzt funktioniert, ob es nicht funktioniert.
Aber ich bin guter Dinge, dass es...
...einen positiven Ausgang hat.
Ich bin gespannt.
Und hier die Punktwolke, die sich entwickelt.
Das haben die doch jetzt nochmal gestellt für den Beitrag, oder?
Der wird sich das doch im Vorfeld angeguckt haben, was da rausgekommen ist.
Und nicht erst, wenn er Rücksprache mit seinem Chef hat.
Ups, hat nicht funktioniert.
Aber, genau, da sind wir jetzt hier.
Weil hier die meisten Punkte leider aufmerksam sind.
Weil die meisten Punkte leider auf dem LKW gefunden werden.
Oder hier auf bewegten Objekten und gar nicht auf den stabilen Sachen hier.
Sieht man auch, weil der LKW sich wegbewegt vom Fahrzeug, fährt er hier nach hinten anstatt nach vorne.
Das ist schlecht.
Okay, das heißt, die müsste man einerseits filtern.
Ein paar Punkte sehen schon gut aus.
Ja, der hier wäre cool zum Beispiel, der hier.
Aber bei der Masse von anderen Punkten, dann haben die kein Gewicht auf die Lokalisation.
Genau, das heißt, du brauchst mehr Punkte und du musst die schlechten Punkte rausfiltern.
Genau, ich brauche vor allem viel mehr Punkte auf Sachen, die sich nicht bewegen.
Ich würde dann tatsächlich vielleicht nochmal mit dem Power nochmal ein Treffen vereinbaren.
Und dann wirklich die Punkte ansprechen, also auch das Bild zeigen.
Und dann die Punkte ansprechen.
Welchen Teil würdest du dann genau austauschen?
Den Feature-Extraktor, also den Open-Source-Orb-Extraktor rausnehmen.
Und dann den BMW...
Was richtig, richtig teures Closed-Source rein.
Von SAP und Oracle.
Das es auch gleich 800k plus kostet.
Vom Power und seinem Team entwickelten Extraktor dann einbauen.
Ja, das ist jetzt der erste Durchlauf.
Doch nicht.
Und wird das jetzt weiter feilen, bis das ein gutes Ergebnis, also auch algorithmisch ein gutes Ergebnis rauskommt.
Und das sind genau die richtigen Schritte in die Richtung.
Es ist ganz gut, dass das trotzdem passiert ist.
Also dass genau diese Situation mit dem LKW in dem Einfahrtsbereich von dem Tunnel.
Weil wir damit vielleicht sonst anders vielleicht gar nicht auf dieses Problem gestoßen wären.
Und jetzt haben wir eben genau dieses Problem gefunden.
Und können noch in einem relativ frühen...
Ja, macht ja auch Sinn.
Ich meine, dass das alles First Drive funktioniert, ist ja nicht davon auszugehen.
Und so vielleicht spätere Probleme dann jetzt schon angehen.
Wenn ihr wissen wollt, wie es ist, Software-Engineering zu studieren, dann klickt hier.
Und wenn ihr mehr Inhalte...
So, jetzt wissen wir Bescheid, wie es bei BMW läuft.
Passt noch zu Mario Kart Musik.
Und jetzt gucken wir uns Docke an.
Oh Leute, ich muss jetzt noch mal kurz was Süßes futtern.
Was haben wir denn hier noch?
Ich habe immer noch die Lidl Nikolaustüte da.
Also letztens habe ich den Milka Nikolaus gefuttert.
Dann das andere Zeug.
Ich habe jetzt noch übrig.
Passt mal auf, eine Sache ist noch drin.
Und zwar steht nicht drauf, was es ist.
Geil.
Geil.
Doch.
Das ist...
Wie heißt das?
Ich bin zu dumm, das auszulesen.
Mi...
Miki...
Nussecken.
Nussecken.
Irgendwas mit Nussecken.
Irgendwie Miki, Nussecken...
Lidl Zeug.
Oder Edeka?
Ich weiß es keiner mehr genau.
Ich glaube Lidl.
Warte mal, hier.
Lidl Nussecken.
Äh...
Die da.
Exakt genau die sind das.
Meine sehen aber nicht so gut aus wie auf dem Bild.
Meine sehen viel gestauchter aus als auf dem Bild.
Na egal, muss ich jetzt eins futtern.
Easy.
Ah, das ist Mininus.
Echt nicht Miki.
Und noch einer.
Ah.
Und noch eine.
Und 20 Stück oder so drin.
Ich war gestern wieder rennen.
Da habe ich genug Kalorien verbraucht, dass ich heute mal 3-4 Nussecken fressen kann.
Und morgen früh wieder.
Wie sieht es aus mit der Freundin?
Mit der.
Auf welche spielst du an?
Nussecken.
Okay, auch geht.
Genug Nussecken gefressen.
Okay.
Potman.
I.
MonkaS.
Ich werde mal einen Snapshot machen.
Bin noch nie so sicher.
Also.
Basics.
Ah, das muss man.
Muss man das irgendwie als Route laufen lassen oder so?
Archlinux ist supported.
Easy.
Dann ist alles gut.
Dann kann ich das ja weiter benutzen.
Gut, dass ich ein Snapshot gemacht habe.
Okay.
Also wie.
Okay.
So.
Route.
Warum eigentlich als Route?
Ich meine, ich kann Docker auch ohne Route.
Also wir probieren es mal ohne Route.
Ja.
Mal schauen, ob es ohne Route funktioniert.
Mkdir.
Mkdir.
Oh weh.
Habe ich doch.
Dock.
Dockge.
Mkdir.
Mkdir.
Mkdir.
Mkdir.
Mkdir.
Mkdir.
Mkdir.
Mkdir.
Mkdir.
Mkdir.
Mkdir.
Mkdir.
AMKDORR.
Mkdir.
Amkdir.
ZDK.
Da müssen wir das hier downloaden.
Gehen wir nochmal hoch.
Mkdir.
Stacks.
Dock.
Curl.
Compose Yamel.
Read Carefully.
Ok, wir readen.
Wir readen carefull.
Pauseport.
Containerport.
Run Docker.
Data.
App data.
Ok, ja.
Left Stacks.
Was?
Was?
Left Stacks, Path.
Gleich, gleich, gleich.
stacks passt was also wir wollen das verzeiht immer gucken ob das ohne gut läuft geht deswegen
den ports jahr 5001 ist kein problem das muss begleichen verzeichnet ich habe so meine zweifel
dass ich das richtig mache doch kompost ab ein docker composer am start was ist das hier jetzt
aber docker pulling du schau mal jetzt bin ich gespannt aufs funst docker läuft docker ps
auf port 5001 ok localhost 5001 doc doc language englisch username admin passwort
123 56 wer hätte sich das nur gedacht wie jetzt
lasst mich das passwort doch so machen wie ich will ok 1 2 3 4 5 6 sie macht 9 sie macht 9 das
stimmt ok ok mal ein anderes passwort 123 ckw 123 das ist okay das ist fein ok und jetzt dark
reader ausmachen guck mal hier hat er richtig advanced schattierungen auf dem kompost button
das massive scans dex folder kompost your first stag ja war das doch mal stack name haeckel doch
gefällt will dass deswegen alles gut laufen vielleicht weil das netzwerk okay ich bin ich
bin etwas unschlüssig was ich was ich da eigentlich sehe also das ist eigentlich schon mal guck mal hier
Das ist im Prinzip ein Web-Interface, um Docker-Compose-Files anzulegen, oder wie, oder was?
Wenn ich jetzt hier Add-Container mache, okay, Container-Name, äh, Who-Am-I, Docker-Hub, können wir auch nehmen, ja, äh, Traffic-Who-Am-I.
Ah, nee, das ist nur der Name.
Und da kann ich hier wahrscheinlich Image editieren, ah ja, okay.
Okay, das ist quasi ein Docker-Compose-Builder, das finde ich gar nicht so schlecht.
Nicht, dass man es wirklich bräuchte, ehrlich gesagt, Docker-Compose-Files sind jetzt ja nicht so kompliziert.
Aber wir testen es jetzt einfach mal, save.
Okay, das war ein Docker-Compose-File, ein Nginx auf Port 8080 und ein Terminal, Keckel, okay, aber läuft nicht.
Ähm, Start.
Also wie Portena, ich hoffe nicht, weil Portena nervt mich immer.
Started.
Okay, hier hat man jetzt ein Terminal, kann man, ach, guck mal, man kann sich sogar direkt per Shell attachen, das finde ich eigentlich ganz praktisch.
Active-Container-Keckel.
Konsole?
Ich bezweifle, dass ich root bin.
Im Container.
Ja, Command-Notice.
Das Filter, der garantiert.
Frontend-seitig.
Wetten, dass das Frontend-seitig gefiltert ist.
So, also hier sieht man die Log-Ausgabe, man sieht die Compose-Jammel und man sieht, worauf das läuft.
Da kann man draufklicken und dann geht's auf.
Ja, das ist super simpel gemacht.
Und dann landet man bei Nginx.
So, dann machen wir das nochmal anders.
Wir...
Stop and Down.
Stop and Down löscht wahrscheinlich auch alle Volumes.
Und so was, ne?
So Docker-Compose-mäßig.
Wir probieren.
Update.
Gibt kein neues.
Was ich mal probieren will, ist Edit.
Ah, hier kam ein Edit.
Was ist denn, wenn ich 3.7 mache?
Play.
Ist das?
Läuft das jetzt mit 3.7?
Man sieht leider die Nginx-Version nicht.
Also, was mich jetzt halt interessieren würde, wenn ich jetzt sage Update.
Ne, ne?
Da muss man...
Ach, Moment, das ist die Docker-Compose-Version.
Ich kack-Noob.
Was ich da geändert hab.
Ja, das ist ja Blödsinn.
Das ist die Docker-Compose-Version.
Hier ist Image-Latest.
Das meine ich ein.
Docker-Hub-Nginx-Image.
Nginx-Official.
Kann man das hier nicht mal ordentlich copy-pasten?
Ja, 1, 2, 3, Bookworm.
Nehmen wir jetzt mal.
Wenn ich das hier jetzt ändere...
Add URL.
Na, das brauche ich nicht.
Was ist der Unterschied zwischen...
Save?
Okay.
Deploy bedeutet wahrscheinlich...
Save plus Restart.
Hä?
Oder nicht?
Ja.
Ja, ja.
Ich glaube schon.
Ach, ne.
Man muss auf Update nochmal drücken.
So, jetzt haben wir die andere Version gepult.
Easy.
Ja, funktioniert immer noch.
Das ist deutlich...
Ich weiß nicht.
Ich finde das jetzt schon deutlich angenehmer als Portena.
Einer ist active.
Null sind gecrashed.
Keiner inactive.
Dockerrun kann man auch so machen.
Okay, dann probieren wir das doch mal.
Docker...
Haben wir noch irgendwie...
Der CamChamp.
Das wird nicht funktionieren.
Dockerrun Ubuntu.
Hier, Debian.
Probieren wir das doch mal aus, was der damit macht.
Ach, ne.
Convert to Compose.
Ja, das ist unsinnig.
Also, für den Container.
Finde ich aber ganz gut.
Das ist im Prinzip...
Zwei Sachen.
Das ist...
Einmal ein...
Ein Docker-Compose-File-Bilder-Web-Interface und gleichzeitig Übersicht.
Ich finde das gar nicht mal übel, ehrlich gesagt.
Das ist was Kleines, Übersichtliches, wofür es da ist, ohne jetzt irgendwie auszuufern.
Finde ich eigentlich eine ganz gute Idee.
Ja?
Wenn du irgendwie eine...
Bei dir daheim eine kleine Kiste stehen hast und willst du deine Services...
Ich meine, ganz ehrlich, man könnte auch einfach sagen, ey, ich mache Docker-Compose.
Docker-Compose von Hand.
Lockt mich per SSH ein und starte und stoppe den Kram von Hand.
Also, das ist jetzt auch nicht das Ding.
Aber für das, was es sein soll, ist es, glaube ich, gar nicht so übel.
Praktisch ist halt auch, dass du fertige Compose-Decks einfach in den Ordner schmeißt.
Das stimmt wohl.
Wobei, ich habe noch nie fertige Compose-Decks verwendet.
Ich mache die Dinger immer neu, dass ich auch weiß, was da drin ist und was sie...
Was sie da machen.
Was mich jetzt noch interessieren würde, ist...
Docker-PS?
Ähm, welches?
Ah, das ist...
Das ist am Default-Docker-Interface, würde ich sagen.
Kann man von einem Git-Repo bilden?
Ermutlich nicht.
Ja, wir können es mal ausprobieren.
Da bin ich mir aber aus dem Kopf gar nicht sicher, wie das funktioniert.
Da muss man irgendwie Bild reinschreiben in das...
Okay, wir packen einfach in den Stack nochmal einen Container dabei.
Max, wir probieren das mal aus.
Wie heißt dein Projekt nochmal?
Snap?
Nee, nicht Snap.
Du weißt, was ich meine.
Das mit dem Wake-on-LAN.
Das gibt es doch bestimmt auch als Docker-Container.
Ähm, Upsnap.
Docker-File.
Ist doch hier.
Arch-Linux, by the way.
Okay.
Dann probieren wir das doch mal aus.
So, neuer Container.
Hat zwar jetzt da drin in dem Stack nichts wirklich zu suchen.
Okay.
Also, man kann nur die...
Ich muss Docker-Compose bilden.
Weiß ich beim besten...
Besten Willen nicht, wie das funktioniert.
Da muss man doch sagen, irgendwie, man muss doch irgendwie so ein Bild-Eintrag machen und dann irgendwie das hier reinschreiben mit dem Docker-File irgendwie, ne?
Das benutze ich so gut wie nie.
Understanding.
Building Docker-Image with Docker-Compose.
Alles klar.
Alter.
Ich...
Nein, ey.
Geht mir nicht auf den Sack.
Doch, doch.
Du kannst in Docker-Compose, kannst du irgendwelche Bild-Files angeben.
Genau, so.
So.
Path to Docker-File.
Da brauchen wir jetzt wahrscheinlich die...
Raw-URL, dass das funktioniert.
Aber Moment, Max, das funktioniert überhaupt nicht mit deinem Projekt, weil...
Target-US und Target-Arch ist natürlich nicht gesetzt, ne?
Das kann nicht funktionieren.
Da müssten wir, müssten wir selbst angeben.
Aber man könnte, also man könnte wahrscheinlich schon...
Hier den Bild-File reinschreiben.
Machen wir mal.
Gucken, gucken, was passiert.
Komm.
Wir, wir, wir machen das mal anders.
Wir futzen, das haben wir hier.
Edit.
Das löschen wir mal.
Save.
Machen jetzt hier ein neues.
Blub.
Container.
Edit.
So, dann wollen wir kein Image, sondern Bild.
Mit dem File.
Da sollte er uns zumindest sagen.
Hier, Port.
Ja, Port brauchen wir nicht.
Save.
Und Start.
Ja, das würde funktionieren.
Kann man, aber er kann es nicht automatisch.
Also, das fehlt jetzt, weil wir die Variable nicht gesetzt haben, ne?
Aber du kannst das, du kannst den Webinterface eintragen.
Aber auf der anderen Seite...
Ah, ich müsste, was muss ich nehmen?
Dev.
Also quasi...
Dev.
Excellent.
High IQ.
Systema.
Professional Monitoring.
Professional Monitoring.
Professional Monitoring.
Professional Monitoring.
Podcast.
Save.
Start.
Wow.
Ne, das mag er nicht.
Fail to compute cache key.
Ich glaube, das ist ein Problem.
Von dem Docker-File.
Das ist für GitHub Actions oder so ausgelegt, aber nicht im Lokal zu bilden.
Also, prinzipiell scheint es aber zu funktionieren, dass man damit auch Images bauen lassen kann.
Was ja auch irgendwie logisch ist.
Es ist ja im Endeffekt nur ein Webinterface.
Es ist ja im Endeffekt nur ein Webinterface für Docker-Compose.
Ich muss euch ehrlich sagen, ich finde das vom Ansatz her gar nicht übel.
Das ist, deswegen habe ich heute auch gesagt, wir machen heute mehrere Sachen on-Stream, weil viel gibt es hier ja nicht anzugucken.
Aber ich finde, also die Sache, wofür es ist, ist echt nicht verkehrt.
Was macht denn Stop and Down?
Es macht auf jeden Fall nicht Delete.
Es löscht wahrscheinlich nur alle Volumes und Netzwerkinterfaces und sowas.
Ja, genau.
Löscht den Container und Netzwerk.
Ich finde, das ist eine gute Idee.
Ich finde, das ist eine gute Idee.
Docker-G...
Wie auch immer auf den Namen gekommen ist, hört sich fast ein bisschen an wie ein Twitch-Emote.
Vielleicht ist er von...
Doge draufgekommen.
Ich weiß nicht, was ich da mehr ausprobieren soll.
Du kannst halt Docker-Compose-Files erstellen über das Webinterface.
Ich weiß nicht, was wir mal machen könnten noch ist...
Was?
Docker-Graphical-Environment?
Was?
Gibt es eine unkomplizierte Möglichkeit,
Docker-Compose-Stack per GitOps zu managen?
Du meinst sowas wie Argo-CD für Docker-Compose?
Naja, GitHub-Actions?
Oder irgendwas anderes, was bei euch serverseitig läuft und dann das Deployment macht?
Also ich weiß nicht, ob es da irgendwas Fertiges gibt.
Wenn ihr da Compose-Files, die man automatisch da hinlegt,
das probieren wir jetzt mal aus.
Das ist eine gute Idee.
Also angeblich geht das ja.
Das probieren wir mal tatsächlich aus.
Decks.
Kekkel-Stack ist da.
Dann machen wir jetzt mal hier MK-Deer.
Der Lul-W-Stack.
Ja.
Compose-Yaml.
Das ist der Lul-W-Stack,
der allerdings andere Ports braucht,
weil ansonsten...
Wunderbar.
So, und jetzt...
Scan-Stacks-Folder.
Tatsächlich?
Checkt er?
Also man kann es auch von Hand editieren und so.
Das finde ich ist auch ein gutes Feature.
Start.
Started.
Jetzt Localhost, Port 8001, Funzt.
Das Projekt ist zwei Wochen alt? Echt?
Der ist aber super aktiv, der Lute.
Naja, nicht ganz.
Nicht ganz.
Scheint schon etwas älter zu sein.
Okay.
Drei...
Sagen wir mal so.
Okay.
Ja.
Oktober, November...
Also sagen wir mal...
Runden wir mal auf.
Sagen wir mal...
Okay.
Ich sage mal zweieinhalb Monate.
Okay?
Der hat bestimmt auch mal bald so viele Sterne wie der Fiat-Champ.
Vor allem im Umgang mit den Issues kann man sich vom Fiat-Champ echt noch was abschneiden.
Ja.
Weil es gibt ja keine Fehler, also gibt es auch keine Issues.
Ja.
Ich finde das...
Ich finde das gut.
Was passiert denn, wenn ich hier delete und es vorher importiert habe?
Dann löscht er den ganzen Ordner, gell?
Ja.
Jetzt ist der ganze Ordner weg.
Also für das, was es sein soll, finde ich gut.
Wie bekomme ich das hin, dass beim Docker-Compose-Build immer die Datenbank getroppt wird und neu importiert wird?
Puh.
Du...
Also, ich kann dir sagen, wie ich es in Kubernetes machen würde.
Aber ich weiß nicht...
Gibt es sowas wie Init-Container in Docker-Compose?
Das weiß ich nicht, ob es da sowas gibt.
Ich meine, was du machen kannst, ist, du kannst mehrere Container starten.
Also, ich sage dir, wie ich es mit Kubernetes machen würde.
Kubernetes Init-Container kannst du machen.
Das wird vor dem eigentlichen Start, kannst du Container mit Custom-Skripts ausführen.
Easy.
So.
Aber mit Docker-Compose?
Weiß ich nicht.
Docker-Compose-Custom-Skript.
Also, du kannst immer noch einen zweiten Container reinpacken.
Oder...
Du baust ein eigenes Image.
Ja.
Das ist mir auch gerade so.
Ja, guck.
Hier machen sie es doch.
Du startest einfach bei...
Also, bei Kubernetes ist es halt deutlich einfacher, weil alles, was im gleichen Pod
läuft...
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
wenn du das ganze per terraform machst in der cloud umgebung könnte das dort einbauen quasi
infrastruktur einmal resetten und dann neue image starten aber das ist natürlich wahrscheinlich eher
nicht also wenn es lokal bei dir ist würde ich es nicht in docker einbauen ich würde
mein datenbankmanagement rauslassen aus docker doch chat was könnte man noch ausprobieren ich
glaube das war's deswegen habe ich mir heute auch zwei themen für den stream überlegt weil
ich mir gedacht habe das dauert halt einfach nur 30 minuten da sind wir durch jetzt irgendwie kommt
komplexere compose sachen zusammen klicken doch wir gucken uns noch mal an bringt jetzt halt auch
nicht weil das wird alles können was docker compose halt kann aber ich finde es schön dass es so eine
art idioten sicherer docker compose bilder ist und gleichzeitig was zum status anzeigen finde
ich eigentlich ganz gut man kann verschiedene ports hinzufügen verschiedene volumes hinzufügen
restart policy environment variablen container dependencies verwende ich nie habe ich glaube
ich noch nie verwendet da kann man zum beispiel einstellen dass der eine nach dem anderen starten
soll und sowas url localhost wo mein keck b.services ach okay ich dachte das kann man jetzt hier
anklicken und wo steht jetzt wo steht jetzt die url hier was macht was ach hier oben
cool das ist eine gute idee dass das eine gute idee da kann man da kann man service das hinterlegen
hatte tps also ganz funktionieren tut es aber noch nicht oder doch man musste einfach nur
refreshen ja eine gute idee auch schön dass er die nicht irgendwo anders zwischen speichert
sondern direkt im compose file als custom resource ding also man hat jetzt man hatte hier shell access
aber da ist doch jetzt irgendwo die Tau welche fac절 off das bietet aber meine schlussmerei
ich habe auch mal nochmal programmat oder Fitnesszierungen raget also irgendwie haben
er aus echt gravy so und dann habe ich ein bisschen spiel auf uns hin gestellt das ist
von Quiteaner, aber mein und dass ist wenn man
es klang acht ist überschriftlich sauce-roten sport careless fahren ich bin unschlüssig
wie ob das kleineter gesيمt wird mit den schnell commands oder soll was heißt es war
unabhängig davon das würde ich auf jeden fall nicht einfach so auf einem home server laufen
mehr ich meine daheim wenn ihr die einzigen seid also das würde ich nicht einfach so offen
laufen lassen da würde ich ihn irgendeiner art und weise noch was davor packen ich meine ja du hast die autentifizierungslogin
Aber wie sicher der ist, weiß man ja nicht.
Also vielleicht tatsächlich noch irgendeine Reverse-Proxy oder sowas davor.
Aber die Idee finde ich gut. Gefällt mir.
Also wenn ich mal in irgendeiner Art und Weise...
Ich weiß nicht, für was ich es brauchen könnte.
Weil aktuell läuft es bei mir über Unraid.
Und ich finde das Interface deutlich hübscher als von Unraid.
Hat das Webhooks?
Nee.
Keine Webhooks.
Zumindest hier nicht.
Hier nicht.
Ich meine, du kannst natürlich immer in dein Docker-Compose-File irgendwas reinschreiben, was dann ausgeführt wird.
Aber nee, hat es anscheinend nicht.
Wobei, wir können ja mal gucken.
Hook?
Nee.
Mal gucken, was er schreibt als Unterschied zu Portena.
Ja.
Also außer, dass ich halt Portena nicht mag.
Ja.
Come on.
Mir gefällt das.
Ich bin ja sonst immer am meckern.
Aber es gibt so ein paar Sachen, die treffen bei mir immer so den Nerv von...
...Simple und löst das, was es lösen soll.
Gut, das gefällt mir hier.
Web-Interface fühlt sich auch schön responsive an.
Ist das wieder eine View-App?
Mal gespannt.
Uptime Kuma ist in View gebaut.
Und das hier ist in...
Habt ihr irgendeinen Plan?
Setup View.
Okay, es ist wieder irgendeine View.js.
View.js-App, würde ich sagen.
Ja.
Wir können natürlich im GitHub-Repo gucken.
Dann wirst du das ganz klar.
Genau.
Es ist View.
Ja.
Ein View-Enjoyer.
Nicer View-Enjoyer.
Ja gut.
Hm.
Dann lassen wir das mal so.
Delete.
Und ich restore meinen Snapshot wieder, weil ich diesen ganzen Cramp hier drauf nicht brauche.
Yes.
Okay.
Chat.
Wir sind fertig für heute.
Ich bin mit allem durch.
Sag doch.
Doc.
Doc.
Doc.
Hier wird kurz und knackig.
Ich glaube, ich mache jetzt noch eine Runde Kreisel-Grind, aber ohne euch.
Delete.
Yes.
Ja, ohne euch.
Kreisel-Grind.
Genug geschwätzt.
Cleaning up.
Sehr gut.
Hoch.
Ne, ne, ne.
Komm mal her.
Ja.
Alles klar.
Da sehen wir uns morgen wieder, Leute.
Würde ich sagen.
Gibt's noch...
Wenn es noch irgendwas super Wichtiges gibt, könnt ihr jetzt fragen.
Ansonsten.
Tschüss.
Tschüss.
Tschüss.
Tschüss.
Tschüss.
Tschüss.
Tschüss.
Tschüss.
Tschüss.
Tschüss.
Tschüss.
Tschüss.
Tschüss.
Tschüss.
Tschüss.
Bin ich jetzt gleich weg?
Weiß ich nicht, ob man das braucht.
Ich glaube, der Scope ist eindeutig etwas kleiner da gewählt.
Multi-Host.
Wenn ich Multi-Host hätte...
Ach so, du meinst, dass man mehrere...
Nicht Clustert, sondern dass man mehrere damit verwalten könnte.
Ach, warum?
Dann müsste man...
Dann würde es einfach überall...
Ich verstehe, was du meinst, ja.
Wir können gleich leveln.
Ich will mal einen Charmy leveln.
Ist der noch da?
Willst du deinen Döner leveln?
Ich meine, mein Charmy muss gelevelt werden.
Any...
Any levelors?
Ach, Staub ist schon wieder weg.
Na gut.
Dann sehen wir uns, Leute.
Bis dann.
Macht's gut.
See you.

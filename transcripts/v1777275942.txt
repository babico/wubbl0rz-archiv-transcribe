Ich habe heute endlich mal alles von dem iPhone, was ich von der Firma hatte umgestellt auf
mein neues iPhone, weil das andere muss ich abgeben übermorgen.
Es nähert sich ja dem Ende alles. Mir ist wieder mal aufgefallen, wie abartig es ist,
Daten vom iPhone runterzubekommen. Also was ja in der Regel recht gut geht,
ist wenn man das gleich beim Setup macht, die einen Sachen vom alten aufs neue iPhone zu kopieren.
Aber es funktioniert ja ganz gut. Aber irgendwie die Sachen runterzubekommen,
das ist wirklich immer ein bisschen abartig. Da kann ich euch was Nices zu zeigen,
falls ihr das nicht kennt. Ich mache schon mal die VM an, weil die brauchen wir heute eh.
Aber eh gleich, da kann ich schon mal Updates und sowas machen, weil Arch by the way immer
Updates hat. Schon das neue Fireship Video gesehen? Nee. Aber lasst mich raten, wahrscheinlich wieder
AI oder? Es wird langsam langweilig. Ich habe langsam keinen Bock mehr das zu gucken.
Wenn ich das, wenn ich das, kann er noch was anderes als AI Videos machen. So langsam ist
irgendwann auch mal wieder gut. I literally connected my brain to GPD with JavaScript.
Javascript, keck, JS. So ich muss noch ein bisschen warten, bis Twitch kapiert hat,
dass ich online bin. Der Stream ist noch nicht richtig angelaufen. Ich bin mir nicht sicher,
ob der Bot im Discord schon was gecheckt hat. Was ist C-Sharpen? Was ist .NET?
Also ich könnte jetzt sagen, das ist wahrscheinlich besser, wenn du das 10
Sekunden googelst und eine viel bessere Erklärung hast. Aber ich sage es dir trotzdem,
C-Sharpen ist eine Programmiersprache und .NET ist die Laufzeit. Das stimmt ja so
direkt gar nicht mehr. .NET ist das Framework drum herum. Lernen wir es mal so und C-Sharpen
ist eine Programmiersprache. Aber wenn du es genauer wissen willst, ich meine, wir basteln
heute ein bisschen was in C-Sharpen, aber ich glaube nicht, dass das, wenn man die Sprache
noch nicht gesehen hat, sondern nicht erhellend sein wird. Aber gut, jetzt weißt du Bescheid.
Im Prinzip ist .NET und C-Sharpen, falls du Java kennst, Java ist die Programmiersprache und
JVM ist die Runtime. So ist das bei .NET auch. .NET ist die Runtime und C-Sharpen ist die
Programmiersprache. Dementsprechend gibt es auf .NET Basis auch noch mehr Programmiersprachen.
Also du kannst beispielsweise F-Sharpen machen. Da stehen ja manche Leute drauf,
die finden das furchtbar geil. So funktionale Dinger. Dann gibt es, was gibt es noch für
bedeutende .NET basierte Sprachen? Das kommt mir nicht mit vb.net,
das interessiert doch kein Mensch mehr. Was gibt es denn da großartig noch?
Was gibt es für große Sprachen auf der .NET Runtime? Eigentlich nicht so viel,
oder? Es gab mal den Versuch, Python und Ruby drauflaufen zu lassen, das war aber eher cringe.
ASP.NET ist keine eigene Sprache, ASP.NET ist das Web-Framework für .NET bzw. was man
hauptsächlich in C-Sharp programmiert. Was man theoretisch mit F-Sharp aber auch
programmieren könnte, ist eigentlich eher so eine Library für Web-Anwendungen. Also ich glaube,
auf .NET Basis ist das größte wirklich C-Sharp und F-Sharp. Die anderen Dinger,
die es da vielleicht für die Runtime gibt, sind glaube ich eher nicht so bedeutend.
Bei Java gibt es mehr. Auf JVM Basis gibt es mehr. Da gibt es Kotlin, da gibt es Java,
da gibt es Erlang auf JVM Basis. Da gibt es Groovy, da gibt es jede Menge Sachen.
Mein Chef will, dass ich VB anstehe. Jetzt ernsthaft, was ist denn mit dem los?
Also entweder ist der Ultra-Boomer und kennt nur irgendwie Rishal Basic früher aus Excel oder
oder er ist komplett planlos. Ich glaube, Microsoft supportet VB gar nicht mehr richtig.
Bin mir gar nicht sicher, ob es dazu irgendwie in den letzten Jahren noch
nennenswert Updates gekriegt hat. Ich glaube gar nicht. VB.NET still supportet. Gucken wir
doch mal danach. Rishal Basis, exact support for Windows. Ja, das meine ich. VB.NET ist
done, not dead. Microsoft hat gesagt, es gibt keine neuen Features mehr, aber es ist nicht dead.
Logisch, Microsoft Logik. Wir lassen es links liegen und supporten es nicht mehr bzw. sagen
sie ja nicht. Wir lassen es links liegen und updaten es nicht mehr, aber es ist nicht dead.
Ja, natürlich Microsoft. Five-Hat-Time, ganz klar. Also VB, es wird Zeit, Leute. Es wird Zeit für
Rust.NET, was keinen Sinn ergibt, ehrlich gesagt. Rust.NET würde absolut keinen Sinn ergeben,
weil Rust hauptsächlich dafür erstellt wurde, nicht irgendwie, um eine besonders schöne Sündags zu
haben oder sowas, sondern um unmanaged halbwegs safe hinzubekommen. Und das würde ja keinen Sinn
machen. Rust in der managed Umgebung, also das widerspricht sich komplett. Echt, gibt es,
ok, das gucken wir jetzt. Gibt es da neue Features? Gibt es da wirklich neue Features? Nee,
nee, nee, gibt es nicht. Zumindest sagt das Wikipedia und Wikipedia im Prinzip meistens
recht. Gucken wir mal. Preview 7, nein, nein, Preview 1. Gibt es nicht sogar Preview 2 mittlerweile
seit einer Woche oder so? Also hier taucht WhistleBasic nicht drin auf und hier taucht
WhistleBasic auch nicht drin auf. Also ich würde mal sagen, nee, gibt es nicht. So,
was haben wir hier? Ah, da will geupdated werden. PNPM wird geupdated. Ja, da kann ich nicht nein
sagen, wenn PNPM geupdated wird. Cac Javascript. Außerdem muss ich eh warten, bis der Stream richtig
angelaufen ist. Ich weiß, es ist Montagnachmittag, fast schon Abend, da sitzen die meisten Leute jetzt
beim Essen oder fahren gerade heim oder sowas. Es sind jetzt eh noch nicht so viele da. Aber
muss man Twitch ein bisschen Zeit geben. Du musst gerade VB lernen, weil ich Exist-Datenbank,
also ich weiß ja gar nicht, was ich da schlimmer finde. Ich weiß ja gar nicht,
was ich da schlimmer finden soll. Dass du was mit Exist-Datenbanken machen musst. Was ist,
Leute, ich habe eine wirklich ernst gemeinte Frage. Wann macht es Sinn Exist-Datenbanken zu
benutzen? Also ich habe noch nie verstanden, warum jemand eine Exist-Datenbank, ich meine,
den Kram gibt es seit irgendwie 30 Jahren und es wird benutzt. Also es muss ja schon irgendwie
ein validen Grund, warum man sich für Exist-Datenbanken entscheidet. Aber wann? Wann ist das? Ja,
genau, zumal man könnte auch einfach SQLite benutzen, dann hat man wenigstens was Gescheites,
was man auch so verwenden kann. Vielleicht, weil das eine UI dabei hat, könnte das sein,
dass das vielleicht daran liegt, dass das eine UI dabei hat und die Leute deswegen früher immer
zum Einstieg dann nice fanden oder... Also wann verwendet man Exist-Datenbanken? Ich weiß wirklich
nicht. Ja, keine Ahnung. Also wenn die User selbst was bauen wollen... Ja, aber die können
das ja in Excel machen. Also was bietet Exist mehr als Excel für so eine 0815 User?
Ja, aber wann? Also wann ist es eine gute Idee? Ich verstehe das bis heute nicht. Also ich
verstehe bis heute die Daseinsberechtigung von Exist nicht. Ich verstehe übrigens auch viele
Office-Programme die Daseinsberechtigung nicht. Also Excel kann ich noch am ehesten nachvollziehen.
Excel ist keine Datenbank. Ja gut, aber was macht denn der 0815 Anwender,
der angeblich die IT umgehen möchte und deswegen Exist verwendet, in Exist dann mehr als in Excel?
Also ich sehe den Anwendungszweck immer noch nicht. Eingabe, Masken, UI, ja das machen die
Leute aber auch schon in Excel. Ich weiß nicht, keine Ahnung, ich verstehe den Anwendungszweck
von Exist nicht. Zumal es so etwas wie SQLite gibt, was einfach wunderbar funktioniert und ich
überhaupt nicht wüsste wozu man. Kann man überhaupt ordentlich SQL machen mit Exist? Geht das? Ich
muss gestehen, ich habe noch nie in meinem Leben Exist verwendet. Keine Ahnung, es kann sein,
dass ich in der Schule mal irgendwie was kleines für Exist gebaut habe, weil der Lehrer das wollte,
aber also ja vielleicht, aber ansonsten habe ich nie Exist verwendet. Ich habe das auch nicht vor,
ich wüsste auch gar nicht warum. Na gut, wenn man das benutzen muss, muss ich ja irgendjemand
überlegt haben, warum. Also ich verstehe es immer noch nicht, keine Ahnung warum man Exist braucht.
Selfmade Eyes, Dankeschön für den Sub. Ahja. Ich habe eine kurze Frage, wie oft kann man deiner
Meinung nach eine Gehaltserlöhung verlangen? Wie viel Prozent? Naja, immer. So öfters, also ich
meine es ist nicht im Minutentakt oder so, aber du kannst dich schon öfters mal daran erinnern,
dass man wieder Zeit wird, gerade in aktuellen Zeiten, wo es ja quasi wöchentlich teurer wird.
Also die werden dir natürlich erzählen, ah aktuell ist ein ganz schlechter Zeitpunkt,
weil Corona und wirtschaftliche Lage und Inflation, gerade deswegen braucht man ja eine,
ja und und Geschäfte wegen Lockdown, die jetzt immer noch schlecht laufen und dann,
ah ganz furchtbar schlimm. Also es ist immer schlecht, also das war zumindest so die Standard
Antwort, die ich immer bekommen habe. Standardmäßig, wenn sie keinen Bock hatten,
sich damit auseinanderzusetzen, deswegen muss man auch hartnäckig sein, war immer so eine 0815
Ausrede, das ist gerade ganz furchtbar schlecht, ist aber egal. Fragen kannst du laufen, also ich
meine wie ich es da nicht im 5-Minuten-Takt oder so. Aber wenn du da, also mindestens einmal im Jahr,
ja mindestens, mindestens einmal im Jahr, es spricht eigentlich aus meiner Sicht gar
nichts dagegen, das sogar öfters mal anzusprechen. Du musst ja nicht immer so super offiziell
Chef lassen, Einladung machen, wir müssen übers Gehalt reden oder so, kannst ja schon öfters mal
sagen. Wir hatten mal wieder Zeit, vor allem bei so tollen Sachen, die die Simon, nee,
Simonu, vor allem so tolle Sachen, die man macht. Und wenn mal wieder was besonders toll gelaufen ist,
kann man durchaus auch sagen, ja wird mal Zeit wieder für, also es schadet nichts die permanent
darauf vorzubereiten, dass es mal wieder an der Zeit ist. Wie viel Prozent ist schwer zu sagen,
das hängt so ein bisschen vom Umfeld ab. Ich meine natürlich am besten ist es, du sagst,
du bekommst am Ende das womit du zufrieden bist. Taktisch gesehen ist natürlich immer sinnvoll,
man fragt nach deutlich mehr als mit was man zufrieden ist, aber das kannst du ja schlecht im
Wochentakt machen. Aber insgesamt, je nachdem wann du was zuletzt bekommen hast, ist natürlich
relevant, also wenn du jetzt vor einem halben Jahr was gekriegt hast und willst jetzt 30% mehr,
dann würde ich vielleicht sagen, also wenn du jetzt nicht gerade irgendwie eine neue Position
hast, wo du es dann eh neu verhandelt, vielleicht ein bisschen sportlich, am Ende ist wichtig,
dass du damit halbwegs zufrieden bist. Und gerade in aktuellen Zeiten, wenn es jetzt im letzten
Jahr nichts gegeben hat, würde ich da jetzt auch nicht anfangen mit irgendwie 3-4% oder so ein
Blödsinn, dann kannst du gleich ordentlich sagen. Ich meine, die wissen auch, dass es 10% teurer
wird pro Jahr. Und wenn es letztes Jahr nichts gegeben hat, sind es schon mal mindestens 10%,
die du mehr haben willst. Eher mehr, weil am Ende sollen es ja 10% mindestens sein. Also
willst du wahrscheinlich mindestens 20-25% mehr, was schwachsinnig ist, aber das werden die dir,
also 25% werden die dir nicht geben, aber sie können ja einfach nein sagen und dann landet
10%. Also es ist nicht schlimm. Was soll dir passieren? Wenn du was Unverschämtes sagst,
lacht man mal drüber und dann kommt man irgendwie auf was Realistisches. Ich meine,
was soll passieren, wenn du was höre, wenn du was zu hohes sagst? Die sagen ja nicht,
oder Simon, der macht gute Arbeit, der will mehr Geld haben, jetzt bin ich aber sauer,
der hat nach zu viel mehr Geld gefragt, jetzt schmeiße ich den raus. Also das ergibt ja keinen
Sinn. Die werden doch wahrscheinlich sagen, nee, gibt's nicht, aber ein bisschen mehr sagen,
ist auf jeden Fall nicht verkehrt. Sag einfach mal das Doppelte von dem, womit du zufrieden bist.
Naja, das kann auch funktionieren, wobei das natürlich ein gewisses Risiko ist.
Das kann auch, du kannst natürlich auch sagen, Jungs, also wenn du eh keinen Bock mehr auf den
Laden hast, kannst du natürlich auch sagen, Jungs, also wenn es jetzt nicht mehr Geld gibt, bin ich
weg. Entweder machen sie es oder nicht, aber dann musst du halt im Zweifelsfall auch sagen und
Tschüss. Weil das finde ich immer ein bisschen blöd, wenn man das so als Druckmittel verwendet,
so nach dem Motto, aha, dann bin ich weg und dann bin ich gar nicht mehr. Also wenn schon,
am besten in Kombination, man hat sich schon mal umgeguckt und sagt dann, Jungs, ich hau ab und
wenn sie dann ankommen mit, willst du nicht 30 Prozent mehr verdienen oder irgendwas,
was halt lukrativ ist, weil die Sachen, die dich nerven, sind ja immer noch da. Ja gut,
kann es immer noch da bleiben. Aber es schadet durchaus nicht, sich umzugucken. Das ist immer
sinnvoll zu wissen, was angesagt ist. Also gerade so mal ein bisschen links und rechts geguckt,
ein bisschen links und rechts geguckt, also sprich, was bieten Unternehmen bei dir in der Umgebung an?
Ja, also sprich, was bieten die Konkurrenz bei dir an, ist ja sicherlich nicht verkehrt.
Wahrscheinlich sogar besser. Ja, das ist schwer zu sagen. Also ich würde mir ja nicht anmaßen,
das einschätzen zu können, aber man muss ja auch sagen, erstens in der IT, allein wenn die Leute
up to date bleiben, auch wenn sie nicht mehr Aufgaben übernehmen, aber wenn sie einfach nur
up to date bleiben, haben sie ja quasi schon einen Mehrwert für die Firma, den man ja durchaus auch
entlohnen kann. Und die Firma kann ja nach wie vor die Arbeit zu Geld machen und wahrscheinlich
mittlerweile dank Inflation zumindest in reinen Zahlen auch zu mehr Geld. Also allein schon deswegen,
selbst wenn du die gleiche Arbeit machst, eure Sachen einfach am Laufen hältst, die gleichen
Sachen wie vor 3-4 Jahren und die nächsten 3-4 Jahre das gleiche, sogar das, die Firma wird mehr
Geld dafür verlangen, für ihre Dienstleistung, für ihren Service und allein schon deswegen bringst
du der Firma mehr Geld. Also allein schon deswegen kannst du mehr Geld fordern. Wir suchen dich,
bewirb dich. Warum soll ich mich da, ne Moment, nicht, deine Aufgaben, C++, ach so, 3D Software,
das ist ja gar nicht meins. Reddit und Steam sind dein Zuhause. Raspberry Pi ist nicht nur ein
Dessert für dich, das ist dir vertraut wie Counter-Strike. Bios Bernd, cringe Anzeige,
Alter. Bios Bernd, ja, so will ich auch immer genannt werden. Wer von euch möchte nicht auch
gerne der Bios Bernd sein? Kann man nicht C++ auch ins .NET kompilen? Ja, ne, ne, kann man nicht,
also es gab mal oder gibt es noch, aber das ist ziemlich sinnlos. Es gibt so ein C++ Interop-Layer
von Microsoft, da haben die die C++-Sündags erweitert. Ich bin mir gar nicht sicher,
wie der Kram hieß. C++ CLI heißt das Ding, hat nichts mit Command-Line-Interface zu tun.
Das gab es mal und gibt es immer noch von Microsoft. Das war mal der Versuch bzw. das
Entgegenkommen von Microsoft zur damaligen Zeit, wo halt vieles, gerade an Windows-Software,
für C++ entwickelt war, die irgendwie besseren Interop in C++ mit Managed Languages machen zu
können. Das hat sich nie großartig durchgesetzt. Das ist in .NET auch nicht mehr drin, soweit ich
weiß, und ist eh Windows-Only. Also das kannst du eigentlich komplett vergessen und es interessiert
Microsoft selbst nicht mehr. Ich weiß, dass Frostbite ursprünglich, also die Battlefield-Engine und ja
Need for Speed und alles mögliche, dass Frostbite einiges in CLI C++ Interop gemacht hat. Die
hatten wohl früher halt ihr altes Zeug in C und ihr neues Zeug, der Editor und alles, das war
wohl in C-Sharp und um das zu verbinden, haben sie wohl irgendwelchen C++ CLI Interop-Shit gemacht.
Vielleicht eines der Gründe und vielleicht auch eines der abschreckenden Beispiele,
warum man es nicht verwenden sollte. Vielleicht ist das eines der Gründe, warum heute keine Sauma
durchblickt, wie Frostbite eigentlich funktioniert. Was hältst du von Gehaltsportalen im Internet,
die Geldrasche immer? Ich glaube, ich hab mir noch nie, mir fällt gar kein Gehaltsportal ein.
Also wir haben mal lustigerweise so einen Test, ein paar Steps down gemacht vor ein paar Jahren
und das war komplett pepega, was da rausgekommen ist. Also das einfachste, was du wahrscheinlich
machen kannst, ist mal bei deinen Kollegen fragen, was die denn so verdienen. Also du musst dich jetzt
nicht neben den Typen setzen und sag mal, Alter, wie viel Kohle kommt im Monat rüber, aber wenn
du dich da mit Leuten ganz gut verstehst, kannst du die ja durchaus mal fragen, sag mal, wie sind
das bei dir eigentlich? Weil im Endeffekt, also es ist nicht verboten, drüber zu reden, das muss man
auch sagen. Es wird immer so getan, so nach dem Motto, oh, das wird nicht gerne gesehen und sonst
was. Das ist vollkommen egal, das ist erlaubt. Es gibt ganz, ganz seltene Sachen, wo das aus
begründeten, also normalerweise darf das auch gar nicht im Vertrag drinstehen, dass du nicht
drüber reden darfst, aber es gibt Wohlstellen, da ist das begründet drin und aber das ist bei 99,9
nicht der Fall. Also du kannst einfach mal deine Kollegen fragen, wie es da aussieht.
Ja, sehe ich genauso. Bist du schon auf der neuen Arbeit? Nee, noch nicht. Nächste Woche. Nächste
Woche um die Zeit. Ja, nächste Woche um die Zeit war schon ein Tag da. Zwei Tage, zwei Tage. Montag,
Montag und Dienstag. Ja. Also ich würde ganz ehrlich, frag mal doch die anderen Leute bei dir,
die ähnliche Aufgaben haben, was bei denen so ist. Im Endeffekt, unterm Strich bringt es euch
wahrscheinlich beiden was, wenn ihr euch da mal kurz schließt. Ja, also wenn du, wenn er das weiß von
dir und du das weißt von ihm, vielleicht kann er was besseres rausholen, vielleicht kannst du
noch was besseres rausholen. Im Zweifelsfall ist es auch gut, wenn sich die Leute zumindest einig
sind, dass die wissen, hey, wenn wir jetzt nicht auf die Leute aufpassen, wenn uns zwei abhauen,
im Zweifelsfall dann ist ganz beschissen. Also es schadet eigentlich nichts darüber zu reden. Ich
finde es auch überhaupt nicht verwerflich, auch wenn immer so getan wird, aber im Prinzip hilft,
dass nur deinem Arbeitgeber weniger bezahlen zu müssen, wenn ihr nicht drüber redet.
Ja, hyped, hyped. Ich freue mich drauf, ja. Ich freue mich drauf. Ich bin wirklich gespannt
drauf, wie es da ist. Beziehungsweise, ja gut, wie es da ist, das werde ich wahrscheinlich erst
nach so zwei, drei Monaten so wirklich gut einschätzen können. Aber ich bin wirklich
gespannt drauf und ich freue mich schon drauf. Ich freue mich vor allem auch drauf, dass mal
ein bisschen was Neues ist und dass ich das alte Zeug jetzt dann abgehakt habe. Ich meine,
ich habe das, ich habe alles schon fertig. Ich habe mein Handy umgezogen heute. Ich habe jetzt
mein eigenes hier am Start mit allem drauf. Handy umgezogen, ausgeschaltet, Notebook zusammengepackt,
hingelegt. Also ich werde nächsten Mittwoch Notebook mitnehmen, Handy mitnehmen, dort abgeben,
meine Eintrittskarte abgeben und das war's. Was das nächste Woche Mittwoch? Stimmt überhaupt nicht.
Morgen? Nee, übermorgen. Hier, da. Mittwoch. Mittwoch fahre ich zum letzten Mal nach Frankfurt
auf die Arbeit. Auf die alte, also auf die jetzige Arbeit. Was am besten machen als jemand,
der eine Umschulung zum Physi gemacht hat und theoretisch von vielem ein bisschen
was weiß, aber wenig praktische Erfahrung in vielen Bereichen hat, bin gerade Softwareverteilung
betreut und mache zum Großteil 2nd Level Support für die grob 250, das ist gar nicht mal so wenig,
ja. Verschiedene Softwareprodukte, die bei uns eingesetzt werden, beim Großteil-Tickets hier
reinkommen, habe ich das Gefühl überhaupt keine Ahnung. Ja, gut, dass man keine Ahnung hat,
was abgeht, ist eigentlich leider in der IT fast schon der normale Zustand. Man sollte sich
natürlich vielleicht mal, da kannst du nichts für, also ich glaube nicht, dass man sinnvollen
2nd Level Support, 2nd Level heißt ja auch mal schon ein bisschen Ahnung von der ganzen Geschichte,
dass man sinnvollen 2nd Level Support liefern kann für 300 verschiedene Softwareprodukte. Wie
willst du das machen? Es sei denn, es gibt 5 Base-Produkte und 300 Customizations davon,
wo sich nicht viel ändert, aber man kann nicht wirklich sinnvollerweise Support leisten,
wie soll das funktionieren? Dein Hirn ist ja auch limitiert.
Also das liegt nicht an dir, die sollten sich vielleicht eher mal überlegen, ob sie nicht
verschiedene Schwerpunkte machen, so nach dem Motto Anwendung zusammenfassen, dass dann Leute
nur noch für 15, die in der gleichen Kategorie sind, zuständig sind. Aber gut, wie die das
handhaben, kann man nicht schwer sagen, aber dass du da keine Ahnung hast, wundert mich nicht.
Was du machen kannst als Physi, der wenig praktische Erfahrungen hat, ganz ehrlich,
wenn du die praktische Erfahrung auf der Arbeit nicht kriegst, oder halt nicht in den Bereichen
kriegst, auf die du Bock hast, dann bleibt dir nichts anderes übrig und das ist eh das Beste,
was man auch so machen kann, dich privat mit der ganzen Geschichte zu beschäftigen. Wenn du Bock
auf Basteln und Programmieren hast, ist natürlich ein GitHub-Account auch immer ein gutes Aushängeschild,
und wenn du dich irgendwo anders da bewirbst zu zeigen, guck mal hier, was habe ich schon
alles Cooles gemacht, wobei das jetzt als Physi vielleicht jetzt nicht so das Ding ist, aber hey,
auch als Physi ist ein ordentlicher GitHub-Account nicht verkehrt. Es ist ja heutzutage vieles,
nicht nur Softwareentwicklung, was in Source-Code technisch Git-mäßig eingecheckt wird,
sondern zum Beispiel auch Terraform-Config, Pulumi-Config, Ansible, Kubernetes-Manifests und so
was, also heute definiert man ja vieles seiner Infrastruktur schon über YAML-Files, Terraform-Manifests
und alles Mögliche, das ist auch was, was man durchaus aus seinem GitHub-Profil haben kann,
auch wenn man eher in der Administration, ich finde es ist nicht verkehrt, da die ein oder
andere Sachen zu haben. Ja, und ansonsten bleibt dir wahrscheinlich nichts anderes übrig,
wenn dir das in dem Bereich keine praktischen Erfahrungen bekommst oder zumindest nicht in
dem Bereich, was dir gefällt, da bleibt dir gar nichts übrig, wie selbst ein bisschen zu basteln.
Das hat den Vorteil, selbst rum zu basteln, du kannst dir aussuchen, worauf du Bock hast,
und das dann halt machen. Wenn du sagst, hey, ich habe Bock mich beispielsweise mit, weil ich es
gerade erzählt habe, ja und ich selbst zurzeit viel damit am rumbasteln bin, wenn du sagst,
ich habe Bock mir mal ein bisschen Kubernetes anzugucken, dann mach das. Da guck dir das an,
es ist scheißegal, ob die Arbeit das braucht oder nicht, die Skills sind so gefragt aktuell,
es ist auf jeden Fall gut das zu können und sei es nicht bei deinem aktuellen Arbeitgeber,
sondern bei einem anderen. Und ein bisschen Kubernetes anschauen ist gut, da fängst du an mit,
am ersten Tag denkst du dir, ich blicke eigentlich ganz gut durch, am zweiten Tag denkst du dir,
ich bin das nächste halbe Jahr am nichts anderen machen mehr, bis ich halbwegs durchblicke.
War StepStone zu hoch oder zu niedrig? Jetzt wo du mich fragst, ich glaube es war gar nicht so
schlecht. Wir haben ja mal so eine Gehaltsprognose gemacht bei StepStone und ich glaube die haben
damals ausgespuckt 85.000 Euro im Jahr, ich bin mir da gar nicht mehr sicher, was ja eigentlich,
muss man ehrlich sagen, ganz gut hinkommt. Jetzt mittlerweile nicht mehr, mittlerweile ist ja noch
ein bisschen mehr, was mich persönlich natürlich freut, mehr Stonks immer gut. Aber die waren
eigentlich ganz gut damals, die lagen damit eigentlich ganz richtig, also was so im Durchschnitt
drinne ist. Hast du diese Woche noch wirklich etwas zu tun auf der aktuellen Arbeit oder chillst
zu deinem Leben? Ganz ehrlich, ich chille mein Leben und ich mache das auch schon seit ein paar
Wochen so. Klar ich mache die ein oder anderen Sachen schon noch, gerade wenn mich irgendwelche
Kollegen fragen, wie sieht es aus? Kannst du mal gucken? Guck ich immer, es ist nicht so,
dass ich nichts mache, aber so wirklich irgendwie super motiviert an irgendwas basteln. Es ist
vorbei jetzt, ist eigentlich schon vorbei seit ich gekündigt habe, habe ich direkt im Januar schon
gemerkt, als ich angefangen habe, dass mich das absolut nicht juckt. Die zwei Tage, wo ich jetzt
noch arbeiten muss, morgen und übermorgen, die chille ich wirklich mein Leben. Ich sehe auch
wenig Lerneffekt, weil ein aufgekommenes Problem nur selten so wieder vorkommt. Habt Angst nicht
zu lernen, irgendwie auf der Strecke zu bleiben, wenn es um anderen geht. Ja gut, dann ist doch das
Beste eigentlich, dass du dir privat was anguckst, was dich interessiert. Gibt ja tausende Bereiche.
Natürlich am besten ist, wenn es dich privat interessiert und ein Thema ist, was auch gefragt
ist. Muss ja nicht gleich Kobol-Programmierer sein, aber wenn du dir zum Beispiel ein bisschen was im
Cloud-Umfeld anschaust, wenn du dir beispielsweise mal einen Test-Account machst bei Google Cloud oder
bei Azure oder AWS, da kriegst du ja immer 100, 200, 300 Euro, was auch immer Startgut haben und
kannst da ein bisschen ausprobieren und kannst meistens auch beliebig viele Accounts machen,
wenn es nicht total übertreibst. Also, wenn du dich ein bisschen auskennst bei den jeweiligen
Cloud-Anbietern auf den Plattformen, da hast du schon mal einiges, also hast du schon mal einigen
Leuten was voraus und das wird immer wichtiger. Das ist eigentlich, ich will nicht sagen, dass es
Pflicht ist heute für jemand, der so im Admin-Umfeld arbeitet, aber ein bisschen Ahnung von aktuellen
Cloud-Plattformen sollte man haben. Es ist nicht so wichtig, dass es exakt die ist, die dann Arbeitgeber
einsetzt, aber ich finde es nicht verkehrt, wenn man, zwar es gibt drei große, du hast Amazon,
du hast Microsoft, du hast Google, also sprich, du hast Google Cloud, du hast Microsoft Azure und du
hast Amazon AWS. Und ich finde es nicht verkehrt, wenn man in zwei von drei schon mal reingeguckt
hat. Und das alle kriegt man dann immerhin. Die haben alle so ein paar Dinger. Amazon hat
beschissene Benamung, gut man muss sagen, das haben sie alle irgendwo, aber Amazon hat die super
beschissene Benamung. Ich sage nur hier, Elastic, setze AWS, dann Elastic, dann irgendwas anderes ein
oder das Fargate Managed Kubernetes Cluster ist. Niemand kommt drauf, dass Fargate damit was zu tun
hat. Also Amazon benennt die Sachen beschissen. Und hat dafür finde ich zwar eine Oldschool,
aber eine ganz gute Oberfläche. Bei Google Cloud finde ich nichts. Dafür kann man es wunderbar
natürlich auch über Terraform oder so administrieren, aber Google Cloud im Webinterface
finde ich gar nichts. Da blicke ich bis heute nicht durch. Vor allem, weil du manche interessanten
Sachen auch unter mehr Anzeigen stehen hast und dann klickst du auf mehr Anzeigen und es ploppen
180 Dinge auf, du verstehst noch weniger. Als Google Cloud finde ich im Webinterface gar nichts,
über die Suche schon, aber nie über dieses Menü. Und Azure muss ich ehrlich sagen, finde ich
eigentlich von der Aufmachung her, was so die Benamung und das Interface, wie gesagt, ich rede
immer noch vom Webinterface angeht, noch mit am besten. Aber selbst da ist schwierig durchzublicken
und man macht die wenigsten Sachen ja auch über das Webinterface. Das guckt man sich am Anfang an.
Also das ist zum Beispiel was, wenn du dich dafür interessierst, guck dir mal die aktuellen
Cloud-Anbieter an. Schnapp dir beispielsweise bei Google kriegst du 100 Euro Startguthaben,
bei Azure kriegst du auch 100 Euro Startguthaben. Ich glaube bei Azure sind sogar 300 Dollar Startguthaben,
aber du kannst ein bisschen ausprobieren. Bei Google ist das schöne, du kannst dir bei Google
Cloud einen Account erstellen. Du musst den zwar einmalig per Kreditkarte aktivieren, das machen
die, dass die Leute nicht 100.000 Fake-Accounts erstellen, aber dann ist Bezahlung ausgeschaltet.
Also selbst wenn du es total verkackst, ist nicht so, dass nach den 100 Euro Startguthaben
auf einmal dein Konto leer ist. Das hört dann auf. Du kannst nicht pleite werden durch das Testen,
das ist was, was du machen kannst. Hat das mit dem Arbeitszeugnis dann geklappt? Also ich gehe
übermorgen hin, angeblich ist mein Zeugnis da und ich kann es abholen und die Bescheinigung
über Überurlaubstage auch. Doch, doch, doch, doch, die neue Arbeit ist, ist, ist keine Ahnung,
500 Meter Luftlinie von der alten entfernt. Was hast du bis jetzt gemacht? Was wirst du ab
nächster Woche machen? Als ab nächster Woche bin ich offiziell, jetzt haltet euch fest,
Senior Linux Engineer und was ich aktuell mache, habe ich 30 Milliarden Videos aufgenommen hier,
das mache ich auf der Arbeit, Talk über Ausbildung, das verdiene ich als DevOps
Engineer und alles Mögliche. Jetzt immer wieder interessant, mal auf diesen VOD-Kanal zu gucken,
ob es da Kommentare gibt, aber da schreibt mir jemand Kommentare. Ja, nice, warum nicht? Also
den Sinn von der Apple Watch habe ich noch nicht so hundertprozentig für mich verstanden,
warum man das braucht. Also ich verstehe es, wenn man Fitnesszeug tracken will, aber ansonsten...
Na, ich werde dieses Jahr 39 Leute, da wird es immer schon Zeit. So, also, hat es fertig
geupdatet, Reboot. Jetzt wird es langsam Zeit, dass ich euch mal zeige bzw.
Oh fuck, warte mal. Oh nee, Glück, ich habe nichts übersehen. Close. Du bist gespannt darauf,
was ein Senior Linux Engineer macht? Tja, ich auch. Aber ehrlich gesagt, Jobtitel, das ist doch eh
nur Schall und Rauch. Ich könnte genauso gut Senior DevOps Engineer, Senior Linux Engineer,
Senior System Administrator, Senior, selbst mit Senior, mit Expert, mit was auch immer. Letztendlich
ist das alles nur bla bla und ziemlich austauschbar von den Bezeichnungen her.
Wir machen heute ein paar coole Sachen an einem bestehenden Projekt. Allerdings sind die Sachen
relativ easy, glaube ich zumindest, sodass man nebenbei können wir schwätzen und ich kann ein
bisschen was erklären und sowas. Ja, so, also, was machen wir heute? Oder Senior, Senior,
Agile, Dev, Bus, Fin, Win, SecOps. Wenn schon dann richtig. Ja, Moment, Cloud natürlich auch
noch dabei. Cloud-Native, Cloud-Native, bitteschön. Da wird reingerollt in die Cloud.
Solange man Kubernetes richtig ausspricht. Ja, das ist die Frage, wie man das nur richtig
ausspricht. Ist es Kubernetes? Ist es Kubernetes? Ist es Kubernetes? Es ist nicht so ganz klar.
Oder ist es sogar vielleicht Kates? Kates, finde ich, hört sich irgendwie einfach falsch an.
Hört sich doch noch AIDS an, Kates. Aber was mich persönlich immer noch komplett fertig macht,
sind die Leute, die kubectl, nicht kubectl oder kubectl-control aussprengen, sondern kubectl.
Kubectl, man. Ich habe jetzt die ein oder anderen Videos auf YouTube geguckt zu Themen
so im Kubernetes-Bereich. Da gibt es echt viele, die es wirklich kubectl aussprechen. Ich werde
mich da nie dran gewöhnen. Ich habe ewig gebraucht zu merken, warum K8S K8S ist. Ich glaube,
ihr könnt mir mal schreiben, ob ich richtig liege. Ich glaube, es liegt daran, weil es 8 Buchstaben
sind in Kubernetes. Oder, warte mal, in Kubernetes zwischen K und S irgendwie. 1, 2, 3, 4, 5, 6,
7, 8. Ja, genau. Es sind 8 Buchstaben zwischen K und S. Deswegen ist es so. Stimmt schon. Wobei
ich ja schwanke bei STRG zwischen STRG und Control. Ich glaube, mittlerweile sage ich
hauptsächlich Control. Na gut, alles klar. Also geupdatet haben wir alles. Gucken,
nicht dass jetzt noch was nachgekommen ist, weil Arch, by the way. Was heißt K3S eigentlich? Das
ist eine gute Frage. Also ich habe keine Ahnung, was das heißt. Ich will auch gerade überlegen.
Ich weiß, was es ist. Ich habe keine Ahnung, wo der Name herkommt. Kubez. Ja, Kubez gibt es
ja auch. Es gibt im Prinzip eigentlich fast alles in diesem Umfeld, wo nicht schon der
Name belegt wäre. Ach, ich muss euch noch was trauriges erzählen. Zetketime, Leute. Richtig
Zetketime, was ich heute erfahren habe. Nee, für euch nicht Zetke. Aber was ich wieder richtig kacke
finde und zwar, ich habe versucht bei mir auf der aktuellen Arbeit einen Azubi zu vermitteln vor
einem dreiviertel Jahr oder vor einem Jahr. Ich schaue ein bisschen her. Und zwar war das jemand,
der hat eine Umschulung gemacht zum Fachinformatiker Systemintegration. Also ein bisschen so wie
Dot Project oder falls ich das richtig, ja genau, das Umschulung zum Physik gemacht. Also er hat
eine Umschulung, der macht gerade eine Umschulung zum Fachinformatiker Systemintegration. Davor
war er Schreiner oder sowas. Keine Ahnung. Zumindest, die müssen, glaube ich, im zweiten
Jahr müssen sie für drei oder vier Monate ein in Anführung zu dem Praktikum machen, wo sie dann
auch ihr Abschlussprojekt durchführen können. Also die brauchen einen Betrieb. Also wenn du
Umschulungen zum Fachinformatiker Systemintegration machst, dann vielleicht Dot Project kann es
vielleicht was zu sagen, ob das stimmt, was ich hier erzähle, musste beim Betrieb irgendwie ein
Praktikum machen und in dieser Zeit dann quasi auch dein Abschlussprojekt dort finden und
durchführen und Doku schreiben und Zeug. Also sprich, das ist erforderlich dafür, dass du diese drei,
vier Monate im Betrieb bist, dass du deine Ausbildung fertig machen kannst. So. Und ich
habe versucht einen Umschulungsazubi an die Firma, wo ich aktuell noch bin, für zwei Tage zu
vermitteln. Ich kenne den nur um drei Ecken. Also das ist der Freund von der Tochter von einer
Freundin von meiner Mutter. Also es ist wirklich um drei Ecken. Ist auch vollkommen egal. Ich dachte
mir, gut, du kannst ja mal fragen. Und ich habe bei uns die Personalabteilung, äh nicht die
Personalabteilung, die die die die Ausbildungsbetreuung angehauen und die haben sich ewig nicht gerührt und
immer nur gesagt so nach dem Motto Ja, was ist denn in dem Fall? Was ist das? Ich habe 100.000 Sachen
gefragt, aber es war nie so wirklich Zug drinnen und ich habe dann halt wirklich drei, vier Wochen
am Stück oder eher vier, fünf Wochen am Stück immer mal wieder genervt, obwohl sie ja auch
zwischendurch immer erzählt haben. Das ist eh so ein Ding, was ich bei dem aktuellen Arbeitgeber
nicht verstehe. Auf der einen Seite erzählen sie immer wir finden keine Azubis, keine Geigen.
Also niemand bewirbt sich und dann präsentierst du ihn ein auf dem Silbertablett und da wollen
sie nicht. Also das, was da gesagt wird und was wirklich gemacht wird für zwei verschiedene
Paar Schuhe zumindest hat das nicht geklappt. Ich habe sie dann noch ein bisschen weiter genervt
und ich habe halt dann irgendwann festgestellt, okay, selbst die Ausbildungsbetreuung kümmert
sich überhaupt nicht darum. Und dann habe ich noch mal offiziell über meinen Chef
anfragen lassen. Dann mussten sie reagieren und haben mir noch am gleichen Tag abgesagt
mit der Begründung. So nach dem Motto Sie keine der Abteilung hätte sich bereit erklärt, ihn
zu nehmen blablabla. Also im Prinzip die haben einfach sie fünf Wochen nichts gemacht und als
ich dann noch mal offiziell gefragt habe, haben sie gesagt, nee machen wir nicht. So und jetzt
Zedge, ich wusste der Kerl ist eh schon ein bisschen neben der Spur ja und das Einzige,
was ihn irgendwie noch halbwegs auf der Spur gehalten hat so die letzten zwei Jahre ist,
dass der eben sich die Ausbildung gemacht hat und jetzt irgendwie so ein bisschen was ja wie soll
man sagen, was festes so in seinem Leben hatte, was irgendwie täglich aufstehen und so. Zumindest,
ich habe jetzt gehört, er hat nirgends woanders, nein nein Leute keine Panik, keine Panik, so schlimm
ist es nicht, so schlimm ist es nicht, was jetzt kommt. Nein nein, er hat sich nicht umgebracht,
also macht euch keine Sorgen, das hätte ich euch so jetzt nicht erzählt. Er hat zumindest kein
Ausbildungs, kein Praktikum oder sowas gefunden und ich habe letztens jetzt gehört, das hat ihn so
aus der Bahn geschmissen, dass er jetzt irgendwie seit zwei Monaten in der Psychiatrie ist und
behandelt werden muss. Da siehst du mal, was einfach, was so dahin, wie soll man sagen, so nicht drum
gekümmert ist, so einfach mal seinen Job nicht gemacht als Ausbildungsbetreuer, was das für
Auswirkungen auf andere Leute haben kann und da wäre bestimmt gar nicht schlecht gewesen der Typ,
zumindest hätte er dann seine Ausbildung fertig. Jetzt ist er wohl gerade wieder raus und es geht
ihm wieder halbwegs gut, aber es hat ihn voll aus der Bahn geschmissen und alles nur, was heißt
alles, es hätte sich ja durchaus auch eine andere Firma finden können, das lag jetzt nicht nur an
dem Laden, das alles nur, weil sie bei uns keinen Bock hatten, sich mit der Thematik auseinanderzusetzen.
Wozu braucht man jetzt mal eine blöde Frage, wozu braucht man einen Recruiter, wenn man
niemand einstellen will? Ist das einfachste, wenn man niemand einstellen will, nicht einfach
keinen Recruiter zu haben? Wieso? Sie hätten sich doch einfach auch drum kümmern können. Es heißt
nicht, dass sie es machen müssen, das nicht, aber sie hätten sich doch auch drum kümmern können und
nicht sich fünf Wochen von mir nerven lassen und als ich dann offiziell angefragt habe noch mal am
gleichen Tag noch zu sagen, ach es hat sich niemand gefunden. Hätten die sich wirklich da drum
gekümmert, hätten die gefragt, gibt es da einen Platz und es wäre am Ende rausgekommen, nee gibt
es nicht, dann hätte ich gar nichts gesagt, aber einfach nichts zu machen fünf Wochen lang und wenn
man dann noch mal besonders nervt zu sagen, ach nee ist nicht, was ist das für ein Arsch, dafür gibt
es Leute, die explizit dafür da sind, sich um Ausbildung und sowas zu kümmern. Der soll halt mal
ihren Job machen. Ahja, gut, unerm Strich, Geld regelt. Unerm Strich ist es wahrscheinlich für
diese Unternehmen oder denken sie zumindest, ist es unterm Strich billiger oder was heißt billiger,
unterm Strich stehen sie besser da, wenn die Entwickler unbezahlt bei ihnen rumhocken,
als was wichtiges bei der Konkurrenz zu machen. Naja. So, aber jetzt müssen wir mal loslegen,
Leute, damit das heute noch was wird. Ich zeige euch mal kurz, um was es heute geht. Wir werden
heute nämlich ein bisschen .NET bzw. ein bisschen C-Sharp und mit unter .NET 8 weiter
programmieren. Ich hätte nämlich nicht gedacht, dass so mein an einem Tag erstelltes Miniprojekt
mir dann doch so viel Bock macht, dass ich da noch ein paar kleine Sachen ergänzen will.
Es war um was geht's. Ich demonstriere euch das mal. Vorher zeige ich euch was anderes,
habe ich ganz am Anfang des Streams schon gesagt. Das finde ich auch kacke, dass Microsoft das so
nennt, weil eigentlich sind alle Sachen mit Champ hinten dran so mein Ding. Schade, dass man
das Patente kein Wildcard Support haben. Vielleicht sollte ich das mal vorschlagen, dass man sich
Sternchen Champ in Verbindung mit Softwareprojekten komplett sichern kann. Wildcard Patente oder so
was. Ich wollte euch eine Sache noch zeigen, und zwar ich habe hier heute meine ganzen Daten
umgezogen vom alten iPhone aufs neue iPhone. Ist der ASCII CAC WPR schon da? Ja, der ist
schon da, der ist schon da und der ist auch geklost von mir schon, weil der PR Autocomplete kaputt
gemacht hat von der Shell. Allerdings ist es kein Problem, weil ich habe selbst ein besseres
Feature eingebaut, nämlich einen farbigen CAC W mit versteckter Option. Ja, also was ich euch
jetzt zeigen wollte, ich habe hier heute meine ganzen Daten umgezogen vom alten iPhone aufs
neue iPhone und es ist immer unglaublich schwierig vom iPhone Daten abzuziehen, wenn man nicht gerade
und selbst da am einfachsten ist es vom alten auf ein neues iPhone umzustellen. Das ist einfach,
aber die Daten da runter zu bekommen, um mal ein komplettes Backup zu machen, zum Beispiel ein
Backup von allen Fotos, ist gar nicht so einfach. Es gibt ein paar Apps, da geht das, dass man
beispielsweise einen FTP Server, einen Web Server aufmacht und da drüber Sachen runter lädt. Da
muss man es aber auch erst importieren in diese Anwendung oder man muss Shit iTunes verwenden,
was absolute Abfuck ist, was ich niemals auf meinen Rechner installieren werde oder was auch
ganz praktisch ist. Man kann, also natürlich kann man es einfach per USB verbinden und hier
über den Explorer drüber ziehen, das geht, aber es gibt ein viel, viel besseres Projekt und zwar
nennt sich das iFuse oder iFuse oder wie auch immer. Damit kann man sein iPhone in einen Ordner
mounten unter Linux und kann dann auf das meiste zugreifen und auf das, was man nicht zugreifen
kann, kann man das mit bestimmten Optionen mounten, dass du direkt auf Anwendungsordner
zugreifen kannst. Also du kannst dann zum Beispiel den Ordner mounten von deiner Notizanwendung und
die Daten daraus ziehen, ohne dass die Notizanwendung selbst zwingenderweise eine Exportfunktion haben
muss. Also das ist wirklich sehr praktisch. Ich kann es euch nicht zeigen, weil wenn ich es euch
zeige, ja mit einem MacBook ist das easy, aber wenn ich es euch zeige, leake ich vielleicht
Sachen von meinem iPhone, da habe ich keinen Bock drauf. Ja, also das finde ich sehr nice,
habe ich heute wieder benutzt um iPhone Backup zu machen. Kann ich, kann ich nur recommenden.
Moin Sirius Max. Alles klar, so muss ich mal kurz in mich gehen. Ich glaube die Musik ist ein
Ticken lauter. Mir geht eigentlich. Okay, also um was geht es heute? Ich zeige euch mal was.
Ich mache mal kurz zu und mache mal hier einen neuen Browser auf. Ich habe letzte Woche was,
nein nicht die Cute App und auch nicht Pfeilfeder. Ich habe letzte Woche was entwickelt,
an einem Tag, weil ich selbst gerne so ein Programm hätte haben wollen und ich nichts
gefunden habe in der Richtung und zwar ich habe den VmChamp erstellt. Was macht der VmChamp?
Der VmChamp erlaubt das, der Name ist natürlich, bei mir heißt ja alles irgendwie was mit Champ
hinten dran. Man kann damit, wobei guckt euch, guckt euch die ReadMe an, da steht ja eigentlich
alles drin. Simple and fast creation of throw away VMs on your local machine. Connect via SSH in
just a few seconds. We are all sitting in one boat. Nicht Vagrant. Anderer Anwendungszweck als
Vagrant. Das stimmt nicht so wirklich. Anderer Anwendungszweck als Vagrant. Vagrant ist ja eher
ein, so ein bisschen so ein Automatisierungstool für VMs. Da kannst du ja auch custom Sachen
dran anpassen und sowas. Dafür ist es schwierig mit Vagrant quasi vom gleichen Ordner, vom gleichen
Vagrant-File, wenn ich es zumindest noch richtig in Erinnerung habe, zehnmal die gleiche VM zu
starten und sowas. Und Vagrant ist halt ziemlich oldschool mit Ruby und es unterstützt KVM nicht
standardmäßig, nur mit Third-Party-Provider. Ich wollte ein simples Tool haben, wo ich mit einem
Befehl lokal bei mir eine VM anlegen kann, um was auszuprobieren. Und warum will ich das haben?
Naja, weil es gehen halt nicht Container für alles. Genau das ist der Grund, warum ich es gemacht
habe. Es ist nicht immer möglich, alles in Containern zu machen. Zum Beispiel, wenn man
Kernel-Module braucht oder zum Beispiel, wenn man irgendwelche in Docker-Schweinereien machen will.
Das kann man zwar meistens irgendwie noch regeln oder wenn man mehr als eine Sache laufen will,
wenn man sich Packages inszenieren will aus dem Repo, die vielleicht irgendwelche Module
nachlädt. Also manchmal macht es einen Docker-Container einfach nicht. Manchmal braucht es eine VM.
Ja zum Beispiel, bestes bestes Beispiel dafür, man möchte einen GitLab-Runner oder einen
GTA-Runner jetzt mal lokal testen. Kannste knicken mit Docker in Docker. Das wäre nämlich Docker in
Docker in Docker in Docker. Und irgendwann hört es dann auch auf, gescheit zu funktionieren.
Und das ist dann halt ein bisschen blöd. Das müsstest du machen, das müsstest du machen,
um beispielsweise einen GitLab-Runner. Nee, nee, nee. Der Runner ist Docker in Docker in Docker.
Also für alles, wo du keine VM, wo du keinen Container verwenden kannst und das habe ich
manchmal, ist das ganz sinnvoll. Und es gibt einfach nichts Gescheites dafür. Das Beste,
was ich auf GitLab gefunden habe, ist das hier. Das ist ein Projekt von einem Spanier oder so,
wahrscheinlich. Der hat in Bash sich was zusammengescriptet, was die lokale VMs anlegt.
Deswegen habe ich selbst was gebaut dafür und das funktioniert folgendermaßen. Ich zeige euch
das mal. Ich muss übrigens eine Sache vorher mal machen, weil das immer, wobei, nee, muss ich
gar nicht machen. Müsste eigentlich auch so funktionieren, weil das in Verbindung mit VM
manchmal buggt. Also was man machen kann ist, ich demonstriere euch das jetzt einfach mal kurz.
Ihr könnt zum Beispiel sagen, VMChamp, run, Name für die VM, test-vm. Ihr habt übrigens bei
allem Autocomplete hier an der Stelle. Test-vm. So und jetzt könnt ihr entweder sagen, in
Background, Disk, Local Image Remedings. Ihr müsst aber auch gar nichts angeben. Ihr könnt es einfach
so leer lassen und ausführen. Dann lädt ein aktuelles, Default ist Debian, dann lädt ein
aktuelles Debian Cloud Image runter und startet die VM. Und nach kürzerer Zeit, ich mache mal
den Wirtmanager auf, dass wir zugucken können. Das ist normalerweise natürlich nicht notwendig
dafür. Der hoffentlich sich jetzt verbindet. Guckt, die VM bootet. Also wie gesagt, die braucht man
eigentlich nicht. Die VM bootet und die connectet sich jetzt auch gleich im Netzwerk und dann
connectet er sich direkt per SSH auf die VM. Zack, ist meine VM am Start. Also viel einfacher geht
es nicht, um eine lokale VM zu erstellen. Jetzt ist man auf der VM drauf, kann da irgendwelche
Dinger treiben und wenn man fertig ist, in seiner VM Sachen auszuprobieren. Das Coole ist halt auch
hier, dass man jetzt eine richtig echte VM hat. Man kann jetzt sowas hier machen wie Modprobe
minus R PC Speaker oder PC Speaker. Nee, wie heißt denn das überhaupt? Ach, keine Ahnung.
PC. Ach, PC Speaker ist im Cloud Image vielleicht gar nicht drinnen. Zumindest,
kann ich Kernel-Module laden und entladen, was halt so in Docker-Containern nicht funktioniert.
Und du kannst auch alles andere machen, was du in so einer VM machst. Wenn du fertig bist,
du kannst noch eine zweite VM starten und sonst was. Wenn du fertig bist, kannst du die VM entweder,
wenn du siehst, hier überall Autocomplete, kannst du die VM entweder wieder löschen oder du kannst
noch eine zweite VM erstellen, wenn du vielleicht noch mehr brauchst zum Testen. Und da sagen wir
jetzt mal, okay, da brauchen wir was anderes. Da brauchen wir jetzt hier einen Ubuntu. Ubuntu
2004 brauchen wir oder komm, Schein an. Wir nehmen einfach noch mal einen Debian, weil dann
ist das ISO schon runtergeladen. Also wir brauchen einen Debian, allerdings brauchen wir jetzt ein
bisschen mehr Arbeitsspeicher. Hier 1024 MB Arbeitsspeicher und wir brauchen eine größere
Festplatte für die VM, hier 32G. Und die VM mit dem Namen gibt es schon, deswegen erstellen wir
Test VM 2. Und dann fährt er eine zweite VM hoch und alles ist gut. Wirt Manager braucht man
dafür nicht. Das ist wirklich sehr nice für lokale Test VMs, die man kurzzeitig mal braucht,
was auszuprobieren und dann wieder wegzuschmeißen. Ja, und wenn man dann fertig ist, wenn man das dann,
wenn man dann fertig ausprobiert hat, das war mir nämlich auch wichtig, dass man den ganzen
Krempel rückstandslos, rückstandslos wieder wegbekommt. Wenn er irgendwann dann gestartet
ist und Netzwerkverbindung hat. So, jetzt bin ich fertig. Jetzt kann ich erst mal gucken,
wie viele VMs habe ich denn. Kann ich mir das Ganze auflisten lassen. Wenn ich connecten will
auf so eine Test VM, kann ich das PSSH machen. Direkt hiermit, der sucht sich das dann raus und
connectet einer mit. Ja. Und ansonsten. Das Teil managt auch die SSH Keys dafür. Es nimmt die
SSH Keys, die bei dir in deinem SSH-Verzeichnis liegen. Ja. So, und wenn du fertig bist und das
war mir wichtig, dass man das hat. Also wie gesagt, man kann sich alles auflisten lassen,
was man gerade laufen hat oder welche Betriebssysteme unterstützt sind standardmäßig.
Man kann auch ein lokales, man kann auch sagen Local Image und da eins übergeben. Ja, das geht
auch. Und wenn man fertig ist, sagt man einfach VMChem clean. Man fragt da ein noch mal. Hey,
ich lösche alles. Alle Images, alle VMs. Dann sagst du ja, okay, alles klar. Und alle VMs sind
weg. Alle Images sind weg. Das heißt, aller Speicherplatz ist freigegeben. Also für kleine,
lokale Test VMs habe ich mir sowas schon die ganze Zeit gewünscht. Vor allem,
weil es Cloud Images sind. Wenn man eine lokale Test VM braucht, normalerweise legt man eine neue
VM an, legt das ISO ein, klickt den Installer durch und das ist halt doof. Man könnte beim
Clean noch die VMs auflisten, die gelöscht werden. Könnte man Theoretisch. Ich weiß nicht,
wie sinnig das ist, wenn ich sage, ich bin fertig. Ist das auch auf Windows-Support? Es sei denn,
Windows unterstützt LibVirt. Das habe ich so meine Zweifel. Ne. Du brauchst LibVirt und das
heißt im Prinzip eigentlich in der Regel die Kombination. Also VMWare würde gehen. VMWare
würde gehen. Ich habe keine Ahnung, ob LibVirt in WSL geht. Das könnte man mal ausprobieren.
Ach, Remote KVM, ja. Weil ich glaube, KVM wird nicht wirklich funktionieren.
Geht KVM in WSL im Leben nicht, oder?
Was? Okay, dann würde es in WSL funktionieren.
Ganz schimmer. Keine Ahnung, ob KVM gescheit funktioniert in WSL. Aber dann würde es funktionieren.
Man könnte es auch Clean All nennen. Ja, so. Dann kannste schmeißt alles weg. Was macht das
KV-Command? Es ist auch da. Das Allerwichtigste. Und wir haben sogar letztens geguckt,
wie viele KWs pro Sekunde wir schaffen. Relativ wenig. Also wir schaffen nur 2,3 Megabyte KWs
die Sekunde. Da geht noch mehr. Ach ja, und wenn man Help eingibt, ist KW nicht gelistet. Das ist
ein Easter Egg. Und ihr wisst es jetzt, Chat. Kannste auch einzelne Frames vom Video so ausgeben?
Hä? Das verstehe ich nicht. Jo. Und ansonsten, was ich auch sehr nice finde,
KW-Video in die Konsole. Das ist kein GIF, das ist ein Stratisches Bild. Also was ich machen kann,
ist, weil ich das beste Terminal ever verwende, ist, ich kann GIFs in der Konsole abspielen.
Ganz essentielles Feature. Und theoretisch jedes x-beliebige Video, wenn ich es vorher mit FFM
Pack nach GIF umwandle, was man wahrscheinlich nicht will. Wie heißt das Terminal? West Term.
Bestes. West Term. Kann ich euch wirklich nur wärmsten empfehlen? Es gibt es für Mac, Linux,
Windows, hat Image Support, hat super Customizable Config, ist GPU gerendert, ist für mich so das
beste Terminal, was ich die letzten Jahre über entdeckt habe. Find ich besser als die ganzen
anderen neueren Terminals, die es so gibt. Vor allem weil es auch TMAX-Funktionalitäten,
also das was TMAX hatte, auch direkt im Terminal bietet. Mit Z. West Term. Hier,
ich habe es doch gerade gezeigt. West Term. Jo. Und was ich auch haben wollte und was tatsächlich
ein bisschen kompliziert war einzubauen, ihr werdet, guck mal, ich habe Autocomplete für
alle Sachen. Und wenn ich, beide kann ich an der Stelle zeigen, wenn ich eine VM laufen habe,
dann habe ich sogar Autocomplete für die Kommandos hier. Also wenn ich jetzt sage löschen,
ich will eine VM löschen, dann Autocomplete, da sogar alle VMs, die er selbst angelegt hat.
Nur VMs, die er selbst angelegt hat. Also das löscht ja nicht alle VMs, sondern die VMs,
die er selbst angelegt hat. Ja. Und Autocomplete ist auch total easy zu konfigurieren. Man kann
nämlich einfach sagen vmchamp, ich glaube completion. Ja. Minus minus completion zsh.
Und dann kriegt man so eine Funktion ausgespuckt, die kann man in seine zshrc packen oder man macht
das so wie ich und packt einfach source da drauf. So source vmchamp completion zsh. Und dann hat
man shell completion für alle seine lokalen test vms. Ja, so sieht es aus. Und ich dachte,
wir bauen heute mal ein paar kleine Sachen noch ein. Ich habe das innerhalb von einem Tag
zusammengefrickelt, dieses, das Tool. Was heißt zusammengefrickelt? Eigentlich ist der
source code sogar relativ gut lesbar. Also kann sich jeder, jeder der will, kann sich das zur
Gemüte führen. Ist, ich finde relativ gut lesbar alles. Und ich habe da jetzt mehr Spaß dran,
da weiter dran zu basteln, als ich eigentlich gedacht habe. Ich habe es ja ursprünglich gemacht,
weil ich mir selbst so ein Tool gewünscht habe für schnelle lokale test VMs direkt zum wieder
wegschmeißen danach. Und jetzt habe ich irgendwie Bock, da noch ein paar kleine Kleinigkeiten
einzubauen. Was wird gebastelt? Wir erweitern den vmchamp heute um ein paar Kleinigkeiten. Was
ist der vmchamp? Kannst du dir durchlesen auf github beziehungsweise die readme überspringen.
Damit kannst du lokale test vms erstellen innerhalb von ein paar Sekunden. Mal velkrim, ja,
habe ich früher, habe ich relativ viel velkrim benutzt. Wobei velkrim ein bisschen in anderen
Anwendungsfall abdeckt und das Problem hat, dass es nicht mit kvm native zusammenarbeitet,
sondern nur mit virtualbox. Und da habe ich gar keinen Bock drauf. Ich weiß, es gibt einen kvm
thirdparty plugin wohl. Aber was du mit vkrim nicht machen kannst ist, keine Ahnung, auf die schnelle
eine debian, eine fedora und nochmal drei ubuntu vms starten. Du brauchst dann einen pfile drinnen,
mit vkrim pfile, mit vkrim up einmalig und sowas. Ja, das ist, das ist hat, finde ich,
ein bisschen anderen Anwendungszweck. Vakrant ist quasi noch aus Zeiten, wo terraform und
solche Sachen noch nicht existiert haben. Was übrigens von der gleichen Firma ist,
falls ihr das nicht wisst. Der Vakrant Erfinder ist der haschi haschi korb Gründer. Und das
wurde, das hat er quasi schon erfunden davor. Es passt auch irgendwie zusammen, dass das die
gleichen Dudes sind, weil der gleiche Typ ist. Hast du eine Description Vorlage für deine Repos?
Nee, die mache ich eigentlich immer so, wie es passt. Die Readme, das Format der Readme
habe ich tatsächlich von einem unserer Mods geklaut. Ja, und es ist ganz einfach. Du kannst
einfach eine vm lokal starten und dann verbindet sich per Netzwerk dahin, wenn es nicht zu lange
dauert. So, also es gibt ein paar Sachen, die ich heute machen will. Wir müssen mal ein bisschen
ein bisschen was, ein bisschen was anfangen heute. Also ich mache mal kurz hier to do's,
to do's für heute. Also was haben wir am Start? Was will ich machen? Ich will einmal die ganzen
megabyte angaben zu megabyte, maybe bytes, maybe byte, wie auch immer zu megabyte ändern,
weil keine Sau, ehrlich gesagt, kann was mit, passt mal auf, keiner kann was anfangen mit
976,56, maybe, maybe byte. Man kann sich denken, dass es 1024 megabytes sind. Für den Arsch.
Kann das mehr als Knoam als was? Knoam Boxes? Soll das Boxes heißen? Knoam Boxes. Ja, es ist ein
Kommando Zeilentool. Das kann ein Kommando Zeilentool sein. Und es ist dafür gedacht,
dass man vm's anlegt und danach gleich wieder wegschmeißt. Es geht hier nicht um den generellen
vm Manager oder sowas. Anlegen, PSSH drauf, connecten, was ausprobieren für 20 Minuten und
wieder wegschmeißen, weil spätestens nach dem Reboot sind die vm's eh wieder weg und alles
wieder aufgeräumt. Sollte was nicht aufgeräumt sein, sagste einfach vm-champ, clean und alles
ist wieder weg. Und Wirt Manager ist immer noch das beste, was es gibt, wenn man wirklich in GUI
braucht und was damit machen will. Werden die Downloads gecached? Ja, werden sie. Guck mal,
jetzt habe ich gerade einen clean ausgeführt, also sprich, da hat alle Images und vm's gelöscht,
aber ich zeig's dir noch mal. Also erstens er nimmt die Cloud-Images, was eh schon mal
deutlich leichtgewichtiger ist als die ganzen anderen Images. Das funktioniert folgendermaßen,
ich mach mal... Was? Ah ja, okay. Kannst du mal ein Beispiel nennen? Naja, zum Beispiel,
wenn ein Container nicht ausreicht, sei es wenn du Kernel-Module brauchst oder du mal
irgendeinen Continuous Integration Tool Runner testen willst, wie wir letztens zum Beispiel hatten
und keinen Bock hast auf Docker, in Docker, in Docker und Prey machen musst, dass es funktioniert.
Manchmal sind vm's noch ganz sinnvoll zum Testen. Und ich hab mir die ganze Zeit eben schon so einen
Tool gewünscht, wo du sagst, hey, lass mal schnell eine Test-VM starten, lokal, ein vollständiges
Betriebssystem, also auch mit einem System D drauf, wo man auch mal irgendeinen Init-Skript
testen kann. Das kannst du ja in Docker Containern nicht machen. Wenn du beispielsweise mal ein Unit
File erstellen willst und gucken... Du musst irgendeinen Package machen mit einem Unit File und gucken
musst, ob du willst, ob das startet und sowas. Das kannst du alles nicht im Container gescheit
machen. Also es gibt Fälle, da ist ein Container nicht so praktisch. Aber das ist auch nichts,
wo du jetzt dir eine neue VM anlegen willst, hier, mal eine Debian-Install durchlaufen lassen willst,
du willst eine kurze vollwertige VM haben, drauf was ausprobieren und wieder wegschmeißen. Im Prinzip
ein bisschen wie wenn du zum Testen mal schnell einen Container startest mit, ihr Docker run,
bla bla bla. Nur, dass es halt eine VM ist. Und natürlich bei weitem nicht so sophisticated
Management wie Docker und soll's ja auch, soll's ja auch gar nicht. Ja, und jetzt die Downloads
werden gecashed. Guck mal, ich hab grad ein Debian-System gestartet und wenn ich jetzt ein
zweites Debian-System starte, dann use der das Existing Image und es geht schneller.
Ich mein, booten und IP ziehen muss die VM immer noch. So, also. Was will ich denn sonst noch
machen? Dann will ich noch eine Ausgabe haben, das hat mich tatsächlich letztens der Stream
draufgebracht. Wenn ich sage, List oder LS oder wie auch immer oder PS, ich glaube,
ich hab das alles gealliast, dass man sich's merken kann. Hätte ich gerne hier noch eine
Ausgabe, ob die running ist oder vielleicht gecrasht ist oder irgendwie sowas in der Richtung. Also
Status bei LS. Ja, und jetzt kann man einfach alles wieder wegschmeißen,
alle Images und VMs sind weg. Finde ich sehr praktisch.
So, war der letzte Arbeitstag schon? Nee, mein letzter Arbeitstag ist übermorgen, am Mittwoch.
So, also das will ich machen. Status bei LS, ob VM running oder gecrasht oder so. Dann hätte
ich gerne noch Images, mehr Images und zwar Arch-By-The-Way-Image muss natürlich sein.
Fedora und vielleicht CentOS? Nee, keine. Was brauchen wir denn noch? Aktuell hab ich nur
Ubuntu. Also kommt mir nicht mit Suse, Suse bau ich nicht ein. Auf Suse hab ich keinen Bock.
Suse, Suse. Windows? Nee. Windows wird nicht funktionieren. Windows, alter Leute. Red Hat,
ich weiß nicht. Wenn schon CentOS. Debian haben wir. Debian und Ubuntu Images haben wir. Also
ist es drinne. Debian 11, 10, 9 und Ubuntu 18.04, 20.04 und 22.04. Nein Leute, ich mein's ernsthaft.
Nee, irgendwelchen Blödsinn. Brauchen wir den? Brauchen wir den nicht. Also Arch-Mama rein,
Fedora und CentOS reicht, glaube ich. Oracle, das ist vielleicht gar nicht so schlecht. Da können
wir uns Red Hat sparen, weil das aktuelle Oracle ist ja ein Red Hat-Klon. Willst du die Liste mit
den Images hardcone? Ja, hab ich schon. Aber wenn du ein eigenes Image angeben willst, kannst du das
auch machen. Also aktuell hat er ein Images drinne. Debian 11, 10, 9 und Ubuntu 18.04, 20.04 und 22.04.
Du kannst aber auch, du kannst aber auch ein lokales Image angeben, wenn du eins hast. Und es muss kein
Debian sein oder es kann alles sein. Also wenn du ein lokales Image hast, kannst du auch ein lokales
Image angeben. Was macht da VM-Champ? Lokale VMs starten. Du kannst hier die GitHub-Readme durchlesen,
wenn du willst hier. Lokale, ich hab's jetzt nämlich schon zehnmal erzählt gerade. Lokale
VMs starten, die du danach wieder wegschmeißen kannst. Für den Fall der Fälle, dass ein Docker-Container
nicht ausreichend ist. Und er kann Kegway auf der Konsole posten. Holy Luck, Gamers. Dankeschön.
Eventuell das Repo im Titel verlinken. Ach nee. Alma. Da muss ich euch was fragen mal. Habt ihr
Erfahrung mit Rocky Linux oder Alma Linux? Das sind ja quasi zwei Red Hat-Clones jetzt,
seit CentOS nicht mehr ist. Was davon würdet ihr bevorzugen? Ich mach das Repo doch in Titel.
Mir fällt übrigens eine Sache ein. Ich glaube, ich sollte die Release-Datei umbenennen. Kann
man den Kram umbenennen nachträglich noch? Nee, oder? Man kann es nur neu oder kann man das
umbenennen? Noch nie machen müssen. Nee, man kann das umbenennen. Cool. Wie nennt man das dann?
VMChamp? Das ist eine gute Bezeichnung. Linux? AMD 64 oder so? Wie benennt man den Scheiß
gescheit? Irgendwie eine Five-Hater-Idee? Wie machen die das denn? Wie benennen die ihre
Runner denn? Hat doch letztens runtergeladen. Download? Okay, so benennen sie das. AMD hier,
Linux, AMD 64. Sehr schön, so machen wir das auch. VMChamp, Linux, AMD 64. Jetzt weiß auch jeder,
wofür das Binary ist. VMChamp PDF Screensaver. Nein, das ist out. Das ist out. Man nennt die
Dinger heute .doc.exe. From left to right mit arabischen Buchstaben. So machen das die Five-Hater.
Also weiter, so. Dann, was ich auch noch machen wollte ist, das sind alles Sachen,
die dauern jetzt einzelne Schritte, nicht so lange. Dann hätte ich gerne noch die Möglichkeit über
die CLI eine VM zu rebooten. So blöds klingt, das geht aktuell noch nicht. Man kann nur die VM
löschen und wieder erstellen, aber manchmal möchte man ja auch mal rebooten, zum Beispiel,
um ein Unit-File zu testen oder sowas. Manchmal ist ein Reboot nicht verkehrt. Und sei es nur,
das Ding ist vielleicht abgekackt und du willst es resetten. Ja, moment, ja, rebooten. Mit einem
Force-Switch. Dann recreate, wenn die VM schon existiert, ne Abfrage, ja, nein, neu erstellen.
Auf allen VMs einen Befehl ausführen. Das würde ich nicht darüber machen. Das sollte man vielleicht
besser per SSH machen, direkt. Weil ich will das nicht übertreiben an Features, ehrlich gesagt.
Ich meine, das ist für kleine Sachen und nicht, um irgendwie eine virtualisierte Umgebung zu
orchestrieren oder sowas. Also den einen Vorschlag fand ich eben tatsächlich ganz gut. Da weiß ich
aber nicht, ob es, nee, Klon muss nicht rein. Das brauchen wir nicht. Glaube ich nicht, oder?
Nee. Cloud in den Zeugs benutzt es schon. Custom Pagages. Ich mache mal ein Fragezeichen dahinter bei
Sachen, wo ich mir nicht ganz sicher bin. Der Chat will direkt Docker, ja. Nee. VM. Das weiß ich
nicht, ob es eine gute Idee ist. Also Custom Commands nach Boot. Das könnte man tatsächlich
machen. Das könnte man tatsächlich machen, weil ich verwende jetzt schon Cloudinit. Nee, Cloudinit
erneut ausführen, das wird mir zu. Also alles, wo man eine Verbindung auf die VM braucht, ist doof.
Da müsste man das nämlich per SSH machen. Das wird dann nur funktionieren, wenn SSH-Login
richtig geht und alles. Nee, Ressourcen-Monitor. Nee, nee. Da kannst du einfach Hardtop machen und
gucken, ob QEMO viel braucht oder KVM viel braucht. Also.
Zum Beispiel Dashboard. Ja, so, das wird das Zeug neu erstellt und mehr fällt mir jetzt. Nee,
nee, das mache ich nicht. Wenn man CPU und RAM changen will, dann muss man die VM ausschalten
oder resetten oder was auch immer. Das ist, glaube ich, ich weiß nicht, da kann man, da könnte man
sie einfach recreate. Es soll ja wirklich nichts großartig damit gemacht werden, wo man die VM drei
Tage laufen lässt. Change RAM. Ja, mal überlegen, mal gucken. Nee, GPU-Pastel und sowas bestimmt nicht.
Aber Reboot, also ich glaube, das ist auch das erste, was wir machen danach. Also das machen wir
jetzt als erstes, das ist easy. Und danach machen wir tatsächlich ein Reboot, weil Reboot sollte
relativ einfach sein, Reboot zu implementieren für die VMs. Und Reboot ist tatsächlich sehr wichtig,
weil so eine VM kann ja auch mal abkacken oder man möchte was testen in einer VM, was halt nur
ausgeführt wird beim Start. Ja, beispielsweise irgendein Unit-Start-Config, was auch immer.
Ist das HKEY als Parameter? Naja, also aktuell ist es relativ easy gelöst. Aktuell nimmt er
einfach alles aus deinem SSH-Verzeichnis an Public Keys. Ja, wir können vielleicht minusminus SSH,
ID. Naja, das mit User-Parameter von Hand können wir nicht machen. Dann geht es kaputt, der Rest.
Ach so, User. Du meinst den Login-User. Ach nee, das glaubt das. Der User heißt standardmäßig
User. Das reicht schon. Wie gesagt, es geht ja nicht um VMs, die dann remote benutzt werden sollen
oder sowas, die dir dann drei Wochen laufen lässt, sondern erstellen, einloggen, testen,
wegschmeißen. Aber das mit dem Befehl ausführen hinten dran finde ich tatsächlich ganz interessant
und das könnte sogar sein, dass wir das relativ easy eingebaut bekommen. Und zwar, da bin ich mir
nicht sicher, wie Cloud-Init richtig funktioniert, weil die VMs, die werden ja mit den Cloud-Images
aufgebaut und da läuft einmal Cloud-Init. Ich glaube Snapshots, supported, werden nicht
supported für... Können wir mal ausprobieren. Ich glaube Snapshots werden nicht supported für
temporäre VMs. Können wir mal ausprobieren. So, was wollte ich jetzt zeigen? Mist. Ach so, Cloud-Init.
Die VMs werden gestartet und bekommen in ISO eingehängt, wo Cloud-Init-Files drauf sind. So
konfigurieren die sich nämlich. Das heißt, ich kann hier ins Cloud-Init was reinschreiben.
Und theoretisch könnte man hier unten Custom-Commands reinbauen. VM Disk Size als Parameter,
das gibt es schon. Das gibt es schon. Guck, du kannst hier Disk angeben, kannst sagen,
keine Ahnung, 17 Gigabyte oder so. Oder du benutzt eines von den vorgefertigten Größen,
die du mit deiner Tab-Completion kriegst. Was ich eh nice finde, dass das Ding Tab-Completion hat.
So, wir gucken mal, ob Snapshots... Ach so, ich bin doof. Jetzt habe ich es wieder gelöscht.
Der ist sehr schlau, Max. Super. Erstellt zum Ausprobieren und gleich wieder gelöscht.
So, guck mal, ich bin mir nicht sicher, ob Snapshots überhaupt unterstützt werden.
Wie machen wir das? Take Snapshot? Nein, nicht Screenshot. Moment. Wo war das noch mal?
Nee, Snapshots sind anscheinend nicht möglich für temporäre VMs.
Ist auch okay so. Wir müssen es ja nicht übertreiben. Snapshots ist wahrscheinlich
echt ein bisschen zu viel des Guten. Ich schreibe es immer auf, falls... Ach ja,
und was man sich... Ich will noch eine Timeout-Option. Warten auf Netzwerk. Wie lange?
Standardmäßig 45 Sekunden, aber manche Images booten ein bisschen länger. Und vielleicht,
da bin ich mir nicht sicher, ob es eine gute Idee ist, Config File Support, dass man so ein paar
Sachen standardmäßig definieren kann, wie welches Verzeichnis soll benutzt werden oder so was.
Doch, habe ich, habe ich. Aber jetzt gibt es den Preis-Champ nicht mehr, das heißt,
ich brauche es nicht mehr. Ja. Was ist eine temporäre VM im LibVirt-Umfeld? Das ist eine
VM, die du nicht defines, sondern nur createst. Zumindest nennt das LibVirt so. Also wenn du sagst,
Create VM, dann ist die nur da bis zum Ausschalten oder bis zum Reboot. Aber wenn du sagst,
Define VM, dann speichert er sich die Config und alles dazu und du kannst sie quasi runterfahren,
Rebooten, wieder hochfahren. Lizenz festlegen, das könnte man tatsächlich, das wäre vielleicht
keine schlechte Idee. Was ist denn eine temporäre, was ist aus dem Preis-Champ geworden? Der wurde
etwas zu nervig zu maintainen mit den Crawlern für die Shops. Deswegen habe ich das rausgeschmissen.
Der ist weg. Also es könnte durchaus sein, dass man hier Custom Commands ausführen kann in diesem
Cloud-Init. Ich probiere das mal aus. Wir machen jetzt mal Echo 123 nach rootkekel.bin. Oh, das
ist eigentlich egal. Wir gucken mal, ob das funktioniert, ob man das so im Cloud-Init ausführen
kann. Muss man mal gucken. Dotnet, run, run. Ja, einfach so gucken, ob es geht. Jetzt bin ich mal
gespannt, ob das funktioniert. Weil wenn das funktioniert, ist das tatsächlich eine gute
Idee gewesen, Chet. Da kann man nämlich Custom Commands angeben. Das ist gar nicht so blöd,
weil es könnte ja durchaus Custom Cloud-Init-Commands, ja meine ich ja, meine ich ja so was,
dass man hier Custom Commands. Custom Cloud-Init funktioniert nicht richtig, weil die Sachen müssen,
also Ausnäh muss gesetzt werden, dass das mit der DACP-IP richtig funktioniert. Keys müssen
eigentlich auch gesetzt werden, dass das Login richtig funktioniert. Also komplett Custom Cloud-Init
ist schwierig. Man könnte halt Sachen anhängen lassen. Ja, das wird wahrscheinlich funktionieren.
Okay, ist es gestartet? Wir gucken mal. Cut, root, ach so, ja. Rout, kekel, es funktioniert. Nice.
Okay, Custom Commands ist schon mal easy. Das können wir schon mal einbauen. Ja, weg damit.
Also Custom Commands sollte tatsächlich schon mal relativ gut funktionieren an der Stelle.
Da müssen wir uns nur noch die Optionen überlegen. So, wir fangen mal mit was Einfachem an. Ich
ändere mal gleich am Anfang. Das ist nämlich nur an einer Stelle Megabyte zu Megabyte und das
sieht gleich besser aus. Guckt mal. 256 MB und 4000 MB. Da können die Leute wenigstens was
ordentlich mit anfangen. Da weiß man wenigstens schon was Sache ist. So, okay, was machen wir jetzt
als nächstes? Ja, das machen wir jetzt. Weil aktuell kann man sich ja anzeigen lassen,
was aktuell schon für VMs laufen. Und da sieht man, es läuft eine, die noch keine IP hat und es
wäre ja schon praktisch, wenn es dahinter noch was gäbe, wo dann Status oder sowas steht und dann
Running oder eben Booted oder sowas in der Richtung. Das probieren wir jetzt mal aus.
Dann gehen wir mal ins List Command, fügen noch mal neue Tabelle hinzu, neue Spalte,
State oder Status. Da gibt es ja irgendwie so eine Eselsbrücke für, um sich das merken zu können.
Sprich, bei Hotelzimmern ist, ich kriege es immer aus dem Kopf nicht hin, bei Hotelzimmern ist
das Date quasi ob es eine Einzelzimmer, ein Doppelzimmer oder sonst was ist und der Status ist,
ob es belegt ist oder nicht. Also gut, keine Ahnung, ob es in dem Fall State oder Status ist,
Running, Booted. Tim790, danke schön für den Sub. Okay, dann geben wir doch jetzt hier einfach mal
aus und gucken, ob das funktioniert, dass wir da jetzt was in die Tabelle mit reiten. Nein,
nicht Run, nicht Run, Lists. Gehst du eigentlich auch auf Messen? Auf die Games kommen ab und zu,
war ich aber auch schon Jahre nicht mehr. Auf IT-Konferenzen gehe ich nicht. Wüsste ich jetzt auch nicht,
warum? Weil die ganzen Talks kann man sich im Internet angucken oder kann ich mir die in Ruhe
zu Gemüte führen und mir auch nur die Talks raussuchen, auf die ich Bock habe?
Okay, das funktioniert. Also in der Tabelle, in der Tabelle kann man noch einen zusätzlichen
State reinschreiben. Jetzt ist natürlich die Frage, wie bekommen wir den Status? In dem Fall ist
glaube ich tatsächlich eher der Status, oder? Mir egal. Wie bekommen wir das raus? Da müssen wir
mal in die LibWird-Docs gucken. Und suchen wir mal nach Status. Wir Domain Dirty State.
Was? Ne, dann suchen wir nach State. State. Aha. Domain Control State, No State. Wir Domain State.
Das klingt doch schon mal ganz gut. Wir Domain State. No State. Running,
blocked, paused, shut down, shut down. Genau das will ich haben. Wir Domain State. Okay,
wie kriegt man den? Was zum? Okay, was auch immer. Was? Wir connect, get all Domain Stats.
Alter, was ist das für eine Signatur, man? Was wollen die von mir?
Wir Domain Stats Record Pointer. Pointer, Pointer. Triple Pointer. Pointer? Und ein Pointer auf den
Pointer und ein Pointer auf den Pointer des Pointers. Alles klar. Exit. Pfeifer. Pointer
Stells. Was wollen die von mir? Wir connect Pointer. Alter, mich interessiert die CPU-Zeit
und RAM und so gar nicht. Ich will einfach nur, ob die VM running ist oder nicht. So.
Wir Domain Info. Das klingt auch nicht schlecht. Ja, das ist doch nicht schlecht. Woüber geht
man? Wir Domain Info. Wir Domain Get Info. Ja, das klingt doch gut. Das brauchen wir. Wir Domain
Get Info. So. Jetzt könnt ihr euch an der Stelle gleich mal angucken, wer vielleicht C-Sharp benutzt,
aber noch kein Interop mit C-Libraries gemacht hat in C-Sharp. Da könnt ihr euch das angucken,
wie das funktioniert. Da gibt es mittlerweile auch viele Varianten. Mittlerweile ist DLL Import
eigentlich gar nicht mehr angesagt, sondern es ist, glaube ich, Library Import mittlerweile,
was man verwenden soll, weil DLL Import macht Magic zur Runtime und Library Import macht Code
Generation zur Kompilzeit. Also theoretisch ist Library Import schneller als DLL Import,
aber ich habe Library Import noch nie verwendet. Deswegen. So. Also jetzt müssen wir erst einmal
unserem Manage.net Code definieren, wie die Funktion aussieht, die wir in der C-Library
aufrufen wollen. Es ist ja klar, C-Sharp selbst kann direkt keine C-Funktion aufrufen. Man kann
allerdings das definieren und anlegen in C-Sharp und sagen, okay, diese Funktion ist jetzt nicht
hier definiert, sondern in einer anderen Library. Das funktioniert. Direkt im Source Code sagen,
ich will auf eine C-Funktion zugreifen, geht nicht, aber ich kann diese C-Funktion definieren und
sagen, die gibt es und dann eben sagen, wo es die gibt und dann kann ich die aufrufen. Das
funktioniert dann so. WirDomainGetInfo, also Domain, und dann brauchen wir einen Info-Pointer.
MonkaS. Was? Einen WirDomainInfo-Pointer brauchen wir dann. WirDomainInfo. WirDomainInfo. Okay,
das ist wieder ein Struct. Alles klar. Dann machen wir das mal. Das ist ein Struct. Ein Struct,
das sich nennt WirDomainInfo. Was so ein gross geschrieben bliesst. WirDomainInfo mit einem,
jetzt müssen wir aufpassen, mit einem Byte als State. Keinem Pointer, einem normalen Byte. Ich
kann übrigens hier unten abgucken. Man darf sich nicht verarschen lassen, hier im C-Source Code
steht, dass es ein Character ist. Und in C stimmt das auch. In C ist ein Byte und ein Character im
Prinzip das Gleiche. Das ist immer ein Byte. In C Sharp ist das nicht so. In C Sharp ist Byte,
ein Byte und Character sind zwei Byte. Warum? Weil Microsoft sich gedacht hat, ein Character in C
Sharp, also quasi so das Zeichen von einem String, ist zwei Byte groß. Also quasi UTF 16.
Allerdings haben die sich das ausgedacht schon zu Zeiten, da gab es UTF 8 Encoding und sowas
noch nicht. Rust zum Beispiel benutzt UTF 8 und das bedeutet, dass alle Character aktuell zumindest
zwischen einem Byte und vier Bytes sind. Also wir brauchen ein paar Public State. Dann haben wir als
nächstes, das kann man doch so keiner lesen, wie das hier reinkopiert ist. Also als nächstes haben
wir ein Unsigned Long. Ich glaube, das ist Uint. Das reicht an der Stelle. Das ist MaxMem.
Ist das nicht sogar das Gleiche mittlerweile? Ein Int und ein Long in C Sharp? Ach nee, ein Int
ist ein Int 32. Logisch, das andere ist ein Int 64. Ja klar. Long, MaxMem, Used haben wir als nächstes.
Also das nächste ist Memory. CPU Time interessiert mich jetzt mal gar nicht. Das ist ein Unsigned Short.
Sachen, die die Welt nicht braucht. Und dann gibt es CPU Time. Das ist ein Unsigned Long Long.
Was zum Geier ist ein Unsigned... Ist das ein Unsigned Double? Nee, Double ist... Was ist denn Long Long?
128 oder wie? Also Int 128 oder was? Oder wie? Dann muss ich dann Uint machen. Ist das...
Wir benutzen einfach einen Pointer-Typ dafür, dann ist das auch immer... Obwohl, das ist eigentlich auch blöd.
Das ist ja kein Pointer. Okay, was genau, bitteschön, ist ein Unsigned Long Long? 64, ja wie jetzt? Ah,
Uint 64. Also ein U Long quasi. Alles klar. Uint, wunderbar, wunderbar, gut. Excellent,
wir Domain Interf... Moment, soll nicht wir Domain Interface heißen. Das soll wir Domain Info heißen.
Long Long. Gut, das passt so. Unsaved muss hier tatsächlich nichts sein. Und... Moment, wo sind wir?
Da sind wir. Wir Domain Info Pointer auf... Auf nennen, wir Domain Info Objekt und nennt
sich Info. Okay, mal schauen. Pointer-Tour wird Domain Info... Allocated by the user. Okay,
das machen wir. Preis-Champ ist offline, ja, ist er. War gespannt, ob das jetzt funktioniert,
was ich da zusammen gewurstet habe. Okay, also wir fragen jetzt für jede VM ab. Interop,
Info, Get Domain Info, die Connection-Native-Pointer und jetzt... Und jetzt brauchen wir was?
Ein Wir Domain Info... Ein Pointer auf ein Wir Domain Info, Allocated by the user. Okay,
also Wir Domain Info. Gleich... Ja, sowas hier quasi. Und dann die Adresse davon. Das müsste ja
eigentlich funktionieren. So, und jetzt die Adresse von dem Info-Struct. Funktioniert natürlich nicht.
Das wäre auch viel zu einfach, wenn das so gehen würde. So, Pointers can only be used in... Achso,
ja, okay. Lul. Unsave. Das ganze Ding ist unsaved, dass es funktioniert. Okay, wunderbar. Ich gebe
jetzt mal hier nur testweise irgendwas aus. Was ist denn der Return-Code davon? Returns 0 in
case of success, minus 1 in case of failure. Okay, dann geben wir mal das Info aus hier. Gucken wir
mal. Geben wir jetzt einfach mal State aus und Memory und gucken mal, ob das klappt. Neues Terminal
auf CD repos.net run list. Prager. Invalid Domain Pointer. In Wir Domain destroy. Destroy.
Oh. Ups. Ups. Einfach mal alles gelöscht. Easy. Ja, gut, das ist natürlich eine blöde Idee gewesen.
Ja. Hey, aber es ist nicht gecrashed, ja? Okay, jetzt aber. Invalid Domain Pointer.
Ah, Moment. Man soll ja auch... Haha. Ich bin ja auch falsch. Ich übergebe ja auch das Falsche.
Moment, wir haben Followers Only Mode an? Was war denn? Warum haben wir Followers Only Mode an? Wer hat
dann so was gemacht? Was ist denn hier los? 1KS. War oft 10 Minuten. Ja, wundere mich. Ich
habe mich schon gewundert, warum keiner was schreibt. Spambot, vielleicht, ja. So. Oh fuck,
wir machen. Wir machen gerade MMO Kreiselgrind. Die machen MMO Kreiselgrind ohne mich. Da muss
ich jetzt eigentlich hin. Okay, Moment. Zumindest, dass das funktioniert. Invalid Domain...
Zumindest, okay. Das können wir jetzt machen. Wir Domain... Okay, wir brauchen die Domain ID.
Die brauchen wir von der... Ja, die VMID brauchen wir. Genau, VMID. Und dann funktioniert das auch.
Was ist der MMO Kreiselgrind? Der MMO Kreiselgrind. Ich muss PVP machen. Die anderen 5 Leute sind
auch alle am Start. So, das scheint zu funktionieren. PVP nicht. Nicht World of Warcraft PVP. Wir
spielen hier eben... Wir spielen Dark, FreeShard. Spielen wir, ja. Das ist noch deutlich älter als
World of Warcraft. Okay, das funktioniert schon mal. Also, haben wir heute schon was gelernt.
Leider muss ich jetzt MMO Kreiselgrind machen, Leute. Wir sehen uns im nächsten Stream. Da machen wir
dann wirklich was. Ich habe ja heute im Prinzip eineinhalb Stunden geschwätzt und jetzt haben
wir nichts gemacht. Also, Kreiselgrind startet. Ich muss weg. Bis dann. Macht's gut. See you.

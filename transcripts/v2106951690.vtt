WEBVTT

01:34.450 --> 01:37.170
Ist zwingend gelb, mag ich das.

01:38.790 --> 01:39.670
Exzellent, da bin ich.

01:40.030 --> 01:41.370
Sartin Silver, danke für den Sub.

01:43.050 --> 01:44.130
Richtig lange am Start.

01:45.570 --> 01:47.470
Schon länger am Start als 10 Monate, oder?

01:51.160 --> 01:53.840
Vielleicht nicht als Sub, aber du bist schon ziemlich lange am Start.

01:54.300 --> 01:55.920
Zumindest sagt mir der Name was.

01:56.020 --> 02:01.780
Du hast auch schon über 1000 Messages geschrieben, also du musst schon eine Weile am Start sein.

02:08.540 --> 02:10.460
Mai 2023, ja.

02:10.460 --> 02:14.420
Tatsächlich, ja, als Sub warst du vorher nicht auch mal da?

02:15.360 --> 02:18.680
Ja, kommt echt hin.

02:21.300 --> 02:22.680
Exzellent, nicht gedacht.

02:34.990 --> 02:36.450
Kontrollier das jetzt, ob das stimmt.

02:43.170 --> 02:49.250
Ne, da kann man nicht gescheit zurückscrollen, da wirst du verrückt in Twitch, wenn man zurückscrollen will.

02:49.530 --> 02:52.430
Das ist wieder Endless-Scroll-Bullshit, Alter.

02:53.050 --> 02:53.910
Guck ich mir nicht an.

02:54.910 --> 02:55.890
Ich glaub dir das auch so.

03:04.280 --> 03:06.180
Ohne Scheiß, Endless-Scroll.

03:06.320 --> 03:12.500
Das ist eines der bescheuertsten Erfindungen des modernen Web-Developments.

03:17.450 --> 03:20.010
Weiß gar nicht, wer mit diesem Blödsinn angefangen hat.

03:21.650 --> 03:23.790
Ihr wisst alle, was Endless-Scroll ist, oder?

03:24.950 --> 03:27.190
Ich schau mal kurz, ob es Package-Updates gibt.

03:29.010 --> 03:29.570
Moment.

03:47.180 --> 03:47.940
Arch, by the way.

03:48.940 --> 03:50.240
Es gibt wieder mal Updates.

03:50.240 --> 03:53.240
Ich hab heute Morgen mein komplettes System geupdatet, aber...

03:53.980 --> 03:54.840
4 Stunden später gibt's...

03:54.880 --> 03:55.380
...wieder Updates.

03:55.380 --> 03:56.880
Arch, by the way.

03:56.880 --> 04:00.380
Aber man muss sagen, manchmal hab ich Multithreading-Probleme.

04:00.380 --> 04:02.380
Ich denke im Kopf schon, obwohl ich mit dem anderen...

04:02.380 --> 04:07.380
...also, was Neues, obwohl ich mit dem anderen noch nicht fertig bin, mit auszusprechen.

04:07.380 --> 04:09.380
Dann kommen manchmal so komische Sätze bei raus.

04:10.680 --> 04:20.380
Heute Morgen hab ich geupdatet und am Freitag waren die so schnell mit Updates bei Arch-Linux,

04:20.380 --> 04:24.220
dass das theoretisch noch nicht mal ein kaputtenes XC...

04:24.220 --> 04:27.220
...Tools-Package bei mir angekommen ist.

04:27.220 --> 04:32.220
Übrigens, zum Thema XC-Tools, ich zeige euch grad schon mal was aus meinem Docker-File, was ich grad gefunden hab.

04:32.220 --> 04:43.370
Aber das ist nicht schlimm, weil Debian Bookworm, das hat die Probleme nicht.

04:45.370 --> 04:48.370
Oh, was ist denn hier los? Moment, Moment, Moment, Moment.

04:48.370 --> 04:50.370
Kurz, die Musik leiser machen.

04:50.370 --> 04:53.370
Das stimmt ja überhaupt nicht. Ich muss das hier lauter machen.

04:53.370 --> 04:55.370
Jetzt ergibt das das hier lauter und dann...

04:55.370 --> 05:05.010
Weil ansonsten...

05:05.010 --> 05:07.010
...ist das hier zu leise.

05:07.010 --> 05:09.010
So.

05:09.010 --> 05:12.710
Ja, richtig grausam.

05:12.710 --> 05:20.750
Das schlimmste Forum, ich hab's ja schon oft gesagt, Home Assistant Forum, also die Technologie, die die verwenden,

05:20.750 --> 05:24.750
das fuckt mich so ab jedes Mal, wenn ich hier nachgucken muss.

05:24.750 --> 05:26.750
Und ich versteh den Vorteil davon nicht.

05:26.750 --> 05:32.750
Der einzige Vorteil, den ich mir vielleicht noch irgendwie da zusammenfasse, ist, dass...

05:32.750 --> 05:34.750
...Mobile User.

05:34.750 --> 05:38.750
Ja, also zum Beispiel gehen wir mal hier irgendwie auf, was weiß ich, Mobile Apps.

05:38.750 --> 05:41.060
Hier, 46.

05:41.060 --> 05:42.060
So.

05:42.060 --> 05:44.060
Und man kann hier nicht mehr durchscrollen.

05:44.060 --> 05:45.060
Das funktioniert nicht.

05:45.060 --> 05:47.060
Guckt, ihr seht, der lädt immer.

05:47.060 --> 05:48.060
Und dementsprechend...

05:48.060 --> 05:49.060
Ja.

05:49.060 --> 05:50.060
Guckt mal hier.

05:50.060 --> 05:51.060
I used to be able.

05:51.060 --> 05:52.060
Jetzt scroll ich ganz runter.

05:52.060 --> 05:53.060
I used...

05:53.060 --> 05:54.060
Alter, das ist ja noch schlimmer.

05:54.060 --> 05:55.060
Die überschreiben ja...

05:55.060 --> 05:56.060
Ich vergesse es ja immer wieder.

05:56.060 --> 05:57.060
Die überschreiben...

05:57.060 --> 05:58.060
Ja.

05:58.060 --> 05:59.060
Die überschreiben...

05:59.060 --> 06:00.060
Ja.

06:00.060 --> 06:01.060
Ja.

06:01.060 --> 06:02.060
Ja.

06:02.060 --> 06:03.060
Ja.

06:03.060 --> 06:04.060
Ja.

06:04.060 --> 06:07.690
Die überschreiben ja auch Control-F.

06:07.690 --> 06:10.430
Das ist so schrecklich, alter.

06:10.430 --> 06:13.070
Verjavascriptifizierung, Mann.

06:13.070 --> 06:17.190
Vor allem komplett unnötige Verjavascriptifizierung.

06:17.190 --> 06:21.690
Erstens benutzen die gefühlt nur die Hälfte von meinem Bildschirm.

06:21.690 --> 06:27.290
Und das Ding ist halt, es sind 47...

06:27.290 --> 06:30.130
Guckt mal, es sind 47 Posts.

06:30.130 --> 06:31.350
Wo ist denn das Problem, Mann?

06:31.350 --> 06:33.690
Lad den Scheiß halt einmal auf alleine.

06:33.690 --> 06:34.690
Es ist jetzt nicht so...

06:34.690 --> 06:37.330
moderner Client mit 64 GB

06:37.330 --> 06:39.110
RAM, irgendwie von einem Thread

06:39.110 --> 06:41.170
mit 47 Posts, auch wenn die

06:41.170 --> 06:43.110
alle auf einmal geladen wären, irgendwie

06:43.110 --> 06:45.070
überfordert gewesen ist. Guck mal, ich bin schon fertig

06:45.070 --> 06:47.210
durchscrollen. Ich hasse

06:47.210 --> 06:49.190
das, Alter. Das kann ich mir jetzt

06:49.190 --> 06:50.950
mal übelst drüber aufregen, über

06:50.950 --> 06:52.410
solche Webentwicklung,

06:52.610 --> 06:55.470
Webentwicklungstrends.

06:55.730 --> 06:56.770
Discourse, genau, ja.

06:58.150 --> 06:58.550
Diskus,

06:58.790 --> 07:00.850
Discass gibt es auch noch. Das ist

07:00.850 --> 07:02.910
irgend so ein komisches Commentsystem, das ist aber auch kacke.

07:02.910 --> 07:04.710
Okay, so, was ist das deutsche

07:04.710 --> 07:05.870
Tesla-Forum? Okay,

07:06.870 --> 07:09.090
zeig mal, ich war noch nie im deutschen Tesla-Forum.

07:09.490 --> 07:11.390
Das da, TFF-Forum.

07:12.510 --> 07:13.070
Was ist

07:13.070 --> 07:13.710
denn das TFF?

07:14.770 --> 07:15.390
Ach, das

07:15.390 --> 07:17.810
Tesla-Fahrer

07:17.810 --> 07:19.870
und Freunde-Forum.

07:20.430 --> 07:21.230
Alles klar.

07:22.030 --> 07:23.750
Ja, das ist auch hier, das ist

07:23.750 --> 07:24.930
auch Discourse.

07:27.790 --> 07:29.590
Ja, ich wollte schon immer mal einen Cybertruck.

07:30.510 --> 07:31.410
Ja, das ist genau das

07:31.410 --> 07:33.030
gleiche, das ist genau der gleiche Müll.

07:34.610 --> 07:36.550
Ja, das ist, das ist doch, das ist, guck mal,

07:36.610 --> 07:38.270
man sieht es doch hier, das ist genau das gleiche System.

07:40.010 --> 07:40.830
Ich meine mal ehrlich,

07:41.110 --> 07:42.730
diese alten Foren, die es da damals

07:42.730 --> 07:44.730
so gab, so PHP-Bulletin

07:45.330 --> 07:46.750
und, und was nicht alles,

07:47.130 --> 07:48.650
muss man teilweise Lizenzgebühren dafür

07:48.650 --> 07:50.830
zahlen, die waren auch schon ziemlich mies.

07:51.010 --> 07:52.330
Gerade noch aus Zeiten von,

07:52.550 --> 07:54.630
ich weiß schon, weil es PHP und sowas, aber

07:54.630 --> 07:56.490
immerhin, immerhin, ja,

07:56.870 --> 07:58.430
war das halt noch

07:58.430 --> 08:00.150
irgendwie benutzbar.

08:01.530 --> 08:02.730
Weil es halt einfach

08:02.730 --> 08:04.590
den Webbrowser als,

08:04.610 --> 08:06.870
als Web verstanden hat

08:06.870 --> 08:08.910
und nicht versucht, irgendeine komische App draus zu machen.

08:10.150 --> 08:10.810
Alter, da kriege ich

08:10.810 --> 08:11.470
Anfälle bei.

08:15.700 --> 08:18.000
Was machen wir heute? Pepo-Schei, ich zeige euch

08:18.000 --> 08:19.240
was, was ich programmiert habe.

08:20.500 --> 08:22.000
Und dann versuchen wir, den Memory-Leak

08:22.000 --> 08:22.800
drin zu fixen.

08:24.000 --> 08:25.840
Wobei ich mir gar nicht so hundertprozentig

08:25.840 --> 08:26.420
sicher bin,

08:27.320 --> 08:29.920
ob

08:29.920 --> 08:33.380
ich überhaupt einen Memory-Leak

08:33.380 --> 08:35.300
hab. Moin Patrick, danke schön für den

08:35.300 --> 08:36.940
Sub. Bonjour.

08:36.940 --> 08:38.940
Oh, poor girls, Alter.

08:38.940 --> 08:40.940
Ich glaube,

08:40.940 --> 08:42.940
ich glaube, ich muss eine andere Musik anmachen.

08:42.940 --> 08:44.940
Ich glaube, ich glaube, dass ich eins habe.

08:44.940 --> 08:46.940
Ich bin aber so hundertprozentig...

08:46.940 --> 08:48.940
Ups, oh, Weeb-Musik, Leute!

08:48.940 --> 08:53.540
Endlich!

08:53.540 --> 09:01.390
Ayaya!

09:01.390 --> 09:03.390
Okay, genug. Genug Weeb-Musik.

09:03.390 --> 09:05.390
Aber zwischendurch muss das

09:05.390 --> 09:07.390
mal sein. Was machen wir denn an?

09:07.390 --> 09:09.390
Nicht von heute Morgen... Was haben wir denn hier?

09:09.390 --> 09:11.390
Just...

09:11.390 --> 09:17.780
Können wir nicht hier irgendwo

09:17.780 --> 09:28.310
ein bisschen... Was machen wir denn?

09:28.310 --> 09:30.310
Was machen wir denn mal an?

09:30.310 --> 09:32.310
Epic Chillstep

09:32.310 --> 09:36.330
Collection.

09:36.330 --> 09:38.330
Weiß er nicht.

09:38.330 --> 09:40.330
Ich hab auch einfach,

09:40.330 --> 09:42.330
ehrlich gesagt,

09:42.330 --> 09:44.330
viel zu viel Zeug

09:44.330 --> 09:46.330
auf. Ich find hier gar nichts mehr.

09:46.330 --> 10:01.800
Christmas Special

10:01.800 --> 10:03.800
Music. Ich glaube, das

10:03.800 --> 10:05.800
können wir uns doch...

10:05.800 --> 10:07.800
Komm, wir machen jetzt hier

10:07.800 --> 10:09.800
Epic Chillstep Collection, meinetwegen. Hauptsache...

10:09.800 --> 10:11.800
Woop, woop, woop, woop!

10:11.800 --> 10:13.800
Ja, da weißt du schon gleich Bescheid.

10:13.800 --> 10:15.800
Da Call of Duty

10:15.800 --> 10:17.800
Modern Warfare 2 2009

10:17.800 --> 10:19.800
will die

10:19.800 --> 10:27.660
Quickscope-Montage wieder haben.

10:27.660 --> 10:29.660
Doom Eternal Musik.

10:36.230 --> 10:38.230
Es gibt...

10:38.230 --> 10:40.230
Was ich auch...

10:40.230 --> 10:42.230
Also, welchen Game-Soundtrack ich auch

10:42.230 --> 10:44.230
mag, ist...

10:44.230 --> 10:46.230
Oh, wie hieß das?

10:46.230 --> 10:50.250
Jetzt hab ich schon wieder ganz vergessen.

10:50.250 --> 10:52.250
Ah, ja, genau, genau, hier.

10:52.250 --> 10:56.580
Ich auch.

10:56.580 --> 10:58.580
Den Soundtrack find ich auch nice.

10:58.580 --> 11:00.580
Wobei, da muss ich auch...

11:00.580 --> 11:02.580
Da rennen mir die Leute gleich weg.

11:02.580 --> 11:13.770
Aber...

11:13.770 --> 11:15.770
Das Game hat einen ultrageilen Soundtrack, wenn man auf so Musik

11:15.770 --> 11:29.640
steht.

11:29.640 --> 11:31.640
Aber...

11:31.640 --> 11:33.640
Ich gette, dass es nicht für jeden was ist.

11:33.640 --> 11:35.640
Ich mag so...

11:35.640 --> 12:03.340
Musikstells.

12:03.340 --> 12:05.340
Ich war ja schon auf einigen Heavy-Metal...

12:05.340 --> 12:07.340
Bei einigen Heavy-Metal-Bands auf

12:07.340 --> 12:09.340
Konzert.

12:09.340 --> 12:11.340
Ich wollte immer mal früher schon zu Iced Earth

12:11.340 --> 12:13.340
gehen, falls ihr die kennt. Das Problem ist nur,

12:13.340 --> 12:15.340
mittlerweile könnte ich das machen,

12:15.340 --> 12:17.340
aber ich kann das nicht mehr machen,

12:17.340 --> 12:19.340
weil die haben sich aufgelöst.

12:19.340 --> 12:21.340
Weil der Gitarrist irgendwie

12:21.340 --> 12:23.340
damals dabei war, als die

12:23.340 --> 12:25.340
nach der letzten US-Wahl,

12:25.340 --> 12:27.340
da wo Trump nicht mehr gewählt wurde,

12:27.340 --> 12:29.340
das Capitol gestürmt haben.

12:29.340 --> 12:31.340
Da war der mit dabei und wurde irgendwie verurteilt

12:31.340 --> 12:38.170
und da hat sich die Band aufgelöst.

12:38.170 --> 12:40.170
Aber die hätte ich mir auch mal... Aber, gut.

12:40.170 --> 12:42.170
Früher hätte ich mir die gerne angeguckt.

12:42.170 --> 12:44.170
Mittlerweile muss ich sagen, die neueren Sachen

12:44.170 --> 12:46.170
gefallen mir nicht mehr ganz so gut.

12:46.170 --> 12:48.170
Wobei, so viel Neueres gibt's ja auch gar nicht mehr.

12:48.170 --> 12:52.760
Okay.

12:52.760 --> 12:54.760
Ich mach mal wieder was. Brauchen wir irgendwas

12:54.760 --> 12:56.760
Entspannendes? Ja, hier, komm. Wupp, wupp, wupp.

12:56.760 --> 13:08.650
Gucken wir mal, ob die Lautstärke passt.

13:08.650 --> 13:10.650
Ja. Wupp, wupp, wupp,

13:10.650 --> 13:12.650
wupp, wupp, wupp, wupp, wupp, wupp, wupp, wupp, wupp.

13:12.650 --> 13:16.020
Subnautica-Musik

13:16.020 --> 13:18.020
zum... Den Soundtrack kenn ich gar nicht.

13:18.020 --> 13:20.020
Ich würde jetzt allerdings

13:20.020 --> 13:22.020
mit

13:22.020 --> 13:24.020
Wasser und so in Verbindung bringen

13:24.020 --> 13:26.020
und nicht so super...

13:26.020 --> 13:28.020
...entspannend

13:28.020 --> 13:33.450
für mich.

13:33.450 --> 13:47.580
Das ist nix für mich.

13:47.580 --> 13:49.580
Ne, das ist nix für mich.

13:49.580 --> 13:51.580
Das hört sich so sehr nach Tiefsee und U-Boot an.

13:53.580 --> 13:55.580
Das ist nix, ne.

13:55.580 --> 13:57.580
Ich hab's nicht so mit tiefem Wasser.

13:57.580 --> 13:59.580
Das hab ich euch ja schon ein paarmal erzählt.

13:59.580 --> 14:01.580
Alles, was nach

14:01.580 --> 14:03.580
tiefem Wasser klingt,

14:03.580 --> 14:05.580
mag ich nicht.

14:05.580 --> 14:09.460
Ah, Redis-Stells, okay.

14:09.460 --> 14:11.460
Wahlgesänge, ne, ne. So was mag ich alles nicht.

14:11.460 --> 14:13.460
Was ich...

14:18.950 --> 14:23.930
Okay.

14:23.930 --> 14:25.930
Haftbefehl würde ich tatsächlich anmachen.

14:25.930 --> 14:27.930
Das Problem ist, dass es enorm

14:27.930 --> 14:29.930
monkatos ist. Das kann ich mir auch nicht den ganzen Tag

14:29.930 --> 14:33.620
anhören.

14:33.620 --> 14:35.620
Das kann ich mir just for fun einmal anhören

14:35.620 --> 14:37.620
und dann muss ich erst mal zwei Wochen Pause

14:37.620 --> 14:39.620
machen.

14:39.620 --> 14:41.620
Das... Da kriegst du schon ein bisschen Gehirnschaden

14:41.620 --> 14:43.620
bei. Aber trotzdem, ab und zu

14:43.620 --> 14:51.540
ist das ganz nice.

14:51.540 --> 14:53.540
Ups.

14:53.540 --> 14:55.540
Lange nix mehr gehört. Das letzte, was ich von Haftbefehl gehört

14:55.540 --> 14:57.540
hab in irgendwelchen News, ist, dass er sich aus Versehen

14:57.540 --> 14:59.540
ins Bein geschossen hat oder in den Fuß geschossen

14:59.540 --> 15:01.540
hat oder sowas.

15:01.540 --> 15:03.540
Keine Ahnung.

15:03.540 --> 15:05.540
Mega Gangster.

15:05.540 --> 15:10.390
So.

15:10.390 --> 15:18.380
Also das letzte Konzert, auf dem ich war,

15:18.380 --> 15:20.380
war tatsächlich

15:20.380 --> 15:22.380
vor zwei Jahren Iron Maiden

15:22.380 --> 15:24.380
in Frankfurt. Zum zweiten Mal schon.

15:24.380 --> 15:26.380
Und der Sound war genau...

15:26.380 --> 15:28.380
Diesmal war es im Stadion,

15:28.380 --> 15:30.380
nicht in der Messehalle, aber übelst mit

15:30.380 --> 15:32.380
das verstehst nichts, ja.

15:32.380 --> 15:34.380
Und

15:34.380 --> 15:36.380
da hab ich mit Corona angefangen.

15:36.380 --> 15:38.380
Ja.

15:38.380 --> 15:40.380
Danach war ich nirgendwo mehr.

15:40.380 --> 15:44.260
Ich wollte...

15:44.260 --> 15:46.260
Wobei, kann ich

15:46.260 --> 15:48.260
doch vielleicht noch...

15:48.260 --> 15:50.260
Vielleicht hab ich das doch nicht verpasst. Moment.

15:50.260 --> 15:55.940
Oder war das schon letztes

15:55.940 --> 16:04.950
Jahr? Gibt gar nicht Frankfurt, oder?

16:04.950 --> 16:08.650
Ah, das war letztes

16:08.650 --> 16:10.650
Jahr im Sommer. Shit.

16:10.650 --> 16:12.650
Ja, das hab ich komplett verpeilt.

16:12.650 --> 16:14.650
Da wär ich auch gerne hin.

16:14.650 --> 16:16.650
Heh.

16:16.650 --> 16:18.650
Das war letztes Jahr schon.

16:18.650 --> 16:22.980
Ja, das hab ich verpeilt.

16:22.980 --> 16:24.980
Blind Guardian hab ich früher rauf und runter gehört.

16:24.980 --> 16:26.980
Da ist aber auch so...

16:26.980 --> 16:28.980
Ich weiß nicht, ich komm mir selbst übelst

16:28.980 --> 16:30.980
Boomer vor, wenn ich dann immer sag,

16:30.980 --> 16:32.980
ja, aber die neueren Sachen sind nicht mehr so meins.

16:32.980 --> 16:34.980
Der Sound von denen hat sich gar nicht großartig geändert.

16:34.980 --> 16:36.980
Aber ich weiß nicht.

16:36.980 --> 16:38.980
Wobei das letzte Album teilweise wieder ein paar richtig nice

16:38.980 --> 16:40.980
Sachen dabei hat von Blind Guardian, aber

16:40.980 --> 16:42.980
so im Großen und Ganzen haben mich die letzten

16:42.980 --> 16:44.980
Sachen nicht so extrem abgeholt, ja.

16:44.980 --> 16:46.980
Aber dafür sind die älteren

16:46.980 --> 16:54.650
Sachen ultra nice.

16:54.650 --> 16:56.650
Also für mich das beste

16:56.650 --> 16:58.650
Heavy Metal Album

16:58.650 --> 17:00.650
bisher dieses Jahr, oder war das

17:00.650 --> 17:02.650
Ende letzten Jahres? Ist glaube ich schon ein bisschen raus.

17:02.650 --> 17:04.650
Was ich sehr oft gehört hab

17:04.650 --> 17:06.650
und was ich auch immer wieder

17:06.650 --> 17:08.650
hören kann, wenn man auf Power Metal

17:08.650 --> 17:12.150
steht, hier. Das da.

17:14.150 --> 17:16.150
Mega.

17:16.150 --> 17:18.150
Man darf nicht abgeschreckt sein

17:18.150 --> 17:20.150
von, dass das etwas

17:20.150 --> 17:24.170
over the top ist alles.

17:24.170 --> 17:26.170
Ach ne, letztes Jahr im Sommer, ja.

17:26.170 --> 17:28.170
Das hat mir

17:28.170 --> 17:30.170
glaube ich von allen Sachen, die ich letztes Jahr

17:30.170 --> 17:32.170
neu erschienen sind, nicht gehört hab,

17:32.170 --> 17:34.170
am besten gefallen.

17:34.170 --> 17:36.170
Zumindest das, was mir das

17:36.170 --> 17:38.170
als erstes in den Kopf kommt, ja.

17:38.170 --> 17:40.170
Also

17:40.170 --> 17:42.170
wer Power Metal mag und das noch nicht gehört

17:42.170 --> 17:44.170
hat, sollte sich das unbedingt mal anhören.

17:44.170 --> 17:46.170
Das ist extremly nice.

17:46.170 --> 17:48.170
Wir können leider nichts

17:48.170 --> 17:50.170
hören im Stream bei MonkaTos.

17:50.170 --> 17:54.060
Aber da sind so Titel dabei

17:54.060 --> 17:56.060
wie

17:56.060 --> 17:58.060
Moment.

17:58.060 --> 18:00.060
Ähm.

18:02.060 --> 18:04.060
Und der Titel, ja.

18:04.060 --> 18:06.060
Da sind so Lieder dabei wie mit dem Titel

18:06.060 --> 18:08.060
Holy Flaming Hammer of

18:08.060 --> 18:10.060
Unholy Cosmic Frost.

18:10.060 --> 18:12.060
Alles klar, ja.

18:12.060 --> 18:14.060
Der Titel klingt schon

18:14.060 --> 18:16.060
so unglaublich bescheuert und so ist das auch.

18:16.060 --> 18:20.070
Ja, beste.

18:20.070 --> 18:22.070
Ja.

18:22.070 --> 18:24.070
Beste.

18:24.070 --> 18:26.070
Die, also zu dieser

18:26.070 --> 18:28.070
Zeit, ja, zu dieser Zeit

18:28.070 --> 18:30.070
haben die extrem viel geile Songs

18:30.070 --> 18:32.070
gemacht von Blind Guardian.

18:32.070 --> 18:34.070
Da konntest du dir fast alles

18:34.070 --> 18:40.330
anhören. Ja.

18:40.330 --> 18:42.330
Da hast du das Gefühl,

18:42.330 --> 18:44.330
die haben aus dem Ärmel geschüttelt

18:44.330 --> 18:46.330
ein geiles Ding nach dem anderen

18:46.330 --> 18:48.330
rausgehauen, so. Ohne, dass sie's groß anstrengt.

18:48.330 --> 18:58.420
Und die, die waren halt

18:58.420 --> 19:00.420
auch zur richtigen Zeit am richtigen Ort, ne.

19:00.420 --> 19:02.420
Da kam auch grade dann, bisschen später

19:02.420 --> 19:04.420
kam die, kam die

19:04.420 --> 19:06.420
Herr-der-Ringe-Verfilmung und sowas. Da hat das natürlich

19:06.420 --> 19:08.420
ultra gut dazu gepasst.

19:08.420 --> 19:10.420
Das basiert ja alles auf, auf Mittelerde.

19:10.420 --> 19:22.630
Lore. Ist auch nicht

19:22.630 --> 19:27.800
übel.

19:27.800 --> 19:29.800
Es gibt ja manchmal so Konzerte.

19:29.800 --> 19:31.800
So Gaming-Symphonie,

19:31.800 --> 19:35.370
oder sowas.

19:35.370 --> 19:47.830
Gibt's ja ab und zu.

19:47.830 --> 19:49.830
Ist Nickelback nicht die Meme-Band, die

19:49.830 --> 19:51.830
äh, angeblich total kacke ist?

19:51.830 --> 19:53.830
Oder alles, alles besser als Nickelback

19:53.830 --> 19:55.830
oder sowas? Wo ich immer nicht weiß, wo das

19:55.830 --> 19:57.830
herkommt.

19:57.830 --> 19:59.830
Also ich find, man kann sich

19:59.830 --> 20:01.830
da schon einige Sachen von anhören. Das ist

20:01.830 --> 20:03.830
halt so...

20:03.830 --> 20:07.400
Ja. Wenn du nicht richtig

20:07.400 --> 20:09.400
zuhören willst und trotzdem ordentliche Musik

20:09.400 --> 20:11.400
im Hintergrund laufen lassen willst, kannst du Nickelback

20:11.400 --> 20:13.400
anmachen. Also Nickelback ist nix, wo ich jetzt

20:13.400 --> 20:15.400
rein zum

20:15.400 --> 20:17.400
richtig aktiv zuhören

20:17.400 --> 20:25.380
anmachen würde.

20:25.380 --> 20:27.380
Ja gut, Blind Guardian kann

20:27.380 --> 20:29.380
gefühlt eh jeder, der da ist,

20:29.380 --> 20:31.380
den Kram auswendig singen. Wobei ich sagen

20:31.380 --> 20:33.380
müsste, bei den neueren Sachen bin ich

20:33.380 --> 20:35.380
aufgeschmissen, ja? Die kann ich auch nicht.

20:35.380 --> 20:50.280
Okay.

20:50.280 --> 20:52.280
So.

20:52.280 --> 20:54.280
Genug rumphilosophiert.

20:54.280 --> 20:56.280
Jetzt suchen wir mal unser Memory-Leak.

20:56.280 --> 21:00.170
Ich zeige euch aber erst mal,

21:00.170 --> 21:02.170
was ich die letzten

21:02.170 --> 21:04.170
Zeiten, die letzten

21:04.170 --> 21:06.170
drei Tage Broggers-Stells

21:06.170 --> 21:08.170
gemacht hab.

21:08.170 --> 21:10.170
Wir haben ja vor einer Weile im Stream

21:10.170 --> 21:12.170
schon mal

21:12.170 --> 21:14.170
ein bisschen hier an dieser

21:14.170 --> 21:16.170
Webcam-Geschichte gebaut.

21:16.170 --> 21:18.170
Aber das hat nicht richtig

21:18.170 --> 21:20.170
funktioniert. Es lag, so dumm es

21:20.170 --> 21:22.170
klingt, an Rust, dass es nicht richtig funktioniert

21:22.170 --> 21:24.170
hat. Jetzt werden natürlich die ganzen

21:24.170 --> 21:26.170
Krustentiere sagen, was?

21:26.170 --> 21:28.170
Kann überhaupt nicht sein.

21:28.170 --> 21:30.170
Rust is blazingly fast und das beste

21:30.170 --> 21:32.170
ever. Und denen muss ich

21:32.170 --> 21:34.170
sagen, doch.

21:34.170 --> 21:36.170
Es hat an Rust gelegen.

21:36.170 --> 21:38.170
Ganz korrekt müsste

21:38.170 --> 21:40.170
man allerdings sagen, es hat nicht direkt

21:40.170 --> 21:42.170
an Rust selbst gelegen, sondern

21:42.170 --> 21:44.170
an der Library,

21:44.170 --> 21:46.170
die in Rust programmiert ist. An der

21:46.170 --> 21:48.170
WebRTC Library, die in Rust programmiert ist.

21:48.170 --> 21:50.170
Die machen da irgendeinen komischen

21:50.170 --> 21:52.170
Mist, dass es nicht funktioniert.

21:52.170 --> 21:54.170
Auf iOS so gut wie gar nicht. Weiß nicht, was da machen.

21:54.170 --> 21:56.170
Und auf dem Desktop hat's

21:56.170 --> 21:58.170
auch seine laggy

21:58.170 --> 22:00.170
Probleme. Ich glaube,

22:00.170 --> 22:02.170
ich weiß, was das Problem ist. Allerdings

22:02.170 --> 22:04.170
weiß ich nicht, wie ich's fixen kann.

22:04.170 --> 22:06.170
Und am Source Code hab ich auch keinen Bock

22:06.170 --> 22:08.170
rumzuschrauben. Ich glaube,

22:08.170 --> 22:10.170
der Packetizer,

22:10.170 --> 22:12.170
der die

22:12.170 --> 22:14.170
einzelnen Videopakete

22:14.170 --> 22:16.170
verschickt, der macht das nicht in der richtigen

22:16.170 --> 22:18.170
Reihenfolge. Und deswegen ruckelt das.

22:18.170 --> 22:20.170
Was auch daran

22:20.170 --> 22:22.170
liegen könnte, dass FFmPack

22:22.170 --> 22:24.170
die Timestamps ausliest

22:24.170 --> 22:26.170
von den Kameras, die ich habe.

22:26.170 --> 22:28.170
Und die Kameras sind halt billige China-Chinesen

22:28.170 --> 22:30.170
Kameras. Da ist die RTSP

22:30.170 --> 22:32.170
Implementierung ein bisschen schrottig und die

22:32.170 --> 22:34.170
Timestamps stimmen nicht. Aber wenn man einfach die Sachen

22:34.170 --> 22:36.170
ausliest und stur anzeigt, so wie sie

22:36.170 --> 22:38.170
reinkommen, funktioniert's ziemlich gut.

22:38.170 --> 22:40.170
Nein, nein, nein, nein.

22:40.170 --> 22:42.170
Das Backend für eine Web-Anwendung

22:42.170 --> 22:44.170
Das WebRTC Backend

22:44.170 --> 22:46.170
einer Web-Anwendung in Rust

22:46.170 --> 22:48.170
und das funktioniert nicht richtig mit iOS

22:48.170 --> 22:50.170
mit Safari.

22:50.170 --> 22:53.990
iOS Safari. Und ich

22:53.990 --> 23:07.860
hab keine Ahnung warum. Safari ist

23:07.860 --> 23:09.860
sowieso Schrott. Das ändert

23:09.860 --> 23:11.860
nichts daran, dass man

23:11.860 --> 23:13.860
es braucht, weil Safari ist das

23:13.860 --> 23:15.860
einzige, was es unter iOS gibt.

23:15.860 --> 23:17.860
Also sprich, wenn, ja Safari

23:17.860 --> 23:19.860
ist Schrott, gäbe ich dir recht, aber du hast keine Chance

23:19.860 --> 23:21.860
an Safari vorbeizukommen ohne iOS.

23:21.860 --> 23:23.860
Die andere Chance wäre iOS

23:23.860 --> 23:25.860
auszulassen und das ist, weil nachdem

23:25.860 --> 23:27.860
ich das ja tatsächlich einzeln für mich

23:27.860 --> 23:29.860
programmiere, weil ich meine Webcams

23:29.860 --> 23:31.860
im Browser ordentlich anzeigen will.

23:31.860 --> 23:33.860
Ja, aber

23:33.860 --> 23:35.860
es ist immer noch so.

23:35.860 --> 23:37.860
Ja, aber es gibt noch keinen anderen Browser

23:37.860 --> 23:41.300
für iOS. Zumindest

23:41.300 --> 23:43.300
ich zeige euch mal, was ich gebaut hab. Dazu brauchen wir

23:43.300 --> 23:45.300
aber ein bisschen Tests. Also, ich hab das

23:45.300 --> 23:47.300
hier weiterentwickelt. Ich hab Rust rausgeschmissen,

23:47.300 --> 23:49.300
die Sachen wieder in Go gemacht und das Backend

23:49.300 --> 23:51.300
in C-Sharp. Ich hab das hier mal

23:51.300 --> 23:53.300
geklont. Also, was man damit machen kann, ist

23:53.300 --> 23:55.300
folgendes. Ich starte das jetzt

23:55.300 --> 23:57.300
einfach mal und da gucken wir

23:57.300 --> 23:59.300
uns das Ganze an.

23:59.300 --> 24:01.300
Oh, nee, kann ich nicht. Ich kann den Container

24:01.300 --> 24:03.300
glaube ich nicht bauen.

24:03.300 --> 24:05.300
Ich hab zum Testen Dogger-Container,

24:05.300 --> 24:07.300
dass ich weiß, dass meine Dependency

24:07.300 --> 24:09.300
und so alle da sind. Ich glaube, das funktioniert

24:09.300 --> 24:11.300
nicht, weil ich noch kein Config-File

24:11.300 --> 24:18.900
erstellt habe,

24:18.900 --> 24:20.900
was ich dann versuche reinzumappen.

24:20.900 --> 24:22.900
In den Dogger-Container.

24:22.900 --> 24:24.900
Oh, XZ-Hotels, Leute!

24:26.900 --> 24:28.900
Jetzt vorbei. Hackerman

24:28.900 --> 24:30.900
ist drinne. Seid ihr auch schon

24:30.900 --> 24:45.290
da? I'm in? Okay, gut.

24:45.290 --> 24:47.290
Configuration-File

24:47.290 --> 24:49.290
config.json was not found.

24:49.290 --> 24:51.290
It's not optional. Ja, okay.

24:51.290 --> 24:53.290
Config.json

24:53.290 --> 24:55.290
Ich kopiere mir mal

24:55.290 --> 24:57.290
was rüber, dass ich das jetzt hier nicht neu machen muss.

24:57.290 --> 24:59.290
Also, config-Datei.

24:59.290 --> 25:01.290
Sieht so aus.

25:01.290 --> 25:03.290
Das muss weg. Also, mein

25:03.290 --> 25:05.290
Team definiert, welche Kamera-Webcam-Sourcen

25:05.290 --> 25:07.290
man abgreifen will. Hier mit einer

25:07.290 --> 25:09.290
URL gibt dem Ding einen Namen und man kann

25:09.290 --> 25:11.290
auch einen Cooldown einstellen, wenn das mal einen

25:11.290 --> 25:13.290
Lesefehler hat. Wie lange er wartet, bis er

25:13.290 --> 25:15.290
reconnectet. Das ist ganz wichtig, weil

25:15.290 --> 25:17.290
ich hab

25:17.290 --> 25:19.290
sehr viele billig China-Chinesen

25:19.290 --> 25:21.290
Webcams. Nicht Webcams.

25:21.290 --> 25:23.290
Falsche Kameras. Überwachungskameras hier.

25:23.290 --> 25:25.290
Und die sind halt alle ein bisschen

25:25.290 --> 25:27.290
schwachbrüstig. Dafür billig.

25:27.290 --> 25:29.290
Und wenn man da zu oft hintereinander reconnectet,

25:29.290 --> 25:31.290
dann ist der alte Stream noch nicht

25:31.290 --> 25:33.290
richtig geschlossen, obwohl er abgebrochen ist. Und dann

25:33.290 --> 25:35.290
der neue Stream braucht doppelt Ressourcen.

25:35.290 --> 25:37.290
Ganz weird. Deswegen

25:37.290 --> 25:39.290
5 Sekunden reconnect ist ein bisschen

25:39.290 --> 25:41.290
klein. Deswegen sollte man eher

25:41.290 --> 25:43.290
62 Sekunden oder irgendwie sowas machen.

25:43.290 --> 25:45.290
Wir machen jetzt mal 5, weil wir müssen lokal

25:45.290 --> 25:47.290
einen RTSP-Server starten. Wenn ich das Ding

25:47.290 --> 25:49.290
jetzt hier starte, jetzt kann ich es zumindest mal

25:49.290 --> 25:51.290
ausführen, dann seht ihr,

25:51.290 --> 25:53.290
was ihr nicht seht.

25:53.290 --> 25:57.110
Ups. Onfig, Jason.

25:57.110 --> 25:59.110
Oh, bin ich pepega und hab hardcoded

25:59.110 --> 26:01.110
Fahrt rein. Home, Max, Repos.

26:01.110 --> 26:03.110
Ah.

26:03.110 --> 26:05.110
Das Ding heißt Hemdchamp

26:05.110 --> 26:07.110
2 hier. Es ist aber auch

26:07.110 --> 26:09.110
äußerst pepega, das so in ein Skript

26:09.110 --> 26:11.110
zu schreiben, aber ist mir egal. Es muss nur bei mir

26:11.110 --> 26:18.780
lokal laufen. Oh, ich hab

26:18.780 --> 26:20.780
einen Fehler in meinem JSON-File. Kann das sein?

26:20.780 --> 26:25.880
Wo ist denn hier ein Fehler?

26:25.880 --> 26:29.700
Seht ihr da einen Fehler? Wo ist denn da ein

26:29.700 --> 26:31.700
Fehler? Ich seh da keinen. Ah!

26:31.700 --> 26:33.700
Dingsfe... äh, nicht

26:33.700 --> 26:35.700
Klammer. Hier.

26:35.700 --> 26:37.700
Array schließen.

26:37.700 --> 26:39.700
Fehlt.

26:39.700 --> 26:41.700
Okay. Run. Brake.

26:41.700 --> 26:43.700
Jetzt funzt es. Okay. Ist gestartet.

26:43.700 --> 26:45.700
Wenn ich jetzt auf localhost

26:45.700 --> 26:47.700
port 8044

26:47.700 --> 26:49.700
gehe, dann kommt ihr auf die

26:49.700 --> 26:51.700
Webseite. Die

26:51.700 --> 26:53.700
macht nicht viel, außer einen Videoplayer anzuzeigen.

26:53.700 --> 26:55.700
Und hier würde man jetzt normalerweise

26:55.700 --> 26:57.700
das Bild von der Überwachungskamera

26:57.700 --> 26:59.700
sehen.

26:59.700 --> 27:01.700
Nachdem ich ja hier noch gerade, was er auch

27:01.700 --> 27:03.700
versucht hier hin zu connecten,

27:03.700 --> 27:05.700
nachdem ich noch keinen

27:05.700 --> 27:07.700
nach keinem Server gestartet

27:07.700 --> 27:09.700
hab lokal, der eine Webcam simuliert

27:09.700 --> 27:11.700
oder eine Überwachungskamera simuliert,

27:11.700 --> 27:13.700
zeigt er hier nichts an. Deswegen muss ich das gleich mal machen.

27:13.700 --> 27:15.700
Aber man sieht ja schon eine Sache, die ich

27:15.700 --> 27:17.700
eingebaut hab, was wirklich

27:17.700 --> 27:19.700
ohne Mist nicht einfach

27:19.700 --> 27:21.700
war. Ich zeige euch das mal.

27:21.700 --> 27:23.700
Und wer ein Problem mit FFmpeg hat, oder

27:23.700 --> 27:25.700
öfters mit FFmpeg arbeitet,

27:25.700 --> 27:27.700
aufgepasst. Das könntet ihr auch gebrauchen.

27:27.700 --> 27:29.700
Warum starte ich das

27:29.700 --> 27:31.700
überhaupt so? Der letzte

27:31.700 --> 27:33.700
Kacknoob, alter. Gehen hier rein.

27:33.700 --> 27:35.700
Und sagen hier, Rider.

27:35.700 --> 27:37.700
Punkt. Starten.

27:37.700 --> 27:39.700
Wobei Rider im Background ist immer so eine Sache,

27:39.700 --> 27:41.700
das spammt die ganze Zeit rum wie verrückt.

27:41.700 --> 27:43.700
Naja. Wollen wir mal

27:43.700 --> 27:45.700
auf. Ja, guck hier.

27:45.700 --> 27:47.700
Seht ihr schon? Rider ist wieder heftig am

27:47.700 --> 27:51.980
rumspammen. Spamchamp.

27:51.980 --> 27:53.980
Also, was man hier in dem

27:53.980 --> 27:55.980
Output gesehen hat, ist

27:55.980 --> 27:57.980
Ich lass es nochmal laufen.

27:57.980 --> 27:59.980
Ohne, dass es sich zu einer Kamera

27:59.980 --> 28:01.980
connecten kann. Man sieht hier FFmpeg

28:01.980 --> 28:03.980
Fehler. Guckt mal.

28:03.980 --> 28:05.980
Hier, FFmpeg Fehler.

28:05.980 --> 28:07.980
Und

28:07.980 --> 28:09.980
das ist

28:09.980 --> 28:11.980
eine, das hier ist die eigentliche

28:11.980 --> 28:13.980
Fehlermeldung von FFmpeg.

28:13.980 --> 28:15.980
Ja.

28:15.980 --> 28:17.980
Wobei, ha, ne.

28:17.980 --> 28:19.980
Das stimmt nicht. Ich hab euch Mist erzählt.

28:19.980 --> 28:23.740
An der Stelle sieht man das noch gar nicht.

28:23.740 --> 28:25.740
An der Stelle

28:25.740 --> 28:27.740
da muss ich tatsächlich erstmal

28:27.740 --> 28:29.740
einen Server Service, einen RTSP Service

28:29.740 --> 28:31.740
starten. Ich tu jetzt mal so,

28:31.740 --> 28:33.740
als läuft bei mir lokal eine Webcam.

28:33.740 --> 28:39.350
Ja, hier. Hier hat

28:39.350 --> 28:41.350
man es gesehen. Also, guckt mal.

28:41.350 --> 28:43.350
Das ist ein FFmpeg Fehler an der Stelle.

28:43.350 --> 28:45.350
Normalerweise sieht der FFmpeg

28:45.350 --> 28:47.350
Fehler genau so aus. Und du weißt

28:47.350 --> 28:49.350
nicht um was es geht.

28:49.350 --> 28:51.350
Und ich hab jetzt eine Custom FFmpeg

28:51.350 --> 28:53.350
Logging, tja, wie nennt man das?

28:53.350 --> 28:55.350
Extension Custom Callback

28:55.350 --> 28:57.350
programmiert, der unter anderem

28:57.350 --> 28:59.350
anzeigt, von wo

28:59.350 --> 29:01.350
eigentlich der Fehler kommt.

29:01.350 --> 29:03.350
Und jetzt passt mal auf, das ist wirklich

29:03.350 --> 29:05.350
so krass durch die Brust ins Auge,

29:05.350 --> 29:07.350
wo man sich wieder fragt,

29:07.350 --> 29:09.350
wer hat sich das ausgedacht?

29:09.350 --> 29:11.350
So, hier.

29:11.350 --> 29:18.760
Das da.

29:18.760 --> 29:20.760
Äh, wo geht's los? Hier.

29:20.760 --> 29:22.760
Hier.

29:22.760 --> 29:24.760
Das da.

29:24.760 --> 29:26.760
Das ist die Custom FFmpeg

29:26.760 --> 29:28.760
Logging Funktion. Und jetzt haltet

29:28.760 --> 29:30.760
euch fest, ich hab keine Ahnung,

29:30.760 --> 29:32.760
wer dachte, das ist ne gute Idee.

29:32.760 --> 29:34.760
Es ist auch überhaupt nicht richtig dokumentiert.

29:34.760 --> 29:36.760
Du findest dazu nix.

29:36.760 --> 29:38.760
Oder wenig.

29:38.760 --> 29:40.760
Zumindest, wenn man FFmpeg

29:40.760 --> 29:42.760
nicht den Standard, das Standard

29:42.760 --> 29:44.760
Logging von FFmpeg verwenden will,

29:44.760 --> 29:46.760
kann man eine eigene

29:46.760 --> 29:48.760
Funktion setzen, mit

29:48.760 --> 29:50.760
dem, also man sagt,

29:50.760 --> 29:52.760
AVLogSetCallback und dem muss man dann

29:52.760 --> 29:54.760
quasi eine Funktion übergeben.

29:54.760 --> 29:56.760
An die FFmpeg, die Logs schickt.

29:56.760 --> 29:58.760
Anstatt, äh, default auf die,

29:58.760 --> 30:00.760
auf die, äh, ins Terminal.

30:00.760 --> 30:02.760
Aber,

30:02.760 --> 30:04.760
wer jetzt denkt, ja ist doch easy, haust da nen Callback

30:04.760 --> 30:06.760
rein, sagst, äh,

30:06.760 --> 30:08.760
print line und so und dann ist's gut. Nein.

30:08.760 --> 30:10.760
So einfach ist es natürlich nicht. Also.

30:10.760 --> 30:12.760
Als erstes braucht diese

30:12.760 --> 30:14.760
Funktion erstmal super

30:14.760 --> 30:16.760
obskure Parameter, wo

30:16.760 --> 30:18.760
keiner so genau weiß,

30:18.760 --> 30:20.760
was die, was die machen. Ja?

30:20.760 --> 30:22.760
Wenn wir jetzt hier mal gucken danach, uns die Hilfe

30:22.760 --> 30:24.760
anschauen, da stellen wir fest,

30:24.760 --> 30:26.760
aha, alles klar,

30:26.760 --> 30:28.760
also an Parametern, an Parametern

30:28.760 --> 30:30.760
brauchen wir hier erstmal ein,

30:30.760 --> 30:32.760
ein, ein was? Ein,

30:32.760 --> 30:34.760
ein Callback, der,

30:34.760 --> 30:36.760
Moment, der

30:36.760 --> 30:38.760
als erstes Argument nen Void Pointer

30:38.760 --> 30:40.760
kriegt, ohne irgendwie

30:40.760 --> 30:42.760
nen Name, einfach nur nen Void Pointer. Man hat

30:42.760 --> 30:44.760
absolut keine Ahnung, was das ist.

30:44.760 --> 30:46.760
Beste,

30:46.760 --> 30:48.760
es ist, es ist einfach, also, es ist,

30:48.760 --> 30:50.760
du, du weißt noch nicht mal, was das für nen Namen

30:50.760 --> 30:52.760
bekommt.

30:52.760 --> 30:54.760
Es ist einfach nur nen Void, du weißt nicht, wofür der da ist.

30:54.760 --> 30:56.760
Der ist, der, der, der muss halt einfach da sein.

30:56.760 --> 30:58.760
Ja? Also, du kriegst

30:58.760 --> 31:00.760
einfach irgendwas, irgendeinen Pointer auf

31:00.760 --> 31:02.760
irgendwas, wo du nicht weißt, was es ist.

31:02.760 --> 31:04.760
Das ist eh schon immer mal super Geschichte.

31:04.760 --> 31:06.760
Danach musst du, so wie es aussieht,

31:06.760 --> 31:08.760
halt die, das Log Level

31:08.760 --> 31:10.760
übergeben. Das steht hier aber auch nicht richtig

31:10.760 --> 31:12.760
dabei. Vielleicht, ja,

31:12.760 --> 31:14.760
ah, hier steht's, hier, doch, hier steht's ein bisschen besser.

31:14.760 --> 31:16.760
Hier steht's ein bisschen besser.

31:16.760 --> 31:18.760
Also, das erste ist ein Void Pointer

31:18.760 --> 31:20.760
auf ein AVCL.

31:20.760 --> 31:22.760
Das zweite ist das Log Level.

31:22.760 --> 31:24.760
Das dritte ist die Log Zeile und das ist

31:24.760 --> 31:26.760
dann die Argumente für die Log Zeile.

31:26.760 --> 31:28.760
So. So weit, so gut.

31:28.760 --> 31:30.760
Und dann hab ich das hier gelesen.

31:30.760 --> 31:32.760
Ich dachte mir, was zum Teufel, FFmpeg, was

31:32.760 --> 31:34.760
wollt ihr von mir?

31:34.760 --> 31:36.760
A Pointer to arbitrary struct, of which the first

31:36.760 --> 31:38.760
field is a pointer to an

31:38.760 --> 31:40.760
AV-Class struct.

31:40.760 --> 31:42.760
Da hab ich da

31:42.760 --> 31:44.760
vorgesessen und dachte mir so, hm,

31:44.760 --> 31:50.250
was

31:50.250 --> 31:52.250
willst du mir sagen, FFmpeg?

31:54.250 --> 31:56.250
Und ich hab dann das Internet durchsucht

31:56.250 --> 31:58.250
und ich habe nur ganz

31:58.250 --> 32:00.250
wirre Beispiele gefunden,

32:00.250 --> 32:02.250
die alle nicht das gemacht haben, was ich machen

32:02.250 --> 32:04.250
wollte. Und dann hab ich selbst ein bisschen

32:04.250 --> 32:06.250
rumprobiert. Und dann bin ich auf folgendes

32:06.250 --> 32:08.250
gekommen. So.

32:08.250 --> 32:10.250
Das hier ist mein Callback.

32:10.250 --> 32:12.250
Als erstes guck ich, ob

32:12.250 --> 32:14.250
dieser komische Void Pointer 0 ist.

32:14.250 --> 32:16.250
Wenn der 0 ist, dann mach ich nix.

32:16.250 --> 32:18.250
Sicher ist sicher. Ich weiß nicht, in welchen Fällen der 0

32:18.250 --> 32:20.250
sein kann, aber dann mach ich nix.

32:20.250 --> 32:22.250
Dann, und jetzt kommt übelst nice

32:22.250 --> 32:25.560
C-Magic.

32:25.560 --> 32:27.560
Wer jetzt etwa denkt, das hier

32:27.560 --> 32:29.560
wäre der Pointer schon auf die

32:29.560 --> 32:31.560
Daten, die man haben möchte, der liegt

32:31.560 --> 32:33.560
falsch. In Wirklichkeit

32:33.560 --> 32:35.560
ist das ein Void Pointer

32:35.560 --> 32:37.560
auf einen weiteren Pointer

32:37.560 --> 32:39.560
und wenn ich den referenziere,

32:39.560 --> 32:41.560
dann bekomme ich einen Pointer

32:41.560 --> 32:43.560
zu einer AV-Class.

32:43.560 --> 32:45.560
Also.

32:47.560 --> 32:49.560
Ist jetzt schonmal geil.

32:49.560 --> 32:51.560
Ist schonmal logisch, oder?

32:51.560 --> 32:53.560
Leute. Findet ihr nicht auch?

32:55.560 --> 32:57.560
Also ich finde, das ist

32:57.560 --> 32:59.560
Try offensichtlich, was

32:59.560 --> 33:01.560
die hier wollen.

33:01.560 --> 33:03.560
Ja.

33:03.560 --> 33:05.560
Also das ist sehr logisch. Das habe ich auf dem

33:05.560 --> 33:07.560
Stack Overflow Post gefunden.

33:07.560 --> 33:09.560
Stand das nicht so genau in der Doku.

33:09.560 --> 33:11.560
Das kann sein, dass das tatsächlich

33:11.560 --> 33:13.560
so hier drinnen steht irgendwo. Ja.

33:15.560 --> 33:17.560
Aber das habe ich bei Stack Overflow gefunden.

33:17.560 --> 33:19.560
Dann, weil

33:19.560 --> 33:21.560
wir ja nicht in C, sondern in C-Sharp sind,

33:21.560 --> 33:23.560
dann muss ich den Class Name

33:23.560 --> 33:25.560
auslesen

33:25.560 --> 33:27.560
und in den .NET

33:27.560 --> 33:29.560
String packen. Okay?

33:29.560 --> 33:31.560
Und dann kann ich gucken,

33:31.560 --> 33:33.560
ist das,

33:33.560 --> 33:35.560
was in dieser AV-Class

33:35.560 --> 33:37.560
drinnen steckt, ein

33:37.560 --> 33:39.560
AV-Format-Kontext.

33:39.560 --> 33:41.560
AV-Format-Kontext ist das,

33:41.560 --> 33:43.560
wo FFmpeg

33:43.560 --> 33:47.450
die Streaming-Quellen

33:47.450 --> 33:49.450
hier ausliest. Ja.

33:49.450 --> 33:51.450
Da steht auch die URL drinnen.

33:51.450 --> 33:53.450
Auf was

33:53.450 --> 33:55.450
es eigentlich versucht gerade zuzugreifen.

33:55.450 --> 33:57.450
Das heißt, ich gucke, ist

33:57.450 --> 33:59.450
das hier denn ein

33:59.450 --> 34:01.450
AV-Format-Kontext?

34:01.450 --> 34:03.450
Übrigens, dass man dann P0,

34:03.450 --> 34:05.450
diese Class einfach in einen AV-Format-Kontext

34:05.450 --> 34:07.450
casten kann,

34:07.450 --> 34:09.450
steht nirgendswo.

34:09.450 --> 34:11.450
Das steht in keiner Doku drinnen.

34:11.450 --> 34:13.450
Das habe ich in keinem Beispiel gefunden,

34:13.450 --> 34:15.450
noch nicht auf Stack Overflow.

34:15.450 --> 34:17.450
Das war einfach ausprobieren, dass das funktioniert.

34:17.450 --> 34:19.450
Ja. Also sprich,

34:19.450 --> 34:21.450
das hier ist nicht irgendwie eine Logging-Klasse,

34:21.450 --> 34:23.450
obwohl das ein Logging-Callback ist.

34:23.450 --> 34:25.450
Nein, das ist eigentlich ein Pointer

34:25.450 --> 34:27.450
auf

34:27.450 --> 34:29.450
die Instanz, dieses

34:29.450 --> 34:31.450
Kontext, die das

34:31.450 --> 34:33.450
Logging ausgelöst hat.

34:33.450 --> 34:35.450
Das steht nirgendswo. Ich habe es nirgendswo

34:35.450 --> 34:37.450
gefunden. Das war einfach pures Glück,

34:37.450 --> 34:39.450
dass ich es mal ausprobiert habe zu casten und das hat

34:39.450 --> 34:41.450
funktioniert. Was ist denn nur mit

34:41.450 --> 34:43.450
casten los?

34:43.450 --> 34:45.450
Und dann kann ich

34:45.450 --> 34:47.450
dort die URL auslesen. Ja.

34:47.450 --> 34:49.450
Weil jetzt weiß ich ja, dass

34:49.450 --> 34:51.450
das ein AV-Format-Kontext

34:51.450 --> 34:53.450
ist und der hat auch ein URL-Field.

34:53.450 --> 34:55.450
Dann lese ich die URL

34:55.450 --> 34:57.450
aus, dann checke ich noch,

34:57.450 --> 34:59.450
ob das Log-Level

34:59.450 --> 35:01.450
größer ist als das

35:01.450 --> 35:03.450
Mindest-Log-Level.

35:03.450 --> 35:05.450
Und dann mache ich noch ein bisschen

35:05.450 --> 35:07.450
.NET

35:07.450 --> 35:09.450
C Interop Magic

35:09.450 --> 35:12.760
und am Ende

35:12.760 --> 35:14.760
printet er dann quasi

35:14.760 --> 35:16.760
die normale Log-Zeile plus

35:16.760 --> 35:18.760
die URL, die er aus dem Kontext

35:18.760 --> 35:20.760
ausgelesen hat. Also

35:20.760 --> 35:22.760
das da.

35:22.760 --> 35:24.760
Und das ist alles dafür notwendig,

35:24.760 --> 35:26.760
dass FFmpeg-Logs

35:26.760 --> 35:28.760
normal in den .NET

35:28.760 --> 35:30.760
Logs auftauchen

35:30.760 --> 35:32.760
und man bei einer Fehlermeldung dahinter

35:32.760 --> 35:34.760
angezeigt bekommt, von welcher

35:34.760 --> 35:36.760
Quelle das eigentlich kommt.

35:38.760 --> 35:40.760
Also ganz, ganz

35:40.760 --> 35:42.760
wirrer Shit auf jeden Fall.

35:42.760 --> 35:44.760
So. Aber jetzt zeige ich euch mal,

35:44.760 --> 35:46.760
was das überhaupt macht. Das Logging ist

35:46.760 --> 35:48.760
jetzt ja nicht so wirklich das, was

35:48.760 --> 35:53.160
einen interessiert. Also ich

35:53.160 --> 35:55.160
muss erst mal fake-weise

35:55.160 --> 35:57.160
eine Kamera starten.

35:57.160 --> 35:59.160
Ich brauche dazu mal

35:59.160 --> 36:01.160
ordentliches Videomaterial.

36:01.160 --> 36:03.160
Und wer sich jetzt denkt, ey Max,

36:03.160 --> 36:05.160
das, was du hier verwendest, ist ja kein richtiges Videomaterial

36:05.160 --> 36:07.160
von einer Überwachungskamera. Das ist richtig.

36:07.160 --> 36:09.160
Mein Videomaterial ist

36:09.160 --> 36:11.160
zum Testen ist anspruchsvoller als

36:11.160 --> 36:13.160
das, was von einer normalen Überwachungskamera kommt.

36:13.160 --> 36:15.160
Von einer normalen Überwachungskamera kommt

36:15.160 --> 36:17.160
vielleicht mit Ach und Krach

36:17.160 --> 36:19.160
1080p,

36:19.160 --> 36:21.160
15 FPS und

36:21.160 --> 36:23.160
3 Mbit. Variable

36:23.160 --> 36:25.160
Bitrate. So.

36:25.160 --> 36:27.160
Aber, damit ich das jetzt richtig testen

36:27.160 --> 36:29.160
kann mal und dem Memory Leak, dem

36:29.160 --> 36:31.160
zumindest ich vermute, dass ich ein Memory Leak

36:31.160 --> 36:33.160
habe, auf die Schliche zu kommen,

36:33.160 --> 36:35.160
brauche ich ein Video, was echt

36:35.160 --> 36:37.160
ordentlich Daten verursacht.

36:37.160 --> 36:39.160
Also sagen wir mal 1080p

36:39.160 --> 36:41.160
60 FPS.

36:41.160 --> 36:43.160
Das heißt, ich brauche jetzt irgendwie erst mal

36:43.160 --> 36:45.160
ein 1080p 60 FPS Video.

36:45.160 --> 36:47.160
Und nachdem ich ja keine Copyrights

36:47.160 --> 36:49.160
hier verletzen möchte,

36:49.160 --> 36:52.540
nehme ich einfach ein Video von mir.

36:52.540 --> 36:54.540
Am besten irgendwas mit Gameplay.

36:54.540 --> 36:56.540
Das hier.

36:56.540 --> 36:58.540
Okay, das ist, das ist die...

36:58.540 --> 37:00.540
Gibt's das

37:00.540 --> 37:05.190
Game eigentlich mittlerweile?

37:05.190 --> 37:09.140
Keine Ahnung. 4K

37:09.140 --> 37:11.140
1000... Ey, wir können's. Wollen wir's probieren?

37:11.140 --> 37:13.140
4K 120

37:13.140 --> 37:15.140
FPS.

37:15.140 --> 37:17.140
Gibt's da irgendwelche Videos?

37:17.140 --> 37:19.140
8K. 8K. Wait a minute.

37:19.140 --> 37:26.680
Das ist überhaupt nicht 8K.

37:26.680 --> 37:30.060
Das ist 4K.

37:30.060 --> 37:32.060
YouTube, YouTube

37:32.060 --> 37:34.060
erzählt Shit.

37:34.060 --> 37:36.060
Und außerdem, außerdem ist mir das ein bisschen

37:36.060 --> 37:38.060
zu krass. Gibt's

37:38.060 --> 37:40.060
da nicht vielleicht kürzere Videos?

37:40.060 --> 37:43.940
So irgendwie

37:43.940 --> 37:45.940
2 Minuten vielleicht so?

37:45.940 --> 37:47.940
Ne, aber 60, mit 60 FPS

37:47.940 --> 37:52.150
gebe ich mich nicht zufrieden.

37:52.150 --> 37:54.150
4K HDR

37:54.150 --> 37:59.960
Ja, das ist glaube ich ganz gut

37:59.960 --> 38:01.960
hier. 4K

38:01.960 --> 38:03.960
4K HDR

38:03.960 --> 38:05.960
brauchen wir nicht. Aber es ist, es ist

38:05.960 --> 38:07.960
4K, es ist

38:07.960 --> 38:09.960
4K 120. Kann YouTube

38:09.960 --> 38:11.960
überhaupt 120

38:11.960 --> 38:18.220
FPS? Was ist denn hier

38:18.220 --> 38:20.220
die Formate für das YouTube Video?

38:20.220 --> 38:25.320
Ne, kann YouTube gar

38:25.320 --> 38:27.320
nicht.

38:27.320 --> 38:29.320
Schau mal geil, dass es hier überhaupt

38:29.320 --> 38:31.320
4K 120

38:31.320 --> 38:33.320
FPS heißt, wenn YouTube nicht mal 120

38:33.320 --> 38:35.320
FPS kann.

38:35.320 --> 38:37.320
Sehr sinnvoll. Ja.

38:37.320 --> 38:42.490
Sehr, sehr sinnvoll.

38:42.490 --> 38:44.490
Ist das H264?

38:44.490 --> 38:46.490
Natürlich nicht. Es ist VP9.

38:46.490 --> 38:48.490
Oh ne, das kann ich nicht nehmen, Leute. Ich muss das Ding erst

38:48.490 --> 38:50.490
konvertieren. Da bin ich jetzt, da bin

38:50.490 --> 38:52.490
ich jetzt 45 Minuten am rendern

38:52.490 --> 38:54.490
oder so. Wir sollten

38:54.490 --> 38:56.490
vielleicht ein bisschen was weniger übertriebeneres

38:56.490 --> 39:01.850
nehmen. Gibt es irgendein

39:01.850 --> 39:03.850
kurzes 4K

39:03.850 --> 39:05.850
60 FPS? Irgendeine kurze

39:05.850 --> 39:07.850
4K 60 FPS Demo.

39:07.850 --> 39:09.850
Hier. Das ist doch

39:09.850 --> 39:11.850
gut. 45 Sekunden.

39:11.850 --> 39:13.850
Ja, das ist gut.

39:13.850 --> 39:20.550
Das nehmen wir. Einfach mit

39:20.550 --> 39:22.550
zwei Augen anschauen, dann hat man

39:22.550 --> 39:24.550
120 FPS korrekt. Ja.

39:24.550 --> 39:26.550
So sieht's aus.

39:26.550 --> 39:28.550
Deswegen sieht das menschliche Auge ja plus

39:28.550 --> 39:38.070
15 FPS. Aha.

39:38.070 --> 39:42.410
Was haben wir denn da?

39:42.410 --> 39:44.410
Ja, das ist eine gute Idee.

39:44.410 --> 39:46.410
Ja, dann kann man das direkt runterladen.

39:46.410 --> 39:48.410
Ja, Moment. Das ist aber

39:48.410 --> 39:50.410
der ganze Film. Wenn ich das

39:50.410 --> 39:52.410
umschneiden will,

39:52.410 --> 39:54.410
bisschen was kürzeres raus ist,

39:54.410 --> 39:56.410
bin ich blöd.

39:56.410 --> 39:58.410
Ich lade jetzt mal das 4K

39:58.410 --> 40:00.410
YouTube Video runter. Dann gucken wir mal, ob's

40:00.410 --> 40:02.410
funktioniert. Format

40:02.410 --> 40:07.580
wir wollen haben

40:07.580 --> 40:12.300
642.

40:12.300 --> 40:14.300
Das ist

40:14.300 --> 40:18.760
Video only.

40:18.760 --> 40:20.760
Gucken wir mal, ob das das richtige ist. Das sollte

40:20.760 --> 40:22.760
zumindest relativ schnell runtergeladen sein.

40:22.760 --> 40:24.760
Alter, heute geht

40:24.760 --> 40:26.760
das Video da vorne mal richtig ab.

40:26.760 --> 40:28.760
Okay, lass uns mal gucken. FF Probe.

40:28.760 --> 40:43.660
Ist das Video Probe?

40:43.660 --> 40:51.960
Moment.

40:51.960 --> 40:53.960
Das ist ja Premiere.

40:53.960 --> 40:55.960
FF MPEG kann was

40:55.960 --> 41:00.170
nicht abspielen.

41:00.170 --> 41:02.170
Das habe ich ja noch nie erlebt.

41:02.170 --> 41:05.740
Das muss aber sehr

41:05.740 --> 41:09.750
broken sein. Wahrscheinlich,

41:09.750 --> 41:11.750
weil's HDR ist. Kann das sein, weil's HDR

41:11.750 --> 41:13.750
Content ist, dass FF MPEG

41:13.750 --> 41:21.290
Probleme hat mit HDR? Ich hab mal so ein fucking

41:21.290 --> 41:23.290
Demo Video bekommen. Sven, danke für den Sub.

41:23.290 --> 41:25.290
Haben wir vielleicht

41:25.290 --> 41:27.290
HDR? Alter, es gibt ja

41:27.290 --> 41:33.220
nix. Es gibt nix.

41:33.220 --> 41:35.220
1080p 60fps.

41:35.220 --> 41:40.200
Okay, meinetwegen.

41:40.200 --> 41:43.640
Was ist denn

41:43.640 --> 41:45.640
Webmdash?

41:45.640 --> 41:47.640
Das kann FF

41:47.640 --> 41:49.640
MPEG auch nicht, oder?

41:49.640 --> 41:51.640
Was ist das für Autovervollständigung?

41:51.640 --> 42:07.180
Wieso? Ganz normal.

42:07.180 --> 42:09.180
Ja, aber das letzte, also FF MPEG ist da

42:09.180 --> 42:11.180
mein und das ist kaputt.

42:11.180 --> 42:13.180
Das ist natürlich schon echt doof.

42:13.180 --> 42:23.300
FF Play.

42:23.300 --> 42:25.300
Okay, das funzt. So, und jetzt kommen wir

42:25.300 --> 42:27.300
das. FF MPEG, jetzt können wir das

42:27.300 --> 42:29.300
konvertieren zu

42:29.300 --> 42:31.300
ähm

42:31.300 --> 42:33.300
A264, oh ne.

42:33.300 --> 42:35.300
Wie ging das? FF MPEG

42:35.300 --> 42:37.300
FF MPEG

42:37.300 --> 42:39.300
Ich kann mir das immer nicht merken. Ich glaube

42:39.300 --> 42:41.300
FF MPEG minus I

42:41.300 --> 42:43.300
und dann musste man

42:43.300 --> 42:46.740
musste man, oh keine Ahnung.

42:46.740 --> 42:48.740
Bitrate und sowas. Gibt's

42:48.740 --> 42:50.740
da nicht irgendein schönes Beispiel für

42:50.740 --> 42:52.740
ultrafast, superfast?

42:52.740 --> 42:54.740
Ja, das muss man machen.

42:54.740 --> 42:56.740
Genau.

42:56.740 --> 42:58.740
Preset Slow, nein.

42:58.740 --> 43:00.740
Preset

43:00.740 --> 43:02.740
ultrafast

43:02.740 --> 43:04.740
CR22 ist okay.

43:04.740 --> 43:06.740
Audio non

43:06.740 --> 43:08.740
und Output

43:08.740 --> 43:10.740
blub.mp4

43:10.740 --> 43:12.740
oder blub.ts, bei mp4

43:12.740 --> 43:19.700
spackt er manchmal rum.

43:19.700 --> 43:23.020
Okay, konvertieren funktioniert.

43:23.020 --> 43:25.020
Und Multithread

43:25.020 --> 43:27.020
konvertiert auch ordentlich schnell.

43:27.020 --> 43:29.020
Das Video ist bloß 46 Sekunden.

43:29.020 --> 43:33.100
Das sollte passen.

43:33.100 --> 43:35.100
Kenne ich nicht, dass es grau hinterlegt wird.

43:35.100 --> 43:37.100
Ach so, das meinst du.

43:37.100 --> 43:39.100
Ja, das sind Sachen, die ich schon eingetippt habe.

43:39.100 --> 43:41.100
Also, wenn ich hier LS eintippe,

43:41.100 --> 43:43.100
Leerzeichen, guck, du meinst das hier hinten, gell?

43:43.100 --> 43:45.100
Wo ich das Auto

43:45.100 --> 43:47.100
completen kann.

43:47.100 --> 43:49.100
Das nennt sich

43:51.100 --> 43:56.200
Das nennt sich

43:56.200 --> 44:00.470
ZSH

44:00.470 --> 44:02.470
Auto Suggestions.

44:02.470 --> 44:06.940
Das ist das Projekt

44:06.940 --> 44:08.940
hier. Hat nur 30.000, äh

44:08.940 --> 44:10.940
29,4 Github Sterne.

44:10.940 --> 44:12.940
Das ist das hier.

44:12.940 --> 44:14.940
Das gibt es auch

44:14.940 --> 44:16.940
Arch, by the way.

44:16.940 --> 44:18.940
Natürlich

44:18.940 --> 44:20.940
im Package Manager.

44:20.940 --> 44:22.940
Excellent.

44:22.940 --> 44:24.940
So, hat das jetzt funktioniert

44:24.940 --> 44:26.940
mit dem Video konvertieren?

44:26.940 --> 44:28.940
Ja, hat's.

44:28.940 --> 44:30.940
So, FF Play

44:30.940 --> 44:32.940
blub.ts

44:32.940 --> 44:34.940
Videofunst noch

44:34.940 --> 44:36.940
FF Probe

44:36.940 --> 44:38.940
Ich hoffe es

44:38.940 --> 44:40.940
H264, hi. Oh fuck.

44:40.940 --> 44:42.940
H264, hi. Oh, das glaub ich nicht,

44:42.940 --> 44:44.940
dass das funktioniert.

44:44.940 --> 44:46.940
Ich hab hier ein Sample Video noch drinnen,

44:46.940 --> 44:48.940
wo ich weiß, dass das funktioniert.

44:48.940 --> 44:50.940
FF Probe Output TS

44:50.940 --> 44:52.940
Moment, das ist ein Video.

44:52.940 --> 44:54.940
Aber das ist ein

44:54.940 --> 44:56.940
1280x1000, aber 60

44:56.940 --> 44:58.940
FPS Video. Ja, was auch immer.

44:58.940 --> 45:00.940
Weiß drauf. Und das ist, das ist

45:00.940 --> 45:02.940
Baseline. Das muss ich nochmal machen.

45:02.940 --> 45:04.940
Ich muss dem, ich muss dem sagen.

45:04.940 --> 45:06.940
FF MPEG H264

45:06.940 --> 45:08.940
Dass der nur Baseline verwenden soll.

45:08.940 --> 45:12.250
Weil der

45:12.250 --> 45:14.250
sonst rumspackt.

45:14.250 --> 45:17.620
Der Browser beim Abspielen

45:17.620 --> 45:22.020
über WebRTC.

45:22.020 --> 45:24.020
Was darf man denn da alles angeben?

45:24.020 --> 45:27.780
Baseline.

45:27.780 --> 45:29.780
Okay, dann müssen wir das ganze noch.

45:29.780 --> 45:34.950
Was? Was ist falsch?

45:34.950 --> 45:36.950
Muss das vielleicht mit

45:36.950 --> 45:47.340
Was?

45:47.340 --> 45:55.580
Äh.

45:55.580 --> 45:59.910
Was ist falsch da dran jetzt?

46:01.910 --> 46:03.910
Muss da ein Gleichheitszeichen dazwischen oder was?

46:03.910 --> 46:08.180
Oder muss das nach

46:08.180 --> 46:13.030
VFF MPEG kommen?

46:13.030 --> 46:17.110
Hä?

46:17.110 --> 46:23.560
Ach shit.

46:23.560 --> 46:25.560
Oh man, jetzt ist das auch noch in der falschen Farbe.

46:25.560 --> 46:27.560
Das ist ja echt

46:27.560 --> 46:29.560
schlimm hier ein fucking Demo Video

46:29.560 --> 46:31.560
zu bekommen für meine Zwecke.

46:31.560 --> 46:33.560
Jetzt bin ich, okay

46:33.560 --> 46:35.560
wir testen mal, ob das

46:35.560 --> 46:37.560
abspielbar ist.

46:37.560 --> 46:39.560
Im Browser.

46:39.560 --> 46:46.780
Wenn ich das, das glaube ich nicht.

46:46.780 --> 46:48.780
Jetzt müsst ihr auch die Farbdings konvertieren.

46:48.780 --> 46:50.780
Ich habe gehofft, dass macht,

46:50.780 --> 46:52.780
dass wir den Browser nicht laufen. Nee, im Leben.

46:52.780 --> 46:54.780
Probieren wir mal,

46:54.780 --> 46:58.280
probieren wir mal aus.

46:58.280 --> 47:00.280
Okay, ich hätte nicht gedacht, dass es so kompliziert ist

47:00.280 --> 47:02.280
ein Demo Video zu kriegen.

47:04.280 --> 47:06.280
Sich zu konvertieren.

47:06.280 --> 47:10.100
Probieren wir mal aus, ob das funktioniert.

47:10.100 --> 47:12.100
Also.

47:12.100 --> 47:14.100
Ich starte das jetzt mal und ich hoffe,

47:14.100 --> 47:16.100
das erscheint dann im Browser.

47:16.100 --> 47:18.100
Run.

47:18.100 --> 47:20.100
Und jetzt muss ich

47:20.100 --> 47:22.100
hier mein RTSP Server starten.

47:22.100 --> 47:24.100
Ich tue jetzt so, als bin ich eine Überwachungskamera.

47:24.100 --> 47:26.100
VFF MPEG.

47:26.100 --> 47:28.100
Oder Minus RE hier.

47:28.100 --> 47:30.100
Das brauche ich.

47:30.100 --> 47:33.610
Output.

47:33.610 --> 47:39.030
Blub. TS.

47:39.030 --> 47:42.920
Achso.

47:42.920 --> 47:44.920
Ich bin irgendwie im falschen Ordner.

47:44.920 --> 47:51.500
Repo. Cam.

47:51.500 --> 47:53.500
Blub. TS.

47:53.500 --> 47:57.260
Okay, ich glaube nicht, dass es funktioniert.

47:57.260 --> 47:59.260
Okay, starten wir es nochmal neu.

47:59.260 --> 48:01.260
Der tut jetzt zumindest so, als liest er von der Kamera.

48:01.260 --> 48:03.260
Aber ich glaube nicht,

48:03.260 --> 48:05.260
dass es im Browser funktioniert.

48:05.260 --> 48:07.260
Local Host.

48:07.260 --> 48:13.060
Ey, Funs.

48:13.060 --> 48:15.060
Geht einfach.

48:15.060 --> 48:17.060
Okay, das Demo Video.

48:17.060 --> 48:19.060
Guck mal, wie viel CPU Last das überhaupt schon verursacht.

48:19.060 --> 48:21.060
Also, es funktioniert.

48:21.060 --> 48:23.060
Das ist quasi mein Fake Überwachungskamera Video.

48:23.060 --> 48:25.060
Ja.

48:25.060 --> 48:27.060
Und wer sich jetzt denkt, wie ist doch nichts

48:27.060 --> 48:29.060
Spektakuläres, dass der im Browser ein Video

48:29.060 --> 48:31.060
abspielt. In dem Fall ist das nicht einfach

48:31.060 --> 48:33.060
ein Video abgespielt über

48:33.060 --> 48:35.060
den Browser.

48:35.060 --> 48:37.060
Das Video wird live über

48:37.060 --> 48:39.060
WebRTC gestreamt

48:39.060 --> 48:41.060
in den Browser. Das ist kein

48:41.060 --> 48:43.060
normales HLS

48:43.060 --> 48:45.060
oder sonstige

48:45.060 --> 48:47.060
Videosachen. Das ist WebRTC

48:47.060 --> 48:49.060
Streaming von H.264

48:49.060 --> 48:51.060
encodedem Content in den

48:51.060 --> 48:53.060
Browser über WebRTC.

48:53.060 --> 48:55.060
Also quasi

48:55.060 --> 48:57.060
das, was die ganzen Überwachungskameras

48:57.060 --> 48:59.060
ausgeben. Und das ist auch der Grund,

48:59.060 --> 49:01.060
warum ich das gebaut habe. Ich will eigentlich meine

49:01.060 --> 49:03.060
Überwachungskamera streamen.

49:03.060 --> 49:05.060
Und das ist jetzt halt einfach mal hier

49:05.060 --> 49:07.060
testweise mein

49:07.060 --> 49:09.060
Ersatzvideo anstelle

49:09.060 --> 49:11.060
von Überwachungskamera Footage.

49:11.060 --> 49:13.060
Absichtlich was hochauflösendes

49:13.060 --> 49:15.060
und was

49:15.060 --> 49:17.060
mit übertriebener Bitrate für

49:17.060 --> 49:19.060
Überwachungskameras und alles, weil

49:19.060 --> 49:21.060
ich will ausprobieren oder testen, ob ich

49:21.060 --> 49:23.060
einen Memory Leak habe, weil ich glaube, ich habe

49:23.060 --> 49:25.060
einen Memory Leak. Ich zeige euch das mal.

49:25.060 --> 49:27.060
Wir machen jetzt mal hier Docker Status

49:27.060 --> 49:29.060
äh Stats

49:29.060 --> 49:31.060
äh Stats

49:31.060 --> 49:33.060
und jetzt starte ich

49:33.060 --> 49:35.060
das Ding mal im Container. Passt mal auf.

49:35.060 --> 49:38.630
Das am Anfang ist ja noch nichts

49:38.630 --> 49:40.630
Neues. Ich starte jetzt mal das Video.

49:40.630 --> 49:44.710
Oder ob ich das Video starte oder nicht,

49:44.710 --> 49:51.350
ist eigentlich egal. Und das geht

49:51.350 --> 49:53.350
jetzt immer so weiter. Irgendwann sind wir dann bei 300

49:53.350 --> 49:55.350
MB

49:55.350 --> 49:57.350
und irgendwann sind wir bei 400 MB.

49:57.350 --> 50:01.820
Deswegen vermute ich,

50:01.820 --> 50:03.820
dass ich irgendwo eine Memory Leak habe, aber

50:03.820 --> 50:07.770
ich weiß nicht wo.

50:07.770 --> 50:09.770
What language are you speaking? German.

50:09.770 --> 50:11.770
We are sitting

50:11.770 --> 50:13.770
We are all sitting in one boat.

50:13.770 --> 50:20.470
So und

50:20.470 --> 50:22.470
Ey

50:22.470 --> 50:24.470
Findet ihr nicht auch, dass es ein bisschen

50:24.470 --> 50:28.490
nach einer Memory Leak aussieht?

50:28.490 --> 50:30.490
Es ist schon ein bisschen verdächtig, oder?

50:30.490 --> 50:32.490
Dass es immer

50:32.490 --> 50:34.490
so im gleichen Takt, immer

50:34.490 --> 50:38.500
die gleiche Sache hochgeht.

50:38.500 --> 50:40.500
Warum ich nicht Rust genommen habe?

50:40.500 --> 50:42.500
Ich habe Rust genommen. In Rust geht es nicht.

50:42.500 --> 50:44.500
Weil die Rust WebRTC Library irgendwelche

50:44.500 --> 50:46.500
Bugs hat. Deswegen mache ich das jetzt

50:46.500 --> 50:48.500
in Go, die WebRTC Geschichte.

50:48.500 --> 50:50.500
Aber die FFmpeg Sache mache

50:50.500 --> 50:52.500
ich in .NET.

50:52.500 --> 50:54.500
Ich finde, es sieht ein bisschen nach einer Memory Leak aus.

50:54.500 --> 50:56.500
Chat, lasst uns mal abstimmen.

50:56.500 --> 50:58.500
Memory Leak ja oder nein?

50:58.500 --> 51:08.410
Sieht schon verdächtig aus. 0.

51:08.410 --> 51:10.410
Okay, wir machen mal eine Abstimmung.

51:10.410 --> 51:15.580
Memory Leak

51:15.580 --> 51:19.910
Ja, nein.

51:19.910 --> 51:23.930
Wir sind schon bei 132.

51:23.930 --> 51:25.930
Leak zur, oh nein, was habe ich wieder

51:25.930 --> 51:30.520
geleakt? Vielleicht.

51:30.520 --> 51:32.520
Jetzt muss man sich

51:32.520 --> 51:34.520
festlegen.

51:34.520 --> 51:44.040
Doch gar nichts.

51:44.040 --> 51:48.440
So und ich habe mir gedacht.

51:48.440 --> 51:50.440
Okay, also es denken alle, es ist Memory Leak.

51:50.440 --> 51:52.440
Also ich habe mir gedacht, okay, es könnte auch

51:52.440 --> 51:54.440
generell an .NET liegen.

51:54.440 --> 51:56.440
Und habe mal

51:56.440 --> 51:58.440
eingebaut.

51:58.440 --> 52:00.440
Dass der, wenn ich

52:00.440 --> 52:02.440
das hier mal einschalte, dass der

52:02.440 --> 52:04.440
alle 5 Sekunden

52:04.440 --> 52:06.440
Garbage collectet.

52:06.440 --> 52:08.440
Das macht man normalerweise nicht, aber

52:08.440 --> 52:10.440
nur zum testen mal.

52:10.440 --> 52:12.440
Dass der alle 5 Sekunden

52:12.440 --> 52:14.440
Garbage collectet.

52:14.440 --> 52:16.440
Dann werdet ihr sehen, es sieht

52:16.440 --> 52:18.440
nicht viel anders aus.

52:18.440 --> 52:20.440
Ach ja, wir machen das übrigens,

52:20.440 --> 52:22.440
wir verdeutlichen das nochmal

52:22.440 --> 52:24.440
ein bisschen mehr. Und zwar ich gehe

52:24.440 --> 52:26.440
in meine Config und

52:26.440 --> 52:28.440
ich tue einfach so, als habe ich mehrere Kameras.

52:28.440 --> 52:30.440
Die greifen zwar alle auf den gleichen

52:30.440 --> 52:32.440
Stream zu, das ist aber egal.

52:32.440 --> 52:34.440
So machen wir mal, oh ich glaube,

52:34.440 --> 52:36.440
da raucht meine VM gleich ab.

52:36.440 --> 52:38.440
5 Kameras

52:38.440 --> 52:40.440
mit

52:40.440 --> 52:48.300
das wird nicht funktionieren ey.

52:48.300 --> 52:50.300
5 Kameras mit 4K Inhalten

52:50.300 --> 52:52.300
in der VM abspielen, das wird

52:52.300 --> 52:57.020
nix. Kommt noch

52:57.020 --> 52:59.020
ein Video zu dem XZ damals als HP?

52:59.020 --> 53:01.020
Ja,

53:01.020 --> 53:03.020
ich habe mir das überlegt tatsächlich, aber

53:03.020 --> 53:05.020
ich denke halt, das ist ein bisschen

53:05.020 --> 53:07.020
zu speziell für YouTube.

53:07.020 --> 53:09.020
Und die, die das persönlich

53:09.020 --> 53:11.020
interessiert, weil sie betroffen sind, die haben sich wahrscheinlich

53:11.020 --> 53:13.020
anderweitig schon informiert.

53:13.020 --> 53:15.020
Es ist jetzt ja auch nix Neues, das ist seit

53:15.020 --> 53:18.520
Freitag bekannt.

53:18.520 --> 53:20.520
Was wird programmiert?

53:20.520 --> 53:22.520
WebRTC Streaming, wobei ich eigentlich

53:22.520 --> 53:24.520
eher mal nach einem Memory Leak gucken will.

53:24.520 --> 53:26.520
Und dann

53:26.520 --> 53:28.520
weiß ich gar nicht, was wir machen.

53:28.520 --> 53:30.520
Vielleicht, ich habe hier auch die,

53:30.520 --> 53:32.520
vielleicht basteln wir auch, gucken wir

53:32.520 --> 53:34.520
ob ich heute meinen

53:34.520 --> 53:36.520
ESP zum Laufen kriege, oder

53:36.520 --> 53:38.520
wir können per Zigbee versuchen, die

53:38.520 --> 53:40.520
Lidl Steckdosenleisten anzuschließen,

53:40.520 --> 53:42.520
anzusteuern,

53:42.520 --> 53:44.520
aus Home Assistant. Ich habe hier, ich habe mir

53:44.520 --> 53:46.520
3 Lidl Steckdosenleisten gekauft.

53:46.520 --> 53:48.520
So, gucken wir mal, ob das Memory Leak jetzt schlimmer aussieht, als

53:48.520 --> 53:55.740
vorher. Hm,

53:55.740 --> 54:32.550
doch kein Memory Leak?

54:32.550 --> 54:34.550
Das geht eigentlich nicht schnell genug hoch, dass

54:34.550 --> 54:36.550
es aus dem Unmanaged Code irgendwie kommen kann.

54:36.550 --> 54:38.550
Ne, das sieht nach ganz

54:38.550 --> 54:40.550
normalen .NET Schwankungen aus.

54:40.550 --> 54:42.550
Hä?

54:42.550 --> 54:44.550
Ich habe genau das gleiche, ich meine, ihr seht's,

54:44.550 --> 54:46.550
ich habe es erst wieder einkommentiert.

54:46.550 --> 54:48.550
Das gleiche habe ich vorher auch schon mal gemacht,

54:48.550 --> 54:50.550
regelmäßige Garbage Collection, und jetzt...

54:50.550 --> 54:54.060
Hä?

54:54.060 --> 54:56.060
Naja, aber das kann nicht

54:56.060 --> 54:58.060
an den Webcams liegen. Seriously, das ist,

54:58.060 --> 55:00.060
da gehen gerade die Ul-, die

55:00.060 --> 55:05.930
Megadatensachen durch hier.

55:05.930 --> 55:07.930
Ey, das Funst.

55:07.930 --> 55:09.930
Meine CPU, Leute.

55:09.930 --> 55:11.930
Die CPU ist übelst am brennen.

55:13.930 --> 55:15.930
5 4K Videos, 60 FPS ist

55:15.930 --> 55:22.120
einfach zu viel, ist gut, ne.

55:22.120 --> 55:24.120
Okay, ich nehme das zurück, ich glaube, ich habe doch

55:24.120 --> 55:26.120
ein Memory Leak.

55:26.120 --> 55:28.120
Hä? Bin ich total hängengeblieben?

55:28.120 --> 55:30.120
Guckt mal, ich hatte das hier vorher

55:30.120 --> 55:32.120
drinnen, und ich habe es

55:32.120 --> 55:34.120
dann auskommentiert, weil ich mir gedacht habe,

55:34.120 --> 55:36.120
okay, eigentlich wurscht, weil

55:36.120 --> 55:38.120
scheint woanders zu sein, und wenn

55:38.120 --> 55:40.120
ich es jetzt wieder reinmache mit dem Collecten,

55:40.120 --> 55:43.430
what the fuck?

55:43.430 --> 55:51.800
Weil das sieht jetzt nicht mehr so

55:51.800 --> 55:53.800
Memory Leakig aus, alles.

55:53.800 --> 55:55.800
Ist viel zu lahm dafür, um da...

55:55.800 --> 55:57.800
Ja,

55:57.800 --> 55:59.800
das ist normal, dass .NET

55:59.800 --> 56:01.800
eigentlich ein bisschen ansteigt. Irgendwann,

56:01.800 --> 56:03.800
außerdem, das ist ja auch,

56:03.800 --> 56:05.800
das ist ja die Docker Usage.

56:05.800 --> 56:07.800
Also, das muss erstmal alles von Docker wieder abgegeben

56:07.800 --> 56:09.800
werden, ans Betriebssystem zurück, und

56:09.800 --> 56:11.800
alles.

56:11.800 --> 56:13.800
Das, na gut, was von Docker,

56:13.800 --> 56:15.800
von Docker ist Blödsinn, von der .NET Runtime

56:15.800 --> 56:17.800
muss das erstmal wieder zurückgegeben werden, also

56:17.800 --> 56:19.800
das kann, das ist normal, dass das ein bisschen

56:19.800 --> 56:21.800
steigt, und irgendwann bleibt

56:21.800 --> 56:23.800
es dann auf dem gleichen Level. Das ist für .NET

56:23.800 --> 56:25.800
normal. Das hier, aber ganz ehrlich,

56:25.800 --> 56:27.800
wenn es wirklich in Memory Leak wäre,

56:27.800 --> 56:29.800
in der Verarbeitung,

56:29.800 --> 56:31.800
wissen wir gar nicht, mit irgendwelchen großen Analyse-Tools

56:31.800 --> 56:33.800
oder so dran, wenn das wirklich ein

56:33.800 --> 56:35.800
Memory Leak wäre, hier, in der

56:35.800 --> 56:37.800
Verarbeitung von

56:37.800 --> 56:39.800
Videodaten, dann würde

56:39.800 --> 56:41.800
jetzt der Speicherverbrauch, würde explodieren.

56:41.800 --> 56:43.800
Bei 5, 4K,

56:43.800 --> 56:45.800
60 FPS Videos.

56:45.800 --> 56:47.800
Übrigens mal, just for fun,

56:47.800 --> 56:49.800
wollen wir mal was ausprobieren.

56:49.800 --> 56:51.800
Wollen wir mal gucken, wie viel Netzwerktraffic das gerade

56:51.800 --> 56:55.820
verursacht. Guck mal, was habe ich denn

56:55.820 --> 56:57.820
für eine IP, äh, ifconfig.

56:57.820 --> 57:04.970
Das ist doch der Rust-Kram.

57:04.970 --> 57:06.970
Ja, nur das ist nicht mehr in Rust,

57:06.970 --> 57:08.970
weil mit Rust hat es nicht funktioniert.

57:08.970 --> 57:10.970
Das ist jetzt in Go mittlerweile.

57:10.970 --> 57:14.280
Rust größer Go

57:14.280 --> 57:21.690
confirmed. Probieren wir es mal

57:21.690 --> 57:26.150
hier aufzumachen. Okay, ich wusste,

57:26.150 --> 57:28.150
dass mit meinem Video was kaputt ist.

57:28.150 --> 57:30.150
Ah, ne, ne, okay.

57:30.150 --> 57:32.150
Ich habe nichts gesagt. Der braucht ein bisschen.

57:32.150 --> 57:34.150
Wahrscheinlich braucht der

57:34.150 --> 57:36.150
Grafikkarten-Decoder ein bisschen.

57:36.150 --> 57:41.260
Okay, jetzt mal gucken wir mal,

57:41.260 --> 57:48.540
wie viel,

57:48.540 --> 57:50.540
na, geht doch noch.

57:50.540 --> 57:52.540
45 MB.

57:52.540 --> 57:54.540
Okay, jetzt können wir,

57:54.540 --> 57:56.540
okay, ich habe eine Idee. Jetzt machen wir nochmal was.

57:56.540 --> 57:58.540
Jetzt gucken wir mal,

57:58.540 --> 58:00.540
wie viel, es ist komplett

58:00.540 --> 58:02.540
useless shit, den ich jetzt mache, aber

58:02.540 --> 58:04.540
just for fun, ja.

58:04.540 --> 58:06.540
Wir gucken mal,

58:06.540 --> 58:08.540
wie oft ich das Ding parallel starten

58:08.540 --> 58:10.540
kann, bis entweder meine

58:10.540 --> 58:12.540
CPU, meine Grafikkarte

58:12.540 --> 58:14.540
oder meine

58:14.540 --> 58:16.540
Streaming-Software nachgibt. Oder

58:16.540 --> 58:18.540
mein Netzwerk nachgibt. Eins von beidem.

58:18.540 --> 58:22.230
Also, ein offenes Tab

58:22.230 --> 58:24.230
verursacht ungefähr 50 MB

58:24.230 --> 58:26.230
die Sekunde Traffic.

58:26.230 --> 58:31.080
Zwei Tabs?

58:31.080 --> 58:33.080
Na, OBS macht nicht so viel. Außerdem

58:33.080 --> 58:35.080
wird OBS nicht getrackt.

58:35.080 --> 58:37.080
Aus meiner VM raus.

58:37.080 --> 58:39.080
Ah, 126 MB.

58:39.080 --> 58:41.080
Okay,

58:41.080 --> 58:43.080
ich denke, ich denke bei

58:43.080 --> 58:47.100
vier Tabs ist Schluss.

58:47.100 --> 58:49.100
Chrome braucht auch schon ganz schön lange,

58:49.100 --> 58:51.100
bis es anfängt zu laden, oder?

58:51.100 --> 58:53.100
Ah,

58:53.100 --> 58:55.100
ich würde sagen, es laggt schon

58:55.100 --> 58:57.100
etwas, ein bisschen.

58:57.100 --> 58:59.100
Ich habe, ich habe was dazu

58:59.100 --> 59:01.100
eingebaut, dass man sieht, ob es laggt.

59:01.100 --> 59:03.100
Und zwar, okay, jetzt haben wir schon

59:03.100 --> 59:05.100
200 MB

59:05.100 --> 59:07.100
die Sekunde, 260 MB die Sekunde.

59:07.100 --> 59:09.100
Ich habe was eingebaut, und

59:09.100 --> 59:11.100
zwar,

59:11.100 --> 59:13.100
man sieht alle 30 Sekunden

59:13.100 --> 59:15.100
die Q-Size, mal gucken,

59:15.100 --> 59:17.100
ob die ansteigt. Es wird alle 30

59:17.100 --> 59:19.100
Sekunden die Q-Size ausgegeben

59:21.100 --> 59:23.100
von meinen Bildern,

59:23.100 --> 59:25.100
wie sie verschickt werden.

59:25.100 --> 59:27.100
Okay, noch läuft

59:27.100 --> 59:29.100
alles gut.

59:29.100 --> 59:31.100
Noch läuft alles gut. Die Q-Size ist

59:31.100 --> 59:33.100
bei null, also die wird

59:33.100 --> 59:35.100
direkt verarbeitet.

59:35.100 --> 59:37.100
Selbst macht

59:37.100 --> 59:39.100
es ganz gute Auslastung in der VM, das

59:39.100 --> 59:41.100
Streaming. Mal gucken, wie viele Tabs.

59:41.100 --> 59:43.100
Ich meine, das ist ultra unrealistisch,

59:43.100 --> 59:45.100
ne? Es geht hier um

59:45.100 --> 59:47.100
Überwachungskamera-Footage.

59:47.100 --> 59:49.100
Und niemand hat

59:49.100 --> 59:51.100
als Überwachungskameras

59:51.100 --> 59:53.100
4K 60 FPS

59:53.100 --> 59:55.100
fünfmal laufen

59:55.100 --> 59:57.100
und lässt sich das streamen.

59:57.100 --> 59:59.100
Oh, oh, oh, oh, oh,

59:59.100 --> 01:00:01.100
oh, oh, ah, nee, das hat...

01:00:01.100 --> 01:00:03.100
Oh, es

01:00:03.100 --> 01:00:05.100
laggt, es laggt, Leute, es laggt.

01:00:05.100 --> 01:00:07.100
Jetzt ist die Frage, woran liegt es?

01:00:07.100 --> 01:00:09.100
Liegt das an...

01:00:09.100 --> 01:00:11.100
Liegt das an meinem Netzwerk-Trafik?

01:00:11.100 --> 01:00:13.100
Der nicht mehr kann

01:00:13.100 --> 01:00:15.100
hier von der VM zum Host?

01:00:15.100 --> 01:00:17.100
Das sollte es eigentlich nicht sein.

01:00:17.100 --> 01:00:19.100
Oder liegt das an meiner Grafikkarte, an CPU...

01:00:19.100 --> 01:00:21.100
Warte mal, ob die...

01:00:21.100 --> 01:00:23.100
Oh, okay. Es kann auf jeden

01:00:23.100 --> 01:00:25.100
Fall nicht mehr schnell genug verarbeitet

01:00:25.100 --> 01:00:27.100
werden an irgendeiner Stelle. Die Q-Size

01:00:27.100 --> 01:00:29.100
für die Bilder steigt gerade

01:00:29.100 --> 01:00:39.800
an wisst ihr ob man infos aus teams bekommt ohne webhooks also nur lokal ja und nein offiziell

01:00:39.800 --> 01:00:48.320
ist teams nur über diese komische wie heißt dieser ab diesen komischen workflow für teams vorgesehen

01:00:48.320 --> 01:00:59.060
die last auf der vmd ist ordentlich ja dies aber nicht genau eines krebs genau und du musst dir

01:00:59.060 --> 01:01:03.440
aber dass du sachen machen kannst in teams musste in der eigene musste der quasi eine eigene app mit

01:01:03.440 --> 01:01:08.360
token und sowas registrieren das ist ziemlicher rotz was du machen kannst ist natürlich das markt

01:01:08.360 --> 01:01:12.200
microsoft allerdings nicht so du kannst den browser benutzen du kannst dich in einem browser

01:01:12.200 --> 01:01:17.900
in teams anmelden und dann browser automatisierung an teams rangehen das ist sehr müßig und teams ist

01:01:17.900 --> 01:01:29.530
nicht dafür ausgelegt aber das geht auslastung von der vm die ist so semi so ein drittel ungefähr ist

01:01:29.530 --> 01:01:32.210
die vm ausgelastet es könnte

01:01:32.210 --> 01:01:44.280
es könnte ernsthaft es könnte aber auch wirklich an meiner grafikkarte liegen weil

01:01:44.280 --> 01:01:53.540
ich habe hardware ich habe hardware decoding an und hardware decoding die grafikkarte auch

01:01:53.540 --> 01:02:02.650
obwohl sind deine 40 90 ist die hat ja auch nicht unendliche hardware decoder gpu wo ist

01:02:02.650 --> 01:02:12.100
es denn eine gpu ist doch schon da also daran daran liegt es nicht

01:02:12.640 --> 01:02:27.960
bei der wm macht meine gpu so wenig kann das video nicht gpu decodet werden läuft das gerade eventuell

01:02:27.960 --> 01:02:55.630
cpu decodet oder was ist da los ich weiß woran es liegt weil der cpu ist einfach am ende okay ja das

01:02:55.630 --> 01:02:59.890
wird es auch erklären 32 gig ram belegt und cpu am ende

01:03:01.870 --> 01:03:06.070
na gut ich war freiwillig ein paar tabs zu ist okay

01:03:09.890 --> 01:03:27.060
ich glaube gar kein bisschen probleme dass alles da wieder ranzukommen

01:03:27.060 --> 01:03:31.500
aber an meiner software liegt dass schon mal nicht ja das funktioniert okay was sag die

01:03:31.500 --> 01:03:37.620
speicherauslastung 208 ne leute wir haben keinen memory leak damit hat sich das stream

01:03:37.620 --> 01:03:44.690
thema für heute erledigt eigentlich wollte ich gucken woran das memory league liegt aber anscheinend habe ich gar keine nep grown

01:03:44.710 --> 01:03:47.550
Das ist natürlich sehr doof,

01:03:47.630 --> 01:03:49.210
aber ich kann euch trotzdem ein bisschen was zeigen,

01:03:49.270 --> 01:03:50.110
weil ich es gebrogert habe.

01:03:50.490 --> 01:03:51.830
Nee, Quatsch, geht noch nicht off.

01:03:52.610 --> 01:03:54.210
Ich habe noch massig Zeit.

01:03:54.630 --> 01:03:56.250
Es gibt noch genug Zeug, was wir machen können.

01:04:01.600 --> 01:04:03.280
Bei solchen Videos hier im Hintergrund,

01:04:03.340 --> 01:04:06.160
da weiß ich mittlerweile nicht,

01:04:06.440 --> 01:04:07.980
ob sowas gerendert ist oder echt.

01:04:08.900 --> 01:04:10.060
In dem Fall würde ich,

01:04:10.760 --> 01:04:12.440
gerade durch die kleinen Details am Ding,

01:04:12.440 --> 01:04:14.200
ich würde auf echt tippen,

01:04:15.400 --> 01:04:16.880
aber ich wäre mir nicht

01:04:16.880 --> 01:04:18.080
hundertprozentig mehr sicher,

01:04:18.080 --> 01:04:20.300
ob das im Hintergrund echt ist oder gerendert.

01:04:28.200 --> 01:04:29.120
Könntet ihr es wirklich,

01:04:29.120 --> 01:04:31.340
also ich tendiere zu echten Kameraaufnahmen,

01:04:32.200 --> 01:04:34.140
aber könntet ihr das

01:04:34.140 --> 01:04:35.200
in der heutigen Zeit

01:04:35.200 --> 01:04:37.720
mit wirklich Gewissheit sagen,

01:04:38.620 --> 01:04:40.320
ob Render oder echte Aufnahme?

01:04:43.360 --> 01:04:44.100
Also ich nicht mehr.

01:04:44.160 --> 01:04:45.580
Ich bin mir relativ sicher, es ist echt,

01:04:46.560 --> 01:04:48.580
aber so meine Hand dafür

01:04:48.580 --> 01:04:49.760
ins Feuer legen würde ich nicht.

01:05:03.180 --> 01:05:03.720
Ja, nice.

01:05:12.160 --> 01:05:13.860
Ich kann mich jetzt auf der einen Seite freuen,

01:05:13.940 --> 01:05:15.100
ich habe doch kein Memory Leak,

01:05:15.500 --> 01:05:16.640
aber auf der anderen Seite

01:05:16.640 --> 01:05:17.400
ist doof,

01:05:18.200 --> 01:05:19.600
weil was mache ich denn jetzt mit euch?

01:05:21.080 --> 01:05:21.480
Chatgear.

01:05:24.050 --> 01:05:25.030
Also ich habe das,

01:05:25.150 --> 01:05:26.270
was wir das letzte Mal gebaut haben,

01:05:26.310 --> 01:05:28.050
ich habe das alles noch ein bisschen verbessert.

01:05:29.310 --> 01:05:30.410
Also man kann jetzt,

01:05:30.530 --> 01:05:31.450
also Sinn der Software,

01:05:31.550 --> 01:05:32.410
ich erkläre euch das nochmal.

01:05:32.750 --> 01:05:33.510
Das ist übrigens was,

01:05:33.590 --> 01:05:34.730
was ich auf GitHub pushen werde,

01:05:34.850 --> 01:05:36.210
aber was ich weder maintaine

01:05:36.210 --> 01:05:37.110
noch irgendwas mache.

01:05:37.630 --> 01:05:38.890
Da kann man sich Sachen abgucken,

01:05:39.030 --> 01:05:40.190
benutzen ist eher nicht so das.

01:05:42.530 --> 01:05:44.410
Ich habe ein Problem bei mir daheim

01:05:44.410 --> 01:05:45.230
und zwar ich habe,

01:05:46.130 --> 01:05:47.830
wie viele Überwachungskameras habe ich?

01:05:48.590 --> 01:05:50.830
Am Hoftor,

01:05:51.490 --> 01:05:54.200
im Hof,

01:05:54.360 --> 01:05:55.420
an der Terrasse,

01:05:55.980 --> 01:05:58.950
im Flur,

01:05:59.150 --> 01:05:59.830
im Keller

01:05:59.830 --> 01:06:01.890
und am Katzenklo.

01:06:02.030 --> 01:06:02.370
Sechs,

01:06:02.590 --> 01:06:03.990
wenn ich jetzt keine vergessen habe.

01:06:04.030 --> 01:06:04.870
Ich glaube sechs Stück.

01:06:06.410 --> 01:06:07.890
Sechs Überwachungskameras

01:06:07.890 --> 01:06:10.110
und ich möchte

01:06:10.110 --> 01:06:14.860
die Streams von den Überwachungskameras

01:06:14.860 --> 01:06:16.280
in meinen Browser bekommen.

01:06:17.740 --> 01:06:19.720
Also das Video hier ist jetzt stellvertretend

01:06:19.720 --> 01:06:22.160
für Streams von meiner Überwachungskamera.

01:06:22.160 --> 01:06:22.960
Kamera,

01:06:23.100 --> 01:06:24.720
nur etwas hochauflösender

01:06:24.720 --> 01:06:25.620
und anstrengender als

01:06:25.620 --> 01:06:26.660
Überwachungskamera Bild.

01:06:26.660 --> 01:06:28.100
Ja, aber es ist wie es ist.

01:06:28.100 --> 01:06:29.580
Geht ganz normal über RTSP

01:06:29.580 --> 01:06:31.100
wie jede Überwachungskamera auch

01:06:31.100 --> 01:06:32.180
nur gerade lokal

01:06:32.180 --> 01:06:33.140
only zum testen.

01:06:35.060 --> 01:06:36.300
Und ich habe da ein Problem mit.

01:06:37.100 --> 01:06:39.420
Ich finde keine gescheite Möglichkeit

01:06:39.460 --> 01:06:41.240
oder ich habe noch keine gescheite

01:06:41.240 --> 01:06:42.480
Möglichkeit gefunden.

01:06:43.920 --> 01:06:46.780
Videos von Kameras

01:06:47.400 --> 01:06:49.100
in den Browser zu streamen,

01:06:49.120 --> 01:06:52.060
möglichst latency free

01:06:52.060 --> 01:06:56.180
und ohne irgendwelche irgendwie Qualitätsverlust

01:06:56.180 --> 01:06:57.760
mit Reencoding und so ein Shit.

01:06:59.940 --> 01:07:02.800
Late also möglichst geringe latency

01:07:03.180 --> 01:07:05.000
eins zu eins das Bild vom Stream

01:07:05.000 --> 01:07:06.320
abgreifen und in Browser packen.

01:07:09.330 --> 01:07:11.330
Was was geht eigentlich gerade ab

01:07:11.370 --> 01:07:12.350
mit meiner VM?

01:07:12.730 --> 01:07:13.290
Warum ist sie?

01:07:13.290 --> 01:07:14.570
Warum ist sie so am Limit

01:07:14.930 --> 01:07:15.870
und so abkacken?

01:07:21.720 --> 01:07:22.420
Restreamer.

01:07:22.440 --> 01:07:23.060
Ja klar.

01:07:23.840 --> 01:07:26.340
Ich nehme mir den Cloud Service dafür.

01:07:29.390 --> 01:07:30.970
Ich glaube Firefox ist da gerade

01:07:30.970 --> 01:07:33.010
ein bisschen bisschen ab am

01:07:33.010 --> 01:07:35.070
eskalieren. Es gibt

01:07:35.070 --> 01:07:36.410
einige Projekte,

01:07:38.470 --> 01:07:38.630
nee,

01:07:38.910 --> 01:07:41.110
Restreamer wird das

01:07:41.110 --> 01:07:44.680
aber können. Ich glaube nicht, dass

01:07:44.680 --> 01:07:45.920
das dafür das Richtige ist.

01:07:50.920 --> 01:07:52.120
Ja, da kann RTSP,

01:07:54.280 --> 01:07:54.760
ist halt

01:07:54.760 --> 01:07:56.200
wiederum die Frage, wie kriegt man da,

01:07:56.800 --> 01:07:58.920
das ist, ich vermute mal, dass Restreamer

01:07:58.920 --> 01:08:00.160
eher dafür gedacht ist, dass man

01:08:00.160 --> 01:08:02.840
quasi von einem Streaming-Service was abgreift

01:08:02.840 --> 01:08:04.400
und in den anderen reinpusht.

01:08:05.560 --> 01:08:06.900
Da gibt es keine Webseite

01:08:06.900 --> 01:08:08.540
für WebRTC oder sowas.

01:08:08.640 --> 01:08:10.160
Kann das Ding überhaupt WebRTC?

01:08:13.690 --> 01:08:14.730
Nee, kann's nicht.

01:08:23.320 --> 01:08:24.660
Nee, kann kein WebRTC.

01:08:27.000 --> 01:08:28.200
So, es gibt

01:08:28.200 --> 01:08:30.360
allerdings ein paar Projekte, die

01:08:30.360 --> 01:08:31.480
sagen, dass sie das können.

01:08:32.100 --> 01:08:34.220
Da gibt es GoTo, WebRTC

01:08:34.220 --> 01:08:36.220
und so. Es gibt einige Projekte,

01:08:36.440 --> 01:08:39.640
die das, da steht

01:08:39.640 --> 01:08:41.440
HTML5 Video Player und weiter.

01:08:42.460 --> 01:08:43.840
Was hat das jetzt genau damit

01:08:43.840 --> 01:08:44.180
zu tun?

01:08:48.160 --> 01:08:49.720
Das eine hat mit dem anderen nichts zu tun.

01:08:50.440 --> 01:08:53.330
Ich will den Chat aufmachen.

01:08:53.970 --> 01:08:54.430
Chat, gell.

01:08:57.080 --> 01:08:59.300
So, es gibt ein paar Projekte,

01:08:59.440 --> 01:09:01.140
die angeblich sowas machen. Ja, zum Beispiel

01:09:01.140 --> 01:09:03.000
das da habe ich ausprobiert oder

01:09:03.000 --> 01:09:05.280
RTSP, ToWebRTC.

01:09:05.660 --> 01:09:07.320
Es gibt ein paar Projekte, die ähnliche Sachen

01:09:07.320 --> 01:09:09.240
machen. Die nehmen einen Livestream

01:09:09.240 --> 01:09:11.500
von der Kamera und streamen

01:09:11.500 --> 01:09:13.160
den im Browser über WebRTC.

01:09:13.700 --> 01:09:15.460
WebRTC hat den großen Vorteil,

01:09:15.680 --> 01:09:17.040
dass es die

01:09:17.040 --> 01:09:19.360
Latency-freiste Technik ist, die es

01:09:19.360 --> 01:09:20.280
für den Browser gibt.

01:09:20.940 --> 01:09:23.160
Es ist nicht wirklich richtig latency-free.

01:09:23.600 --> 01:09:25.200
So ein paar Millisekunden,

01:09:25.300 --> 01:09:25.840
ein paar Frames.

01:09:25.860 --> 01:09:26.780
Du bist hinten dran, bist du immer.

01:09:27.540 --> 01:09:29.840
Aber doch ziemlich, ziemlich gut.

01:09:30.240 --> 01:09:31.880
WebRTC ist übrigens auch das, was

01:09:31.880 --> 01:09:34.260
so Sachen wie Teams benutzen für Videokonferenzen

01:09:34.260 --> 01:09:35.140
und sowas unten drunter.

01:09:36.080 --> 01:09:37.700
Also möglichst latency-free Video

01:09:37.700 --> 01:09:39.600
verschicken. Und das klappt auch

01:09:39.600 --> 01:09:43.730
erstaunlich gut. Und ich habe nichts

01:09:43.730 --> 01:09:45.790
gefunden. Ich habe diese ganzen Projekte ausprobiert

01:09:45.790 --> 01:09:47.790
und die machen

01:09:47.790 --> 01:09:49.790
alle Probleme mit meinen

01:09:49.790 --> 01:09:51.690
Kameras. Entweder laufen sie

01:09:51.690 --> 01:09:53.770
auf einem meiner Tablets nicht, sie laufen auf dem

01:09:53.770 --> 01:09:55.410
iPhone nicht richtig, sie laufen irgendwie

01:09:55.410 --> 01:09:57.070
auf dem Desktop nicht richtig.

01:09:57.870 --> 01:09:59.870
Internetverbindung, Kackenlaufen, whatever.

01:09:59.870 --> 01:10:01.870
Irgendwas ist immer scheiße

01:10:01.870 --> 01:10:03.870
und die Dinger funktionieren nicht richtig.

01:10:03.870 --> 01:10:05.870
Deswegen habe ich jetzt meine eigene Sache

01:10:05.870 --> 01:10:07.870
programmiert, die genau für

01:10:07.870 --> 01:10:09.870
eine Sache gut ist, meine

01:10:09.870 --> 01:10:11.870
kaputten, billigen

01:10:11.870 --> 01:10:13.870
China-Chinesen-Camps, die

01:10:13.870 --> 01:10:15.870
Streams abzugreifen und in den Browser

01:10:15.870 --> 01:10:17.870
zu packen.

01:10:17.870 --> 01:10:19.870
Mehr soll das

01:10:19.870 --> 01:10:21.870
nicht machen.

01:10:21.870 --> 01:10:23.870
Und es funktioniert. Es connectet sich über WebRTC

01:10:23.870 --> 01:10:25.870
und dann streamt es das Video

01:10:25.870 --> 01:10:27.870
von den Überwachungskameras.

01:10:27.870 --> 01:10:29.870
Wie gesagt, das ist jetzt ein Beispielvideo

01:10:29.870 --> 01:10:31.870
vom lokalen RTSP-Server. Macht keinen Unterschied,

01:10:31.870 --> 01:10:33.870
ob von Überwachungskameras oder hier.

01:10:33.870 --> 01:10:35.870
Das ist das gleiche

01:10:35.870 --> 01:10:39.440
Videoformat und das gleiche

01:10:39.440 --> 01:10:41.440
Übertragungsprotokoll von den Kameras

01:10:41.440 --> 01:10:50.700
sein. Das funktioniert ganz gut.

01:10:50.700 --> 01:10:52.700
Also die Latenz über ganz normales HLS-Streaming

01:10:52.700 --> 01:10:54.700
oder sowas ist enorm. Das sind mehrere

01:10:54.700 --> 01:10:56.700
Sekunden Unterschied.

01:10:56.700 --> 01:10:58.700
WebRTC ist tatsächlich relativ

01:10:58.700 --> 01:11:00.700
nah an

01:11:00.700 --> 01:11:02.700
geringstmögliche

01:11:02.700 --> 01:11:06.590
Latency im Browser.

01:11:06.590 --> 01:11:08.590
So, und damit

01:11:08.590 --> 01:11:10.590
das Ganze funktioniert,

01:11:10.590 --> 01:11:12.590
habe ich richtig hart rumgebastelt.

01:11:12.590 --> 01:11:14.590
Die Software besteht

01:11:14.590 --> 01:11:16.590
aus einer Komponente in

01:11:16.590 --> 01:11:18.590
Go. Die war mal

01:11:18.590 --> 01:11:20.590
in Rust, aber die Rust-Library funktioniert

01:11:20.590 --> 01:11:22.590
nicht so gut wie die Go-Library, weil

01:11:22.590 --> 01:11:24.590
die Rust-Library nur ein Klon der

01:11:24.590 --> 01:11:26.590
Go-Library ist. Mir wäre Rust

01:11:26.590 --> 01:11:28.590
in dem Fall lieber gewesen, weil sich Rust

01:11:28.590 --> 01:11:30.590
interopt mit anderen Sprachen besser

01:11:30.590 --> 01:11:32.590
funktioniert als Go interopt mit anderen Sprachen.

01:11:32.590 --> 01:11:43.680
Aber so ist es halt.

01:11:43.680 --> 01:11:45.680
Naja, mit Rusten.

01:11:45.680 --> 01:11:47.680
Ich bin kein krasser Go-Expert,

01:11:47.680 --> 01:11:49.680
aber so sieht der

01:11:49.680 --> 01:11:51.680
Go-Teil, wobei ich zeige euch erstmal den .NET-Teil.

01:11:51.680 --> 01:11:53.680
So, also es funktioniert folgendermaßen.

01:11:53.680 --> 01:11:55.680
FFmpeg geht her.

01:11:55.680 --> 01:11:57.680
Hier sieht man

01:11:57.680 --> 01:11:59.680
das. FFmpeg

01:11:59.680 --> 01:12:01.680
geht her. Das ist ganz viel FFmpeg-Magic.

01:12:01.680 --> 01:12:03.680
FFmpeg geht her

01:12:03.680 --> 01:12:05.680
und liest von der jeweiligen

01:12:05.680 --> 01:12:07.680
Kamera-URL, also in

01:12:07.680 --> 01:12:09.680
dem Fall ist das hier unten mein

01:12:09.680 --> 01:12:11.680
RTSP-Server. Das ist

01:12:11.680 --> 01:12:13.680
im Prinzip das, was man auch in der

01:12:13.680 --> 01:12:15.680
Config einstellt hier. Da wird nochmal

01:12:15.680 --> 01:12:17.680
normalerweise kommt da hier die URL

01:12:17.680 --> 01:12:19.680
zur Kamera hin.

01:12:19.680 --> 01:12:21.680
Jetzt halt hier zum lokalen Stream.

01:12:21.680 --> 01:12:23.680
FFmpeg liest den ganzen Kram ein. Es werden

01:12:23.680 --> 01:12:25.680
5-headigste

01:12:25.680 --> 01:12:27.680
FFmpeg-Optionen gesetzt.

01:12:27.680 --> 01:12:29.680
Fragt mich nicht, warum die da drinnen

01:12:29.680 --> 01:12:31.680
sind, zum größten Teil.

01:12:31.680 --> 01:12:33.680
Die sind drinnen, weil sie am besten funktionieren.

01:12:33.680 --> 01:12:35.680
Und der entscheidendste Punkt war

01:12:35.680 --> 01:12:37.680
das hier.

01:12:37.680 --> 01:12:39.680
Reorder-Queue-Size auf 0 zu stellen.

01:12:39.680 --> 01:12:41.680
Ansonsten hat das übelst krass

01:12:41.680 --> 01:12:43.680
rumgebackt

01:12:43.680 --> 01:12:45.680
mit meinen China-Kameras.

01:12:45.680 --> 01:12:47.680
Und ich weiß auch warum.

01:12:47.680 --> 01:12:49.680
Weil die RTSP

01:12:49.680 --> 01:12:51.680
Timestamps,

01:12:51.680 --> 01:12:53.680
die meine Videokameras

01:12:53.680 --> 01:12:55.680
schicken,

01:12:55.680 --> 01:12:57.680
die China-Kameras, die sind kaputt, die stimmen nicht.

01:12:57.680 --> 01:12:59.680
Und FFmpeg

01:12:59.680 --> 01:13:01.680
versucht quasi dann, die Pakete, die es

01:13:01.680 --> 01:13:03.680
übers Netzwerk bekommt, in die richtige Reihenfolge

01:13:03.680 --> 01:13:05.680
zu bringen. Problem ist nur, die richtige

01:13:05.680 --> 01:13:07.680
Reihenfolge ist falsch, weil die Timestamps

01:13:07.680 --> 01:13:09.680
oftmals nicht stimmen von den Billig-Kameras.

01:13:09.680 --> 01:13:11.680
Deswegen, indem ich das Reordering

01:13:11.680 --> 01:13:13.680
abschalte, wird einfach

01:13:13.680 --> 01:13:15.680
das, was reinkommt, weitergeschickt

01:13:15.680 --> 01:13:17.680
im Browser. Sofort, sobald es da ist.

01:13:17.680 --> 01:13:19.680
Und dann stimmt die Reihenfolge wieder.

01:13:19.680 --> 01:13:24.400
Und dann macht FFmpeg

01:13:24.400 --> 01:13:26.400
ganz viel FFmpeg-Magic

01:13:26.400 --> 01:13:30.930
und liest die Kamerastreams.

01:13:30.930 --> 01:13:32.930
Und dann

01:13:32.930 --> 01:13:34.930
übergibt es die Kamerastreams an Go.

01:13:34.930 --> 01:13:36.930
Und Go

01:13:36.930 --> 01:13:38.930
schickt die

01:13:38.930 --> 01:13:40.930
Kann man das ein bisschen größer machen?

01:13:40.930 --> 01:13:45.010
Und Go schickt

01:13:45.010 --> 01:13:47.010
die Sachen weiter

01:13:47.010 --> 01:13:49.010
an den Browser.

01:13:49.010 --> 01:13:53.730
Macht es nicht Sinn, die FFmpeg

01:13:53.730 --> 01:13:55.730
Dickkram auch in die Konfig zu packen?

01:13:55.730 --> 01:13:57.730
Nee.

01:13:57.730 --> 01:13:59.730
Das ist für alles gleich.

01:13:59.730 --> 01:14:01.730
Du kannst indirekt ein paar Optionen

01:14:01.730 --> 01:14:03.730
setzen.

01:14:03.730 --> 01:14:08.450
Warum nicht Rust?

01:14:10.450 --> 01:14:12.450
Dankeschön für den Sub.

01:14:12.450 --> 01:14:14.450
Bist du jetzt wirklich erst in den Stream gekommen?

01:14:14.450 --> 01:14:16.450
Ich habe das, glaube ich, heute schon 50

01:14:16.450 --> 01:14:18.450
Mal erzählt, warum nicht Rust.

01:14:18.450 --> 01:14:20.450
Der Witz ist, das war Rust.

01:14:20.450 --> 01:14:26.190
Das war Rust ursprünglich.

01:14:26.190 --> 01:14:28.190
Ach, ich habe mich verguckt.

01:14:28.190 --> 01:14:30.190
Und der Friedrich Merz,

01:14:30.190 --> 01:14:32.190
der bekannter Rust-Fan ist,

01:14:32.190 --> 01:14:34.190
hat das gefragt.

01:14:34.190 --> 01:14:36.190
Also, das war ursprünglich in Rust.

01:14:36.190 --> 01:14:38.190
Was man hier sieht,

01:14:38.190 --> 01:14:40.190
das war mal ursprünglich in Rust

01:14:40.190 --> 01:14:42.190
programmiert hier.

01:14:42.190 --> 01:14:44.190
Man entdeckt da übrigens sehr viele Ähnlichkeiten

01:14:44.190 --> 01:14:46.190
zu meinem Go-Code.

01:14:46.190 --> 01:14:48.190
Was aber auch daran liegt, dass die Rust-Library,

01:14:48.190 --> 01:14:52.780
die ich verwendet habe, ein Clone der Go-Library ist.

01:14:52.780 --> 01:14:56.800
Und

01:14:56.800 --> 01:14:58.800
Rust funktioniert das Übertragen aber nicht richtig.

01:14:58.800 --> 01:15:00.800
Das backt rum.

01:15:00.800 --> 01:15:02.800
Ich habe das hier neu zusammen gewurschtelt

01:15:02.800 --> 01:15:04.800
in Go.

01:15:04.800 --> 01:15:06.800
Läuft die WebRTC-Verbindung

01:15:06.800 --> 01:15:08.800
über TCP oder UDP?

01:15:08.800 --> 01:15:10.800
Kann ich dir zeigen.

01:15:10.800 --> 01:15:12.800
Das sieht man hier.

01:15:12.800 --> 01:15:14.800
Es gibt zwei Möglichkeiten, das einzustellen.

01:15:14.800 --> 01:15:16.800
Man kann sagen,

01:15:16.800 --> 01:15:18.800
Use TCP oder

01:15:18.800 --> 01:15:20.800
Use UDP.

01:15:20.800 --> 01:15:22.800
Und aktuell geht das über

01:15:22.800 --> 01:15:28.420
TCP.

01:15:28.420 --> 01:15:30.420
Aber es geht beides.

01:15:30.420 --> 01:15:34.180
Und das nice daran

01:15:34.180 --> 01:15:40.820
ist, dass

01:15:40.820 --> 01:15:42.820
man bei TCP als auch UDP

01:15:42.820 --> 01:15:44.820
diese Library

01:15:44.820 --> 01:15:46.820
verbindungs-multiplexen kann.

01:15:46.820 --> 01:15:48.820
Also es reicht ein Port zu öffnen

01:15:48.820 --> 01:15:50.820
für alle WebRTC-Verbindungen.

01:15:50.820 --> 01:15:52.820
Das ist mega nice.

01:15:52.820 --> 01:15:54.820
Normalerweise muss man einfach alle UDP-Ports erlauben,

01:15:54.820 --> 01:15:56.820
damit das funktioniert.

01:15:56.820 --> 01:15:58.820
Und das ist ja pepega, das macht ja keiner.

01:15:58.820 --> 01:16:05.390
Also aktuell geht das über TCP.

01:16:05.390 --> 01:16:07.390
Nachdem ich die Streams und so auch immer ganz gerne

01:16:07.390 --> 01:16:09.390
im WLAN angucke und manchmal auch auf der Terrasse,

01:16:09.390 --> 01:16:11.390
wo vielleicht auch ein paar Pakete verloren gehen,

01:16:11.390 --> 01:16:13.390
habe ich mir gedacht, eventuell ist es sinnvoller

01:16:13.390 --> 01:16:15.390
wobei ich mir nicht sicher bin,

01:16:15.390 --> 01:16:17.390
ob der Gedankengang so nach

01:16:17.390 --> 01:16:19.390
ob da wirklich was dran ist.

01:16:19.390 --> 01:16:21.390
Ich kann es aber umstellen.

01:16:21.390 --> 01:16:23.390
Ich kann es umstellen zwischen TCP und UDP.

01:16:23.390 --> 01:16:25.390
Also ihr entdeckt hier sehr viele

01:16:25.390 --> 01:16:27.390
Parallelen, falls einer dabei war,

01:16:27.390 --> 01:16:29.390
wo wir das in Rust gebaut haben.

01:16:29.390 --> 01:16:31.390
Zwischen dem hier in Rust und dem in Go.

01:16:31.390 --> 01:16:33.390
Go ist quasi das, was ich in Rust gemacht habe,

01:16:33.390 --> 01:16:35.390
nur halt mit der Go Library.

01:16:35.390 --> 01:16:37.390
Und die Library ist eh sehr ähnlich.

01:16:37.390 --> 01:16:39.390
Nur der Unterschied ist,

01:16:39.390 --> 01:16:41.390
dass es eben in Go funktioniert

01:16:41.390 --> 01:16:43.390
und in Rust nicht.

01:16:43.390 --> 01:16:45.390
Kombiniere mit dem Monarch S Projekt.

01:16:45.390 --> 01:16:47.390
Ne, das lösche ich wieder, das ersetzt das komplett.

01:16:47.390 --> 01:16:49.390
Zumal ich hier keinerlei Videoaufnahmen

01:16:49.390 --> 01:16:51.390
oder irgendeinen Shit machen will.

01:16:51.390 --> 01:16:55.540
Einfach nur streamen in den Browser.

01:16:55.540 --> 01:16:57.540
Was ein bisschen eklig ist,

01:16:57.540 --> 01:16:59.540
ist Go und Interopt

01:16:59.540 --> 01:17:01.540
mit anderen Programmiersprachen.

01:17:01.540 --> 01:17:03.540
Weil ihr seht ja, ich rufe ja hier

01:17:03.540 --> 01:17:05.540
zum Beispiel, hier sieht man es, guckt da hier,

01:17:05.540 --> 01:17:07.540
SendFrame.

01:17:07.540 --> 01:17:09.540
Ich rufe aus .NET

01:17:09.540 --> 01:17:11.540
eine Funktion auf,

01:17:11.540 --> 01:17:13.540
die eigentlich in Go ist.

01:17:13.540 --> 01:17:15.540
Und da ist Go

01:17:15.540 --> 01:17:17.540
nicht so das Beste für, für Interopt

01:17:17.540 --> 01:17:19.540
mit anderen Programmiersprachen.

01:17:19.540 --> 01:17:21.540
Da muss man hier oben drüber schreiben,

01:17:21.540 --> 01:17:23.540
Export SendFrame.

01:17:23.540 --> 01:17:25.540
Das sorgt dann dafür, dass diese Funktion

01:17:25.540 --> 01:17:27.540
vom Go Compiler

01:17:27.540 --> 01:17:29.540
mit C

01:17:29.540 --> 01:17:31.540
Wie nennt man das?

01:17:31.540 --> 01:17:33.540
C

01:17:33.540 --> 01:17:35.540
Definitions

01:17:35.540 --> 01:17:37.540
irgendwie exportiert wird,

01:17:37.540 --> 01:17:39.540
sodass man von anderen Programmiersprachen

01:17:39.540 --> 01:17:41.540
darauf zugreifen kann.

01:17:41.540 --> 01:17:43.540
Also wenn ich hier SendFrame aufrufe,

01:17:43.540 --> 01:17:45.540
kommt das hier in Go raus.

01:17:45.540 --> 01:17:47.540
Also ich rufe in .NET SendFrame auf

01:17:47.540 --> 01:17:49.540
und hier kommt das dann in Go raus.

01:17:49.540 --> 01:17:51.540
Das funktioniert folgendermaßen,

01:17:51.540 --> 01:17:53.540
so wie man das in C Sharp macht.

01:17:53.540 --> 01:17:55.540
Man sieht das auch hier,

01:17:55.540 --> 01:17:57.540
dass das alles sehr low level ist.

01:17:57.540 --> 01:17:59.540
Wenn ich mir die Option anzeigen lasse,

01:17:59.540 --> 01:18:01.540
Alter, Rider, please.

01:18:01.540 --> 01:18:03.540
What the fuck.

01:18:03.540 --> 01:18:05.540
Einfach anzeigen lassen.

01:18:05.540 --> 01:18:09.490
Okay, jetzt.

01:18:12.990 --> 01:18:14.990
Rider hat keinen Bock.

01:18:14.990 --> 01:18:16.990
Ich darf da nicht mit der Maus drauf.

01:18:16.990 --> 01:18:18.990
Es gibt einen Byte-Pointer

01:18:18.990 --> 01:18:20.990
zu den Daten

01:18:20.990 --> 01:18:22.990
von einem Video-Frame.

01:18:22.990 --> 01:18:24.990
Es gibt die Länge,

01:18:24.990 --> 01:18:26.990
wie lang das Byte-Array ist,

01:18:26.990 --> 01:18:28.990
wie viele Bytes,

01:18:28.990 --> 01:18:30.990
wie groß der Video-Frame ist quasi

01:18:30.990 --> 01:18:34.940
und

01:18:34.940 --> 01:18:36.940
wie viele Frames,

01:18:36.940 --> 01:18:38.940
also wie lang

01:18:38.940 --> 01:18:40.940
die Duration

01:18:40.940 --> 01:18:42.940
von diesem einzelnen Video-Bild ist.

01:18:42.940 --> 01:18:44.940
Kann ja auch sein, dass das nur ein paar Millisekunden ist.

01:18:44.940 --> 01:18:46.940
Also wie lang das Bild ist.

01:18:46.940 --> 01:18:48.940
Also wie lang im Stream.

01:18:48.940 --> 01:18:52.380
Das Bild letztendlich dann

01:18:52.380 --> 01:18:54.380
für die Timestamp-Generierung

01:18:54.380 --> 01:18:57.700
ist das wichtig.

01:18:57.700 --> 01:18:59.700
So, und wer sich fragt,

01:18:59.700 --> 01:19:01.700
wie kann man Go und C Sharp

01:19:01.700 --> 01:19:03.700
zusammen verwenden,

01:19:03.700 --> 01:19:05.700
das geht tatsächlich über ein C-Interface,

01:19:05.700 --> 01:19:09.070
so wie es der Yantari geschrieben hat.

01:19:09.070 --> 01:19:11.070
Das ist sicherlich nicht die eleganteste Variante.

01:19:11.070 --> 01:19:13.070
In Rust war das schöner,

01:19:13.070 --> 01:19:15.070
das Interop, aber es ist mal nur so wie es ist.

01:19:15.070 --> 01:19:17.070
In Rust hat es nicht funktioniert.

01:19:17.070 --> 01:19:19.070
Da muss man sowas hier machen.

01:19:19.070 --> 01:19:21.070
Ja, hier ist die Low-Level-Geschichte.

01:19:21.070 --> 01:19:23.070
Da muss man dann in C Sharp sagen.

01:19:23.070 --> 01:19:25.070
Hier, guck mal.

01:19:25.070 --> 01:19:27.070
Es gibt hier eine unmanaged

01:19:27.070 --> 01:19:29.070
DLL

01:19:29.070 --> 01:19:31.070
heißt das unter Windows.

01:19:31.070 --> 01:19:33.070
Ja, unter

01:19:33.070 --> 01:19:35.070
Linux

01:19:35.070 --> 01:19:37.070
würde das .so heißen.

01:19:37.070 --> 01:19:39.070
Das ist das gleiche wie eine DLL, aber

01:19:39.070 --> 01:19:41.070
man merkt, dass die Sharp mal irgendwann für Windows

01:19:41.070 --> 01:19:43.070
erstellt wurden, da heißt es noch DLL-Import.

01:19:43.070 --> 01:19:45.070
Mittlerweile gibt es übrigens eine Alternative zu,

01:19:45.070 --> 01:19:47.070
die nicht mehr DLL-Import heißt, sondern Library-Import.

01:19:47.070 --> 01:19:49.070
Da kann man sagen,

01:19:49.070 --> 01:19:51.070
hier, es gibt hier eine

01:19:51.070 --> 01:19:53.070
Shared Library

01:19:53.070 --> 01:19:55.070
mit dem Namen WebRTC Linux

01:19:55.070 --> 01:19:57.070
und

01:19:57.070 --> 01:19:59.070
dort drinnen

01:19:59.070 --> 01:20:01.070
gibt es eine Funktion, die sich SendFrame

01:20:01.070 --> 01:20:03.070
nennt. Sieh hier,

01:20:03.070 --> 01:20:05.070
deswegen der Export in Go.

01:20:05.070 --> 01:20:07.070
Und die kannst du so

01:20:07.070 --> 01:20:09.070
aufrufen. Die hat diese

01:20:09.070 --> 01:20:11.070
Signatur, ja.

01:20:11.070 --> 01:20:14.770
ID

01:20:14.770 --> 01:20:16.770
Ja,

01:20:16.770 --> 01:20:18.770
ID,

01:20:18.770 --> 01:20:20.770
Duration, Länge und am Ende

01:20:20.770 --> 01:20:22.770
ein Pointer zu einem

01:20:22.770 --> 01:20:24.770
ByteArray. Da wird das ganze

01:20:24.770 --> 01:20:26.770
zu Go rüber geschickt und in Go

01:20:26.770 --> 01:20:28.770
macht er dann, übrigens bis ich das hier

01:20:28.770 --> 01:20:30.770
funktionierend hatte, da hat mich Go wieder

01:20:30.770 --> 01:20:32.770
übertrieben abgefuckt.

01:20:32.770 --> 01:20:34.770
Ich bekomme ja hier oben

01:20:34.770 --> 01:20:36.770
die Länge

01:20:36.770 --> 01:20:38.770
und einen Pointer

01:20:38.770 --> 01:20:40.770
zu dem ByteArray. Das hier ist

01:20:40.770 --> 01:20:42.770
der Gegenpart in Go

01:20:44.770 --> 01:20:46.770
zu dem hier.

01:20:46.770 --> 01:20:48.770
Und

01:20:48.770 --> 01:20:50.770
in Go gibt es die Möglichkeit,

01:20:50.770 --> 01:20:52.770
dass du ein UnmanagedArray nimmst

01:20:52.770 --> 01:20:54.770
und das kopierst in ein

01:20:54.770 --> 01:20:56.770
ManagedGoArray. Ich will es aber

01:20:56.770 --> 01:20:58.770
nicht kopieren. Ich will es einfach

01:20:58.770 --> 01:21:00.770
nur als ByteArray verwenden.

01:21:00.770 --> 01:21:02.770
So wie es ist. Ich will es nicht kopieren.

01:21:02.770 --> 01:21:04.770
Und da kann man sowas hier machen.

01:21:04.770 --> 01:21:06.770
Sogar meine IDE sagt,

01:21:06.770 --> 01:21:08.770
das ist falsch, ja. Redundant.

01:21:08.770 --> 01:21:10.770
Wenn ich das rausnehme, kompiliert es nicht mehr.

01:21:10.770 --> 01:21:12.770
Da kann man sowas hier machen. Das habe ich

01:21:12.770 --> 01:21:14.770
auch nur über StackOverflow gefunden.

01:21:14.770 --> 01:21:16.770
Unsafe Slice

01:21:16.770 --> 01:21:18.770
Pointer Byte

01:21:18.770 --> 01:21:20.770
Whatever Go, aber es funktioniert.

01:21:20.770 --> 01:21:22.770
Und dann gibt sich Go

01:21:22.770 --> 01:21:24.770
damit zufrieden, dass das angeblich ein ByteArray

01:21:24.770 --> 01:21:28.850
wäre. Und dann kann ich das

01:21:28.850 --> 01:21:30.850
hier verschicken

01:21:30.850 --> 01:21:32.850
an den Browser. Ja.

01:21:32.850 --> 01:21:36.800
So ist das.

01:21:36.800 --> 01:21:38.800
Also wilde Geschichte.

01:21:38.800 --> 01:21:40.800
Aber es funktioniert echt erstaunlich gut.

01:21:40.800 --> 01:21:42.800
Ich habe das seit gestern hier laufen auf einer Kiste,

01:21:42.800 --> 01:21:44.800
die hinter mir im Serverraum steht.

01:21:44.800 --> 01:21:46.800
Serverraum, also kleine.

01:21:46.800 --> 01:21:48.800
Mein Mini-Serverrack, was da steht.

01:21:48.800 --> 01:21:50.800
Da ist

01:21:50.800 --> 01:21:52.800
auf der Kiste

01:21:52.800 --> 01:21:54.800
eine VM und in der VM laufen ein paar

01:21:54.800 --> 01:21:56.800
mehr und unter anderem das.

01:21:56.800 --> 01:21:58.800
Und das läuft seit gestern und es funktioniert

01:21:58.800 --> 01:22:00.800
erstaunlich gut. Es funktioniert

01:22:00.800 --> 01:22:02.800
viel besser als alle GitHub-Projekte,

01:22:02.800 --> 01:22:04.800
die ich bisher benutzt habe,

01:22:04.800 --> 01:22:06.800
zum Umwandeln von Kamerastreams zu WebRTC.

01:22:06.800 --> 01:22:08.800
Und

01:22:08.800 --> 01:22:10.800
sogar besser als ich gedacht

01:22:10.800 --> 01:22:12.800
habe. Ich hatte ein paar

01:22:12.800 --> 01:22:14.800
Probleme, ja, mit Crashes,

01:22:14.800 --> 01:22:16.800
weil ich an manchen Stellen nicht aufgepasst habe,

01:22:16.800 --> 01:22:18.800
was ich wie unmanaged

01:22:18.800 --> 01:22:20.800
übergebe.

01:22:20.800 --> 01:22:22.800
Aber im Großen und Ganzen funktioniert es echt gut.

01:22:22.800 --> 01:22:24.800
Ja.

01:22:24.800 --> 01:22:26.800
Problem ist jetzt, Leute,

01:22:26.800 --> 01:22:28.800
wir können nichts machen an dem Projekt

01:22:28.800 --> 01:22:30.800
großartig im Stream, weil

01:22:30.800 --> 01:22:32.800
eigentlich wollte ich mit euch das MemoryLeak

01:22:32.800 --> 01:22:37.520
suchen und fixen. Aber es gibt kein

01:22:37.520 --> 01:22:39.520
MemoryLeak. Warum C und Go gleichzeitig

01:22:39.520 --> 01:22:41.520
benutzen? Ich benutze nicht C und Go gleichzeitig.

01:22:41.520 --> 01:22:43.520
Ich benutze die Sharp und Go gleichzeitig.

01:22:43.520 --> 01:22:47.790
Und warum Go?

01:22:47.790 --> 01:22:49.790
Weil die

01:22:49.790 --> 01:22:51.790
beste Library für WebRTC

01:22:51.790 --> 01:22:58.500
in Go ist.

01:22:58.500 --> 01:23:00.500
Und für mich das angenehmste, wenn es um

01:23:00.500 --> 01:23:02.500
Web-Anwendungen geht,

01:23:02.500 --> 01:23:04.500
.NET ist.

01:23:04.500 --> 01:23:06.500
Und dementsprechend habe ich quasi

01:23:06.500 --> 01:23:08.500
das Web-Anwendungs-

01:23:08.500 --> 01:23:10.500
Backend, wenn man es so nennen kann,

01:23:10.500 --> 01:23:12.500
in

01:23:12.500 --> 01:23:14.500
C Sharp

01:23:14.500 --> 01:23:16.500
programmiert und die WebRTC-Geschichte

01:23:16.500 --> 01:23:23.070
in Go. Ja, und das FFmpeg,

01:23:23.070 --> 01:23:25.070
Low-Level FFmpeg-Zeug

01:23:25.070 --> 01:23:27.070
habe ich auch in

01:23:27.070 --> 01:23:29.070
C Sharp gebaut, weil

01:23:29.070 --> 01:23:31.070
ganz ehrlich, C Interop in Go, das ist

01:23:31.070 --> 01:23:36.180
so ätzend. Oh, das

01:23:36.180 --> 01:23:38.180
ist eklig, Alter. Das ist vor allem nicht

01:23:38.180 --> 01:23:40.180
Cross-Platform. Das ist Windows-Only.

01:23:40.180 --> 01:23:42.180
Aber ihr seid doch

01:23:42.180 --> 01:23:44.180
übrigens nicht die Einzigen, die das benutzen.

01:23:44.180 --> 01:23:46.180
Dice verwendet

01:23:46.180 --> 01:23:48.180
das für Battlefield auch, habe ich gehört.

01:23:48.180 --> 01:23:50.180
Die Frostbite-Engine

01:23:50.180 --> 01:23:52.180
basiert ganz viel auf C++

01:23:52.180 --> 01:23:57.660
CLI.

01:23:57.660 --> 01:23:59.660
Es gibt eine ganz gute

01:23:59.660 --> 01:24:01.660
WebRTC-Library

01:24:01.660 --> 01:24:07.150
für C Sharp.

01:24:07.150 --> 01:24:09.150
Die habe ich auch schon mal verwendet, die ist gar nicht so übel.

01:24:09.150 --> 01:24:13.040
Aber die ist nicht so gut wie die Go-Library.

01:24:13.040 --> 01:24:15.040
Und die kann

01:24:15.040 --> 01:24:17.040
ein paar Sachen nicht, die die Go-Library kann.

01:24:17.040 --> 01:24:20.740
Deswegen habe ich es da.

01:24:20.740 --> 01:24:22.740
Und eins muss man sagen,

01:24:22.740 --> 01:24:24.740
Go ist

01:24:24.740 --> 01:24:26.740
erträglich, solange man

01:24:26.740 --> 01:24:28.740
im Go-Ökosystem bleibt.

01:24:28.740 --> 01:24:30.740
Dann geht das schon, klar.

01:24:30.740 --> 01:24:32.740
Alles andere ist

01:24:32.740 --> 01:24:41.620
abartig.

01:24:41.620 --> 01:24:43.620
Wo kommt denn diese Klammer her gerade?

01:24:43.620 --> 01:24:45.620
Kann mir das mal einer erklären?

01:24:45.620 --> 01:24:49.890
Was macht denn die da?

01:24:49.890 --> 01:24:51.890
Ah, das ist der Schleifen-Body und

01:24:51.890 --> 01:24:53.890
das ist die Range-Definition.

01:24:53.890 --> 01:24:55.890
Alter, was habe ich denn da Unleserliches gebaut?

01:24:57.890 --> 01:24:59.890
Das sieht ja dämlich aus.

01:24:59.890 --> 01:25:10.300
Obwohl ich wieder fast verzweifelt

01:25:10.300 --> 01:25:12.300
bin in Go, sind einfache Sachen

01:25:12.300 --> 01:25:14.300
oder verzweifle ich in Go immer fast,

01:25:14.300 --> 01:25:17.810
sind einfache Sachen wie

01:25:17.810 --> 01:25:19.810
Dictionaries,

01:25:19.810 --> 01:25:21.810
Key-Value-Stores,

01:25:21.810 --> 01:25:23.810
Key-Value-Hashmaps und sowas.

01:25:23.810 --> 01:25:25.810
Weil das ist einfach

01:25:25.810 --> 01:25:27.810
so eklig in Go zu benutzen.

01:25:27.810 --> 01:25:29.810
Guck mal, ich habe hier

01:25:29.810 --> 01:25:31.810
ein

01:25:31.810 --> 01:25:33.810
also allein schon diese Syntax

01:25:33.810 --> 01:25:35.810
in Go, ja.

01:25:35.810 --> 01:25:37.810
Im Endeffekt

01:25:37.810 --> 01:25:39.810
in .NET wäre das hier ein Dictionary,

01:25:39.810 --> 01:25:41.810
mit Key-Type in 64

01:25:41.810 --> 01:25:43.810
und Value

01:25:43.810 --> 01:25:45.810
Track-Local-Static-Sample.

01:25:47.810 --> 01:25:49.810
Dann muss man das irgendwie so

01:25:49.810 --> 01:25:51.810
mit Make...

01:25:53.810 --> 01:25:55.810
Wisst ihr, ich verstehe nicht, ansonsten machen sie

01:25:55.810 --> 01:25:57.810
alles mit New in Go, hier ist es

01:25:57.810 --> 01:25:59.810
Make aus irgendwelchen Gründen.

01:25:59.810 --> 01:26:01.810
Aber gut, ich weiß, warum es Make ist,

01:26:01.810 --> 01:26:03.810
weil die Syntax hier

01:26:03.810 --> 01:26:05.810
kein Function-Call irgendwie erlaubt.

01:26:07.810 --> 01:26:09.810
Es ist eklig. Zumindest, das ist noch nicht

01:26:09.810 --> 01:26:11.810
das ekligste. Was ich richtig

01:26:11.810 --> 01:26:13.810
abartig finde, ist...

01:26:13.810 --> 01:26:19.100
Ne, Moment.

01:26:19.100 --> 01:26:21.100
Das ist gar nicht das, was ich euch zeigen wollte.

01:26:21.100 --> 01:26:24.540
Wo habe ich denn das hier?

01:26:24.540 --> 01:26:26.540
Hier.

01:26:26.540 --> 01:26:28.540
Löschen

01:26:28.540 --> 01:26:30.540
aus Dictionaries und sowas.

01:26:30.540 --> 01:26:32.540
Guck mal, es ist

01:26:32.540 --> 01:26:34.540
super weird,

01:26:34.540 --> 01:26:36.540
ja. Man kann

01:26:36.540 --> 01:26:46.320
sagen...

01:26:46.320 --> 01:26:59.780
Wo habe ich es denn?

01:26:59.780 --> 01:27:01.780
Ja, man kann sagen,

01:27:01.780 --> 01:27:03.780
wie man das aus anderen Programmiersprachen kennt,

01:27:03.780 --> 01:27:05.780
in einem Dictionary quasi

01:27:05.780 --> 01:27:07.780
so mit Array-Access kann man sagen, hier

01:27:07.780 --> 01:27:09.780
an dieser ID soll dieser Track

01:27:09.780 --> 01:27:11.780
rein. So weit, so gut.

01:27:11.780 --> 01:27:13.780
Jetzt hätte ich eigentlich erwartet,

01:27:13.780 --> 01:27:15.780
oder das ist, was mich in Go immer verwirrt,

01:27:15.780 --> 01:27:17.780
dass man auch... Guck mal, man hat ja verschiedene...

01:27:19.780 --> 01:27:21.780
Das ist eine Map und eine Map

01:27:21.780 --> 01:27:23.780
hat irgendwie keinerlei Methoden drauf.

01:27:23.780 --> 01:27:25.780
Ich hätte gedacht, okay, man hat dann

01:27:25.780 --> 01:27:27.780
vielleicht sowas wie Delete, aber das gibt es nicht.

01:27:27.780 --> 01:27:29.780
In Go, um was aus einer Map

01:27:29.780 --> 01:27:31.780
zu löschen, müsste man jetzt sowas

01:27:31.780 --> 01:27:33.780
hier machen. Delete,

01:27:33.780 --> 01:27:35.780
Tracks

01:27:35.780 --> 01:27:37.780
und dann die ID und sowas.

01:27:37.780 --> 01:27:39.780
Ganz furchtbar weird.

01:27:39.780 --> 01:27:41.780
Und das Ganze gibt es auch noch mit Append.

01:27:41.780 --> 01:27:43.780
Das gibt es allerdings nur für einen

01:27:43.780 --> 01:27:45.780
Slice.

01:27:45.780 --> 01:27:54.660
Sehr, sehr merkwürdig alles.

01:27:54.660 --> 01:27:56.660
Ah ja. Übrigens,

01:27:56.660 --> 01:28:00.480
so einer Range Loop ist

01:28:00.480 --> 01:28:02.480
das in N64.

01:28:02.480 --> 01:28:04.480
Da hatten wir es ja gestern von.

01:28:04.480 --> 01:28:06.480
Brauchst du nicht sogar einen Pointer

01:28:06.480 --> 01:28:08.480
zur Map? Ey,

01:28:08.480 --> 01:28:10.480
keine Ahnung. Bei Go mache ich dann

01:28:10.480 --> 01:28:12.480
immer so lang rum, bis es funktioniert.

01:28:12.480 --> 01:28:14.480
Zumindest,

01:28:14.480 --> 01:28:16.480
was mich wieder echt fertig gemacht hat,

01:28:16.480 --> 01:28:21.520
ist...

01:28:21.520 --> 01:28:23.520
Warum ist denn das hier noch drin? Das brauche ich gar nicht mehr.

01:28:23.520 --> 01:28:27.150
Weg damit.

01:28:27.150 --> 01:28:29.150
Was mich echt fertig gemacht hat,

01:28:29.150 --> 01:28:31.150
ist, ich wollte im Endeffekt

01:28:31.150 --> 01:28:33.150
folgendes machen.

01:28:33.150 --> 01:28:35.150
Ich habe hier

01:28:35.150 --> 01:28:37.150
eine... Ich wollte

01:28:37.150 --> 01:28:39.150
ein Dictionary haben,

01:28:39.150 --> 01:28:41.150
wo ich mir meine Connections speichern

01:28:41.150 --> 01:28:43.150
kann. Also sprich,

01:28:43.150 --> 01:28:45.150
alle Clients, die connected sind,

01:28:45.150 --> 01:28:47.150
möchte ich mir

01:28:47.150 --> 01:28:49.150
speichern. Und jede Connection braucht

01:28:49.150 --> 01:28:51.150
eine Unique ID, damit das

01:28:51.150 --> 01:28:53.150
funktioniert. So.

01:28:53.150 --> 01:28:55.150
Hier wird die Connection angelegt, ist vollkommen wurscht.

01:28:55.150 --> 01:28:57.150
Und irgendwann

01:28:57.150 --> 01:28:59.150
brauche ich eine ID für die Connection

01:28:59.150 --> 01:29:01.150
und muss sie speichern.

01:29:01.150 --> 01:29:03.150
Da habe ich mir gedacht, ey,

01:29:03.150 --> 01:29:05.150
kann doch nicht so schwierig sein.

01:29:05.150 --> 01:29:07.150
Generierst du eine Unique ID,

01:29:07.150 --> 01:29:09.150
packst sie in den Dictionary,

01:29:09.150 --> 01:29:11.150
dann ist mir eingefallen, okay,

01:29:11.150 --> 01:29:13.150
UUID ist doof

01:29:13.150 --> 01:29:15.150
für Interopt mit anderen Programmiersprachen,

01:29:15.150 --> 01:29:17.150
weil unter der Haube ist es ein

01:29:17.150 --> 01:29:19.150
int128 und

01:29:19.150 --> 01:29:21.150
int128 ist nur so ein halbdefiniertes

01:29:21.150 --> 01:29:23.150
Konstrukt und das ist immer schwierig

01:29:23.150 --> 01:29:25.150
von einer Programmiersprache in die andere.

01:29:25.150 --> 01:29:27.150
Dann müsstest du 2int64 drum herum machen.

01:29:27.150 --> 01:29:29.150
Eklig, eklig.

01:29:29.150 --> 01:29:31.150
Aber ich brauche eine Unique ID.

01:29:31.150 --> 01:29:33.150
Das war das übelste

01:29:33.150 --> 01:29:35.150
Gefrickel, bis ich

01:29:35.150 --> 01:29:37.150
das ordentlich in

01:29:37.150 --> 01:29:39.150
Go hinbekommen habe.

01:29:39.150 --> 01:29:41.150
Und nxcxdx,

01:29:41.150 --> 01:29:43.150
dankeschön für den PrimeSub.

01:29:43.150 --> 01:29:46.530
Und das naheliegendste,

01:29:46.530 --> 01:29:48.530
was mir eingefallen ist,

01:29:48.530 --> 01:29:50.530
das nicht mit einem eingebauten

01:29:50.530 --> 01:29:52.530
Typ direkt zu machen,

01:29:52.530 --> 01:29:54.530
sondern das zu rappen

01:29:54.530 --> 01:29:56.530
in einem eigenen Typ

01:29:56.530 --> 01:29:58.530
und rausgekommen ist dann

01:29:58.530 --> 01:30:00.530
das hier.

01:30:00.530 --> 01:30:02.530
Ich habe mir

01:30:02.530 --> 01:30:04.530
eine eigene Klasse gebaut

01:30:04.530 --> 01:30:06.530
oder einen eigenen Typ gebaut,

01:30:06.530 --> 01:30:08.530
die sich Connection Registrieren

01:30:08.530 --> 01:30:10.530
intern besteht die wiederum

01:30:10.530 --> 01:30:12.530
aus einer

01:30:12.530 --> 01:30:14.530
aus einem Dictionary

01:30:14.530 --> 01:30:16.530
in 64 Key

01:30:16.530 --> 01:30:18.530
WebRTC Connection und einem

01:30:18.530 --> 01:30:20.530
ReadWriteMutex

01:30:20.530 --> 01:30:22.530
was ich auch schon

01:30:22.530 --> 01:30:24.530
ekligst finde zu benutzen.

01:30:24.530 --> 01:30:26.530
Aber so ist

01:30:26.530 --> 01:30:28.530
das halt in Go.

01:30:28.530 --> 01:30:32.350
Und dann musst du hier oben die Sachen

01:30:32.350 --> 01:30:34.350
definieren, kannst du aber nicht initialisieren.

01:30:34.350 --> 01:30:36.350
Das musst du hier unten in so einer komischen

01:30:36.350 --> 01:30:41.460
new Function machen.

01:30:41.460 --> 01:30:43.460
Und dann hast du so komische Konstrukte

01:30:43.460 --> 01:30:45.460
wie sowas hier.

01:30:45.460 --> 01:30:47.460
If value,

01:30:47.460 --> 01:30:49.460
okay,

01:30:49.460 --> 01:30:51.460
ja und wenn okay,

01:30:51.460 --> 01:30:53.460
dann pfff, alter.

01:30:53.460 --> 01:30:57.470
Da hat sich mir mein Hirn verbogen,

01:30:57.470 --> 01:30:59.470
bis ich das in Go rausgekriegt habe,

01:30:59.470 --> 01:31:01.470
wie man das auf dem

01:31:01.470 --> 01:31:05.230
Go-Way macht.

01:31:05.230 --> 01:31:07.230
Dann das schöne Unlocken

01:31:07.230 --> 01:31:09.230
und wieder Locken,

01:31:09.230 --> 01:31:11.230
weil es gibt ja in Go

01:31:11.230 --> 01:31:13.230
keine Threadsafe

01:31:13.230 --> 01:31:15.230
Dictionaries.

01:31:15.230 --> 01:31:17.230
Die haben sich gedacht, braucht man nicht.

01:31:17.230 --> 01:31:19.230
Es gibt so eine halbherzige

01:31:19.230 --> 01:31:21.230
Sync Implementierung,

01:31:21.230 --> 01:31:28.640
kannst du aber klicken.

01:31:28.640 --> 01:31:30.640
Wo dein Prime-Sub läuft, weiß ich nicht.

01:31:30.640 --> 01:31:32.640
Irgendwo in deinen Settings kannst du dir das angucken.

01:31:32.640 --> 01:31:37.040
Moin Chainlore.

01:31:37.040 --> 01:31:39.040
So und dann hier wieder mit Delete und so.

01:31:39.040 --> 01:31:41.040
Du musst dich hier wirklich um jeden Furz selbst kümmern.

01:31:41.040 --> 01:31:43.040
Es gibt kein

01:31:43.040 --> 01:31:45.040
Threadsafe Generic Dictionary

01:31:45.040 --> 01:31:47.040
in Go.

01:31:47.040 --> 01:31:49.040
Gibt's nicht.

01:31:49.040 --> 01:31:52.350
In .NET gibt's das seit 15 Jahren.

01:31:52.350 --> 01:31:54.350
Okay, ich gebe zu, in Rust gibt's das auch nicht.

01:31:54.350 --> 01:31:56.350
Aber in Rust gibt's sehr viele

01:31:56.350 --> 01:31:58.350
Third-Party Sachen für sowas.

01:31:58.350 --> 01:32:00.350
Also ich habe in Go nichts gescheites gefunden.

01:32:00.350 --> 01:32:02.350
Muss ich ja selbst machen.

01:32:02.350 --> 01:32:04.350
Also pff, ich weiß nicht.

01:32:04.350 --> 01:32:06.350
Ich werde mit Go nicht hundertprozentig warm.

01:32:06.350 --> 01:32:08.350
Ich kann in Go was machen und es funktioniert

01:32:08.350 --> 01:32:10.350
am Ende auch, aber ich enjoye Go nicht.

01:32:10.350 --> 01:32:13.730
Ich enjoye

01:32:13.730 --> 01:32:15.730
ohne Scheiß Rust mehr als Go.

01:32:15.730 --> 01:32:17.730
Wobei ich in Rust deutlich unproduktiver

01:32:17.730 --> 01:32:19.730
bin als in Go.

01:32:19.730 --> 01:32:21.730
Weil Rust halt Rust ist

01:32:21.730 --> 01:32:23.730
und Rust nicht für

01:32:23.730 --> 01:32:25.730
Geschwindigkeiten während dem entwickeln

01:32:25.730 --> 01:32:29.170
ausgelegt ist.

01:32:29.170 --> 01:32:31.170
Und auch grausam zu lesen ist teilweise.

01:32:31.170 --> 01:32:33.170
Aber ich enjoye, wenn es bei den

01:32:33.170 --> 01:32:35.170
zwei neueren Sprachen geht,

01:32:35.170 --> 01:32:37.170
die ich gelernt habe,

01:32:37.170 --> 01:32:39.170
enjoye ich Rust tatsächlich mehr als Go.

01:32:39.170 --> 01:32:42.990
Also der

01:32:42.990 --> 01:32:44.990
Weg damit zu arbeiten

01:32:44.990 --> 01:32:46.990
gefällt mir in Rust besser.

01:32:46.990 --> 01:32:48.990
Go finde ich immer übelst nervig.

01:32:48.990 --> 01:32:50.990
C++ enjoy.

01:32:50.990 --> 01:32:52.990
Wir haben gestern C++ oder vorgestern

01:32:52.990 --> 01:32:54.990
C++ enjoyed und ich bin halb durchgedreht bei.

01:32:54.990 --> 01:32:56.990
Hat jemand einen lustigen, warte mal.

01:32:56.990 --> 01:32:58.990
Hat jemand einen lustigen

01:32:58.990 --> 01:33:00.990
Clip aufgenommen?

01:33:00.990 --> 01:33:02.990
Ich gucke mir ja manchmal die Clips an,

01:33:02.990 --> 01:33:04.990
was die Leute machen hier vom

01:33:04.990 --> 01:33:06.990
Stream.

01:33:06.990 --> 01:33:08.990
Hat jemand?

01:33:08.990 --> 01:33:14.100
Ja.

01:33:14.100 --> 01:33:16.100
Februar 2021.

01:33:16.100 --> 01:33:18.100
So.

01:33:18.100 --> 01:33:20.100
C++ 2b.

01:33:20.100 --> 01:33:22.100
Okay, was zum Teufel ist

01:33:22.100 --> 01:33:24.100
C++ 2b?

01:33:24.100 --> 01:33:29.710
Moment, C++ 2b

01:33:29.710 --> 01:33:31.710
ist C++ 23

01:33:31.710 --> 01:33:33.710
und die Versionsnummer ist

01:33:33.710 --> 01:33:35.710
2021 00?

01:33:35.710 --> 01:33:37.710
What the fuck?

01:33:37.710 --> 01:33:39.710
Ja,

01:33:39.710 --> 01:33:41.710
jetzt mal ernsthaft. Sind die alle,

01:33:41.710 --> 01:33:43.710
hat dir irgendjemand ins Hirn geschissen

01:33:43.710 --> 01:33:47.790
oder was?

01:33:47.790 --> 01:33:49.790
Was zum Teufel? Wer denkt sich?

01:33:49.790 --> 01:33:51.790
Das kannst du dir nicht ausdenken.

01:33:51.790 --> 01:33:53.790
Das kannst du dir nicht ausdenken.

01:33:53.790 --> 01:33:55.790
Was ist mit den Leuten los?

01:33:55.790 --> 01:33:57.790
Ja, so sehr enjoye

01:33:57.790 --> 01:34:04.180
ich C++, ja.

01:34:04.180 --> 01:34:06.180
Was ist das?

01:34:06.180 --> 01:34:08.180
Vor drei Jahren.

01:34:08.180 --> 01:34:10.180
Ich peitsche mich auch jedes Mal, bevor ich den Editor

01:34:10.180 --> 01:34:12.180
aufmache, Alter. Ich geißle

01:34:12.180 --> 01:34:14.180
mich erstmal eine Runde hier. Bam.

01:34:14.180 --> 01:34:16.180
Vorher kann ich nicht programmieren. Und danach,

01:34:16.180 --> 01:34:18.180
mache ich noch weiter, indem ich C++

01:34:18.180 --> 01:34:20.180
programmiere. Ich peitsche mich auch

01:34:20.180 --> 01:34:22.180
jedes Mal, bevor ich den Editor

01:34:22.180 --> 01:34:24.180
Ja, so sehr wird C++

01:34:24.180 --> 01:34:26.180
enjoyed hier.

01:34:26.180 --> 01:34:28.180
Also da enjoye ich Go tatsächlich

01:34:28.180 --> 01:34:30.180
mehr.

01:34:30.180 --> 01:34:32.180
C++ ist nicht zu

01:34:32.180 --> 01:34:34.180
enjoyen. In keinster Art und Weise.

01:34:34.180 --> 01:34:44.400
Das ist das Schlimmste, was es gibt.

01:34:44.400 --> 01:34:46.400
Ist das die Version in Hex?

01:34:46.400 --> 01:34:48.400
Das wäre ja noch cool, wenn das die

01:34:48.400 --> 01:34:50.400
Version in Hex wäre. Aber 2b

01:34:50.400 --> 01:34:52.400
ist 3...

01:34:52.400 --> 01:34:54.400
Äh...

01:34:54.400 --> 01:34:56.400
Ne, 2b ist ähm...

01:34:56.400 --> 01:34:58.400
Ist denn 2b in Hex?

01:34:58.400 --> 01:35:02.800
Auf jeden Fall

01:35:02.800 --> 01:35:04.800
kann es nicht 23 sein.

01:35:04.800 --> 01:35:06.800
Weil Hex

01:35:06.800 --> 01:35:08.800
geht bis 16

01:35:08.800 --> 01:35:10.800
und da kann vorne keine 2

01:35:10.800 --> 01:35:14.820
stehen.

01:35:14.820 --> 01:35:19.410
Aber 23.

01:35:19.410 --> 01:35:21.410
2b Hex 2

01:35:21.410 --> 01:35:23.410
Dezimal.

01:35:23.410 --> 01:35:25.410
Okay, lasst mal kurz überlegen. Bin ich

01:35:25.410 --> 01:35:27.410
pepega? Was ist...

01:35:27.410 --> 01:35:29.410
Okay, 16

01:35:29.410 --> 01:35:36.110
16, dann auch

01:35:36.110 --> 01:35:38.110
Overfloat ist zur 1 vorne.

01:35:38.110 --> 01:35:40.110
32

01:35:40.110 --> 01:35:42.110
Dann

01:35:42.110 --> 01:35:44.110
Overfloat ist

01:35:44.110 --> 01:35:47.680
zur 2 vorne.

01:35:47.680 --> 01:35:49.680
Also muss auf jeden Fall größer 32 sein.

01:35:49.680 --> 01:35:51.680
Ähm...

01:35:51.680 --> 01:35:57.940
Also 1 0

01:35:57.940 --> 01:35:59.940
ist dann 32

01:35:59.940 --> 01:36:03.570
in Hex, oder?

01:36:03.570 --> 01:36:05.570
Stimmt das, was ich erzähle?

01:36:05.570 --> 01:36:26.830
1 0 in Hex?

01:36:26.830 --> 01:36:28.830
Hä? Was ist das für ein Schwachsinn?

01:36:28.830 --> 01:36:32.340
Ne, aber...

01:36:32.340 --> 01:36:34.340
2 0 ist 32.

01:36:34.340 --> 01:36:40.020
Ach nee, 16 ist schon...

01:36:40.020 --> 01:36:42.020
Okay. Alter, was auch immer.

01:36:42.020 --> 01:36:44.020
Ich hab keine Ahnung.

01:36:44.020 --> 01:36:46.020
Okay, 2b Hex zu Dezimal.

01:36:46.020 --> 01:36:48.020
Was ist das?

01:36:48.020 --> 01:36:50.020
43.

01:36:50.020 --> 01:36:52.020
Also, nein.

01:36:52.020 --> 01:36:54.020
Es ist nicht die Zahl in

01:36:54.020 --> 01:36:56.020
die Version in Hex.

01:36:56.020 --> 01:37:03.230
Das würde ich nicht machen.

01:37:03.230 --> 01:37:05.230
Da müsstest du mir enorm viel Geld

01:37:05.230 --> 01:37:31.260
dafür bezahlen. Ich bin jetzt echt grad

01:37:31.260 --> 01:37:33.260
super verwirrt. Bin ich jetzt so blöde

01:37:33.260 --> 01:37:35.260
im Kopf?

01:37:35.260 --> 01:37:37.260
Dass das nicht stimmt, was ich erzählt

01:37:37.260 --> 01:37:39.260
hab?

01:37:39.260 --> 01:37:41.260
Gibt's irgendwie...

01:37:41.260 --> 01:37:43.260
Hex, Dezimal... Okay, wir machen...

01:37:43.260 --> 01:37:45.260
Wir rechnen. Hier, guck mal.

01:37:45.260 --> 01:37:51.580
Ja, nee, ich will weiter, man. Gibt's...

01:37:51.580 --> 01:37:53.580
Umrechnungstabelle.

01:37:53.580 --> 01:37:55.580
Dezimal, Hex. Ja.

01:37:55.580 --> 01:38:01.580
Dezimal...

01:38:01.580 --> 01:38:03.580
Okay, 10 ist 16 in Dezimal.

01:38:03.580 --> 01:38:05.580
Ja.

01:38:05.580 --> 01:38:07.580
32... Hab ich doch gesagt!

01:38:07.580 --> 01:38:09.580
Das ist genau das, was ich grade gesagt hab.

01:38:09.580 --> 01:38:11.580
Ja? Bei 32 Overfloat

01:38:11.580 --> 01:38:13.580
ist dann zur 2 vorne. War doch richtig

01:38:13.580 --> 01:38:15.580
die Tabelle, die ich eben angeguckt hab,

01:38:15.580 --> 01:38:17.580
war einfach nur bescheuert.

01:38:17.580 --> 01:38:19.580
32 war doch richtig, was ich gesagt hab.

01:38:19.580 --> 01:38:21.580
Bei 32

01:38:21.580 --> 01:38:23.580
ist es dann 20.

01:38:23.580 --> 01:38:25.580
10 ist 16, genau.

01:38:25.580 --> 01:38:27.580
20 ist 32.

01:38:27.580 --> 01:38:29.580
Das heißt 43 ist

01:38:29.580 --> 01:38:31.580
dann...

01:38:31.580 --> 01:38:33.580
2B ist dann 43, so rum.

01:38:33.580 --> 01:38:40.290
Aber glücklicherweise gab's ja schon

01:38:40.290 --> 01:38:42.290
ein paar Prime-Subs, sonst wär mein EQ noch

01:38:42.290 --> 01:38:44.290
weiter unten gewesen.

01:38:44.290 --> 01:38:46.290
Ich konnte das mal im Kopf alles easy umrechnen.

01:38:46.290 --> 01:38:48.290
So zu Zeiten, wo man so was noch

01:38:48.290 --> 01:38:50.290
in der Berufsschule gemacht hat und so.

01:38:50.290 --> 01:38:52.290
Aber mittlerweile...

01:38:52.290 --> 01:38:54.290
Ich kann auch keine...

01:38:54.290 --> 01:38:56.290
Das ist ein gutes

01:38:56.290 --> 01:38:58.290
Emote. Ich hab das doch schon.

01:38:58.290 --> 01:39:04.480
Angeblich

01:39:04.480 --> 01:39:10.030
hab ich das schon.

01:39:10.030 --> 01:39:17.820
Guck mal, wir haben das Emote doch schon.

01:39:17.820 --> 01:39:19.820
Ja, Subnet-Masten per Hand ausrechnen,

01:39:19.820 --> 01:39:21.820
das konnte ich auch in der Berufsschule.

01:39:21.820 --> 01:39:23.820
Mittlerweile bin ich ultra-pepega geworden,

01:39:23.820 --> 01:39:25.820
was sowas angeht. Da wird einfach gesagt,

01:39:25.820 --> 01:39:27.820
IP Calc, zack.

01:39:27.820 --> 01:39:29.820
Da wird nix mehr von Hand

01:39:29.820 --> 01:39:36.660
ausgerechnet.

01:39:36.660 --> 01:39:40.480
Easy.

01:39:40.480 --> 01:39:50.320
Easy.

01:39:50.320 --> 01:39:52.320
Ja, ich würd's wahrscheinlich auf dem Papier auch noch irgendwie

01:39:52.320 --> 01:39:54.320
hinkriegen, aber das ist so eklig.

01:39:54.320 --> 01:39:56.320
Für's Abi?

01:39:56.320 --> 01:39:58.320
Wirklich? Für's Abi macht man sowas?

01:39:58.320 --> 01:40:03.740
Was sagt man?

01:40:03.740 --> 01:40:05.740
Was macht eigentlich mein nicht vorhandenes Memory Leak?

01:40:05.740 --> 01:40:12.960
Das Memory Leak immer noch nicht.

01:40:12.960 --> 01:40:20.240
Hattet ihr auch

01:40:20.240 --> 01:40:22.240
Zahlenformate und sowas? Vorzeichen addieren?

01:40:22.240 --> 01:40:24.240
Ja.

01:40:24.240 --> 01:40:26.240
Jaja.

01:40:26.240 --> 01:40:30.450
Wir haben

01:40:30.450 --> 01:40:34.340
quasi

01:40:34.340 --> 01:40:36.340
mit

01:40:36.340 --> 01:40:38.340
minus gerechnet

01:40:38.340 --> 01:40:40.340
mit

01:40:40.340 --> 01:40:42.340
addieren und so.

01:40:42.340 --> 01:40:44.340
Irgendwie negiert und overflow

01:40:44.340 --> 01:40:46.340
ist das Vorzeichen und so.

01:40:46.340 --> 01:40:48.340
Ich kann mich noch ganz vage dran erinnern.

01:40:48.340 --> 01:41:01.310
Subnetting mit

01:41:01.310 --> 01:41:05.900
IPv6. Ja, viel Spaß.

01:41:05.900 --> 01:41:07.900
Chatge, das hat mich

01:41:07.900 --> 01:41:09.900
jetzt echt, ich mach das mal wieder aus, mich hat das

01:41:09.900 --> 01:41:11.900
jetzt wirklich ein bisschen aus dem Konzept gebracht, weil

01:41:11.900 --> 01:41:13.900
ich wollte mit euch bisschen

01:41:13.900 --> 01:41:15.900
Memory Leaks suchen.

01:41:15.900 --> 01:41:17.900
Das ist aber nicht erforderlich,

01:41:17.900 --> 01:41:23.970
Memory Leaks zu suchen.

01:41:23.970 --> 01:41:25.970
Ah, ich weiß, was wir machen.

01:41:25.970 --> 01:41:27.970
Ich kann euch was zeigen, was

01:41:27.970 --> 01:41:29.970
wahrscheinlich ihr schon wieder alle wisst, aber ich

01:41:29.970 --> 01:41:31.970
nicht. Wusstet ihr,

01:41:31.970 --> 01:41:33.970
also jetzt weiß ich's auch.

01:41:33.970 --> 01:41:35.970
Recycle Story.

01:41:35.970 --> 01:41:37.970
Jetzt weiß ich's auch, aber

01:41:37.970 --> 01:41:39.970
ich wusste es bis

01:41:39.970 --> 01:41:41.970
heute Morgen wusste ich das nicht.

01:41:41.970 --> 01:41:43.970
Und zwar, Testschreiben

01:41:43.970 --> 01:41:45.970
ist overrated. Es funktioniert einfach

01:41:45.970 --> 01:41:47.970
immer.

01:41:47.970 --> 01:41:49.970
Sollte das mal.

01:41:49.970 --> 01:41:51.970
Wusstet ihr, dass Visual Studio Code Profile unterstützt?

01:41:51.970 --> 01:41:53.970
Ich meine damit nicht Workspaces,

01:41:53.970 --> 01:41:55.970
sondern Profile.

01:41:55.970 --> 01:41:57.970
Workspaces gibt's

01:41:57.970 --> 01:41:59.970
ja schon lange.

01:41:59.970 --> 01:42:01.970
Man kann nämlich jetzt hier unten draufklicken

01:42:01.970 --> 01:42:03.970
und sagen Profile und es gibt normalerweise

01:42:03.970 --> 01:42:05.970
nur das Default-Profil,

01:42:05.970 --> 01:42:07.970
aber das coole ist, wenn man

01:42:07.970 --> 01:42:09.970
ein neues Profil erstellt. Erstellen wir uns mal

01:42:09.970 --> 01:42:11.970
beispielsweise ein Profil für

01:42:11.970 --> 01:42:13.970
Web-Entwicklung. Da kann ich

01:42:13.970 --> 01:42:15.970
sagen, ich will alles aus meiner Default-

01:42:15.970 --> 01:42:17.970
Config merchen mit meiner neuen

01:42:17.970 --> 01:42:21.340
für Web-Entwicklung.

01:42:21.340 --> 01:42:23.340
Und wenn ich das jetzt erstelle,

01:42:23.340 --> 01:42:25.340
dann seht ihr, ich hab ein neues Profil,

01:42:25.340 --> 01:42:27.340
was auf meinem alten Profil basiert.

01:42:27.340 --> 01:42:29.340
Also wenn ich jetzt hier was öffne,

01:42:29.340 --> 01:42:31.340
dann ist das noch die gleiche Schriftart und so und passt

01:42:31.340 --> 01:42:33.340
alles. Aber es sind keine Plugins

01:42:33.340 --> 01:42:35.340
mehr da. Das heißt, jetzt kann ich zum Beispiel

01:42:35.340 --> 01:42:37.340
das Svelte-Plugin hier

01:42:37.340 --> 01:42:41.870
installieren und

01:42:41.870 --> 01:42:43.870
dann sagen wir, ich lege noch ein weiteres Profil

01:42:43.870 --> 01:42:45.870
an für

01:42:45.870 --> 01:42:54.110
Cloud-Entwicklung

01:42:54.110 --> 01:42:56.110
zum Beispiel. Cloud Development

01:42:56.110 --> 01:42:58.110
Geschichten. Nehme ich auch wieder nur die Extensions

01:42:58.110 --> 01:43:00.110
mit und dort

01:43:00.110 --> 01:43:02.110
installiere ich dann so zum Beispiel die

01:43:02.110 --> 01:43:04.110
Terraform

01:43:04.110 --> 01:43:06.110
Terraform Geschichte und sowas. So

01:43:06.110 --> 01:43:08.110
und jetzt kann ich immer dazwischen switchen,

01:43:08.110 --> 01:43:10.110
je nachdem, was ich mache

01:43:10.110 --> 01:43:12.110
und das ist nicht Workspace gebunden.

01:43:12.110 --> 01:43:14.110
Das finde ich enorm praktisch, weil ich

01:43:14.110 --> 01:43:16.110
will die ganzen Plugins ja gar nicht Default-

01:43:16.110 --> 01:43:18.110
mäßig laden. Ich möchte meine Web-

01:43:18.110 --> 01:43:20.110
Entwicklungs-Plugins haben, wenn ich Web-Entwicklung

01:43:20.110 --> 01:43:22.110
mache. Ich will meine IoT-Sachen machen, wenn ich

01:43:22.110 --> 01:43:24.110
IoT habe und das wusste ich bis heute

01:43:24.110 --> 01:43:26.110
morgen nicht, dass Visual Studio Code

01:43:26.110 --> 01:43:29.870
das unterstützt. Wusstet ihr das?

01:43:29.870 --> 01:43:31.870
Also für mich

01:43:31.870 --> 01:43:33.870
war das neu.

01:43:33.870 --> 01:43:35.870
Das heißt im Endeffekt, ich kann jetzt auch mein

01:43:35.870 --> 01:43:37.870
Default-Profil mal ein bisschen aufräumen,

01:43:37.870 --> 01:43:39.870
weil ich brauche, was ist

01:43:39.870 --> 01:43:45.360
das? Ach ne, das ist nicht

01:43:45.360 --> 01:43:47.360
installiert. Wollte gerade sagen.

01:43:47.360 --> 01:43:49.360
Jetzt kann ich den ganzen Mist hier mal

01:43:49.360 --> 01:43:51.360
uninstallen aus meinem Default-Team.

01:43:51.360 --> 01:43:53.360
C wird uninstalled.

01:43:53.360 --> 01:43:55.360
Hier, das ganze Zeug wird alles

01:43:55.360 --> 01:44:04.940
uninstalled. Reload.

01:44:04.940 --> 01:44:13.440
Seitdem die das Teil

01:44:13.440 --> 01:44:15.440
der GitHub-Seite, was verwenden die?

01:44:15.440 --> 01:44:17.440
Das Teil, ich verstehe

01:44:17.440 --> 01:44:24.720
nicht, was du meinst.

01:44:24.720 --> 01:44:26.720
Uninstall, Terraform uninstall,

01:44:26.720 --> 01:44:28.720
Kubernetes uninstall, MonkeySea

01:44:28.720 --> 01:44:30.720
uninstall. Brauchen wir alles nicht.

01:44:30.720 --> 01:44:32.720
Zumindest nicht in Defaults Welt uninstall.

01:44:32.720 --> 01:44:39.170
YAML können wir mal drin

01:44:39.170 --> 01:44:41.170
lassen. So und jetzt sagen wir, okay,

01:44:41.170 --> 01:44:43.170
ich will jetzt Web-Entwicklung machen.

01:44:43.170 --> 01:44:45.170
Dann switche ich einfach das Profil

01:44:45.170 --> 01:44:47.170
auf Web. Und da

01:44:47.170 --> 01:44:49.170
installieren wir jetzt noch das Tailwind-Plugin.

01:44:49.170 --> 01:44:51.170
Und je nachdem, was ich machen will,

01:44:51.170 --> 01:44:53.170
kann ich es umschalten.

01:44:53.170 --> 01:44:55.170
Ich finde das enorm praktisch, dass es jetzt Profile gibt.

01:44:55.170 --> 01:44:57.170
Das gibt es übrigens noch nicht so lange.

01:44:57.170 --> 01:44:59.170
Das ist erst ungefähr ein Jahr oder so in Visual Studio Code möglich.

01:44:59.170 --> 01:45:04.460
Aha.

01:45:04.460 --> 01:45:06.460
Aber GitHub Workspace ist

01:45:06.460 --> 01:45:08.460
was anderes.

01:45:08.460 --> 01:45:10.460
Also so eine

01:45:10.460 --> 01:45:17.420
Remote-Entwicklungsumgebung.

01:45:17.420 --> 01:45:19.420
Aber Microsoft weiß man nie.

01:45:19.420 --> 01:45:21.420
Also ich finde das mega nice.

01:45:21.420 --> 01:45:23.420
Mit den...

01:45:23.420 --> 01:45:25.420
Ich dachte mir, ich zeige euch das mal, weil ich das selbst erst seit

01:45:25.420 --> 01:45:27.420
heute Morgen quasi erfahren habe.

01:45:27.420 --> 01:45:29.420
So und jetzt habe ich

01:45:29.420 --> 01:45:31.420
ein richtig cleanes Visual Studio Code.

01:45:31.420 --> 01:45:33.420
Defaultmäßig nur mit YAML sind.

01:45:33.420 --> 01:45:35.420
Und das ist das

01:45:35.420 --> 01:45:37.420
Sonntagshighlight-Ding.

01:45:37.420 --> 01:45:39.420
Weil ich hatte bisher immer das Problem,

01:45:39.420 --> 01:45:41.420
was mich immer übelst genervt hat, ist,

01:45:41.420 --> 01:45:45.180
dass ich beispielsweise, wenn ich hier...

01:45:45.180 --> 01:45:47.180
Oder gehen wir mal IoT nochmal rein.

01:45:47.180 --> 01:45:49.180
Ah ne, IoT habe ich gar nicht.

01:45:49.180 --> 01:45:51.180
Ich habe ja nur Cloud und Web angelegt.

01:45:51.180 --> 01:45:55.200
Ich wollte IoT anlegen.

01:45:55.200 --> 01:45:57.200
Machen wir mal was für IoT.

01:45:57.200 --> 01:45:59.200
Und da würde ich jetzt beispielsweise nochmal

01:45:59.200 --> 01:46:01.200
die ESP-Geschichte installieren.

01:46:01.200 --> 01:46:03.200
So und was mich immer übelst genervt hat

01:46:03.200 --> 01:46:05.200
bei Visual Studio Code ist,

01:46:05.200 --> 01:46:07.200
dass man diese ganzen Sachen hier dann

01:46:07.200 --> 01:46:09.200
default mitgeladen bekommen hat.

01:46:09.200 --> 01:46:11.200
Ich hatte hier nebendrin

01:46:11.200 --> 01:46:13.200
Plattform-IO, Terraform, Kubernetes

01:46:13.200 --> 01:46:15.200
total voll mit allem Schrott.

01:46:15.200 --> 01:46:17.200
Obwohl ich das in 90% der Fälle gar nicht brauche.

01:46:17.200 --> 01:46:19.200
Nur wenn ich eine spezielle Sache mache.

01:46:19.200 --> 01:46:21.200
So und jetzt sage ich auch

01:46:21.200 --> 01:46:23.200
ne,

01:46:23.200 --> 01:46:25.200
ich brauche kein IoT-Zeug.

01:46:25.200 --> 01:46:27.200
Ich switche auf meine Web-Entwicklung.

01:46:27.200 --> 01:46:29.200
Und dafür ist das weg.

01:46:29.200 --> 01:46:31.200
Und dafür sind die Web-Entwicklungs-Plugins geladen.

01:46:31.200 --> 01:46:33.200
Sehr praktisch.

01:46:33.200 --> 01:46:38.180
Ist Visual Studio eigentlich mittlerweile

01:46:38.180 --> 01:46:40.180
auch auf WebView2

01:46:40.180 --> 01:46:42.180
wie Teams, ja ich glaube das war

01:46:42.180 --> 01:46:44.180
vor Teams auf WebView2 schon.

01:46:44.180 --> 01:46:48.770
Sind die Profile in der Settings-JSON

01:46:48.770 --> 01:46:50.770
drinne?

01:46:50.770 --> 01:46:52.770
Ne.

01:46:52.770 --> 01:46:54.770
Weil die Settings-JSON kannst du auch pro Profil

01:46:54.770 --> 01:46:56.770
überschreiben. Die können da nicht drinne sein.

01:46:56.770 --> 01:46:58.770
Ich gehe mal davon aus, dass die irgendwo im

01:46:58.770 --> 01:47:00.770
ich weiß gar nicht wo die gespeichert

01:47:00.770 --> 01:47:02.770
werden.

01:47:02.770 --> 01:47:04.770
VS Code Profiles

01:47:04.770 --> 01:47:06.770
Where stored

01:47:06.770 --> 01:47:12.320
Config Code User Profiles

01:47:12.320 --> 01:47:17.100
Ok.

01:47:17.100 --> 01:47:19.100
Also ein weiteres Ding, was man theoretisch

01:47:19.100 --> 01:47:26.130
backuppen sollte.

01:47:26.130 --> 01:47:28.130
Aber ehrlich gesagt, ich werde es eh nur für

01:47:28.130 --> 01:47:30.130
Plugins benutzen.

01:47:30.130 --> 01:47:32.130
Die restlichen Sachen bin ich fein mit meiner

01:47:32.130 --> 01:47:34.130
Default-Config.

01:47:34.130 --> 01:47:36.130
Was will ich da groß konfigurieren?

01:47:36.130 --> 01:47:45.900
Ziemlich ähnlich wie bei Vim.

01:47:45.900 --> 01:47:47.900
Inwiefern?

01:47:47.900 --> 01:47:49.900
Du meinst, dass es ne

01:47:49.900 --> 01:47:51.900
Config-Datei gibt, die in deinem Heimatverzeichnis liegt?

01:47:51.900 --> 01:47:53.900
Ja gut, das ist

01:47:53.900 --> 01:47:55.900
nahezu jeder Linux-Anwendung.

01:47:55.900 --> 01:47:57.900
Wenn man die Config-Dateien speichert, ist das so.

01:47:57.900 --> 01:47:59.900
Du kannst froh sein,

01:47:59.900 --> 01:48:01.900
oder wir können froh sein, dass die Sachen

01:48:01.900 --> 01:48:03.900
mittlerweile unter .config liegen.

01:48:03.900 --> 01:48:05.900
Früher lagen die Dinger

01:48:05.900 --> 01:48:07.900
gar nicht unter .config, sondern

01:48:07.900 --> 01:48:09.900
einfach hier, direkt im Heimatverzeichnis.

01:48:09.900 --> 01:48:13.730
Hier.

01:48:13.730 --> 01:48:15.730
Manche Sachen machen das immer noch so, aber die meisten

01:48:15.730 --> 01:48:17.730
glücklicherweise nicht.

01:48:17.730 --> 01:48:19.730
VS Code anscheinend schon.

01:48:19.730 --> 01:48:21.730
Aber das ist noch ein alter

01:48:21.730 --> 01:48:23.730
VS Code Ordner, so wie es aussieht.

01:48:23.730 --> 01:48:25.730
Go macht natürlich nix von beiden.

01:48:25.730 --> 01:48:27.730
Go eliminiert sich einfach.

01:48:27.730 --> 01:48:29.730
Ohnehin ein Folder ins

01:48:29.730 --> 01:48:31.730
Root-Home-Verzeichnis

01:48:31.730 --> 01:48:36.770
von einem.

01:48:36.770 --> 01:48:38.770
Warum hab ich da einen Ordner, der keck-weight heißt?

01:48:38.770 --> 01:48:40.770
Und warum hab ich massive

01:48:40.770 --> 01:48:44.910
5-Fat-Chat-Gear hier drinnen liegen?

01:48:44.910 --> 01:48:46.910
Mein Heimatverzeichnis voll mit Schrott.

01:48:46.910 --> 01:48:48.910
Deswegen

01:48:48.910 --> 01:48:53.310
macht man auch nur LS.

01:48:53.310 --> 01:48:55.310
Was da für ein Schrott drinnen liegt.

01:48:55.310 --> 01:49:00.990
Müsste eigentlich alles mal weg.

01:49:00.990 --> 01:49:02.990
Ich lösche mal ein paar Docker-Images.

01:49:02.990 --> 01:49:04.990
Hab ich mir wieder massig

01:49:04.990 --> 01:49:06.990
im Hintergrund angesammelt.

01:49:06.990 --> 01:49:16.190
Ja, hat sich.

01:49:16.190 --> 01:49:20.850
Ah, mein Windows-Desktop

01:49:20.850 --> 01:49:22.850
ist noch gar nicht so voll.

01:49:22.850 --> 01:49:26.480
Noch nicht.

01:49:26.480 --> 01:49:30.880
Das wird immer voller.

01:49:30.880 --> 01:49:32.880
Ich dachte, ich zeige euch das mit den Profilen mal.

01:49:32.880 --> 01:49:34.880
Weil ich das sehr, sehr nice fand.

01:49:34.880 --> 01:49:39.090
Ha.

01:49:39.090 --> 01:49:41.090
Also auf ESP gebastelt

01:49:41.090 --> 01:49:47.470
hab ich jetzt keinen Bock.

01:49:47.470 --> 01:49:49.470
Auf die Zigbee-Steckdosenleisten

01:49:49.470 --> 01:49:51.470
dran rumzubasteln ehrlich gesagt auch nicht.

01:49:51.470 --> 01:49:53.470
Weil dazu müsste ich die Kamera anmachen.

01:49:53.470 --> 01:49:55.470
Also nicht für mich, sondern für

01:49:55.470 --> 01:49:57.470
die Steckdosenleisten.

01:49:57.470 --> 01:50:04.110
Weil die werden aufgemacht,

01:50:04.110 --> 01:50:06.110
bisschen dran rumgelötet.

01:50:06.110 --> 01:50:08.110
Also wohlgemerkt, nicht an den Stellen,

01:50:08.110 --> 01:50:10.110
die für eine Strom-Steckdosenleiste

01:50:10.110 --> 01:50:12.110
wichtig sind.

01:50:12.110 --> 01:50:14.110
Sondern ich löte dort

01:50:14.110 --> 01:50:16.110
einen neuen Microcontroller rein.

01:50:16.110 --> 01:50:18.110
Warum?

01:50:18.110 --> 01:50:20.110
Weil es geht.

01:50:20.110 --> 01:50:22.110
Weil ich das mal testen will.

01:50:22.110 --> 01:50:24.110
Ich könnte die auch einfach out of the box

01:50:24.110 --> 01:50:26.110
mit Zigbee verwenden und gut ist.

01:50:26.110 --> 01:50:28.110
Aber ich hab eine Anleitung gefunden,

01:50:28.110 --> 01:50:30.110
dass man hier Lidl

01:50:30.110 --> 01:50:32.110
das Motor

01:50:32.110 --> 01:50:34.110
ja

01:50:34.110 --> 01:50:36.110
ich hab eine Anleitung gefunden

01:50:36.110 --> 01:50:38.110
dass man

01:50:38.110 --> 01:50:40.110
ja

01:50:40.110 --> 01:50:45.410
das ist eigentlich ein

01:50:45.410 --> 01:50:47.410
Zigbee-Gerät

01:50:47.410 --> 01:50:49.410
aber die kann man

01:50:49.410 --> 01:50:51.410
den Microcontroller da drin

01:50:51.410 --> 01:50:53.410
kann man austauschen

01:50:53.410 --> 01:50:55.410
durch ein

01:50:55.410 --> 01:50:57.410
ESP8266

01:50:57.410 --> 01:50:59.410
oder durch ein

01:50:59.410 --> 01:51:01.410
ESP32

01:51:01.410 --> 01:51:04.980
wenn man den passenden Modul

01:51:04.980 --> 01:51:06.980
hat.

01:51:06.980 --> 01:51:08.980
Braucht man dann

01:51:08.980 --> 01:51:10.980
sowas hier zum Beispiel.

01:51:10.980 --> 01:51:21.580
Und das wollte ich mal ausprobieren.

01:51:21.580 --> 01:51:23.580
Einfach nur, ob es geht.

01:51:23.580 --> 01:51:25.580
Ehrlich gesagt macht es überhaupt keinen Sinn.

01:51:25.580 --> 01:51:27.580
Ja, weil Zigbee kannst du auch so

01:51:27.580 --> 01:51:29.580
wunderbar benutzen, ohne dass du da irgendwie

01:51:29.580 --> 01:51:31.580
die China-Chinesen-Cloud bräuchtest.

01:51:31.580 --> 01:51:33.580
Alles lokal.

01:51:33.580 --> 01:51:35.580
Aber einfach, weil es geht.

01:51:35.580 --> 01:51:39.790
Wollte ich es mal ausprobieren.

01:51:39.790 --> 01:51:41.790
Die restlichen Steckdosenleisten lasse ich wahrscheinlich

01:51:41.790 --> 01:51:43.790
stock, so wie sie sind und steuere die

01:51:43.790 --> 01:51:45.790
über Zigbee.

01:51:45.790 --> 01:51:47.790
Nachdem mir jetzt quasi in

01:51:47.790 --> 01:51:49.790
knapp

01:51:49.790 --> 01:51:51.790
eineinhalb Wochen

01:51:51.790 --> 01:51:53.790
drei Steckdosen,

01:51:53.790 --> 01:51:55.790
drei China-Steckdosenleisten

01:51:55.790 --> 01:51:57.790
kaputt gegangen sind, musste ich mal

01:51:57.790 --> 01:52:03.660
was Neues bestellen.

01:52:03.660 --> 01:52:05.660
Hast du für RT-Zeugs eigentlich ein eigenes WLAN?

01:52:05.660 --> 01:52:07.660
Ja. Ja, ja.

01:52:07.660 --> 01:52:09.660
Habe ich.

01:52:09.660 --> 01:52:11.660
Ich habe ein eigenes WLAN

01:52:11.660 --> 01:52:13.660
und ein eigenes WLAN.

01:52:15.660 --> 01:52:21.470
Wobei in dem WLAN

01:52:21.470 --> 01:52:23.470
wobei nicht, dass ich jetzt Mist erzähle

01:52:23.470 --> 01:52:25.470
Ne, in dem

01:52:25.470 --> 01:52:27.470
WLAN steht tatsächlich gar nichts anderes

01:52:27.470 --> 01:52:29.470
mehr. Es stand mal ein Raspberry Pi

01:52:29.470 --> 01:52:31.470
kabelmäßig, per

01:52:31.470 --> 01:52:33.470
Netzwerkkabel angeschlossen, stand

01:52:33.470 --> 01:52:35.470
noch in dem WLAN drin.

01:52:35.470 --> 01:52:37.470
In dem IoT-WLAN. Aber mittlerweile

01:52:37.470 --> 01:52:39.470
sind es nur WiFi-Geräte.

01:52:39.470 --> 01:52:41.470
Mit einer eigenen WLAN-SSID.

01:52:41.470 --> 01:52:46.000
Und die haben

01:52:46.000 --> 01:52:48.000
natürlich kein Internetzugriff

01:52:48.000 --> 01:52:50.000
erlaubt, meine IoT-Geräte.

01:52:50.000 --> 01:52:52.000
Die einzigen Zugriffe,

01:52:52.000 --> 01:52:54.000
die erlaubt sind, aus dem IoT-

01:52:54.000 --> 01:52:56.000
Netzwerk raus, sind

01:52:56.000 --> 01:52:58.000
NTP und

01:52:58.000 --> 01:53:00.000
MQTT für Geräte, die das brauchen.

01:53:00.000 --> 01:53:02.000
Das ist das einzige,

01:53:02.000 --> 01:53:04.000
was freigeschaltet ist.

01:53:04.000 --> 01:53:06.000
Der Rest nicht.

01:53:06.000 --> 01:53:20.130
Für was benutzt du steuerbare

01:53:20.130 --> 01:53:22.130
Steckdosenleisten?

01:53:22.130 --> 01:53:24.130
Zum Beispiel, dass ich im Keller

01:53:24.130 --> 01:53:29.300
Sachen ein- und ausschalten kann.

01:53:29.300 --> 01:53:31.300
Oder wenn ich was resetten muss.

01:53:31.300 --> 01:53:33.300
Die Kamera im Keller,

01:53:33.300 --> 01:53:35.300
die kackt teilweise ab, die muss ich manchmal resetten.

01:53:35.300 --> 01:53:37.300
Sehr praktisch, wenn man

01:53:37.300 --> 01:53:39.300
was remote schaltbar hat.

01:53:39.300 --> 01:53:41.300
Wenn ich bei Repi im Keller mal an- und ausschalten muss,

01:53:41.300 --> 01:53:43.300
geht das auch gut über die Steckdosenleiste.

01:53:43.300 --> 01:53:45.300
Die Stromversorgung

01:53:45.300 --> 01:53:47.300
für die Wand-Tablets

01:53:47.300 --> 01:53:49.300
geht auch da drüber.

01:53:49.300 --> 01:53:51.300
Ist auch gut, wenn ich nicht in den Keller muss,

01:53:51.300 --> 01:53:55.630
um das ein- und ausschalten zu können.

01:53:55.630 --> 01:53:57.630
Nein, nein, nein, du hast mich

01:53:57.630 --> 01:53:59.630
falsch verstanden.

01:53:59.630 --> 01:54:01.630
MQTT darf aus dem Netzwerk raus.

01:54:01.630 --> 01:54:03.630
Das heißt nicht, dass es ins Internet darf.

01:54:03.630 --> 01:54:05.630
Aus dem Netzwerk raus heißt,

01:54:05.630 --> 01:54:07.630
das darf in mein anderes Netzwerk,

01:54:07.630 --> 01:54:09.630
wo mein lokaler MQTT-Broker steht.

01:54:09.630 --> 01:54:11.630
MQTT darf nicht

01:54:11.630 --> 01:54:13.630
ins Internet.

01:54:13.630 --> 01:54:15.630
Ich hab's doch ganz am Anfang gesagt,

01:54:15.630 --> 01:54:17.630
ins Internet raus kommt gar nix.

01:54:17.630 --> 01:54:19.630
Mit nix kommt ins Internet raus.

01:54:19.630 --> 01:54:24.860
Du wohnst in einem

01:54:24.860 --> 01:54:26.860
ganzen Haus ganz allein.

01:54:26.860 --> 01:54:32.100
Nee, nicht ganz allein.

01:54:32.100 --> 01:54:37.940
Zumindest sind

01:54:37.940 --> 01:54:39.940
so IP-Steckdosenleisten,

01:54:39.940 --> 01:54:45.100
nennen wir das jetzt mal,

01:54:45.100 --> 01:54:47.100
praktisch.

01:54:47.100 --> 01:54:49.100
Die sind zwar oftmals Spielerei,

01:54:49.100 --> 01:54:51.100
man benutzt die dann auch an Stellen,

01:54:51.100 --> 01:54:53.100
wo man das nicht braucht.

01:54:53.100 --> 01:54:55.100
Aber in manchen Anwendungsfällen

01:54:55.100 --> 01:54:57.100
sind sie echt praktisch.

01:54:57.100 --> 01:54:59.100
Zum Beispiel den Raspberry Pi

01:54:59.100 --> 01:55:01.100
resetten im Keller,

01:55:01.100 --> 01:55:03.100
falls man da mal irgendwas gemacht hat,

01:55:03.100 --> 01:55:05.100
dass er dann nicht gescheit

01:55:05.100 --> 01:55:07.100
restartet hat.

01:55:07.100 --> 01:55:09.100
Dann gehst du in Home Assistant,

01:55:09.100 --> 01:55:11.100
schaltest die Steckdose für den Raspberry Pi

01:55:11.100 --> 01:55:13.100
im Keller aus, wieder ein, alles gut.

01:55:13.100 --> 01:55:15.100
Wofür ich das auch benutze ist,

01:55:15.100 --> 01:55:17.100
schaltbare Steckdosen.

01:55:17.100 --> 01:55:19.100
Ich hab bei mir

01:55:19.100 --> 01:55:21.100
im Bad einen

01:55:21.100 --> 01:55:23.100
Heizlüfter.

01:55:23.100 --> 01:55:25.100
Und ich hatte mal,

01:55:25.100 --> 01:55:27.100
weil es mir schon eine Weile nicht mehr passiert ist,

01:55:27.100 --> 01:55:29.100
aber ich sage ich hatte,

01:55:29.100 --> 01:55:31.100
aber ich hatte mal irgendwie ein bisschen

01:55:31.100 --> 01:55:33.100
Brain-Lack,

01:55:33.100 --> 01:55:35.100
dass ich öfters vergessen habe,

01:55:35.100 --> 01:55:37.100
diesen Lüfter auszuschalten, nachdem ich im Bad gewesen bin.

01:55:37.100 --> 01:55:39.100
Also gerade im Winter, wenn es kalt ist

01:55:39.100 --> 01:55:42.860
und man muss aufs Klo,

01:55:42.860 --> 01:55:44.860
das dauert ein bisschen länger,

01:55:44.860 --> 01:55:46.860
10 Minuten oder so, da habe ich immer den

01:55:46.860 --> 01:55:48.860
Heizlüfter angemacht, dass es schön warm ist im Klo.

01:55:48.860 --> 01:55:50.860
Also instant schön warm.

01:55:50.860 --> 01:55:52.860
Und ich habe es dann öfters geschafft,

01:55:52.860 --> 01:55:54.860
den Heizlüfter vergessen auszumachen.

01:55:54.860 --> 01:55:56.860
Und jetzt habe ich das

01:55:56.860 --> 01:55:58.860
so gemacht,

01:55:58.860 --> 01:56:00.860
ich habe einen einfach

01:56:00.860 --> 01:56:02.860
beheizbaren Toilettensitz.

01:56:02.860 --> 01:56:04.860
Meine Toilette kann den Toilettensitz nicht beheizen,

01:56:04.860 --> 01:56:06.860
aber das Wasser im Klo kann erhitzt werden.

01:56:06.860 --> 01:56:08.860
Also das ist so ein Klo,

01:56:08.860 --> 01:56:10.860
das kann dir auch den Arsch absprühen.

01:56:10.860 --> 01:56:12.860
Mit warmem Wasser, sehr angenehm.

01:56:12.860 --> 01:56:14.860
Kann ich nur empfehlen.

01:56:14.860 --> 01:56:23.940
Es gibt sogar ein Video dazu.

01:56:23.940 --> 01:56:25.940
Warum findet er zu Max FPS Klo nichts?

01:56:25.940 --> 01:56:27.940
Ja.

01:56:27.940 --> 01:56:29.940
Acht Jahre Premium Klo Fazit.

01:56:29.940 --> 01:56:31.940
Es ist doch.

01:56:31.940 --> 01:56:35.310
Da sieht man das Klo.

01:56:35.310 --> 01:56:37.310
Und hier sieht man auch wie die

01:56:37.310 --> 01:56:39.310
hier sieht man wie die Düse

01:56:39.310 --> 01:56:41.310
rausgefahren kommt.

01:56:41.310 --> 01:56:43.310
Düse Champ.

01:56:43.310 --> 01:56:45.310
Hier.

01:56:49.310 --> 01:56:51.310
Du kriegst da Puppes abgewaschen.

01:56:51.310 --> 01:56:56.860
So und ich habe,

01:56:56.860 --> 01:56:58.860
vielleicht sieht man, vielleicht schwenke ich auch irgendwie mal durchs

01:56:58.860 --> 01:57:00.860
Bad.

01:57:00.860 --> 01:57:02.860
Glaube nicht.

01:57:02.860 --> 01:57:04.860
Zeigt noch den NFC.

01:57:04.860 --> 01:57:09.010
NFC Tag oder so.

01:57:09.010 --> 01:57:11.010
Ich schwenke nicht durchs Bad.

01:57:11.010 --> 01:57:13.010
Ich habe da einen Heizlufter.

01:57:13.010 --> 01:57:15.010
Ich habe da einen Heizlufter stehen und den habe ich schon öfters mal

01:57:15.010 --> 01:57:17.010
vergessen auszuschalten.

01:57:17.010 --> 01:57:19.010
Und ich habe eine Automation gebaut

01:57:19.010 --> 01:57:21.010
in Home Assistant,

01:57:21.010 --> 01:57:23.010
die registriert, wenn die Steckdose

01:57:23.010 --> 01:57:25.010
die schaltbare

01:57:25.010 --> 01:57:27.010
Steckdose eingeschaltet wird.

01:57:27.010 --> 01:57:29.010
Das schickt ein Event über MQTT die Steckdose.

01:57:29.010 --> 01:57:31.010
Und

01:57:31.010 --> 01:57:35.220
wenn die nicht innerhalb

01:57:35.220 --> 01:57:37.220
von 15 Minuten wieder ausgeschaltet

01:57:37.220 --> 01:57:39.220
wird,

01:57:39.220 --> 01:57:41.220
dann schaltet die automatisch

01:57:41.220 --> 01:57:43.220
automatisch aus.

01:57:43.220 --> 01:57:45.220
Ich kann das einmalig

01:57:45.220 --> 01:57:47.220
verlängern.

01:57:47.220 --> 01:57:49.220
Wenn ich vorher auf den Knopf drücke, dann geht es

01:57:49.220 --> 01:57:51.220
glaube ich

01:57:51.220 --> 01:57:53.220
35 Minuten.

01:57:53.220 --> 01:57:55.220
Das ist wenn man mal duschen will und so.

01:57:55.220 --> 01:57:57.220
Das dauert alles ein bisschen länger.

01:57:57.220 --> 01:57:59.220
Aber dann geht es automatisch aus.

01:57:59.220 --> 01:58:01.220
Das habe ich gemacht, weil ich früher öfters vergessen habe

01:58:01.220 --> 01:58:03.220
den Heizlufter auszumachen. Mittlerweile

01:58:03.220 --> 01:58:05.220
vergesse ich das eigentlich nicht mehr.

01:58:05.220 --> 01:58:07.220
Und da brauche ich die Automatisierung nicht.

01:58:07.220 --> 01:58:09.220
Da sind so schaltbare

01:58:09.220 --> 01:58:11.220
Steckdosen sehr praktisch.

01:58:11.220 --> 01:58:19.970
Man kann auch Sachen ausschalten lassen

01:58:19.970 --> 01:58:21.970
zum Strom sparen. Dafür ist das auch

01:58:21.970 --> 01:58:28.030
praktisch. Wobei ich sagen muss,

01:58:28.030 --> 01:58:30.030
so viele Sachen fallen mir

01:58:30.030 --> 01:58:32.030
hier gar nicht ein.

01:58:32.030 --> 01:58:34.030
Was mir da einfallen würde

01:58:34.030 --> 01:58:36.030
ist zum Beispiel

01:58:36.030 --> 01:58:38.030
der Fernseher im Standby.

01:58:38.030 --> 01:58:40.030
Der muss nicht

01:58:40.030 --> 01:58:43.980
im Standby sein.

01:58:43.980 --> 01:58:45.980
Das habe ich übrigens

01:58:45.980 --> 01:58:47.980
noch nie gemessen.

01:58:47.980 --> 01:58:51.420
Das müsste ich mal machen.

01:58:51.420 --> 01:58:53.420
Ich habe hier

01:58:53.420 --> 01:58:55.420
einen Standby Verbrauch.

01:58:55.420 --> 01:58:57.420
So einen Zwischenstecker.

01:58:57.420 --> 01:59:01.630
Ich habe hier so ein Messteil.

01:59:01.630 --> 01:59:07.440
Nein, ich wohne nicht zur Miete.

01:59:07.440 --> 01:59:09.440
In einer Mietwohnung so das Klo rausreißen

01:59:09.440 --> 01:59:19.730
und Neues einzubauen ist natürlich schwierig.

01:59:19.730 --> 01:59:21.730
Naja, wenn du

01:59:21.730 --> 01:59:23.730
das in die Schüssel gekackt hast,

01:59:23.730 --> 01:59:25.730
dann hängt das ja nicht mehr an deinem

01:59:25.730 --> 01:59:27.730
Pobbes. Und dementsprechend

01:59:27.730 --> 01:59:29.730
kann der Brausekopf

01:59:29.730 --> 01:59:31.730
dann da auch schön brausen.

01:59:31.730 --> 01:59:33.730
Der fährt ja erst aus,

01:59:33.730 --> 01:59:44.530
wenn du fertig bist.

01:59:44.530 --> 01:59:46.530
Ich würde auch darauf tippen,

01:59:46.530 --> 01:59:48.530
dass der Fernseher mehr verbraucht.

01:59:48.530 --> 01:59:50.530
Die Steckdosenleiste braucht nicht viel.

01:59:50.530 --> 01:59:52.530
Die Microcontroller da drinnen

01:59:52.530 --> 01:59:54.530
die brauchen 100mA oder so.

01:59:54.530 --> 01:59:56.530
Das dürfte

01:59:56.530 --> 01:59:58.530
fast in der Messungenauigkeit

01:59:58.530 --> 02:00:00.530
untergehen, so eine Steckdosenleiste.

02:00:00.530 --> 02:00:14.460
Ja, der Fernseher

02:00:14.460 --> 02:00:16.460
verbraucht, da würde ich auch drauf tippen,

02:00:16.460 --> 02:00:24.830
dass der deutlich mehr verbraucht.

02:00:24.830 --> 02:00:26.830
Stimmt, es gibt auch so einen Aufsatz, korrekt.

02:00:26.830 --> 02:00:28.830
Ja, das Schöne ist halt

02:00:28.830 --> 02:00:30.830
an so einem eingebauten Klo,

02:00:30.830 --> 02:00:32.830
der ist schön integriert.

02:00:32.830 --> 02:00:34.830
Ja, und was

02:00:34.830 --> 02:00:36.830
der Sitz nicht kann,

02:00:36.830 --> 02:00:38.830
ist der, der

02:00:38.830 --> 02:00:40.830
ich nenne es immer

02:00:40.830 --> 02:00:42.830
die Klimaanlage, das ist aber keine Klimaanlage.

02:00:42.830 --> 02:00:44.830
Der Klo kann

02:00:44.830 --> 02:00:46.830
den

02:00:46.830 --> 02:00:48.830
Gestank quasi

02:00:48.830 --> 02:00:50.830
absaugen und nach draußen pusten.

02:00:50.830 --> 02:00:58.370
Ja, und das geht halt nicht,

02:00:58.370 --> 02:01:00.370
wenn du es nicht voll integriert hast in die Wand.

02:01:00.370 --> 02:01:03.680
Ja, das ist auch ein guter

02:01:03.680 --> 02:01:05.680
Anwendungszweck.

02:01:05.680 --> 02:01:13.540
Ja, die haben bestimmt irgendwas getrickst.

02:01:13.540 --> 02:01:15.540
Es gibt dann bestimmt mehrere Standby-Maschinen,

02:01:15.540 --> 02:01:17.540
Modi, und den kannst du einschalten

02:01:17.540 --> 02:01:19.540
und dann bootet das Ding halt 45 Sekunden

02:01:19.540 --> 02:01:21.540
oder so. Ich gehe nicht

02:01:21.540 --> 02:01:23.540
davon aus, dass der wirklich unter einem Watt

02:01:23.540 --> 02:01:25.540
im Standby ist, der Fernseher.

02:01:25.540 --> 02:01:27.540
Gruselmeister, danke für den Zap.

02:01:27.540 --> 02:01:29.540
Aber nichtsdestotrotz

02:01:29.540 --> 02:01:31.540
wird das trotzdem mehr verbrauchen, als

02:01:31.540 --> 02:01:33.540
die Steckdosenleiste.

02:01:33.540 --> 02:01:35.540
Bin ich

02:01:35.540 --> 02:01:37.540
relativ safe, dass das so ist.

02:01:37.540 --> 02:01:43.020
Chat, wisst ihr was, ich gehe jetzt auf.

02:01:43.020 --> 02:01:45.020
Die Suche nach dem

02:01:45.020 --> 02:01:47.020
Memory Leak war keine Suche nach dem Memory Leak,

02:01:47.020 --> 02:01:49.020
weil es kein Memory Leak gab.

02:01:49.020 --> 02:01:51.020
Aber

02:01:51.020 --> 02:01:53.020
ich kann jetzt nicht noch eine Stunde

02:01:53.020 --> 02:01:55.020
im Kreis labern.

02:01:55.020 --> 02:01:57.020
Reicht für heute.

02:01:57.020 --> 02:01:59.020
Wobei, wenn ich eins

02:01:59.020 --> 02:02:01.020
gut kann, dann ist es gesitetrackt werden

02:02:01.020 --> 02:02:03.020
und sinnloses Zeug erzählen für 3-4 Stunden.

02:02:03.020 --> 02:02:05.020
Das habe ich gelernt

02:02:05.020 --> 02:02:09.420
auf Twitch. Aber heute nicht.

02:02:09.420 --> 02:02:11.420
Ich gucke jetzt noch ein bisschen Twitch oder irgendwie

02:02:11.420 --> 02:02:13.420
Stream oder sonst was.

02:02:15.420 --> 02:02:18.740
Ich gucke mir jetzt ein paar

02:02:18.740 --> 02:02:20.740
an.

02:02:20.740 --> 02:02:22.740
Aber nichts Anstößiges.

02:02:22.740 --> 02:02:24.740
Ganz normales Zeug.

02:02:24.740 --> 02:02:34.540
Bis dann.

02:02:34.540 --> 02:02:36.540
See you.

Die Schrauben werden mit einem Schraubendreher befestigt.
Die Schrauben werden mit einem Schraubendreher befestigt.
Schulen nutzen das, ok.
Aber wenn ich was kompliziertes haben will, dann kann ich auch gleich Photoshop benutzen.
Oder machts wie ich mit dem Affinity Designer, das ist viel billiger.
Oh, die Musik ist ein bisschen laut.
Das ist viel billiger.
Und einfacher zu bedienen für Noobs wie mich.
Mir ist heute aufgefallen, dass ich meinen Gamertag als echten Namen angegeben habe bei Google, ja und?
Achso, ja das ist nicht weiterwild. Du schreibst dir deinen Namen dann wahrscheinlich unten in die E-Mail rein.
Das finde ich nicht schlimm. Ich glaube, ich heiße auch beim, na gut kann ich jetzt nicht sagen, aber ich heiße auch bei vielen E-Mail-Services random.
Ne, also win-zip wäre auch mal ein geiler Name oder Vorname win-nachnamen-zip.
Dankeschön für den Sub.
Um was es geht, hat irgendjemand gerade gefragt, äh, hier, da.
Sorry, ich bin jetzt erst eingestiegen, worum geht es heute, was ist das Ziel?
Also, du hast nix verpasst, weil das Stream ist seit 9 Minuten 50 online
und davon war ich 6 Minuten auf dem Klo.
Also, du hast absolut gar nichts verpasst.
Wir haben noch nicht mal angefangen.
Ich muss erstmal meine VM überhaupt updaten.
Avalonia? Ne. Also ja, ich hab Avalonia immer mal wieder kurz ausgedreht, aber nie was wirklich
ernsthaftes oder auch nur Demo-Application-mäßig was mitgemacht. Ne, ne, ne. Habe ich nicht.
Aber von allen UI-Frameworks, die es so auf .NET gibt, sagt mir das trotzdem am meisten
zu.
Ja, ich hab noch keine Kinder und ich weiß auch nicht, ob ich da jemals Bock drauf hab.
Wobei wir hatten das Thema ja schon öfters im Stream, viele Leute sagen immer, ja Max,
mach dir mal nicht so viele Gedanken, wenns dann soweit ist, dann findest du es doch ganz
toll.
Ich hab da meine Zweifel.
Gut, aber ich meine, dazu fehlt mir auch die Voraussetzung, man bräuchte ja auch jemanden,
mit dem man Kinder bekommen möchte.
Ja, also sonst funktioniert das ganz ja nicht, also alleine wird das ja noch nix, ich bin
zwar pepo-fett, aber das klappt noch nicht, weil so fett bin ich gar nicht mehr seit 2
Jahren, ich bin jetzt eigentlich nur noch normal fett.
Also vor ungefähr 2 Jahren hab ich ungefähr 108,5 Kilo gewogen, jetzt wiege ich nur noch
so 91.
Abnehmstells.
Abnehmstells.
So, wir machen mal kurz Update.
Okay, also
Pac-Man geupdatet,
Visual Studio updaten, das ist gut, also Visual Studio Code updaten.
Wir brauchen heute auf jeden Fall ein aktuelles Visual Studio Code,
weil
Pac-W Frontend.
Brauchen wir irgendwelche JetBrains-Geschichten?
Welches ZSH-Theme ist das? Das zeige ich dir gleich.
Mal kurz hier die Updates anschmeißen.
Da gibt es nur eins.
Welches LSH Steam ist das?
Das ist Starship.
Starship RS.
Und
also der Prompt ist Starship.
Und ich habe das Ganze ein wenig
customised.
Und als Basis habe ich
Nehme ich mal irgendwie so ein Beispiel.
Nehme ich mal ein Beispiel für die Prompts, die dabei sind?
Anscheinend nicht.
Ich habe einen Prompt, der hier dabei war, genommen als Basis, nämlich das hier, das
habe ich als Basis genommen, aber das ist nicht der Prompt 1 zu 1, ich habe da noch
ein paar Sachen customised, das habe ich als Basis genommen und dann habe ich das customised
Und wenn du meine Config haben willst, kannst du bei mir auf GitHub gehen und dann gehst
du hier auf mein .file-Repo und dann nach Config-Starship und da ist das alles drin.
Also ich hab beispielsweise für .net noch Sachen angepasst hier drinnen, also sieht
man auch wenn man jetzt hier irgendwie Repos, ja gehen wir mal hier rein, ja also wenn man
in ein
.NET-Repo geht, bekommt man hier auch angezeigt,
welche Target-Version das Projekt hat, welche .NET-Version man installiert hat,
lokal bei sich auf der Kiste.
Man sieht die ganzen Git-Geschichten mit den passenden Icons zu dem
jeweiligen Icon-Font, den ich habe.
Und ich habe es allgemein noch ein bisschen angepasst. Ich habe da einen
zweizeiligen Prompt draus gemacht, wie du vielleicht siehst.
Was der mitbringt, ist ein einzeiliger Prompt und wenn man sich überlegt, der
Prompt geht schon bis hierhin, da könnte ich ja nur noch hier tippen, das wäre ja für'n Arsch.
Das heißt, ich mag zweizeilige Prompts, deswegen habe ich zweizeilige Prompts draus gemacht und ich habe den Kontrast ein bisschen angepasst.
Also wenn ihr es genau wissen wollt, ist hier da das meine Konfig dafür.
Dann sieht das so aus.
Was macht Max? Gar nichts. Noch gar nichts.
Also überhaupt nichts. Ich habe gerade meine VM geupdatet.
Und ich hoffe, das war jetzt alles durch.
Jetzt reboote ich erstmal meine VM.
Und dann können wir anfangen.
Und dann zeige ich euch, während die VM rebootet.
Wobei, was soll, was soll das da?
Während die VM rebootet, als würde die jetzt so wahnsinnig lange rebooten.
Die rebootet 10 Sekunden oder so, dann ist die wieder da.
Äh, noch mache ich doch gar nichts.
Mit 21 oder was, aber sehr schnell.
Ne, ne, ne, ne.
Ich mag Ryder und die ganzen JetBrains Produkte, allerdings für Frontend-Sachen mag ich tatsächlich
lieber Visual Studio Code als WebStorm.
Weiß nicht, was sagt ihr, Chatge?
WebStorm oder VS Code?
Komm, wir machen mal ne Umfrage.
Wir machen mal ne Umfrage, warte mal.
WebStorm vs VS Code.
WebStorm vs Code, beide.
Probieren wir mal aus, kein Geld für IntelliJ, also IntelliJ selber ist glaube ich sogar kostenlos.
Ich glaube, ich glaube IntelliJ ist kostenlos, ähm, PyCharm Community Edition ist kostenlos.
Ich glaube das war's, was die kostenloses haben.
Aber auf der anderen Seite muss ich sagen, ich habe mir ja vor einer Weile...
Ja, wir können, okay, ich meine, du kannst hier maximal 5 Dinge eintragen, ich könnte
jetzt noch Notepad++ oder so ein Blödsinn eintragen.
Gibt's genug Leute, ohne Scheiß Leute, ich bin immer wieder überrascht, wie viele auch
bei mir auf der Arbeit mit Notepad++ romantieren.
Na nu, Leute ich hatte vor ein paar Tagen einen Call mit einem externen Dienstleister und
ein, also wir hatten einen externen Dienstleister der Software für uns bereitstellt, wir hatten
irgendeinen zugekauften Konsultant aus, frag mich nicht, Mexiko oder so und ich, und da
haben wir da gesessen und, ohne Scheiß das war das schlimmste Meeting aller Zeiten, wir
Wir haben dem Konsulten aus Mexiko zugeguckt, wie er über eine Zytrix-Session in MobaX-Term mit Nano Sachen copy-pastet hat,
die ihm der Dienstleister, der für uns die Software entwickelt hat, gesagt hat.
Leute, das war so unglaublich langsam.
Das kann man sich überhaupt nicht vorstellen.
Das war wirklich so, ah, let me check.
Blubb, gleich, oh, Moment, ich habe mich vertippt.
So in dem Tempo ging das, die ganze 3 Stunden, 3 Stunden lang müsst ihr euch mal vorstellen.
So schnell ging das, 3 Stunden lang.
Und dann hat er sich zwischenzeitlich noch verkopiert, ich bin froh, dass er das gemacht
hat ja.
Ich hätte keinen Bock meinen Desktop die ganze Zeit zu scheren, 3 Stunden ging das
so.
Und dann noch mit der Tippverzögerung über eine Citrix-Session.
Ganz schlimm, ganz schlimm.
Das war wirklich eines der abartigsten Termine ever, die ich je hatte.
Sehe ich auch so.
Also es gibt ja genug Leute, die mittlerweile Nano...
äh, nicht Nano-Wim.
Hahaha.
Ähm.
Moment, ich hab meine Lautstärke...
ist falsch. Jetzt ist die Musik zu laut.
Sekunde, muss mal wieder einstellen.
Ja.
Die haben Neo-Vim.
So, jetzt passt man genau zur Stärke.
Gibt ja Leute, die haben ihr Neo-Vim so krass aufgebohrt,
dass das mittlerweile
wirklich schon
IDE-Features
in Massen hat.
Von automatischem Code-Completion
über irgendwelche Language-Server
mit Fuzzy Search
Und hast du nicht gesehen also kannst du extrem aufbauen ich persönlich bin da kein fan mehr von ich habe das ja früher gerne
gemacht ich hatte früher auch meinen aufgebaut bis bis zu sonst was
Aber ich mache das nicht mehr weil also mein hauptgrund warum ich eigentlich kein wir mehr so extrem
Uploaded verwende ist naja ich benutze eben nur noch zum kurzen editieren auf der kommandozeile
Und wenn ich Wim bei mir zu customised habe, dann komme ich mit dem nicht mehr klar, wenn ich per SSH auf dem Server verbunden bin
und da was editieren muss. So, und deswegen bin ich dazu übergegangen, Wim tatsächlich
oder NeoWim, das ist ja eigentlich egal welcher das ist, mehr oder weniger RAW zu verwenden mit ziemlich kleinen Anpassungen.
Ich habe echt nicht viel hier in meiner Wim-Config. Da ist eigentlich nichts großartig drin.
Da ist hier Shift, Einrückungen sind drinnen, die Maus muss ausgeschaltet werden.
Leute, das ist das wichtigste, was ihr im WIM machen müsst.
WIM mit Maus-Support ist echt abfuck.
Du kannst überhaupt nicht copy-pasten und selekten richtig.
Ich weiß, eigentlich soll der Maus-Support einem im WIM helfen zu copy-pasten und selekten,
aber das funktioniert für mich nicht richtig.
Ich selekte lieber im Terminal.
Ja, sonntags an, ich habe Undo und Swap, also Undo eingeschaltet, Swap-File ausgeschaltet
Und ansonsten, ich merke mir, wo ich zuletzt gewesen bin, im File.
Und ich change den Cursor, wenn ich in Insert Mode gehe.
Guck hier, wenn ich in Insert Mode gehe, habe ich den Balken, ansonsten habe ich hier den normalen Cursor.
Und das war's.
Also,
mehr habe ich ja in meiner Wim-Config nicht gemacht, 43 Zeilen und da sind auch viele Kommentare noch drin, also
nö.
Aber, sag mal, sag mal mal hier, lass es 35 Zeilen sein, Wim-Config.
Das ist im Vergleich zu früher wenig.
Früher hatte ich was weiß ich, 5000 Zeilen oder sowas, ein riesen, riesen Ding.
Wie viele Tabs hast du offen?
Ich kann es jetzt zählen mal.
Hier.
Ich würde mal so auf 140 oder so tippen.
Oder so.
Ich weiß nicht, wie viele das wirklich sind.
Das finde ich ist eh
so ein Schein-Argument.
Du magst mit wem? Das sind die gleichen Leute,
die sagen immer alle
Boah, immer alle Finger auf der Home Row und solche Geschichten.
Ich bin der Meinung, das ist so ein Scheinargument, weil die meiste Zeit in einem Texteditor verbringt man ja nicht wirklich mit Texteditieren.
Also sagen wir mal so, mit dem Texteditor, wenn du was schreibst vielleicht schon, aber wenn du was programmierst, verbringst du die meiste Zeit in deinem Editor oder deiner IDE ja nicht so sehr mit tippen,
sondern mit überlegen, ausprobieren, sagen wir mal, und im Internet gucken, wie es denn jetzt eigentlich geht,
beziehungsweise was es für Funktionen gibt, die Hilfe-Seiten sich angucken und sonst was in der Richtung.
Also, ich würde sagen, 50% der Zeit, wo man programmiert, oder sagen wir mal, mindestens 40% der Zeit, wo man programmiert,
ist man nicht wirklich am tippen.
Ich sag mal 50, 50, 50 vielleicht.
Das heißt, insofern macht das eigentlich keinen großen Unterschied.
Und da ist so ein bisschen Mausbedienung gar nicht verkehrt, weil seinen Browser, in dem
man wahrscheinlich die anderen 50% der Zeit verbringt, lässt sich eben nur gescheit mit
der Maus bedienen.
Ich weiß, es gibt Browser Extensions, da kannst du navigieren mit Tastatur, ich hab
das auch, wie gesagt, ich war immer so Hardcore-Wim-Jünger früher, ich hatte sogar Extensions in meinem
Browser, da ich den Browser per Tastatur steuern kann, sowas. Im Endeffekt geht das bis zu einem gewissen Teil, also was zum Beispiel ganz nice ist, was es gibt, es gibt, es gibt Browser Extensions, ja, wenn wir jetzt mal hier irgendwie auf Google gehen und suchen WoBlords, da gibt es, da gibt es Extensions, da klickst du dann zum Beispiel, drückst dann auf deiner Tastatur zum Beispiel F und dann schreibt er dir an jedem Link in Buchstaben hin und wenn du Buchstaben drückst, springst du automatisch zu dem Link. Das ist tatsächlich ganz gut, aber das hört dann relativ schnell auf, wenn man dann
Also ob solche Menüs klicken muss und hier Einträge auswählen muss und sowas.
Das geht, man muss sagen, ein aktueller Browser und viele Webseiten sind halt einfach für
Mausbedienung ausgelegt.
Und dementsprechend, nachdem man eh 50-50 macht, 50% im Browser, 50% vielleicht in seinem
Editor.
Ja.
Ja also, ich halte da nix von.
Das soll im Endeffekt natürlich jeder machen was er will.
Leute die Hardcore auf Wim schwören sollen das ruhig machen, ich bin da ein bisschen
weg von.
Ich benutze mittlerweile zum größten Teil die Kombination VS Code für Frontend-Geschichten
und manche andere Sachen, dann JetBrains-IDEs, wo es halt welche gibt, und für Kommandozeilen
editieren, wenn es schnell gehen muss, sowohl lokal als auch remote und WIM, fertig.
Im Endeffekt dauert das eine Zeit und zwar muss man erst ein paar Sachen ausprobieren.
Bisschen laut hier auf einmal
Bisschen leise, die können sich weder entscheiden
Ja, ähm
Genau, was ich sagen wollte, im Endeffekt dauert das schon seine Zeit, weil
Man muss erstmal ein paar Sachen ausprobieren
Du musst erstmal ein bisschen
Du musst mal ein bisschen Wim ausprobieren
Manche Leute bleiben auch irgendwie auf Nano hängen
Manche auf Emacs
Visual Studio Code für alles, manche benutzen sogar Windows mit dem originalen Visual Studio oder sowas, es gibt ja alles mögliche.
Man muss erst ein paar Sachen umprobieren und das braucht seine Zeit bis man weg ist von dem,
ich guck mir jetzt auf Reddit an, was die coolen Leute verwenden, ich guck mir auf YouTube an, was die coolen Leute verwenden.
Es spricht überhaupt nichts dagegen, sich Inspiration zu holen aus irgendwelchen Videos oder nach dem Motto,
oh das ist ja ein cooles Plugin, das habe ich noch nicht gesehen bis jetzt.
Im Endeffekt muss man, wenn man dann so ein paar Jahre ausprobiert hat, was es so alles gibt, dann findet man irgendwann sowas, was einem persönlich am besten gefällt.
Bei mir ist halt die Kombination Visual Studio Code für Frontend-Geschichten und beispielsweise Plattform-IO, Microcontroller-Sachen, JetBrains-IDEs für alles andere und wenn ich auf der Kommandoszeile was editieren will, wird schnell in Vim aufgemacht und das Datei-Editing wieder gespeichert, sowohl lokal als auch remote.
Das ist die Kombination, wo ich festgestellt habe, was für mich am besten funktioniert.
Ich habe alles mögliche durch. Ich habe Wim aufgebaut, bis zum geht nicht mehr. Ich habe auch ne Weile Emacs customised und sonstige Geschichten.
Das ist das, was für mich am besten funktioniert.
Es ist nicht unbedingt sinnvoll, immer alles, was man denkt, auch einzutippen.
Du hast die perfekte Domain für meine GitHub-Seite keckw.app. Ja, aber die ist wahrscheinlich noch nicht, die ist bestimmt schon belegt.
Ja die Leute zu irgendwas zwingen finde ich nicht sinnvoll.
Also bei unseren Azubis habe ich es auch immer gemacht, ich habe denen gesagt, Alter hör
mal auf Nano zu verwenden, benutze mal WIM, einfach dass man sich da ein bisschen dran
tasten kann.
WIM hat tatsächlich ein paar Vorteile und die sind nicht so sehr, also ja sicherlich
auch in der Bedienung, aber das ist nicht das was ich meine.
Der Vorteil von WIM ist tatsächlich, oder vielleicht auch, weil man ein bisschen WIM
kann und dementsprechend auch ein bisschen VI bedienen kann, so in der Ursprungsvariante.
Du hast auf jedem Gerät einen VI drauf, zumindest mal einen VI.
Ich glaube sogar auf Cisco Switchen hast du einen VI drauf.
Du hast auf allem irgendwie einen Vim oder einen VI drauf, wo du editieren kannst.
Also ein bisschen VI-Bedienung ist nicht verkehrt, zumindest, dass man mal weiß, wie man eine
Datei speichert und wie man den Editor wieder schließt.
Was geht?
Ich habe noch gar nicht erzählt, was wir heute machen.
Ich wollte eigentlich gerade meine VM neu starten und bin ein wenig sidetracked worden.
Du kennst das ja schon.
Schon mal JetBrains WebStorm getestet.
Tatsächlich, wir haben uns im Stream schon vor einer ganzen Weile mal WebStorm angeguckt.
Und ich muss ehrlich sagen, ich habe damals auf die Schnelle, wir haben das nur 2-3 Stunden ausprobiert,
ich habe auf die Schnelle nicht den riesen Vorteil erkannt versus Visual Studio Code.
Also man konnte das gut benutzen, gerade weil ich auch alle anderen JetBrains Ideen gerne benutze, ging das schon.
Aber ansonsten hätte ich jetzt gesagt, ich habe nicht den Wahnsinns Vorteil erkannt.
Ja, ich finde es übergangsweise nicht verkehrt, dass man sich mal ein bisschen dran gewöhnt und das lernt.
Aber den Leuten dann vorzuschreiben, was sie wirklich benutzen sollen, unterm Strich, wenn es darum geht, dass sie halt auch irgendwo...
Spätestens wenn du selbst dafür verantwortlich bist, was bei deiner Arbeit rauskommt, dann sollte man die Leute auch benutzen lassen, was sie wollen, ja?
Und wenn das einer in Nano machen will, meinetwegen soll er es in Nano machen.
Ich kann es zwar nicht verstehen, wie irgendjemand Nano benutzen kann den ganzen Tag, aber mag es gehen.
Gut, ich weiß, warum die Leute Nano benutzen. Wisst ihr, warum die Leute Nano benutzen? Wegen Notepad.
Weil die Leute, oder halt nicht zwangsläufig wegen Notepad, aber wegen dieser Philosophie von Notepad ein bisschen, ja.
Du hast halt einfach nur einen Input-Mode, du kannst Text eingeben, du kannst mit deinen Pfeiltasten navigieren und das war's.
Ja, du kannst mit Shortcuts speichern und fertig.
Das ist für die Leute viel mehr, also viel einsteigerfreundlicher für viele, wie mit dem aufzumachen.
Ich kenne den Mouse-Support von Anno nicht, weil ich habe ihn alle Mouse-Support aus.
Nein, Fleet habe ich mir nicht angeguckt.
Aus dem gleichen Grund, was du hier schreibst, und es kann sogar sein, dass wir es mal kurz
installiert haben.
Der Charme von Visual Studio Code ist ja tatsächlich, dass es viele Plugins gibt.
Bei den Chatbrains-IDEs brauchst du nicht so viele Plugins, die sind halt genau schon
gut dafür, wofür die jeweilige IDE da ist.
Aber Visual Studio Code wäre ohne Plugins auch ziemlich, ziemlicher Müll.
Lagt das?
Weiß ich, meines Vodafone-Stells.
Ne, nix getroppt. Wenn schon, lagts bei dir.
Ja, und...
Also, ob die da jemals hinkommen, ich weiß nicht.
Ich mein, JetBrains hat ja in jedem...
Hat ja überall so ihre Finger drin.
Ich mein, die haben ne eigene Programmiersprache.
Die haben tausend IDEs.
Die haben nen eigenen Font.
Die haben so einen eigenen Code-Share-Service, die versuchen sich in allem irgendwie mal und dementsprechend wundert es mich nicht, dass die sowas auch bauen wollen, Visual Studio Code.
Ich muss sagen, das meiste Zeug von JetBrains ist nicht schlecht, aber man muss jetzt auch nicht zwangsläufig alles benutzen, nur weil es von JetBrains kommt.
Beispielsweise, was ich überhaupt nicht mag von denen, ist den Font, der standardmäßig eingestellt ist oder mitkommt, also JetBrains Mono ist echt nicht mein Fall.
Ich mag halt auch diese, wie nennt sich das? Diese Sonderzeichen in Programmierfonds.
Also es gibt ja Programmierfonds mit Sonderzeichen, da schreibst du dann zum Beispiel nicht kleiner gleich, sondern da gibt es dann ein eigenes Zeichen für.
Liguren.
Das hört sich an wie irgendwelche komischen Affen im Regenwald oder so.
Die Liguren.
Ja, das mag ich nicht.
Also ich, ich mag sowas lieber als...
Kennst du?
Ich hab die meisten Fonts mir zumindest schon mal
angeschaut, also nicht selbst installiert, sondern
die, also kenne ich vom Namen her
ich hab mir die meisten dieser Fonts zumindest schon mal
auf den Seiten angeguckt, aber ganz ehrlich, ich bin
seit Jahren
ich bin seit Jahren hier drauf
hängen geblieben
auf diesem Font
Mit diesem Font bin ich hängen geblieben.
Und das ist Hack.
Wow.
Das ist Hack.
Hack Font.
GitHub Hack Font.
Ja.
Der hier.
Und den hab ich nahezu überall.
Den hab ich in meinem Editor, den hab ich im Terminal.
Chat habt ihr den Sound auch gerade gehört?
Es hat gerade so gemacht so
So ein komisches Geräusch
Was war das?
Ah vielleicht ist die Katze an der Tür
Kann sein
Wenn ihr das nicht gehört habt dann ist die Katze vielleicht an der Tür
Ja
Ja.
Okay, also.
Denk Mono. Ne, den kenne ich glaube ich noch nicht.
Denk Mono. Okay, ein Font der was kostet.
Naja, warum nicht, wenn er gut ist.
Denk... Boah!
Zulul.
Ich würde fast sagen, der hat die gleiche Basis wie Hack.
Auf was basiert der?
Der ist nicht bestimmt komplett vom Scratch, der basiert bestimmt auf dem gleichen.
?
?
?
?
?
?
?
?
?
?
?
?
?
?
So, ich bin wieder am Start, also gerade die Post da, ähm, wo bin ich jetzt stehen geblieben?
Chat, Chat-Gamer, wo bin ich stehen geblieben?
Irgendwas über das Weltkrieg, glaube ich, erzählt.
Ich weiß noch, wie du damals Ruby auf YouTube empfohlen hast.
Jetzt wird hier gewebt.
Ich habe mal Ruby empfohlen.
Ich meine, Ruby ist eine super Sprache.
Leider ein bisschen so aus der Mode gekommen,
da Ruby on Rails halt nicht mehr angesagt ist.
Ich meine, Ruby gab es schon vor Ruby on Rails.
Aber so der richtige Durchbruch, wo jeder Ruby programmieren wollte,
war halt zu Ruby on Rails Zeiten.
Es war die Zeiten, wo Leute sich als Rockstar-Developer bezeichnet haben.
So, ich bin stehen geblieben ins Weltkit. Genau.
Also, wie gesagt, Ende letzten Jahres kam Svelte Kit 1 raus und jetzt gibt es glaube ich 1.2.
Demnächst gibt es auch Svelte 4, das habe ich auch gelesen.
Da habe ich letztens ein Webcast oder so ein Wort geguckt von Rich, wie heißt der Typ?
Rich Harris? Kann das sein?
Der Erfinder.
Der hat irgendwas erzählt zu neuen Syntax-Geschichten und Switch-Statements und solchen Geschichten in Svelte 4.
Bin ich mal gespannt was da rauskommt so und also was mich was mich tatsächlich inspiriert hat heute mal wieder ein bisschen kek javascript zu machen ist folgendes
Wir haben ja schon ein paar sachen ins welt gemacht also das erste was ich mir angucken wollte ist tatsächlich mal wieder wieder
Die einser version von zwölf kit und ich habe was anderes gefunden habe ich im video zugesehen
skeleton ui
das ist ein
Frontend
Wie nennt man das? Ein UI-Toolkit für Svelte und SvelteKit.
Warum nicht Typescript? Das eine hat doch mit dem anderen gar nichts zu tun.
Du kannst das mit Javascript und Typescript verwenden.
Oder meinst du, warum wir als Emote nicht kegg Typescript haben?
Ich glaube sogar, dass die offiziellen Docs von Svelte mittlerweile in Typescript sind.
Wir machen aber heute kein Typescript, tatsächlich, wir machen heute wirklich plain Javascript.
Genau und da habe ich letztens ein Video zu gesehen und ich dachte mir, warum in Svelte.js,
das ist doch egal wie das heißt, du kannst es in Javascript und in Typescript programmieren.
Du meinst warum sie es nicht Svelte.ts genannt haben?
Naja, wahrscheinlich, weil JavaScript immer noch das Bekanntere ist.
Und, und, unterm Strich, unterm Strich ist ja egal,
denn ein Browser führt eh nur JavaScript aus.
Bin mal gespannt, bin mal gespannt, ob Microsoft irgendwann mal in Edge direkten TypeScript Support einbaut.
Macht aber eigentlich relativ wenig Sinn.
So.
Also.
Warum ich es jetzt mit Javascript, mit Javascript anstatt TypeScript benutzen will, weil es
für mich extra Aufwand ist TypeScript zu benutzen und für so kleine Sachen, das hat sich eigentlich
gar nicht lohnt.
Zumal ich auch nicht der krasse TypeScript Checker bin, deswegen, heute machen wir wirklich
ganz normales Javascript ohne irgendwelche Experienzien.
Genau, und ich hab diese UI Library gefunden, die angeblich voll angesagt ist in der Svelte
Community aktuell. Hat aber nur 2,7 Sterne, 2.700 Sterne, das ist gar nicht mal so viel. Aber was ich mir auf den ersten Blick
angeguckt habe, fand ich persönlich wirklich nice.
Die haben zum Beispiel so, also die haben erstmal haben die standardmäßig schon ein paar Themes, die finde ich ganz okay aussehen, ja. Also
erst, also okay, erstemal. Die haben jedes Theme in Dark und Light
Mode
Und die Themes sehen tatsächlich auch ganz okay aus, guck mal hier, das sieht okay aus, wenn man auf so einem Material Design Zeug steht, das hier sieht, das könnte ich mir zum Beispiel gut vorstellen für irgend so eine Apidox Seite oder sowas, das sieht auch ganz okay aus, wie gesagt alles in Dark und Light, sieht beides auch ganz hübsch aus,
Seafoam, na gut, das ist jetzt eher nicht so meins, aber gut.
Äh, Vintage.
Sahara, na das ist auch nicht so meins.
Hamlin, oh mein Gott, was, was zum Teufel, was?
Hamlin Digo?
Ich weiß nicht, was das sein soll.
Gold Crimson.
Also ich find, die Standard-Themes sind schon mal ganz nett.
Wir werden heute, was nehmen wir denn heute mal?
Komm, Modern, Modern.
Wir machen heute mal ein bisschen zu oft mit Material Design.
Ja, und wie gesagt, das ganze in Dark and Light, das fand ich ganz gut und was ich halt auch nice fand, was mich da überzeugt hat, warum ich das halt mal ausprobieren wollte, dass das gar nicht so sehr Magic im Hintergrund macht, sondern sich zum größten Teil über Tailwind Klassen stylen lässt.
lässt. Und das relativ viele Sachen eingebaut sind. Du hast so Sachen wie Buttons drinne
zum Beispiel, die brauchst du ja immer. Du hast irgendwelche Alertsachen, du hast Cards,
dass die gescheit aussehen. Du hast irgendwelche Placeholder, die du beim Laden anzeigen kannst,
sogar mit und ohne Animation, du hast Switches, du hast Tabellen, Hamburger, Dings, Sidebars
und sowas.
Also es gibt viele solche UI-Frameworks, gibt es eigentlich tausende von und gerade auch
für React und sowas gibt es ja da auch Milliarden gefühlt, aber das macht tatsächlich ganz
guten Eindruck, zumal es das auch schon eine Weile gibt und das weiterhin supportet wird
Und ich finde, mir gefällt die Kombination ganz gut, dass die Dinger out of the box ganz gut gestylt kommen, aber man die ziemlich easy umstylen kann.
Und es auch unter heavy development ist.
Und dass es nicht so abgedreht ist mit 30 Milliarden Komponenten, wo keiner checkt, wie man das benutzt.
Ich hab zum Beispiel früher mal ein bisschen das hier benutzt, als ich noch ein paar Sachen in VIEW gemacht hab.
Zum Beispiel das hier benutzt Leute. Das ist eine Wissenschaft für sich hier durchzuplicken, wie man in Viewtify irgendwas macht.
Ja, die haben, dafür haben die auch mehr Components. Aber zum Beispiel, wenn man sich hier mal nur die Tabelle anguckt vom Source-Code.
Ja gut, das ist jetzt tatsächlich überschaubarer.
Also Viewtify fand ich total überladen irgendwann.
Deswegen probieren wir das heute mal aus.
So, und jetzt muss ich nochmal kurz ein bisschen mehr dazu erzählen.
Ist nicht Bootstrap sowas ähnliches? Ja, ja, ja.
Wobei Bootstrap tatsächlich sich nur um Styling kümmert.
kümmert. Und PrimeNG. Ok, der Name NG schreckt mich schon mal ab, das erscheint mir nämlich
eine Angular Library zu sein. Und damit ist das für mich schon mal raus. Wenn ich NG lese
im Zusammenhang mit Webframeworks, dann ist es meistens Angular. Richtig Monak, es gibt
Viele Sachen schon für alle möglichen Front. Also viele sind ja mittlerweile schon auf die glorreiche Idee gekommen, ihre
Component-Libraries für mehrere Frameworks anzubieten.
So und der Unterschied zwischen beispielsweise so einem UI-Framework und Bootstrap ist, Bootstrap
ist komplett nur Styling und hier haben die auch ein bisschen Logik dabei. Also hier kannst du zum Beispiel sowas in der Richtung, so Input-Chips.
Du kannst sagen hier Kecke und dann hast du sogar Animationen zum hinzufügen, also du
hast schon ein paar fertige Komponenten, die alle ganz gut gestylt sind und funktionieren.
Und was mir tatsächlich auf den ersten Blick in Skeleton Guns gut gefallen hat, die Dinger
sind alle darauf ausgelegt, dass du sie relativ einfach erweitern kannst, umstylen kannst
und editieren kannst.
Also insofern hat mich das eigentlich jetzt so auf den ersten Blick erstmal angesprochen.
Mal gucken wie gut das wirklich funktioniert, das müssen wir uns dann nochmal anschauen.
Und jetzt noch ein paar Worte zu Svelte Kit, bevor wir damit anfangen.
Also es gibt ja, das sind Tags, ja aus irgendwelchen Gründen haben sie das Chips genannt.
Wobei ich Chips besser als Tags finde.
Ja, aber jetzt noch mal ein paar Worte zu SvelteKit.
Es gibt ja, oder mal ne Frage an den Chat, Chat-Gefrage, was sind so die großen UI-Frame,
äh nicht die großen UI, die großen Frontend-Frameworks, so welche drei, vier, fünf Dinger vielleicht
fallen euch da ein, oder sag mal so, was sind die großen drei, was sind die großen drei
Frontend Frameworks.
Ja, machen wir mal Best Of, dann kommt das ganz gut hin, genau.
Vue, Angular, React, das ist auf jeden Fall React,
einsam an der Spitze, ganz weit vorne.
Danach bin ich mir gar nicht so sicher.
Ich persönlich würde darauf tippen, dass danach Angular kommt,
weil Angular im Businessumfeld sehr beliebt ist,
und danach Vue.
Also React, Angular, Vue sind auf jeden Fall die großen Drei.
Ähm, Vue.js ist mein persönlicher Eindruck.
Ich weiß nicht, ob das wirklich stimmt.
Aber zumindest hat sich das für mich so mit...
...Version 3 und den kommenden, und den folgenden Jahren...
...hat sich das, äh...
...ja, sieht das für mich zumindest so aus.
Und zwar, Vue erscheint mir ein bisschen auf dem absteigenden Ast die letzten Jahre über.
React nach wie vor ultra strong, vorne dabei, größtes Framework ever, was das angeht, verbreitestes Framework ever, so Frontend mäßig, da kommt vielleicht höchstens noch jQuery dran oder sowas.
Aber ansonsten ist React wirklich die unangefochtene Nummer 1.
Seit Jahren schon. Und dementsprechend gibt es da auch die meisten Libraries und Sachen für.
Dafür finde ich, die Handhabung, also ich hab mich nie im Detail mit React beschäftigt, weil mich die Handhabung immer so ein bisschen abgeschreckt hat.
So, danach, ich mein, es ist von Google, kommt Angular und das ist im Business Enterprise Umfeld sehr beliebt, enthält viele Sachen schon fertig, fragt mich nicht, keine Ahnung, ich hab das nie richtig verwendet.
Aber du musst wohl für alle möglichen Sachen was eingebaut haben, ja?
Zum... Du hast einen Router eingebaut, du hast irgendwelche...
Du hast wohl gar nicht viele Sachen schon in diesem Angular Standard Framework mit drin, wo du alles mögliche mitmachen kannst.
Und Vue ist wahrscheinlich der Einstieg am einfachsten von den ganzen drei.
So, das sind so die großen drei.
Was man noch erwähnen wollte, jQuery, das ist immer noch da.
Ich glaube immer noch 40% oder 50% oder 60% oder so, fragt mich nicht, keine Ahnung.
Der also auf jeden fall ein riesengroßer teil der weltweit top 500 seiten benutzt immer noch jQuery
Glaubt man zwar nicht aber ist so
Und es gibt seit ein paar jahren
Jetzt auch Svelte. Svelte ist tatsächlich ein bisschen was anderes als die oberen drei Frameworks
Deswegen muss ich jetzt ein bisschen ausruhen bevor ich euch was zu Svelte Kit erzähle
Svelte ist in erster Linie eigentlich gar kein JavaScript Framework, wie man das hier
von kennt, sondern Svelte ist eine Library, die versucht, den Komfort zu bieten wie eines
dieser Frontend Frameworks, allerdings am Ende die Anwendung, die rausfällt, enthält
eigentlich kein Svelte Framework in dem Sinn mehr.
Also alles, was man ins Welt baut, wird am Ende zu nackigem Javascript ohne irgendwelche Dependencies translated.
Also während du beispielsweise bei Vue.js erstmal oben sagen musst in deiner Seite
Include Vue.js, damit die Seite überhaupt funktioniert, kannst du ins Welt...
Genau, du brauchst keine Runtime mehr.
So, und das was Sveld macht ist, dass möglichst wenig übrig bleibt von Sveld.
Es kann durchaus sein, weil es auch gerade einer im Chat ist, es kann durchaus sein,
dass es noch ein paar Einstiegshooks oder irgendwas gibt, aber von Sveld ist kaum noch
was übrig in der eigentlichen Anwendung.
Also du musst nicht erstmal irgendwie 16 Kilobyte Vue.js inkluden oder Angular oder sonst was,
sondern bekommst mehr oder weniger eine nagische Javascript-Anwendung hinten raus, die funktioniert ohne weitere Abhängigkeiten.
Die versuchen aber trotzdem, Chakra-UI, ne hab ich mir nicht angeschaut, weil ich React noch nicht groß benutzt habe.
Ich weiß, Chakra ist mit eines der bekanntesten React-On-End-Geschichten.
Ja, so.
Also das ist so viel zu Svelte.
Sie versuchen, dass du quasi zur Entwicklungszeit vieles machen kannst, wie eben in React, Angular und Vue.
Allerdings, wenn du dann die Anwendung baust, dass möglichst wenig von Svelte übrig bleibt.
Das ist so eines der Ansätze.
So, und jetzt lassen wir mal gucken, was ist SvelteKit?
SvelteKit ist quasi sowas wie Next.js und Nuxt.js.
Wohin gehe ich? Ich hoffe, ich kriege das jetzt halbwegs zusammen.
Ich glaube, Nuxt.js ist Vue, Next.js ist React oder umgedreht.
Zumindest sind die ganzen Frontend-Javascript-Leute irgendwann auf die Idee gekommen, dass es
eine blöde Idee ist, nur Frontend-Frameworks zu haben, die nur Frontend machen.
Wie wäre es denn, wenn man noch da drumherum so Meta-Frameworks baut, dass man beispielsweise
auch serverseitige Sachen machen kann, quasi in der gleichen Anwendung nennen wir es mal,
beispielsweise auch mobile anwendungen einfacher machen kannst und sowas und da
kam dann irgendwann so so so projekte wie nuxt.js und next.js die bringen dann
auch einen router mit und alle möglichen geschichten und da kannst du
beispielsweise mit nuxt.js das verwendet standardmäßig vue.js und da kannst du
dann solche sachen machen wie server-side-rendering ich meine was ist
server-side-rendering das was ihr alle kennt und zwar wenn ihr google aufmacht
dann schickt euch google diese seite hier und euer browser zeigt die an
Natürlich ist da auch ein bisschen JavaScript, aber im großen und ganzen ist da...
Okay, es ist relativ viel Javascript.
Weil, das ist ein schlechtes Beispiel, okay? Wikipedia
TwitchTV
So, ihr macht Wikipedia auf und dann schickt euch Wikipedia diese Seite und euer Browser rendert das. Gucken wir mal.
Ihr seht, das ist mehr oder weniger nur HTML, was ihr geschickt kriegt.
Vielleicht wird sich jetzt der ein oder andere denken, Moment, ist das nicht schon immer
so, dass Webseiten HTML sind?
Und ja, das ist schon immer so und am Ende sind Webseiten auch immer HTML.
Die Frage ist, wie wird das HTML generiert?
Und wo wird das HTML generiert?
So, Server-Side-Rendering ist so der Klassiker schlechthin, du schickst ein Request an Wikipedia
und als Antwort bekommt dein Browser schon das mehr oder weniger vollständige HTML geschickt.
Das Gegenstück dazu sind Single-Page-Applications, da bekommt dein Browser eigentlich nur eine
mehr oder weniger leere HTML-Seite geschickt mit Javascript zum Nachladen und der Javascript
erzeugt dann erst auf Client-Seite das HTML, was dann im Endeffekt vom Browser für die Seite gerendert wird.
Das sind so die zwei unterschiedlichen
Philosophien, die es die letzten Jahre über gegeben hat, mehr oder weniger parallel.
Also entweder möglichst viel auf dem Client oder möglichst viel auf dem Server. Natürlich war es in der Praxis am Endeffekt immer so ein bisschen
mal ein bisschen mehr so, mal ein bisschen mehr so, weil ihr seht es ja auch hier, selbst
Wikipedia hat noch ein bisschen Javascript drinnen und es macht auch nicht Sinn, alles
immer serverseitig zu rendern und alles immer clientseitig zu rendern.
Deswegen hat sich die letzten Jahre über was anderes durchgesetzt, unter anderem auch
mit gerade diesen Meta-Frontend-Frameworks, das ganze nennt sich nämlich SSR mit Hydration,
Ich hoffe ich hab das jetzt richtig, bring das grad nicht durcheinander.
Klingt, klingt, klingt wirklich, also wenn ihr mal irgendwo glänzen wollt, in irgendeinem Vorstellungsgespräch oder sowas,
dann sagt, dass ihr SSR mit Hydration mögt.
Das klingt erstmal richtig, richtig Pfeilfetter.
Da sitzt der Typ, der vor euch sitzt, wenn er keine Ahnung hat, denkt schon auch einer, boah, da ist der schlau.
Absolut massive high IQ.
So, und was damit gemeint ist, SSR Hydration, SSR ist das, was ich eben gerade gesagt habe,
SSR ist Server-Side-Rendering, also sprich, man erzeugt die Seite schon auf dem Server
und schickt dann HTML, aber Hydration ist der eigentliche neue 5-Hit-Trick, und zwar,
was da jetzt passiert ist folgendes, und das wie gesagt, das kam so mit diesen Meta-Frontend-Frameworks
auf. Was da passiert ist folgendes, oder ich muss euch vorher mal was anderes
fragen. Wer kann mir, das ist prüfungsrelevant,
Chatge, wer kann mir einen der größten Vorteile sagen von, oder Chat, Chat, ein
Vorteil die Single-Page-Applications haben und ein riesen Vorteil die
Server-Side-Render-Applications haben. Was fällt euch da sofort an?
Fangen wir mal mit Server-Side-Rendering an. Was ist eines der riesen, also es gibt
mehrere aber einer reicht mir richtig genau das ist auch das erste woran ich
denke server-side renderte renderte anwendungen sind erst mal richtig gut
für suchmaschinen weil ihr könnt euch vorstellen eine suchmaschine kann sowas
initiieren aber eine suchmaschine kann nichts initiieren was nur das javascript
besteht das ist das nächste genau das ist das zweite woran ich denken würde
dass das initial page rendering also dass die seite möglichst schnell
dargestellt wird, wenn man zuerst rauf geht, ist, wenn die Sache Server-Side gerendert
ist, auch saumäßig schnell. Ihr seht, wie schnell es geht, beispielsweise das hier zu
laden, eine Wikipedia-Seite, versus Twitch. Ihr seht's, oder? Twitch ist sehr viel Javascript
im Hintergrund. Ja, jetzt nicht. Twitch ist sehr viel Javascript im Hintergrund. Und Wikipedia
ist halt einfach fertig gerendert. Das heißt, Server-Side-Rendering ist sehr schnell aufgebaut.
Seite und Suchmaschinen freundlich. So, und als nächstes große Vorteile von Single-Page-Applications
oder sehr Javascript-heavy Client-Side-Applications. Was ist das erste, was euch da einfällt?
Also mir fällt eigentlich so spontan nur eine Sache erstmal ein. Ja, sowas. Wenig Last
auf dem Server, da habe ich jetzt gar nicht dran gedacht, das kann auch dazu beitragen,
aber würde ich mal sagen weniger.
Ne, für mich ist eines der größten Vorteile von Single Paged Applications, dass du die
möglichst, dass du die gut interaktiv machen kannst.
Also wenn du Anwendungen hast, die sich, sagen wir mal, sehr responsive anfühlen müssen
und auch viele interaktive Elemente haben, dann ist Front, dann ist, dann ist kleinseitig
sinnig
Also zum Beispiel Draw.io
Draw.io würde als Server-Seite-Anwendung einfach schlicht und ergreifend keinen Sinn machen
Wie willst du, wie willst du das hier, wie willst du das hier serverseitig rendern? Das macht ja überhaupt keinen Sinn
Also das hier, das hier ist alles client-seitig gerendert, da passiert auf dem Server nix
Vom Server ruft er sich vielleicht die Images und sowas hier ab, die es gibt, aber der Rest ist alles kleinseitig gerendert.
Und ihr könnt davon ausgehen, dass YouTube zum Beispiel eine Seite ist, die ziemlich hybrid aufgebaut ist.
Ja, YouTube muss viele Sachen vom Server laden, aber dieser ganze Shit hier wird zum größten Teil kleinseitig sein.
Ja, die liefern, die laden das hier nach, aber beim Klick hier drauf gehe ich jetzt einfach mal von aus, ich weiß es nicht, wir könnten mal nachgucken, dass das client-seitig passiert.
Ja, und nur weil sich die URL ändert, heißt das ja auch noch nix.
Ja, das geht alleine auch sehr zackig.
Das heißt, man ist so ein bisschen davon weggekommen, zu sagen, man macht entweder Server-Side-Rendering oder Client-Side oder Single-Page-Application,
Man macht jetzt sowas wie Server-Site-Rendering mit Hydration, das heißt, da passiert folgendes.
Und wie gesagt, das kam mit diesem Meta-Framework sowas wie SvelteKit und Nuxt und Next auf.
Man rendert die Seite initial auf dem Server und alles was interaktiv ist an der Seite, also alles interaktive Javascript, den State, den friert man quasi ein, schickt den mit rüber an den Client.
Der Client rendert die Seite initial und dann dehydratet, dann taut er quasi das eingefrorene
Javascript wieder auf und macht an der gleichen Stelle weiter.
Das heißt im Endeffekt, du kannst jetzt die Seite relativ Suchmaschinen-freundlich rendern
auf dem Server schon.
Das initiale Seitenladen ist sehr schnell, aber du kannst die Seite trotzdem komplett
interaktiv, schön mit allen möglichen Animationen und Geschiss kleinseitig machen.
Das ist das ist so ein bisschen so der
Der Neueste Trend
Seit so einem Jahr oder zwei vielleicht.
Zuxi, Dankeschön für den Sub.
So, und jetzt kommen wir natürlich zum eigentlichen Punkt.
Warum braucht man Svelte Kit?
Naja, Svelte ist eigentlich nur das Frontend Framework.
Auch wenn am Endeffekt nach dem Kompilieren nicht mehr viel übrig bleibt von dem Framework.
Für alles andere, zum Beispiel
Routing, also so hier zum Beispiel hier.
Blob, so was.
Was passiert damit, wenn man diese Seite aufruft?
Hooting muss man ja irgendwie machen, oder auch, wie entscheide ich jetzt, was clientseitig
gerendert wird, was serverseitig gerendert wird, was wie rübergeschickt wird, welche
Endpoints ich abfragen muss auf dem Server, und das ist quasi ein, wie nennt man das neuerdings
so schön?
Full-Stack-Framework, sowas, also das, guck hier, ja, da steht Single-Page, Multi-Page-Application,
Server-Side, Server-Side-Generation, das kann man alles damit machen.
Also man kann die Seite schon auf dem Server rendern, an einen Client schicken und von dort dann mit JavaScript-Zeug weitermachen.
So, das ist so ein Trend gewesen, so die letzten 1-2 Jahre.
Und das gibt es jetzt auch für Svelte und halt in dem Fall mit Svelte-Kit.
Zack.
Excellent. So, jetzt habe ich ganz viel Intro-Intro gelabert.
Was wir heute machen werden ist folgendes.
Wir bauen eine kleine Demo-Anwendung.
Anwendung. Ich weiß nicht, wie weit wir kommen werden und ich weiß auch ehrlich gesagt nicht,
wie featurereich das Ganze wird. Ich habe mir überlegt, wir machen folgendes. Ich habe mir das
schon ein bisschen im Vorfeld angeguckt, aber ich bin weit davon entfernt, wirklich gut durchzuklicken.
Zumal wohlgemerkt Frontendentwicklung auch nicht jetzt irgendwie mein Daily Job ist oder sowas.
Also wir legen eine Anwendung an. Ist der Labelchamp nicht ins Weltall? Doch ist er, genau, ja, ja.
Also wir legen eine Anwendung an und zwar, ihr könnt es euch am Namen schon denken gleich, wie das Ding heißen wird.
MKDIR CopyPastaChampDemo
Wir bauen im Prinzip so eine Art... Also, Chat, was ist die Default-Anwendung, die jeder
zum Testen von irgendeinem Frontend-Framework baut?
Es ist nicht der Copy-Pasta-Demo-Champ, To-Do-Liste, genau.
Ich hab keinen Bock, eine To-Do-Liste zu bauen, wir bauen eine Twitch-Copy-Pasta-Verwaltung.
Das wird von dem, was die Anwendung kann, nicht was, was man im Endeffekt benutzen will.
kann ich gleich sagen. Es geht bloß darum, dass wir uns die Features von den zwei Sachen
angucken können. Also wir bauen eine Anwendung, die im Endeffekt irgendwie 1, 2, 3 vielleicht
Routen enthält. Die Hauptseite, eine Create-Seite und da gibt es ein Formular, da kann man einen
Titel eintragen und den Text eintragen, vielleicht noch Text vergeben und es gibt eine Main-Seite,
da kann man seine Copy-Pastas drauf anzeigen, suchen, eventuell löschen mit einer Abfrage,
wirklich löschen. Wir brauchen auf jeden Fall einen Dark Light Theme Toggle oben oder unten in der Leiste.
Und dann gucken wir, dass wir die Seite halbwegs responsive machen, dass es dann, je nachdem wie breit der
Bildschirm ist, ein bisschen mehr und ein bisschen weniger anzeigt. Aber das war es dann wahrscheinlich
im Großen und Ganzen auch schon. Und wir machen das rein kleinzeitig, by the way. Also wir machen keine
wir machen keine Server-APN-Punkte oder sowas. Das werden wir alles gleichzeitig speichern
Local Storage.
Also, was muss ich jetzt machen, um das Projekt anzulegen?
npm create copy pasta-champ-demo, bester Name.
Aber kannst du ein bisschen Testing einbauen?
Oh, ich glaube du laggst Critical Information, wenn es um Testing geht hier auf meinem Channel.
Chat, wie sieht das mit Tests aus?
Wann braucht man keine Tests?
Richtig, nein, was heißt direkt Production?
Richtig, endlich, endlich sagt es meiner.
Genau, wir programmieren prinzipiell keine Fehler und wenn man keine Fehler programmiert,
braucht man auch keine Tests und weißt du, was noch viel besser ist, wenn man keine Fehler
programmiert?
Dann braucht man auch keine Doku schreiben, weil es ist alles immer 100% richtig, funktional
und selbsterklärend.
Und nachdem wir nie Fehler produzieren, braucht man auch keine Tests.
Und die ernst gemeinte Antwort ist, ich bin kein hauptberuflicher Frontend-Entwickler.
Ach ja, Dokumentation brauchen wir logischerweise auch nicht, aber Kommentare brauchen wir auch nicht.
Ich bin kein hauptberuflicher Frontend-Entwickler und ich muss dir ehrlich sagen, ich kenne mich mit Testing in JavaScript nicht wirklich gut aus.
Ich meine, ich kenne so ein paar Frameworks, ich kenne, äh, was gibt's hier, V-Test und, ähm, äh, wie heißt das andere, mega bekannte Testing, äh, J-Unit, nee, nee, J-Unit ist, ist Java, oder?
Cypress, Cypress meinte ich. Chai gibt's auch noch, Cypress, das meinte ich, Cypress meinte ich.
Jest, Jest kennt, jaja. Also, vom, vom, vom Namen her, aber ansonsten, nope.
Brauchen wir alles nicht, die Anwendung wird sofort funktionieren.
Easy.
Nee, Cucumber war doch, war das nicht dieses Ruby-Ding?
War das nicht für Ruby, wo man so total umständlich geschrieben hat, diese Komponente
soll einen User einloggen und nach dem Einloggen soll, war das nicht so ein Ruby-Test-Framework?
Das total grausames Zeug ist das.
Wenn du nicht mal ein ordentliches Beispiel für Fynn... Ja genau! So hast du da deine Testrinne geschrieben.
Feature, guess a word, Szenario, maker starts a game, when maker starts a game... Das war total abgedrehter Shit.
Also ich würde, ich würde dir normalerweise wirklich zeigen, wenn du fragst, wie macht
man ordentliche Tests in JavaScript, aber ich kann dir schlicht und ergreifend nicht
zeigen, wie man ordentliche Tests in JavaScript macht.
Vielleicht ist da einer im Chat feilfälliger.
Okay, also.
Proceed to install following packages.
Proceed.
Yes.
Wann gibt es Kotlin-Backend-Streams?
Habe ich das überhaupt schon mal in meine
Liste hier aufgenommen?
Ja, haben wir.
Wollten wir uns irgendwann auch mal angucken.
Tatsächlich, ja.
So, yes. Proceed.
Gucken wir uns mal an, was da jetzt rauskommt.
Übrigens, ihr werdet jetzt gleich...
Oh, jetzt muss ich erstmal Fragen beantworten.
Ihr werdet gleich, nachdem das Projekt erstellt ist, eines der keckigsten Javascript-Momente
überhaupt erleben.
Für alle, die keinen Javascript-Frontend-Framework-Geschiss kennen, ihr werdet es sehen, wenn es soweit
ist.
Wenn ich den Editor aufmache.
Ähm, okay, add type-checking, no, type-checking, keck, es-lint-prettier-playline-v-tests-Weltinspektor,
Wir brauchen weder Linting, noch Prettyfine. Standard Visual Studio Format reicht.
Tailwind Forms wollen wir aber haben und Tailwind Typography wollen wir haben.
Popups? Keine Ahnung, warum nicht. Und Codeblocks? Ja, meinetwegen. Wir brauchen aber gar keine
Codeblocks. Ne, wir brauchen eigentlich auch keine Popups.
Okay, wir nehmen standardmäßig, was für ein Theme nehmen wir denn?
Skeleton oder Modern oder Rocket?
Äh, Modern, komm, lass mal, lass mal, für die, das sieht so cute, cute Theme aus.
Modern.
Wir können, wir können das Theme dann umstellen und vielleicht machen wir auch eine Theme
Which skeleton up-template barebones-template installing.
So.
Und gleich dürft ihr ne Runde kacken, wenn ich meinen Editor jetzt aufmach.
Macht das was?
Oder hängt das?
Oh, das macht Dinger.
Okay, fertig, nice.
New major version of NPM.
Ach guck mal, Archdiluchs ist nicht Bleeding Edge aktuell.
Was ist da los?
Was ist hier?
Oh, kack!
Das wollte ich gar nicht.
ich habe ich habe ich habe doch schon was created ok jetzt öffnen wir mal ein
wissel studio code die anwendung und jetzt könnt ihr gleich mal eine runde
kecken schaut euch das hier mal an wir sind im falschen ordner schaut euch das
hier mal an ich habe ein bear bones eine bear bones application generiert so
Ich meine, wohlgemerkt, das ist die Minimal-Anwendung, die ich generiert habe, quasi das Gegenstück
zu Hello World.
Und es sind erstmal, und das ist halt so ein typischer Wahnsinn, Schwachsinn im Javascript
Frontend Bereich, du hast erstmal tausende Dateien mit allem möglichen Zeug.
Du hast ne Vite-Config, du hast ne Tailwind-Config, du hast ne Svelte-Config, du hast ne PostCSS-Config,
Pagestation, Packager, Prettyfire, Prettierignore, NPMRC, Gitignore, ESLint, ESLintignore, Icons, Fonts, PostCSS, eigentlich Applikationeneinstieg, Routen, Libraries hast du nicht, guck mal hier, 30 Milliarden, alter, 30 Milliarden Node.js Module.
Das lädt erstmal das komplette Internet runter, das ist normal, so ist Frontendentwicklung halt.
Das ist schon immer so gewesen.
Vielleicht früher nicht, wo du das einzige jQuery included hast und das war es, aber
ansonsten war es auch so.
So, npm run dev, wir gucken uns jetzt mal das Demo-Projekt an.
Hier gibt es die Anwendung, die Testanwendung drauf.
Chrome starten und bam.
Okay, let's cracking a bones.
Also quasi, ja, Fingerknacken oder wie.
Sieht schonmal standardmäßig ganz brauchbar aus.
Ich muss den Darkreader auf, okay Darkreader ist aus, sonst kommt er mir hier durcheinander.
Ohne ESLint und Prettier auszuwählen hat er hier trotzdem, ja Moment, der hat ESLint
und Prettier vielleicht nicht installiert, aber die Configs hat er trotzdem hingelegt,
was aber nicht wild ist, weil Visual Studio Code das OnSave eh alles ordentlich formatieren
sollte.
Ja, macht's auch, so halbwegs.
So, also, ich zeige euch jetzt mal eine coole Sache, wer nur früher Frontend-Entwicklung
genießen durfte.
Ich mach das mal ein bisschen kleiner, dass man was sieht.
Also wer früher schon mal etwas Frontend-Entwicklung genießen durfte, der wird vielleicht noch
folgendes kennen.
Also, man editiert die Seite hier, dann speichert man die Seite und was macht man dann?
Ups.
Man speichert die Seite und man drückt hier oben auf F5 zum Reloaden.
Das braucht man mit den meisten Frontend-Frameworks nicht mehr. Ich zeige euch das mal. Ich editiere jetzt hier was, ich drücke Save und er reloadet
instant automatisch die Seite. Also die Zeiten des
F5-Refreshens sind eigentlich vorbei.
Und die Dinger sind mittlerweile so advanced, dass die auch nur Teile neu rendern können. Und das geht in der Regel
relativ schnell. Also sprich, wenn ich das hier rausnehme,
Dann muss er gar nicht die komplette Seite neu rendern, sondern er weiß, dass er das hier nur entfernen muss.
Das nennt sich, ich bin mir nicht ganz sicher, ich glaube, das nennt sich Hot Module Replacement oder sowas.
Ähm, und das können die meisten von, genau, HMR.
Macht Visual Studio das nicht sofort, sobald du speicherst?
Ne, also ich habe Visual Studio eingestellt, dass es meine Dateien formatiert und save.
Das Reloaden der Seite, da hat Visual Studio nichts mit zu tun. Das passiert hier. Guck, sieht man auch. HMR Update gab's gerade.
Das muss das Frontend-Framework, bzw. eigentlich muss es nicht das Frontend-Framework, sondern der, wie auch immer man das nennt, das Render-Ding hier unterstützen.
Genau, und wenn man ganz klassisches HTML machen will, ohne irgendwelche Javascript
Frontend-Geschichten, gibt es noch sowas wie den Dev-Server für Visual Studio Code, der
sowas dann injected in die Seite.
Also sprich, wenn ich jetzt hier drin rumeditiere, dann seht ihr, Save, der aktualisiert das
alles selbst.
So, machen wir mal hier alles weg, heck wait, und jetzt müssen wir uns mal angucken, wie
das Ganze funktioniert.
Delete everything.
Wir machen noch ein Skript oben rein, weil wir brauchen bestimmt ein bisschen Logik.
So, wie fangen wir jetzt am besten an?
Ich würde sagen, als erstes gucken wir uns mal an, dass unsere Seite ein gescheites Layout hat.
Und was trinken.
So, wir müssen uns jetzt mal angucken, dass unsere App ein gescheites Layout hat.
Wo gab es das mit dem Layout?
Ich glaube das hier.
Genau.
Genau, da kann man sich ein Layout erzeugen lassen, wie man das haben will.
Also, ich copy-paste das jetzt einfach mal kurz hier rein und zwar, das machen wir jetzt
nicht in unsere Page.cs, sondern in unsere Layout, in unser Layout-File, weil bei SvelteKit,
das weiß ich noch von früher, bei SvelteKit ist das so, du hast einmal eine Layout-Page,
die darf es glaube ich nur einmal geben und die rendert quasi immer so den Rahmen von
der Seite und die Page, das ist die eigentliche Seite, die hier in diesen Slot gerendert wird.
Also, guck mal, wir haben jetzt, ich zeig's euch einfach mal, wir haben hier jetzt layout.12 offen
Und da füge ich das jetzt mal ein. So, und jetzt will er irgendwelche Sachen von mir. Ah, it's not defined.
Okay, das ist klar, dass es not defined ist, weil ich den Kram noch includen muss. Okay.
Guck, und jetzt haben wir schon hier unser
unser Layout. Hier oben ist der Header, hier ist die Seitbar links, hier unten ist hier Fußzeile und hier ist der Content.
So, warte, das muss weg.
So, er rendert das von der Page.
Also, es gibt eine Page pro Route. Aktuell sind wir hier auf unserer Indexroute.
Die wird hier reingerendert an dieser Stelle vom Layout.
Svelte UI. Kennst du dich damit aus?
Ich hab noch nicht viel plan.
So, also wir brauchen schon mal keine Sidebar auf der linken Seite.
Wir brauchen vielleicht, wir brauchen vielleicht eine Fußzeile.
So, jetzt bauen wir mal eine gescheite Navigationsleiste, die nichts großartig enthalten wird, außer
eine Leiste und ein Icon oder sowas.
Ist POG, weil man Tailwind macht?
Ja, ich hoffe, dass es POG ist.
Okay, also wir wollen eine Navigationsleiste haben.
Also meine Navigationsleiste wird äußerst billig.
Die kriegt ein Icon, die kriegt den Titel der Anwendung
und die kriegt hier oben einen Create-Button für neue Copy-Pastas.
Fertig, mehr gibt's da nicht.
So, App Rail? Ne, App Bar wollen wir haben.
App Bar muss included werden.
Ja.
Und dann geht das wahrscheinlich so?
Was passiert jetzt, wenn ich das hier rein kopiere?
das sieht scheiße aus, das will ich so nicht. Was haben wir sonst noch? Titel, das ist ganz
gut so. Grid Layout, oh das gefällt mir besser, das will ich haben hier. Grid Layout, bock.
Sehr schön. By the way, ich will weiterhin Tab Size 2. So, jetzt haben wir hier Icon,
Action. Okay, Titel von der Anwendung ist, ähm, wie hab ich das Ding genannt? CopyPastaChamp.
Beste. So, das machen wir das Ganze noch ein bisschen fetter. Äh, Class A3? Ja, guck mal,
Ah, guck mal, sieht schon ein bisschen schicker aus jetzt.
Hobbypasta, Champ, Icons.
Wo bekomme ich...
Wo bekomme ich Icons gescheit her fürs Feld?
Ich glaube...
Also entweder nehmen wir Material Design Icons
oder wir nehmen die Tabler Icons.
Die gibt es nämlich auch fürs Feld.
Chat-Gate, ihr dürft euch aussuchen, was nehmen wir mit dem...
Wo ist denn diese Seite zum Suchen?
Da gab es doch eine Suchseite für... MDE-Search?
Da gab es doch mal so eine richtig nice Seite mit dem...
Tabler-Icons. Was soll es sein, eine Demo-Anwendung zum Basteln. Ich glaube, das ist das hier meine ich, glaube ich.
Das mit mehr cuten Icons. Probieren wir es mal aus.
Cute? Hey, okay. Eindeutig die Tabler-Icons.
Haben gewonnen.
So, wie installiert man den Kram fürs Welt?
NPM?
Warum?
Warum ist das ein Build?
Ah, ok und NPM, E-NPM, NPM, P-NPM, wir können auch P-NPM benutzen.
Dann lädt das nur einmal runter und es geht schneller.
Okay, ähm, zack.
Sollte man NPM und PNPM mischen?
Ich glaub jetzt hab ich's, jetzt hab ich's destroyed irgendwie.
Ich glaube, ich weiß nicht, ob das so eine gute Idee war.
Ich meine, es wird, es wird, am Endeffekt wird es funktionieren.
Def.
So.
Seite neu laden.
Alter, was geht mit meiner CPU gerade ab?
Ne, nix mehr, alles gut.
Okay und wie funktioniert das jetzt?
Iconheart, import, okay, imported, alter was geht, what the fuck, geht hier mit meiner
CPU Auslastung gerade ab?
What?
Ich hab doch nur ein Icon eingefügt!
Warum wegen einem Bild kann ich die Library inszenieren?
Als würd's die eine Library jetzt fett machen!
Ach, der musste grad irgendwas cachen oder so mit den Icons.
Geht das jetzt?
Hat das jetzt funktioniert?
Okay, es lädt, es lädt, okay.
Icon heart.
Okay, man kann verschiedene Sachen anpassen.
Lass mal ausprobieren, ob das jetzt funktioniert.
Easy, okay, nice.
können wir können Icons hinzufügen Pog ich würde sagen sind wir fertig oder
easy push push direkt in die Cloud live next next wahnsinns Service den alle
benutzen wollen Feierabend also so wie geht okay wir machen jetzt
einfach mal hier ein Icon hin wir machen irgendwas irgendwas billiges
So, ähm, so, Header haben wir, Header, Icon, okay.
Bei Icon machen wir jetzt Icon.
So, ähm, nur dass wir nicht Hard haben wollen, sondern Icon.
Cat.
Gibt es Pasta? Gibt es Nudel oder sowas?
Pasta? Nee.
Nudel?
Nee.
Food?
Okay, was hat man für Food zu bieten?
Brand McDonalds!
Wait a minute, die haben Brand Icons?
Das finde ich eigentlich ganz nice.
Okay, der Keks, der Keks wird's.
Der Keks, der Keks wird's.
I can Cookieman. Was?
So, jetzt haben wir ein schönes Bild.
So, wie ging das jetzt noch mit Size?
Jetzt haben wir noch die Größe, 24.
Ah, 24 scheint mir default zu sein, oder? 16? Ja.
32.
24.
Groß genug.
So, 24. Bestes, bestes. Also, Actions.
Actions. Da will ich jetzt ein Button haben für Add New Copy Pasta Button.
Wie machen wir Buttons gescheit? Da müssen wir mal gucken.
Also, Skeleton Buttons.
Da.
So ein Button hier will ich haben. Genau.
Bloß nicht mit einem toten Kopf drauf, sondern halt...
Button.
Button Icon Filled.
Okay.
Exzellent!
Was ist das für eine Konsole, die du da benutzt? Warum nicht die von Visual Studio Code?
Welche, die hier?
Das da?
Und was meinst du?
Das ist West Term.
Und warum ich nicht die von Visual Studio Code benutze, ist ganz einfach.
Warum sollte ich den Platz in Visual Studio Code irgendwie einschränken?
Ich meine, ich habe ja schon eh nicht so viel Platz hier gerade auf dem Display, gerade mit der Schriftgröße.
Und wenn ich einfach meine Desktops mit nem Shortcut umschalten kann, ist das viel angenehmer
für mich.
Zumal es hier auch ein richtig echtes, vollwertiges Terminal ist.
Äh, Wes- Nein, Wes-Term heißt das.
Ja.
Wes-Term.
Ja.
Wes-Giga-Chat.
Western
Wes giga chat
Ritten in rast blazingly fast
Beste debia news ok was haben wir für debia news
Wird mal wieder Zeit für ne neue Demian-Version, jetzt sind die Pakete nur 3 Jahre alt die
drinnen sind. So ungefähr. Jetzt muss man aber dazu sagen, warum? Warum muss man das
jetzt dazu sagen? Nice, neue Demian-Version, das finde ich extremely
Ja, ich meine, die Versionen sind halt Debian typisch, wahrscheinlich richtig uralt.
Gucken wir mal, wann das...
Und dann kam Bind.
Bind.
Ah, ihr meint immerhin, das ist nur, Bind, Bind ist nur ein Jahr alt.
Ne Moment, das sagt, sagt selbst so gar nix.
Hier, Dovecord.
Ich, okay, okay, die Packages sind nur ein Jahr alt bei Release.
Das ist für Debian nahezu Pleading Edge.
Also für Debian ist Package von Mitte 2022 höchst, extremst aktuell.
So, also ich wollte da irgendein Icon jetzt hinpappen an der Stelle.
Und zwar wollen wir das Icon haben für N, was hinzufügen wollen.
Tabler Icons
Tabler Icons
Ne
Habt ihr wieder vergessen wo das war
Tabler Icons
Gibt es sowas wie Add
Ne die Icons gefallen mir alle nicht
Das ist ganz gut
Circle Plus
Suchen wir mal nach Plus
Plus
Circle Plus ist schon mal ganz gut
Was haben wir denn sonst noch
Was haben wir ansonsten noch?
Square...
Was ist das hier?
Square Rounded Plus Filt.
Square Rounded Plus Filt.
Sehr easy Name.
So, und an der Stelle machen wir jetzt noch ein Button hin.
Icon Square Rounded Plus.
So, jetzt haben wir hier ein Button.
Guck mal!
Okay, das finde ich schon mal schick gemacht.
Das gefällt mir schon mal gut.
Ähm, das hat einen Hover-Effekt.
Also erstmal, der Mauszeiger wird überschrieben, es hat einen Hover-Effekt, es hat einen Press-Effekt und es hat eine Animation beim Pressen.
Das gefällt mir schon mal, das ist schick.
Es mag jetzt super banal sein, aber sowas selbst zu bauen ist immer recht mühselig.
Nicht, dass es wahnsinnig schwer ist, das würde ich auch noch hinkriegen.
Jetzt auch nicht als großer Frontend-Checker, aber das würde ich auch noch hinkriegen.
noch hinkriegen aber finde ich schon mal ganz nett dass solche sachen da
standardmäßig gut gut dabei sind so und jetzt ganz wichtig leute wir brauchen
einen themen switch das habe ich schon mal gesehen dass es das gibt wartet mal
switch switch wo habe ich das gesehen utilities light switch genau light
switch brauchen wir light switch probieren wir das mal aus ob das auch
funktioniert, Light Switch. Guck dir mal hier, jetzt kann man zwischen Dark und Light
Theme umschalten. Wirklich viel erkennen tut man noch nicht, aber ich glaube wenn ich ein
bisschen mehr einfüge, das, ach das ist Light, das ist gerade schon, aber da oben können
den nicht hin machen das sieht ziemlich das sieht ziemlich ziemlich verkehrt aus
das muss hier unten hin hier light switch beste
ja sehr schön
aber irgendwas stimmt mit dem browser nicht das sieht nicht nach light theme
aus oder ach ich habe ja meinen browser umgestellt ich habe ja mein br... ah Mist
leute ich habe doch experimentiert mein chromium so eingestellt da müssen wir
Firefox verwenden. Ich habe doch Experimental mein Chromium so eingestellt, dass er immer
Dark Theme nimmt und auch automatisch ein Dark Theme generiert, wenn es keins gibt.
Sieht man zum Beispiel schon, wenn man googelt. Das Ding ist nur, wie stelle ich denn das
wieder aus.
Chrome.
Was?
Nein!
What?
Alter, was ist das für ein Scheiß?
Was?
Nein!
What?
Alter, was ist das für ein Scheiß?
Was ist das?
Hier, auf Chromeflags, das will ich haben.
Experiments, dark, okay, okay.
Dark.
Hier, Auto-Dark-Mode, das wollen wir nicht.
Disabled.
Relaunch.
Okay, ja.
Okay, ja, jetzt ist gut.
Ah, ja, schon viel besser, Leute.
Jetzt sieht es auch noch Dark und Light Mode aus.
Ja, richtig am Thema vorbei, Block.
Ich muss sagen, auf den ersten Blick sieht es gar nicht mal so schlecht aus.
So, wir lassen uns mal kurz im Dark Theme alles.
So, wir haben ein Create Icon.
Wir haben einen Theme Switcher.
Ich würde allerdings sagen, das muss noch ein bisschen erweitert werden, der Futter, da muss ganz, ganz wichtig, das ist der Copy-Pasta-Champ
Bei Wubblords
Wubblords
Ihh
Oh ne, jetzt muss ich CSS können und ich kann kein gescheites, ich kann nicht gescheit CSS
Wie krieg ich denn das jetzt gescheit nebeneinander, so, gell?
Okay, das hab ich mir schonmal gemerkt.
Und wie krieg ich das jetzt nach rechts?
Okay, Moment, Moment, Moment.
Glas.
Nix sagen, Chat, nix sagen.
Fivehead, ähm...
MX Auto?
Ne.
fast ml auto oder oder war das oder war das justify ne oh ich habe kein tailwind plugin
installiert. Das muss gleich gefixt werden. Reload. Tailwind. Tailwind Intellisense, ja.
Wie vieles Weltplugins gibt es eigentlich? Habe ich das Richtige? Ich glaube, ich habe
das Richtige. Okay, nice. So, jetzt sollte ich hier drinne Class Completions haben, genau.
So, justify end. Geht das auch so? Ne. Wie war das? Space? Between? Ne. Between? Ah ja,
so geht's auch. Okay, okay, da kann man sich die Klasse hier sparen. Nice. Dann ist es,
Dann ist der immer, ist der immer centered.
Okay, alles, sehr schön.
Okay, wir sollten vielleicht noch eine Sache machen.
Ähm...
Wir geben dem Ding jetzt vielleicht nochmal irgendwie eine Margin von 5,
dass es nicht so, nicht so an der Seite hängt.
Ja, so ist das doch eigentlich relativ hübsch.
So kann man das so lassen.
Inklusive Theme Switch.
Der Copypasta-Champ bei Twitch-TV-Wubblers.
Exzellent.
So, jetzt können wir uns mal um die eigentliche Anwendung kümmern.
So, ich überlege gerade, wie wir jetzt am besten weitermachen.
Also, der Button hier oben, der soll eine neue, neue, ja, der soll eine Form aufmachen,
wo ich einen Titel und Content eingeben kann für Sachen, die dann hier angezeigt werden.
Ich würde sagen, wir bauen erstmal so koop, wie das aussehen soll und dann machen wir
das interaktiv.
Das einzige, was wir vielleicht schon machen könnten, ist die Route hier setzen.
Also, sprich, wenn man hier draufklickt, dann soll man on-click, äh, wie routet man ins
Weltkit?
Weltkit-route.
Man könnte jetzt ein Link-Element machen, aber dann mache ich den Button kaputt.
Wie macht man Routing ins Weltkit?
Ja, klar, man könnte es mit dem Link machen, das ist schon mal klar, dass das funktioniert,
aber...
Hä?
Hä, das war doch total simpel.
Das war sowas wie Link, Link to sonst was.
Eigentlich wäre ein Link doch das...
Ich will ein button haben der funktioniert ich will ich meine ich könnte link im button machen wahrscheinlich das würde funktionieren
Aber ich kann auch einfach ein click event da dran hauen
Moment und selbst wenn ich ich will hier haute gut programmatical ins welt dass sowas sowas suche ich genau
im port go to alles klar
Achso, ähm, und jetzt, go to, slash, okay, go to, nehmen wir es mal create, die Route
gibt es noch nicht, das heißt es kackt jetzt ab, wenn ich da drauf klicke, not found, ja,
klar, es gibt ja noch keine Seite, die sich Create nennt. Die legen wir jetzt mal an.
Route. So, wenn ich das richtig im Kopf habe, funktioniert das jetzt folgendermaßen. Wenn
ich eine neue Unterseite anlegen will, also eine neue Route anlegen will, dann muss man
jetzt unter Routes, glaube ich, einen neuen Folder anlegen, der sich exakt so nennt wie
die Route. So und da drin brauche ich jetzt ein PageSvelte. Und es schon funktioniert.
Guck, das hier ist, das hier ist, ähm, create. Ups, machen wir es mal so. Wir machen mal
Link. Back. Zurück auf Slash. Okay, funktioniert. Hier komme ich auf die Create-Seite und hier
komme ich auf die Index-Seite wieder. Vielleicht willst du auch ein Popover. Naja, jetzt nochmal
stellen will ich eine eigene Route. Vor allem kann man dann nicht per Ctrl plus
klick eine extra ein extra tab öffnen für die seite das richtig aber das
nicht schlimm weil das ja eine single page application ist das würde
wahrscheinlich nicht richtig funktionieren wenn das neues tepp
maß
er das schon ok so
ich meine wir können es an der stelle tatsächlich mal ausprobieren ob wir das
mit dem GoTo überhaupt braucht, wir machen mal anstatt dem Button einen Link, href nach
Create
Ein gut funktioniert genauso
Und klick weg
Ja okay das
Nee das funktioniert nicht genauso guckt mal ich glaube der button mit dem button sah es anders aus
Oder?
Nee.
Nee oder? Das ist genau das gleiche.
Das testen wir jetzt.
Wir machen einfach zwei Sachen.
Nee, das ist überhaupt kein Unterschied.
Das ist überhaupt kein Unterschied.
Dann können wir auch den Link direkt benutzen.
So. Okay.
Wir kommen auf die Create-Seite und hier geht's zurück auf die Hauptseite, alles gut, das passt.
So, Steam-Switcher tut immer noch.
Alles klar, so, mit was fangen wir denn jetzt an?
Ich würde sagen, wir bauen jetzt mal eine Seite.
Die, die Main-Page.
Und wir müssen mal so grob überlegen,
wie das, wie das Ganze aussehen könnte.
Wie gesagt,
es ist, es ist ja nicht mein Ziel,
dass da irgendeine Anwendung rauskommt,
die sich super,
die sich, die sich irgendwie,
die man benutzen kann oder so, ja.
Das geht zum üben davon.
Okay, also jetzt brauche ich meine CSS-HTML-Skills.
Wir brauchen einen Crit, oder?
Also, mein Ziel ist folgendes, dass wir hier drauf jetzt sowas anzeigen, hier, ich weiß
es nicht, copypasta 1, copypasta 2, so und das sollen unterschiedliche, so unterschiedliche
Karten sein.
Das heißt, wir müssen uns hier erstmal was raussuchen für Karten, Karts, Karts, das sieht
eigentlich ganz schick aus. Wie machen die das animiert?
Kart Hover! Oh, das ist cool, das gefällt mir, das ist schick.
Hover me. Nee. Moment, das ist doch Blödsinn.
Der hat keinen Link. Das darf ein Diff sein. Ich will gerne keinen Link haben.
So, okay, wie bauen wir das jetzt zu einer halbwegs gescheiten, gescheiten Karte um?
Moin Max, kommst gerade rechtzeitig.
CSS stellst.
Okay, jetzt, jetzt muss ich meine CSS Skills, was macht Block?
Display Block?
Ist das nicht sogar default mäßig schon der Fall?
Okay, Card Hover P. Also, was will ich jetzt da drinnen stehen haben?
Ich will so eine Art Header haben.
So, hier.
Copy, Pasta, 1.
So, dann will ich ... Koffer, sag ich schon für den Sub.
So, dann brauch ich, okay, eine Breite, Breite.
96.
Okay, das passt, glaub ich, ganz gut.
So das ganze muss natürlich ja noch in den Crit oder sowas rein und zwar haben wir noch hier
Artikel oder sowas
Komm hier Lorem Ipsum Generator
Alles klar
Warum ist loremyy.com kein loremyy Generator?
Was ist da los?
Oh beste, alles klar.
Ach VSCode kann das, ne?
Sehr schön, sehr schön, excellent.
Ähm, muss man da noch ein P drumherum machen?
Ne, ne, bringt nix.
Warum ist das überhaupt so doof eingestellt?
Ich will Tab-Size 2 Spaces haben.
So, Article, Class, oder machen wir das mal anders.
Wie formatieren wir das jetzt mal, wie formatieren wir das jetzt gescheit?
Also, wir haben einen Header.
So.
Der Header...
Keine Ahnung, das wird einfach eine Überschrift, das brauchen wir keinen Header.
So, Überschrift.
So eine kleine Überschrift hier.
Class H6
so jetzt ist das ganze schon mal ein bisschen dicker was wäre wenn ich die
glas weglasse dann ist es
okay aber fünf vielleicht ja besser
okay da haben wir eine überschrift so jetzt müssen wir das irgendwie h6 ist
Header Überschrift. Du hast den HTML, hast du H1 bis H6 und das sind unterschiedlich fette Schriften.
Guck da.
Die sehen dann unterschiedlich dick aus.
So, das ist die Überschrift.
Es gab doch jetzt irgendwie sowas tailwind line clip oder sowas oder line clamp
zeigt mal
Line klemp 2 das müssen wir jetzt machen dass das wird nice
glas gleich
Ist das nicht jetzt wird das jetzt wird das gekürzt
Guck mal, jetzt wird das immer auf zwei Zeilen gekürzt, das ist doch nice, jetzt sind die
Dinger halbwegs predictable lang.
Gut, man könnte jetzt sagen, wenn man draufklickt, geht halt ein Popup auf, wo der eigentliche
Text drinne steht, aber so, hey, da soll ja keine Anwendung rauskommen, die wirklich funktioniert.
So, nice, so jetzt haben wir eine Karte, jetzt ist natürlich die große Preisfrage, wie
stellen wir zwei Karten gescheit dar?
Nicht nach Aussehen Heading Levels benutzen, wieso?
Wieso nicht?
Okay, das sieht kacke aus.
Ich glaube, wir sind an dem Punkt angelangt, wo ich ein CSS-Grid brauche.
Und da habe ich jetzt...
Oh shit! Haben die einen Grid?
Nö, gibt keinen Crit.
Aber warum auch?
Ich meine, man kann ja die Tablet Classes benutzen.
Tabelle, genau, wie 1995.
Okay, Crit, jetzt, oh fuck, Alter.
Okay, also eins was ich weiß ist Crit, man kann sowas sagen wie Gap 4, dann sieht das
schon mal nicht mal ganz so kacke aus, ne?
Gut.
Ähm...
Wie sag ich dem jetzt, dass ich mehr als eins Columns brauche, glaube ich?
Hier, warte mal.
Okay, okay.
Five Header Time.
Wir machen jetzt mal was.
Wir machen da eine Schleife drauf.
Äh...
Each Counts Svelte.
Wie macht man eine For-Loop?
For-Loop in Svelte.
So.
Beste.
Das brauche ich.
Suchst du sowas?
Weiß ich nicht.
Ja sowas in der Richtung suche ich.
Genau.
So jetzt machen wir erstmal ne Schleife.
So wir sind im Crit.
Wir machen ne Schleife und in die Schleife soll meine Karte rein.
So jetzt gibt es diese Karte drei...
Vercopy Pasted.
Jetzt gibt es diese Karte gleich dreimal.
Ah Gott!
HTML!
Wo ist das Problem jetzt man?
Achso, ups, achso, ja wenn man Sachen mitkopiert, die es gar nicht geben soll.
Okay, jetzt haben wir die Sachen dreimal.
Jetzt haben wir drei dieser Karten drinnen.
So, und jetzt will ich die Karten ordentlich anordnen.
Was brauchen wir, Grid, Columns, 3, okay, 2.
Okay, jetzt müssen wir das, jetzt wird's advanced, jetzt müssen wir das responsive
machen.
Oh shit.
Ähm.
Jetzt müssen wir das responsive machen, okay, okay, wir fangen mit einem an, wir fangen mit
einem an und dann sagen wir ab medium size wollen wir grid columns 2 haben
okay guck mal guck mal funktioniert funktioniert so ja nice und sobald so
bald wir auf die breite gar nicht mal schlecht gar nicht gar nicht mal schlecht
mit flex breche ich mir da noch mehr ein ab okay das ist gar nicht mal so übel
Guck mal, das funktioniert. Und jetzt sagen wir, sobald wir large sind, wollen wir gridColumns 3 haben.
Ist vielleicht noch ein bisschen verbesserungswürdig, aber so im Großen und Ganzen passt es doch.
Wir müssen jetzt die Breite noch ein bisschen anpassen.
Aber ist doch schon mal nicht schlecht, oder? Je nach Größe vom Gerät
passt er sich an ob ob drei oder vier oder ob ob eins zwei oder drei nehmen
ich war okay was kommt nach latsch was hat was hatten was hatten tailwind tailwind break points
Breakpoints, XL, okay, nice, sehr schön, POG, so lassen wir das, das ist mir, Leute,
das ist mir responsive genug, mehr responsive muss das gar nicht sein, alles, alles gut
Beste, beste Responsiveness.
Bock.
Aber es ist doch schon mal cool.
Guck mal, es geht bis zu...
Wisst ihr was? Ohne Mist.
Das sieht gar nicht so schlecht aus, oder?
Auch das Theme
sieht schon ganz gut aus.
Das finde ich gar nicht mal so übel.
Das geht voll klar, von der Optik her.
Okay, so, also als nächstes haben wir hier so ein paar Karten, die wir darstellen können.
Ich mein, wir könnten jetzt auch furchtbar ordentlich sein und daraus irgendeine Kart-Component
machen.
Gibt's sogar einen Editor auf der Skeleton-Page?
Wie, wo denn?
Was denn?
Was meinst du?
Wo?
Für Layouts oder was?
Forms?
Nee.
Ach, für Themes?
Creator Theme.
Ach, cool.
Ja gut, das Problem dabei ist, da müsste man jetzt irgendwie designer-mäßig bewandt
sein, dass man gute Farbkombinationen findet.
Gibt es nicht einen Befehl, der automatisch ein Component aus dem SimPad macht?
Keine Ahnung, das können wir aber easy selbst machen.
Du meinst sowas wie Refector?
Ne, keine Ahnung.
Ey, wir können daraus jetzt theoretisch ne Card machen.
Da müsst ihr mir mal helfen, die ganzen Svelte-Kenner.
Ich glaub das liegt bei unter Lib ab, ne?
So, dann nennen wir das jetzt mal einfach PastaCard.svelte, dann kopieren wir das hier
rein.
Dann nehmen wir das hier weg und sagen PastaCard, nice, oh das ist cool, das funktioniert ja
total easy.
Sollte man nicht DollarLip machen ins Weltkit?
Was ist denn besser, DollarLip oder PunktPunktLip?
ist, glaube ich, besser, weil das von überall immer gleich ist.
Aber da gibt es kein Autocomplete, ne, mit Dollar.
Ah, alles pp-iger.
Gut, das ist, das ist nice, aber was mir noch nicht gefällt, ist, dass es hier in der Mitte
von der Seite ist.
Was ist, wenn ich dieses H voll rausmache?
Äh, nope, okay, sieht scheiße aus.
Wir lassen es in der Mitte von der Seite.
Das ist doch aber schon mal ganz hübsch.
Das gefällt mir eigentlich echt ganz gut bis jetzt.
Kann man da nicht draufklicken und kommt dann da hin.
Warum komme ich jetzt nicht zum Import?
Komme ich nur zum Import, wenn man das Ganze...
Ne, das ist natürlich doof.
Das ist natürlich blöd, dass man...
Aber wenn man das mit Dollar macht, warum komme ich nicht zum Import?
Das ist doch hängen geblieben.
Gibt es da vielleicht sowas wie Svelte?
Jump to oder sowas?
Haben wir einen Bug gefunden in der Erweiterung.
Aber gut, Pasta Card.
Jetzt...
Versuch mal mit einem Punkt statt mit zwei.
ne
ne
ne
ne
das ist entweder 2 Punkte davor
weil ein Verzeichnis nach oben und dann den Lib rein
oder Dollar Lib
aber Dollar Lib funktioniert dann das Navigieren im Source Code nicht mehr
was auch bescheuert ist
gut also weiter im Text
jetzt haben wir den Kram hier zum anklicken
das sieht ja eigentlich schon mal alles ganz
brauchbar aus
weil die Karte ist noch null dynamisch
Sollten wir mal sowas sagen wie hier
Let ne export let
Heife gleich
Copy pasta 1
Und export let
Nennen wir es irgendwie body oder so ist
das
Geht nicht, warum nicht?
Wo ist das Problem?
Unused, mir doch egal, ob das unused ist.
So und dann setzen wir hier Body ein und hier Title, dann können wir das nämlich dann
übergeben.
Ansonsten ist es rendert halt so eine standard text oder halt was was ich
Einfüge dann später von von hand
Okay, das ist ganz gut jetzt ist die seite auch relativ übersichtlich
Okay, alles klar jetzt würde ich sagen
Das war mir jetzt als nächstes
war mir als nächstes die create seite
Nee, wir können nicht die create seite als nächstes als nächstes machen
Wir machen mal eine Suchleiste, eine Suchleiste brauchen wir auf jeden Fall noch, Input.
Input.
Ne, so schonmal nicht.
So.
Flex Column.
Und jetzt machen wir tatsächlich das hier raus.
Kann man sowas auch machen wie Gap?
Wie kriege ich, wie kriege ich da jetzt, wie kriege ich da nach da oben jetzt was dazwischen
als, muss ich dann hier sagen, March in Top 2 oder sowas?
Item Center ist das Problem.
Nö.
Ah.
Justify.
Justify Center ist das Problem.
Ja.
Viel besser.
Viel besser.
Ah.
4.
Ja.
Das ist doch eigentlich ganz schick so hier.
Okay.
Der Input Text ist
vorbei.
Wobei?
Nö?
Eigentlich?
Eigentlich ganz gut.
Das Einzige was wir noch hier gucken ist vielleicht mal
Class, Input,
Margin
Y
Ne, X
Ne, Y?
Ne
X
Padding X?
Alter, wie kriege ich da links und rechts jetzt Platzhalter dazwischen?
Nee, MX-12 findest du nicht.
MX-12 geht nicht, guck da.
Wie kriege ich den jetzt?
Keck-CSS, Alter.
Nee, ich brauch das hier, oder?
Ich brauch das Prinzipiel hier, ich will den gesamten Inhalt, der gesamte Inhalt soll ein
Padding von 4 kriegen, sowas hier, ja genau.
Sowas brauchen wir, glaube ich.
ja
ok gut gut gut gut
gefällt mir schon mal ganz gut
so jetzt haben wir hier nen suchfeld was natürlich noch nix macht search weil wir
noch nix aber das passt schon mal sieht schon mal eigentlich ganz ganz brauchbar
aus, dass man jetzt hier was suchen kann.
Wir können auch noch mehr Copy-Paste-Aus machen.
Was passiert denn hier, wenn ich 99 Copy-Paste-Aus mache?
Dann...
Dann...
Dann breakt es wegen... wegen der Scroll-Leiste.
Egal, das ist eine Demo-Anwendung, damit will ich mich jetzt nicht beschäftigen.
Ah, nee, das ist...
Oh Gott, das ist ja ein...
Ich hasse CSS, man.
Das funktioniert nicht, jetzt haben wir hier die keine Abstände richtig drin.
Egal, alles gut, ich lasse es jetzt einfach so, fertig, so, Search, Searchleiste, exzellent.
So, so bleibt es jetzt.
Co-Pilot kann auch kein Sveld, wahrscheinlich kann Co-Pilot schon Sveld.
Okay, das sieht doch eigentlich ganz schick aus.
Was ist, wenn ich sag Gap 8?
So ist es eigentlich besser, ein bisschen Abstand dazwischen.
Warum ist der Abstand hier dazwischen kleiner, als der Abstand 8, der ist dynamisch da?
Abstand dazwischen, okay. Na gut, wir wollen uns zwar nicht mit so kleinen Scheiß aufhalten,
sonst wird das ja heute gar nix mehr. So, wir haben jetzt hier unsere Copy-Pasta-Card,
das heißt als nächstes brauchen wir folgendes. Erstmal müssen wir ein Formular anlegen zum
erstellen von dieser Card, weil aktuell ist ja nur Platzhalter und wir brauchen einen
Store, wo wir die ganzen Copy-Pastas drin speichern. Also wir brauchen quasi sowas
hier PastaStore und aus diesem Array soll das alles generiert werden.
Nur mit dem Unterschied, dass es hier aktuell gar kein Store ist, sondern nur ein Javascript
Array.
Das heißt, wir brauchen einen SvelStore, wo erstellt man den denn hier wahrscheinlich
am besten?
Hier, PastaStore.js Writable heißt das ganze glaube ich, genau.
Ne, das sieht irgendwie falsch aus.
Import.
Svelte.
Store.
Irgendwie so.
Writable.
Ah, so ging das, genau.
Ja, das habe ich gesucht, genau.
So, weil jetzt kann man, also Svelte hat ein ganz gutes Feature, und zwar kann man, ich
Man kann applikationsübergreifend egal in welcher seite in welcher komponente man ist so auf gemeinsam ist quasi so eine art globale
Variable ist das wenn ihr es so wählt wenn ihr wenn ihr es so wollt ja
Nur nur dass es nicht einfach nur eine globale variable ist sondern eine die sobald sich der inhalt ändert
Auch den content updaten kann also wir brauchen sowas hier wie export konst
Pasta store
So, gleich. Writable.
So, das ist, ne, kein Objekt.
Javascript-Array.
Und standardmäßig da drinnen.
Okay, standardmäßig.
Wir machen ein Objekt standardmäßig rein.
Und zwar ist das
Titel. Wir schreiben das nämlich einfach hier hin.
Titel. Copy.
Pasta. Eins.
Und.
Wie haben wir das andere genannt?
Body oder so.
So. Wo ist das Problem? Brauchen wir sonst noch was? Ja, Tags kriegt dieses Ding noch,
wir wollen Tags vergeben können. Tags gibt es standardmäßig keine, doch Tags gibt es
Standardmäßig Wobblords. Ne, wir sind nicht in C-Sharp, wir sind in Javascript, also ist
es ein Doppelpunkt. Und hier, da muss ein Komma dahinter, dass das funktioniert. So,
Tags, Wobblords und ja, das war's. So, und jetzt gehen wir auf unsere Startseite und
Wir wollen jetzt den Pasta Store importieren, den er nicht findet, Import, ich hoffe ich
mach das jetzt hier recht, Pasta Store, okay, so weil jetzt kann ich das Array nehmen und
sagen aus diesem Array, ja hat funktioniert.
Wir holen das jetzt nicht mehr aus der eigentlichen Button-Komponente raus, sondern, das heißt, das kann ich...
Moment...
Das muss weg.
Das muss auch weg.
So, sondern wir holen das jetzt aus unserem...
Store raus, wo ich dann auch weitere Sachen einfügen kann, die ich hier mit adden werde.
Also, da müssen wir nämlich sagen, PastaCard...
Ähm...
Hei... Nee.
Hä?
Muss ich das ernsthaft so machen?
Lip?
Sonst funktioniert es nicht.
Ja, geht nicht anders.
Keine Ahnung, warum diese
Autocomplete-Geschichte
das nicht mit Dollar-Lip
unterstützt. Da scheint doch irgendwas kaputt zu sein.
So, Titel gleich
S
Also die Schleife
passt da. Title
Funktioniert schon mal.
Und Body gleich
So, jetzt haben wir hier unseren Text, sehr nice, das gefällt mir, das hat irgendwie
was.
Probier es mal mit einem Ad beim Impor- wie bei- mit einem Ad?
Wo?
Wie?
Adlib?
Ne, das kann nicht sein.
Ne.
Es ist auf jeden Fall Dollarlib, aber ich versteh nicht, warum das die Erweiterung
nicht checkt.
So jetzt holen wir uns die ganzen sache aus unserem store raus
Ach du meinst quasi so was hier gut verzeichnis
Ich weiß wie es funktioniert so sollte sollte ne ich glaube das ist hier nicht so so das heißt als nächstes müssen wir uns überlegen
Wie kriegen wir neue copypastas in
in das Array rein.
Also das ist unser Copypasta-Store, da ist aktuell nur die Standard-Copypasta drin, die
hier angelegt wird.
So, und jetzt wollen wir mehrere hinzufügen.
Das heißt, wir müssen jetzt, wenn man hier auf das Plus klickt, auf die Create-Page.
So, auf der Create-Page brauchen wir den Store und das ist wirklich ein mega-nices Feature von Sveld.
Guck mal, ich kann jetzt, wenn ich hier, ich bin jetzt in zwei komplett unterschiedlichen, naja super, jetzt ist es natürlich hier zwei hoch.
Ja, das ist ziemlich mies. Egal, wir lassen es jetzt so.
Guck mal, wenn ich den Store importiere, ich bin jetzt auf zwei komplett unterschiedlichen Seiten.
Der Content ist geshared in diesem Store.
Also, wenn ich hier was in den Store einfüge, ich werde es euch mal zeigen hier gleich.
Wir nehmen jetzt einfach mal hier, Pasta-Store,
Push,
Moment, ich zeige euch mal, dass das prinzipiell funktioniert.
Wir fügen jetzt mal hier diesen ganzen Crample, ich copy-paste das jetzt mal, wir fügen das einfach noch mal ein jetzt. Jetzt haben wir halt zweimal das
Gleiche drin, aber es gibt, es gibt Schlimmeres.
So, Push. So, pass mal auf, guck mal.
Easy. Obwohl das zwei unterschiedliche Seiten sind, ist das Store geshared zwischen denen.
Das heißt, wenn ich hier was hinzufüge, dann erscheint das auch hier drin.
Und noch besser, wenn ich hier was hinzufügen würde und das andere wäre noch offen, dann würde es dynamisch sogar aktualisieren.
Allerdings, wir wollen jetzt ja nicht irgendwie random Zeug da hinzufügen, sondern wir brauchen
eine, ein Formular.
Du kannst so Alias definieren.
Ja, checkt das die...
Checkt das dann das Visual Studio Code Plugin auch?
Das Problem ist, dass es das Visual Studio Code Plugin nicht checkt.
Dollar Lip funktioniert zum Auflösen, aber das Visual Studio Code Plugin kapiert's nicht.
Oh, jetzt wird's aber advanced, Frontend-Shit kommt jetzt Leute, Achtung, hier, du könntest
Pasta mit dem Spread Operator Pasta aufteilen, dann könntest du anstelle von Title nur Title,
Okay, was kann ich machen?
Spread Operator
Ne
Ich versteh bloß wahrscheinlich einfach nicht, was du haben willst
Der Spread Operator
Eine Zeile höher?
So?
Ne, oder?
Nee, das funktioniert nicht.
Moment, was ist jetzt hier?
Nee.
Nee, nee.
Ich hab keine Ahnung, Chat.
Ich habe keine Ahnung, Chat.
Und jetzt schreibe ich Title?
Nee.
Nee, Chat, das funktioniert so nicht.
Was?
Dadurch, dass er gerade Eier geworfen hat, lässt sie beschwerdend darüber nachdenken, was es mit dem Morgenbrot gegeben hat.
Nein, das nächste Nachtmahl...
Es kam mir etwas von default auf.
Schlau!
At, um die remembermation spielen zu lassen!
Ich nehm wichtige Vorwürfe iher zu.
Chat! Was? Okay, jetzt wird's noch advancer. Jetzt hat noch einer geschrieben, ich soll
Copy-Pasta-Card machen. Punkt, Punkt, Punkt, Pasta. Das wird doch im Leben nicht funktionieren.
So funktioniert das nicht, wie ihr euch das vorstellt.
Wir bleiben mal hier, wie es ursprünglich funktioniert hat.
Okay, Achtung, excellent, Pfeil fährt.
Schaumi, ja. Ach so!
Okay, das funktioniert. Aber ernsthaft, das ist ja krasser, krasses Magic.
Also jetzt mal ernsthaft. Wo versteht man eher was passiert? Das oder das? Das gefällt mir. Das ist richtig krass. Hardcore Javascript Magic. Das ist gut. Das lassen wir so. Das lassen wir. Das ist so gut so.
Umso weniger man es versteht, umso besser.
Wie gesagt, kein Fehler, dementsprechend braucht man auch keine Kommentare und keine Docs dafür.
Nice. So.
So, ich wollte aber eigentlich eine Seite erstellen zum Anlegen von so einer Copy-Pasta-Dingsbums-Seite.
Ja, keine Karte, sondern Create Page.
Ähm, jetzt wird's in der Tat etwas komplizierter.
Wie mach ich denn das jetzt am besten?
Als erstes kopier ich mir mal das Ding.
Das brauch ich nämlich bestimmt.
Soll genauso gesentert sein wie das andere.
Ja wunderbar.
So.
Form.
Lass uns das mal angucken.
Forms.
Alles gut.
Okay.
Als erstes brauchen wir wieder ein Input.
Input.
Exzellent.
Input.
Sehr schön.
Nur dass es nicht einfach nur Input heißt, sondern wir brauchen ja den Text.
So, einen Titel, einen Titel, Titel brauchen wir nicht, Titel ist overrated, outdated,
debated.
So, Typ Text ist glaube ich okay, Placeholder, Titel, so und jetzt brauche ich irgendeine
Variable dafür, also sowas wie let title gleich, ja nix.
Okay, und jetzt muss ich irgendwie sowas sagen wie bind value title?
Funzt das jetzt?
Lass mal kurz ausprobieren, ob das funktioniert, weil ich es hier geübert habe.
Ja, funktioniert!
Okay, das updatet.
Nice!
So, also, wir haben hier einen Form Input für den Titel, dann brauchen wir das gleiche
nochmal.
brauchen wir irgendwie... Textarea. Textarea. Ja, das ist zu kurz. Zwölf. Bam. So. Dann
Body. Wir benennen das mal ungefähr gleich, dass man noch halbwegs durchblickt. Überall.
So, bind, bind, value, äh, text, so, okay, naja, das sieht doch schon mal ganz brauchbar
aus.
Wir machen vielleicht mal gap 4, sonst sieht es ein bisschen zu weit auseinander aus.
Ja, nee, das ist gut.
Sehr gut, sehr gut, das gefällt mir.
So, wir brauchen Buttons.
Nee, Leute, Pfeifett!
Yeah, ich hab die Idee.
Passt mal auf.
Wir haben doch vorhin sowas gefunden.
Jetzt haltet euch mal fest.
Next Level Feature.
Wo war das? Chips.
Chips brauchen wir jetzt.
Massive Chips.
Chips, gell?
Schaltest du den Wort frei? Ich hab immer Worts frei.
Gibt es? Ah, Liste gibt es nicht. Okay. Let Tags gleich. So. Tags.
Pass auf jetzt hier. Keckel? Oah! Alter! Mindblown! Tagging Feature!
Hock U I Keine Groß- und Kleinschreibung, Cringe-Time, Alter.
Beim Formular kannst du SvelteKit-Actions ausbilden.
Naja, SvelteKit-Actions sind ja für Server-Side-Geschichte.
Wir machen ja alles kleinseitig.
Lul. Nice.
Guck, jetzt können wir schon alles taggen.
Sehr schön. Aber da schreiben wir nicht Enter Value, da schreiben wir nicht, wir schreiben Enter Tags.
So, das sieht doch schon mal, jetzt mal ohne Mist Leute, ich finde, das sieht besser aus als ich vermutet habe.
So, jetzt haben wir hier unsere Tags, jetzt brauchen wir noch ein paar Buttons.
Buttons.
Local Storage, ja, das ist zumindest der Plan, erstmal.
Wie gesagt, da soll ja keine Anwendung rauskommen, die wirklich großartig was bringt.
Ich will einfach nur mal ein bisschen hier das Weltkit, Skeleton UI und Zeug ausprobieren.
Button Groups, ne, wir wollen keine Button Groups. Button Groups sind...
Zacken.
Wir wollen einen Button haben, ja, hier haben wir einen Button, ne, kein Eigenbutton, einen
richtigen, echten Button wollen wir haben, so, Button.
Der Button soll heißen Save, wir brauchen einen Button für Speichern und wir brauchen
einen Button für Cancel, so, das sieht aber nicht gut aus, also machen wir ein Diff drum
herum.
Jetzt können die CSS-Checker unter euch wieder glänzen, flex, ähm, wie kriege ich denn das
jetzt hier rechts hin?
So was wie flex right auto, flex left auto, okay, nice, justify and, gibt es nicht sowas
wie self and, okay das geht auch, Leute ich habe absolut keine Ahnung was der Unterschied
zwischen allen dem ist warum und warum macht das das gleiche überhaupt warum
macht margin left auto das gleiche wie wie selfline end
Selfie-Hand klingt nicht Twitch-safe, ja.
Using Spaces, oh, viel besser.
So, ich möchte allerdings den Button nicht rounded haben, ich will rounded none.
Ja, viel besser in dem Fall, rounded none, exzellent, exzellent.
So, primary filled.
Secondary?
secondary?
ok das sieht schonmal ganz gut aus
buttons
wie macht man warning buttons?
warning buttons
haben wir nicht sowas hier
einfach warning
überall sind eklige farbe
primary
secondary
warning
warning
Ha, gar nicht mal so schlecht.
Gar nicht mal so übel.
Oh, Gap 5.
Ne, prägt nix.
Gar nicht mal so hässlich, oder?
Und auch im Light Mode gar nicht mal so hässlich.
Okay, Cancel macht noch nix.
Aber das sieht gar nicht mal so scheiße aus.
aus
Da finde ich gut das hat was da ist aber dark mode beste immer noch logisch
Gar nicht mal so mies gefällt mir tatsächlich sieht sieht sieht schick aus
So wenn wir jetzt auf speichern drücken da muss natürlich was passieren
Nee, wenn wir auf speichern drücken
Cancel grau da hast du recht ja da hast du recht wie macht man das grau error inactive oder sowas oder einfach nur filt
Ja, so ist besser, oder?
Ja, ja, so ist es, intuitiv, hast du recht, ja, ja, ja, ok, so, jetzt ist die Frage, wie
speichern wir denn das Ganze jetzt gescheit, also wir machen noch Function, nennen wir
mal Submit, weil das ist ja immerhin auch sowas wie ein Form, so, wir brauchen wieder
Go to jetzt diesmal. Diesmal müssen wir wirklich programmiert
So hier drinnen müssen wir jetzt zurück navigieren go to auf slash so satt mit
On-klick
Ich kann nicht schreiben on-klick
Submit. So, es soll gesaved werden und hier soll nicht gesaved werden, allerdings zurück
navigiert werden. Probieren wir mal aus, zack, funzt. Nice, bis dahin funktioniert das schon
mal. Ja, hier müssen wir jetzt ein Element in den Store pushen, genau. So, if, save und
jetzt pushen wir was in den Store. So, also, wir brauchen ein Element, wir brauchen Title,
ist Title, ist relativ easy, Body, ist Body, das ist, das ist einfach so, und Tags, sind
Tags, so, das war's eigentlich. So, und wenn ich jetzt alles richtig gemacht hab, sollte
ich, also gehen wir mal hier drauf, so, Startseite, neu anlegen, Tag W, Overrated, Outdated, Cheapbaited,
Das gibt's nur bei Pokimane im Chat.
So, und jetzt mach ich Save.
Da ist es...
...automatisch updatet und aktualisiert.
Ist das nicht nice?
So, jetzt fügen wir noch was hinzu.
Und zwar eindeutig, weil das jeder weiß, dass Lulw größer KekW ist.
Und das gibt's nur bei Woblo...
Gibt's nur bei...
Das gibt's nur bei Woblos...
...und bei...
Was weiß ich.
Beim Lost.
Und Save.
Nice.
Mit Pocket Base als Backend.
Wir haben überhaupt kein Backend gerade.
Sollte
Titel Body Text nicht
schon als neues Objekt reichen?
Ich weiß nicht, da bin ich Javascript mäßig
nicht schlau genug für. Du meinst einfach so?
Geht das?
Chat Guild.
Nennt er das standardmäßig so, ohne dass man das explizit davor schreibt? Anscheinend. Sieht so aus.
Sehr schön.
Ja?
So, wir sollten die Tags noch anzeigen lassen. Gehen wir mal hier auf unsere Pasta-Pasta-Card.
So, jetzt brauchen wir noch eine Schleife.
Wir brauchen in unserer Pasta-Card noch eine Schleife und zwar für die Tags.
Tags, Schleife, nee wir brauchen den Store hier nochmal.
Nee, nee, nee, Sekunde, ich muss die Tags erst setzen, Export, Let, Tags, Tags, Tag, und
jetzt müssen wir Each beenden.
So, Tag, so wie macht man so einen Chip, so einen normalen Chip, Chips, Chips, beste
Chips, ha nice, so und das gibt jetzt Tag, das funzt, ich bin begeistert, das funzt
viel besser als ich mir das vorgestellt habe.
Okay, Margin, Right, kriegt es ein bisschen Abstand dazwischen.
So, der ganze Mist hier, der braucht natürlich noch ein bisschen Abstand untereinander.
Das sieht ja, das sieht viel zu, viel zu gestaucht alles aus.
Der Everest ruft, ja, auf geht's!
Kann man hier sagen, jetzt flex?
Oh
Schlechte Idee schlechte Idee Max ganz schlechte Idee
Kann ich jetzt hier einfach sagen Margin top 2
Lieber außen ein Diff noch mit Display Flex und Gap. Du meinst hier?
Und das, und das dann da reinpacken, kann ich mir nämlich das da sparen.
Ja, ja, das ist wahrscheinlich besser.
Wann verwendet man Margin, wann Padding?
Okay, ihr könnt mich da korrigieren, Chat, also soweit ich weiß ist Margin das komplette
Außen drum herum und Padding ist, wenn du Abstand im Element haben willst.
Aber ich verwechsel das auch immer.
Speichert er die Karts im Local Storage? Nee, aktuell speichert er die Karts noch nirgendwo, aber mein Ziel ist, dass er die Karts im Local Storage speichert.
Aktuell speichert er noch gar nix im Local Storage. Aktuell ist es nur, sobald ich die Seite einmal hart refreshe, ist das alles wieder weg.
Dass das hier bestehen bleibt ist nur weil der unter der haube hot module replacement
Refresh macht für die seite also sprich da lädt die seite gar nicht neu sondern tauschen
nur sachen von aus also wenn ich das hier jetzt editiere dann tauschen nur die sachen
aus die ich editiert habe und lässt den seiten state weiterhin so wie es ist
Leute das das gefällt mir das hat echt was das ist sehr sehr sehr pock würde ich sagen
Okay, jetzt haben wir hier so ein Create-Ding, wenn ich Cancel drücke, passiert auch nix.
Sehr schön.
Da wird canceliert.
Add mal viele Texte, ah, da wird wahrscheinlich kaputt gehen.
Dafür ist es nicht ausgelegt.
Ups, falscher Knopf.
Alter.
Dafür ist es nicht ausgelegt.
Darf man nicht.
Es ist einfach verboten viele Taps zu machen.
Add a Flexwrap in das Diff
Alter der Chat wieder
Absolut high IQ Chat
Danke für die Subs Leute, Xeto, Porga Subscription
Leute, wenn euch der Content gefällt und ihr einen Prime Sub übrig habt
Dann wäre es schön, wenn ihr jetzt Monka steert zum Subscribe Button
Ich muss ab und zu mal ein bisschen zu laut machen
Und wenn nicht, ich freue mich trotzdem, dass ihr da seid
da seid aber ab und zu sehr laut muss sein so läuft das twitch game warum benutzt du
wie es kot und nicht webstorm weil ich wischtel studiocode für freundin
sachen lieber mag als webstorm glatzbos sein für den sub
Trey Weston Prime Subscription. Huge. Leute, jetzt geht's los.
Gibt sogar gleich den Scam-Train. Ja, der Scam-Train ist bei 93%, Leute. Gleich wird richtig gebatet wieder von Twitch.
So, sorry bin arm, ich hab letztens auf Youtube so ein Video gesehen, 2000 Euro passives Einkommen
im Monat.
Du musst nur in die richtige Telegram Gruppe, dann ist das alles kein Problem, hab ich gehört.
und du brauchst genau und du brauchst das richtige grindset mindset dafür
spuky danisch für den sub, siehste schon hast du nen sub am start
chainlore war ja auch am start
So, also
Es sieht auch schonmal gar nicht so schlecht aus
Okay, Chat gibt, bevor wir uns jetzt ablenken lassen
Ihr wisst, ich lasse mich immer easy sidetracken
Wir brauchen doch sicherlich noch irgendwas
Ja, wir müssen
Das löschen
Wir müssen es irgendwie löschen können
Ich meine, und wir bräuchten ein Fenster um es anzuzeigen
Aber da verzichte ich jetzt mal drauf
Wir müssen es löschen können
Okay, wie machen wir das mit, dass man so eine Karte löschen kann?
Wir machen ein Trash-Icon oben rechts in die Ecke, hör.
Trash-Icon.
Pasta-Card.
Ja.
Ja, wir machen ein Trash-Icon oben in die Ecke.
Äh, Icon.
Trash, gibts hier was wie Trash?
Trash Icon Filled, exzellent, das brauch ich.
Trash Icon, Trash Icon Filled, so, jetzt haben wir ein Trash Icon, das Trash Icon, kann man
dem ne Klasse geben?
Wahrscheinlich, wahrscheinlich, ups, wahrscheinlich nicht direkt, weil wir sind ja nicht in Vue.js.
BG Red, gucken wir mal, ey geht, doch geht, Class, dann sagen wir Position, Absolut, äh
das hier sagen wir Relative, ne ist glaube ich schon, Right, Zero, wow, ne dann muss
zwar doch hier relativ sagen. Right, zack. Kann ich nicht sagen, minus zwei oder sowas?
Minus right zwei? Ja, excellent! Und minus top zwei? So, und da machen wir jetzt kein
Trash-Icon, ne wobei, Trash-Icon kommt da einfach so hin, Trash-Icon, fertig, jetzt
kann man löschen, wenn man da draufklickt.
Da brauchen wir natürlich ein Button, weil ohne Button wird das Ganze wieder rumbacken.
Class, btn-icon, nene, btn-icon, oh das ist zu fett, btn-icon-sm, wait a minute, Sekunde,
muss absolut. Hier, der Button. Okay, jetzt kann man da draufklicken. Was, Copypasta?
Alter, das ist doch genau das Richtige für dich. Ein Copypasta-Management-Programm. War
davon abgesehen, dass es nicht zum Benutzen gemacht ist, sondern zum Swelp-Kit ein bisschen
anschauen wieder. So, jetzt kann man es löschen, wenn man hier draufklickt. Das heißt, wir
jetzt sowas wie hier onclick onclick ups ne was mach ich denn delete die fangen die müssen
wir noch delete ist ein schlüsselwort oder das darf ich nicht benutzen so kannst du bitte
den horizontalen und vertikalen Gap zwischen den Karts gleich machen.
Ja, wo denn? Wie denn? Wo denn?
Ach das hier! Ja, wie mach ich das denn?
Ne.
Ne.
Ich weiß nicht, wie ich das mache.
Chat-Gel.
Gap.
Äh, warum ist denn das überhaupt unterschiedlich?
Ich sag doch immer Gap 1 und Gap 4.
Achso, ich weiß, woran das liegt.
Weil das hier dynamisch gemacht wird, je nachdem, wie breit die Seite ist, gell?
Ja, das hängt ja...
Okay, doch, das ergibt sogar Sinn.
Weil wenn die Seite zu sehr gestaucht wird, dann muss das ja...
...richtig skalieren alles.
Äh, okay.
Jetzt habe ich eigentlich genug Platz.
Der Scam-Train ist da, endlich!
Endlich wurde schön reingescamt.
Dankeschön für die Subs, Leute!
Also, falls einer noch ein bisschen Prime übrig hat und sonst nicht weiß, wohin.
Ich nehm' den gerne.
Wie nennen das die coolen Kids?
Genau, Responsive Design.
Ja, das ist so responsive und agil, da müssen wir mit leben, dass die Abstände hier nicht richtig sind.
Perfekt.
Ich glaube du hast noch irgendwo einen Margin, ne hab ich nicht, weil guck mal, dann wäre
es ohne Gap nicht alles aneinander dran.
Oder sehe ich das falsch?
Ich sehe da keine Margin, die irgendwas macht, hier ist keine Margin.
4 habe ich noch macht aber nix hat damit nix zu tun und die margin hier innen
drin hat ja damit auch nix zu tun ich lasse es jetzt heute wenn ich mir so
klein scheiß auffallen dann wird das heute wird das heute überhaupt nix was
wollte ich denn jetzt überhaupt machen das habe ich wieder vergessen was ich
machen wollte chat geht wo sind wir stehen geblieben
adeliten ich wollte das löschen ich wollte das löschen ja das ist übelst
Es ist warm, ich wollte kurz die Klimaanlage anschmeißen.
Hotgel.
Pasta Store brauchen wir wieder.
Jetzt bin ich mir nicht ganz sicher
wie man das weitermacht. Also
Function
Delete Pasta.
Okay.
Dann gibt es hier die...
Shit, das geht hier drin
gar nicht.
Ich darf, ich darf da nicht, ähm, wir müssen was anderes machen.
Wir müssen die Gesamte übergeben.
Wir müssen, wir müssen die Gesamte, oh das ist ja scheiße, wir müssen die Gesamte übergeben,
ich die dann wieder löschen kann oder nicht oder wie machen wir das jetzt am
besten
übergeben den index und löschen den im store ok das ist eine gute idee das ist
Das ist eine gute Idee.
Ja, ja, ja.
Aber irgendwie ist das auch scheiße, oder?
Wie lösche ich das denn jetzt wieder?
Zwanzig Seiten über Parallelisierung.
Tja, viel Spaß.
Good luck, have fun.
Array filtern auf, ok ich muss tatsächlich sowas wie eine ID, aber ich hab kein Index.
Ich mein wir könnten auch nen Event, weil die keine IDs haben, die haben halt Array
Einträge und so.
Also was man machen könnte ist, irgendein Event oder so.
Ja okay, das wird wahrscheinlich funktionieren. Export, Let.
Hier ist was wie Index. Okay, das ist aber auch nicht schöner.
Lass mal ausprobieren, ob das funktioniert.
Äh, Page?
Moment, falsch, das will ich haben.
Ne, ah!
Ne, ist doch richtig.
Jetzt will ich index gleich i.
Okay, das müsste jetzt tatsächlich funktionieren.
äh, lock index, ok mal gucken ob das funktioniert
öh, warum bist du da oben?
ne ne ne, wait a minute, wie mach ich das wieder unten hin?
so, console, ok das funktioniert
ne ne ne, ist gut, das passt, passt, alles gut
funktioniert, pasta store
remove at nein, delete at nein, okay arrays deleten, pyfad time in javascript, das ist
immer ein bisschen komplizierter
wie delete ich den index alter, js delete index array
Wie kann ich ein bestimmtes Item aus einem Array entfernen?
Array, genau sowas suche ich, ja.
Ah, man muss es erst mal suchen.
What?
Okay.
Index of...
...macht was?
Returns the index of the first...
Nee, das will ich nicht.
Ich habe den Index und will das.
Also sprich, ich...
Okay, das ist easy.
Nee.
Ich mach einfach so.
Ich hol das Element
an dem Index raus.
Ja.
Und dann sag ich...
Pasta Store?
Splice?
Nee.
Ey, was brauch ich denn jetzt?
Brauch ich da das Element oder den Index?
Ne, ach ich brauch da einfach nur den Index, ja dann ist es ja einfach.
Und jetzt splice was eins, second parameter.
Also sowas will ich haben.
Nicht so ganz?
Block?
Ach, ich muss das noch zuweisen, glaube ich.
Pasta, Store, gleich.
checkt er das glaubt net. Ha! Easy! Sehr schön! Nice! Eats! Okay, das heißt, wenn ich jetzt
hier was hinzufüge, kecke, plop, zack, save, löschen. Ah, nice, nice, sehr, sehr schick.
Excellent, excellent. Gut, dann funktioniert das schon mal. Also okay, wir können anlegen,
können löschen. Ich würde sagen, wir versuchen mal die Suchleiste irgendwie
funktional zu bekommen. Da bin ich noch mal ein bisschen
unschlüssig, wie ich das ganze machen will. So, SearchText gleich leer.
BindValueSearchTexts.
Okay, wenn ich jetzt hier was suche, dann steht das in Search Text drin, das heißt
ich muss das hier jetzt filtern.
Filtern auf, hier, Pasta, falls ist alles leer und jetzt true ist alles drin.
Jetzt brauche ich eine Filterfunktion, der ich die Pasta übergebe und den Search Text
übergebe.
Dann brauche ich eine Funktion, die heißt Filter.
Die bekommt die Pasta und den, äh, ja, Filter, Text oder so, oder, oh, Text.
Aber was hat er für Schmerzen?
Filter has already been declared.
Okay, ich vermute mal, man darf es einfach nicht Filter nennen, weil Filter in JavaScript aus irgendwelchen Gründen...
Oh, was habe ich denn hier? Ich habe irgendwas importiert, das wollte ich nicht.
Okay, so, filtern.
Return true.
Okay, also, sprich, wir machen jetzt mal was.
was textpunkt to lower oh shit javascript to lowercase so das ist der searchtext to
lowercase so jetzt will ich gucken enthält eventuell der titel titel to lowercase includes
Eventuell den text
Dann
True ansonsten gibt es das nicht
Enthält nicht den text enthält nicht aber
Meine logik ist kaputt
Hast du nicht den Filter von... Ich weiß nicht, was der Filter von Skeletor macht.
Ist nur der Titel... Ah, ich muss nach Copy suchen.
Ah gut, funktioniert. Gut, ich habe alles richtig gemacht.
Okay, und jetzt If Body Title Lower. Jetzt kann ich auch nach Sum suchen und es funktioniert.
Okay, nice. Testen wir das mal. Bla bla bla bla bla.
A, D, A, S, ja, nice, funktioniert.
Return pasta title includes das, ne, dann hab ich schon ein Einsteiler, wie jetzt, wie soll
das funktionieren?
Du meinst, dass ich quasi das hier miteinander verknüpfen soll, also dass wir quasi sowas
hier sagen?
Oder wie?
Ja gut, in dem Fall ist es tatsächlich nicht so verkehrt.
Das sieht ein bisschen schöner, ein bisschen kürzer und knackiger aus, ja.
Macht das gleiche, sobald es halt komplizierter wird, nicht?
Aber gut, das dafür ist okay.
Wir könnten jetzt, wir könnten theoretisch sogar...
Ne, das lassen wir so.
Warum macht der da eigentlich Klammern drum?
Hä? Und jetzt nicht?
Warte mal...
Okay, keine Ahnung.
Ich glaube, das ist irgend so ein prettier Ding aus dem Visual Studio Plugin.
Achso, übrigens, das muss oder oder sein.
Ja, genau.
Weil es muss ja copy oder load, ja, alles klar, funktioniert.
So, wunderbar, das, da funktioniert die Suchleiste jetzt tatsächlich auch.
Das ist ja, das funktioniert ja besser und schneller, als ich mir das so vorgestellt habe.
Also muss ich sagen, mir gefällt das mit Svelte Kit und Skeleton UI.
Wir haben jetzt noch nicht super, super eigenes, großartig eigenes Zeug gemacht,
mehr oder weniger nur das benutzt, was da ist.
Aber an sich...
An sich doch eigentlich schon mal ganz cool.
So, also das funktioniert alles.
Und, und der
der Light Mode funktioniert.
Der in der Tat auch ganz schick aussieht.
Muss man ja auch mal hier hervorheben, gell?
So ist es ja nett.
Okay, was machen wir?
Ich hab ne Idee, passt mal auf.
Prepa...Prepärt euch...
für...
übelst High IQ Frontend Stealths.
Ich hab ne Idee.
Passt mal auf, was wir jetzt machen.
Ähm, ich bin mir nicht sicher, ob's funktioniert,
aber zeigt mal her. Wir machen jetzt
ein...eine Bewertungs...
Bewertungssterne für die Copypasta noch drunter.
Das ist nicht POG, STAR.
Gibt's da irgendwie sowas?
IconstarFilled. Sehr gut.
Wie wäre es mit Transitions? Okay, aber für was? Das Transitioned ja schon ordentlich.
Passt mal auf, das war jetzt Diff.
Okay, Star. Nee, Start Hydrating. Nee, nee, nee, nee, wir wollen Icon.
Icon.
Star Filled.
Pog, genau das, genau so. Ja, Button.
Klar ist gleich, btn-icon, btn-icon-sm, ja, ja, ja, ja, sehr, sehr schick.
Wobei, die Sache ist die, wahrscheinlich sollten wir das auch lieber als eigene Component machen.
Machen wir hier noch size, vielleicht, vielleicht machen wir die mal ein bisschen kleiner, wobei
ganz ehrlich? Ach komm, 24 fette Sterne. Boom. So, wir sollten ein bisschen Abstand machen
nach oben. Sehr schick. So und jetzt brauchen wir ja Unterschied. Gibt es auch noch was
wie icon icon star einfach ohne gefüllt ja sehr schick nice nice so das heißt im
endeffekt also so ist natürlich jetzt nicht so sinn und zweck der sache aber
icons da so könnte man eine bewertung das ist das ist cool das gefällt mir
Das ist absolut nicht interaktiv bis jetzt, aber das finde ich cool, da kann man seine Copy-Pastas bewerten.
Battleship, was stellst du dir denn für Transitions vor? Mir fällt gerade keine ein.
Die 5-Star-Component, da fehlt ja noch ein Star.
Okay, das ist aber schon mal nett verkehrt.
So, wir brauchen tatsächlich jetzt eine Component, nennen wir das mal hier StarRating oder so.
Oh, die gibt's natürlich noch nicht.
Oh, das war wieder weg hier.
Also, jetzt brauchen wir eine Component, nicht PastaCard, sondern StarRating.
Rating.swelt
Warum hat er jetzt Probleme?
Ah, weil ich es noch nicht importiert habe
Nicht PastaCard, sondern StarRating.swelt
Reicht das eigentlich, wenn ich das einfach nur so importiere?
Ohne irgendwas?
Ach Moment, ich bin in der falschen Datei, wo ich das gerade inkludet habe.
Ich muss das ja hier inkluden.
Lul
Großes Problem
Die eigens fehlen
Script?
Internal Server Error. Den ist ja auch...
Ja
Hä??
Wo ist das Problem?
Lipp, das Phylaxe, ist das irgendwie Brocken, ich starte das nochmal neu.
Auf, gib ihm, starte, starte, wääh, hää?
Ey, einfach nur so, oder?
Wo ist das Problem?
Ja, aber den Import, den gibt es doch!
Fail to Resort?
Okay, alles klar.
Star Rating Jetzt funktioniert es, ok nice, ja man muss
anscheinend Punkt Slash davor machen, dass er danach guckt, wo es gut ist, muss man wissen.
Ok, wie könnten wir jetzt eine, da stehe ich jetzt ein bisschen auf dem Schlauch, also
Wir machen erstmal sowas wie Export
Rating gleich 1
Also von der Idee her will ich ja sowas hier haben
1, 2, 3, 4, 5
Und dann will ich haben Icon Star
Zum Beispiel sowas
Äh fast, fast
Nicht ganz
Nicht wirklich
Ich will, ich will sowas hier haben.
Hier Sterne und dann zum Schluss Eichenstar. So, sowas in der Richtung. Da machen wir jetzt mal ein Diff drum.
Glass.
Weirdflex.
So soll das am Ende aussehen. Die Sache ist nur die, das ist halt nicht interaktiv und es passiert nix, wenn ich auf die einzelnen Sterne
drücke.
loop und dann ein if. Also wir könnten wieder sowas machen wie each array fünf Durchläufe
S, so das brauchen wir nicht, wir brauchen nur das zum zählen.
Machen wir das hier mal weg.
Ok, jetzt haben wir halt 5 Sterne, das sackt halt und ich kann da jetzt auch nichts dran
ändern.
Das heißt ich muss jetzt hier gucken, sagen wir mal Rating, sagen wir mal 3 Sterne haben
wir, ok?
So, das heißt, da bräuchte ich jetzt
ein If
Die Sterne müssten theoretisch eine Form sein
Nee, nee, nee, nee
Form muss das nicht sein
Okay, da war mal ein If hier drin
If
Wenn mein Schleifen-Durchlauf kleiner ist als das Rating oder ansonsten else das.
Okay.
I can star filt, I can star, I can star, ergibt das Sinn, was ich hier gebaut habe?
Hey!
Funktioniert!
Nice!
3, Rating 3
Und gut, jetzt müssen wir es nur noch so machen, dass man draufklicken kann
Also, on, klick
On, klick
Wird das Rating auf, äh, i gesetzt
Oder?
Hey, ne
Äh
Ah, das geht bei 0 los, also wird das Rating auf i plus 1 gesetzt?
Dazu kann ich ja wirklich nur sagen, easy.
Easy as Fuck!
Easy.
Easy.
Easy.
Easy.
Easy.
Easy as Fuck!
Eigentlich ganz schick, oder?
Ich kann immer so übel nur dass das so kurz zusammen gewusst wird wurde
Jetzt noch zurückschreiben in die pasta weiß nicht
Passat noch gar kein star kein feld für fürs das
Und
Die Sterne direkt beim Hoveren ändern.
Du meinst, wenn man da drüber hovert, sollte der schon mal temporär anzeigen, dass es
jetzt ein Filt-Dings sein könnte?
Wow, da bin ich jetzt überfragt, wie man das macht.
Da bin ich jetzt überfragt, wie man das gescheit machen würde.
Ich meine, ein Hover-Effekt in Tailwind ist das eine, aber wir brauchen ja einen Logik-Enderer.
So einfach ist es nicht.
Weil die Sache ist die, es gibt ja dann ein Preview Rating und ein Real Rating.
Ja, das Funst, ja aber, oh jetzt nervt mich rum hier, weg, so und weil das Mouse Over,
dürfte dann nur das das review ändern oder so ja das ist ein solch dass das
ist tatsächlich ganz cool weitermittel ja das bleibt aber ohne dass ich das
Es bleibt aber ohne, dass ich klicke.
Naja, aber auf der anderen Seite...
Auf der anderen Seite, ich meine, das ist jetzt hier quasi Rating Preview oder sowas
hier, ja? So und jetzt brauchen wir noch sowas wie einen, ja was weiß ich, Internal Rating,
keine Ahnung, Null. So und das muss, das muss im On-Click gesetzt werden. Und das muss es
jetzt ein OnClick. Und das muss jetzt hier OnClick. Internal gleich Rating. Irgendwie
sowas
Ja
Hey, das ist scheiße das ist doch dass das funktioniert nicht richtig
Weil das ist immer das
Der soll gar nichts machen wenn er fertig ist das nur zum üben ich war so merkt dass ich das ist das ist das ist doch
kacke das sagt
Nee, warte mal.
Nee, warte mal.
Ich muss nicht Zeile 13 anpassen.
Das ist, das ist okay so, aber wie, was, warte mal, was funktioniert denn jetzt überhaupt
nicht?
Das Problem ist, wenn ich jetzt hier drüber haffere und gehe runter, dann muss es...
Ich brauch...
Oh ne, Leute, das ist mir zu kompliziert gerade.
Genau, ich muss nämlich, wenn ich mit der Maus rausgehe und nicht geklickt habe, dann
muss ich Rating wieder auf Internal setzen.
Also onMouseLeaf.
Ergibt das Sinn?
Ne.
What?
What?
Achso, weil es Null ist.
Oh shit.
Ja gut, Initial muss einmal gesetzt sein.
Ja, jetzt funktioniert es.
Okay, jetzt funktioniert es.
Wenn ich rausgehe...
Okay, das ist aber schon ein bisschen durch die Brust ins Auge, aber es funktioniert.
Und das machen wir, das Maus lief.
das machen wir in das Flex
dann verhält sich nicht so eklig
jetzt passt das, guck
das wird angezeigt solange man drin ist
und wenn man raus geht
dann geht es zurück auf das ursprüngliche
Das ist eigentlich ganz gut jetzt.
Doch, doch, so lassen wir das.
Wie wäre es mit einem Fade-Out beim Löschen der Card?
Jetzt wird's aber advanced hier, oder?
Wow! Alter!
Okay, warum nicht?
Ups, warum nicht?
Why not?
Moment, wo hat man das jetzt? Sekunde, wo hat man das jetzt gemacht?
Import, okay, wir brauchen auf jeden Fall nur Fade. Das brauchen wir nicht. Fade, Duration.
Auf der Page.
Wie macht man das jetzt gescheit?
Transition, Fade
Ähm
Und jetzt muss man das wo
angeben? If
Visible? Ne
Das brauchen wir nicht, das ist nur zum einen
ausschalten, zum testen
Out, Fade
Äh
Einfach so? Ne
Da muss ich noch ein Diff drum herum machen
des Funds, ne?
Riff
Ha!
Guckt euch das mal an!
Pog!
Ok, das ist vielleicht ein bisschen zu langsam
Kann man bei
Fades Welt
Fade Transition
Da kann man doch bestimmt
die Zeiten einstellen, oder?
Hier, fade out, und dann gleich delay.
Machen wir delay 5, das sollte jetzt mega schnell sein, so zack.
Nee.
Duration?
Okay.
Machen wir mal Duration, dass wir auch sehen, dass das funktioniert.
Ja, für uns.
So, Duration 100 Millisekunden, wenn es verschwindet.
Plopp.
Das finde ich sehr schick, Leute.
Das hat schon was, oder?
Das wirkt jetzt sehr, sehr weich, wie das, wie das alles.
Hui!
Zack.
Also, es hat ne gute An- Es hat ne- Es ist kurz genug, dass es nicht nervt.
Und es ist so, so-
Ja, okay. Das ist- Das ist nice.
So, fügen wir mal ein bisschen mehr hinzu.
Blablabla, blablabla, blablabla.
Save.
Ja, okay. Die Höhe ist unterschiedlich.
Naja, gut. Das ist in Ordnung.
Ja, doch. Die Höhe sollte schon immer gleich sein.
Wobei, die Höhe ist eigentlich schon wie den Text nicht immer gleich.
Ah. Naja.
So was passiert wenn ich das jetzt dann ja cool
Eis
Aber dann fällt es nicht habt ihr das gesehen das das fehlt nicht wenn man wenn man das löscht
Schaut euch das mal genau an
Guckt mal wenn ich das lösche
Faded das nicht. Wir können auch mal 500 einstellen, aber dann werdet ihr sehen, es fadet nicht.
Doch, es fadet. Okay, ich habe nichts gesagt. 100 Millisekunden ist das Beste.
Wozu sollte man es länger machen? Wenn ich es länger mache, nervt es ja.
Guck, wenn es länger dauern würde, wenn es wirklich länger dauern würde als so, würde es nerven.
Stell dir mal vor, das dauert irgendwie 300 Millisekunden.
Das ist doof. 100 ist optimal dafür.
Preserif, moin.
Ey, jetzt wo du da bist, heute ist CSS-Stil am Start.
Da bist du doch quasi
der Expert hier im Stream.
So, schick.
Ah, das gefällt mir, das hat was.
Meine Tags hat's nicht übernommen.
Doch, das ist nur verbuggt,
weil man muss Enter drücken vorher.
Dann übernimmt's auch die Tags.
Guck mal da. Ui.
Und jetzt?
Nice. Das gefällt mir. Das hat was.
Das ist irgendwie ganz nice.
So.
Lass mal kurz in mich gehen, ob mir noch irgendwie was kleines einfällt,
was man noch auf die Schnelle bauen könnte.
Wir können hinzufügen.
Achso.
Local Storage.
dass er die Copy-Pasta sich merkt, natürlich.
Hier.
Irgendwie dort müssen wir das...
Skeleton-UI hat doch sowas für Local Storage.
Local Storage Stores, hier.
Import Local Storage Store.
Wie lange ist das Weltstore gültig?
Bis zum Refresh der Seite, seitdem du schreibst in Local Storage, dann bist du dein Local Storage löscht.
So, wie funktioniert das jetzt?
Was?
Hm?
Okay, lasst uns das mal ausprobieren.
Local Storage Store.
Und jetzt machen die was?
Okay, war hier.
Let Blob gleich.
Und dann, wie geht das?
Local Storage Store?
Dann brauchst du irgendeinen Key?
Ja passt das so nach dem Motto?
Oh und jetzt Initial Value?
So gehe ich mal von aus.
Initial Value ist das da?
Punzt es jetzt einfach.
Das wäre jetzt witzig, wenn das einfach so gehen würde.
Nö.
Natürlich nicht.
Dann check ich aber nicht.
So lass uns mal in local storage gucken, ob da jetzt was drin steht.
Äh, wo ist denn das, Application?
Ne.
Ja, mach ich ja.
So ganz check ich jetzt noch nicht, wie es funktioniert, ehrlich gesagt.
Du brauchst noch die Update Function?
Ne.
Ne.
Es soll angeblich wie ein ganz normaler Smell Store funktionieren.
Es gibt ja auch keine Fehler.
Also es scheint ja zu funktionieren.
Nur mit dem Unterschied, dass das...
Gibt es sowas wie Save oder so?
Ne, das check ich jetzt nicht, wie das funktionieren soll.
Was ist das für eine App?
Äh, Rumbastel-App für das Weltkit und Skeleton-UI.
Es ist quasi so eine Art-To-Do-App.
Zum Üben.
Das funktioniert nicht so wie ich mir das gedacht habe, ansonsten werde ich aus der Hilfe-Seite
aber auch nicht schlau.
Ja, da haben wir doch alles richtig gemacht.
Wir haben alles richtig gemacht, also zumindest sofern man es hier aus der Seite erkennen
kann.
Insgesamt haben wir nicht alles richtig gemacht, weil es nicht funktioniert.
Er will mit Set oder Update aktualisiert werden?
Mach ich doch, ich sag gleich.
Der legt überhaupt kein Local Storage an.
Das ist doch irgendwie merkwürdig, oder?
Ich brauch mal ein ordentliches Exampel.
ja genau weil es fehlt ja auch irgendwie sowas wie loading und sowas ja ich habe dollar
davor skeleton ok mal video gucken wir gucken wir scrollen mal durch
Backups that handles our data.
Okay.
Ah, das ist Typescript, Gedöns.
Ja, okay.
Ja, das ist mir doch alles egal.
Das ist Typescript, das können wir ignorieren.
Local Storage Store.
Ja.
Ja, genau so mache ich das auch.
Ja, sehe ich jetzt keinen Unterschied zu, mache ich genauso.
Ja gut, selber machen ist das eine, aber warum geht das hier nicht?
Fragt man sich da.
Vor allem, warum taucht hier im Local Storage nicht auf?
Oder muss man da anderweitig gucken, oder?
Sagen wir mal, Leute, das müsste hier doch stehen, oder?
Oder nicht, man?
Eigentlich hätte ich gedacht, das würde da jetzt...
Wo packst du das in den Store?
Zum Beispiel dort.
Vielleicht mag er das nicht.
Ah, ich muss was löschen.
Okay, dann liegt das wirklich daran, dass die Zuweisung fehlt.
Das save das on assignment quasi so
Jetzt funktioniert okay, ich brauche quasi sowas okay, okay, alles klar
Ja gucken wenn es jetzt geladen ist dann ist wieder weg, okay, also brauche ich wirklich sowas wie
Pasta Store gleich Pasta Store an meinen Ringen
blubb blubb
Ja, okay, funktioniert.
Da können wir uns das Initial Value auch schlicht und ergreifend jetzt mal schenken.
Äh.
What?
Wait a minute.
Wo kommt denn das jetzt her?
Wo kommt Copypasta 1 her?
Beim Fullpage-Reload
Irgendwas gecachedes noch?
Gibt es nicht?
Muss irgendwas gecachedes sein.
Kann ich mir auf der anderen Seite nicht erklären.
Ja, war was gecachedes.
Funst nochmal schon ist alles im local storage jetzt können wir hier hinzufügen
gebated outdated overrated gebated oder was auch immer so zack
wenn man jetzt neu lädt ist es immer noch da und dass das lolw größer als kekw ist
Ja, das sollten alle wissen.
Sehr schick, guck mal, zack.
Jetzt, Refresh, ist immer noch da.
Nice.
Das ist gut, das gefällt mir, das hat was.
Pog!
Oh!
Reihenfolge noch festlegbar.
Ey, man kann da noch tausend Sachen drin einbauen, wenn man will.
Und, was?
Wieso ändern die nur vom hauern die die ändern vom hauern dass du dass du siehst was jetzt was was ein klick machen würde
Und wenn du nicht klickst passiert nichts und wenn du dann auf den sternen klicks dann bleibt er auf vier
Doch gut was ja nicht geklickt
Du hast ja nur du musst klicken dass das funktioniert
Ja, das ist, ich hab jetzt auch einmal komplett refreshed, ich glaube jetzt sollte es funktionieren.
Vielleicht hat er auch mouse out nicht richtig mitbekommen, man weiß ja nie so genau hier.
Achso, beim Reload, ja das weiß ich woran das liegt.
Das weiß ich woran das liegt, das wird aktuell noch gar nicht ins Store reingeschrieben.
Das wird nirgendswo aktualisiert, deswegen nicht.
Da hab ich jetzt auch keinen Bock drauf, das doch zu bauen.
Aber ihr wisst ja, was mich echt ein bisschen beunruhigt,
das tatsächlich gar nicht so schlecht aussieht. Ich finde es übrigens immer schöner, wenn
man nur einmal export let schreibt und dann Komma separiert weitermacht. So dann oder
wie ich weiß dass das wisst ihr wie das aussieht wisst ihr wie das aussieht das
sieht aus wie so eine fake so eine fake bewertungsseite die clickbait leute aus
der suchmaschine auf sie locken will kennt ihr diese seiten so dieses nach
dem motto die besten kühlschränke 2023 und das sind alles amazon reflinks
unter der Haube. So eine search-optimierte Fake-Ratings-Seite, genau so sieht das aus.
Die Schriftart gefällt mir, aber was ist denn das für eine Schriftart?
Was ist denn das für eine Schriftart? Sieht man das irgendwo?
Und
Von family quicksand quicksand, but quicksand font habe ich noch nie gehört
Okay, da font
Ja, gefällt mir, hat was.
Anlegen, kek kek, woblords, bam, neuer Tag, zack.
Ja und was auch nice ist, wenns zu lange ist, wenns zu lange ist, dann klippt er das auf
zwei Zeilen.
Twitch Emotes im Text anzeigen, oh ne das wird kompliziert.
Doch, das gefällt mir. Also ich muss sagen, die Kombi aus Welt- und Skeleton-UI sagt mir zu.
Lasst mal kurz drüber gucken, was die sonst noch so haben, was wir heute nicht...
Das reicht jetzt erstmal so anwendungsmäßig heute. Ich glaube, da war jetzt genug rumgebastelt mit.
Und was ist, wenn Text zu lang und Text drin sind?
Das funktioniert auch, weil... Pass mal auf.
Dann klippt er das auch, da stehen halt Texte dann da drinnen.
Die Texte würde er auch umbrechen, also das einzige wie du das Layout von der Seite ziemlich
kaputt machen kannst ist mit zu vielen Texten, da kommt er nicht mit klar.
Also was heißt so wirklich kaputt geht das Layout ja nicht, aber so ganz stimmen tut
es dann auch nicht mehr.
Guck
Es orientiert sich hier halt so am längsten
Schon was von Daisy UI gehört, ja
Das hab ich mir auch mal vor einer Weile angeguckt, das hat mir jetzt nicht so, nicht so, nicht so gefallen
Aber auch, guck mal hier wie
Wie agile das ist
Und sogar eine Fade-Out-Animation.
Also ganz, so ganz gut ist es nicht durchdacht hier mit den, aber funktioniert doch erstaunlich
gut hätte ich nicht gedacht.
Lasst mal nochmal schnell durchgucken, was haben die denn sonst noch so für Dinger?
Okay, Dogs, Themes, Colors, Theme Generator, Quickstart, Tailwind, Core hatten wir alles
schon.
Scrollbars, okay hatten wir keine, brauchen wir nicht, was ist das, Interactive Elements
on mobile will briefly show a focus style when touched.
Okay, Header, Paragraph, Links, Recroll, ich dachte wir kommen jetzt irgendwie bei Rick
Astley raus, Reformate Text, Code, Keyboard, Insert, oh guck mal, kannst sogar Diffs anzeigen
wenn du Bock hast.
Okay.
Ja, deswegen. Also was haben wir noch? Alerts haben wir noch? Okay.
Ah, eins könnten wir noch machen, ok, eine Idee habe ich noch, was wir noch machen könnten.
Wir brauchen noch eine Abfrage Leute, wir brauchen noch eine Abfrage, ob man das überhaupt löschen will, oder?
Du klickst, weil aktuell, aktuell klickst du auf löschen und es ist einfach weg.
Da sollte schon noch ein Popup kommen, wollen sie das überhaupt löschen?
Ja, ja, das, das sollen wir noch machen.
Sowas hier so, wollen sie, alert, wollen sie, löschen.
Oder die haben doch bestimmt auch ein Popup oder sowas.
Hier, Popup, jawoll, oder Model, genau, das wollen wir haben.
Genau, das hier, ja.
Wie funzt das jetzt?
gibt es gibt es ja irgendwie dann konfirmen ja genau so was hier das gut
ok
warum ist das typescript direkt
1ks
haben es kaputt gemacht leute
weil ich nicht weil ich nicht importiert haben
Okay.
Vollständige Textanzeigen, ja das wäre tatsächlich ganz sinnvoll.
Aber nicht jetzt.
Jetzt wird er erstmal gelöscht.
Please confirm.
Einfach nur confirm them.
I wish to proceed, yes, yes, no kann man dann sagen, okay.
Moment, aber... Moment, das müssen wir schon mal in eine Function
wrappen hier, irgendwie. ShowDialog oder sowas, ja.
So. Das heißt, wenn ich jetzt deletePasta mache,
wir schon haben dann war so rum dann will ich jetzt vorher fragen show
dialog ach komm warum machen wir das nicht einfach hier rein fertig
Okay, es geht einfach so zu, warum?
Ah, wahrscheinlich, weil ich das Element noch erst auf die Seite setzen muss, ja?
Und das muss auch auf die Layout-Seite, weil ansonsten ist es nicht oben drüber.
Ah ne, Moment, da ist es ja, cool.
Moment, der löscht trotzdem?
Achso, ich hab ja auch nix eingebaut, dass er das nicht machen sollte.
Ja, einer passt ja.
So, aber mal kurz für alle, bla bla bla, so Moment, das muss, das ist ja JavaScript,
das hier muss passieren im Response.
Und zwar hier drinnen.
Response, if, ja und jetzt das da, okay, cancel passiert nix, confirm ist weg, nice, okay
Das ist easy gewesen
Omega Lul
Cancel, okay
Nice
Es funzt
Okay, das war einfach. So, was haben die sonst noch so zu bieten?
Also, Alerts haben wir gerade schon gesehen.
Kann man halt vielleicht noch ein bisschen umstylen und so.
Eigentlich ganz schick gemacht.
Badges haben wir doch heute verwendet, ne?
Ne, Chips haben wir verwendet.
Was ist der Unterschied zwischen einem Badge und einem Chip?
Ach, für Filtering und sowas.
Vielleicht wären hier Badges schöner als Chips?
I can badge.
Ich werde an der Stelle tatsächlich...
Ähm...
Page?
Erstmal probieren.
Badge!
Ja!
Ich glaube, das gefällt mir an der Stelle besser.
Hier Chips und hier Batches. Ja, das sieht schicker aus, oder?
Ja, das ist okay. Lassen wir das mal so.
So, da haben wir so Breadcrumbs. Das ist für irgendwelche Navigationssachen oben an der Leiste, äh, oben an der Seite. Das brauchen wir nicht.
Buttons.
Hatten wir schon. Cards haben wir heute auch benutzt. Chips haben wir auch benutzt.
Lists. Ne, Lists haben wir heute nicht benutzt.
Wisst ihr auch nicht, wozu ihr jetzt dein Lisbon Logo klaut.
Für alle, die sich ihr eigenes Link-Tree bauen wollen.
Placeholders.
Okay, wenn man Sachen nachlädt, kann man hier irgendwie so animierte Plätze...
Also wenn man irgendwie nur über Edge mit dem Handy drin ist, dann ist das nicht verkehrt.
Äh, Tables.
Okay, Tables ist wahrscheinlich jetzt nicht so easy, weil Tables ist eine reine Tables-Sache in dem Fall hier, die kann man nicht sortieren und sowas.
Ach, wir haben noch mehr Tables.
Aber auch nicht sortierbar, ne?
Und sowas. Es ist keine komplette Data-Table-Implementierung.
Das macht aber auch nix, weil das braucht man eigentlich sehr selten.
Und wenn man es braucht, fand ich es immer besser, die Funktionen, die man gebraucht hat, selbst reinzuwurschteln, weil die fertigen Datatable-Components sind immer so, so wie man es halt nicht braucht.
Was haben sie sonst noch? Blocks, Chat, Chat-Gel.
Guck mal, die haben sogar eine komplett fertige Chat...
Nee, das ist einfach nur ein Beispiel, oder?
Das ist ein Beispiel, wie könnte man...
Oh, was ist denn das?
Gradient Headings. Poggers.
Das brauch ich.
Das brauch ich, Leute. Das muss in den Titel.
Der Copypasta-Champ ist noch nicht bunt genug.
Hier.
Da.
Jawoll.
Copypasta-Champ.
Exzellent, viel besser gleich. Jetzt ist einfach die Top-Anwendung des Jahrhunderts.
Jetzt noch den Titel animieren. Moment, wie ging das? Man konnte doch früher...
Warte mal, HTML...
Das ging doch.
Weiß nicht ob es das noch gibt
Das ist bestimmt deprecated oder
Nee das gibt es nicht mehr
Das ist deprecated
Aber es geht noch aber es geht noch
Ups
Perfekt, oder?
Jetzt sieht es ein bisschen nach 1998 aus.
Das lasse ich jetzt drinne.
So ist es gut.
Ja, aber das sagt, dass es deprecated ist.
Avoid elements wie avoid, disable.
Nervt jetzt nicht rum, das ist das Beste.
So dann haben wir noch Akkordeons haben sie noch, wenn man sie denn mal braucht hier so.
Appbar haben wir ausprobiert, Apprail haben wir nicht gebraucht, Appsharman, Autocomplete
haben sie auch noch.
Oh, das ist so eine Liste. Okay, naja, das braucht man manchmal, aber...
Ja, das ist bestimmt auch ganz praktisch.
Avatare kann man direkt anzeigen lassen, wenn man Bilder hat. Okay.
Avatar... Rounded...
Aber das unterstützt auch direkt Initialien anzeigen, das ist ja sehr beliebt, wenn jemand
noch kein Avatar hinterlegt hat oder kein Profilbild, dass dann die Kürzel angezeigt
werden.
Autocomplete in der Suche nach existierenden Tags, das ist eine sehr gute Idee, da bin
Das kriege ich aber heute nach dreieinhalb Stunden streamen dabei gebacken.
Interactive Border.
Aha.
Konig Gradients.
Da kann man Charts bauen.
Naja gut, also das
würde ich...
Das ist praktisch. Spin. Das braucht man immer mal. Eine Runde Cocker-Spin. Aber sowas, Spinner
sind immer praktisch. Es sollte ja sich eigentlich relativ einfach machen lassen. Guckt mal.
Also mal angenommen, ich will jetzt einen Spinner.
Das sagen wir einfach
Icon
Circle, irgendwie sowas.
Hier, Circle.
Na gut, das
im Circle funktioniert.
Irgendwie Icon
Square. Oh hier,
das ist perfekt, das brauchen wir jetzt.
Und jetzt kann ich einfach sagen, Class Spin.
Ok, das geht nicht.
Okay, ne das ist...
Aber das geht mit Tailwind an sich, das weiß ich, dass das prinzipiell funktioniert.
Class, Animate, Spin, so ging das, gell?
Genau.
Jetzt macht der mal einfach ne Runde Koggers, der Arrow.

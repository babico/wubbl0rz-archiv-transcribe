So, ich muss noch mal kurz dringend
Pipo-Pipo-White-Toilet-Zoom machen und ich glaube ich muss noch die
Bitrate umstellen. Ne, muss ich nicht.
Habe ich anscheinend schon gemacht.
Ja, Chat-Gil, wer ist denn schon da?
Ne, nicht so viele. Wobei, wir haben sich alle gedacht, muss ich ja nicht chatten, wenn der Kerl eh nicht da ist.
Also ich war jetzt 6 Minuten 16 weg, das bedeutet ich bin 5 Minuten wieder da, war ja relativ zutreffend.
Die üblichen Verdächtigen sind wieder am Start hier, ich sehe es schon.
Hack-Javascript, so sieht es aus.
Extremely-Hack.js
Gibt es, gibt es eigentlich Hack.js? Hat das irgendjemand schon programmiert?
Ich, ich würde fast sagen, gibt es noch nicht. Das ist aber sehr
Merkwürdig, warum ist kein... Moment, müssen wir mal bei NPM kurz gucken.
Hack.js
Wie jetzt?
Es ist noch niemand
auf dieser Welt auf die Idee gekommen, etwas Hack.js zu nennen.
Gibt es Hack?
NPM-Hack?
Schreck.js?
What?
Gibt es nicht, ne?
Gibt es Hack.w?
Hack.w-Package, okay.
Gibt es Hack.w.js?
Wir sollen es ja nicht so laut sagen.
Nicht, dass Google auf die Idee kommt,
dass man demnächst .js als
Top-Level-Domain irgendwie sich registrieren kann.
Bei Google ist das alles möglich.
NPM ist auch geil, oder?
Coreltraw Serial Number.
Keck, weh.
Ich meine, es wird aktuell
extrem viel Bullshit veröffentlicht
auf NPM.
Es gibt auf NPM auch total viele Packages,
die published werden.
So nach dem Motto,
neuste Movies hier download und sowas.
Aber ich meine ernsthaft,
gibt es eigentlich Coreltraw überhaupt noch?
Anscheinend.
Benutzt das irgendjemand?
Ich meine,
Jahresplan.
Gibt es noch Software ohne Abo?
Schulen nutzen das, okay.
Aber wenn ich was Kompliziertes haben will,
dann kann ich auch gleich Photoshop benutzen.
Oder macht es wie ich den Affinity Designer.
Das ist viel billiger.
Oh, die Musik ist ein bisschen laut.
Das ist viel billiger.
Und einfacher zu bedienen für Noobs wie mich.
Mir ist heute aufgefallen,
dass ich meinen Gamertag als
echten Namen angegeben habe bei Google.
Ja und?
Achso, ja das ist nicht weiter, Willis.
Du schreibst dir deinen Namen dann wahrscheinlich unten in die E-Mail rein.
Das finde ich nicht schlimm.
Ich glaube, ich heiße auch
beim, na gut, kann ich jetzt nicht sagen,
aber ich heiße auch bei
vielen E-Mail-Services random.
Nee, also
Win-Lehrzeichen-Zip wäre auch mal ein geiler Name.
Oder Vorname Win-Nachnamen-Zip.
Da, gut, danke schön für den Sub.
Um was es geht, hat irgendjemand gerade gefragt.
Hier, da.
Sorry, ich bin jetzt erst eingestiegen.
Worum geht es heute? Was ist das Ziel?
Also, du hast nichts verpasst, weil
das Stream ist seit 9 Minuten 50 online.
Und davon war ich 6 Minuten auf dem Klo.
Also,
du hast absolut gar nichts
verpasst.
Wir haben noch nicht mal angefangen.
Ich muss erst mal meine VM überhaupt updaten.
Avalonia, nee.
Also ja, ich habe Avalonia immer mal wieder
kurz ausprobiert, aber nie was wirklich ernsthaftes
oder auch nur Demo-Application
mäßig was mitgemacht. Nee, nee, nee.
Habe ich nicht.
Aber von allen UI-Frameworks, die es so
auch für .NET gibt,
sagt mir das trotzdem am meisten zu.
Ja. Ich habe noch keine Kinder und ich
weiß auch nicht,
ob ich da jemals Bock drauf
habe.
Wobei, wir hatten das Thema ja schon öfters im Stream.
Viele Leute sagen immer, ja Max, mach dir mal nicht
so viele Gedanken. Wenn es dann soweit ist, dann findest du es doch
ganz toll. Ich habe da meine Zweifel.
Gut, aber ich meine, dazu fehlt mir
auch die Voraussetzung. Man bräuchte ja auch jemanden,
mit der man Kinder bekommen möchte. Also,
sonst funktioniert das ganz ja nicht.
Also,
alleine wird das ja noch nichts. Ich bin zwar
super fett, aber das klappt
noch nicht.
Weil so fett bin ich gar nicht mehr.
Seit 2 Jahren.
Ich bin jetzt eigentlich
nur noch normal fett.
Also, vor ungefähr 2 Jahren
habe ich ungefähr
108,5 Kilo gewogen.
Jetzt wiege ich nur noch so 91.
Abnehmstells.
So, wir machen mal kurz Update.
Okay, also.
Pac-Man geupdatet.
Visual Studio updaten. Das ist gut.
Also Visual Studio Code updaten.
Wir brauchen heute auf jeden Fall ein aktuelles
Visual Studio Code, weil
Heck W Frontend.
Brauchen wir
irgendwelche JetBrains-Geschichten?
Welches ZSH-Theme ist das?
Das zeige ich dir gleich.
Mal kurz hier die Updates
anschmeißen.
Da gibt es nur eins. Welches ZSH-
Theme ist das? Das ist
Starship RS.
RS.
Also der Prompt ist
Starship.
Und ich habe das Ganze ein wenig customised.
Und als Basis habe
ich
nehme ich mal irgendwie
so ein Beispiel.
Nehme ich mal ein Beispiel für die Prompts, die dabei sind.
Anscheinend nicht.
Zumindest
ich habe einen Prompt,
der hier dabei war.
Ach hier Presets
steht es doch. Ich habe einen Prompt, der
hier dabei war, genommen als Basis.
Nämlich
ich glaube das da. Das habe ich
als Basis genommen. Aber das ist nicht der
Prompt 1 zu 1. Ich habe da noch ein paar Sachen
customised. Das habe ich
als Basis genommen und dann habe ich
das customised.
Wenn du meine Config haben willst,
kannst du bei mir auf GitHub gehen
und dann gehst du hier auf mein
.file-Repo und
dann nach
Config-Starship
und da ist das
alles drin. Also ich habe beispielsweise
für .net noch Sachen angepasst.
Hier drinnen sieht man auch
wenn man jetzt hier irgendwie Repos
gehen wir mal hier rein.
Also wenn man in
ein .net-Repo
geht, bekommt man hier auch angezeigt
welche Target-Version das Projekt hat,
welche .net-Version man installiert hat.
Lokal, was sehe ich auf der Kiste.
Man sieht die ganzen Git-Geschichten
mit den passenden Icons zu dem jeweiligen
Icon-Font, den ich habe.
Ich habe es allgemein noch ein bisschen angepasst.
Ich habe da einen zweizeiligen Prompt
draus gemacht, wie du vielleicht siehst.
Was der mitbringt ist ein einzeiliger Prompt
und wenn man sich überlegt, der Prompt geht schon bis hier hin,
da könnte ich ja nur noch hier tippen. Das wäre ja für den Arsch.
Ich mag
zweizeilige Prompts, deswegen habe ich
einen zweizeiligen Prompt draus gemacht und ich habe
den Kontrast ein bisschen angepasst.
Also wenn du es genau wissen willst, hier ist meine Config
dafür.
So sieht das so aus.
Was macht Max? Gar nichts. Noch gar nichts.
Überhaupt nichts. Ich habe gerade meine
VM geupdatet
und ich hoffe, das war jetzt alles durch.
Jetzt reboote ich
erstmal meine VM.
Dann können wir anfangen.
Und dann zeige ich euch, während die VM rebootet.
Was soll das da?
Während die VM rebootet, als würde die jetzt so wahnsinnig lange
rebooten. Die rebootet 10 Sekunden oder so.
Dann ist die wieder da.
Noch mache ich doch gar nichts.
Mit 21 oder was? Aber sehr schnell.
Ne.
Ich mag
Rider und die ganzen Chat Brains Produkte.
Allerdings für
Frontend Sachen mag ich tatsächlich lieber
Visual Studio Code als WebStorm.
Weiß nicht, was sagt ihr, Chat Gil?
WebStorm oder VS Code?
Komm, wir machen mal eine Umfrage.
Wir machen mal eine Umfrage. Warte mal.
WebStorm
versus VS Code.
WebStorm
VS Code
Beide. Probieren wir mal aus.
Kein Geld für IntelliJ.
Also IntelliJ selber ist, glaube ich, sogar kostenlos.
Ich glaube,
IntelliJ ist kostenlos.
Pie Charm
Community Edition ist kostenlos.
Ich glaube, das war es, was die kostenloses
haben. Aber auf der anderen
Seite muss ich sagen, ich habe mir ja vor einer Weile
Ja,
wir können, okay.
Ich meine, du kannst hier maximal 5 Dinge eintragen.
Ich könnte jetzt noch Notepad++
eintragen.
Gibt es genug, Leute. Ohne Scheiß, Leute. Ich bin immer wieder überrascht,
wie viele auch bei mir auf der Arbeit
mit Notepad++ romantieren.
Nano.
Leute, ich hatte
vor ein paar Tagen ein Call
mit einem externen Dienstleister.
Also, wir hatten einen externen Dienstleister,
der Software für uns bereitstellt.
Wir hatten irgendeinen zugekauften Konsultant aus,
frag mich nicht, Mexiko oder so.
Und ich,
und da haben wir da gesessen und
ohne Scheiß, das war das schlimmste Meeting
aller Zeiten. Wir haben
dem Konsultant aus Mexiko zugeguckt,
wie er über eine
Zytrix Session in MobaXterm
mit Nano Sachen copy-pasted
hat, die ihm der
Dienstleister, der für uns die Software entwickelt
hat, gesagt hat. Leute,
das war so unglaublich langsam.
Das kann man sich überhaupt nicht vorstellen.
Das war wirklich so.
Let me check.
Oh, Moment.
Ich habe mich vertippt.
So, in dem Tempo ging das.
Drei Stunden. Drei Stunden lang.
Müsst ihr euch mal vorstellen. So schnell ging
das. Drei Stunden lang.
Und dann hat er sich zwischenzeitlich
noch vercopy-pasted. Ich bin froh, dass der das gemacht hat.
Ich hätte keinen Bock, meinen Desktop
die ganze Zeit zu scheren. Drei Stunden ging
das so. Und dann noch
mit der Tippverzögerung
über eine Zytrix Session.
Ganz schlimm. Ganz schlimm.
Das war wirklich eines der abartigsten Termine
ever, die ich je hatte.
Sehe ich auch so. Also, es gibt
ja genug Leute, die mittlerweile Nano...
äh, nicht Nano-Vim.
Moment, meine Lautstärke ist falsch.
Jetzt ist die Musik zu laut.
Sekunde. Muss man wieder einstellen.
Ja.
Die haben Neo-Vim.
So, jetzt passt meine Lautstärke.
Es gibt ja Leute, die haben ihren Neo-Vim
so krass aufgebohrt, dass das
mittlerweile wirklich schon
IDE-Features
in Massen hat. Von automatischem
Code-Completion über irgendwelche
Language-Server
mit Fuzzy Search und hast du nicht gesehen.
Also, du kannst Vim extrem aufbohren.
Ich persönlich bin da kein Fan
mehr von. Ich hab das ja früher gerne gemacht.
Ich hatte ja früher auch mein Vim aufgebohrt bis zu sonst was.
Aber ich mach das nicht mehr, weil...
Also, mein Hauptgrund, warum ich eigentlich
kein Vim mehr so extrem
bloated verwende, ist
naja, ich benutze Vim nur noch zum kurzen
Editieren auf der Kommandozeile
und wenn ich Vim bei mir zu customised habe,
dann komm ich mit dem nicht mehr klar,
wenn ich per SSH auf dem Server verbunden bin
und
da was editieren muss.
Und deswegen bin ich dazu übergegangen
Vim tatsächlich, oder
Neo-Vim, das ist ja eigentlich egal, welcher das ist,
mehr oder weniger RAW zu verwenden
mit ziemlich kleinen Anpassungen.
Ich hab echt nicht viel hier in meiner Vim-Config.
Da ist eigentlich nichts großartig drin.
Da ist hier
Shift-Einrückungen sind drin.
Die Maus muss ausgeschaltet werden. Leute, das ist das Wichtigste,
was ihr in Vim machen müsst. Vim mit
Maus-Support ist echt abfuck.
Du kannst überhaupt nicht copy-pasten
und selecten richtig. Ich weiß, eigentlich soll da
Maus-Support einem im Vim helfen
zu copy-pasten und selecten, aber das
funktioniert für mich nicht richtig. Ich selekte lieber im Terminal.
Ja, sonntags an
Ando und Swap, also Ando eingeschaltet,
Swap-Pfeil ausgeschaltet
und ansonsten, ich merke
mir, wo ich zuletzt gewesen bin, im Pfeil
und ich
change den Cursor, wenn ich in Insert-Mode
gehe. Guck hier, wenn ich Insert-Mode gehe,
hab ich den Balken, ansonsten hab ich hier den normalen Cursor.
Und das war's. Also
mehr hab ich ja in meiner Vim-Config nicht
gemacht. 43 Zeilen und da sind auch viele Kommentare
noch drin. Also, nö.
Sagen wir mal hier, lass
es 35 Zeilen sein, Vim-Config.
Das ist im Vergleich zu früher wenig.
Früher hatte ich was weiß ich, 5000 Zeilen oder so.
War ein Riesending. Wie viele
Tabs hast du offen? Weißt du, ich kann's jetzt zählen
mal.
Hier. Ich würd mal so auf 140
oder so tippen oder so.
Weiß nicht, wie viele das wirklich sind.
Das, das finde ich, ist
eh so ein Scheinargument.
Du magst mit Vim, das sind die gleichen Leute, die
sagen, immer alle
immer alle Finger
auf der Home-Row und solche
Geschichten. Ich bin der Meinung,
das ist so ein Scheinargument, weil
die meiste Zeit in einem Texteditor
verbringt man ja nicht wirklich mit
Texteditieren. Also sagen wir mal so,
mit dem Texteditor, wenn du was schreibst, vielleicht schon, aber
wenn du was programmierst,
verbringst du die meiste Zeit in deinem Editor
oder deiner IDE ja nicht so sehr
mit Tippen, sondern mit
Überlegen.
Ausprobieren, sagen wir mal.
Und im Internet gucken,
wie es denn jetzt eigentlich geht,
beziehungsweise, was es für Funktionen
gibt, die Hilfe-Seiten sich angucken und
sonst was in der Richtung. Also,
ich würd sagen, 50% der Zeit, wo man
programmiert, oder sagen wir mal mindestens
40% der Zeit, wo man programmiert, ist man nicht wirklich
am Tippen. 50, 50, 50
vielleicht. Das heißt, insofern
macht das eigentlich keinen großen Unterschied
und
da ist ein bisschen Maus-Bedienung gar nicht verkehrt,
weil seinen Browser, in dem man
eigentlich die anderen 50% der Zeit verbringt,
lässt sich eben nur gescheit
mit
der Maus bedienen.
Ich weiß, es gibt Browser-Extensions,
da kannst du navigieren mit
Tastatur. Ich hab das auch, wie gesagt,
ich war immer so Hardcore-Vim-Jünger
früher. Ich hatte sogar
Extensions in meinem Browser, da ich den Browser
per Tastatur steuern kann und sowas.
Im Endeffekt geht das
bis zu einem gewissen Teil. Also, was zum Beispiel
ganz nice ist, was es gibt,
es gibt Browser-Extensions, ja, wenn wir
jetzt mal hier irgendwie auf Google gehen und suchen, wo
Blorts, da gibt es Extensions,
da klickst du dann zum Beispiel, drückst
dann auf deiner Tastatur zum Beispiel F
und dann schreibt
er dir an jedem Link in Buchstaben hin und wenn
du Buchstaben drückst, springst du automatisch zu
dem Link. Das ist tatsächlich ganz gut,
aber das hört dann relativ schnell
auf, wenn man dann so auf solche Menüs
klicken muss und hier Einträge auswählen muss und sowas.
Das geht, man muss sagen, ein aktueller
Browser und viele Webseiten sind halt einfach
aus Bedienung ausgelegt.
Und dementsprechend, nachdem man eh 50-50
macht, 50% im Browser,
50% vielleicht in seinem Editor,
ja, also
ich halte da nix von. Das soll im Endeffekt
natürlich jeder machen, was er will.
Leute, die Hardcore auf Wim schwören, sollen das
ruhig machen. Ich bin da ein bisschen weg von.
Ich benutze
mittlerweile zum größten Teil die Kombination
VS Code für Frontend-Geschichten
und manche andere Sachen,
dann JetBrains-IDEs, wo es halt
welche gibt und für
Kommando-Zeilen
editieren, wenn es schnell gehen muss.
Sowohl lokal als auch remote in Wim.
Fertig.
Im Endeffekt
dauert
das ne Zeit. Und zwar,
man muss erst ein paar Sachen ausprobieren.
Das ist ein bisschen laut, auf einmal.
Bisschen leise, die können sich wieder nicht
entscheiden.
Ja,
genau, was ich sagen wollte, im Endeffekt dauert
das schon seine Zeit, weil man muss
erst mal ein paar Sachen ausprobieren.
Du musst erst mal ein bisschen
Wim ausprobieren. Manche Leute
bleiben auch irgendwie auf Nano hängen, manche
auf Emacs, manche Visual Studio
Code für alles, manche benutzen
sogar Windows mit dem originalen
Visual Studio oder sowas. Es gibt ja alles mögliche.
Man muss erst ein paar Sachen
umprobieren und das braucht seine Zeit,
bis man weg ist von dem
ich gucke mir jetzt auf Reddit an,
was die coolen Leute verwenden. Ich gucke mir auf YouTube an,
was die coolen Leute verwenden. Es spricht überhaupt nichts
dagegen, sich Inspiration zu holen aus irgendwelchen
Videos. So nach dem Motto, oh, das ist ja ein cooles Plugin,
das habe ich noch nicht gesehen bis jetzt.
Aber im Endeffekt muss man, wenn man dann so
ein paar Jahre ausprobiert hat, was es so alles
gibt, dann findet man irgendwann
sowas, was einem persönlich am besten
gefällt. Bei mir ist halt die Kombination
Visual Studio Code für Frontend
Geschichten und beispielsweise Platform
IO, Microcontroller Sachen,
JetBrains IDE ist für alles andere und wenn ich
auf der Kommandoszeile was editieren will,
bin ich schnell in Vim aufgemacht und das Datei
editiert und wieder gespeichert. Sowohl lokal als auch
remote. Das ist die Kombination, wo ich
festgestellt habe, was für mich am besten funktioniert.
Ich habe alles mögliche durch. Ich habe Vim
aufgebaut bis zum Gehtnichtmehr. Ich habe auch
eine Weile Emacs customised und sonstige
Geschichten. Das ist das, was für mich
am besten funktioniert.
Es ist nicht unbedingt sinnvoll immer alles, was man
denkt auch einzutippen.
Du hast die perfekte Domain für meine GitHub-Seite
keckw.app. Ja, aber
die ist wahrscheinlich noch nicht, die ist bestimmt
belegt. Ja, die Leute
zu irgendwas zwingen, finde ich nicht
sinnvoll. Also, bei unseren Azubis
habe ich es auch immer gemacht. Ich habe denen gesagt, Alter, hör mal
auf Nano zu verwenden, benutzt mal Vim.
Einfach, dass man sich da ein bisschen dran tastet.
Vim hat tatsächlich ein paar Vorteile
und die sind nicht so sehr, also, ja
sicherlich auch in der Bedienung, aber das ist
nicht das, was ich meine. Der Vorteil
von Vim ist tatsächlich oder vielleicht
auch, weil man ein bisschen Vim kann und dementsprechend
auch ein bisschen VI bedienen kann, so
in der Ursprungsvariante. Du hast
auf jedem Gerät
hast du einen VI drauf.
Zumindest mal einen VI. Ich glaube sogar auf
Cisco-Switchen hast du einen VI drauf. Du hast auf
allem hast du irgendwie einen Vim oder einen VI
drauf, wo du editieren kannst. Also
ein bisschen VI-Bedienung ist nicht verkehrt.
Zumindest, dass man mal weiß, wie man
eine Datei speichert und wie man
wie man den
Editor wieder schließt. Was geht? Heute
gibt's, ich habe noch gar nicht erzählt, was wir heute
machen. Ich wollte eigentlich gerade meine VM neu
starten und bin ein wenig sidetracked
worden. Du kennst das ja schon.
Schon mal JetBrains WebStorm getestet.
Tatsächlich, wir haben uns im Stream schon vor einer
ganzen Weile mal WebStorm angeguckt
und ich muss ehrlich sagen, ich habe damals
auf die Schnelle, wir haben das nur 2-3 Stunden
ausprobiert, ich habe auf die Schnelle
nicht den riesen Vorteil erkannt
versus Visual Studio Code.
Also man konnte das gut benutzen, gerade weil
ich auch alle anderen JetBrains
Ideen gerne benutze. Ging da schon.
Aber ansonsten hätte ich jetzt
gesagt, ich habe nicht den
ganzen Vorteil erkannt.
Ich finde es übergangsweise nicht verkehrt,
dass man sich mal ein bisschen dran gewöhnt und das lernt,
aber den Leuten
dann vorzuschreiben, was sie wirklich benutzen
sollen unterm Strich, wenn es darum geht,
dass sie halt auch irgendwo,
spätestens wenn du selbst dafür
verantwortlich bist, was bei deiner Arbeit rauskommt,
dann sollte man die Leute auch benutzen
lassen, was sie wollen. Und wenn das einer
in Nano machen will, meinetwegen soll er es
in Nano machen. Ich kann es zwar nicht
verstehen, wie irgendjemand Nano benutzen
kann den ganzen Tag, aber
mag es geben. Gut, ich
weiß, warum die Leute Nano benutzen. Wisst ihr, warum
die Leute Nano benutzen? Wegen Notepad.
Weil die Leute, oder halt nicht zwangsläufig
wegen Notepad, aber wegen
dieser
Philosophie von Notepad ein bisschen.
Du hast halt einfach
nur einen Input-Mode, du kannst
Text eingeben, du kannst mit deinen
Pfeiltasten navigieren und das
war's. Du kannst mit Shortcuts speichern und fertig.
Das ist für die
Leute viel
mehr, also
viel einsteigerfreundlicher für viele
aufzumachen. Ich kenne
den Mouse-Support von Nano nicht, weil ich habe ihn alle
Mouse-Support aus.
Nein, Fleet habe ich mir nicht
angeguckt.
Aus dem gleichen Grund,
was du hier schreibst, und es kann sogar
sein, dass wir es mal kurz installiert haben.
Der Charme von Visual Studio
Code ist ja tatsächlich, dass es viele Plugins gibt.
Bei den Chatbrains-IDEs brauchst
du nicht so viele Plugins, die sind halt genau schon
gut dafür, wofür die jeweilige IDE da ist.
Aber Visual Studio Code wäre ohne Plugins
auch ziemlich Müll.
Laggt das?
Meines Vodafone-Stells?
Nee, nichts getroppt. Wenn schon, laggt's bei dir.
Ja, und
also
ob die da jemals hinkommen, ich weiß
nicht. Ich meine, Chatbrains hat ja in jedem
überall so ihre Finger
drin. Ich meine, die haben eine eigene
Programmiersprache, die haben tausend
IDEs, die haben einen eigenen Font,
die haben so einen eigenen Code-Share-Service,
die versuchen sich in allem
irgendwie mal und
dementsprechend wundert's mich nicht, dass die sowas auch
bauen wollen, wie Visual Studio Code.
Ich muss sagen, das meiste Zeug von Chatbrains
ist nicht schlecht, aber man muss jetzt auch
nicht zwangsläufig alles benutzen, nur weil's von Chatbrains
kommt. Beispielsweise, was ich überhaupt nicht mag
von denen, ist den Font,
der standardmäßig eingestellt ist oder mitkommt.
Also Chatbrains Mono ist
echt nicht mein Fall.
Ich mag halt auch diese...
Wie nennt sich das? Diese Sonderzeichen
in Programmierfonts.
Also es gibt ja Programmierfonts mit Sonderzeichen.
Da schreibst du dann zum Beispiel nicht kleiner gleich,
sondern da gibt's dann ein eigenes Zeichen für.
Liguren.
Das hört sich an wie irgendwelche
komischen Affen im
Regenwald
oder so.
Ja, das mag ich nicht.
Also ich mag sowas lieber
als...
Ich hab die meisten Fonts mir
zumindest schon mal angeschaut. Also nicht selbst installiert,
sondern die... Also kenn ich vom Namen her.
Ich hab mir die meisten dieser Fonts
zumindest schon mal auf den Seiten angeguckt. Aber ganz ehrlich,
ich bin seit Jahren
ich bin seit Jahren
hier drauf hängen geblieben.
Auf diesem Font.
Auf diesem Font
bin ich hängen geblieben.
Und das ist
Hack. Wow.
Das ist Hack.
Hack-Font.
GitHub-Hack-Font.
Ja.
Der hier.
Und den hab ich nahezu überall.
Den hab ich immer im Editor,
den hab ich im Terminal.
Chat, habt ihr den Sound auch gerade gehört?
Es hat grad so...
so ein komisches Geräusch. Was war das?
Ah, vielleicht ist die Katze an der Tür.
Kann sein.
Wenn ihr das nicht gehört habt, dann ist die Katze vielleicht
an der Tür.
Ja.
Okay, also.
Denk Mono.
Nee, den kenn ich glaub ich noch nicht.
Denk Mono.
Okay, ein Font, der was kostet.
Naja, warum nicht? Wenn er gut ist.
Denk...
Zulul.
Ich würd fast sagen,
der hat die gleiche Basis wie Hack.
Auf was basiert der?
Der ist nicht bestimmt komplett vom Scratch.
Der basiert bestimmt auf dem gleichen...
Okay.
Der wird auch gar nicht mehr verkauft.
Was für ein Ding.
Boah.
Ja, damit kann man doch nicht
programmieren. Da kriegt man doch Anfälle,
wenn die Sachen so pixellig sind.
Minecraft Font, ja.
Naja.
Also, da zeig ich euch mal, was wir heute machen.
Ich muss grad mal bei mir drüben
mein
lokales
Git-Repo aufmachen, weil ich hab mir schon
ein paar Sachen angeguckt, wo ich spicken kann
gleich. Also nicht
die volle Anwendung oder sowas, aber so ein paar
Sachen. Hab ich mir ein paar Notes
aufgeschrieben, dass ich nicht vergesse, da dran
zu denken.
Und so ein paar Snippets.
Wo ist es denn hier? Ah, da.
So. Also.
Jetzt erzähl ich euch mal, was wir heute machen.
Und zwar, wir bauen heute eine Demo-Anwendung.
Also, wahrscheinlich wird das auch nicht komplett
fertig. Wir bauen heute eine Demo-Anwendung
und zwar mit SvelteKit.
Da kam jetzt nämlich
erst vor
nicht allzu langer
Zeit Version 1.0
raus. Wir haben schon öfters
mal im Stream
Darf ich das zeigen?
Wir hatten
schon öfters mal...
Ja, wenn ich das richtig schreiben würde.
Tatsächlich, guck mal, wir haben schon öfters
mal
versucht, mit SvelteKit ein paar Dinger
zu bauen.
Beziehungsweise
rumgebastelt.
Aber damals war SvelteKit
noch experimental und ich
kenne beispielsweise auch noch nicht die neue
Feilstruktur.
Ich kenne nur die Beta-Feilstruktur.
Da hat sich ein bisschen was geändert.
So. Und da
kam SvelteKit 1.0
kam vor nicht
allzu langer Zeit raus. Ja, guck mal.
Ende letzten Jahres.
Aktuell sind sie, glaube ich, bei Version
1.2
und die releasen tatsächlich relativ
regelmäßig. Der Vorteil
jetzt im Vergleich zu unseren alten Streams
ist, die haben jetzt
das erklärte Ziel, halbwegs
abwärtskompatibel zu bleiben.
Es hat geklingelt.
So.
Ich bin wieder am Start.
Also, gerade die Poster.
Ähm.
Wo bin ich jetzt stehen geblieben? Chat.
Chat-Game. Wo bin ich stehen geblieben?
Irgendwas über SvelteKit, glaube ich, erzählt.
Ich weiß noch, wie du damals
Ruby auf YouTube empfohlen
hast. Jetzt wird hier gewebt.
Ich hab mal Ruby empfohlen. Ich mein, Ruby ist eine super Sprache.
Leider ein bisschen
so aus der Mode gekommen.
Da Ruby on Rails halt
nicht mehr angesagt ist.
Mein Ruby gab's
schon vor Ruby on Rails.
Aber
der richtige Durchbruch, wo jeder
Ruby programmieren wollte, war halt zu Ruby on Rails
Zeiten.
Das waren die Zeiten, wo Leute sich als
Rockstar-Developer
bezeichnet haben.
So, ich bin
stehen geblieben in SvelteKit.
Genau.
Also, wie gesagt, Ende letzten
Jahres kam SvelteKit 1 raus.
Und jetzt gibt es, glaube ich,
1.2.
Demnächst gibt's auch Svelte4.
Das hab ich auch gelesen. Da hab ich letztens
ein Webcast oder so
ein Wort geguckt von
Rich... Wie heißt der Typ?
Rich Harris? Kann das sein?
Der Erfinder.
Der hat irgendwas erzählt
zu neuen Sündags-Geschichten und
Switch-Statements und solchen Geschichten in Svelte4.
Bin ich mal gespannt,
was da rauskommt.
So, und...
Was mich tatsächlich inspiriert hat,
heute mal wieder ein bisschen Kack JavaScript zu machen, ist folgendes.
Wir haben ja schon ein paar Sachen
in Svelte gemacht. Also das erste, was ich mir angucken wollte,
ist tatsächlich mal wieder
die Einser-Version von SvelteKit.
Und ich hab was anderes gefunden. Da hab ich ein Video zugesehen.
Skeleton UI.
Das ist ein
Frontend...
Wie nennt man das?
Ein UI-Toolkit für Svelte und SvelteKit.
Warum nicht TypeScript?
Das eine hat doch mit dem anderen gar nichts zu tun.
Du kannst das mit
JavaScript und TypeScript verwenden.
Oder meinst du, warum wir als Emote nicht
Kack TypeScript haben?
Ich glaub sogar, dass die
offiziellen Docs von Svelte mittlerweile
in TypeScript sind.
Wir machen aber heute kein TypeScript, tatsächlich.
Wir machen heute wirklich plain
JavaScript.
Genau, und da hab ich letztens ein Video zugesehen
und ich dachte mir,
warum in Svelte.js?
Das ist doch
egal, wie das heißt. Du kannst das in JavaScript
und in TypeScript programmieren.
Du meinst, warum sie es nicht Svelte.ts
genannt haben? Naja, wahrscheinlich, weil
JavaScript immer noch das Bekanntere ist.
Und
unterm Strich ist ja egal,
dein Browser führt eh nur JavaScript aus.
Bin mal gespannt,
ob Microsoft irgendwann mal in Edge
direkten TypeScript Support einbaut.
Macht aber eigentlich relativ wenig Sinn.
So. Also.
Warum ich es jetzt mit JavaScript
anstatt TypeScript
benutzen will?
Weil es wirklich extra Aufwand ist, TypeScript zu benutzen
und für so kleine Sachen, das hat sich eigentlich
gar nicht lohnt. Zumal ich auch nicht der krasse
TypeScript Checker bin.
Deswegen. Heute machen wir wirklich ganz normales
JavaScript ohne irgendwelche Sperenzien.
Genau. Und ich hab diese UI
Library gefunden, die angeblich
voll angesagt ist in der Svelte
Community aktuell. Hat aber
nur 2,7 Sterne.
2700 Sterne, das ist gar nicht mal so viel.
Aber was ich mir auf den ersten Blick
angeguckt hab, fand ich
nicht wirklich nice.
Erstmal
haben die standardmäßig schon ein paar
Themes, die finde ich ganz okay aussehen.
Also.
Erstmal. Die haben
jedes Theme in Dark und Light
Mode.
Und die Themes sehen tatsächlich auch
ganz okay aus.
Guck mal hier. Das sieht okay aus, wenn man
auf so Material Design Zeug steht.
Das hier sieht...
Das könnte ich mir zum Beispiel gut vorstellen
für irgendeine Apidog-Seite
oder sowas. Das sieht auch ganz
okay aus. Wie gesagt, alles in
Dark und Light. Sieht beides auch ganz hübsch aus.
Seafoam. Na gut, das ist jetzt eher nicht so
meins. Aber gut.
Vintage.
Sahara. Na, das ist auch
nicht so meins. Hamlin...
Was zum Teufel? Hamlin
Digo. Weiß nicht,
was das sein soll.
Gold Crimson. Also
ich finde die Standard-Themes sind schon mal ganz nett.
Wir werden heute... Was nehmen wir denn heute mal?
Komm, Modern. Modern.
Wir machen heute mal ein bisschen zu oft Material Design.
Ja.
Und wie gesagt, das Ganze in Dark und Light,
das fand ich ganz gut. Und was ich halt
auch nice fand, was mich da überzeugt hat,
warum ich das halt mal ausprobieren wollte,
dass das gar nicht so sehr
Magic
im Hintergrund macht, sondern sich
zum größten Teil über Tailoring-Klassen
stylen lässt.
Und dass relativ viele Sachen
eingebaut sind. Du hast so Sachen wie Buttons
drinnen zum Beispiel.
Die brauchst du ja immer.
Du hast irgendwelche Alert-Sachen.
Du hast Cards, dass die gescheit aussehen.
Du hast irgendwelche Placeholder,
die du beim Laden anzeigen kannst.
Sogar mit und
ohne Animation.
Du hast Switches.
Du hast Tabellen.
Hamburger-Dings.
Sidebars und sowas.
Also es gibt viele solche UI-Frameworks.
Es gibt eigentlich tausende von.
Und gerade auch für React und sowas gibt es ja da auch
Milliarden gefühlt.
Aber das macht tatsächlich einen ganz guten Eindruck.
Zumal es das auch schon eine Weile gibt und das weiterhin
supportet wird. Und ich finde,
mir gefällt die Kombination ganz gut.
Dass die Dinge out of the box ganz gut gestylt
kommen, aber man die ziemlich easy umstylen
kann.
Und es auch unter Heavy Development
ist. Und dass es nicht
so abgedreht ist
mit 30 Milliarden Komponenten, wo
keiner checkt, wie man das benutzt.
Ich hab zum Beispiel früher mal ein bisschen das hier benutzt,
als ich noch ein paar Sachen in Vue gemacht hab.
Zum Beispiel das hier benutzt.
Leute, das ist eine Wissenschaft für sich,
hier durchzuplicken.
Wie man in
in Viewtify irgendwas macht.
Ja, die haben.
Dafür haben die auch mehr Components.
Aber zum Beispiel, wenn man sich mal nur hier
die Tabelle anguckt,
vom Source-Code.
Das ist jetzt tatsächlich überschaubarer.
Also Vuetify
fand ich total überladen, irgendwann.
Deswegen probieren wir das heute mal aus.
So, und jetzt muss ich noch mal kurz ein bisschen mehr
dazu erzählen. Ist nicht Bootstrap
sowas ähnliches? Ja, ja, ja.
Wobei Bootstrap tatsächlich sich nur
um Styling kümmert.
Und Prime NG.
Okay.
Der Name NG schreckt mich schon mal ab.
Das erscheint mir nämlich eine Angular Library zu sein.
Und
damit ist das für mich schon mal raus.
Wenn ich NG lese,
im Zusammenhang mit
Web-Frameworks, dann ist es meistens Angular.
Richtig Monarch.
Es gibt viele Sachen schon für
alle möglichen Fronten. Also viele
sind ja mittlerweile schon auf die glorreiche Idee gekommen,
ihre Component-Libraries
für mehrere Frameworks anzubieten.
So, und der Unterschied
zwischen beispielsweise so einem
UI-Framework und Bootstrap
ist, Bootstrap
ist komplett nur Styling.
Und hier haben die auch ein bisschen
Logik dabei. Also hier hast du zum Beispiel
sowas in der Richtung. So Input-Chips.
Du kannst sagen hier Kecke.
Und dann hast du sogar Animationen
zum hinzufügen.
Also du hast schon ein paar fertige Komponenten,
die alle ganz gut gestylt sind
und funktionieren. Und was mir tatsächlich
auf den ersten Blick in Skeleton Cans gut
gefallen hat,
die Dinger sind alle darauf ausgelegt,
dass du sie relativ einfach erweitern kannst,
umstylen kannst und
editieren kannst.
Also insofern hat
mich das eigentlich jetzt so auf den
ersten Blick erstmal angesprochen.
Mal gucken, wie gut das wirklich funktioniert.
Das müssen wir uns dann nochmal anschauen.
Und jetzt noch ein paar Worte zu SvelteKit,
bevor wir damit anfangen.
Also, es gibt ja
das sind Tags, ja aus irgendwelchen Gründen
haben sie das Chips genannt.
Wobei ich Chips besser als
Tags finde.
Ja, aber jetzt nochmal ein paar Worte
zu SvelteKit.
Es gibt ja, oder mal
eine Frage an den Chat.
Chat-Gefrage.
Was sind
die großen UI-Frame...
äh, nicht die großen UI, die großen Frontend-Frameworks?
So welche 3, 4,
5 Dinger vielleicht fallen euch da ein?
Oder sag mal so, was sind die großen 3?
Was sind die großen 3 Frontend-Frameworks?
Ja, machen wir mal
Best Of, dann kommt das ganz gut hin.
Genau.
Vue, Angular, React. Das auf jeden Fall
React. Einsam an der
Spitze, ganz weit vorne.
Danach bin ich mir gar nicht so sicher.
Ich persönlich würde darauf tippen, dass danach Angular
kommt, weil Angular im Business,
Business-Umfeld sehr beliebt ist. Und danach
Vue. Also React, Angular, Vue
sind auf jeden Fall die großen 3.
Vue.js
ist mein persönlicher Eindruck.
Ich weiß nicht, ob das wirklich
stimmt. Aber zumindest
hat sich das für mich so mit
Version 3
und den folgenden Jahren
hat sich das
ja, sieht das für mich
zumindest so aus. Und zwar
Vue erscheint mir ein bisschen auf dem absteigenden
Ast die letzten Jahre über.
React nach wie vor ultra
strong, vorne dabei. Größtes
Framework ever, was das angeht.
Verbreitetstes Framework ever,
so Frontend-mäßig. Da kommt vielleicht
höchstens noch jQuery dran oder sowas.
Aber
ansonsten
ist React wirklich die
unangefochtene Nummer 1.
Seit Jahren schon. Und dementsprechend
gibt es ja auch die meisten Libraries
und Sachen. Dafür finde ich
die Handhabung, also ich habe mich
nie im Detail mit React beschäftigt, weil mich die Handhabung
immer so ein bisschen abgeschreckt hat.
Danach, ich meine,
es ist von Google, kommt Angular
und das ist im Business Enterprise Umfeld
sehr beliebt. Enthält viele
Sachen schon
fertig. Fragt mich nicht. Keine Ahnung.
Ich habe das nie richtig verwendet.
Aber muss wohl für alle möglichen Sachen was
eingebaut haben.
Du hast einen Router eingebaut,
du hast irgendwelche, du hast wohl
gar nicht viele Sachen schon in diesem Angular Standard
Framework mit drin, wo du alles mögliche mit machen kannst.
Und Vue ist wahrscheinlich der Einstieg am
einfachsten von den ganzen 3.
So, das sind so die großen 3.
Was man noch erwähnen wollte,
jQuery, das ist immer noch da.
Ich glaube immer noch
40% oder 50% oder
60% oder so, fragt mich nicht.
Keine Ahnung. Also auf jeden Fall
riesengroßer Teil der weltweit
Top 500 Seiten benutzt immer
noch jQuery.
Glaubt man zwar nicht, aber ist so.
Und es gibt seit ein paar Jahren
jetzt auch Svelte.
Svelte ist tatsächlich ein bisschen was anderes
als die oberen 3 Frameworks.
Deswegen muss ich jetzt ein bisschen ausruhen,
bevor ich euch was zu Svelte Kit erzähle.
Svelte ist
in erster Linie eigentlich gar kein
JavaScript Framework, wie man das
hiervon
kennt. Sondern Svelte
ist eine Library, die versucht
den Komfort
zu bieten, wie eines dieser
Frontend Frameworks. Allerdings
am Ende
die Anwendung, die rausfällt,
enthält eigentlich kein
Svelte Framework in dem Sinn mehr.
Also alles, was man in Svelte baut,
wird am Ende zu
nacktem JavaScript
ohne irgendwelche Dependencies
translated.
Also während
du beispielsweise bei vue.js
erstmal oben
sagen musst in deiner Seite
include vue.js,
damit die Seite überhaupt funktioniert,
fällst du in Svelte, genau,
du brauchst keine Runtime mehr.
So, und
was Svelte macht, ist, dass möglichst
wenig übrig bleibt von Svelte.
Es kann durchaus sein, weil es auch gerade einer im Chat ist,
es kann durchaus sein, dass es noch
ein paar Einstiegshooks oder irgendwas
gibt,
aber von Svelte ist kaum noch was übrig
in der eigentlichen Anwendung. Also du musst nicht erstmal
irgendwie 16 Kilobyte
vue.js includen oder
Angular oder sonst was, sondern
bekommst mehr oder weniger eine nackte JavaScript
Anwendung hinten raus, die
funktioniert ohne weitere
Abhängigkeiten.
Die versuchen aber trotzdem
Chakra-UI, ne, hab ich mir nicht angeschaut, weil ich
React noch nicht groß benutzt hab. Ich weiß, Chakra
ist mit eines der bekanntesten
React
On-End-Geschichten.
Ja, so.
Also das ist so viel zu Svelte.
Also die versuchen, dass du quasi zur
Anwendungszeit vieles machen kannst,
wie eben in React, Angular und vue.
Allerdings, wenn du dann
die Anwendung baust, dass möglichst
wenig von Svelte übrig bleibt. Das ist
so eines der Ansätze. So, und jetzt
lassen wir mal gucken, was ist SvelteKit?
SvelteKit ist quasi sowas wie
Next.js und Nuxt.js.
Wohin gehe ich? Ich hoffe, ich kriege das jetzt halbwegs zusammen.
Ich glaube, Nuxt.js
ist vue,
Next.js ist React
oder umgedreht. Zumindest
sind die ganzen
Frontend-Javascript-Leute irgendwann auf die Idee
gekommen, dass es eine blöde Idee
ist,
nur Frontend-Frameworks zu haben,
die nur Frontend machen.
Wie wäre es denn, wenn man noch
drumherum so Meta-Frameworks
baut, dass man beispielsweise
auch serverseitige Sachen machen
kann, quasi in der gleichen
Anwendung nennen wir es mal
und beispielsweise auch
Mobile-Anwendungen einfacher machen kannst
und sowas. Und da kamen dann irgendwann
so Projekte wie Nuxt.js und Next.js
die bringen dann auch einen Router
mit und alle möglichen Geschichten
und da kannst du beispielsweise
Nuxt.js, das verwendet standardmäßig vue.js
und da kannst du dann solche Sachen
machen wie server-side-rendering.
Ich meine, was ist server-side-rendering?
Das, was ihr alle kennt. Und zwar,
wenn ihr Google aufmacht,
dann schickt euch Google diese Seite hier
und euer Browser zeigt die an.
Natürlich ist da auch ein bisschen Javascript,
aber im Großen und Ganzen ist da
ok, es ist relativ viel Javascript
aber...
Weil es ein schlechtes Beispiel, ok?
Wikipedia
GlitchTV
So, ihr macht Wikipedia auf
und dann schickt euch Wikipedia
diese Seite und euer Browser rendert das.
Gucken wir mal, ihr seht, das ist
mehr oder weniger nur HTML,
was ihr geschickt kriegt.
Vielleicht wird sich jetzt der ein oder andere denken,
Moment, ist das nicht schon
immer so, dass Webseiten HTML sind?
Und ja,
das ist schon immer so und am Ende
sind Webseiten auch immer HTML.
Die Frage ist, wie wird das
HTML generiert?
Und wo wird das HTML generiert?
So, server-side-rendering
ist so der Klassiker
schlechthin.
Du schickst ein Request an Wikipedia
und als Antwort bekommt dein Browser
schon das mehr oder weniger
vollständige HTML geschickt.
Das Gegenstück dazu sind
Single-Page-Applications.
Da bekommt dein
Browser eigentlich nur
eine mehr oder weniger leere
HTML-Seite geschickt mit
Javascript zum Nachladen.
Und der Javascript erzeugt dann erst
auf Clients Seite
das HTML, was dann im Endeffekt vom Browser
für die Seite gerendert wird.
Das sind so die zwei
unterschiedlichen Philosophien,
die es die letzten Jahre
über gegeben hat, mehr oder weniger
parallel. Also entweder möglichst
viel auf dem Client oder möglichst viel auf dem
Server. Natürlich war es in der Praxis
am Endeffekt immer
so ein bisschen
mal ein bisschen mehr so, mal ein bisschen
mehr so, weil ihr seht es ja auch hier,
selbst Wikipedia hat noch ein bisschen
Javascript drin. Und
es macht auch nicht Sinn,
alles immer server-seitig zu rendern
und alles immer Clients-seitig zu rendern.
Deswegen hat sich die letzten Jahre über
was anderes durchgesetzt, unter anderem
auch mit gerade diesen Meta-Frontend-Frameworks.
Das Ganze
nennt sich nämlich
SSR mit Hydration. Ich hoffe, ich habe
das jetzt richtig, ich bringe das gerade nicht durcheinander.
Klingt, klingt, klingt
wirklich, also wenn ihr mal irgendwo glänzen
wollt, in irgendeinem Vorstellungsgespräch oder
sowas, dann sagt, dass ihr
SSR mit Hydration mögt.
Das klingt erst mal richtig, richtig
Pfeiffer da.
Da sitzt der Typ, der vor euch sitzt, wenn er keine Ahnung hat,
denkt schon auch einer, boah, ist der schlau.
Absolut massive
HiIQ.
So, und was damit gemeint ist,
SSR
Hydration.
SSR
ist das, was ich eben gerade gesagt habe. SSR
ist server-side rendering.
Also sprich, man erzeugt die Seite schon auf dem
Server und schickt dann HTML,
aber Hydration ist der eigentliche
neue Pfeiffer-Trick.
Und zwar, was da jetzt passiert, ist folgendes.
Und das, wie gesagt, das kam so mit
diesen Meta-Frontend-Frameworks
auf. Was da passiert, ist folgendes.
Oder, ich muss euch vorher mal was anderes
fragen.
Wer kann mir, das
prüfungsrelevant, Chatge,
wer kann mir einen der größten Vorteile
sagen von, oder Chat,
ein Vorteil, die
Single-Page-Applications
haben und
ein riesen Vorteil, die server-side-rendered
Applications haben. Was fällt euch
da sofort an? Fangen wir mal mit server-side-rendering
an. Was ist eines der riesen, also
es gibt mehrere, aber
einer reicht mir.
Richtig, genau, das ist auch das erste,
woran ich denke. Server-side-
renderte Anwendungen sind erstmal
richtig gut für Suchmaschinen, weil
ihr könnt euch vorstellen, eine Suchmaschine kann sowas indizieren,
aber eine Suchmaschine
kann nichts indizieren, was nur aus JavaScript besteht.
Das ist das
nächste, genau, das ist das zweite, woran ich denken würde.
Das initial
Page-Rendering, also dass
die Seite möglichst schnell dargestellt
wird, wenn man zuerst drauf geht,
ist, wenn die Sache server-side-gerendert ist,
auch saumäßig schnell.
Ihr seht, wie schnell es geht,
beispielsweise das hier zu laden,
Wikipedia-Seite versus
Twitch. Ihr seht es, oder?
Twitch ist sehr viel JavaScript im Hintergrund,
ja, jetzt nicht, Twitch ist
sehr viel JavaScript im Hintergrund
und Wikipedia ist halt einfach fertig gerendert.
Das heißt, server-side-
rendering ist sehr schnell aufgebaut,
die Seite, und
suchmaschinenfreundlich.
So, und als nächstes,
große Vorteile,
von
Single-Page-Applications oder
sehr JavaScript-heavy
Client-Side-Applications. Was ist das erste,
was euch da einfällt?
Also mir fällt eigentlich spontan nur eine Sache
erstmal ein. Ja,
sowas, wenig, okay,
wenig Last auf dem Server, da habe ich jetzt gar nicht dran gedacht,
das kann auch dazu beitragen, aber
würde ich mal sagen, weniger.
Ne, für mich ist eines der größten Vorteile
von Single-Page-Applications,
dass du die möglichst,
dass du die gut interaktiv machen kannst.
Also wenn du Anwendungen hast,
die,
das sehe ich, sagen wir mal,
sehr responsive anfühlen müssen
und auch viele interaktive Elemente
haben, dann ist
Client-Side
sinnig.
Also zum Beispiel
DrawIO.
DrawIO würde als
Server-Side-Anwendung einfach schlicht und ergreifend
keinen Sinn machen.
Wie willst du das hier
server-seitig rendern? Das macht ja überhaupt keinen Sinn.
Also das hier,
ist alles Client-Seitig gerendert.
Da passiert auf dem Server nichts.
Vom Server ruft er sich vielleicht die
Images und sowas hier ab, die es gibt, aber der Rest ist
alles Client-Seitig gerendert.
Und ihr könnt
davon ausgehen, dass YouTube
zum Beispiel eine Seite ist,
die ziemlich
Hybrid aufgebaut ist.
YouTube muss viele Sachen vom Server laden,
aber dieser ganze Shit hier
wird zum größten Teil Client-Seitig
sein.
Die laden das hier nach, aber
beim Klick hier drauf, gehe ich jetzt
einfach mal von aus, ich weiß es nicht,
wir könnten mal nachgucken, dass das
Client-Seitig passiert. Und nur weil sich
die URL ändert, heißt das ja auch noch nichts.
Ja, das geht
dann auch sehr zackig.
Das heißt, man ist so ein bisschen davon weggekommen,
zu sagen,
man macht entweder Server-Seitig-Rendering
oder Client-Seitig oder Single-Page-Application,
sondern man macht jetzt sowas wie
Server-Seitig-Rendering mit Hydration.
Das heißt, da passiert
folgendes. Und wie gesagt, das kam mit diesen
Meta-Framework sowas wie
SvelteKit und
Nuxt und Next auf.
Den rendert die Seite initial auf dem Server
und alles was interaktiv
ist an der Seite, also alles interaktive
Javascript,
den State,
den friert man quasi ein,
schickt den mit rüber
an den Client, der Client
rendert die Seite initial
und
dann dehydratet, dann taut
er quasi das eingefrorene Javascript
wieder auf und macht an der gleichen
Stelle weiter. Das heißt, im Endeffekt,
du kannst jetzt die Seite
relativ Suchmaschinen-freundlich
rendern, auf dem Server schon.
Das initiale Seitenladen ist sehr schnell,
aber du kannst die Seite trotzdem komplett
interaktiv, schön mit allen möglichen
Animationen und Geschiss Client-Seitig machen.
Das ist so ein bisschen so der
der neuste Trend.
Seit so einem
Jahr oder zwei vielleicht.
So, und
jetzt kommen wir natürlich zum eigentlichen Punkt.
Warum braucht man SvelteKit?
Naja, Svelte ist eigentlich nur das
Frontend-Framework, auch wenn am Endeffekt
nach dem Kompilieren nicht mehr viel übrig bleibt
von dem Framework. Für alles andere,
zum Beispiel
Routing, also so hier, zum Beispiel hier
blub, so was.
Was passiert damit, wenn man diese Seite aufruft?
Routing muss man ja irgendwie
machen.
Oder auch,
wie entscheide ich jetzt, was Client-Seitig
gerendert wird, was Server-Seitig gerendert
wird, was wie rübergeschickt wird, welche
Endpoints ich abfragen muss auf dem Server.
Und das ist quasi ein, wie nennt man das
neuerdings so schön?
Full-Stack-Framework, so was.
Also das, guck hier,
da steht Single-Page, Multi-Page,
Application Server-Site, Server-Site
Generation, das kann man alles damit machen.
Also man kann die Seite schon auf dem Server
rendern, an Client schicken und von dort damit
Javascript-Zeug weitermachen.
So, das ist so der Trend gewesen
die letzten 1-2 Jahre.
Und das gibt es jetzt auch für Svelte und halt
im Fall mit Svelte-Kit.
So, jetzt habe ich ganz viel
Intro-Intro gelabert.
Was wir heute machen werden, ist folgendes.
Wir bauen eine kleine
Demo-Anwendung. Ich weiß nicht, wie weit wir kommen werden
und ich weiß auch ehrlich gesagt nicht,
ähm, wie
Feature-reich
das Ganze wird.
Ich hab mir überlegt, wir machen folgendes.
Ich hab mir das schon ein bisschen
im Vorfeld angeguckt, aber ich bin weit davon
entfernt, wirklich gut durch zu klicken.
Zumal wohl gemerkt, Frontendentwicklung
auch nicht jetzt irgendwie
mein Daily-Job ist oder sowas.
Also, wir legen eine
Anwendung an. Ist der Svelte
der Label-Champ nicht in Svelte?
Doch, ist er. Genau. Ja.
Ja.
Also, wir legen eine Anwendung an und zwar,
ihr könnt es euch am Namen schon denken gleich, wie das Ding
heißen wird.
MKDIR
Copy Pasta
Champ Demo
Wir bauen im Prinzip so eine Art, also
Chat, was
ist die Default-Anwendung,
die jeder zum Testen von irgendeinem
Frontend-Framework baut?
Es ist nicht der Copy
Pasta Demo Champ.
To-Do-Liste, genau.
Ich hab keinen Bock, eine To-Do-Liste zu bauen.
Wir bauen eine
Twitch-Copy-Pasta-Verwaltung.
Das wird von dem, was die Anwendung kann,
nicht was, was man im Endeffekt benutzen
will. Das kann ich gleich sagen.
Es geht bloß darum, dass wir uns die Features
von den zwei Sachen angucken können.
Also, wir bauen eine Anwendung,
die im Endeffekt irgendwie
1, 2, 3 vielleicht Routen enthält.
Die Hauptseite, eine
Create-Seite und da gibt es ein Formular,
da kann man einen Titel eintragen und
den Text eintragen, vielleicht noch
Text vergeben und es gibt eine
Main-Seite, da kann man seine
Copy-Pastas drauf anzeigen,
suchen,
eventuell löschen mit einer Abfrage,
wir brauchen auf jeden Fall
einen Dark-Light-Theme-Toggle
oben oder unten in der Leiste
und
dann gucken wir, dass wir die Seite halbwegs
responsive machen, dass es dann
je nachdem, wie breit der Bildschirm ist, ein bisschen mehr
und ein bisschen weniger anzeigt.
Aber das war es dann wahrscheinlich im Großen und Ganzen auch schon.
Und wir machen das rein kleinzeitig.
By the way.
Also wir machen keine Server-End-
AP-Endpunkte oder sowas.
Das werden wir alles kleinzeitig speichern,
als Storage.
Also, was muss ich jetzt
machen, um das Projekt anzulegen?
npm create
copy
pasta
champ-demo, bester Name.
Aber kannst du ein bisschen
Testing einbauen?
Oh, ich glaube, du laggst Critical
Information, wenn es um Testing geht, hier auf meinem
Channel.
Wie sieht das mit
Tests aus? Wann braucht man
keine Tests? Richtig.
Nein, was heißt
Direkt-Production?
Richtig.
Fett, endlich, endlich, sagt's meiner.
Genau, wir programmieren prinzipiell keine
Fehler. Und wenn man keine Fehler
programmiert, braucht man auch keine Tests.
Und weißt du,
was noch viel besser ist, wenn man keine Fehler
programmiert? Dann braucht man auch keine
Doku schreiben, weil das ist alles immer
100% richtig,
funktional und
selbsterklärend.
Und nachdem wir nie
Fehler produzieren, braucht
man auch keine
Tests. Und
die ernst gemeinte Antwort ist,
ich bin kein hauptberuflicher
Frontend-Entwickler. Ach ja, Dokumentation
brauchen wir logischerweise auch nicht, aber Kommentare
brauchen wir auch nicht. Ich bin kein
hauptberuflicher Frontend-Entwickler und ich muss dir ehrlich
sagen, ich kenne mich mit
Testing in JavaScript nicht wirklich gut aus.
Ich meine, ich kenne so ein paar Frameworks, ich kenne
was gibt es hier? Vitest und
wie heißt das andere
mega bekannte
Testing? JUnit?
Nee, JUnit ist Java, oder?
Cypress, Cypress meine ich.
Chai gibt es auch noch, Cypress, das meine ich.
Cypress meinte ich.
Jest, Jest, jaja. Also
vom Namen her, aber ansonsten
nope.
Brauchen wir alles nicht. Die Anwendung wird sofort funktionieren.
Easy.
Nee, Cucumber war doch, war das
nicht dieses Ruby-Ding? War das
nicht für Ruby, wo man so total umständlich
geschrieben hat?
Diese Komponente
soll einen User einloggen und
nach dem Einloggen soll...
War das nicht
so ein Ruby-Test-Framework?
Das ist total grausames
Zeug ist das.
Das ist immer, wenn du immer ein ordentliches Beispiel
Beispiel für findest... Ja, genau!
So hast du da deine Tests drinnen
geschrieben.
Das war total
abgedrehter Shit. Also ich würde
dir normalerweise wirklich zeigen,
wenn du fragst, wie macht man ordentliche
Tests in JavaScript, aber ich kann dir schlicht und ergreifend nicht
zeigen, wie man ordentliche Tests in JavaScript macht.
Vielleicht
ist da einer im Chat pfeilfertiger. Okay, also
Need to install following packages.
Proceed.
Yes.
Hat mich das überhaupt schon
mal in meine Liste hier
aufgenommen? Ja, haben wir.
Wollten wir uns irgendwann auch mal angucken.
Tatsächlich, ja. So, yes.
Proceed. Gucken wir uns mal an, was
da jetzt rauskommt. Übrigens, ihr werdet
jetzt gleich das... Oh.
Jetzt muss ich erst mal Fragen beantworten.
Ihr werdet gleich, nachdem das
Projekt erstellt ist, eines der
keckigsten JavaScript-Momente
überhaupt erleben.
Für alle, die kein JavaScript Frontend
Framework-Geschiss kennen,
ihr werdet es sehen, wenn es soweit ist.
Wenn ich den Editor aufmache.
Okay, add type-checking.
No. Type-checking.
Keck.
Wir brauchen weder Linting,
noch prettifying.
Standard Visual Studio Format reicht.
So.
Tailwind Forms wollen wir aber haben und
Tailwind Typography wollen wir haben.
Popups?
Keine Ahnung, warum nicht?
Und Codeblocks?
Ja, meinetwegen.
Wir brauchen aber gar keine Codeblocks.
Ne. Wir brauchen eigentlich auch
keine Popups. Select a
Theme. Okay, wir nehmen standardmäßig,
was für ein Theme nehmen wir denn?
Skeleton oder Modern?
Oder Rocket?
Äh, Modern. Komm. Lass mal.
Lass mal. Für die...
Das sieht so... Cute.
Cute Theme aus.
Modern.
Wir können das Theme dann umstellen.
Vielleicht machen wir auch eine Theme Selection.
Which skeleton
up template?
Barebones Template.
Installing.
So. Und gleich dürft ihr eine Runde
kecken, wenn ich meinen Editor
jetzt aufmache.
Ach, das war's? Oder hängt es?
Oh, das macht Dinger.
Okay, fertig. Nice.
New Major Version
of NPM. Ach, komm mal.
Arch Deluxe ist
nicht Bleeding Edge aktuell.
Was ist da los?
Was ist hier? Oh, kack.
Das wollte ich gar nicht.
Ich hab doch
schon was created.
Okay, jetzt öffnen
wir mal in Visual Studio Code die Anwendung
und jetzt könnt ihr gleich mal eine Runde kecken.
Schaut euch das hier mal an.
Ey, wir sind
im falschen Ordner. Lul.
Schaut euch das hier
mal an.
Ich hab ein Barebones
eine Barebones Application
generiert. So.
Ich mein.
Wohlgemerkt.
Das ist die Minimalanwendung, die ich generiert
hab. Quasi das Gegenstück
zu Hello World. Und es sind erstmal
und das ist halt so ein typischer
Wahnsinn, Schwachsinn
im JavaScript Frontend Bereich.
Du hast erstmal
tausende Dateien.
Mit allem möglichen Zeug.
Du hast ein Vite-Konfig, du hast ein Tailwind-Konfig,
du hast ein Svelte-Konfig, du hast ein PostCSS-Konfig,
Package Station, Package
Pretty Fire, Prettier Ignore,
NPMRC, Git Ignore,
ESLint, ESLint Ignore,
Icons, Fonts,
PostCSS, eigentlich
Applikationeneinstieg, Routen,
leider das hast du nicht.
Guck mal hier. 30 Milliarden. Alter.
30 Milliarden Node.js-Module.
Das lädt erstmal
das komplette Internet runter. Das ist normal.
So ist Frontend-Entwicklung halt.
Das ist schon immer so gewesen.
Vielleicht früher nicht,
wo du das einzige jQuery
included hast und das war's. Aber ansonsten war's
doch so. So, NPM run dev.
Wir gucken uns jetzt mal das Demo-Projekt an.
Hier gibt's die Anwendung,
die Testanwendung drauf.
Chrome starten und bam.
Okay.
Let's cracking a bone.
Also quasi, ja.
Fingerknacken oder wie.
So.
Sieht schon mal standardmäßig ganz brauchbar aus.
Ich muss den Darkreader
off. Okay, Darkreader
ist aus, sonst kommt der mir hier durcheinander.
Genau.
So.
Ohne ESLint und Prettier auszuwählen hat er hier trotzdem
Ja, Moment. Der hat ESLint und
Prettier vielleicht nicht installiert, aber die
Configs hat er trotzdem hingelegt.
Und wild ist, weil Visual Studio Code
des Onsave eh
alles ordentlich
formatieren sollte.
Ja.
Ja, macht's auch so halbwegs.
So, also. Ich zeige euch
jetzt mal eine coole Sache, wer nur
früher Frontend-Entwicklung
genießen durfte.
Ich mach's mal ein bisschen kleiner, dass man was sieht.
Also wer früher schon mal etwas
Frontend-Entwicklung genießen durfte,
der wird vielleicht noch Folgendes kennen.
Also, man editiert
die Seite hier,
dann speichert man die Seite und was macht man
dann? Ups.
Man speichert die Seite und man drückt hier oben auf
F5 zum Reloaden.
Das braucht man mit den meisten Frontend-
Frameworks nicht mehr. Ich zeige euch das mal.
Ich editier jetzt hier was, ich drück Save
und der reloadet instant automatisch
die Seite. Also die Zeiten des
F5-Refreshens
sind eigentlich vorbei.
Und die Dinger sind mittlerweile so
advanced, dass die auch nur
Teile neu rendern können.
Und das geht in der Regel relativ
schnell. Also sprich, wenn ich das hier
rausnehme,
dann muss der gar nicht die komplette Seite neu rendern,
sondern er weiß, dass er das hier nur entfernen muss.
Das nennt sich, ich bin mir nicht ganz sicher,
ich glaube, das nennt sich
Hot Module Replacement
oder sowas.
Und
das können die meisten Frontend-
genau, HMR.
Wirst du dir das nicht sofort, sobald du speicherst?
Nee. Also
ich habe Visual Studio eingestellt, dass es
meine Dateien
formatiert und save.
Das Reloaden der Seite, da hat Visual Studio
nichts mit zu tun. Das passiert hier.
Guck, sieht man auch, HMR Update gab's
gerade. Das muss das
Frontend-Framework, beziehungsweise
eigentlich muss es nicht das Frontend-Framework, sondern
der, wie auch immer
man das nennt,
das Render-Ding hier unterstützen.
Genau, und wenn man ganz klassisches HTML
machen will, ohne irgendwelche
JavaScript-Frontend-Geschichten, gibt es noch sowas wie
den Dev-Server für Visual Studio Code, der sowas
dann injectet in die Seite.
Also sprich, wenn ich jetzt hier drin rumeditiere,
dann seht ihr, save,
der aktualisiert das alles
selbst. So,
machen wir mal hier alles weg.
Und jetzt müssen wir uns mal angucken,
wie das Ganze funktioniert. Delete everything.
Das machen wir. Wir machen noch ein
Script oben rein, weil wir brauchen bestimmt ein bisschen
Logik. So, wie fangen wir jetzt
am besten an? Ich würde sagen,
als erstes gucken wir uns
mal an, dass unsere Seite ein gescheites
Layout hat.
Und was trinken.
So, wir müssen uns jetzt mal angucken, dass
unsere App ein gescheites Layout
hat.
Wo gab's
das mit dem Layout? Ich glaube
das hier.
Genau.
Genau, da kann man,
da kann man sich ein Layout erzeugen lassen, wie man
das haben will. Also, ich copy-paste
das jetzt einfach mal kurz hier rein. Und zwar,
das machen wir jetzt nicht in unsere
Page.cs, sondern in unsere
Layout-File.
Weil bei SvelteKit, das weiß ich
noch von früher,
bei SvelteKit ist das so,
du hast einmal
eine Layout-Page,
die darf es, glaube ich, nur einmal geben.
Und die rendert
quasi immer so den Rahmen von der Seite
und die Page,
das ist die eigentliche Seite, die hier in diesen
Slot gerendert wird. Also, guck mal,
wir haben jetzt, ich zeig's euch einfach mal,
wir haben hier jetzt Layout.svelte offen
und da füge ich das jetzt mal ein.
So, und jetzt will er irgendwelche Sachen von mir.
Ah, it's not defined.
Okay, das ist klar, dass es not defined ist, weil
ich den Kram noch includen muss.
Okay, na dann.
Ja, logisch.
Guck, und jetzt haben wir schon hier unser
Layout. Hier oben ist der Header,
hier ist die Sidebar links, hier unten ist hier
Fußzeile und hier ist der Content.
So, Moment, das muss weg.
Er rendert das von der
Page, also
es gibt eine Page pro Route.
Aktuell sind wir hier auf unserer Indexroute.
Die wird hier reingerendert
an dieser Stelle vom Layout.
Svelte UI.
Kennst du dich damit aus? Ich hab noch
nicht viel geplant. So, also wir brauchen
schon mal keine Sidebar auf der linken Seite.
Wir brauchen vielleicht,
wir brauchen vielleicht eine Fußzeile.
So.
Jetzt bauen wir mal,
wir bauen jetzt mal eine gescheite,
eine gescheite
Navigationsleiste.
Die nix großartig enthalten wird,
außer eine Leiste und ein Icon oder sowas.
Ist Pog, wenn man Tailwind
macht. Ja, ich hoffe, ich hoffe, dass es
Pog ist.
Okay, also wir wollen eine Navigationsleiste
haben.
Meine Navigationsleiste wird äußerst billig.
Die kriegt ein Icon, die kriegt
den Titel der Anwendung und die kriegt hier oben
einen Create-Button für neue Copy-Paste.
Mehr gibt's da nicht.
App Bar
wollen wir haben. App Bar muss
included werden.
Und dann geht das
wahrscheinlich so.
Was passiert jetzt, wenn ich das hier
reinkopiere? Header?
Das sieht scheiße aus.
Das will ich so nicht.
Was haben wir sonst noch? Titel. Das ist ganz
gut so.
Grid-Layout. Oh, das gefällt mir
besser. Das will ich haben hier. Grid-Layout, Pog.
Sehr schön.
Ähm, by the way, ich will weiterhin
Tab-Size 2.
So, jetzt haben wir hier Icon, Title,
Action. Okay, Title
von der Anwendung ist
ähm, wie hab ich das Ding
genannt? Copy-Paste
Champ
Beste.
So, dann machen wir das Ganze noch
ein bisschen fetter.
Äh, Class
A3. Ja,
guck mal, sieht schon ein bisschen schicker aus jetzt.
Ähm, Copy-Paste
Champ, Icons.
Wo bekomme ich
Icons gescheit her
fürs Feld?
Ich glaube,
also entweder nehmen wir Material Design
Icons oder wir nehmen die Tabler Icons.
Die gibt's nämlich auch fürs Feld.
Chat-Gear, ihr dürft's euch aussuchen.
Was nehmen wir?
Wo ist denn diese Seite
zum Suchen?
Da gab's doch ne Suchseite für
MDE-Search?
Ne.
Da gab's doch mal so ne richtig nice Seite
mit dem
Tabler-Icons.
Was soll's werden? Ne Demo-Anwendung zum Basteln.
Ich glaube,
das ist das hier meine ich, glaube ich.
Ja.
Das mit mehr cuten Icons.
Probieren wir's mal aus. Cute.
Hm.
Cute?
Hey, okay.
Eindeutig die Tabler-Icons.
Haben gewonnen.
So, wie installiert man den Kram fürs Feld?
NPM?
Warum? Warum ist das ein Bild?
NOOO!
Ah, okay.
Okay, und NPM.
E-NPM.
NPM.
P-NPM? Wir können auch P-NPM
benutzen.
Dann lädt das nur einmal runter und es geht schneller.
Okay.
Sollte man NPM und P-NPM
mischen?
Ich glaub, jetzt hab ich's destroyed irgendwie.
Ich glaub, weiß nicht, ob das so ne gute Idee war.
Ich mein, es wird
am Endeffekt funktionieren.
Def.
So.
Seite neu laden.
Alter, was geht mit meiner CPU gerade ab?
Nee, nix mehr.
Alles gut.
Okay, und wie funktioniert das jetzt?
Icon hard. Import.
Okay.
Alter, was geht... What the fuck?
Geht hier mit meiner CPU-Auslastung gerade ab?
What?
Ich hab doch nur ein Icon eingefügt.
Hahaha.
Warum wegen einem Bild gleich
eine Library installieren?
Als würd's die eine Library jetzt
fett machen.
Ach, der musste grad irgendwas cachen oder so
mit den Icons.
Geht das jetzt? Hat das jetzt funktioniert?
Okay, es lädt.
Icon hard.
Okay, man kann verschiedene Sachen anpassen.
Lass mal ausprobieren, ob das jetzt funktioniert.
Easy. Okay, nice.
Wir können Icons hinzufügen.
Ich würd sagen, sind wir fertig, oder?
Easy.
Push direkt in die Cloud.
Live.
Wahnsinns-
Service, den alle benutzen wollen.
Feierabend.
Also.
Okay.
Wir machen jetzt einfach mal hier ein Icon hin.
Wir machen mal irgendwas
billiges.
So, Header haben wir.
Icon. Okay.
Bei Icon machen wir jetzt
Icon.
Nur, dass wir nicht hard haben wollen,
sondern Icon.
Cat.
Gibt es Pasta? Gibt es Nudel oder sowas?
Pasta?
Nee. Nudel?
Nee. Food?
Okay, was hat man für
Food zu bieten?
Brand McDonalds.
Wait a minute, die haben Brand Icons?
Das finde ich eigentlich ganz nice.
Okay, der Keks.
Der Keks wird's.
Der Keks wird's.
Icon Cookie Man.
So, jetzt haben wir ein schönes Bild.
Wie ging das jetzt noch mit Size?
Jetzt haben wir noch die Größe.
24?
Ah, 24 scheint mir default zu sein.
16? Ja.
32.
24. Groß genug.
So, 24.
Das beste ist also Actions.
Actions, da will ich jetzt
einen Button haben für Add New
Copy Pasta Button.
Wie machen wir Buttons gescheit?
Da müssen wir mal gucken.
Also, Skeleton.
Buttons.
Da.
So einen Button hier will ich haben. Genau.
Bloß nicht mit einem toten Kopf drauf, sondern halt
Button.
Button Icon
Filled. Okay.
Was ist das für eine Konsole,
die du da benutzt? Warum nicht die von Visual Studio Code?
Welche? Die hier? Das da?
Oder was meinst du?
Das ist West Term.
Und warum ich nicht die von Visual Studio Code
benutze, ist ganz einfach. Warum sollte
ich den Platz in Visual Studio Code
irgendwie einschränken? Ich meine, ich habe
ja schon eh nicht so viel Platz hier gerade auf dem Display.
Gerade mit der Schriftgröße.
Und wenn ich
einfach meine Desktops mit einem Shortcut
umschalten kann, ist das viel angenehmer für mich.
Weil das ja auch ein richtig echtes, vollwertiges
Terminal ist.
Nein, nein. West Term heißt das.
Ja. West Term.
West.
Gigachat.
Written in Rust blazingly fast.
Beste.
Debian News. Okay, was haben wir
für Debian News?
Ach!
Nice. POG.
Nice.
Nice.
Wird mal wieder Zeit für eine neue Debian-Version.
Jetzt sind die Pakete nur
drei Jahre alt, die drin sind.
So ungefähr.
Jetzt muss man aber dazusagen,
not... Warum? Warum muss man das jetzt
dazusagen?
Nice, neue Debian-Version. Das finde ich extremely
POG.
Ja, ich meine, die Versionen
sind halt Debian-typisch wahrscheinlich
richtig uralt.
Gucken wir mal, wann das...
Wann kam Bind?
Ah, ich meine, immerhin.
Das ist nur...
Bind ist
nur ein Jahr alt.
Ne, Moment. Das sagt
selbst so gar nichts. Hier,
Dofcord. Ich... Okay.
Die Packages sind nur ein
Jahr alt bei Release. Das ist für Debian
nahezu
bleeding edge.
Also für Debian ist Package von Mitte
2022 höchst
extremst aktuell.
So, also ich wollte da irgendein
Icon jetzt hinpappen an der
Stelle.
Und zwar wollen wir das Icon haben
für Adden.
Was hinzufügen? Moment, hier.
Tabler Icons.
Tab...
Ne.
Ich hab schon wieder vergessen, wo das war hier. Tabler Icons.
Gibt das sowas wie
Add?
Ne, die Icons gefallen mir alle nicht.
Das ist ganz gut.
CirclePlus.
Suchen wir mal nach Plus.
Plus.
CirclePlus ist schon mal ganz
gut.
Was haben wir ansonsten noch? Square...
Was ist das hier?
SquareRoundedPlusField.
Square
Rounded Plus
Field.
Sehr easy Name.
So, und an der
Stelle machen wir jetzt noch ein Button hin.
Ja.
Icon
SquareRoundedPlus
So, jetzt haben wir hier
ein Button. Guck mal.
Okay, das finde ich schon mal schick gemacht. Das gefällt mir schon mal
gut.
Das hat ein Hover-Effekt.
Also erst mal.
Der Mauszeiger wird überschrieben. Es hat einen Hover-Effekt.
Es hat einen Press-Effekt.
Und es hat eine Animation beim Pressen.
Das gefällt mir schon mal.
Das finde ich schick. Es mag jetzt super
banal sein, aber sowas selbst zu bauen
ist immer recht mühselig.
Nicht, dass es wahnsinnig schwer ist. Das würde ich auch noch
hinkriegen. Jetzt auch nicht als großer Frontend-Checker,
aber das würde ich auch noch hinkriegen. Aber finde ich schon
mal ganz nett, dass solche Sachen
da standardmäßig gut dabei sind.
So, und jetzt ganz wichtig
Leute. Wir brauchen
einen
Theme-Switch.
Das habe ich schon mal gesehen, dass es das gibt.
Wartet mal. Switch.
Wo habe ich denn das gesehen?
Utilities. Light-Switch. Genau.
Light-Switch brauchen wir.
Light-Switch.
Probieren wir das mal aus,
ob das auch funktioniert.
Light-Switch.
Guckt mal hier. Jetzt kann man
zwischen Dark und Light-Theme
umschalten. Wirklich viel
erkennen tut man noch nicht, aber ich glaube,
wenn ich ein bisschen mehr einfüge,
das ist gerade schon...
Aber da oben können wir den nicht
hinmachen. Das sieht ziemlich
verkehrt aus. Das muss hier
unten hin.
Light-Switch. Beste.
Genau. Sehr schön.
Sag mal, irgendwas stimmt mit dem Browser nicht.
Das sieht nicht nach Light-Theme aus, oder?
Ach, ich habe ja meinen Browser
umgestellt.
Ich habe ja meinen... Ah, Mist.
Leute, ich habe doch
experimental mein Chromium so
eingestellt. Da müssen wir Firefox
verwenden. Ich habe doch
experimental mein Chromium so eingestellt, dass
er immer Dark-Theme nimmt.
Und auch automatisch ein Dark-Theme
generiert, wenn es keins gibt.
Das sieht man zum Beispiel schon, wenn man googelt.
Das Ding ist nur...
Wie stelle
ich denn das wieder aus?
Chrom... Was?
Nein!
What?
Alter, was ist das für ein Scheiß?
Was ist... Ja, Chrom-Flex.
Das will ich haben.
Experiments, Dark. Okay, okay.
Dark.
Hier, Auto-Dark-Mode.
Das wollen wir nicht. Disabled.
Relaunch.
Okay, ja.
Ah! Ja, schon viel
besser, Leute. Jetzt sieht es auch noch
Dark- und Light-Mode aus.
Richtig am Thema vorbei,
Block.
Ich muss sagen, auf den ersten Blick sieht es gar nicht mal
so schlecht aus. Wir lassen uns mal kurz im
Dark-Theme alles.
Wir haben einen Create-Icon.
Wir haben einen Theme-Switcher.
Ich würde allerdings sagen,
das muss noch ein bisschen erweitert werden, der Futter.
Da muss ganz, ganz wichtig...
Das ist der Copy-Pasta-Champ
bei
Wubblords.
Wubblords.
Oh nee, jetzt muss ich
CSS können und ich kann kein
gescheites CSS.
Wie kriege ich denn das jetzt gescheit nebeneinander?
Okay, das
habe ich mir schon mal gemerkt.
Und wie kriege ich das jetzt nach rechts?
Okay, Moment.
Moment.
Class...
Nix sagen, Chat.
MX-Auto?
Nee.
ML-Auto?
Oder war das
Justify?
Nee. Oh, ich habe
kein Tailwind-Plugin installiert.
Das muss gleich
gefixt werden.
Reload.
Tailwind. Tailwind
Intellisense, ja.
Wie viele Svelte-Plugins gibt es
eigentlich? Habe ich das Richtige?
Ich glaube, ich habe das Richtige.
Okay, nice.
So, jetzt sollte ich hier drinnen Class-Completions
haben, genau.
Justify
End. Geht das auch so?
Nee.
Wie war das? Space?
Between? Nee.
Between?
Ah ja, so geht es auch.
Okay, dann kann man sich die Klasse hier sparen.
Nice.
Dann ist der immer
centered. Okay, nice. Sehr schön.
Okay.
Wir sollten vielleicht noch eine Sache machen.
Ähm.
Wir geben dem Ding jetzt vielleicht noch
mal irgendwie eine Margin von 5,
dass es nicht so an der Seite hängt.
Ja, so ist das doch eigentlich
relativ hübsch. So kann man das so lassen.
Inklusive
Theme-Switch. Der Copy-Pasta-Champ
bei Twitch-TV-Wubblers.
Exzellent. So, jetzt können wir
uns mal um die eigentliche Anwendung kümmern.
So, ich überlege gerade, wie wir jetzt am besten
weitermachen. Also, der Button hier
oben, der soll eine
neue
äh, ja, der soll eine Form
aufmachen, wo ich einen Titel und
Content eingeben kann für Sachen, die dann hier angezeigt
werden. Ich würde sagen, wir bauen
erst mal so koop, wie das aussehen soll
und dann machen wir das interaktiv.
Das Einzige, was wir vielleicht schon machen könnten, ist,
die Route hier setzen.
Also, sprich, wenn man hier draufklickt,
dann
soll man
on
klick, äh,
wie routet man ins Weltkit?
Route.
Man könnte jetzt ein Link-Element
machen, aber dann mache ich den Button kaputt.
Wie macht man
Routing ins Weltkit?
Ja, klar, man könnte
es mit dem Link machen, das ist schon mal klar,
dass das funktioniert, aber
hä? Hä, das war
doch total simpel.
Das war sowas wie Link
to sonst was.
Eigentlich wäre ein Link doch das...
Nee, ich will einen Button haben, der funktioniert.
Ich meine, ich könnte einen Link im Button machen, wahrscheinlich.
Das würde funktionieren.
Aber ich kann auch einfach ein Click-Event
da dran hauen. Moment.
Selbst wenn nicht, ich will... Ah, hier.
How to route programmatically ins Welt.
Das, sowas, sowas suche ich, genau.
Import
go to. Alles klar.
Go to.
Ah, nix. Ach so.
Ähm, und jetzt
go to
slash
Okay.
Go to, nennen wir es mal create.
Die Route gibt es noch nicht, das heißt, das kackt jetzt ab, wenn ich
da drauf klicke. Not found, ja.
Ist klar. Es gibt ja noch keine
Seite, die sich create nennt.
Die legen wir jetzt mal an.
Route. So, und wenn ich das richtig
im Kopf habe, funktioniert das jetzt folgendermaßen.
Wenn ich eine neue
Unterseite anlegen will, also
eine neue Route anlegen will, dann muss man jetzt unter
Routes, glaube ich, einen neuen Folder anlegen,
der sich exakt so nennt wie die Route.
So, und da drin brauche ich
jetzt ein Pages Welt.
Und es schon funktioniert.
Guck, das hier ist,
das hier ist, ähm,
create.
Ups. Machen wir es mal so. Wir machen
mal einen Link. Back.
Zurück auf slash.
Okay, funktioniert.
Hier komme ich auf die
create Seite und hier komme
ich auf die, auf die index
Seite wieder.
Vielleicht willst du auch ein Popover.
Ne, jetzt nochmal stellen will ich eine eigene Route.
Vor allem kann man dann nicht
per Ctrl plus Klick ein extra
Tab öffnen für die Seite.
Ähm.
Das ist richtig, aber das ist nicht schlimm,
weil das ja eine Single Page Application ist.
Das würde wahrscheinlich eh nicht richtig funktionieren,
wenn du da so ein neues Tab machst.
Ey, das ist schon okay so.
Ich meine, wir können es an der Stelle tatsächlich mal ausprobieren,
ob man das mit dem Go To überhaupt braucht.
Wir machen mal anstatt dem Button
ein Link.
Href.
Äh, nach create.
Ja gut, funktioniert genauso.
Und Klick weg.
Ja, okay, das...
Ne, das funktioniert nicht genauso.
Guckt mal.
Ich glaube, mit dem Button sah es anders aus.
Oder?
Ne.
Ne, oder? Das ist genau das gleiche.
Das testen wir jetzt.
Wir machen einfach zwei Sachen.
Ne, das ist überhaupt kein Unterschied.
Das ist überhaupt kein Unterschied.
Dann können wir auch
den Link direkt benutzen.
So, okay.
So, also hier kommen wir auf die Create Seite und hier geht es zurück
auf die Hauptseite. Alles gut, das passt.
So, Steam Switcher tut immer noch.
Alles klar, so, mit was fangen wir denn jetzt an?
Ich würde sagen, wir bauen jetzt mal eine Seite.
Die, die
Mainpage, also wir müssen mal so grob
überlegen, wie das, wie das Ganze
aussehen könnte.
Wie gesagt, es ist ja nicht mein Ziel,
dass da irgendeine Anwendung rauskommt, die sich super...
die sich irgendwie...
die man benutzen kann oder so, ja.
Sondern es geht zum Üben
davon. Okay, also
jetzt brauche ich meine
CSS HTML Skills.
Wir brauchen
einen Grid, oder?
Also, mein Ziel ist folgendes,
dass wir hier drauf jetzt so was
anzeigen, hier, was weiß ich,
Pasta 1, Copy
Pasta 2. So, und das
sollen unterschiedliche, so unterschiedliche Karten
sein.
Das heißt, wir müssen uns hier erstmal was raussuchen
für Karten.
Karts, Karts.
Das sieht eigentlich ganz schick
aus. Wie machen die das?
Animiert?
Kart Hover. Oh, das ist
cool, das gefällt mir, das ist schick.
Hover me.
Ne, ne.
Moment, das ist doch Blödsinn.
Der hat keinen Link. Das darf ein Diff sein.
Ich will gerne keinen Link haben.
So, okay, wie bauen wir das jetzt
zu einer halbwegs gescheiten
Karte um?
Moin Max, du kommst gerade rechtzeitig.
CSS stellst.
Okay, jetzt
muss ich meine CSS Skills...
Was macht Block? Display Block?
Ist das nicht sogar default-mäßig schon der Fall?
Okay, Kart Hover P.
Also,
was will ich jetzt da drinnen
stehen haben? Ich will
so eine Art Header haben.
So, hier. Copy, Pasta, 1.
So, dann will ich...
Koffer. Danke schön für den Sub.
So, dann brauche ich...
Okay, eine Breite.
96.
Das passt, glaube ich, ganz gut.
So, das Ganze muss natürlich
noch in den Grid oder sowas rein.
So, dann haben wir noch hier...
Article oder sowas.
Äh...
Komm hier. Lorem
Ipsum Generator.
Alles klar.
Äh... Warum ist
loremipsum.com kein Lorem Ipsum
Generator? Was ist da los?
Oh, beste.
Alles klar.
Ach, VS Code
kann das, ne?
Ja.
Sehr schön, sehr schön. Excellent.
Ähm...
Muss man da noch ein P drumherum machen?
Naja, bringt nix.
Warum ist das überhaupt so doof eingestellt? Ich will
Tab Size 2 Spaces haben.
So. Article.
Class. Oder machen wir
es mal anders.
Okay, wie
formatieren wir das jetzt mal?
Wie formatieren wir das jetzt gescheit?
Also, wir haben einen Header.
So. Der Header...
Keine Ahnung, das wird einfach eine Überschrift.
Kein Header. So. Überschrift.
So eine kleine Überschrift.
Hier. Class.
H6. So, jetzt ist das
Ganze schon mal ein bisschen dicker. Was wäre, wenn ich die
Class weglasse? Dann ist es...
Okay.
Machen wir mal 5
vielleicht. Ja, besser.
Okay, dann haben wir eine Überschrift.
So, jetzt müssen wir das irgendwie...
H6 ist
Header Überschrift.
Du hast den HTML, hast du H1 bis
H6.
Und das sind unterschiedlich
fette Schriften.
Guck da.
Die sehen dann unterschiedlich dick aus.
Ja. So, das ist
die Überschrift. So, es gab doch
jetzt irgendwie sowas. Warte mal.
Tailwind Line Clip oder
sowas. Oder Line Clamp.
Zeig mal.
Line Clamp 2. Das
müssen wir jetzt machen. Das wird nice.
Guck mal hier. Class. Gleich.
Ha!
Ist das nicht bock? Jetzt wird
das gekürzt.
Guck mal.
Jetzt wird das immer auf 2 Zeilen
gekürzt. Das ist doch nice.
Jetzt sind die Dinge halbwegs
predictable lang.
Gut, man könnte jetzt sagen, wenn man
draufklickt, geht halt ein Popup auf, wo der eigentliche
Text drin steht. Aber so, hey,
da soll ja keine Anwendung rauskommen, die wirklich
funktioniert. So,
nice. So, jetzt haben wir eine Karte.
Jetzt ist natürlich die große Preisfrage,
wie stellen wir 2 Karten gescheit dar?
Nicht nach Aussehen
Heading Levels benutzen. Wieso?
Wieso nicht?
Okay, das sieht kacke aus.
Ich glaube,
wir sind an dem Punkt angelangt,
wo ich ein
CSS-Grid brauche.
Und da habe ich jetzt
oh shit.
Haben wir einen Grid?
Nö, gibt's
keinen Grid.
Aber warum auch? Ich meine, man kann ja die Tablet Classes
benutzen. Tabelle,
genau, wie 1995.
Okay, Grid, jetzt
oh fuck, Alter. Okay, also eins, was
ich weiß, ist Grid, man kann sowas sagen wie Gap
4. Dann sieht das schon mal nicht mal ganz so kacke
aus, ne? Gut.
Wie sage ich dem jetzt, dass ich mehr als
1 Columns brauche, ich glaube ich.
Hier, warte mal. Okay, okay.
Five Header Time. Wir machen jetzt mal was.
Wir machen da eine Schleife drauf.
Each Counts 12. Wie macht man
eine For-Loop in 12?
So, beste. Das brauche ich.
Suchst du sowas?
Weiß ich nicht.
Ja, sowas in der Richtung suche ich.
Genau.
Jetzt machen wir erstmal eine Schleife.
Wir sind im Grid, wir machen eine Schleife
und in die Schleife soll meine Karte rein.
Jetzt gibt's diese Karte drei...
Ja, Copy Paste. Jetzt gibt's diese Karte
dreimal.
Ah, Gott! HTML!
Wo ist das Problem jetzt, man?
Hä? Ach so!
Ups.
Ja, wenn man Sachen mitkopiert, die es gar
nicht geben soll. Okay, jetzt haben wir
die Sachen dreimal.
Jetzt haben wir drei dieser Karten drin.
So, und jetzt will ich die Karten
ordentlich anordnen.
Grid, Columns,
3.
Okay, 2.
Okay, jetzt müssen wir das...
Jetzt wird's advanced. Jetzt müssen wir das
responsive machen.
Oh, shit!
Ähm...
Jetzt müssen wir das responsive machen.
Okay, wir fangen mit
einem an.
Und dann sagen wir ab Medium Size
wollen wir Grid, Columns, 2 haben.
Okay, guck mal.
Funktioniert.
Funktioniert.
Ja, nice. Und sobald
wir auf die Breite...
Gar nicht mal schlecht.
Gar nicht
mal schlecht.
Nee, mit Flex
brech ich mir da noch mehr einen ab.
Okay, das ist gar nicht mal so
übel. Guck mal, das funktioniert.
Und jetzt sagen wir, sobald wir large sind,
wollen wir Grid, Columns,
3 haben.
Ah, vielleicht...
Ist
vielleicht noch ein bisschen
verbesserungswürdig, aber so im Großen und Ganzen passt es doch.
Wir müssen
jetzt die Breite noch ein bisschen anpassen.
Aber ist doch
schon mal nicht schlecht, oder?
Je nach Größe vom Gerät
passt er sich an.
Ob 3 oder 4
oder 1, 2
oder 3. Ich meine, okay.
Was kommt nach large?
Was hat ein Tailwind?
Tailwind
Breakpoints
Breakpoints
XL
Okay.
Nice. Sehr schön.
So lassen wir das.
Leute, das ist mir responsive genug.
Mehr responsive
muss das gar nicht sein.
Alles gut so.
Beste responsiveness.
Aber es ist doch schon mal cool.
Wisst ihr was?
Das sieht gar nicht so schlecht
aus, oder?
Auch das Theme sieht schon
ganz gut aus.
Das finde ich gar nicht mal so übel.
Das geht voll klar
von der Optik her.
Okay, also als nächstes haben wir hier so ein paar Karten,
die wir darstellen können.
Ich meine, wir könnten
jetzt auch furchtbar ordentlich sein
und daraus irgendeine Card
Component machen.
Gibt es sogar einen Editor
auf der Skeleton Page?
Wie? Wo denn? Was denn? Was meinst du? Wo?
Für
Für Layouts oder was?
Forms? Ne.
Ach, für
Themes?
Ach, cool.
Ja gut, das Problem dabei ist, da müsste man
jetzt irgendwie Designer-mäßig
bewandt sein, dass man gute
Farbkombinationen findet.
Gibt es nicht einen Befehl, der automatisch
einen Component aus dem Snippet macht? Keine Ahnung.
Das können wir aber easy
selbst machen.
Meinst du was wie
Refactor?
Ne, keine Ahnung.
Ey, wir können daraus jetzt theoretisch eine Card
machen. Da müsst ihr
mir mal helfen, die ganzen Svelte-Kenner.
Ich glaube, das liegt mir unter Lib ab.
So, dann nennen wir das jetzt mal einfach
PastaCard.
Punkt
Svelte
Dann kopieren wir das hier rein.
Dann nehmen wir das hier weg und sagen
PastaCard
Nice.
Oh, das ist cool. Das funktioniert ja total easy.
Sollte man nicht DollarLib
machen ins Svelte-Kit?
Was ist denn besser? DollarLib oder
PunktPunktLib? DollarLib ist glaube ich
besser, weil das von überall immer gleich
ist. Aber da gibt es
kein Autocomplete, ne, mit Dollar.
Ah.
Alles pp-iger.
Gut, das ist, das ist nice.
Aber was mir noch nicht gefällt, ist, dass das hier in der
Mitte von der Seite ist.
Was ist, wenn ich dieses H full rausmache?
Äh, nope.
Okay, sieht scheiße aus. Wir lassen es in der Mitte von der Seite.
Das ist doch
aber schon mal ganz hübsch. Das gefällt mir
eigentlich echt ganz gut bis jetzt. Kann man da nicht draufklicken
und kommt dann da hin?
Warum komme ich jetzt nicht zum
Import? Komme ich nur zum
Import, wenn man das Ganze...
Ne, das ist natürlich doof.
Das ist natürlich blöd, dass man...
Aber wenn man das mit Dollar macht,
warum komme ich nicht zum Import? Das ist doch
hängen geblieben. Gibt es da
vielleicht sowas wie Sveld?
Jump2 oder sowas?
Äh.
Haben wir einen Bug gefunden in der Erweiterung.
Aber gut, passt da.
Passt da, Kurt. So.
Jetzt...
Versuche mal mit einem Punkt statt
mit zwei. Ne.
Das ist entweder
zwei Punkte davor, weil
ein Verzeichnis nach oben und dann den Lip rein
oder Dollar Lip. Aber Dollar Lip
funktioniert dann das Navigieren im Source Code nicht mehr,
was auch bescheuert ist. Gut.
Also, weiter im Text.
Jetzt haben wir den Kram hier zum Anklicken.
Das sieht ja eigentlich schon mal alles ganz
brauchbar aus. Weil die Karte ist
noch null dynamisch. Vielleicht
sollten wir mal sowas sagen wie hier
ähm...
Let. Ne, Export.
Let.
Title gleich.
Copy. Passt da.
Eins.
Und
Export. Let.
Nennen wir es irgendwie
Body oder so.
Ist...
Geht nicht. Warum nicht?
So.
Wo ist das Problem?
Unused. Mir doch egal,
ob es unused ist. So, und dann setzen wir
hier Body ein.
Und hier
Title.
Dann können wir das nämlich dann übergeben. Ansonsten
es rendert halt so einen Standardtext oder
halt was, was ich
einfüge dann später
von Hand. Okay.
Das ist ganz gut. Jetzt ist die Seite auch relativ
übersichtlich. Okay. Alles klar.
Jetzt würde ich
sagen...
Was machen wir jetzt als nächstes?
Machen wir jetzt als nächstes die
Create-Seite?
Ne. Wir können nicht die Create-Seite als
nächstes machen.
Wir machen
mal eine Suchleiste. Eine Suchleiste
brauchen wir auf jeden Fall noch. Input.
Input.
Ne.
So schon mal nicht.
So.
Flex
Column.
Und jetzt machen wir tatsächlich
das hier raus.
Kann man
sowas noch machen wie Gap?
Hm.
Wie kriege ich da jetzt...
Wie kriege ich danach da oben jetzt was
dazwischen als...
Muss ich dann hier sagen
Margin Top 2 oder sowas?
Item Center ist das Problem?
Nö.
Ah.
Justify.
Justify Center
ist das Problem.
Ja. Viel besser. Viel besser.
Ah.
4. Ja.
Ist doch eigentlich ganz schick so hier. Ui.
Okay.
Der Input-Text ist
vorbei.
Nö.
Eigentlich.
Eigentlich ganz gut.
Das Einzige was wir noch hier gucken ist vielleicht mal
Class Input
Margin
Y. Ne. X.
Ne. Y?
Ne.
Heading X?
Ne. Alter. Wie kriege ich
da links und rechts jetzt
Platzhalter dazwischen?
Ne. MX2 findest du nicht.
MX12
geht nicht. Guck da.
Wie kriege ich da jetzt
CAC CSS?
CSS alter.
Ne. Ich brauche das hier oder?
Ich brauche das prinzipiell hier.
Ich will den gesamten Inhalt
Der gesamte Inhalt soll ein Padding von 4 kriegen.
Sowas hier. Ja. Genau.
Sowas brauchen wir glaube ich.
Ja.
Okay. Gut.
Gut. Gut. Gut.
Gefällt mir schon mal ganz gut.
So. Jetzt haben wir hier
ein Suchfeld was natürlich noch
macht. Search.
Weil wir noch nix. Aber das passt schon mal.
Sieht schon mal eigentlich ganz ganz brauchbar aus.
Dass man jetzt hier was suchen kann.
Wir können auch noch mehr Copy-Paste-Aus machen.
Was passiert denn hier wenn ich 99 Copy-Paste-Aus
mache?
Dann
dann breakt es
wegen der Scroll-Leiste.
Egal. Das ist eine Demo-Anwendung. Damit will ich mich
jetzt nicht
beschäftigen.
Ne. Das ist. Oh Gott. Das ist ja
Ich hasse CSS man.
Das funktioniert nicht.
Jetzt haben wir hier keine Abstände richtig drin.
Egal. Alles gut.
Ich lasse es jetzt einfach so. Fertig. So.
Search. Search-Leiste. Exzellent.
So. So bleibt es jetzt.
Co-Pilot
kann auch kein Swelt. Wahrscheinlich kann Co-Pilot
schon Swelt.
Okay. Das sieht doch eigentlich ganz schick aus.
Was ist wenn ich
nach Gap 8
So ist es eigentlich besser. Ne.
Abstand dazwischen.
Warum ist der Abstand hier dazwischen
kleiner als der Abstand
Ach der ist dynamisch
der Abstand dazwischen. Okay.
Na gut. Wir wollen uns zwar nicht mit so kleinen Scheiß
aufhalten. Sonst wäre das ja heute gar nichts mehr.
So. Wir haben
jetzt hier unsere Copy-Pasta-
Card. Das heißt als nächstes
brauchen wir folgendes.
Erstmal müssen wir ein Formular anlegen
zum erstellen von dieser
Card. Weil aktuell ist ja nur
Platzhalter. Und
wir brauchen einen Store.
Wo wir die ganzen Copy-Pastas
drin speichern.
Also wir brauchen quasi
sowas hier.
Pasta-Store. Und daraus
aus diesem Array soll das alles
generiert werden. Nur mit dem Unterschied
dass es ja aktuell
gar kein Store ist sondern nur ein Javascript
Array. Das heißt wir brauchen einen
Swelt-Store. Wo erstellt man den denn?
Hier wahrscheinlich am besten.
Hier.
Pasta-Store.js
Pasta-Store.js
Pasta-Store.js
Writeable heißt das
ganze glaube ich. Genau.
Require.
Nee das sieht irgendwie
falsch aus.
Import.
Swelt.
Store.
Irgendwie so.
Ah so ging das. Genau.
Ja das hab ich gesucht. Genau.
So weil jetzt kann man
also Swelt hat ein ganz gutes Feature.
Und zwar
man kann
applikationsübergreifend egal in welcher
Seite in welcher Komponente man ist
so auf gemeinsam. Quasi so eine Art
globale Variable ist das wenn ihr es so
wählt. Wenn ihr es so wollt.
Nur dass es nicht einfach nur
eine globale Variable ist sondern eine
die sobald sich der Inhalt ändert
auch den Content updaten kann.
Also wir brauchen sowas hier.
Export. Konst.
Pasta-Store.
So gleich. Writeable.
So das ist. Nee.
Kein Objekt.
JavaScript Array.
Und standardmäßig da drinnen.
Okay standardmäßig.
Wir machen ein Objekt standardmäßig rein.
Und zwar ist das Titel.
Wir schreiben das nämlich einfach hier hin.
Titel. Copy. Pasta.
Eins.
Und.
Wie haben wir das andere genannt? Body oder so.
Ist eigentlich egal.
So. Wo ist das
Problem? Brauchen wir sonst noch
was? Ja. Tags kriegt dieses Ding
noch. Wir wollen Tags vergeben können.
Tags gibt es standardmäßig keine.
Doch Tags gibt es standardmäßig. Woblords.
Ne wir sind nicht in C-Sharp.
Wir sind in JavaScript. Also ist es ein Doppelpunkt.
Und hier da muss ein Komma dahinter
dass das funktioniert.
So Tags. Woblords.
Und ja das war es.
So und jetzt gehen wir auf unsere Startseite.
Und wir wollen jetzt
den Pasta Store
importieren. Den er nicht
findet. Import.
Ähm.
Ich hoffe
ich mach das jetzt hier recht. Pasta Store.
Okay.
So weil jetzt kann ich das Array
nehmen und sagen aus diesem
Array.
Ja hat funktioniert. Wir holen
das jetzt nicht mehr aus der eigentliche
Button Komponente raus. Sondern das heißt
das kann ich. Moment.
Das muss weg.
Das muss auch
weg. So.
Sondern wir holen das jetzt aus
unserem Store raus.
Wo ich dann auch weitere Sachen einfügen
kann die ich hier mit adden werde.
Also da müssen wir nämlich sagen Pasta Card.
Ähm.
Halt. Ne.
Hä?
Muss ich das ernsthaft so machen?
Lip?
Sonst funktioniert es nicht.
Ja. Geht nicht anders.
Keine Ahnung warum diese
Autocomplete Geschichte
das nicht mit Dollar Lip unterstützt.
Da scheint doch irgendwas kaputt zu sein.
So. Titel gleich.
Es.
Also die Schleife.
Pasta Title.
Funktioniert schon mal.
Und Body gleich.
So. Jetzt haben wir hier unseren Text.
Sehr nice.
Das gefällt mir. Das hat
irgendwie was.
Probier es mal mit einem Add beim Impor...
Wie? Mit einem Add? Wo?
Wie? Add Lip?
Ne. Das kann nicht sein.
Äh.
Es ist auf jeden Fall Dollar Lip.
Aber ich versteh nicht warum das
die Erweiterung nicht checkt.
So. Jetzt holen wir uns die ganzen Sachen aus unserem
Store raus.
Du meinst quasi sowas hier.
Root Verzeichnis.
Äh. Ich weiß nicht.
Es funktioniert so.
Ne. Ich glaube es ist hier nicht so.
So. Das heißt als nächstes müssen wir
uns überlegen.
Wie kriegen wir neue
Copypastas in
das Array rein?
Also das ist unser
Copypasta Store. Da ist aktuell nur
die Standard Copypasta drin die hier
angelegt wird.
So. Und jetzt wollen wir mehrere
hinzufügen.
Das heißt wir müssen jetzt
wenn man hier auf das Plus klickt
auf die
Create Page.
So. Auf der Create Page brauchen
wir den Store. Und das ist wirklich
ein mega nice Feature von Svelte.
Guck mal. Ich kann jetzt
wenn ich hier...
Ich bin jetzt in zwei komplett unterschiedlichen...
Ja super. Jetzt ist es natürlich hier
zwei hoch. Ja das ist ziemlich mies.
Egal. Wir lassen es jetzt so.
Wenn ich den Store importiere.
Ich bin jetzt auf zwei komplett unterschiedlichen
Seiten. Der Content ist
geshared in diesem Store. Also wenn ich
hier was in den Store einfüge.
Ich werde es euch mal
zeigen hier gleich.
Wir nehmen jetzt einfach mal hier
Pasta Store.
Moment.
Ich zeige euch mal dass das prinzipiell
funktioniert. Wir fügen jetzt mal
hier diesen ganzen Krempel. Ich copypaste
jetzt mal. Wir fügen das einfach nochmal ein.
Jetzt haben wir halt zweimal das gleiche drin.
Aber es gibt schlimmeres.
So. Push.
So. Passt mal auf. Guck mal.
Easy. Das ist geshared. Obwohl
das zwei unterschiedliche Seiten sind.
Ist das Store geshared
zwischen denen. Das heißt wenn ich hier was
hinzufüge.
Dann erscheint das auch hier drin.
Und noch besser. Wenn ich hier was
hinzufügen würde und das andere wäre noch
offen. Dann würde es dynamisch sogar aktualisieren.
Allerdings
wir wollen jetzt ja nicht hier random
Zeug hinzufügen.
Sondern wir brauchen
ein
Formular.
Du kannst so Alias definieren.
Das Weltkonfig.
Checkt das dann
das Visual Studio Code Plugin
auch.
Das Problem ist dass es das Visual Studio Code Plugin nicht
checkt. Dollar Lip
funktioniert zum
Auflösen. Aber das Visual Studio Code Plugin
kapiert es nicht.
Jetzt wird es aber advanced.
Frontend Shit kommt jetzt Leute. Achtung. Hier.
Du könntest Pasta mit dem Spread Operator
Pasta aufteilen. Dann könntest du
anstelle von Title nur Title.
Ok. Was kann ich machen?
Spread Operator.
Ne.
Ich verstehe bloß wahrscheinlich einfach nicht was du
haben willst. Der Spread Operator.
Eine Zeile
höher.
Ne oder?
Ne. Das funktioniert nicht.
Moment. Was ist jetzt hier?
Ne.
Ne. Ne.
Ich habe keine Ahnung Chat.
Und jetzt schreibe ich
Title? Ne.
Ne Chat. Das funktioniert so
nicht. Was?
Chat. Was?
Ok. Was? Ok. Jetzt wird es noch
advanced. Jetzt hat noch einer geschrieben.
Ich soll Copy Pasta
Card machen. Punkt. Punkt.
Punkt. Pasta.
Das wird doch im Leben nicht funktionieren.
Ne.
Ne Chat. So funktioniert
es nicht. Wie ihr euch das vorstellt.
Wir bleiben mal hier.
Wieso ursprünglich funktioniert das?
Ok. Achtung.
Excellent.
Xiaomi.
Ach so.
Ok. Das funktioniert.
Aber ernsthaft.
Das ist ja krasses
Magic.
Also jetzt mal ernsthaft.
Wo versteht man eher
was passiert? Das
oder
das?
Das ist richtig.
Das gefällt mir. Das ist richtig krass.
Hardcore Javascript Magic.
Das ist gut. Das lassen wir so.
Das lassen wir. Das ist so gut so.
Umso weniger man es versteht
umso besser.
Wie gesagt. Kein Fehler. Dementsprechend braucht man
auch keine Kommentare und keine Docs dafür.
Nice. So.
So. Ich wollte aber eigentlich
eine Seite erstellen zum
Anlegen von so einer Copy Pasta
Dingsbums Seite.
Keine Karte. Sondern
Create Page.
Ähm.
Jetzt wird es in der Tat etwas
komplizierter.
Wie mache ich denn das jetzt am besten?
Als erstes
kopiere ich mir mal das Ding.
Das brauche ich nämlich bestimmt.
Soll genauso
gesentert sein wie das
andere. Ja. Wunderbar.
So.
Form. Lassen wir es mal.
Forms. Alles gut.
Okay.
Als erstes brauchen wir wieder einen Input.
Input.
Excellent. Input.
Sehr schön.
Nur dass es nicht einfach nur
Input heißt. Sondern
wir brauchen ja den Text.
So. Einen Titel.
Einen Titel.
Titel brauchen wir nicht. Titel ist
overrated, outdated, debated.
So. Typ Text ist glaube ich
okay. Placeholder.
Titel.
So.
Und jetzt
brauche ich irgendeine Variable dafür.
Also sowas wie let
title gleich
ja nix.
Okay. Und jetzt muss ich irgendwie
sowas sagen wie bind value
title.
Und das jetzt. Lass mal kurz ausprobieren
ob das funktioniert was ich hier gebaut habe.
Ja. Funktioniert.
Okay. Das updatet. Nice.
So. Also.
Wir haben hier einen Form Input für den Titel.
Dann brauchen wir das gleiche nochmal.
Allerdings brauchen wir irgendwie
Text Area.
Text Area.
Das ist zu kurz. Zwölf.
Bam.
So. Dann.
Body.
Wir nennen das mal ungefähr gleich. Dass man noch
halbwegs durchblickt. Überall.
So. Bind. Bind.
Value.
Äh. Text.
So. Okay.
Ja. Das sieht doch schon mal ganz brauchbar aus.
Wir machen
vielleicht mal Gap 4. Sonst sieht es ein bisschen zu weit
auseinander aus. Ja. Ne. Das ist gut.
Sehr gut. Sehr gut. Das gefällt mir.
So. Wir brauchen Buttons.
Ne. Leute.
Pfeifett. Ja. Ich hab die Idee.
Passt mal auf. Wir haben doch vorhin
sowas gefunden. Jetzt haltet
euch mal fest. Next Level Feature.
Wo war das? Chips.
Chips brauchen wir jetzt.
Massive Chips.
Chips.
Schaltest du den Wort frei? Ich hab immer
Worts frei.
Inputs.
Gibt es? Ah. Liste gibt es nicht.
Okay. Let. Tags.
Gleich. So.
Tags. Passt mal jetzt hier.
Keckel. Oh.
Alter. Mind blown.
Tagging Feature.
Pog U.
I. Keine Groß und Kleinschreibung.
Cringe Time. Alter.
Beim Formular kannst du SvelteKit
Actions ausprobieren. Ne. SvelteKit Actions
sind ja für
Server-Seit-Geschichte. Wir machen ja alles kleinseitig.
Lul.
Nice.
Da können wir schon alles taggen. Sehr schön.
Aber da schreiben wir nicht Enter Value.
Schreiben wir da nicht. Wir schreiben Enter
Tags.
So.
Das sieht doch schon mal. Jetzt mal ohne Mist, Leute.
Ich finde, das sieht
besser aus, als ich
vermutet hab.
Jetzt haben wir hier unsere Tags.
Jetzt brauchen wir noch ein paar Buttons.
Buttons.
Local Storage. Ja.
Das ist zumindest der Plan.
Wie gesagt, da soll ja keine
Anwendung rauskommen, die wirklich großartig
was bringt. Ich will einfach nur ein bisschen hier
SvelteKit, Skeleton UI und
Zeug ausprobieren.
Ne. Wir wollen keine Button Groups.
Button Groups sind
zacken.
Wir wollen einen Button haben.
Ja. Hier haben wir einen Button.
Ne. Kein Eigen-Button.
Einen echten Button wollen wir
haben. So. Button.
Der Button soll heißen Save.
Wir brauchen einen Button für Speichern.
Und wir brauchen einen Button
für Cancel. So.
Das sieht aber nicht gut aus.
Also. Machen wir mal ein Diff drumherum.
CSS Checker unter euch wieder glänzen.
Flex.
Ähm. Wie kriege ich
das jetzt hier rechts hin?
So was wie Flex
Right Auto. Ne.
Flex Left Auto. Okay.
Nice.
Justify End.
Ne.
Gibt es nicht so was wie
Self End? Okay. Das geht
auch. Leute. Ich habe absolut
keine Ahnung, was der Unterschied zwischen
alledem ist. Warum?
Und warum macht das das gleiche
überhaupt?
Warum macht Margin Left Auto
das gleiche wie
Self Line End?
Self End
klingt nicht. Twitch
Save. Ja.
Using Spaces. Oh. Viel besser.
So. Ich möchte
allerdings den Button nicht
rounded haben. Ich will rounded none.
Ja. Viel besser in dem Fall.
Rounded none. Excellent.
So. Primary
Filled.
...
Okay. Das sieht schon mal ganz gut aus.
Buttons. Wie macht man
Warning Buttons? Leute.
Warning Buttons.
Einfach Warning.
Ja. Success.
Das ist eine eklige Farbe, man.
Primary.
Secondary.
Secondary
Warning warning
Kann immer so schlecht
Kann immer so übel
Gap 5 ne bringt nix
Gar nicht mal so hässlich oder
Und und auch auch im auch im light mode gar nicht mal so hässlich
Okay cancel macht noch nix
Aber das sieht gar nicht mal so scheiße aus
Ich da finde ich gut das hat was nice aber dark mode beste immer noch logisch
Gar nicht mal so mies gefällt mir tatsächlich sieht sieht sieht schick aus
So wenn wir jetzt auf speichern drücken da muss natürlich was passieren
Nee, wenn wir auf speichern drücken
Cancel grau da hast du recht ja da hast du recht wie macht man es grau error
Inactive oder sowas oder einfach nur filt
Ja so ist besser oder ja ja so ist intuitiv hast du recht ja ja
Okay, so jetzt ist jetzt die frage wie speichern wir denn das ganze jetzt gescheit also war noch funktion
Wenn wir mal mit weil es ist immerhin auch sowas wie in den wieder in form
So wir brauchen wieder go to jetzt diesmal diesmal müssen wir wirklich programmiert
So hier drinnen müssen wir jetzt zurück navigieren go to
Auf slash so satt mit
Onclick
Ich kann nicht schreiben onclick
Satt mit so es soll gesaved werden
Und hier soll nicht gesaved werden allerdings zurück navigiert werden probieren wir aus zack funst
Bis dahin funktioniert das schon mal
Ja hier müssen wir jetzt ein element in den store pushen genau
so if
Save
Und jetzt pushen wir was in den store
So also wir brauchen ein element wir brauchen title ist title ist relativ easy body
Das ist das ist einfach so und tags
sind tags
Das war es eigentlich
So und wenn ich jetzt alles richtig gemacht habe sollte ich also gehen wir mal hier drauf startseite neu anlegen keck weh
Overrated outdated cheap bated und das gibt es nur bei
pokimane im chat
So und jetzt war ich safe
Da ist es
Automatisch updated und aktualisiert ist das nicht so jetzt fügen wir noch was hinzu
Und zwar eindeutig weil das weil das jeder weiß dass lol weh größer keck w ist und das gibt es nur beim
Wobbler gibt es gibt es nur bei wobblers und bei
Was weiß ich
Beim lost
Und safe
Mit pocket base als becken wir haben überhaupt kein backhand gerade
Sollte titel body text nicht schon als neues objekt reichen ich weiß nicht da bin ich
Javascript mäßig nicht schlau genug für du meinst einfach so
Geht das
Chat gilt
Nennt er das standardmäßig so ohne dass man das explizit davor schreibt anscheinend sieht so aus
Sehr schön
Ja
So wir sollten die tags noch anzeigen lassen gehen wir mal hier auf unsere auf unsere pasta pasta karte
So jetzt brauchen wir noch eine schleife
Ja wir brauchen in unserer pasta karte brauchen wir noch eine schleife und zwar für die tags
Tags schleife wir brauchen den store hier noch mal
Nee nee nee sekunde
Ich habe ich muss die tags erst setzen export let tags
Okay
Tags
Tags
Es tag und jetzt müssen wir each beenden
So tag
So wie macht man wie macht man so einen chip so einen normalen chip chips
chips
Beste chips
Ha nice so und das gibt jetzt
Tag
Das funst ich bin begeistert das funst viel besser als ich mir das vorgestellt habe
Okay margin right kriegt es ein bisschen abstand dazwischen
Der ganze mist hier der braucht natürlich noch ein bisschen abstand untereinander hat das sieht ja das sieht viel zu viel zu
gestaucht alles aus
Der Everest ruft auf geht's kann man hier sagen jetzt flex
Schlechte schlechte schlechte ganz schlechte kann ich jetzt hier einfach sagen
margin top 2
Lieber außen ein diff noch mit display flex und
Du meinst hier und das und das dann da reinpacken kann ich mir nämlich
Das da sparen
Das da sparen
Ja, ja, das ist wahrscheinlich besser
Wann verwendet man margin wann padding okay ihr könnt mich da korrigieren chat also weil ich weiß ist margin das komplette
außen drum herum
Und padding ist wenn du abstand im element haben willst
Aber ich verwechsel das auch immer
Speichert er die karts im local storage
Nee aktuell speichert er die karts noch nirgendwo aber mein ziel ist dass er die karts im local storage speichert
Aktuell speichert er noch gar nix im local storage aktuell ist es nur sobald ich die seite einmal hart refreshe ist es als das alles wieder
weg
Dass das hier bestehen bleibt ist nur weil er unter der haube hot module replacement
Refresh macht für die seite also sprich der lädt die seite gar nicht neu sondern tauscht nur sachen von aus also wenn ich das
Editiere dann tauschen nur die sachen aus die ich editiert habe und lässt den seiten state weiterhin so wie es ist
Leute dass das gefällt mir das hat echt was sehr sehr sehr pock würde ich sagen
Okay, jetzt haben wir hier so ein create ding wenn ich cancel drücke passiert auch nix sehr schön
damit
Kanzliert er hat mal viele text er wird wahrscheinlich kaputt gehen dafür ist es nicht ausgelegt
Dafür ist nicht ausgelegt
Darf man nicht es ist einfach verboten viele taps zu machen
Erde flex wrap in das diff
alter der chat wieder
absolut high IQ chat
Danke für die subs leute xeto porga subscribtion leute wenn euch der content gefällt und ihr einen primes ab übrig habt
Dann wäre es schön wenn ihr jetzt monka stiert zum subscribe button ich glaube das ist jetzt auch die
Dann wäre es schön wenn ihr jetzt monka stiert zum subscribe button ich muss ab und zu ein bisschen sehr laut machen
Und wenn nicht ich freue mich trotzdem dass ihr da seid aber ab und zu sehr laut muss sein so läuft das twitch game
Warum benutzt du wie es kot und nicht webstorm weil ich wischtel studio code für freundin sachen lieber mag als webstorm
glatzbos sein für den sub
Tray westen prime subscription huge jetzt jetzt geht's los
Subscriber
Gibt sogar gleich den scam train vor ja das game train ist bei 93 prozent leute
Gleich wird richtig gebetet wieder von twitch
so
Sorry bin arm ich habe letztens auf youtube so ein video gelegen video gesehen
2000 euro passives einkommen im monat
Du musst nur die richtige telegram gruppe
Dann ist das alles kein problem habe ich habe ich habe ich gehört ja
Und du brauchst genau und du brauchst das richtige crime set mindset dafür
Spukideine für den subsesse schon hast du uns ab am start
Schäler moin auch am start
so also
Es sieht auch schon mal ganz so schlecht aus okay chat chat geht bevor wir uns jetzt ablenken lassen
Ihr wisst ich lasse mich immer easy side tracken
Wir brauchen doch sicherlich noch irgendwas
Ja wir müssen das löschen
Wir müssen es irgendwie löschen können
Ich meine und wir bräuchten fenster um es anzuzeigen aber da verzichte ich jetzt mal drauf wir müssen es löschen können
Okay, wie machen wir das mit dass man so eine karte löschen kann wir machen ein trash eiken oben rechts in die ecke
trash eiken
Wasser card
Ja ja wir machen wir machen ein trash eiken oben in die ecke
Eiken
Trash gibt es was wie trash trash eiken feld exzellent das brauche ich trash eiken
Trash eiken feld
Das haben wir ein trash eiken
Das trash eiken
Kann man dem eine klasse geben
Wahrscheinlich wahrscheinlich
Wahrscheinlich nicht direkt weil wir sind ja nicht in büchers
bg red gucken wir mal
Hey geht doch geht
Klasse dann sagen wir position absolut
Das hier sagen wir relativ
Die ist glaube ich schon
Right zero wow nee da muss man doch hier relativ sagen
right
Kann ich nicht sagen minus zwei oder sowas minus minus right
zwei
Exzellent und minus top zwei
So und da machen wir jetzt kein da machen wir jetzt kein trash eiken
wobei
Trash eiken kommt einfach so
Trash eiken
Fertig jetzt kann man löschen wenn man darauf klickt
Da brauchen wir natürlich ein button weil ohne button wird das ganze wieder rum backen
Klaas
Btn eiken
Btn eiken
Das ist zu fett btn eiken sm
Wait a minute
Sekunde das muss absolut hier
der button
Jetzt kann man da drauf klicken
Was copypasta das ist doch genau das richtige für dich
Ein copypasta
Managementprogramm war davon abgesehen dass es nicht zum benutzen gemacht ist sondern zum swell kit ein bisschen anschauen wieder
So jetzt kann man es löschen wenn man hier drauf klickt das heißt wir brauchen jetzt sowas wie hier on click
on click
Ups
Ne das war ich denn delete die fangen die müssen wir noch
Im delete ist ein schlüsselwort oder das darf ich nicht benutzen
So
Kannst du bitte den horizontalen und vertikalen gap zwischen den karts gleich machen ja wo denn wie denn wo denn
Ach das hier ja wie mache ich das denn
Ich weiß nicht wie ich das mache
tschädtchen
gap
Warum ist das überhaupt unterschiedlich ich sage doch immer gap 1 und gap 4 ist es
Ach so ich weiß woran das liegt
Weil das hier dynamisch gemacht wird je nachdem wie breit die seite ist
Ja das das hängt ja okay doch das ergibt sogar sinn weil wenn die seite zu sehr gestaucht wird dann muss das ja
richtig skalieren alles
Okay
Jetzt aber einst genug platz
Der scam train ist da endlich
Endlich wurde schon rein
gescammt
Dankeschön für die subs leute
Also falls ein noch ein bisschen prime übrig hat und sonst nicht weiß wohin da ich ich nehme den gerne
Wir nennen das die cool kids risk genau responsive design ja das ist so responsive und agil da müssen wir mit leben dass die abstände
hier nicht richtig sind
Ich glaube du hast noch irgendwo ein margin
Ne habe ich nicht weil guck mal
Dann wäre es ohne gap nicht alles aneinander dran
Oder sehe ich das falsch
Ich sehe da keine margin die irgendwas macht hier ist keine margin p4 habe ich noch macht aber nichts hat damit nichts zu tun
Und die margin hier innen drin hat ja damit auch nichts zu tun
Ich lasse es jetzt wenn ich mir so klein scheiß auffallen da wird das heute wird das heute überhaupt nichts
Was wollte ich denn jetzt überhaupt machen das ist jetzt habe ich schon wieder vergessen was ich machen wollte chat geht
Wo sind wir stehen geblieben?
Adeliten ich wollte das löschen ich wollte löschen ja das ist
Er ist übelst warm ich wollte das klimaanlage anschmeißen hottke
pasta store brauer wieder
Jetzt bin ich mir nicht ganz sicher wie man das weitermacht also function
Delete pasta okay
Dann gibt es hier die
Shit das geht hier drinne gar nicht ich darf ich darf da nicht
Wir müssen das anders machen
Wir müssen die gesamte übergeben
müssen
Müssen die gesamt ist ja scheiße
Wir müssen die gesamte übergeben dass ich die dann wieder löschen kann
Oder nicht oder wie machen wir das jetzt am besten
Übergebt den index und löschen den im store okay das ist eine gute idee das ist eine gute idee
Das ist auch scheiße oder
Die löschen wie lösche ich das denn jetzt wieder
20 seiten über parallelisierung da viel viel spaß
Good luck
Array filter auf okay ich muss tatsächlich so was wie den wie eine id aber ich habe kein index
Ich habe könnten auch einen event
Weil die keine ids haben die haben halt reihe einträge und so also was man was man machen könnte ist
Irgendein irgendein event oder so
Ja, okay, okay, okay, das wird wahrscheinlich von der export let
Jürgens wie index okay das ist aber auch nicht schöner
Das war alles mal auf das funktioniert
Page
Falsch dass die will ich haben
Nee
Nee ist doch richtig
Jetzt will ich index gleich
Okay, das müsste jetzt tatsächlich funktionieren
Lock index, okay, mal gucken ob das funktioniert
Warum ist das vermisst nur da oben
Nee nee nee
Wir machen das wieder unten hin so
console
Okay, das funktioniert. Nee, nee, nee ist gut. Das passt passt alles gut
funktioniert
pasta store
Remove add nein delete add nein
Okay, erase deleten pfeifertime in javascript das ist immer ein bisschen komplizierter
Wie die liebe ich den index
Js delete index
How can i remove a specific item from an array genau sowas suche ich ja
Man muss es erst mal suchen
Okay index of
Macht was
Returns the index of the first nähe das will ich nicht
Ich habe den index und will das also es sprich ich okay, das ist easy easy
Nee, ich brauche ich mache einfach so
Ich ich hole das element an dem an dem index raus
Und dann sage ich pasta store
leis
nee
Was brauche ich denn jetzt?
Brauche ich da das element oder den index ich brauche da einfach nur den index ja dann ist es ja einfach
und jetzt splice was 1 second parameter
Also sowas will ich haben
Nicht so ganz
Log ich muss es noch zuweisen glaube ich pasta store gleich
Sonst checkt er das glaubt net
Easy
Sehr schön nice
It's okay das heißt wenn ich jetzt hier was hinzufüge kecke
blob
zack safe
Löscht ah nice nice sehr schick
Gut dann funktioniert das schon mal also gehen wir können anlegen wir können löschen
Ich würde sagen wir versuchen mal die suchleiste irgendwie funktional zu bekommen
Da bin ich da bin ich auch mal
Und bin ich ein bisschen unschlüssig wie ich das ganze machen will so search text gleich leer
bind value
search text
Okay, wenn ich jetzt hier was suche dann steht es in search text drinne das heißt ich muss das hier jetzt filtern
Filtern auf
Ja pasta
Falls ist alles leer und jetzt ist alles drin jetzt brauche ich eine filterfunktion
der ich die pasta übergebe und den search
text übergebe
Dann brauche ich eine funktion die heißt filter
die bekommt die pasta und den
Filter text oder so
Text war was alle für schmerzen
Filter has already been in declared
Okay, ich vermute mal man darf es einfach nicht filter nennen weil filter in javascript aus irgendwelchen gründen
Das habe ich hier habe ich was importiert das wollte ich nicht
Okay, so filtern
return true
Okay, also sprich wir machen jetzt mal was text punkt to lower oh shit javascript
to lower case
So das ist der search text
to lower case
So jetzt will ich gucken enthält eventuell der titel
Titel to lower case includes
Eventuell den text
Dann
True ansonsten gibt es das nicht
Enthält nicht den text
Enthält nicht aber
Ne
meine logik ist kaputt
hast du nicht den filter von ich weiß ich weiß nicht was der filter von
Es macht ist nur der titel ich muss doch copy suchen
Ah
Gut funktioniert gut ich habe alles richtig gemacht
okay, und jetzt
If body title und jetzt kann ich auch nach sum suchen und es funktioniert okay nice testen wir das mal bla bla bla bla bla
D a s ja nice funktioniert return pasta title includes
Das ne dann habe ich schon ein zeiler wie jetzt
Wie soll das funktionieren
Du meinst dass ich dass ich quasi das hier miteinander verknüpfen soll also dass man quasi sowas hier sagen
Oder wie
Ja gut das ist in dem in dem fall ist tatsächlich nicht so verkehrt
Das sieht ein bisschen schön ein bisschen kurz und knackiger aus ja
Macht das gleiche sobald sobald sein komplizierter wird nicht aber gut das dafür ist okay wir können jetzt so könnten theoretisch sogar
Ne das lassen wir so warum macht er da eigentlich klammern drum
Hä und jetzt nicht
Keine ahnung ich glaube das ist so ein prettier ding vor aus dem visual studio plugin
Achso übrigens es muss oder oder sein ja genau
Weil es muss ja copy oder ja alles klar funktioniert so wunderbar dass der funktioniert die suchleiste jetzt tatsächlich auch
das ist ja das funktioniert ja besser und schneller als ich mir das so
vorgestellt habe also muss ich sagen
Mir gefällt das mit 12 kit und und skeleton ui wir haben jetzt noch nicht super super
Eigenes großartig eigenes zeug gemacht mehr oder weniger nur das benutzt was da ist aber an sich
An sich doch aber eigentlich schon mal ganz cool
So also das funktioniert alles
Und und der der light mode funktioniert der in der tat auch ganz schick aussieht muss man ja auch mal hier hervorheben ja
So ist es ja nett
Okay, was man ich habe eine idee passt mal auf
Präpariert euch für
Übelst high-IQ frontend stellt ich habe eine idee pass mal auf was wir jetzt machen
Ich bin mir nicht sicher ob es funktioniert aber zeigt mal her wir machen jetzt ein eine
Bewertungs bewertungs sterne für die copypasta noch drunter
das nicht pock star
Gibt es irgendwie sowas icons da fällt sehr gut
die wäre es mit transitions ok aber für was das trend transitioned ja schon ordentlich
passt mal auf dass das war jetzt diff
Okay star
Start hydrating wir wollen eiken
eiken
star feld
Bock genau das genauso ja batten
Klaas gleich btn eiken
btn eiken sm
Ja ja ja ja sehr sehr schick
Wobei die die sache ist die wahrscheinlich sollten wir das auch lieber als eigene component machen
Machen wir hier noch sei es vielleicht vielleicht war man die mal ein bisschen kleiner wobei ganz ehrlich
Ja ach komm 24 fette sterne boom
Glas so wir sollten ein bisschen abstand machen nach oben sehr schick
So und jetzt brauchen wir ja unterschied gibt es gibt es auch noch was wie
eiken
eikens da
Einfach ohne gefüllt ja sehr schick nice
So das heißt im endeffekt
Also so ist natürlich jetzt nicht so sinn und zweck der sache aber
Eiken star
So könnte man eine bewertung das ist das ist cool das gefällt mir das ist auch total das ist absolut nicht interaktiv bis jetzt ja
Aber das finde ich gut kann man seine copy pass aus bewerten
Battleship was stellen sie denn für transitions vor also mir fällt gerade keine ein
Die 5 star component da fehlt ja noch ein star ok das aber schon mal nicht verkehrt
So wir brauchen wir brauchen tatsächlich jetzt eine component nennen wir das mal hier star rating oder so
Und die gibt die gibt es natürlich noch nicht aber das war wieder weg hier
Also jetzt brauchen wir eine komponent nicht pasta katz sondern star rating
rating punkts welt
Warum gibt warum war da jetzt probleme aber weil ich noch nicht importiert habe
nicht pasta katz sondern
star
ratings welt
reicht das eigentlich wenn ich das einfach nur so importiere
ohne irgendwas
Aber moment ich bin in der falschen datei wo ich das gerade inkludet habe ich muss ich muss es ja hier inkluden
Wo ist das problem die eigens fehlen
Script
Internal server also das ja auch
Was das problem
lip
Das filex ist das irgendwie brauchen ich starte das noch mal neu auf gib ihm starten starte
Einfach nur so oder
Wo ist das problem ja aber den import den gibt es doch
fail to resolve
Okay, alles klar
Star
rating
Jetzt funktioniert es okay nice ja man muss anscheinend punkt slash davor machen dass er danach guckt wo ist gut muss man muss man wissen
Okay wie wie könnten wir jetzt eine da stehe ich jetzt ein bisschen auf dem schlauch
Also wir machen erst mal so viel export
Rating gleich 1 so
Also von der idee her will ich ja sowas hier haben 1 2 3 4 5
Und dann will ich haben eiken star
zum beispiel sowas
Fast fast nicht ganz
Nicht wirklich ich will ich will sowas ja
Vier sterne und dann zum schluss eigens da so sowas in der richtung da war jetzt mal ein diff drum
las
Weird flex
So soll das am ende aussehen die sache ist nur die das ist halt nicht interaktiv und es passiert nichts wenn ich auf die einzelnen sterne
drücke
loop und dann ein
Also wir könnten wieder sowas machen wie
Ich
Array fünf durchläufe
Es so das brauchen wir nicht wir brauchen nur den das zum zählen
das hier mal weg
Okay, jetzt haben wir halt 55 sterne das sagt halt und ich kann da jetzt auch nichts dran ändern
Das heißt ich muss jetzt hier gucken so selber mal rating selber mal drei sterne haben wir okay so das heißt da bräuchte ich jetzt
Den if die sterne müssten theoretisch eine forms
Warum muss das nicht sein
Okay, da war man if hier drinne
if
if
wenn
Mein schleifen durchlauf kleiner ist als das rating
Und ansonsten else das okay
Eiken star filz eiken star
Eiken star ergibt das sinn was ich hier gebaut habe hey funktioniert nice guck mal 3 rating 3
Und gut jetzt müssen wir es nur noch so machen dass man draufklicken kann
also on klick
on klick
wird das rating auf
eingesetzt
Nee
Ah
Das geht bei null los
Also wird das rating auf i plus 1 gesetzt
Dazu kann ich ja wirklich nur sagen
easy
Easy easy
Easy easy
Ich kann schick oder ich kann ich mal so übel für das dass das so kurz zusammen gewürfelt wurde
Jetzt noch zurückschreiben in die pasta weiß nicht
Passt da hat noch gar kein star kein feld für fürs das
Und
Die sterne direkt beim haben ändern
Du meinst wenn man da drüber hauert sollte der schon mal temporär anzeigen dass es jetzt ein
ein filz dings sein könnte
Wow da bin ich jetzt überfragt wie man das macht da bin ich jetzt überfragt wie man das gescheit machen würde ich mein
Ein habt wir effekt in enteignung ist das eine aber wir brauchen ja einen logik ende
Nee nee chat so einfach ist es nicht
Weil die sache ist die es gibt ja dann ein ein preview rating und ein
Review rating und ein real rating
ja
dass das funst ja aber
Jetzt nervt mich rum weg
so und weil das mouse over das dürfte dann nur das
das
Review ändern oder so ja das
Ein so das ist tatsächlich ganz cool
Weil das bleibt aber ohne dass ich das bleibt aber ohne dass ich dass ich klicke na ja
aber auf der anderen seite
auf der anderen seite ich meine das ist
dass das ist jetzt hier quasi
Rating preview oder so was hier ja sondern das brauchen wir noch so was wie einen ja was für sich
Im tunnel recht keine ahnung
0 so und das muss das muss im on click gesetzt werden
Und das muss es jetzt einen on click und das muss jetzt hier on click
internal gleich
rating irgendwie sowas
ja
Nee das ist scheiße das ist doch dass das funktioniert nicht richtig
weil das ist immer das
Der soll gar nichts machen wenn er fertig ist das nur zu üben ich war so merkt dass ich das ist das ist das ist doch
kacke das sagt
Nee warte mal nee warte mal muss nicht zeile 13 anpassen
Das ist das ist okay so aber wie
Was war mal was funktioniert denn jetzt überhaupt nicht das problem ist wenn ich jetzt hier drüber haffere und gehe runter
Dann
Muss es ich brauche
Ohne leute dass das mir zu kompliziert gerade
Genau ich muss nämlich wenn ich mit der maus raus gehe
und nicht geklickt habe
dann muss ich rating wieder auf
internal setzen
also on maus lief
ergibt das sinn
Ne
What
Ach so weil es null ist
Ja gut initial muss einmal gesetzt sein ja jetzt funsters, okay
Okay, jetzt funktioniert es wenn ich rausgehe
Okay, das ist aber schon ein bisschen durch die brust ins augen aus funktioniert
Und das machen wir das maus lief das machen wir in das flex
Dann verhält sich nicht so eklig
Jetzt passt das guck
Das wird angezeigt solange man drin ist und wenn man raus geht
Dann geht es zurück auf das ursprüngliche
Das ist eigentlich ganz gut jetzt doch doch so lassen wir das
Wie wäre es mit einem fade out beim löschen der karte jetzt wird es aber advanced hier oder
wow
Okay, warum nicht
Warum nicht
Moment, wo hat man das jetzt
Sekunde, wo hat man das jetzt gemacht
Import okay, wir brauchen auf jeden fall nur nur fade
das permanent fade duration
Auf der page
Wie macht man das jetzt gescheit
transition fade
Und jetzt muss man das wo angeben if
visible
Das brauchen wir nicht das ist nur zum einen ausschalten zum testen
Outfade
Einfach so ne da muss ich noch ein diff drumherum machen das ist funster
Guckt euch das mal an
Pog
Okay, das ist vielleicht ein bisschen zu langsam
Kann man bei bei fade das welt fade
Transition da kann man doch bestimmt
die zeiten einstellen oder
hier
fade out
und dann gleich delay
Aber die 5 das sollte jetzt mega schnell sein so
Duration
Okay, aber duration dass wir auch sehen dass es funktioniert
Ja für uns so duration 100 millisekunden wenn es verschwindet
Das finde ich sehr schick leute das hat das hat schon was oder das wirkt jetzt sehr sehr weich wie das wie das alles
Wie sagt also es hat eine gute an es hat es ist kurz genug dass es nicht nervt und es ist so
Okay, das ist das nice so fügen wir mal ein bisschen mehr hinzu bla bla bla bla bla bla safe
Erkenn die höhe ist unterschiedlich naja gut das ist in ordnung
Doch die höhe sollte schon immer gleich sein und bei die höhe ist also wie den texten immer gleich
So was passiert wenn ich das jetzt dann ja cool
Aber dann fällt es nicht habt ihr das gesehen
Das das fehlt nicht wenn man wenn man das löscht
Schaut euch das mal genau an guckt mal wenn ich das lösche
Fade das nicht wir können auch mal wir können aber 500 einstellen aber dann werde ich sehen es fehlt nicht
Doch es fehlt ich habe nichts gesagt 100 millisekunden ist beste wozu sollte man das länger machen wenn ich es länger machen nervt es ja
Guck wenn es länger dauern würde wenn es wirklich länger dauern würde als so
Wird es nerven stell dir mal vor das dauert irgendwie 300 millisekunden da muss ich das ist doof 100 ist optimal dafür
Preser rief moin jetzt wo du da bist heute ist css stellt am start
da bist du doch quasi
Der expert hier im stream
Schick was gefällt mir es hat was
Meine text hat es nicht übernommen doch
Das ist nur verpackt weil man muss enter drücken vorher
Dann übernimmt auch die tags
Und jetzt
Da ist das gefällt mir das hat das hat was ganz nein
So
Lass mal kurz in mich gehen ob man irgendwie was kleines einfällt was man auf die schnelle bauen könnte
Wir können hinzufügen
Ach, so local storage ja dass er die copy passt dass ich merke natürlich
Ja irgendwie dort müssen wir das
Skeleton ui hat doch sowas für local storage
local storage stores hier
imports local storage store
Wie lange ist das weltstore gültig?
Bis zum refresh der seite es sei denn du schreibst den local storage dann bist du dein local storage löscht
so
Wie funktioniert das jetzt?
Okay
Lass uns das mal ausprobieren
local storage store
Und jetzt waren die was
Hier war ja led blubb gleich und dann wie geht das local storage store
Dann brauchst du irgendeinen key. Ja passt das so nach dem motto
Und jetzt initial value so
gehe ich mal von aus
Initial value ist das da
Und das jetzt einfach
Das wäre jetzt witzig wenn das einfach nur wenn das einfach so gehen würde
Ne
Natürlich nicht
Dann check ich aber nicht so lass uns mal in local storage gucken ob da etwas drin steht
Wo ist denn das application
ne
Mach ich ja
So ganz check ich jetzt noch nicht wie es noch nicht wie es funktioniert ehrlich gesagt du brauchst noch die update function
ne
Ne
Es soll angeblich wie ein ganz normaler smell store funktionieren. Es gibt ja auch keine fehler also es scheint ja zu funktionieren
nur mit dem unterschied dass das
Gibt sowas wie safe oder so
Das check ich jetzt nicht wie das funktionieren soll
Was das für eine app?
Rumbastel app für swell kit und skeleton ui
Es ist es ist quasi so eine art to do app
zum zum üben
Das funktioniert nicht so wie ich mir das gedacht habe ansonsten werde ich aus der hilfeseite aber auch nicht schlau
first parameter ist
Der local storage key ist second parameter ist initial value. Ja da haben wir doch alles richtig gemacht
Subscribe update wir haben alles richtig gemacht also zumindest sofern man es hier aus der seite erkennen kann
Insgesamt haben wir nicht alles richtig gemacht weil es nicht funktioniert
Er will mit set oder update aktualisiert werden
Mache ich doch ich sag gleich
Der legt überhaupt kein local storage an das ist doch irgendwie merkwürdig oder
Wir brauchen mal ein ordentliches example
Ja, genau weil es fehlt ja auch irgendwie sowas wie loading und sowas
Ja, ich habe dollar davor
Skeleton okay mal video gucken wir gucken wir scrollen mal durch okay
Backups handels our data, okay. Das ist typescript
Ja, okay, ja das ist mir alles egal das ist typescript das können wir ignorieren
Local storage store ja
Ja, genau so mache ich das auch
Ja
Sehe ich jetzt sehe ich jetzt keinen unterschied ehrlich gesagt so
Sehe ich sehe ich jetzt keinen unterschied zu mache ich genauso
Ja gut selber machen ist das eine aber warum geht das hier nicht
Fragt man sich da vor allem warum taucht ihr im local storage nicht auf oder muss man da anderweitig gucken oder das ist aber
Leute es müsste müsste hier doch stehen oder oder nicht man
Eigentlich hätte ich gedacht das würde da jetzt
Wo packst du das in den store
zum beispiel
Dort
Vielleicht mag er das nicht mal was löschen. Ah, ich muss was löschen
Okay, dann legt das wirklich daran dass die zuweisung fehlt. Ja, dass das selbst das on assignment quasi so
Jetzt funktioniert es. Okay. Ich brauche quasi sowas. Okay. Okay. Alles klar
Ja, gucken wenn es jetzt geladen ist dann ist wieder weg. Okay, also brauche ich wirklich sowas wie
Pasta store gleich pasta store an meinen wegen
Blub blub
Ja, okay funktioniert
Da können wir uns das initial value auch schlicht und ergreifend jetzt mal
Schenken
Wo kommt das jetzt her wo kommt copypasta 1 her
Beim full page reload irgendwas gecache das noch gibt es nicht
Muss irgendwas gecache das sein kann mir anderweitig nicht erklären. Ja
War was gecached war was gecache das
nice
Kunst noch mal schon ist alles im local storage. Jetzt können wir hier hinzufügen
debated
Outdated overrated
Gebetet oder was auch immer so zack
Und jetzt neu lädt ist immer noch da
Und dass das lol weh größer keck wie ist
Es sollten alle wissen
sehr schick zack
Jetzt refresh ist immer noch da nice. Das ist gut. Das gefällt mir das hat was
Reihenfolge noch festlegbar man kann da noch tausend sachen drin einbauen wenn man will
was
Wieso ändern die nur vom hoffen die die ändern vom hoffen dass du siehst dass du siehst was jetzt was was ein klick machen würde
Und wenn du nicht klickst passiert nichts und wenn du dann auf den sterben klickst dann bleibt er auf vier
doch gut
Du hast ja nicht geklickt
Du hast ja nicht nur du musst klicken dass das funktioniert
Ja, das ist ich habe jetzt auch einmal komplett gefragt ich glaube jetzt sollte es funktionieren
Vielleicht hat er auch maus out nicht richtig mitbekommen man weiß ja nie so genau hier
Achso beim reload ja das weiß ich woran das liegt
Das weiß ich woran das liegt das wird aktuell noch gar nicht in store reingeschrieben
Das wird das wird nirgendswo aktualisiert deswegen nicht da habe ich auch keinen bock drauf
das doch zu bauen
wisst ihr was mich echt
Ein bisschen
Beunruhigt
dass das tatsächlich gar nicht so schlecht aussieht
Ich finde es übrigens immer schöner wenn man nur einmal export let schreibt und dann komma separiert weitermacht
so dann oder wie
ich weiß dann
Wisst ihr wie das aussieht wisst ihr wie das aussieht das sieht aus wie so eine fake so eine fake bewertungsseite
Die clickbait leute aus der suchmaschine auf sie locken will kennt ihr diese seiten so dieses nach dem motto die besten
Kühlschränke
2023 und das sind alles amazon reflinks unter der haube
So eine search optimierte fake ratings seite genau so sieht es aus
Die schriftart gefällt mir aber was ist das für eine schriftart
das für die schriftart
sieht man das irgendwo
Und family quicksand
Quick sand font habe ich noch nie gehört
Da font quicksand ja gefällt mir hat was anlegen
Wo blorts beim neuer tag sack ja und was auch nice ist wenn es zu lange ist
Wenn es zu lange ist
Dann klebt da das auf zwei zeilen
Twitch emotes im text anzeigen ohne das wird kompliziert
Doch das gefällt mir also ich muss sagen die kombi aus welt und skeleton ui sagt mir zu
Das mal kurz drüber gucken was die sonst noch so haben was wir heute nicht das reicht jetzt erst mal so an
Anwendungsmäßig heute ich glaube da war jetzt genug rum rum gebastelt mit
Und was ist wenn text zu lang und text drin drin sind
Das funktioniert auch weil pass mal auf
Dann klebt da das auch da stehen halt text standart die text würde ja auch umbrechen also das einzige wie du das layout von der
Seite ziemlich kaputt machen kannst ist
mit
Mit zu vielen tags das da kommt da nicht mit klar also was heißt so wirklich kaputt geht das layout ja nicht aber
so ganz stimmen tut es dann auch nicht mehr
guck
Es orientiert sich hier also am längsten
schon was von daisy ui gehört ja das habe ich mir auch mal vor einer weile angeguckt das hat mir jetzt nicht so nicht so
nicht so gefallen
aber auch
Wie agile das ist
Massive massive responsive und sogar eine fade out animation
Also ganz so ganz gut ist es nicht durchdacht hier mit den aber
Funktioniert funktioniert doch erstaunlich gut hätte ich gedacht
Lass mal noch mal schnell durchgucken was haben die denn sonst noch so für dinger
Okay, dogs themes colors ja gut
Team generator quick start tailwind so core
hatten wir alles schon
Scroll bars hier hatten wir keine brauchen wir nicht was ist das
Interactive elements on mobile will briefly show focus style enttascht
ja
Okay, header paragraph
Links
rickroll
Ich dachte wir kommen jetzt irgendwie bei rick astley raus
Reformate tags code keyboards insert die hauptkommer kannst du gar tipps anzeigen wenn du bock hast
Okay
Alerts haben wir noch okay
Eins könnten wir noch machen
Okay, eine idee habe ich noch
Was wir noch machen könnten wir brauchen noch eine abfrage leute wir brauchen eine abfrage ob wenn das überhaupt löschen will oder
Du klickst weil aktuell
Aktuell kriegst du auf löschen ist einfach weg das sollte schon noch ein pop-up kommen wollen sie das überhaupt löschen
Ja, ja das soll man auch machen
So was hier so wollen sie erlört wollen sie löschen
Oder die haben doch bestimmt auch ein pop-up oder so was hier pop-up
Jawohl oder mode genau das wollen wir haben
Genau das hier
Ja, wie funktions jetzt
Gibt es irgendwie dann konform ja genau sowas hier das gut okay
Was
Warum ist das typescript direkt
Bunker ist da was kaputt gemacht leute
Weil ich nicht weil ich nicht importiert haben
okay
Vollständiger text anzeigen ja das wäre tatsächlich ganz sinnvoll aber nicht jetzt jetzt wird er erst mal gelöscht please konform
Einfach nur konform beim
Proceed yes
Yes, no kann man dann sagen okay
Moment aber
Moment das muss das muss man schon mal in der in der in der function werden hier irgendwie show dialog oder so was ja
So das heißt wenn ich jetzt die lied
Pasta mache was wir schon haben
Dann war so rum dann will ich jetzt vorher fragen
Show dialog ach komm warum machen wir das nicht einfach hier rein fertig
Okay, es geht einfach so zu warum
Wahrscheinlich weil ich das das element noch erst auf die seite setzen muss
Und das muss auch auf die layout seite weil ansonsten
Ist es nicht oben drüber
An dem moment da ist es ja
Moment der löscht trotzdem also ich habe ja auch nichts eingebaut dass er das nicht machen sollte
Ja, einer passte
Bla bla bla so wenn das muss das das ist ja javascript
Das hier muss passieren im response
und zwar
Hier drin
Response
Ja und jetzt das da
okay
Cancel passiert nix konfirm ist weg weiß
Okay, das ist easy gewesen
omega lul
Cancel okay
nice
ist funst
Okay, das war einfach so was haben die sonst noch so zu bieten als alerts haben wir gerade schon gesehen
Kann man halt vielleicht ein bisschen umstylen und so
Ich
ganz schick gemacht
badges haben wir
Haben wir doch heute verwendet
Ne chips haben wir verwendet was der unter was ist der unterschied zwischen dem badge und dem chip
ach für filtering und sowas
Vielleicht wären hier badges schöner als chips
Vielleicht wären an der stelle tatsächlich
Page
Erst mal probieren
Badge
ja
Ich glaube das gefällt mir an der stelle besser
Hier chips und hier badges ja das sieht schicker aus oder
Das ist okay lassen wir das mal so so bleiben so breadcrumbs das ist für irgendwelche navigationssachen oben an der leiste
Oben an der seite das brauchen wir nicht buttons
Hatten wir schon karts haben wir auch benutzt chips haben wir auch benutzt
Lists haben wir heute nicht benutzt wüsste ich auch nicht wozu ich jetzt ein logo klaut
Für alle die sich hier eigentlich link tree bauen wollen
Placeholders
Okay, wenn man sachen nachlädt kann man hier kann man hier irgendwie so
animierte
Platz also wenn man irgendwie über nur über edge mit dem handy drin ist dann ist das nicht verkehrt
Tables
Okay tables ist wahrscheinlich jetzt nicht so easy weil tables weil tables ist eine reine table sache in dem fall hier
Kann man nicht sortieren und sowas
Ach haben noch mehr tables
Aber auch nicht sortierbar
Und sowas es ist keine komplette
Komplette data table implementierung das macht aber auch nix weil das braucht man eigentlich sehr selten und wenn man es braucht
Wann ist immer besser die funktionen die man gebraucht hat selbst rein zu vorstellen weil die fertigen data table
Komponenten sind immer so so wie man es halt nicht braucht
Was haben sie sonst noch blogs chat
Chat gibt und man haben sogar eine komplett fertige check
Nee das ist einfach nur ein beispiel oder das ist ein beispiel wie könnte man auch was sind das
gradient headings poggers das brauche ich
Das brauche ich leute das muss das muss in den titel der copypasta champ ist noch nicht bunt genug ja
da jawohl
Copypasta champ
Exzellent viel besser gleich jetzt ist einfach die top anwendung des jahrhunderts
Jetzt auch den titel animieren moment wie ging das man konnte doch früher war der mama hat dml
Das ging doch
Weiß nicht ob es das noch gibt
Das ist bestimmt die prägt oder
Nee das gibt es nicht mehr
das ist der prägt
Aber es geht noch aber es geht noch
Perfekt oder
Jetzt sieht es ein bisschen anders aus
Perfekt oder
Jetzt sieht es ein bisschen nach 1998 aus
Das lasse ich jetzt drinne
So ist es gut
Ja, aber das sagt dass es der prägt ist
avoid elements wie
avoid
disable
Erft jetzt nicht rum das ist beste
So dann haben wir noch akkordeons haben sie noch wenn man sie denn mal braucht hier so
App bar haben wir ausprobiert und app rail haben wir nicht gebraucht der schirm
Autocomplete haben sie auch noch alles ist so eine liste mit okay naja
braucht man manchmal aber
Ja das bestimmt auch ganz praktisch avatar kann man direkt anzeigen lassen wenn man bilder hat okay
Avatar
rounded
Aber das unterstützt auch direkt
initialien anzeigen in jetzt oder in ja
Ersten dass das ist ja sehr beliebt wenn da jemand noch keinen avatar hinterlegt hat oder kein kein profilbild dass dann die kürzel angezeigt werden
Autocomplete in der suche nach existierenden tags das ist eine sehr gute idee da bin ich das kriege ich aber heute nach dreieinhalb stunden streben aber
gebacken
interactive border
Konig gradients
Da kann man charts bauen naja gut also das würde ich okay das ist praktisch
spin
Das das braucht man immer mal
Eine eine runde
eine runde kogas spin
Aber sowas spinner sind immer praktisch
Es sollte ja sich eigentlich relativ einfach machen lassen guckt mal
Also mal angenommen ich will jetzt ein spinner ist bin also das haben wir einfach eiken
Circle irgendwie sowas hier circle
haben wir den na gut dass das circle funktioniert irgendwie eiken
Square
Oh hier war das perfekt das brauchen wir jetzt und jetzt kann ich einfach sagen class spin
Okay, das geht nicht
Okay, das ist
Aber das geht mit tailwind an sich das weiß ich dass das prinzipiell funktioniert
Glas
Animate spin so ging das gell genau
Jetzt macht er mal einfach eine runde kogas der arrow
kog
jepp kog
Okay, genug blödsinn gemacht jetzt
genug schabernack getrieben wisse
Wer ist der typ des der csu dude
So file buttons genau den meine ich
High button select a file da kann man sachen hochladen auch praktisch drop zone kann man files reinziehen
Das ist sehr praktisch dass sie sowas schon drin haben da babbelt man im
Bastelt man immer ganze weile dran rum
Input chips die hatten wir schon list boxes nicht sowas eben schon mal
Pagination
Guck mal die checken dass die checken das dark theme nicht da unten
Sind die vielleicht irgendwie falsch rum die sind ja eklig zu benutzen
Progress bar
Gibt es gibt es hier auch animiert jawohl beste
Animierte progress bar so muss das sein
progress
Okay, okay styling
Komm mal die kann man auch kogas machen lassen
Sowas sowas ist praktisch wenn man den spinner braucht
okay, button groups
Rangesliders ah hier ein switch
Slide toggles hätten sie das nicht switch nennen können niemand sucht nach slide toggles
Würdet ihr eher nach switch suchen oder nach slide toggle wenn ihr nach sowas guckt
steppers
Das ist für so für so wizards tabs okay standard tables table of ein talk
Toasts haben sie auch zeit mehr ja toasts
Okay, praktisch dass sowas eingebaut ist
So message message message box nach dem motto achtung server fertig aufgebaut und sowas
pop-up das hatten wir schon
Slide switch
Ach so
So overlays über den gesamten bildschirm
Das auch ganz praktisch also für leute die die mobile anwendung machen ist sowas praktisch
So auf dem desktop ehrlich gesagt
Würde es mich eher abfucken wenn ich sowas benutzen muss
Und da gibt es noch code blogs
Ja schick also ich muss sagen es ist mehr oder weniger alles dabei was ich mir so wünschen würde vom UI framework also insofern
Suche funktioniert auch
Schick
Wie ist welt und zwölf im vergleich zu view ist welt für kleinigkeiten besser
Ich habe lange wirklich bestimmt zwei jahre oder so kein view mehr verwendet also ich habe drei beispielsweise gar nicht richtig benutzt
Also ich denke und am strich ist view immer noch verbreiteter und wahrscheinlich findest du auch noch ein bisschen mehr tutorials
Aber ich finde es welt angenehmer
Also ich würde meine sachen nur noch in zwölf waren ich apple ist apple tv nicht auch komplett in zwölf mittlerweile
Oder apple music oder sowas
Irgendwas ist doch mittlerweile auch schon also es gibt schon ein paar größere projekte die welt benutzen
apple music
Ich würde wahrscheinlich welt benutzen
Was pd man app
Oder mein support man ich wusste gar nicht dass potten in die ui hat wozu braucht potten in die ui
auch doch niemand sowas
docker desktop
Winch wer macht denn sowas docker cli bedienung ist das einzig sinnvolle
Das sind genauso wie die leute die kubernetes rancher desktop benutzen und sowas
Der portena ist ja noch schlimmer auf cli bedienung
Beste hat man mal gucken ob der light switch kaputt geht hör man
Ne der kriegt es hin
Und was sagt ihr so zu zwölf und elektronica nachdem er euch das heute im stream angeguckt hat
Also für vielleicht war ja der ein oder andere da der es noch nicht benutzt hat also ich muss sagen
Ich finde es nice
Also gerade auch die kombination mit dass es mal gescheite default themes gibt kann ich mich nicht beschweren
Du weißt du nicht wie professionell skeleton aussehen kann ja wie jetzt
Findest du nicht dass das ein ultra professional look look and feel hat diese anwendung
Also vor allem die die schriftart die hier oben so durch also die die schrift die hier oben so durch scrollt
also das
War 1998 der shit schlechthin ich finde den font auch gar nicht so übel
Finde geht durchaus klar
Dann vielleicht war man das mal wieder raus
Und ganz ehrlich vielleicht sollten wir auch den farbverlauf wieder ausmachen realistisch betrachtet ist es so schon besser oder
aber
Oder ansonsten weil du kannst dir die themes angucken auf der offiziellen seite ich glaube wenn super seriös sein muss dann eher sowas hier
Ja dann sowas
Das sieht das sieht natürlich seriöser aus
Default ist das hier
Wenn das default gar nicht mal so toll wir haben modern verwendet
Gibt es auch rocket das ist das was ich immer hatte dass das finde ich hässlicher
Vintage
Also vintage das kannst du vergessen humley digo was was auch immer ein humley digo ist
Das geht eigentlich auch klar
Ja und das ganze das ganze gibt es natürlich dann auch noch in
Alle themes gibt es in dark und light ich finde dass das hier geht durchaus klar wenn es wenn es irgendwie so
clean professionell aussehen soll
Seriös ja ich finde das sieht eigentlich recht seriös aus seriös ist eigentlich meistens eher light theme oder
Ganzen seriösen seiten sind light light themed
Solaris gibt es nicht
Aber dafür gibt es
humley digo
Keine ahnung was das sein soll
naja
Gut ich würde sagen da haben wir heute mal richtig krass harten progress gemacht hier
Funktioniert
Gut
Chat ich hoffe euch hat es gefallen
Ich gehe jetzt auf
genug gelabert
War echt nice wir haben seit langer zeit mal wieder progress stream gemacht
Welche UI kits sind easy und schauen sich
Naja material design ist halt so 0815 material design ist so das bootstrap der heutigen zeit also
Ich mag es ja nicht so ja
Naja ich habe es welt schon mal benutzt und ich habe auch schon sachen mit javascript gemacht
Es ist nicht so als hätte ich heute zum ersten mal was in javascript programmiert
aber das stimmt schon also
Ist aber so vorkenntnisse mit mit skeleton ui das nicht
Ich habe aber im vorfeld vom stream auch schon mal reingeguckt also ganz ohne ahnung ist es ja nicht
Jetzt noch schönes mach weiß ich vielleicht vielleicht gehe ich noch eis essen
Gucken wie das wetter so ist naja
geht so
Was war das gerade für ein pause knopf mit dem du alles geschlossen hast das hier
Das ist der suspend knopf von forever workstation
Ich habe ja mein linux auf dem zweiten test also auf dem zweiten desktop unter windows laufen in der vm
Das ist vor allem ein workstation
also wenn du linux laufen lassen willst unter windows
Ein vollwertiges linux komplett mit allem auch desktop und so
Nicht mit wsl rumquälen willst das ist nicht verkehrt so leute ich gehe jetzt auf bis den
cu
vm wer workstation

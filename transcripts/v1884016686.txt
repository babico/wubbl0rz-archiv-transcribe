Bäschen alter Bäschen
Leute ich bin schon vor euch da, könnt ihr euch das vorstellen. Siehste, ja
Normalerweise mache ich immer streamen an und bin dann noch ein, zwei minuten weg, aber heute bin ich vor allen leuten da
Nicht dass es irgendwas bringen würde oder so. Guck mal, ich bin sogar vorm
vorm 7LQRS und vor allem vorm Feujai da
Der ist ja immer am Start, immer, immer instant
Ich glaube ich muss gleich noch mal runter was holen
Ach Lars soll das? Okay, also ich meine ich bin ja Leetspeak in verschiedenen Varianten gewöhnt
Aber das konnte ich jetzt nicht erraten
Leute habt ihr diese
diese
diese
diese
diese
dieses
dieses
dieses
dieses
dieses
dieses
dieses
dieses
diese
Geschichte bei Azure mitbekommen
Mit diesem geleakten Signing Key
Wahrscheinlich, wahrscheinlich habt ihr das mitbekommen
Das habe ich sogar von euch erfahren
Irgendjemand hat letztens im Stream geschrieben, Max hast du das schon bei Azure
In Azure mitbekommen, da habe ich gedacht, nö habe ich nicht
und damals war das auch nicht so ein großes Ding
Da ging es im Prinzip nur darum, dass Leute irgendwann
Nee, was heißt nicht so ein großes Ding
schon darum, dass Leute irgendwelche Outlook-Konten, E-Mails lesen konnten.
Aber jetzt hat sich herausgestellt, da ist noch viel mehr gewesen mit diesem Sign-In-Key.
Da konntest du ja quasi für nahezu alle Cloud-Services, konntest du dir Accounts,
nein, nein, nein, nicht wirklich Accounts erstellen,
konntest du dir irgendwelche bestehenden Sachen signen oder so.
Ja, ganz, ganz weirdchampig.
NoLimitXO, dankeschön für den massive 30 Monats Prime-Sub.
Ne, ist gar kein Prime-Sub, Leute, kein Prime-Sub.
Das ist ein richtig echter Neovim-Stream, äh, heute nicht.
Neovim-Stream machen wir vielleicht am Wochenende.
Ich glaube, es ist, es ist soweit.
Ich glaube, wir müssen, ich glaube, wir müssen echt,
ich mache mal ein paar Package-Updates,
dass wir top aktuell sind für den Neovim-Stream am Wochenende.
Ich habe heute, ich habe heute erfahren auf der Arbeit,
da musste ich echt, da musste ich echt kecken.
Aber das erzähle ich euch nachher, wenn mehr Leute da sind.
Ich kann euch nicht genau sagen, welches Produkt und wo,
und wo ich, wo ich arbeite, erzähle ich ja eh nicht,
aber wieder lustige Story.
Was teilweise so im Business-Enterprise-Umfeld
wieder für merkwürdige Software eingekauft wird.
So, ich mache mal kurz Package-Update,
schade nie, Bind wird aktuell.
Ich wusste gar nicht, okay.
Alter, ernstgemeine Frage.
Chat, warum habe ich Bind installiert?
Macht doch eigentlich überhaupt keinen Sinn.
Das ist vielleicht, ist das vielleicht Abhängigkeit
von Network-Manager oder sowas?
Warte mal, das kann natürlich sein,
wir kriegen das auch gleich raus.
Nö, ich könnte, ich könnte es einfach so uninstallen.
Okay, was auch immer.
Wir updaten das jetzt.
Bind installiert zu haben, ist nie verkehrt.
Okay, Leute, was ist Lip Placebo?
Was, was, was macht das?
Ah, das ist VLC.
Okay, irgendwas in der Richtung.
Take Viagra, Die Heart, IQ++, ja, so sieht es aus.
Ist auch enorm notwendig wieder.
Sehe ich schon.
Chat ist die letzten paar Tage.
Gab es ja keine Prime-Subs, war ich ja nicht online,
ist von absolutem 5-Hat zu 3-Hat mutiert.
Da wird es jetzt langsam Zeit, wieder zu upgraden.
So, ich mache mal alle Package-Updates durch,
dann restarte ich DVM.
Dann erzähle ich euch was.
Aus der Business-Enterprise-Welt.
Du hast kein Prime-Sub mehr.
Ich habe gehört, das lässt sich relativ einfach fixen.
So, Reboot, zack, hab ich.
Alles andere ist durch, gell?
Ja, pass auf, Reboot, bam.
Pepo, ah ne, Hintergrund ist schon weg,
aber gleich, gleich ist er wieder da.
Timschu, moin.
Flamongo, danke für den Sub, 15 Monate.
Huge Subscription.
Guck mal, der Pepo geht gleich ins Bett.
Dabei ist es 19 Uhr.
Vielleicht sollte man im Sommer das doch ein bisschen später einstellen.
Wobei der Max hat ja ein Skript gebaut,
was das später einstellt, anhand der aktuellen Uhrzeit.
Also anhand der aktuellen Uhrzeit und wann Sonnenaufgang, Sonnenuntergang ist.
Aber das ist mir too advanced.
Will ich nicht.
Ja, also ich erzähle euch jetzt mal was.
Also ich habe, ich habe heute wieder echt, muss ich mir wieder an den Kopf greifen.
Business-Enterprise-Software, ihr kennt mich ja.
Ich liebe ja prinzipiell Business-Enterprise-Software.
Ja, vor allem welche mit Supportvertrag,
wo jedes Mal, wenn du Support, ihr kennt es ja vielleicht.
Jedes Mal, wenn du ein Support-Ticket aufmachst, dann als Antwort kommt.
Ah, wir kennen ihr Problem und dann wiederholen sie das,
was du geschrieben hast, einfach noch mal in anderen Worten als Tickets,
Ticket-Response und schreiben dann unten drunter.
Wenn ihnen das geholfen hat, dann schließen sie bitte das Ticket.
Und das sind die besten,
das sind die besten Support-Ticket-Systeme immer.
Oder besten Support-Dienstleistungen, die es immer gibt.
Also ich habe das bei Microsoft eigentlich nur gesehen.
Ich habe noch kein einzig normales Microsoft-Ticket gesehen,
was ordentlich bearbeitet wurde.
Und ich habe gehört, dass Oracle auch nicht so geil ist, was das angeht.
Aber ich persönlich habe noch nie einen Oracle-Call aufgemacht.
So, aber heute Business-Enterprise-Software, Leute, und zwar
muss ich mal vorstellen.
Also ich meine, ich arbeite bei einer Versicherung
und die sind schon teilweise ein bisschen oldschool.
Die haben intern noch für Deployment und Software-Builds
und sowas haben die noch ein Jenkins.
Kennt das noch jemand von euch?
Ja, wahrscheinlich.
Das ist eigentlich immer noch so mit das bekannteste CI-CD-Tool.
Jenkins.
Gibt es eigentlich eine Demo online,
bevor ich das mit dem Mist nicht installieren muss?
Ja, egal. Also Jenkins.
Gab es da, gab es da immer noch.
Ich persönlich, ich mag Jenkins eigentlich, auch wenn das Web-Interface,
ich glaube, das ist schon das etwas neuere Web-Interface hier,
auch wenn das Web-Interface in der Tat etwas oldschool aussieht.
Aber es geht mittlerweile.
Es ist immer noch besser als dieses fast ohne CSS gestylte Ding von früher.
Es ist ganz okay.
Zumindest wir haben noch einen Jenkins.
So, das ist jetzt vielleicht nicht das Neueste
und das ist vielleicht auch nicht mal das geilste in allen Bereichen.
In der aktuellen Zeit.
Aber eins muss man sagen Jenkins an sich funktioniert.
Es mag vielleicht eklig zu administrieren sein auf Dauer,
aber prinzipiell funktioniert Jenkins ganz gut.
So, und jetzt sind sie auf die glorreiche Idee gekommen.
Also ich habe mir das heute mal so ein bisschen historisch erzählen lassen,
weil da war ich.
Ich bin erst seit vier Monaten da
und wir haben jetzt ein anderes Tool gekauft für Deployment,
weil irgendjemand auf die Idee gekommen ist, hat gesagt,
ne, mit Jenkins ist das nicht mehr so modern
und wir wollen jetzt was Neues haben.
So, aber anstatt sie mal geguckt haben,
was wir gut gebrauchen können, anstatt sie mal geguckt haben.
Was gibt es denn?
Anstatt dass sie mal ein bisschen was haben ausprobieren lassen,
haben sie sich irgendwie vier, fünf Dienstleister einbestellt,
wo dann die Marketing Abteilung richtig auf Putz hauen konnte
und erzählen konnte, was sie, warum ihr Produkt das geilste ist.
Und danach haben die schlicht und ergreifend das,
ihrer Meinung nach geilste, gekauft.
Und nun ja, dieses Tool hat keine API,
außer, jetzt haltet euch fest, das ist ein neues Tool,
was immer noch verkauft wird, was immer noch verkauft wird.
Es hat keine API, außer.
Nein, nein, nein, Leute, nein, Leute, nein, nein, nein, es ist okay.
Ich lasse euch raten.
Ich lasse euch raten.
Mal gucken, ob ihr draufkommt.
Mal gucken, ob ihr draufkommt.
Ich gebe euch einen Tipp, wenn ihr nicht draufkommt.
Also es ist kein XML-Zaub.
Ich weiß ehrlich gesagt gar nicht,
was es protokollmäßig unter der Haube ist,
weil das hat keine API, ich habe ja gesagt, es hat keine API,
aber es hat keine API im klassischen Sinne.
Es hat nur eine Client Library
für eine Programmiersprache,
die dann unter der Haube irgendwelche Request schickt oder so.
Irgendwas von IBM oder Oracle?
Nein. Nein. C? Nein. C++? Nein. Cobol auch nicht.
Denkt dran, wenn ich das so sage, es ist Software,
die aktuell verkauft wird und übelst angepriesen wird von der Marketingabteilung.
Die einzige Client Library, Schnittstellen, die es gibt.
Nee, ihr müsst so im Delphi.
Nein, nein, nein, nein.
Im Python, Python wäre ja schön.
Ihr müsst mal so um das Jahr 2000 bis 2005 vielleicht,
weil ihr seid, ihr seid alle falsch.
Ich sage euch, ich sage euch, was es ist.
Es ist Perl.
Perl. Ja, MonkaGiga.
Es ist Perl.
So und jetzt es wird noch besser.
Es wird noch besser.
Also die haben die Software gekauft und die.
Man kann da drin halbwegs gut Deployments definieren und Abläufe und so was.
So, das hat auch so ein paar ganz coole, ganz coole Plugins.
Das Tool. Also du kannst zum Beispiel darüber Helm Deployments machen
oder du kannst.
Was hat es? Irgendwelche Docker Registry Pullen, Pushen
und es hat ein paar Plugins, die ganz praktisch oder oder Repos auschecken
und so was.
Also im Prinzip das, was was GitHub Actions auch kann, nur in viel umständlicher
oder GitLab CI oder meinetwegen auch Jenkins.
Oder was ist denn da sonst auch so beliebt?
Travis war es früher.
Was? Was? Was?
Was verwenden wir denn heute, wenn man cool ist für für CI-Tools?
Für Kubernetes fällt mir Argo CD ein, wobei das reines Deployment ist
und mit CI nichts zu tun hat.
Fällt mir so viel, fällt mir das aktuell gar nicht ein.
Drone gibt's noch.
Was sind da aktuell gerade so?
Azure DevOps.
Ja, genau, ja, zumindest das das Tool hat ein paar Plugins
und das ist das ist mit Plugins ist das eigentlich ganz cool.
Aber und jetzt kommt und jetzt kommt der KW-Moment schlechthin.
Die haben das Tool gekauft,
wahrscheinlich, weil sie, wie gesagt, die Marketing Abteilung angepriesen hat.
Aber dann haben sie gesagt, die Plugins dürfte nicht verwenden.
So und die Logik dahinter, warum man die Plugins nicht verwenden darf, ist die.
Nee, nee, nee, nee, die Plugins sind offiziell vom Hersteller
und werden ja gut, es gibt bestimmt noch ein paar Community Plugins,
aber die sind offiziell vom Hersteller.
Die werden halt über so einen
ich nenne es mal so einen so einen Store, so einen Repo werden die ausgeliefert.
Aber das ist kein Ding.
Nee, nee, nee, nee, das ist gar nicht das Geld.
Ist gar nicht das Geld, weil.
Nee, nee, nee, nee, nicht das Geld.
Jetzt erzähle ich euch mal Business Enterprise wirren, warum das nicht geht.
Und zwar nach dem Kauf des Tools
hat dann fragt mich nicht, warum das nicht vorher stattgefunden hat,
hat dann die Abteilung für Security gesagt.
Ja, Moment, bei diesen ganzen Plugins können wir doch gar nicht verifizieren,
was sie machen.
Vielleicht ist da irgendein Update von einem Plugin Malware verseucht.
Also wir gestatten euch nicht, Plugins zu verwenden.
So und jetzt haben wir ein Tool gekauft und das Einzige ist es kein Spaß.
Leute, ich habe heute ich habe heute unsere Deployment Pipeline gesehen.
Da muss ich mir am Kopf greifen.
Kein Spaß, weil ich erzähle.
Das Einzige, was in diesem Tool aktuell gemacht wird, sind Bash Scripts,
mehrere Steps, Bash Scripts hintereinander
und dafür ein eigenes Tool, was nur eine Perl API hat.
Das macht überhaupt keinen Sinn.
Ich habe ich habe heute die Deployment Steps gesehen.
Das ist Perl Script.
Das ist nicht Perl Script.
Das ist Bash Script 1 an Bash Script 2 an Bash Script 3 an Bash Script 4
an Bash Script 5 und dann ist er irgendwann fertig.
So habe ich die Bash Scripts mal aufgemacht, was da drinne steht.
In den Bash Scripts, weil wir keine Plugins,
beziehungsweise die Leute, die sich drum kümmern,
weil die keine Plugins verwenden dürfen.
Ups, weil die keine Plugins verwenden dürfen,
steht dann in dem Bash Script ernsthaft sowas drin wie Helm Repo Add.
Helm Repo, frag mich nicht, sonst was.
Helm Repo Pull, die ganzen Dinger.
Und irgendwann kommen dann Helm Upgrade Install, bla bla bla.
Dann irgendwelche komischen Bash Scripts und noch viel geiler,
noch viel geiler, man kann in diesen komischen Build Steps
nicht mal richtig inline Bash schreiben.
Man muss das in so einem Jaml Dialekt schreiben
und muss immer unter exec hier Bash Scripts drunter schreiben.
Es ist es ist wirklich der allergrößte Shit.
Ich habe keine Ahnung, wer das gekauft hat und wer gedacht hat,
dass das eine gute Idee ist, Alter.
Ja, ja, so sieht es aus Business Enterprise Software.
Oder besser gesagt, immerhin keine Perl Scripts.
Das kommt noch. Das kommt noch.
Ich habe mir schon ernsthaft überlegt, ob man nicht vielleicht
irgendwelche Secrets damit also über die API befüllen könnte.
Aber wisst ihr was?
Ich werde keine, also ich werde definitiv keine Perl Sachen programmieren dafür.
Also damit fange ich nicht an.
Ich kann kein Perl programmieren.
Ich habe ich habe zwar die ganzen Jahre
über schon sicherlich mal ein, zwei Zeilen Perl programmiert, aber nicht.
Das ist nichts, weil also Perl werde ich garantiert nicht machen
und werde ich auch nicht lernen.
Ich werde eher gucken, dass ich vielleicht von denen
irgendein Command Line Tool finde und mit sniffen kann,
was das für API Calls macht unter der Haube und dann ist gut.
Also das, das werde ich, das werde ich nicht machen.
Das glaube ich nicht.
Ganz ehrlich, die sind, die sind bei uns so krass Security mäßig,
also nicht Security, das ist falsch, aber so Compliance mäßig am Start,
was Geldwäsche, Insider Handel und so Gefälligkeiten und Sachen angeht.
Also wenn, wenn, dann müsste das alles ganz furchtbar versteckt laufen.
Aber ich glaube nicht, dass das irgendjemand da macht.
Ich glaube, die hatten einfach nur eine gute Marketing Abteilung.
Die haben so eine gute Marketing Abteilung, haben ein scheiß Produkt.
Ja, das kommt mir echt so vor.
Also im Prinzip haben wir einen teuren Bash Script Runner gekauft.
Chat so in die Frage, falls ihr in dem Bereich tätig seid.
Was ist euer Lieblings so Deployment Tool?
Also ich persönlich mag ja GitHub Actions für alle, für alle Sachen,
was Continuous Integration und ein bisschen Deployment angeht.
Wenn es, wenn es, ich wollte es gerade sagen, wenn es Kupernetes ist, mag ich Argo CD.
Flux ist aber auch nice.
Also beim alten Arbeitgeber hatten wir Flux oder wahrscheinlich sagt man offiziell Flux.
Aber ich nenne es einfach mal Flux.
Hatten wir Flux und ich habe selbst schon viel mit Argo CD rumgebastelt.
Ja, kann man auch machen.
Also das sind tatsächlich auch so meine.
Zählt Ansible?
Ja, klar.
Ich meine, Ansible ist jetzt nicht wirklich ein Tool, was rein für Deployment gedacht ist
und da vielleicht jetzt auch nicht unbedingt
die die einfachsten und besten Möglichkeiten bietet.
Aber wenn man sonst alles in Ansible macht und Deployment bei euch ist,
SCP ein paar Sachen auf dem Server kann man das auch mit Ansible machen.
Warum nicht? Das kenne ich nicht.
Okay, ich sehe schon, Chat ist wieder Pfeifert.
Aber aber noch nicht Pfeifert genug.
Es geht, es geht immer noch mehr Pfeifert.
Aber das Gute ist, glücklicherweise ist bald der erste.
Beim ersten werden die, wenn die ganzen Prime Subs wieder frei,
dann steigt der IQ wieder.
Aber ich muss jetzt mal noch sagen,
man rechnet, man glaubt es ja kaum.
Man glaubt es ja kaum.
Aber wer hätte erwarten können,
wer hätte erwarten können, dass sich viel streamen lohnt?
Also seit ich mir nicht immer überlege,
was ich im Stream machen könnte und wenn ich nichts habe,
einfach nicht streamen gehe.
Früher habe ich, haben wir zu 90 Prozent im Stream Pfeifert Sachen gemacht.
Und wenn mir, wenn ich gerade kein Thema hat, habe ich einfach nicht geschrieben.
Aber seitdem ich regelmäßig streame,
habe ich so viele Subs, wie ich schon nie gehabt habe.
Mehr als letztes Jahr Weihnachten.
Also ich schon, ist schon nice, ja.
Schön, dass ihr übrigens alle immer so fleißig hier am Pfeifert chatten seid.
Ich habe eh, und ich will nicht schleimen, aber ich muss echt sagen,
wenn ich meinen Chat vergleiche mit irgendwelchen anderen Chats auf Twitch,
dann ist hier deutlich weniger Chatting am Start,
sondern mehr Pfeifert Chatting.
Also weniger 3Hat Chatting, mehr Pfeifert Chatting.
Natürlich nicht immer.
Der Chainover zieht den Durchschnitt wieder ein bisschen runter,
aber im Großen und Ganzen ist das so.
Chainover ist Arch-User.
Ah, okay, dann, dann,
dann überlege ich mir das noch mal.
Arch, by the way.
Aber, aber das ist nur in Kombi mit i3.
Hast du Arch und i3?
Dann, dann überlege ich mir das noch mal.
Chainover, ich glaube dir kein Wort.
Du erzählst das seit Jahren schon, dass du angeblich Herbstluft WM verwendest.
Ich wette mir, du hast es nicht einmal ausprobiert.
Du schreibst das einfach nur, weil du den Namen lustig findest.
Ich bin mir bei Chainover relativ sicher, dass es so ist.
Ich kann nicht erklären, warum, aber
ich kann es mir bei ihm einfach gut vorstellen.
Nun ja,
soviel, soviel zum Thema Perl-RP und Bash-Runner.
Ja, diese, diese, diese Windows-Geschichte beziehungsweise diese Azure-Geschichte
habt ihr wahrscheinlich mitgekriegt.
Wollte ich jetzt, wollte ich jetzt gerade noch mal was zu sagen.
Ja, bla, bla, bla.
Ja, Microsoft gestohlen, das war schon vor vier Tagen, ich weiß.
Aber hat es bei euch, hat es bei euch größere, größere Wellen geschlagen?
Wenn ich mal so fragen darf.
Also ich kann sagen, dass es bei uns
ein bisschen Wellen geschlagen hat.
Aber wir sind ja glücklicherweise zum größten Teil haben wir nichts in Azure
und ein paar kleine Sachen, aber nichts Wildes.
Und dementsprechend war das bei uns nicht so schlimm.
Ja, man muss sich aber mal überlegen.
Microsoft ist erstaunlich ruhig darum.
Ich meine immerhin, also ursprünglich ging es ja nur darum,
dass du fremde E-Mails lesen konntest.
Da konnte man sich noch sagen, ja gut, wenn man kein Outlook verwendet
beziehungsweise keine Exchange,
dann juckt es mich nicht großartig.
Aber mittlerweile steht es steht ja auch so hin,
dass es ein Master Key für große Teile der Microsoft Cloud war.
Also sprich, dass man sich Tokens signen konnte.
Ich bin mir nicht ganz sicher, ob ich das noch richtig im Kopf habe,
dass man sich selbst Tokens signen konnte für fremde Services.
Das war natürlich ein bisschen doof, weil da kommt man auf fremde Services
zugreifen.
Das wird noch Nachwirkungen haben.
Ich denke auch vor allem, vor allem und das ist so ein Ding,
wo sich Microsoft echt nicht mit Ruhm bekleckert.
Microsoft ist erstaunlich ruhig, was das angeht.
Haben die eigentlich schon mal wirklich ein richtig großes,
detailliertes, offizielles Statement dazu gebracht?
Also ich habe nichts von mitgekriegt.
Ich will nicht sagen, dass es das nicht gibt.
Guck mal, hat Azure überhaupt ein Twitter Account?
Azure und Azure Support Cakeweight
Official Azure Account
Off Official.
Okay, da ist der ist Massive Official.
Der letzte Post ist zwei Jahre.
Ja, nice.
Wer Pog Pog Official?
Hä? Warum sind denn meine?
Warum sind denn die Tweets nicht alphabetisch?
Nicht alphabetisch.
Ihr wisst, was ich meine.
Chronologisch.
Warum sind die so pepega durcheinander?
Alter Twitter.
Mein Gott, warum ist Twitter so beschissen geworden
innerhalb von einer, ein, zwei Wochen jetzt?
Ich meine, das hat ja schon in letzter Zeit komische Dinge gemacht.
Aber seit diesen Sachen mit mit Du musst dich einloggen.
Und wobei das wurde jetzt ja wieder zurückgenommen.
Und also langsam ist echt so.
Ich habe auch gar keinen Bock mehr auf Twitter.
Ihr wisst, ich bin der übelste Hardcore Twitter Fan gewesen.
Ich habe x.com.
Ja, genau.
Ja, ich meine x, korrekt.
Ich habe immer gesagt, Twitter ist das beste Social Network.
Weil sie wirklich Social Network ist.
Aber mittlerweile geht mir.
Ich habe gar keinen Bock mehr auf Twitter, was zu posten.
Guck mal, ich habe ich habe schon ewig nichts gepostet.
Manch einer wird jetzt sagen, Max, das stimmt nicht.
Chat, seid ihr drin?
Was ist das für?
Ich persönlich vermute, das ist ein Update Check von von Chromium.
Seit wann liegt Chrome dann auf dem Desktop?
Seitdem ich da installiert habe.
Ich cancel das jetzt einfach.
Er funktioniert immer noch alles gut.
Ich vermute, es war irgendein Update Check oder so was.
Keine Ahnung, das auf dem Desktop.
Nein, nein, nein, das ist absolut.
Das ist ja auch nicht Chrome, das ist Chromium.
Das habe ich selbst auf dem Desktop installiert.
Deswegen ich gehe davon aus, dass es irgendein Update Check.
Wie findest du den neuen Twitter-Namen?
Richtig dumm.
Ganz ehrlich, Twitter war so ein griffiger,
bekannter Name mit einem simplen, guten Logo.
So ein richtiger, richtiger.
Guck mal, ich poste nichts mehr auf Twitter.
Jetzt ist das Zeug nicht immer richtig chronologisch.
Das ist ja, das ist komplett.
What the fuck?
Das ist komplett unusable einfach.
Kann es sein, dass das irgendwie die Weiterleitung war?
Nein, das meinte er und das ist kein Abrill-Scherz.
Leider, leider.
Also ich finde es richtig kacke.
Ich habe Twitter schon eine ganze Weile gar nicht mehr richtig verwendet,
weil ich seit den letzten, seit so ein, zwei Wochen,
seit den letzten Änderungen keinen Bock mehr habe.
Ja, richtig, richtig hängen geblieben.
Also bis jetzt war es ja noch, soll ich sagen,
bis jetzt konnte man sich noch drüber streiten.
Aber jetzt ist es für mich auch umgeschlagen zu,
es wird immer beschissener.
Ja, Moment, der hat ja gar keine 40 Milliarden in den Sand gesetzt.
Twitter hat sich ja quasi selbst gekauft.
Ich weiß nicht, ob ihr, ob ihr das mitbekommen habt,
wie die das gemacht haben.
Und zwar, der hat sich, also grob, grob gesagt,
und ich bin jetzt ja, was diese Finanzsachen angeht,
also Disclaimer ist, da bin ich nicht der Oberchecker,
auch wenn ich meine Ausbildung im BWL-Bereich gemacht habe,
aber ich habe trotzdem keine Ahnung davon.
Es war irgendwie so, der Kerl hat gesagt,
ich will Twitter kaufen, hat sich Geld geliehen
und hat dann diese Kredite aber auf Twitter laufen lassen.
Also im Prinzip hat sich Twitter selbst gekauft.
Oder hat die dann umgewidmet auf Twitter oder so,
keine Ahnung, wie das genau funktioniert.
Zumindest im Endeffekt hat sich Twitter selbst gekauft.
Ja, das ist genauso wie Go.
Wie wenn man Go sucht als Programmiersprache,
da findet man auch immer so viel.
Übrigens, habt ihr gesehen, wir haben ein neues Emote, beste.
Indonesien hat xEchts? Warum?
Twitter heißt jetzt x, in Indonesien ist x.com aber geblockt,
weil frühere Domain-Nahmen gegen Pornografie
und Glücksspielgesetze verstoßen haben.
Haha, geil.
Klingt aber auch ehrlich gesagt so.
Ich finde x persönlich wirklich ein blöder Name.
Im Vorfeld, ja, okay, Twitter ist jetzt,
ich meine, Twitter hatte vielleicht nicht mal den allergeilsten Ruf.
Mit allem, was da so die letzten,
Twitter hatte ja den Ruf, die Plattform für alle Leute,
die sich gerne empören und rumnerven wollen.
Aber trotzdem, Twitter war halt was,
das kannte, wie jemand im Chat eben gesagt hat,
das kannte prinzipiell jede Oma.
Jeder wusste, was Twitter ist, was ein Tweet ist.
Und das Logo war gut.
Du wusstest genau, was dich erwartet irgendwie.
Also, ich fand Twitter, ich habe es schon oft gesagt,
ich fand Twitter war das beste Social-Messaging-Portal,
was es gegeben hat.
Tja.
Es ist aber schon echt hängen geblieben.
Es ist wirklich richtig,
extrem hängen geblieben ist das.
Can we have this?
Ja, ja, ja, ja.
Können wir machen.
Gute Idee.
XDing.
Habe ich geedet.
Ahiko-san.
Da ist er am Start.
Danke für den Sub.
Ja, das habe ich auch gehört.
Wer weiß, was da passiert.
Ich fände es auf jeden Fall eine blöde Idee.
Richtig roidisch,
wie der Friseur früher gesagt hätte.
Ja gut.
Aber was soll man machen?
Es lässt sich ja nicht ändern.
XD.
XD.
Nun gut.
Das finde ich gut.
So habe ich auch geedet.
Wir haben eindeutig,
wir haben eindeutig zu wenige
Kack-Emotes.
Wobei ich ja der Meinung bin,
dass Kack-Alu extremely underrated ist.
Ja, das muss auch mal sein.
Ich verwende jetzt fast ein Jahr.
Na gut.
Aufgerundet.
Ich verwende jetzt fast ein Jahr.
Windows 11.
Und glaubt ihr,
ich kann mir immer noch nicht merken,
wo ich meine Mikrofon-Lautstärke einstelle.
Ich gehe immer hier hin.
Und dann will ich auf Input-Device
klicken und stelle fest,
das geht nicht.
Welcher Microsoft-Entwickler ist auf die Idee gekommen,
Volume-Lautstärke,
Input-Device-Changing
hier rein zu machen,
aber
Input-Lautstärke hier rein zu machen.
Da fuck.
Das ist bei Windows,
bei Windows 10 ist es genauso bescheuert.
Bei Windows 10 hast du
aber immerhin noch, passt mal auf,
das hast du nämlich unter Windows 11 auch noch.
Bei Windows 10 kannst du unten über diese Leiste
glaube ich zumindest immer noch in,
wo ist denn das Ding jetzt?
Audio. Hier, Sound.
Audio.
Manager. Da kriegst du immerhin noch
diesen Dialog.
Und hier kannst du ja auch noch ganz andere Sachen einstellen,
die du glaube ich so in Windows
gar nicht einstellen kannst.
Bin mir gar nicht sicher, ob man dort
gescheit zum Beispiel einstellen kann.
Die ganzen Sachen. Und das brauche ich,
weil mein Audio-Interface auf 48
Kilohertz läuft, anstatt auf 44,1.
Ja, ihr wisst,
ihr kennt meine Meinung dazu.
Ich finde Windows XP war das letzte Windows,
was so vom Gesamtkonzept her irgendwie stimmig war.
Danach war es
einfach nur aufeinander draufgeklatscht,
draufgeklatscht, draufgeklatscht.
Und teilweise Sachen, ihr habt mein bestes
Beispiel für wie
zusammengeflickt Windows eigentlich ist,
ist das hier, guckt.
Jetzt ist es ja noch schlimmer geworden.
Also einmal dieses hässliche Menü hier.
Und dann
Customize
Icon.
Und da haben die Icons drinnen,
guckt euch das mal an, die haben 50 mal
den gleichen Ordner drinnen und die haben Icons drinnen.
Hier, guckt euch das mal an.
Das sind
Icons von Windows 3.11
und Windows 95 und sonst was.
Und alle Icons,
ausnahmslos, ohne Mist, alle Icons
hier drinnen sind einfach nur
hässlich. Einfach
nur hässlich, diese Icons.
Okay, es ist übrigens auch
very important,
dass das Ausrufezeichen
hier 4 mal drinnen ist.
Oh, jawoll.
Das brauchen wir, da haben wir drauf gewartet.
Naja.
So ist es halt.
Ja, ist wirklich so.
Aber guck mal, warum muss ich in irgendwelche Registry-Dinger?
Ich kenn auch die Leute, die sagen,
ja, geh auf GitHub und
installier dir, wie heißt das Ding, Windows
11 Tweaks
oder irgendwie sowas.
Nee.
Ach, keine Ahnung, ich hab vergessen hier,
so, hier.
So Zeug und so.
Nee, mich nervt das.
Warum kann man nicht so elementare
Sachen ordentlich in Windows integrieren?
Also, mein Lieblingsbeispiel,
wo ich einfach
immer bringen muss, ist das hier.
Warum?
Also, erst mal, was ist
die Existenzberechtigung von diesen komischen
Kack-Widgets? Und verwendet
irgendjemand von euch, Chat, Chat,
ehrlich, seid ehrlich, habt ihr schon
jemals diese Chat-Funktion
hier benutzt? Oder
Widgets?
Und daraufhin,
hat man die Kopierung
von Icons abgeschafft. Guckt euch das
an. Mein Bildschirm ist einfach zu
60% nicht benutzt.
Einfach nicht benutzt. Und ich kann nichts
dagegen machen. Warum brauch ich diese
Kack-Umschalt-Dinger? Ich will einfach Fenstern nebeneinander
haben mit einem Titel, dass ich weiß, was Sache
ist. Ja, glaub
ich dir sofort.
Bei Teams blickt da eh keiner
durch bei Microsoft, wie da, warum da
wie was geht. Kommt
in der neuen Version wieder? Jetzt wirklich?
Haben sie das schon gesagt, dass du Sachen
kopieren kannst? Hat nur
zwei Jahre gedauert.
Oder drei. Seit wann war Windows
11 Release?
Ist ja auch schon ein bisschen her. Hier, guck mal,
2021. Schon zwei Jahre her.
Fast
richtig hängen geblieben. Das stimmt
wohl.
Nun gut, ähm, Chat.
Oh, GLS
lang. Was ist das?
GLS lang.
Ah, OpenGL
Gedöns.
Ich weiß nicht, warum ich das inszeniert hab.
Wahrscheinlich für
das allerwichtigste Programm ever unter
Linux. GLX Gears.
Es wird Zeit für GLX Gears mit
Raytracing, würde ich sagen.
Das geht doch bestimmt, oder? Das hat doch bestimmt schon
irgendjemand gemacht. GLX Gears
mit In-Web-Assembly.
Nö.
Ja, anscheinend nicht.
Corgis.
Mehr Emotes.
Nö, Leute.
Wobei, das ist das letzte
Emote, was ich heute hinzufüge.
Keck Bros.
Wir haben einfach zu viele
Keck Emotes.
Keckse
ist auch ziemlich
underused.
Nun ja, also.
Oh, guck mal, was das...
Postgres in 100 Sekunden, Leute. Auf geht's.
Let's go.
Sekunde, ich muss ja die Musik ausmachen.
Postgres.
Jetzt kriegen wir es, jetzt kriegen wir es
erklärt. Fireship.
Fireship ist ein richtiger
POG-Channel.
Der hat's wirklich verdient mit 2,3
Millionen. Es gibt viele
Channels, da will ich nicht sagen
so nach dem Motto, oh ne, die haben das nicht verdient,
die hätten andere kriegen sollen, aber es gibt
Channels, da sag ich,
ich verstehe nicht, warum die so viele
Subscriber haben, warum die Leute das gerne gucken.
Da bin ich vielleicht auch oftmals zu boomer für.
Aber Fireship, finde ich,
hat's komplett verdient
und ich kann's auch nachvollziehen.
Es gibt ja noch ein paar andere Channels, die Videos
so in diesem Style machen, aber Fireship
hat's irgendwie perfektioniert
schon vor einer Weile.
Ja, die hab ich mal angefangen zu gucken,
aber
weiter geschaut.
Oh, guck mal, noch ein neues Video.
Schocking Decline of Stack Overflow.
Lass mal kurz
da mal gucken. Postgres, also
meiner Meinung nach
beste Datenbank.
Postgres kann einfach
alles, was man so braucht.
Postgres ist quasi der Giga-Chat
unter den Datenbanken.
Hatten wir nicht mal
Chat SQL quasi. Moment.
Ich hab da so eine Idee.
Auf die Idee ist doch bestimmt schon jemand mal gekommen, oder?
Moment. Es gibt noch
nicht Chat SQL.
Woman Seeking...
Okay, wo auch immer ich da...
Wiesbadende.lol
Klingt äußerst
vertrauenserweckend, diese Domain.
Moment, es hat noch keiner Chat
SQL...
Das muss ich mir... Leute,
ich weiß, ich hab zu viele Domains,
aber ich muss mir
nachher Chat SQL reservieren.
Okay.
Aber, wie gesagt,
ich bin der Meinung, Postgres ist einfach schlicht und ergreifend
die beste Datenbank. Du kannst alles machen.
Du kannst in Postgres die...
Ja, nicht Chat.
Chat mit D.
Du weißt doch, was ich meine.
Das ist doch...
Obvious.
Also, du kannst mit
Postgres klassische,
internationale Daten gut abfackeln.
Du kannst mit Postgres
Key-Value-Store NoSQL machen.
Vielleicht nicht so geil,
wie mit einer richtigen, nur dafür
optimierten NoSQL-Datenbank,
aber es geht.
Das ist das Wichtige und es geht relativ gut.
Du kannst Timeseries-Datenbanken
machen in Postgres.
Vielleicht nicht 100% so geil,
Performance und alles top,
wie sowas wie InfluxDB oder
was sonst noch so gibt,
aber Postgres kann es.
Und gar nicht mal so schlecht.
Postgres kann
Fulltext-Search.
Postgres kann
Substring-Fulltext-Search.
Und bestimmt tausend Sachen,
die ich noch vergessen habe.
Postgres hat JSON-Support.
Ich glaube aber, dass sogar SQLite
mittlerweile auch JSON-Support hat.
Richtig nice.
Wenn mich irgendeiner fragt,
Max, was... Oh, das gucken wir uns auch.
Max, was für eine Datenbank
nehmen wir, da sage ich pauschal immer,
wenn ich es entscheiden dürfte,
würde ich pauschal immer sagen, Postgres.
Es sei denn,
es gibt ganz spezielle Gründe,
warum man das Ganze nicht will.
SQLite hat zu wenig Datentypen.
Da fehlt zum Beispiel mein Datumsfeld.
Keine Ahnung.
Das heißt,
SQL und Datenbank-Theorie
ist nicht meine Stärke.
Ich verwende das immer nur
mit irgendeinem DB
oder Mapper-Framework,
sowas wie EF-Core oder so.
Ich verwende selten Datenbanken direkt.
Also wahrscheinlich
wird
Entity-Framework-Core
der Time-Value
wahrscheinlich entweder
als String speichern
oder als Unix-Timestamp
oder sowas unter der Haube.
Ja, DateTime-Functions,
aber es geht ja um ein Datumsfeld.
Also um Datentypen an sich.
Nicht um
eine eingebaute
Funktion zu konvertieren.
Er meint die Radiosignale.
Er meint ja, dass du explizit sagen kannst,
hey, diese Spalte
hat...
ist datatype
Date oder sowas.
Ja.
Wie, gibt's das nicht mehr?
Gibt es nicht mehr?
BlessRNG? Echt nicht?
Okay.
Was hat der BlessRNG-Typ angestellt?
Dass sie ihn entfernt haben?
Ich kann mich da schon gar nicht mehr dran erinnern.
Postgres gucken wir uns jetzt an.
Dass der Racist Sachen erzählt.
Systema, das geht schon
so alles ins eine Ohr rein und ins andere raus.
Die ganze Empörung überall im Internet.
Über alles und jeden.
Dass man sich...
Dass man das gar nicht mehr unterscheiden kann.
Wo war da jetzt was...
Tja, wie soll man sagen?
Was Ernstes? Wo war jetzt einfach nur wieder
Sinnloses aufgeregelt? Ich hab's schon wieder alles vergessen.
Okay.
Okay, also, Postgres.
Wir fangen jetzt nochmal von vorne an.
Es gibt Leute, die sprechen es
Postgre aus. Das irritiert mich immer ein bisschen.
Stonebreaker.
Stonebreaker. Alter, das ist
ein handfester Name.
Actually.
Okay.
Hab ich noch nicht einmal in Postgres verwendet.
Überhaupt, dann nur unter der Haube,
weil das Entity Framework für mich gemacht hat.
Ich wusste nicht, dass Postgres
sowas kann.
Warum will ich Vererbung in der Datenbank machen?
Kann mich da mal ein
5Head-Datenbank-Kenner aufklären?
Alles klar.
Okay.
Das ist tatsächlich
ganz hübsch.
Achso, das Video ist
sponsert. Ja, okay.
Weil, ja.
Ja.
Kenn ich nicht.
Aber schadet ja nicht, mal gesehen zu haben.
Gut, da erkennt man jetzt nicht so
wirklich viel.
UIs sind meistens eh
Wurscht.
Wenn du die Sachen ordentlich verwendest,
dann machst du das selten über irgendwie
ein Webinterface zum rumklicken.
Also da musst du
schon richtig
HighIQ-Datenbank-Stelzer sein,
dass du
sowas machst in der Datenbank, oder?
Ja, das kenne ich.
Das weiß ich, dass Postgres JSON unterstützt.
Das ist tatsächlich ein Feature,
was ich sogar schon benutzt habe.
Und ich finde es mega nice,
dass das immer weiter einzugeht.
Ich glaube, dass MySQL das mittlerweile
auch kann.
Vergebt mich, wenn ich falsch liege.
Und sogar SQLite kann das auch.
Ja, das ist das, was ich meinte.
Du kannst sogar Postgres als Key-Value-Store
missbrauchen. Wobei ich halt denke,
dass es in letzter Konsequenz,
wenn du reines
NoSQL brauchst,
dann ein NoSQL-Datenbank
wahrscheinlich noch einen Ticken besser ist
als Postgres, wenn du in letzter Sequenz
Performance oder
was auch immer man dann wertlegt, braucht.
Aber für den Fall der Fälle, dass man
auch nur eine Sache braucht, die man besser
in der klassischen Datenbank machen kann, ist vielleicht
sinnig, alles in Postgres zu hauen.
Die MySQL-Implementierung
ist extrem langsam.
Ja, ist halt Oracle, ne?
Das ist ne übelst hässliche
Sonntags.
Aber gut, man muss das ja auch
selten von Hand benutzen.
Boah,
da musste aber hart
am SQLen sein
für solche Dinger.
Das sieht ja fast schon ein bisschen aus
wie in der,
sagen wir mal, echten Programmiersprache.
So mit Punktnotation
als Zugriff auf Properties und sowas.
Das fände ich sicherlich auch
cool, wenn ich öfters SQL von Hand
schreiben würde.
Was haben die free?
Lass mal kurz gucken.
Was haben die free?
Ein Projekt,
10 Branches, 3 GB of data
per Branch,
shared compute,
ok, damit machst du jetzt
keine großen Sprünge,
aber zum starten ist es
doch ganz ok.
Ok, komm,
das Video war so kurz, wir gucken noch
eins von ihm.
Schocking Decline of Stack Overflow.
Der meint, dass viel AI
Spam gibt, könnte ich mir vorstellen.
Ja, das gibt es,
und leider ist Reddit, Youtube Comments
und auch viele andere
Foren und
Diskussionscommunities
und sonst was
voll mit sinnlos
auto-generate dummen
Bot-Comments und Antworten.
Die vordergründig so aussehen,
als antwortet einer auf das Kommentar,
stellst du sofort fest,
ah, AI generierter Shit.
So nach dem Motto, passt überhaupt nicht drauf.
Er enthält zwar die richtigen Worte,
aber passt überhaupt nicht drauf.
Was willst du mir sagen?
Früher wusste man wenigstens noch,
irgendein Typ, der nicht richtig schreiben kann,
ist am Start, oder der gerade total besoffen
vom Rechner hängt, ist am Start,
aber heute kannst du eher davon ausgehen,
die Dinger sind AI erstellt.
Das hätte autocomplete in der IDE?
Nee, hat das nicht,
Entity Framework Core hast du wahrscheinlich
autocomplete dann,
wenn du das, wenn du das,
frag mich nicht, keine Ahnung,
wie man das, ob man das mit EF Core
überhaupt abbilden kann, diese
diese Vererbungsgeschichte,
keine Ahnung,
aber ich glaub nicht, dass die IDE das
checkt, die müssen ja,
die müssen ja quasi irgendwie deine IDE connecten,
zur Datenbank,
und die müsste Support für die Postgres
Object Types
oder sowas haben,
und dann müsste es dir autocomplete
in, wenn du ein SQL Query schreiben willst, anzeigen.
Möglich wäre das bestimmt,
ja.
Na, mal gucken, was
er hier erzählt.
Big News!
Gatschi-Buzz.
Was
passiert hier gerade?
Because Aliens?
Ja, hab ich schon mal irgendwo
gehört.
Das stimmt voll.
Wo wir gerade
dabei sind, also
wo man sieht, dass
AI halt öfters mal Plötzchen
fabriziert, und zwar ich hab
heute
ein Kubernetes Minigame gesehen,
auf dem Kubernetes Subreddit.
Ein Game, ich weiß nicht,
ob ich das, wo das war.
Irgendwas mit Fake hieß das.
Ja, wenn die Suche
nicht so kacke wär, in Reddit.
Ah, man.
New. Hä?
Das ergibt überhaupt keinen Sinn,
ich hab das heute gesehen.
Das war, das war
ein Game, da hat jemand Kubernetes
Begriffe AI generieren lassen.
Und du musstest raten,
ob das ein echter Begriff war,
oder ob das ein von
der AI halluzinierter Begriff war.
Und ich sag euch, das war gar nicht
so einfach.
Ohne Stack Overflow
wären wir aufgeschmissen, Leute.
Having high Stack Overflow Rep
is like the ultimate clout for a programmer.
You walk into a C-Sharp Conference
with 100.000 Stack Overflow Rep,
you'll be mobbed by clout chasers,
who would literally do
just to get into your LinkedIn Network.
And when you surpass a million Rep,
people will start to name you.
John Skeet ist ja wirklich,
den Kerl kennt man wirklich,
ich glaub, der ist bei Google
für die C-Sharp Bindings zuständig,
für viele Libraries von denen.
Der ist wirklich bekannt geworden
durch Stack Overflow.
Da gibt's ja schon mittlerweile
John Skeet Memes und alles.
John Skeet ist einfach so ein bisschen
der Programmierer Chuck Norris geworden dadurch.
Aber ich muss sagen,
bevor, also schon bevor
diese ganze AI-Geschichte war,
hatte Stack Overflow ein paar
nervige Sachen.
Zum Beispiel hab ich die ein oder andere Frage
über Google gefunden
und die wurde
dann geschlossen oder, ja,
ich weiß nicht, ob man das geschlossen nennt auf Stack Overflow,
aber ihr wisst, was ich meine,
wenn dann drinnen steht, ah,
das ist ein Duplicate of und dann guckst du dir das Duplicate an
und liest das durch und stellst fest,
nein, das ist kein Duplicate.
Da hat irgendein Mod gesagt,
das ist ein Duplicate, aber es ist kein Duplicate.
Wenn man sich mit der Thematik nicht auskennt,
mag das vielleicht aussehen wie ein Duplicate,
aber ist es nicht. Das hatte ich öfters auf Stack Overflow.
Und,
ja gut, dumme Antworten
gab's schon immer, aber das finde ich
gar nicht so wild. Es gab durchaus auch
mal sinnvolle Sachen,
wo dann Diskussionen
unterbunden wurden oder beziehungsweise
so lang rumgeflamed wurde,
dass die Leute keinen Bock mehr hatten. Also,
so alles rosig war auch
vor AI auf Stack Overflow nicht.
Aber wahrscheinlich ist es nun mal so,
wenn du so eine große Seite hast,
kannst du nicht immer 100% alle
zufriedenstellen.
Der macht, der ist aber richtig gerade
im Sponsoring-Sellout-Game
aktiv.
Der muss sehen,
wie die Kohle reinkommt. Verständlicherweise.
Ah,
das ist übrigens gerade Sponsoring-Sellout.
Ah.
Soll ich euch mal was sagen?
Ich hab die letzten
Wochen
so viel Kubernetes-Config und generell
YAML-Config gemacht,
mittlerweile würde ich
sogar auch bevorzugen, es wäre in
TypeScript.
Auch wenn ich nicht unbedingt mehr
Javascript in meinem Leben brauche.
Aber wenn ihr
mal 800 Zeilen YAML habt
und da irgendwie finden müsst,
wo was nicht stimmt.
Also, das
Problem in YAML ist,
YAML kannst du nicht so einfach
Syntax checken.
Also, du kannst YAML einfach
Syntax checken, aber Fehler in YAML
sind nicht automatisch Syntax-Fehler.
Also, wenn du in YAML
was verkehrt eingerückt hast,
dann kann das durchaus ja gewollt
sein, eine Ebene oben
drüber oder auch nicht.
Das kann ja ein
Syntax-Checker nicht wissen, ob ihr
das Ebene oben drüber haben wollt oder nicht.
Dafür bräuchtest du dann für alles
irgendwelche YAML-Schemas, was es im Endeffekt
so gut wie für nichts gibt.
Heißt das überhaupt Schema bei YAML?
So ein Ding, was sagt, wie
die Dateien aufgebaut sein sollen?
Und vieles ist auch dynamisch, da kann es sowas gar nicht geben.
Deswegen im Endeffekt,
mittlerweile würde
ich wahrscheinlich reine JSON-Dateien
in modernes JSON
was kommentieren. Der einzige Vorteil,
den YAML meiner Ansicht nach hat
versus JSON, sind Kommentare,
die man reinmachen kann.
Und natürlich kann man jetzt sagen,
jedes gültige JSON,
falls ihr das noch nicht wusstet, by the way,
nochmal kurze Clarification,
jedes gültige JSON
ist auch ein gültiges YAML.
Wusstet ihr das, Chat?
Aber nicht jedes gültige YAML
ist gültiges JSON.
Ja. Ich kann euch das
sogar beweisen hier, was weiß ich,
YAML-Parser
online.
Online-YAML-Parser.
Perfekt, ja.
Code-Beautify-
YAML-Parser.
Da gehen wir jetzt mal hin. So, und ich zeige euch das.
Also wir parsen jetzt mal YAML.
Hecke,
einrücken, blub, 1.
So. Wird geparst.
So.
Jetzt kann ich euch übrigens auch mal das Problem
zeigen, was ich meine.
So. Wenn ich das hier jetzt so
einrücke, ist das gültiges YAML.
Dabei habe ich so gemeint.
Oder wenn ich es anders einrücke,
na gut, das heißt blub, das heißt doppelt. Ja, das geht jetzt
an der Stelle nicht.
Also das ist beides gültiges YAML.
Ist es nicht?
Was? Ach so, weil
hier oben was ist. Ja, okay. Aber
ich glaube, man gettet,
man gettet, was ich meine, ja.
Wenn man das dann einrückt.
Man erkennt es halt nicht so genau.
Vielleicht hätte ich es auch hier haben wollen,
vielleicht da. Das kann der Sonntags-
checker halt nicht rauschecken.
Ja, guckt mal. Ich zeige euch mal, dass jedes
gültige Chase ein gültiges YAML ist.
Oh.
Ich glaube, wir sind uns einig,
wir sind uns einig, dass das
eher Jason ist als YAML, oder?
Oder
das, ähm,
ach ne, Moment.
Jason muss gequotet werden, ne?
Hä? Falsch?
Das ist aber, dann stimmt das nicht.
Es ist per Definition so.
YAML ist ein super Set von Jason.
Aber vielleicht kann man das
nicht, keine Ahnung.
Ne, das ist komisch.
Ach so!
Ich glaube, ich hab das ver-
Guck mal, das ist-
Ach, da muss man abschließend das Komma machen.
Guck mal, das ist jetzt ja eindeutig Jason
und nicht YAML.
Guck, YAML
super Set Jason.
YAML ist das super Set
of Jason. Ich meine, wenn das Octopus
com sagt, dann sind wir uns einig, dass das so
sein muss.
Dementsprechend kann man auch, wenn man
keinen Bock hat auf die- Also, was ich ganz gerne
finde ist, hier so, YAML
blub. So, wenn man jetzt
ein Array machen will, in YAML
dann geht das so. Ich persönlich
hasse die YAML Array Syntax.
Weiß nicht, wie ihr das
seht, aber ich mag die nicht.
Also für kurze Sachen, ja.
Da finde ich das hier deutlich angenehmer.
Und ihr werdet feststellen,
das funktioniert. Das muss funktionieren.
Das muss, nachdem YAML
nachdem jedes gültige Jason
auch gültiges YAML ist, muss das
funktionieren. Das muss in jedem YAML Parser
und überall in der YAML Library funktionieren.
So sieht's aus.
Ja, wie bin ich
jetzt eigentlich drauf gekommen?
Ja, also ich hätte nichts dagegen,
wenn mehr
Sprachen, also was soll ich sagen,
wenn mehr Software
sich über irgendwelche
Programmiersprachen, was auch immer
es ist, konfigurieren lassen würden, anstatt
YAML.
Ab einer gewissen Größe
blickt keiner durch.
Wir haben uns doch letztens hier, Moment,
guckt euch das YAML-File mal an.
Und dann sagt mir mal,
ihr blickt da noch durch.
Ja, das ist jetzt ein generiertes.
Von Hand hat das keiner geschrieben.
Aber sagt mir mal, da blickt noch einer durch.
Welche, Moment,
welche Einrückungsebene war
das hier nochmal?
Oh Mist,
ich hab Description 1 zu viel
eingerückt. Oh, oh.
660 Zeilen YAML.
Also da würde ich das in der ordentlichen
Programmiersprache doch bevorzugen.
Wieso schreibst du die Configs nicht
komplett in JSON?
Ja, mach ich teilweise ja.
Nicht komplett, aber so
Sachen wie inline-erase und sowas,
mach ich lieber JSON-erase.
Am liebsten
wär's mir ja tatsächlich,
man würde sagen, ey, wir machen
einen modernen JSON-Dialekt,
der Kommentare kann.
Dann kannst du auch mit anderen Leuten
zusammenarbeiten, denn
du kannst ja schlecht sagen,
hey, wir benutzen YAML, alle benutzen YAML
YAML-Style, nur ich schreib alles
in JSON. Das ist natürlich auch
blöde.
Es ist übrigens tatsächlich ganz praktisch,
wenn man Kubernetes-Ressourcen editieren muss
und keinen Bock hat auf
Einrückung zu achten, dann schreibt man das einfach in JSON-Syntax.
Also, gucken wir mal weiter,
was uns, warum
Stackoverflow sagt.
By the way, das hatte bis jetzt alles noch nichts mit Stackoverflow zu tun,
so richtig.
Blazingly fast.
Ja, auf genug Sellout jetzt.
Genug Sellout.
Oh, 50% ist krass.
Das hätte ich nicht gedacht.
Oh, das ist wirklich viel.
Ich hätte gedacht, dass es weniger ist,
aber 50%.
Und da kommen ja noch
die ganzen Bot-Exes dazu,
die diesen Mist spammen.
Aha.
Naja.
Also, ich frage
Chat-GPT auch mal ganz gerne,
wo ist hier der Fehler
in irgendeinem Ansible-Template
und sowas zum Beispiel.
Wobei man da auch aufpassen muss, dass man nicht irgendwelche Passwörter
und so reinkopiert.
Ich frage Chat-GPT auch mal ganz gerne,
aber ich muss sagen,
es ist nicht unbedingt
in so vielen Fällen
hilfreich,
wie das immer so dargestellt wird.
Ja, es wird da teilweise so getan,
auch wenn du YouTube-Videos anguckst.
Chat-GPT löst ja
alle deine Probleme.
Programmiert dir deine Website
so nachdem und so.
Nee.
Gut, wenn du eine Kack-Website haben willst,
dann kannst du es so machen.
Ich bin immer noch mehr auf Stack-Overflow
als auf Chat-GPT,
wenn ich irgendwas suche.
Aber nichtsdestotrotz,
ja, ich verstehe das.
Chat-GPT kann halt Dinge,
die kann Stack-Overflow nicht.
Denn Chat-GPT kann
die Sachen halt
transformieren
in was, was du gebrauchen kannst.
Zum Beispiel,
du suchst nach was
oder du hast ein Codeschnipsel,
sagen wir mal in Python, und du fragst
Chat-GPT, kann man das gleiche nicht auch
in Bash machen oder sowas.
Das kann Chat-GPT,
das kann Stack-Overflow halt einfach nicht.
War jetzt vielleicht kein allzu glückliches Beispiel.
Ihr wisst, glaube ich,
was ich meine.
Oder, doch, ich habe ein
besseres Beispiel.
Du suchst nach irgendeinem Exempel für
eine Library.
Wie mache ich da das und das?
Und dann könntest du auch fragen,
okay,
Chat-GPT, sag mir mal,
wie würde ich das denn
machen ohne die Library?
Wie würde ich das quasi so selbst implementieren?
Das kann dir dann Chat-GPT ganz gut
verraten.
Man darf jetzt nicht davon ausgehen, dass das immer
perfekt und fehlerfrei ist. Ich erinnere euch
nur mal an den Versuch, wo wir
Chat-GPT gefragt haben, ob es
uns sagen kann, wie man
eine Progressbar
in einer .NET
Konsolenanwendung
macht.
Also mit HTTP Client.
Und da hat Chat-GPT
erst sich
Events und Methoden
hinzu halluziniert, die
HTTP Client
angeblich hat.
Und nachdem ich Chat-GPT darauf hingewiesen
habe, das war aber noch 3
oder 3,5, das war noch nicht 4, vielleicht könnte
das 4 jetzt besser. Und dann
habe ich Chat-GPT darauf hingewiesen, habe gesagt,
hey, Chat-GPT, der HTTP Client
hat gar nicht diese Methoden.
Und dann hat Chat-GPT gesagt, oh, sorry,
tut mir leid, hier gibt es was Neues.
Und dann hat es mir ernsthaft Windows Forms
Progress Sachen
generiert für eine Konsolenanwendung.
Also
das war noch nicht so geil.
Das ist eine
gute Frage,
zumal die Leute ja nur auf Stack,
viele auf Stack Overflow gehen,
halt wegen dem Interagieren,
also die, die, die
Antworter, ja, wegen dem Interagieren
auf Stack Overflow und,
dass er Karma-Punkte kriegt.
Ich weiß nicht, wie es heißt bei Reddit,
sind es Karma-Punkte, keine Ahnung, wie der Kram
bei Stack Overflow heißt.
In the desert we Veter Scoo
Snake becomes extremly hungry
and stressed, it may begin to consume itself
in desperation, but obviously
this can't go on forever. And it's not just Stack Overflow.
AI is the final frontier for humanity
and coincidentally you can't spell alien
without AI. Funny how they both appear
at the same time after millions of years.
This has been the Code Report, thanks for watching
dw Tha htopogp
Es wird sie auch für
Obamas Echsenmenscht Bodygart herkommen,
Obamas Echsenmensch-Bodyguard herkommt.
Was war das gerade hier?
Five Approaches to Remote C++ Development.
Oh ja, das ist jetzt genau das Richtige für mich.
Ich brauche unbedingt einen 40-Minuten-Talk über C++.
Ne, Plus nicht. Hör mal auf, Alter.
Das ertrage ich jetzt wirklich nicht.
Was haben wir denn noch für Videos am Stand?
Das verdienen Softwareentwickler in Deutschland 2023.
Das ist schon zwei Monate her.
Chatge, ihr seid doch deutlich mehr Pfeiffert als ich,
wenn es sich um Sachen erinnern geht.
Haben wir das schon mal geguckt?
Das ist lahm.
Warum? Echt?
Haben wir schon geguckt?
Okay.
Ne, dann gucken wir es nicht.
JetBrains hat auch einen AI-Assistant.
Das habe ich gelesen, letztens schon.
Ne, da habe ich, glaube ich, von Nick Chapsas ein Video geguckt.
In Rider.
Was haben wir denn sonst noch hier?
Hä? Das hatten wir doch gerade schon.
Was ist das?
Das ist meine Überschrift.
Da war irgendwas, ja.
Aber ich weiß nicht mehr, ob er sich auf den letzten Vorfall bezieht.
Ja, dann lassen wir uns das doch mal erklären.
Warum dancen da irgendwelche Leute von Stack Overflow?
Das Team von Firewall arbeitet auf ein paar kleine Verbesserungen,
um Cross-Site-Scripting-Attacken zu entdecken.
Bei diesem Typ von Attacken können malicious Actors
eine echte Webseite nehmen und HTML oder Javascript-Code
zu der URL verabschieden, so dass es automatisch
funktioniert, wenn die Webseite startet.
Dieses Code könnte z.B. die Cookies und Session-Tokens
eines Usern akzessieren und den Hacker anrufen.
E-Mail diese malicious URL zu einem unschuldigen
computerliteraten Opfer mit 99 Millionen Dollar
in ihrem Bank-Account und der Cash ist so gut wie deins.
Als Content-Delivery-Netzwerk
hat Cloudflare tausende Servern auf der ganzen Welt
in verschiedenen Orten von Präsenten oder Pops,
die nahebye User zu ihren Webseiten-Requesten schicken.
Diese Edge-Servern können Requesten verabschieden,
bevor sie zu den Origin-Servern geliefert werden.
Und im Fall von Cloudflare werden Sicherheitschecks
durch ihre Web-Applikation verabschiedet.
Firewall-Software.
Firewall-Regelungen werden oft mit
regulärem Computer konfiguriert.
...dass das durchaus AI sein könnte.
Ne, ich glaub das ist ein echter Sprecher.
Kevin mit dem letzten Namen,
beginnend mit F.
Du könntest alles über F mit einem Periode verwenden,
das jeden Charakter passt,
und einen Asterisk, der die Präsentation modifiziert.
...oder Regex 1 und 1.
Das könnte auch gewesen sein.
Ne, das mein ich nicht.
Das hier mein ich, genau, ja.
Das hier mein ich.
Wo man dann text, da kann man sagen,
okay, was können wir da jetzt matchen?
W, Punkt, Stern, Non, Greedy, G, und sowas.
Matching, Matching, Group.
Ja, kannst ja alle möglichen Dinger machen.
Und das Coole ist, genau, das mein ich,
die Seite hab ich gesucht,
der erklärt ja auch,
warum der Regex, den du hier hast,
das matcht.
Also find ich nice.
Man muss was Regex angeht immer ein bisschen aufpassen.
Die Implementierung unterscheiden sich ein bisschen teilweise.
Gerade was so Capture Groups und sowas angeht.
Aber im Großen und Ganzen,
so die Basic Sachen,
also gerade dieses Non-Greeding-Matching,
das supporten nicht alle,
das supporten auch nicht alle defaultmäßig.
Wobei das eines der praktischsten Sachen
in ganz Regex ist.
Non-Greedy-Matching.
Okay.
Next.
Okay, lass uns Regex erklären
und dann den Stackoverflow-Ausfall.
Excellent, Regex.
Also, ich könnte so grob erklären,
was der Regex macht.
Aber ich weiß nicht genau,
wofür man ihn benutzt.
Also das ist Zeilenbeginn.
Ich erklär euch,
ich will das jetzt nicht komplett analysieren,
das dauert mir zu lange.
Das ist Zeilenanfang.
Das ist irgendein Matching Group.
Das da.
Das da.
Fragezeichen bin ich mir nicht ganz sicher.
Ich glaube, das ist
Look-Ahead-Geschichten.
Da bin ich mir jetzt aus dem Kopf
nicht ganz sicher,
was diese Fragezeichen gleich
oder ob das Gleichzeichen dazu...
Ich glaube, das ist Look-Ahead.
Oder Look-Behind.
Ähm...
Wie kann man das nicht merken?
Nee, nee, nee, das nicht.
Ach, Moment, ist das...
Das ergibt keinen Sinn.
An der Stelle
ist das keine.
Keine Quantity.
Normalerweise ist ein
Fragezeichen
ja,
dass das Zeichen davor
keinmal
optional ist im Endeffekt.
Aber nach einer öffnenden Klammer
ist es das glaube ich nicht.
Das ist glaube ich irgendwas wie Look-Ahead,
Look-Behind oder sowas.
Ich bin mir auch nicht sicher, ob das gleich dazugehört.
Dann, egal welches Zeichen,
beliebig oft.
Wobei, by the way, Punkt-Stern
kann auch nichts sein.
Das ist Regex-Logik.
Sternchen bedeutet,
also Punkt ist jedes beliebige Zeichen,
Sternchen bedeutet
einmal, keinmal
und beliebig oft.
Also, das kann auch sein,
also Punkt-Stern matcht auch
dann, wenn es keine Zeichen gibt.
Das ist Regex-Logik.
So, dann kommt eine Zeichengruppe.
Jetzt dürfen nur großgeschriebene
Zeichen kommen von A bis Z.
Und das ist die erste
Matching-Group.
Matching-Group kannst du dann darauf zugreifen später.
So,
dann hast du wieder so, egal.
Das ist eine, wie heißt das,
so eine,
also das sind Digits,
das sind alle Zahlen.
Ich bin mir nicht sicher, wie das heißt,
vordefinierte Gruppe an Zeichen.
Slash-D sind Digits,
sind Zahlen.
Das ist klein A bis Z.
Ich glaube,
dass es Backslash,
es gibt Backslash-D,
sind Digits, es gibt Backslash-S,
das sind Whitespace-Character,
es gibt Backslash-W,
das sind Word-Character, also im Prinzip könnte man
quasi fast hier schon Backslash-W
machen.
Dann kommen diese Zeichen hier.
Matching-Group,
das hier ist auch wieder
so eine Magic-Look-Ahead,
Look-Behind-Sache.
Hier Space-Character,
beliebiges Zeichen,
das beliebige Zeichen darf dann
8 bis 16
Mal vorkommen.
Und dann ist die Zeile, dann muss Zeilen-Ende sein.
Plus, genau,
Plus ist, dass es vorkommen
muss, einmal oder beliebig oft.
Ja.
Soweit Ragex-Magic.
Sucks.
Was?
Man könnte auch
aufhören, diesen ganzen Mist
versuchen per Ragex rauszufiltern
und das ordentlich parsen, die URL.
Nicht mit Ragex.
Kennt ihr übrigens den offiziellen E-Mail-Ragex?
Oder ich bin mir nicht sicher,
ob es der official ist.
Jetzt aber.
Alter, ein nicer.
Aber das steht ja sogar
in irgendeiner RFC.
RFC 532
Okay.
Findet man hier nicht.
Alles klar.
Was ein nicer
Ragex.
Der hier ist auch nicht viel besser, alter.
Guck mal.
Darf ich, aber ich kenne keinen.
Oder weiß ich nicht, ob ich darf.
Ich kenne keinen.
Root at localhost müsste eine gültige E-Mail.
Ist es auch, ja.
Du brauchst keine
so
Top-Level-Dinger wie DE
und sowas.
Root at localhost ist
eine gültige E-Mail, ja.
Wir gucken mal das Video weiter.
Massive Ragex.
Aber man muss schon sagen,
Ragex ist echt abfuck-hässlich.
Sobald es ein bisschen komplizierter wird.
Aber man kommt
übrigens oftmals auch ohne Ragex aus.
Also wenn man denkt,
man braucht Ragex.
Gibt ja den Spruch,
willst du ein Problem mit Ragex lösen,
dann hast du zwei.
So in der Richtung.
Man kommt oftmals auch ohne Ragex aus.
Gerade wenn man so Text-Manipulationen
von irgendwelchen Log-Files
in der Shell machen muss.
Man kommt oftmals ganz gut aus,
wenn man einfach
nur nach simplen Sachen grabbt
und dann ein bisschen cuttet.
Ragex.
Ragex.
Also ich hoffe, das war auch Freitag,
dass dann keiner mehr da war.
Na gut.
Wenigstens mal gescheite Codenamen.
Das ist übrigens generell
eine ziemlich coole Strategie.
Das kann man mit
Anwendungen, die beispielsweise
im Cloud-Umfeld am Start sind
oder die auf Kubernetes laufen,
kann man das tatsächlich ganz gut machen.
Wenn man ein gescheites Deployment-Tool hat
und weiß, was man macht.
Braucht kein gescheites Deployment-Tool.
Wenn man nicht dieses nur mit Perl
scriptbare Deployment-Tool hat,
wie ich auf der Arbeit,
kann man das gescheit machen.
Dazu nimmst du
im Endeffekt
eine neue Version
und anstatt sie instant
auf allen Pods und auf
allen Sachen zu deployen
und für alle gleich zugänglich
zu machen,
gibst du das eventuell
über Leute, die sich
check-in gemacht haben. Ich möchte
Betatester sein oder aber auch
einfach random oder nach
irgendeinem speziellen Profil, was auch immer.
Sagst du dann okay,
1, 2 Prozent, 5 Prozent
meiner User kriegen schon die neue Version
und das lässt du dann erstmal eine Weile laufen
und guckst,
beschwert sich jemand.
Gibt
es besonders viele Hotline-Anrufe,
wenn man Hotline sagt. Gibt es viele Support-Tickets
und wenn nicht,
das siehst du ja auch bei YouTube oft. Ich glaube,
bei YouTube habt ihr das vielleicht schon öfters festgestellt.
YouTube macht das ja auch so.
Weiß nicht, ob sie das jemals offiziell gesagt haben,
aber ich finde es relativ offensichtlich, dass sie das so
machen. Wenn YouTube
neue Features einführt,
dann hatten wir es doch schon oft,
dass ich die im Stream hatte und ihr
nicht oder umgedreht, ihr hattet schon neue
Features und ich hatte sie im Stream noch nicht und sowas.
Und da hilft manchmal
Cash
komplett leer, neue Browser und sowas,
manchmal aber auch nicht. Also daran
sieht man, das ist nicht immer
für alle User direkt gleich verfügbar.
Es ist ja auch sehr sinnvoll,
dass du erstmal nur einen kleinen Teil
der User drauflässt, guckst,
okay, explodiert nichts, alles gut,
da gibt es ein bisschen mehr und
irgendwann haben es dann alle. Also das ist wirklich
eine sehr, sehr sinnvolle Deployment-Strategie.
... stirring hops, with each have a small subset of all customers.
And lastly, it deploys globally to everyone else.
Except WAF deployments don't actually
fall in this process at all, it immediately goes
worldwide, because of the need to respond
rapidly to new threats.
Cool, WAF. WAF is Web Application
Firewall, soweit ich weiß.
By CloudFlare.
Ja. WAF.
It immediately goes worldwide,
because of the need to respond rapidly
to new threats. Cool, so after
change request was approved, the global deployment began.
Usually this would be a rolling deployment for servers that are upgraded batch by batch,
since code changes typically require some downtime for stopping, updating and restarting the
software, and you probably don't want to do that to every server at the same time.
However, WAF rules had the unique deployment option of being written directly to a globally
shared database, known internally as Quicksilver or Velocity Replicator.
Don't tell anyone though.
This requires no downtime whatsoever, which allows Cloudflare to instantly deploy WAF rules
worldwide, which is useful whenever there are severe emergent threats, say the log4j
CVE from 2021.
It has a reason that they have something like this.
Yes, I also get that there is such a fast overtaking track.
But as soon as there is such a fast overtaking track, it is often used by default, which
was probably not even necessary for them.
A token rule was deployed using this procedure, so it propagated to all of Cloudflare's servers
in seconds.
Lua works under the hood at Cloudflare.
Three minutes later, engineers were paged for WAF failures, which indicated that every
single point of presence worldwide was failing at the same time.
Looking further, they saw that all of their servers were running on hyperdrive and redlining
at 100% CPU usage.
As a result, they were dropping up to 80% of their customer traffic.
They speculated it was due to the high traffic.
Due to some kind of novel attack, but nonetheless, they declared a p0 or cev0 incident and escalated
to everybody.
Millions of websites use Cloudflare CDN, so a noticeable portion of the internet went
down at the same time.
Think of it like all of Amazon's distribution centers suddenly shutting down.
Even though the back-end online retailers and production lines are still functioning,
they would have no way of getting the products out to the customer.
Right, so everything was on fire, and the engineers were now trying to find what was
causing the high CPU usage.
There was a bunch of stuff running on the server, but after they checked the per-process
CPU breakdown, it became very clear that the WAF process was responsible.
At this point, 20 minutes into the outage, it wasn't time to dilly-dally and think
about why this happened.
They had to shut the WAF down immediately.
The entire team stared intensely at the CTO as they looked for permission to execute the
global terminate, which was a feature flag that would turn the WAF off for all customers.
Permission was granted, but getting to the global terminate took a bit as some of Cloudflare's
internal services also depended on Cloudflare itself.
Eating their own dog food like this is in fact good practice, as it allows the company
to have first-hand experience with their own product.
Furthermore, the engineers weren't very familiar with the global termination system since it
was rarely used.
Ja gut, normalerweise willst du die Web-Application Firewall ja wahrscheinlich auch nicht global
ausschalten.
Wundert mich nicht, dass sie nicht so viel praktische Erfahrung damit haben.
...been two years back in 2017, when they had to shut down various features for leaking
plain-text customer request data.
Eventually, by the 25-minute mark, they globally terminated the WAF, which brought CPU and
traffic levels back to normal.
At this point, the outage was mostly over, except there was no WAF.
After 40 minutes or so of thorough manual validation, they rolled back the broken rules
and re-enabled the WAF globally.
Everything was back to normal, but how did that firewall rule cause the CPU levels to
spike?
So the issue was with this...
Da sind ganz viele back-references und look-aheads und solche Dinger drin, das ist in Regex immer
ziemlich... also es gibt halt Regex, wenn du die auf einem bestimmten Text anwendest,
sind die ultra langsam.
Und wenn ich hier schon so viele...
Ich bin mir immer noch nicht sicher, was es ist, ob das irgendwelche look-ahead, look-behind
Sachen sind, aber wenn ich sowas schon sehe, ist das oftmals verdächtig, dass das lahm
sein könnte.
Und es sind auch ganz viele wildcard-matches drin, das kann in Zweifelsfall auch lahm
sein, je nachdem, was man für einen Text...
Mal gucken, was er sagt.
Ah, eine non-capturing group, okay, ich dachte, Klammern sind Capture-Groups, was ist eine
non-capturing group?
Wozu braucht man das?
Ich habe gedacht, das wäre irgendwie ein look-behind oder sowas.
Was ist eine non-capturing group?
Ich meine, man kann auch, wenn man eine non-capturing group haben will, einfach keine Klammern setzen,
oder?
Ja, ich weiß, aber es ist ja eine non-capturing group, was soll eine non-capturing group sein?
Was eine Capture-Group ist, weiß ich nicht, aber es ist eine non-capturing group.
Regex.
Okay.
Stackoverflow.
Ja, aber das Ding ist doch, wenn ich nichts Capturen will, dann kann ich die Klammern
einfach weglassen.
Ups.
Oh.
Was jetzt?
Was habe ich jetzt gemacht?
Ahja.
Wenn du croupen willst, ohne zu Capturen, wann möchte ich denn croupen, ohne zu Capturen?
Einfach nur für Lesbarkeit, oder wie?
Ach, wenn du oder und sowas benutzen willst, stimmt, da hast du recht, da musst du das
klammern, das geht nicht anders.
Ja, stimmt, okay, das verstehe ich, aber in dem Fall bräuchte man das doch gar nicht.
Ahja, lassen wir uns das mal erklären.
Aber guck mal, in dem Fall hätte er die
gesamte Capture-Coupe doch weglassen können.
Die Capture-Coupe macht ja an der Stelle gar nichts.
Oder doch?
Äh.
Nö.
Macht's nicht.
Das Problem war mit dieser letzten Sektion hier, wir haben eine non-capturing group signifiziert
von der Fragemarke und Kolon, die etwas spezifiziert, was für etwas zu passen ist, aber nicht in
die Ausgabe zu geben.
Jetzt, dass wir wissen, was eine non-capturing group macht, können wir all das aus dem
Fenster werfen, weil es hier eigentlich irrelevant ist.
Obwohl es eine non-capturing group ist, muss der RegEx-Motor immer noch die Ausgabe, die
drin ist, passen, damit wir es sicherlich ignorieren können.
Wir sind bereits mit all diesen Charakteren befahren, die Ausgabe in vier Teile zu spielen,
die drei Dottenstellen passen mit jedem Nummer eines Charakters, und ein Gleichzeitssignal
passt zu einem Gleichzeitssignal.
Aber wie sieht der Passungsprozess eigentlich aus?
Intuitiv macht es Sinn, zu Beginn mit dem ersten Symbol zu starten, versuchen zu passen,
und dann zum nächsten zu gehen.
Aber wie wissen wir, wie viele Charaktere zu passen?
Wenn wir alle Charaktere passen, wird es unmöglich sein, dass der Gleichzeitssignal
alles passt.
Und die Antwort ist, dass wir es nicht wissen.
Der muss wahrscheinlich mehrfach den kompletten Text durchgehen, oder?
Die meisten RegEx-Motoren passen einfach so viel wie möglich, zurückführen auf Fehler
und passen ein bisschen weniger das nächste Mal, das wiederholen bis es ein Pass ist,
oder alle Kombinationen sind ausgetauscht.
Um zu elaborieren, wenn Cloudflares RegEx versucht, diesen Beispielstrang zu passen,
sind dies die Schritte, die passieren.
Zuerst passt dieser erste Dotstar freundlich alle drei Charaktere zusammen.
Danach passt der zweite Dotstar freundlich die restlichen 0 Charaktere zusammen.
Dann verfehlt der Gleichzeitssignal, weil die vorherigen Matcher den Gleichzeitssignal
bereits genommen haben.
Nachdem das, das Algorithmus zurückführt, passt der zweite Dotstar nichts zusammen,
also gibt es nichts zu zurückführen.
Jedoch hat der erste Dotstar alle drei Charaktere zusammen, also zurückführen wir und schauen,
was passiert, wenn wir zwei zusammenpassen.
Dann kann der zweite Dotstar den restlichen X zusammenpassen, aber der Gleichzeitssignal
passt immer noch nichts zusammen.
Wir zurückführen wieder, diesmal passend 0 Charaktere mit dem zweiten Dotstar und es
funktioniert nicht.
Also zurückführen wir wieder zu dem ersten Dotstar, passend nur ein Charakter.
Jetzt nimmt der zweite Dotstar freundlich den Rest der Charaktere und der Gleichzeitssignal
bleibt ohne Match und wir müssen wieder zurückführen.
Dieser Zyklus folgt ein paar Mal, bis er endlich den Match in 23 Schritten findet.
Wenn die Stärke noch einmal X passt, erhöht die Zahl der Schritte bis 33, dann sind es
4 Schritte.
Die Lua-Regex-Engine macht aber anscheinend Backtracking.
Also ich hab letztens gesehen, irgendeine Rust-Regex-Library, die kein Backtracking macht,
die dafür nicht hundertprozentig alle Features kann, von beispielsweise Perl-Regexes, aber
auch nicht so diese krassen Worst-Case-Szenarios hat.
Die aufeinanderfollenden Punkt-Sternchen, ja, vermutlich.
Oh, oh, oh, Klick-Maths.
Ja, ja, das kann man machen.
Das kann man machen.
Da hast du vielleicht nicht so die wahnsinnige Feature-Vielfalt, dass du alles mitmachen
kannst, was du dir nur ausdenken kannst, aber du hast halt auch nicht diese super Worst-Case-Szenarios.
Die haben bestimmt eine Rust-Implementation, Leute.
Blazingly fast written in Rust.
Da freuen sich alle Krustentiere dann.
Wobei, ganz ehrlich, wenn Cloudflare Rust für Regex verwenden würde, hätte das Rust-Subreddit
schon celebrated seit fünf Jahren oder so.
Weiß ja nicht, wann der Fehler war.
always runs in linear time with respect to the length of the string.
Such as Google's RE2, which works by converting Regex to a state machine or fancy computer
science flow chart.
Let's take a look at how you may naively convert this expression into a flow chart.
This vertical line is an OR operator, so this matches a string containing any number of
A or B.
Let's have a starting state and an end state.
Transitions between states can consume a character of the input, and if we've reached the
Endstate mit einem komplett verbrauchten Input, dann haben wir ein Match.
Zuerst wissen wir, dass die Star dies ermöglicht, 0 Länge Stringe zu passen,
also können wir den Fall hinzufügen, in dem der Input ein empty String ist und direkt zum Endstate geht.
Diese Transition nennt sich eine Epsilon-Transition, was bedeutet, dass du frei bist,
diesen Weg zu nehmen, ohne je eine Teil des Input-Strings zu passen.
Jetzt versuchen wir, die Einleitungsstränge A und B zu passen,
sodass wir einen Intermediate-State hinzufügen, wenn dies passiert, und wieder einmal
mit einer Epsilon-Transition verbunden zu dem Endstate, weil wir nach dem Verbrauch von A oder B
eine wahre Epsilon-Transition haben und zum Ende gehen können.
Aber nach diesem ersten Teil können wir noch mehr Charaktere im Input-String haben.
Dies ist einfach zu reparieren, wir können einfach zurück in den Start-State gehen,
wo wir infinitiv mehr A's und B's passen können.
Und hier haben wir es, A, B, A reinstecken und wir können einfach sehen,
dass es den Ende erreichen kann, nachdem wir den gesamten Input verbraucht haben.
B, C reinstecken und wir sind festgehalten,
nicht in der Lage, den C zu verbrauchen, was bedeutet, dass es nicht passt.
Wir können auch diese ganze Sache simplifizieren,
indem wir alle Epsilon-Transitionen entfernen und beide Transition-State,
Endstäte, wir können sogar nur einen einzigen State haben,
der beide Start- und Ende bezeichnet, mit einer Multi-Charakter-Transition, die sich selbst zeigt.
Diese zwei simplifizierten Beispiele sind deterministische Finite Automata oder DFA,
d.h. sobald wir einen Input-String verbrauchen, wird es nur einmal einen einzigen,
wertvollen Weg geben. Und da es nur einmal einen einzigen, wertvollen Weg gibt,
und die Länge dieses Weges direkt 1 zu 1 ist mit dem Input-String,
sobald wir einen Charakter pro Transition verbrauchen,
ist dieses Matching-Algorithmus gewährleistet, 1 zu 1 zu laufen,
oder linear mit der Größe des Input-Strings.
Nun, der Flowchart, den wir vorher hatten, war ein non-deterministischer Finite Automaton oder NFA,
was bedeutet, dass ein Input mehrere Wege hat.
Wie man sieht, können wir die Lette A oder Epsilon-Transition hier nehmen.
Das ist nicht ein großer Deal,
sobald die Epsilon-Wege sofort enden.
Aber vorstellen Sie sich, wenn die Beispiele zwei A's hätten, um den B mit einem A zu verwenden.
Nun, wenn wir einen String inputieren, der alle A's hat,
haben wir zweimal die Beispiele ausgerichtet, weil beide A-Wege wertvoll sind,
was ein exponentielles Anzahl an Wegen erzeugt, die doppelt sind, sobald wir zurückdrehen.
Also garantiert dieser NFA offensichtlich keinen linear-Zeit-Match.
Denn dieses Beispiel benötigt ein exponentielles Anzahl an Wegen.
Natürlich können wir dies zu etwas Simplerem simplifizieren,
wie der DFA-Bereich.
Und das ist genau das, was diese linear-Zeit-Regex-Motoren tun.
Es evaluiert die Begründung mit einem DFA, was den linearen Rundzeit-Bereich garantiert.
Dies könnte direkt gemacht werden, aber was RE2 anstattdessen macht,
ist ein NFA-Bereich zu bauen und es mit auf dem Flugzeug-Caching-Optimisationen zu überwinden,
die den DFA beziehen.
Verglichen mit traditionellem Rücktracken benötigt dies,
die Datenmaschine zu bauen und die zusätzliche Memory, um sie zu besorgen.
Also in der Praxis ist RE2 nicht unbedingt objektiv überwiegend in jedem Fall,
wie wir von diesen offenen GitHub-Problemen sehen können.
Okay, zurück zu Cloudflare.
Ein paar Dinge gingen hier falsch, aber der größte unbekannte rote Flagge für mich ist,
dass der Rücktracke-Plan zweimal den Waffen-Build zu fahren benötigte und es zu lange dauerte.
Dies macht Sinn, da die Rücktracke-Sektion auf der CR gesagt hat,
sie würden nur den Kommit abmachen, ein neues Pull-Request kombinieren und alles wieder bauen,
was wirklich mehr als ein Rücktracke-Forward ist als ein Rücktracke-Vorwärt.
Es hätte theoretisch möglich sein können, die Veränderung in zwei Sekunden zurückzurollen,
genau wie es in zwei Sekunden deployed wurde.
Hätte der vorherige Quicksilber-State gesichert und konfiguriert worden,
würde es automatisch zurückrollen, wenn die relevanten Alarmen getriggert werden.
Dies hätte als drei-Minuten-Lange-Rücktracke enden können,
sobald die ersten Alarmen ausgingen.
Also, während all diese Initiativen gut sind,
wie die Einführung von CPU-Nutzungssicherheiten,
das Profilieren aller Regeln und das Ändern des RegEx-Motors,
scheint es, dass das schnelle und automatische Rollback-Machen seltsam verfehlt ist.
Natürlich ist es hier genauso wichtig,
nur Quicksilber für wirklich dringende Veränderungen zu benutzen
und die Standards nicht zu verfolgen.
Der Deployment-Prozess.
Lassen Sie das ein Warnsignal für alle,
die extrem konvolute RegEx-Matchungen auf der Höhe ausführen.
Sogar.
Ja!
Das ist mit der Eule!
Das hab ich!
Das hab ich sogar!
Ja!
Mit der Eule!
Das hab ich irgendwo hier noch liegen so-
Jaja!
Irgendwo.
Liegt das sicherlich noch.
Ich hab auch noch ein Bash-Buch von 2007,
was mir wirklich geholfen hat damals.
Äh...
Bash Scripting...
Was hab ich-
Was war denn das für ein Buch?
Das war richtig-
Warte mal.
Das ist ein richtig mega fettes Buch für-
Hier!
Hier, ich hab's, ich hab's, ich hab's.
Ne.
Shell?
Shell Script...
Das da.
Shell Script Programmierung.
2007, ja, nice.
Shell Script Programmierung.
Kommandos, Techniken, Konzepte.
Die wichtigsten Unix-Tools.
Lösung für den Systemadministrator.
Ja.
Das war-
Aus dem Buch hab ich Bash gelernt damals.
Und ich fand das nicht schlecht.
Leider ist das Buch wahrscheinlich ein bisschen outdated.
Bash hat sich ja sehr viele-
Hat sich sehr viele neue Features bekommen.
Ich bin mir nicht sicher, ob das damals schon Array-Syntax hatte.
Weil man kann ja sagen, die Bash-Array-Syntax ist eben ultra hässlich,
aber wenn man sie braucht, dann braucht man sie.
Und es ist gut, dass sie da ist.
Ach, da gibt's eine neue Auflage von sogar.
Die ist immerhin von 2011, ja.
Schon ein bisschen neu.
Da gab's glaube ich-
Also 2011 gab's auf jeden Fall das Array-Feature zum Beispiel schon.
Damals-
Das Buch sieht so dick aus, ist es aber gar nicht,
weil die Hälfte besteht aus-
Also die eine Hälfte ist Bash und die andere ist Cornshell und sowas.
Das verwendet eh keiner mehr.
Kennt ihr irgendeine Distribution, die standardmäßig Cornshell hat?
Ich nicht.
Bash.
Und in neueren Zeiten eher ZSR.
Aber auch nicht Default.
Ich glaub Default-mäßig wird's bei allen auf absehbare Zeit Bash bleiben.
Ich guck nur, ob ich irgendwelche Questions übersehen hab.
Ach, dafür gibt's hier ne Batch?
Sicher gar nicht.
Ich-
Also alles, was ich bisher von Fleet gesehen hab, hat mich auch nicht wirklich geschockt.
Nlogspace, der hat super Erklärungen zu regulären Sprachen und anderen Themen.
Den kenn ich gar nicht, zeig mal, ja.
Okay, die Thumbnails sind halt mal wirklich äußerst trocken, ja.
Da kommst du heute auf YouTube nicht weit mit.
Können die Videos fast noch so gut sein.
Echt? Die haben Co- OpenBSD hat das standardmäßig noch.
Die finden den ZSH-
Pog.
Was sagst du zu Büchern zum Lernen 2023?
Ist immer noch ne super Sache.
Ich mein, es müssen jetzt ja natürlich nicht zwangsläufig echte Bücher in Papierform sein.
Die meisten Sachen gibt's ja auch in E-Books.
Aber so ein gutes, strukturiertes Buch zu nem Thema in ner Sprache, die man gut lesen kann.
Nicht jeder lernt auf Deutsch, Englisch, Französisch, wie auch immer, was er-
Selbst wenn er's bis-
Wenn er's halbwegs gut kann.
Gleich gut.
Ist das immer noch sinnvoll, ja.
Und es gibt ja auch gute Bücher zu allen möglichen Themen, ja.
Find ich durchaus sinnig.
Ich hab übrigens heute was gesehen.
Hab gesehen, ähm, dass...
Wir haben doch letztens-
Erinnert ihr euch noch?
Wir haben doch letztens Avalonia ausprobiert.
Avalonia UI als Cross-Plattform-
UI-Framework.
Und ich hab gelesen, dass die jetzt versuchen, mittels Avalonia WPF Cross-Plattform zu machen.
Da bin ich ja mal gespannt.
Weil ein WPF ist so viel Windows-spezifischer Shit, den ich mir schwierig vorstellen kann.
Cross-Plattform.
Aber gut, mal gucken, was sie da machen.
Liest du viel?
Ja.
Wenn du meinst, liest du viele Bücher?
Nein.
Was ist WPF?
Ein Windows-UI-Framework.
Zum Beispiel der Windows Explor-
Nee, das stimmt nicht.
Das ist nicht WPF.
Das ist wahrscheinlich WinUI, der neue Windows Explorer.
Vermutlich.
Aber ich glaube-
Ich glaube WordPad ist WPF.
Nee.
Ach, keine Ahnung.
Ich lese Chat, genau.
Am liebsten lese ich Giga-Chat.
Das haben wir doch schon geguckt.
Das ist nicht-
Der flippt bestimmt wieder komplett aus.
Was ist das für ein Framework, wenn die Programme immer wie Excel aussehen?
Excel selbst ist mittlerweile auf React-Basis.
Also nicht das Desktop-Excel.
Das Office 365 Web-Excel und das, was in Zukunft auch das Offline-Excel ersetzen wird.
Offline-Excel soll ja nicht weiterentwickelt werden.
Offline-Excel soll ja nicht weiterentwickelt werden.
Das ist so React-Based, Browser-Basiert.
Kannst du darauf reagieren?
Deepfakes und die KI-Kennzeichnung.
Bitte nicht.
Wie lang ist denn das Video?
Es wird-
Och, 21 Minuten?
Bin ehrlich gesagt übelst-
Übelst-
Bad-Get-Ready schon fast.
Ich mach das mal auf.
Ich finde, das ist ein interessantes Thema.
Da habe ich auch schon ein paar Sachen zu gelesen.
Gucke ich prinzipiell gerne.
Es geht jetzt nicht darum, dass ich es nicht gucken will.
Da wird wieder wahrscheinlich alles zu Tode reguliert bei uns.
Es hat mich ja schon wieder übelst-
Geschockt damals.
Oder was heißt geschockt?
Geschockt ist das falsche Wort.
Es hat mich ja schon übelst irritiert wieder,
dass das Erste, was ich hier so bei uns gehört habe,
als es als AI ganz frisch war, als noch die ganze Welt von Chat-GPT begeistert war,
das ist eines der ersten Sachen, die ich hier gelesen habe,
offiziell zu diesem Thema,
weiß nicht, wer das von sich gegeben hat, war,
AI und das ist so unreguliert und was machen wir mit AI?
Und das Erste, was ich gehört habe, ist,
wir müssen einen Ethik-Rat für die Verwendung von AI gründen.
Also irgendwelche komischen gut bezahlten Stellen schaffen
für Leute, die du sonst zunächst mal gebrauchen kannst,
da können die einen Ethik-Rat.
Da denke ich auch mal, Alter,
müssen wir alles immer instant kaputt machen,
wenn was Neues, Innovatives am Start ist mit irgendeinem bürokratischen Scheiß.
Wird das Offline-Office dann eine Elektron-App?
Wahrscheinlich keine Elektron-App, aber eine Web-basierte App.
Ich bin mir nicht sicher, was Microsoft da verwendet.
Vielleicht ja Edge-Webview.
Da scheint ja Microsoft drauf zu stehen.
Teams benutzt ja mittlerweile auch Edge unter der Haube für die App.
Noch ein bisschen kecken.
Desaster.
Gollum, das schlechteste Spiel aller Zeiten.
Da haben wir uns letztens schon ein Video zwar angeguckt,
und ich habe schon dazu gekeckt.
Und ich meine, ich sehe es ja ähnlich.
Irgendwas ist auch mal gut.
Teams spricht jetzt nicht für Edge-Webview.
Warum? Ich verstehe das gar nicht.
Ja, Teams ist ein bisschen lahm an manchen Stellen und so.
Aber wenn du das mal mit der Konkurrenz vergleichst,
finde ich Teams immer noch ganz praktisch und gut gemacht.
Also wenn du es mal mit Zoom oder so einem Schrott vergleichst.
Insgesamt finde ich Teams gut.
Von den Features her, von der Erweiterbarkeit her,
auch von der Erweiterbarkeit.
Und auch von der Usability und sowas.
Teams hat so seine Probleme.
Aber insgesamt finde ich Teams immer noch die beste Lösung,
was so Collaboration-Sachen angeht.
Okay, Webex ist da wirklich aber.
Ich kenne hier Potato.
Ja, das ist das Game, was aussieht von der Grafik her
ein bisschen wie Binding of Isaac.
Aber es sich anders spielt.
Es spielt sich ja eher so, wie nennt man diese Sorte Games?
So Arena-Survival-2D-Upgrade-Level-Ding.
Ich weiß nicht, wie man das Genre nennt.
Es ist das gleiche Genre wie Vampire Survivor.
Vampire Survivor oder wie das hieß.
Burger King oder McDonalds?
Nee, das nennt man Pipo Fett.
Webex.
Webex.
Also wir hatten früher Webex.
Zu Zeiten, wo man auch noch physische Videokonferenzanlagen hatte.
Das war Schrott.
Das mochte ich nie.
Burger King oder McDonalds?
Was ist besser?
Boah, das kann ich schlecht sagen.
Ich war in beiden schon ganz lange nicht mehr.
Also, aus dem Bauch aus würde ich sagen Burger King.
Früher, wo ich öfters in so Läden gegangen bin,
mochte ich Burger King mehr.
Ich würde aber sagen, es nimmt sich nichts.
Und es kommt wahrscheinlich letztendlich auf den Laden an,
wo man dann konkret hingeht.
Ich wollte früher immer, als ich ein bisschen kleiner war,
da wollte ich immer zu Burger King gehen.
Und hab's dann auch der Schule immer erzählt,
dass wir bei Burger King waren.
Da wollte ich so ein bisschen edgy sein, wisst ihr?
Alle fanden McDonalds cool und alle McDonalds,
und ich hab dann immer gesagt, nein, Burger King.
Und kam mir cool vor,
weil ich zu Burger King anstatt McDonalds gehe.
Keins von beiden.
Trinke ich beides nicht.
Und da sind wir uns einig, da gibt es gar kein entweder oder.
Es ist nicht so, dass man fragen könnte,
Debian oder Arch?
Oder Ubuntu oder Arch?
Red Hat, Fedora oder Arch?
Es gibt prinzipiell nur eine Antwort und das ist Arch Linux.
Auf dem Desktop.
Manch einer argumentiert vielleicht, der so sagt,
Gentoo oder wie manche es aussprechen, Gentoo.
Gentoo oder Arch?
Aber selbst da würde ich sagen Arch, Leute.
Arch, by the way.
Und dann, wenn man auch den Arch-Way gefunden hat,
dann muss man der restlichen Welt das aber auch bestimmt
einmal, eins, zweimal die Stunde mitteilen,
dass man Arch-Linux-User ist.
Ich meine, sogar auf der Arbeit haben wir eine Arch-Linux-User-Group.
In dem keiner was schreibt, aber alle coole Leute drin sind,
weil sie Arch-Usen.
Aber da muss ja auch keiner was schreiben in der Arch-User-Group,
weil da funktioniert ja immer alles.
Gentoo ist auch so ein Ding.
Ich hatte mal auf der alten Arbeit jemand,
der war richtig hardcore Gentoo-Fan.
Und das ging los, als der relativ neu war
und sich das einrichten wollte.
Der wollte sich, also in der VM, ein Linux einrichten.
Und da musste Gentoo, glaube ich, drei oder vier Mal,
ich bin mir nicht sicher, ob neu installieren das richtige Wort ist,
aber da musste drei oder vier mal Gentoo neu konfigurieren,
bis er den passenden Netzwerktreiber für die VMware-VM hatte.
Sonst konnte er nicht weitermachen.
Das war auch so der Moment, wo ich mir gedacht habe,
man kann es auch übertreiben.
Auf Fedora hätte ich gar keinen Bock.
Du solltest unbedingt Arch-Linux verwenden.
Weil alle coolen Leute, wie man hier auch am Chat ja sieht,
verwenden Arch-Linux.
Dankeschön für den Sub, 24 Monate.
Hogg-Subscription, dazu kann ich mir sagen.
Warum streamst du auf Windows?
Weil es am besten funktioniert.
War OBS funktioniert auch unter Linux?
Aber nachdem ich eh Windows als Haussystem drauf habe,
bietet es sich an, auch über das Hausbetriebssystem zu streamen.
Und OBS funktioniert auch besser unter Windows.
Bzw. hast du mehr Plugins, hast du mehr Features.
Manche Plugins gehen beispielsweise gar nicht.
Beispielsweise das Ausblur-Plugin, was ich verwende,
das braucht, glaube ich, DirectX.
Gründe gegen Fedora?
Eine Abneigung gegen Red Hat.
Und ich mag YUM nicht.
Bzw. DNF.
Oder haben die mittlerweile noch was Neues?
Oh, das ist richtig Bettge-Musik gerade.
Das ist...
Das ist das Rosalina-Theme, oder?
Aus Mario Galaxy.
Nee, dieses Luma-Geschichten-Erzählen-Theme,
was da läuft.
Nee, das ist nicht Chrono Trigger-Musik.
Das ist relativ sicher Mario Galaxy.
Aber die können wir mal wieder als Outro machen.
Oh nee, hör mal bloß auf.
Damit fang ich nicht an.
Es gibt ein paar Sachen, da hab ich keinen Bock drauf.
Werde ich mich wahrscheinlich auch nie mit beschäftigen.
Hast du eine Meinung zu OpenSUSE?
Ja, ich mag OpenSUSE nicht.
Und ich glaube nicht, dass Tumbleweed da was dran ändert.
DNF ist auch viel zu langsam.
Das stimmt.
Also es kommt einem wirklich lahm vor.
Der Chat ist einfach hyper agile, am hyper-Diagonal-Hyper-Skalieren.
Da kann man nicht zwei Sekunden auf ein Package warten.
Also unter Arch Linux, by the way,
geht das auch relativ einfach, alte Versionen wieder installieren.
Generell einfach Arch Linux superior.
Über alles.
Größer alles.
Ich mein, wo kann man sonst ein System-Update machen,
sich den neuesten Bleeding-Edge-Kernel ziehen
und dann bootet es nicht mehr.
Aber klingt jetzt fies.
Ehrlich gesagt, ist mir erst einmal was bei einem Upgrade passiert.
Und man könnte sagen,
streng genommen ist mir noch nie was bei einem Update passiert.
Da war ich fast schon selbst dran schuld.
Also, ja, eigentlich mir noch nie was wirklich bei einem ganz normalen Update passiert.
In der VM ist es einfach, in der VM kannst du Snapshot machen.
Bei einer Installation auf deinem Desktop oder auf dem Notebook,
da ist es natürlich schwieriger.
Zum Thema Arch.
You have the right to remain silent.
Impossible, I'm an Arch Linux User.
I'm an Arch Linux User.
Okay, das ist wirklich cool.
Das gefällt mir.
Nice.
Impossible, I'm an Arch Linux User.
XDing, kann ich da nur zu sagen.
Ich XDe förmlich vor meinem Rechner gerade.
Ey, wie gesagt, ich mag OpenSUSE nicht.
Und ich weiß auch nicht, warum ich Tumbleweed ausprobieren sollte.
Oh Leute, ich bin so kaputt.
Ich glaube, ich gehe jetzt pennen, Leute.
Sleepge-
Sleepge-
Wir können wieder die alte Outro-Musik mal machen.
Okay, machen wir mal klassische Outro-Stills.
Nein, das ist nicht das Outro-Theme.
Fuck.
Naja, gut.
Ich dachte, ich hätte das Outro-Theme gefunden.
Nee.
Das hier.
Leute, bedge.
Macht's gut, wir sehen uns.
See you.

Hallo schon jemand da
Anscheinend noch nicht dann warten wir mal bis twitch das mitbekomme dass das stream online ist in der Zwischenzeit entwirre ich war mein headset
So jetzt habe ich sehr sehr entwirrt moin leute
Die
Heute wird wenn wir uns mal github actions ein wenig hat letztens jemand gefragt ob wir uns das noch mal so ganz grundlegend
die die basics
angucken können
Das heißt wenn wir uns die basics ich kann das nicht richtig ausspringen
Wenn wir uns die basics heute angucken dann hoffe ich auch ganz wichtig chat dass ihr das nötige high performer mindset mitbringt
Weil sonst geht ja bekanntlichermaßen nix
Also high performer modus mindset modus aktivieren please
Und natürlich die gruppe join das ist schon mal klar
Nur für fife logisch logisch nur für fife er
High IQ only high performer mindset aktiviert leute auf geht's
Wir gucken uns heute github actions an
Und dann fangen an ich erzähle mal ein paar sachen zu wir haben aber ein konkretes ziel heute was wir machen wollen
Ja nee nee nee nee nee das machen wir nicht mal kurz die musik entticken leiser
Auch wenn es richtiger banger ist
Ja aber wenn wir dazu kommen
Ja aber wenn wir dazu kommen dann machen wir das heute genau das ist das ziel
Wobei ich den part noch nie gemacht habe das heißt da müssen wir tatsächlich mal schauen
Das ist so ein geiler soundtrack den kann man echt in endlos schleifel laufen lassen seit elf jahren
theoretisch
Die
Hoggers
Kurz audio settings checken nein nicht volume mixer warum will ich immer auf volume mixer
Weil wenn los settings für den arsch sind man nicht durchblickt vielleicht könnte sein
Du kannst helfen beim hour
Übrigens nichts hat nichts mit der hour zu tun in dem fall geht es um das art user repo
heißt überhaupt die art shoot also art user heißt heißt das repo glaub schon
das hour
Nee, aber wir gucken uns heute an
Wie eben wir ein projekt was ich auf github habe also den vm champ was sonst ja wie wir das automatisch
bilden können
Und so gucken wir uns ein paar sachen drumherum an so von ganz simpel bis ein bisschen komplizierter bis
docker multistage wobei weiß ich auch mal multistage bild brauchen
wie man docker docker
Bilds bzw. Containerbilds casht in github actions wie man artefakte hoch lädt und danach eventuell auch muss ich mal gucken
Wie man beispielsweise noch eine art user repo package pushen kann mal gucken wie weit wir kommen es
Könnte sein dass heute immer wo kreisel klein ist bis jetzt ist allerdings noch keiner da
Deswegen vermute ich mal dass nix mehr ist
aber
Man weiß es nicht
Du du du du du du du tu tu tu tu
Was ich packetieren will genau das was wortig gerade verlinkt hat
Das hier ich mache aber erstmal die vm an der stream muss ja noch richtig anlaufen sind erst 69 leute da
Sehr gute zuschauerzahl ich hoffe alle haben wie gesagt das high performer mindset heute am start
weil weil auch only high performer
sind sind ready für den github actions crash kurs
Das hast du neulich schon richtig den packen Wahnsinn
den muss man normalerweise nicht groß roundig packen den kann man bauen und upload als release in github
Aber das bietet sich jetzt einfach an weil das eben neues neues projekt es bringt wieder auf das große
was� ach das hier oder ich kann das ja vielleicht nur machen
säger ich bin into
den kann man bauen und uploaden als release in github
Aber das bietet sich jetzt einfach an weil das eben neues neues projekt ist übrigens gab heute tatsächlich ein pull request
Guck mal da ist gar ein pull request falscher link für all mal linux
Vom christ im moment ist ne ne moment das das das der christian waldmann das der christian heuse darf man nicht
Hab gedacht vielleicht wärst du das gewesen im prinzip kleine sache aber das finde ich gut dass die leute hier mitmachen
So pack man erste mal erst mal alle pakete update zack arch by the way gibt es immer was zum updaten
Gib ihm
Wichelt studio code auch bämm alles was ist denn da neu das müssen wir mal kurz gucken wie ist code 1.77
Im märz okay
kam raus am
Datum ist overrated outdated gebaited braucht man nicht
Wer will auch schon ein datum in release notes in release notes haben mensch
Vermute mal heute oder gestern kam das raus
Aber so datum wäre schon wäre schon echt extrem porg wenn man so was rausbringt
Ja okay heute heute kam das ganze wohl raus okay
Lass mal ganz kurz drüber gucken ob es irgendwas irgendwas spannendes gibt in der aktuellen wie das code version
Accessibility thermal ex blablabla blablabla was except in ordentlich auch wurscht
Copy github die blinks okay
Ich benutze eh keine gith integration in git in in visual studio code dass ich den sinn persönlich gar nicht drinne ich bin gefühlt einer der wenigen
Die komplett auf kommando zeile schwören
Hat man jetzt einen
Browser in github hat man jetzt habe ich das richtig
Browser in github hat man jetzt habe ich das richtig gesehen leute haben die jetzt den browser in visual studio code
Also ich meine das ganze ding basiert auf browser technologie es gab trotzdem lange zeit keinen browser
Ach nee
Die machen jetzt
Was bin ich hier überhaupt sehend
Was ist das hier edge
Oder was?
Was ist das hier was man da sieht überhaupt edge
Der edge sieht aber anders aus als meiner
Aber in kirby musik ist mir zu anstrengend gerade ich brauche ich brauche irgendwas irgendwas entspannendes
Ja
Ist ist okay hauptsache irgendwas was nicht so nicht so anstrengend ist im hintergrund
Oder ich mache andere ich mache wirklich für das wort andere hintergrund musik und
Machen uns jetzt erst mal fünf minuten ordentliche heavy metal an nee kann ich nicht mal ich habe keinen ich habe keinen eigenen tonspur
Terminal improvements
All shell null
Gits file support
Verwendet jemand von euch geht in visual studio code beziehungsweise irgendwelche frage erweitern wir die frage mal
Verwendet von euch irgendjemand einen editor mit git integration von dem er halt auch die git integration benutzt im editor und ich meine damit jetzt nicht
Merch konflikt diff das ist das ist tatsächlich was wo ich die daseinsberechtigung von einem
Editor gestütztem
Merch tool verstehe ich ja
Ihr verwende das wirklich
Okay, ich meine ich will euch jetzt ich will euch das nicht ausreden mein ihr könnt ja verwenden was ihr will was ihr wollt
Aber ich mag das gar nicht ich mach git kommando zeilen die da weiß man wenigstens was passiert wir hatten wir hatten mal einen entwickler das weiß ich noch bei uns
Der der war tatsächlich damals im admin team
Weil er sich ums deployment von irgendwelchen anwendungen ist auch egal in der grunde ist egal zumindest er hat damals noch in klips oder
IntelliJ ich glaube aber es war noch eclipse damals
Verwendet mit irgend so einem git plugin und er hat immer ganz merkwürdige
Rebases gemacht mit diesem mit diesem tool ich wüsste gar nicht wie ich das wie der das gemacht hat wie man das auf der kommando zeile gescheit macht
Aber es war kam am ende immer nicht das raus was ich gerne haben wollte zu merchen
Da weiß man wenigstens genau was passiert
Notebooks interessiert mich nicht interessiert mich nicht language
Aber die wollen bei typescript irgendwann z sharp überholen oder wenn die schon bei version 5 sind z sharp ist jetzt aber glaubt bei version 11 oder
nächstes mal 12
Git ignore support
Wie geht es jetzt
Git ignore support
Wie gab es das die ganze zeit nicht oder was
Man hat davon abgesehen was muss man bitteschön supporten an git ignore files
was was
Weil es das heidet das heidet dann im editor view wenn man das im git okay ganz nice
Das ist das ist schick extensions
Wie viel ist denn da drinnen man notebooks verwende ich in der form nicht
GitHub co-pilot natürlich was auch sonst
So viele features
Eol warning für windows 8 und windows 8 1 ja das können die ruhig eol das mir egal
Big thank you to all contributors
Na gut alles klar
Jetzt wissen wir bescheid visual studio 177 ist raus nichts dabei was mich groß interessiert aber heißt ja nicht dass nichts dabei ist was euch interessiert
Co-pilot ist nice ja ich verspreche mich bei co-pilot immer ich sage immer co-pilot was aber plötzlich heißt ja co-pilot aber
co-pilot ist irgendwie so
Kommt mir eher in kopf bei dem was github co-pilot eigentlich ist als co-pilot
Ja
Gut das habe ich auch das das das habe ich auch in der kommando zeile ich gehe einfach in der history zurück
Und suche mir das letzte kommet raus das ist dann meistens update oder update
Irgendwie sowas ist auch nicht sonderlich durch sonderlich aussahre kräftig
Also die besten die besten kommet messages hatte ich immer noch hier als wir ein bisschen komponente stellens gemacht haben und ich
Ich github actions triggern musste
Und die die besten die besten kommet messages gab es immer noch
Gab es immer noch hier
Best feature ever und und um nicht und um nicht zu vergessen die qtab hat auch wunder sehr gute sehr gute kommet messages
Aber ich habe mich hab mich vertan glaube ich
Ah ne doch nicht
Ein anderes repo von mir hatte 400 400 kommets 400 kommets keckel drinne
Ja warum nicht dafür dafür ist das hier tatsächlich ja ok hier wird die readme ein bisschen geupdatet ja über das
über das github frontend deswegen geht es nicht anders aber ansonsten ist eigentlich alles in ordnung
Nice
Nice
Hello empty bringt ja auch nicht wirklich was da hast du halt einen kommet ohne kommet message ein kommet ohne kommet message ist trotzdem neues kommet
Das beste was man machen kann ist einfach wenn man lokal oder wenn man halt irgendwie immer wieder was pushen muss zum triggern
wenn man einfach lokal
Was erzähl ich lokal lokal einfach immer das letzte letzte tag überschreibt
Endlich letzte tag letzte kommet immer wieder überschreibt und forst pusht in extra branche zum ausprobieren
Dann saut man nicht total rum falls man das irgendwann mal merchen will und gut ist
Benutzt du auch geht chat gpt für boilerplate code ehrlich gesagt selten
Eigentlich gar nicht wofür ich chat gpt ganz gerne verwende ist manche sachen
Wenn ich nicht so genau sicher bin wie das wie das funktioniert zum beispiel habe ich letztes verwendet
Interop zwischen z libraries und z sharp da war ich mir nicht ganz sicher wie man das aufruft
Chat gpt hat auch ziemlich ein mist erzählt wieder zwischendurch
Aber wenn man dann schreibt so nach dem motto das und das gibt es nicht macht auch mal das beispiel in c
Dann ist es manchmal ganz praktisch gerade und es ist jetzt bescheuert an aber gerade
Weil chat gpt manchmal die sachen ein bisschen zu umständlich macht hat man manchmal
Erkennt man einen gewissen denk ansatz drin für sich selbst weil einem auffällt
Okay, der eigentliche weg geht ja auch so du schreibst dann zwar im endeffekt nicht so wie es chat gpt geschrieben hat
Aber man kommt man kommt dann drauf an der stelle ach ok das ist ja eigentlich gar kein pointer sondern ist ein pointer auf ein pointer
Deswegen musst du musst du die adresse nehmen an der stelle und sowas
Also
Für solche sachen
Zumindest mal kann es nicht schaden chat gpt zu fragen hier erklär mal bitte wie ich keine ahnung lip wird das und das aufrufe
Und dann versucht das chat gpt zu erklären chat gpt lügt halt auch ganz gerne wenn es keine ahnung hat
Haben wir letztens erst gesehen wir haben letztens chat gpt gefragt wie man eine progress bar und dass die schaab mit dem
Http klein macht für den download also progress anzeige und hat sich ganz frech einfach was ausgedacht
Und wenn man es dann darauf hingewiesen hat dass es diese methode im http klein gar nicht gibt hat es halt ja das stimmen
Und was anderes rausgehauen was auch nicht funktioniert also insofern ja
Ja ich habe die letzten tage ein paar
Image recognition
Sachen ausprobiert zum beispiel open flamingo das ist zwar irgendwas aus auf lama basis
Weil ich habe eine kamera bei mir im keller gegenüber von der heizung
und die
hat in ihrem bildbereich
Die druckanzeige von der heizung die druckanzeige von der heizung ist eine ist so so so ein analoger
Tacho nenne ich das mal ja von 0 bis 4 und die nadel ist meistens so zwischen 1 und 2
Das machen wir heute gar nicht
Lama ist ein ki model von facebook
Das machen heute gar nicht heute mal high IQ github github actions und pipeline bauen mini pipeline so dass man dass man alles alles verstehen kann
Und der dem dem habe ich die den hab dem habe ich die bilder hochgeladen habe gefragt so nach dem auto
Auf welchem wert steht denn die nadel in diesem in dieser anzeige
Und ich habe es versucht dahin zu führen dass das model erzählt
Was was ich hören will so nach dem motto ich habe ihm gesagt hier sehen sie eine analoge also hier siehst hier hier sieht
man eine analoge anzeige zwischen 0 und 4
Aktuell befindet sich die nadel zwischen 1 und 2
Auf auf welchem die schritte sind in 0,2 er steps
Auf welchem wert befindet sich zur zeit die nadel so ich habe den model wirklich versucht genau zu erklären was ich haben will hat es nicht
hinbekommen
Also da setze ich tatsächlich ein bisschen auf gpt 4 gpt 4 hat ja ein bisschen die leute
Gebetet ich weiß nicht ob ihr noch die ankündigung kennt von von gpt 4 so nach dem motto man kann bilder als input
Benutzen und sowas und das ist jetzt ganz furchtbar innovativ man kann sich bilder beschreiben lassen und sowas
Das geht alles noch gar nicht
Das haben die in die ankündigung einfach reingepackt und jeder denkt irgendwie ja geil
Gpt 4 kann bilder kann es noch gar nicht es war einfach nur eine ankündigung drin mag sein dass es das intern irgendwie kann
Aber publik benutzen kann das noch niemand selbst wenn du bezahlst für gpt 4 kannst du das nicht machen
bilder support ist obwohl die das angekündigt haben und obwohl die das quasi so
Introduced haben als wäre das jetzt logischerweise da und dabei und für jeden benutzt war ist nicht da und wann das benutzt
Bar wird es auch noch nicht klar also insofern ganz schöner tschie bait
Glücklicherweise habe ich im vorfeld mal ein bisschen nachgeforscht festgestellt dass das der fall ist und habe kein sonst hätte ich nämlich in
Gpt 4 aber abgeschlossen hätten wir das angeguckt weil da
da hoffe
Es poppt heute wieder am mikro
Ah ich weiß woran es liegt jetzt weiß ich woran das immer liegt
Alter
Jetzt jetzt weiß ich okay ich kann es ich ich ich versuche es euch mal zu erklären woran es liegt normalerweise
Habe ich das kabel vom headset also das hier jetzt poppt das wenn ich so an dem kabel mache ja
Normalerweise hängt das kabel vom headset einfach so ein paar mir an der seite runter auf die erde manchmal
Na moment aber nur vielleicht ist es auch nicht das richtige
Aber es ist ja nur manchmal so wenn ich das kabel aus versehen
Über passt mal auf jetzt jetzt lasse ich hier mal liegen
Wenn ich das kabel aus versehen über die armlehne runter hängen lassen habe dann komme ich immer so
Was ist
Immer immer so dran das poppt nicht das das macht so dass das dürfte so so dumm für
dumm für
Ja
Schlaggeräusche geben im hintergrund wenn ich das kabel im hintergrund jetzt hier drüber drüber
Das das kabel klatscht dann immer so an den
An die armeauflage vom stuhl jetzt mache ich es wieder runter jetzt sollte eigentlich nix sein hoffe ich mal
Müssen mich dran erinnern ok daran scheint es wahrscheinlich zu liegen
Daran scheint es wahrscheinlich die polizei ist da nice daran scheint es wahrscheinlich zu liegen also ihr könnt mich daran erinnern sollte es mal wieder komische
Schlaggeräusche im hintergrund machen
Dann ist das das kabel was an die
armeauflage haut
Scheuert
Jo
Also da setze ich ja ein bisschen auf gpt 4 das wenn gpt 4 dann endlich mal rauskommt mit image input
Mit image input also mit image erkennung und allem das gpt 4
Das kann
Meine
Anzeige also meine druckanzeige an der heizung im keller auslesen das das wäre äußerst hilfreich dafür gebe ich auch 20 euro im monat aus
Ja
Ja nice ich wie gesagt ich also gpt 4 bzw code pilot ich werde es mir auf jeden fall in nächster zeit noch mal angucken
Ich will halt das aber erst abschließen wenn das image feature dabei ist
Weil das image feature ist was da bin ich wirklich scharf drauf und es ist halt doof dass sie so angekündigt haben als wäre das automatisch
Gleich mit dabei das haben die ja ganz selbstverständlich in der ankündigung so erwähnt als ist es jetzt da aber es ist halt einfach noch
Gar nicht da und es weiß auch keiner wann es wann es genau kommt
So ich mache noch mal ein update von meiner vm. Wobei. Nee habe ich das nicht gerade gemacht. Waren können update dabei. Ach scheiße
War mein reboot schadet auf jeden fall nicht
Einmal einmal rebooten nicht verkehrt
Tut gut reboot reboot tut gut
So
Firefox
Sack ja gebeck ok nice
So
Also ich hoffe ich bin auch bei github eingeloggt ich bin auch bei github eingeloggt sehr nice sonst hätten wir jetzt probleme gekriegt
Weil ich mein password na doch ich habe ein password im save stehen hätte ich drüber kopieren können
Also chat ich hoffe ihr habt das high performer mindset heute ausgepackt heute mal github actions das könnt ihr danach in euren lebenslauf schreiben
Fortgeschrittene oder quatsch vor wer schreibt fortgeschrittene rein fortgeschrittene ist out experte in github actions gleich danach in lebenslauf rein
fünf jahre experience
Direkt auch auf linkedin und überall können wir direkt als referenz ihr kriegt am ende für streams auch alle ein zertifikat ausgestellt
das originale wubbler zert
Also ist weltweit sehr beliebt
Und da werdet ihr instant eingeladen bei irgendwelchen vorstellungsgesprächen
Das heißt heute muss das high performer mindset ausgepackt werden
Aber nur wenn du das mit pecken wie paint alter das ist ei generiert natürlich
Payne so wir sind doch wir sind im jahr 2023 da wird so was nicht mehr mit paint gebaut
Das ist dann ein nft ne ne das klingen ja mehrere leute das wird ja nicht funktionieren
Okay
Ich muss mal kurz in mich gehen wo fangen wir denn jetzt mal
Wo fangen wir denn jetzt am besten an
Nfts sind schon langsam wieder out
Ja der hype der hype ist rum
Wobei uns das auf lange sicht sie denke ich schon erhalten bleiben wird
Aber wir sind schon langsam wieder out
Ja der hype der hype ist rum
Wobei uns das auf lange sicht sie denke ich schon erhalten bleiben wird
Also gut gehen wir mal rüber auf github ich weiß wo ich anfange ich habe hier ein projekt es ist egal was es ist
Also macht heute macht heute eigentlich keinen unterschied was es ist
geht einfach nur darum dass ich ein projekt auf github habe was wir heute als
Grundlage für github actions benutzen wollen wenn ihr wissen wollt was es ist es ist was wo man
lokal auf die schnelle sich vms erstellen kann
Willst du echte github actions nehmen ja ne ne ich will kein act runner ich nehme echte github actions
Ja man kann sich damit lokale test vms schnell erstellen das ist ein sicherprogramm das heißt das muss gebaut werden
das muss
Es muss und und push gebaut werden
Das muss in vallem in dem container in dem cento 7 container gebaut werden dass das system worauf es gebaut wird schön alt ist das
Ist tatsächlich wichtig dass es möglichst rückwärts kompatibel zu vielen system läuft so jetzt hat man hier lokale vm und kann rumsauen
Github ist arsch lahm
Ich ja ihr du hast recht aber ich finde es nicht schlecht wenn wir es in github machen wir gucken mal wenn es zu unerträglich
wird machen wir das
Ich finde es nicht schlecht ist auf github zu machen da sieht man nämlich auch mal was es für ein vorteil ist wenn man cashing benutzt
Wie viel schneller es dann ist und ich gehe davon aus und ich hoffe wenn wir das ordentlich cashen
Dann haben wir da haben wir da weniger probleme warum nicht schittier actions weil github das ist was die meisten leute verwenden
Und ich glaube das bringt mehr leuten was wenn wir uns github actions angucken als
Schittier actions wobei das ja im prinzip ein github actions klohn ist
So also wir haben ein c-sharp projekt
Und das ziel ist dass wir das projekt bauen auf möglichst alten stand in einem alten docker container
dann das ganze
Bild also die die das das resultierende binary also das jetzt zum beispiel ja da kommt also ein binary rausgefallen das binary
Dann als artefakt an den bild dran hängen jetzt zu zeigen wie das geht die einzelnen steps cashen dass die actions
schneller gehen und am ende ist das ziel dass wir ein art schuhe repo machen
also ein
Dass wir einen repo machen in art schuhe repo wo wir dann das binary reinpushen ob wir soweit kommen muss ich mal gucken
hängt wahrscheinlich ein bisschen davon ab ob wir heute mmo kreise machen oder nicht
Bevor wir anfangen mit github actions muss ich erst mal kurz erklären was ist github actions beziehungsweise warum gibt es was ist was ist der
sinn von dieser ganzen geschichte also warum warum gibt es so was
beziehungsweise warum
Github actions ist ja nicht das erste beziehungsweise was ist ist so so geschichten gut also
Github actions ich weiß gar nicht was die was sie selbst zu sagen was github actions ist
Ja nee nicht wirklich
Ja github actions ist continuous integration continuous delivery platform that allows automate build ok steht im prinzip alles da
So wirklich so wirklich klar wenn man das noch nicht benutzt hat ist es ist es eigentlich nicht
Also wenn man eine software es muss übrigens nicht zwangsläufig nur ein software projekt sein es kann durchaus auch ein software projekt mit
infrastruktur definitionen sein
Aber gehen wir jetzt mal voraus ein software projekt
Als besteht ihr erst einmal auch source code damit man das ganze ausführen kann muss es in irgendeiner art und weise
Zu einem package
Zusammen geschnürt werden was auch immer das bedeutet das kann ein compiler sein der läuft es kommt eine exe am ende raus in den binary was ausführbar ist
Es kann irgendein job package für javas sein es kann ein container image sein was in irgendeine registry kommt aber irgendwie muss das source code
So aufbereitet werden dass man es am ende dort wo man das laufen lassen will ausführen kann ist ja logisch mit dem source code alleine kann
man nicht allzu viel machen
Das können verschiedene schritte sein die dazu erforderlich sind es kann compiler step sein der notwendig ist vielleicht möchten wir vorher noch
Ein paar tests ausführen es kann ein image
bauen notwendig sein
Vielleicht muss man irgendwelche zwischen steps irgendwo hochladen vielleicht muss man irgendwelche abhängigkeiten
noch überprüfen
zumindest möchte man das ganze
möglichst nachvollziehbar haben
Also nicht jetzt dass ein entwickler das bei sich auf dem notebook baut
Und dann funktioniert die anwendung am endefekt nur bei dem auf dem notebook und nicht auf irgendwie dem server wo es am ende laufen soll
Man möchte das möglichst
nachvollziehbar haben und möchte das vor allem auch
möglichst
Unabhängig von der entwickler plattform haben
Und das ganze so viel oder so weit wie möglich
Automatisiert dass kein entwickler oder in admin oder sonst was hingehen muss und da jeden tag von hand irgendwie die software
Patchen neue package bauen die package dann irgendwo hin deployen und sowas das soll wobei das mit dem deployment noch mal ein zweiter schritt ist da
hat jetzt mit dem bauen erstmal nichts zu tun und
Das soll halt möglichst automatisiert passieren
dass es keine gute idee ist wenn
Die software auf einem entwickler notebook gebaut wird und dann irgendjemand auf den server kopiert und erhofft dass es funktioniert und dann dort andere
Library versionen sind jetzt irgendwelche komischen bugs gibt es gar nicht funktioniert es vielleicht memory leaks gibt wo sonst gar keine sein sollten was auch immer
Da ist man schon relativ früh drauf gekommen dass das nicht so clever ist
Quasi auf auf einer auf der entwicklerkiste zu bauen oder auf unterschiedlichen kisten wenn sie immer die gleiche entwicklerkiste wäre besser noch halb so wild
Auf unterschiedlichen kisten zu bauen oder gar auf produktiven system zu bauen dass es möglichst gleich ist da ist man schon relativ früh auf die
Idee gekommen dass es keine allzu gute idee ist das zu machen
Und dafür gibt es schon seit längerer zeit continuous integration tools sowas wie jenkins
Falls das jemand noch kennt von früher
Jenkins war mit das erste es war nicht das erste weil es gab noch ein vorgängerprogramm von jenkins das war hudson das wird an
Irgendwann gefragt zu jenkins aber jenkins war auf jeden fall somit der erste große bekannte kontinue
erste bekannte
Continuous integration oder es ist ja man muss ja sagen jenkins ist ja eigentlich gar kein richtiges
continuous integration programm sondern mehr oder weniger ein
Task runner mit web interface du kannst den jenkins alles mögliche definieren und hast dann
Verschiedene jobs die du anklicken kannst oder automatisch ausführen lassen kannst oder über das web interface starten kannst die dann
Dinge erledigen die du definiert hast also in jenkins kannst du alles machen dafür musst du auch relativ viel von hand machen das war so
Eines der ersten
Programme in dieser richtung als die leute angefangen haben auf die idee zu kommen es ist keine gute idee
Auf live system software zu kompilieren auf entwicklungsrechner das ganze zu kompilieren
geschweige denn dass es auf dem einen rechner geht auf dem anderen nicht und
Dass es auch gar keiner mehr von hand machen muss und da haben die leute angefangen jenkins zu verwenden jenkins
ist richtig fette java software
Gibt es ein video oder screenshots zu der config deiner netzwerk switch
Also weder noch welchen teil der config interessiert dich denn und vor allem von welchem switch
Ist ja nicht, so dass ich nur einen habe
Hat jemand von euch schon mal
Mikrotik
Mikrotik
Ich habe keine du meinst den mikrotik router den hex poe router
Davon gibt es weder ein video noch kann noch kann ich den config dampf davon ziehen
Wenn du was konkretes wissen willst kann ich dir vielleicht was zu sagen
Wie land config ist in router us ein bisschen eklig
Zu hand haben da muss man sich in paar tutorials durchlesen bis man das gecheckt hat wie das funktioniert
Hat jemand von euch mal die ehre
in frühe also vielleicht immer noch oder erst mal die erst mal die frage an euch hat jemand von euch schon mal die ehre gehabt
hat jemand von euch schon mal die ehre gehabt
dass ihr euch schon mal die ehre gehabt habt
in frühe also vielleicht immer noch oder erst mal die erst mal die frage an euch hat jemand von euch schon mal die ehre gehabt
die letzten jahre über jenkins zu benutzen
und die zweit also wir benutzen dort kein jenkins keine sorge
und die zweite frage ist hat noch jemand die ehre jenkins aktuell betreiben zu müssen beziehungsweise zu benutzen
Also wir hatten jenkins schon vor ganz langer zeit habe ich sogar damals aufgesetzt
weil ich ja damals schon zuständig war für unsere inför für unsere infrastruktur
repos und server definitionen und so was den habe ich damals aufgesetzt den jenkins das war
da gab es noch gar kein offizielles pipelines plugin da gab es ein komisches
ein komisches plugin was dann grüne kästchen dargestellt hat an welcher stelle was fehlt und so was
habe ich damals aufgesetzt und ich muss sagen bis heute mag ich jenkins eigentlich
Es ist ein bisschen aus der mode gekommen wobei man sagen muss dadurch dass jenkins so super flexibel ist und nur nahezu alles
damit machen kannst und das ganze auch gut lokal läuft
Es hat es hat jenkins die zeiten ganz gut überlebt es ist jetzt sicherlich nicht mehr das das tool der wahl heute
wenn man irgendwelche automatisierten builds laufen lassen muss aber wenn man vielleicht ein bisschen mehr links und rechts machen muss
Aber wenn man vielleicht ein bisschen mehr links und rechts machen muss ist jenkins gar nicht so doof
Ach du wechselt auch zum ersten vierten ja bei mir ist auch nächste woche erster arbeitstag
Lies mal eine nachricht please wo denn da das ist doch kein zufall eben auf der arbeit gerade noch gitlab
Pipelines fertig geschrieben das war so ein brainfuck aber die
Saast scan reports werden jetzt in gitlab page was ist ein saast
klingt nach antivirus
System audit and security toolkit
Saast reports
Pfeifert
Saast scan
Irgendwelche security zeug ja wir machen aber so was so was machen wir heute nicht in github actions wir bauen eine software und pushen dann
pushen dann das binary
Gerade wenn man die letzten jahre über viele jenkins gemacht hat fällt es vielen da schwer von weg zu migrieren
wobei ich halt auch sagen muss warum auch wenn es gut funktioniert ja es macht ja
Macht ja keinen sinn was bei jenkins ein bisschen schwierig ist
Zumindest in der vergangenheit ich weiß nicht wie es jetzt ist ich habe schon lange kein neuen jenkins mehr installiert
Was ein bisschen schwierig war beim jenkins ist wenn du das ding skalieren wolltest also wenn die eine instanz nicht mehr ausgereicht hat
Dann wurde es da wurde es ein bisschen kompliziert
Beziehungsweise unmöglich du kannst zwar bei jenkins ganz viele verschiedenen runner haben also so im Prinzip so wie bei gitlab oder github actions auch
Aber du hast nur einen zentralen jenkins server über die alle gehen müssen und also wenn wenn wenn jenkins von ganz vielen leuten benutzt wird hat man
damit probleme
wenn man aber lokal damit klarkommt
Macht ja auch nicht so viel sinn muss ja auch nicht unbedingt sein dass man das abschafft ist ding
lange rede kurzer sinn ich mag jenkins eigentlich immer noch
Aber irgendwann vor ein paar jahren dürfte so vor drei vier jahren gewesen sein ist schon ein bisschen her
Kam github auf die idee sie könnten doch auch so was machen und zwar direkt ins repo integriert
Und zwar haben sie dann sich github actions ausgedacht mit github actions ich zeige euch mal so ein example
gibt so in zum getting getting started oder so was
Ja das ist vielleicht ein bisschen
Ah hier examples gucken wir uns mal ja so sieht das zum warum wisst ihr was
Wir gucken uns einfach ein beispiel von einem von einem repo bei mir an
Hat der typ 1 geantwortet? Ah der typ hat gar nicht geantwortet ich muss mal kurz lesen was er geschrieben hat
Und
Weil das einer geschrieben hat wird viere das nicht machen so ich sage ich zeige jetzt mal ein beispiel bisschen bisschen längeres
絶対 ein kompliziertes beispiel so sieht das ganze in github actions aus
und zwar macht man dort
diesen ganz die ganzen build step
In jammel definiert man das wobei das auch nur zur halb
Halbwahrheit ist ja man definiert das hier alles in jammel und wir gucken uns das gleich auch im detail an wie man das alles macht
Aber man kann auch nach wie vor man sieht es hier man kann auch nach wie vor einfach shell kommandos reinschreiben
Das ist also ein bisschen wie in jenkins wo man auch best scripts untereinander sich sachen zusammen frickelt nur
der große also es ist jammel config ist schon mal der unterschied nur
Der der neiße die neiße geschichte ist dass hier repo und quasi die bildanweisung
alles im gleichen repot also der source code und die bildanweisung sind alles im gleichen repo drinne
Das ist aber jenkins nicht so bei jenkins hast du eine job config ich glaube es gibt mittlerweile sowas wie jenkins files wo man das auch machen
Kann habe ich nie benutzt keine ahnung wie das funktioniert
Aber das ist so ein neuer ansatz gewesen damals im vergleich zu jenkins man hat die definitionen
Direkt im repo beim source code mit drinnen
So man hat nicht nur ein also man kann mehrere workflows haben github actions müssen immer unter punkt github slash workflows
Und dann in den jammel daten kann man mehrere haben die output sieht man dann am ende hier
Und das gucken wir uns aber gleich an wenn man es wenn man es laufen lässt
So und so sieht zum beispiel eine kleine github action aus das geht deutlich geht deutlich komplexer
Das schöne ist an github actions warum es auch meine lieblingsplattform ist um solche um builds zu automatisieren oder generell um sachen
Automatisch laufen zu lassen wir haben da mittlerweile auf der arbeit dinger drinne die gar nicht wirklich
Was mit software builds zu tun haben wir generieren da zum beispiel neue neue inventarlisten und sowas rüber über github actions
Einfach alle viertelstunde laufen dass das ist äußerst praktisch das ganze
Und was man
Was unterscheidet sich das von der github umsetzung
Ehrlich gesagt ich habe persönlich noch nicht so viel github gemacht aber es hält was ich gesehen habe hält sich in grenzen
Es hält es hält sich in grenzen
Also ja es ist anders aber es ist doch verkleidet es ist ziemlich ziemlich ähnlich vom aufbau her
Was ich bisher gesehen habe
Was war denn die frage
Ach so hier das ja
Ja also es ist relativ ähnlich es ist relativ ähnlich also github sind auch jammel files
Es sind halt ist es ja nicht job build strategy ist das irgendwas anderes aber es ist doch recht ähnlich
Also wenn man das eine verstanden hat kommt man mit dem anderen auch ganz gut klar
so
Ein weiterer eine weitere sache die man wissen muss zu github actions
Also ähnlich ja genau also eine weitere sache die man zu github actions wissen muss
Das was hier definiert ist
Muss ja irgendwo ausgeführt werden
Also hier steht ja nur drin was passieren soll beispielsweise bei einem push auf diesen branche
Irgendwo muss das ganze ja noch ausgeführt werden dafür gibt es runner bei github
Und bei github und bei gtea mittlerweile ist überall das gleiche du brauchst runner dafür irgendwo
Muss dieser krempel ja ausgeführt werden der hier definiert wurde
Wenn man das in der cloud benutzt
Gibt es runner bei github die man auch benutzen kann bis zu
Müssen wir die limits angucken die weiß ich aus dem kopf nicht
Also man kann
Bis zu 2000 minuten im monat
Kostenlos das ganze verwenden hat bis zu 500 mb storage das reicht in der regel locker aus für alles was man machen will also das ist
Sehr großzügig und damit kann man eigentlich alles machen das gibt es kostenlos
Und mit minuten ist gemeint die laufzeit deiner
Die laufzeit deiner sachen hier in einem runner
Also sobald man das pusht der runner anfängt das auszuführen das sind die minuten die dann zählen
Was man auch noch wissen muss ist
Also das ist halt eben nicht unendlich funktioniert aber mehr als genug großzügiges free tier was man auch noch wissen muss ist
Das sind vms und das ist auch gut dass das vms sind
Also man sieht hier beispielsweise run on ubuntu latest
das sind vms es gibt soweit ich weiß in
github gibt es drei vm typen
ubuntu
windows 11 oder so oder windows server oder e-mails
oder windows server oder in windows ubuntu windows 11 und mac os
Also man kann mit github action software bauen für alle drei großen betriebssysteme
Und nachdem man da drin aber auch container starten kann kann man ja eigentlich für alles bauen zumindest linux technisch aber
Standardmäßig ist das ding hier unter ubuntu nein das sind keine docker images
Das was man da drin ausführen kann später
Kommen wir noch zu aber das hier sind keine docker images und das sind auch keine container das sind vms
ich bin mir nicht sicher was das für eine
Ressourcen zuteilung hat diese vms also wie viel cpus wie viel ram und so man benutzen kann
Ich muss sagen ich bin bisher in github actions noch nie an die grenzen gestoßen
Wenn man da drinne jetzt allerdings komplett verrückte sachen macht
Beispielsweise
Open street maps sich runterladen und irgendwie
preprocessen für einen routen planer wo man eigentlich mindestens mindestens 64 g ram
Und keine ahnung 500 gigabyte ssd storage braucht dass es gut funktioniert
Dann würde ich sagen gerät man mit github actions wahrscheinlich an seine grenzen aber für normale build shops ist das vollkommen ausreichend
Aber es sind vms
Sollte einem sollte man den hinterkopf behalten
Es ist im prinzip eigentlich nur gut dass es vms sind weil dann hat man keine probleme mit
Beschränkungen die man vielleicht in containern hat containern kann man nicht alles machen in vms kannst du eigentlich alles ausführen deswegen ist es
Eigentlich eine gute wahl dass es vms sind das muss man ein bisschen hinterkopf weil das sind vms deswegen dauert es auch ein bisschen bis
Beispielsweise bis es startet und sowas
Ja
Gut
Theoretisch könnte man können ich sage jetzt einfach mal ja theoretisch könntest du können module in github actions bauen
und
Gucken ob sie der korn laden kann also das müsste wahrscheinlich gehen ja ja ja
Da ich sage jetzt einfach mal ja genau wissen tue ich nicht aber ich denke schon ja
Ja du kannst da auch sehr abgedrehte sachen machen du kannst zum beispiel dann auch mit q emo
in einem container in dieser vm cross kompilen beispielsweise von
Für arm dass dann ein raspberry pie
image rausfällt und sowas ganz viele geschichten
Bevor wir uns bevor wir jetzt eine action anlegen für hier für den für den vier champ
Formen in action anlegen eine sache sollte man sich noch angucken und zwar dass alle das den start hier oben es gibt verschiedene
Einstellungen wie github actions getriggert werden können
Also es gibt es gibt mehrere es gibt glaube ich drei
Oft viel verwendete trigger es gibt noch viel mehr es gibt noch viel viel mehr kann man
Ja also kannst
Events wenn issues aufgemacht werden
Und sowas also gibt alle möglichen aber es gibt drei es gibt drei sachen wie die oft verwendet werden das erste ist und push
Branches also sprich sobald jemand in einem dieser branches neue changes pusht soll dieser job laufen
Das nächste ist und pusht tags wenn eine neun tag pusht das ist das werden wir wahrscheinlich heute auch benutzen
Wenn eine einen neuen tag pusht dann sollen die soll das sollen die jobs laufen und das dritte ist so eine art grondjob alle
Viertel stunde
In fusion ich weiß nicht genau was du meinst meinst du dass du das selbst aus dass du das selbst hausen kannst doch das gibt's
Ja und da gibt es und wie gesagt da gibt es noch so eine art grondjob dass man sagen kann alle viertel stunde ausführen oder einmal am
Tag oder einmal um zwei uhr nachts und sowas das gibt es auch das verwenden wir zum beispiel auf
Haben wir zumindest ich muss jetzt sagen auf meine alten arbeit verwendet wobei auf meiner aktuellen arbeit heute bin ich heute also ich bin ja ich bin ja noch
Ich bin ja noch drei stunden und 25 minuten dort angestellt ja also bei meiner aktuellen arbeit haben wir das auch verwendet um beispielsweise
automatisiert alle viertel stunde
irgendwelche inventar hostlisten zu erstellen aus mehreren datenquellen
Es ist tatsächlich sehr nützlich github actions nicht nur für das bauen von software sondern für alles mögliche
Ja so und ich glaube das war es jetzt eigentlich so was man an basics zu github actions wissen muss
Fangen wir mal an uns das uns das ganze anzugucken
Ich überlege gerade gibt es noch gibt es noch irgendwas also wir fangen jetzt simpel an
Achso in future habe ich noch nie gemacht das habe ich das habe ich noch nicht so ausprobiert keine ahnung
Ok
Alles klar so ich überlege gerade gibt es so etwas was manくs thấy
Es tut mir leid dass es gibt etwas wacha
Das macht überhaupt nichts besser
aber
wenn ich mal erscheint
In die
diaw Rogue
Ganz schnell
Alles klar so ich überlege gerade gibt es so irgendwas was ich im vorfeld sagen muss ich glaube nicht
Ach ja doch eine sache eine sache sollte ich noch im vorfeld sagen
Dadurch dass das ganze recht eng verzahnt ist mit github also sprich die jobs sind im gleichen repo definiert wie das sourcecode
Können diese jobs auch auf viele github
Interne sachen zugreifen oder auf viele infos die in github gespeichert sind zugreifen was enorm praktisch ist
Zum beispiel könnt ihr wenn ihr die passenden permissions anfordert mit eurer action das ist eine wissenschaft für sich deswegen erwähne ich jetzt einfach
nur mal und
Teilweise muss man manche sachen in den settings freigeben aber ihr könnt dort zum beispiel
Für eine action ein one-time-talken bekommen wo ihr dann in eine container registry pushen könnt das heißt ihr müsst euch nicht irgendwie um die
Alternifizierung über die github api und sowas kümmern das steht alles in der action zur verfügung
Ihr könnt beispielsweise auch zugreifen ihr guckt ihr seht noch sie hier hier hier sieht man es wunderbar ich lock mich hier in der github container registry
Ein und zwar gibt es hier zwei globale variablen die in dieser action zur verfügung gestellt werden einmal
Username github repository owner das bin ich und einmal secrets github talken das ist nichts was im vorfeld angelegt werden muss
das injected github
Dynamisch beim start der action in ja als als environment variablen quasi dass ich sie da drin benutzen kann das heißt man kann viele sachen die github zur
verfügung stellt
Relativ easy ohne dass man sich mit der github api beschäftigen muss direkt aus github actions benutzen wir dürfen nicht vergessen
github hat mittlerweile eine menge
Was es gibt
Also neben pull requests issues
wikis
verschiedene bild environments
deployment container registry
Releases alles mögliche was man über die github api steuern kann kann man relativ einfach aus github actions an
Anfahren ja ohne dass man sich da im detail mit beschäftigen muss wie das ganze funktioniert
Und ein weiterer vorteil und das gucken wir uns heute heute an ein weiterer vorteil von github actions ist
dass es sehr viele
Actions schon vorgefertigt gibt man muss nämlich nicht wie bei jenkins
alles von hand machen sondern es gibt viele actions die sind schon fix und fertig
das kann man sich nämlich zum beispiel angucken wenn man auf den marketplace geht
und dann mal reinguckt
damit man es mal geplendet
Und dann sieht man guckt mal da es gibt
17910 vorgefertigte actions gut die meisten davon wird man wahrscheinlich
wird wahrscheinlich nie verwenden aber wenn man hier mal
Durchguckt
Ja es ist es sehr nahe es gibt zum beispiel eine action wo man seinen source code prüfen lassen kann auf
Nein das meine ich nicht ob man auch sich an die coding guidelines gehalten hat und
Dass man sein output cashen kann
Und dass man neue github pages anlegen kann dass man sich psh irgendwo hin verbinden kann und solche geschichte das ist halt alles schon fix
Und fertig ich muss dann meistens nur zwei drei variablen als in input
hinzufügen und dann geht das ist natürlich schon enormer vorteil wenn man sich das hier anguckt also man kann relativ sicher sein
Wenn man jetzt keinen ganz super abstrakten anwendungspfahl hat dann gibt es wahrscheinlich schon was zu
Und wir gucken übrigens jetzt aber ob es was für art user repos gibt das habe ich nämlich noch nie nachgeguckt
Aber publisch gibt es hier zum beispiel okay wir sorten mal nach maus start
Bild auf packet ist publisch auch okay nicht so wahnsinnig nicht so wahnsinnig beliebt
Aber ihr seht es gibt eine fix und fertige action aha das nice können wir später vielleicht verwenden es gibt eine fix und fertige action wie ich
Im art user repo dann meine gebaute software veröffentlichen kann gibt es auch was für cobalt wasch gucken wir ziemlich sicher gibt es was für cobalt
Das heißt es muss muss ich dann gar nicht mehr von hand machen sondern kann es einfach über diesen job machen die jobs selber
Also die nicht die jobs die die actions selber die sind auch alle versioniert ihr seht hier
Den den link zum
Zum jeweiligen github repo wo es das ganze gibt aktuell ist version 2.7 2
Und wenn ihr hier unter
Wo sie möglich tags kann man auch gucken wenn man sich jetzt anguckt die sind die dinger sind immer getagged
Das heißt man kann sich sicher sein und das finde ich ist wirklich eine coole sache
Wenn man seine actions die man verwendet also die sachen die andere leute schon haben
Wenn man die taggt mit einem mit einem version stack dann kann man sich sicher sein
dass auch bei updates
Der eigene workflow hier weiterhin funktioniert also sprich wenn ich jetzt zum beispiel sage hier ich verwende die
die action für
dort net installieren in meiner ubuntu vm
Und die habe ich festgelegt hier die action
Dort net installieren in meiner ubuntu vm
Und die habe ich festgelegt hier action nennt sich dort net setup
Version 3 dann heißt das der verwendet ich glaube version 3 bedeutet bedeutet dass der auch patch version nimmt
Da kann ich mir sicher sein selbst wenn die diesen parameter umbenannt haben in einer der neueren versionen dadurch dass ich explizit hier
referenziere auf v3
Dass das eben nicht so ist dass das weiter funktioniert und das ist wirklich eine coole geschichte
So und jetzt das letzte damit sich der chat freut
Marketplace github actions wir gucken mal nach cobalt
Setup cobalt guck mal hier sogar für cobalt gibt es was also es gibt wirklich für alles was
Also wenn sogar wenn sogar für cobalt was fertiges drinne ist da kann es dir sicher sein du wirst für das meiste was finden
Jetzt braucht man nur noch die action um die action zu updaten du wirst lachen das gibt es
Nennt sich nennt sich renovate unter anderem gibt es gibt es dafür gibt es gibt es dafür
Das ist das richtige renovate
Kannst du benutzen für sowas
Renovate scannt dein repo
Nach config files die versionsnummern enthalten und macht dann einen pull request in einem repo auf
Ob du nicht die versionsnummer updaten willst ich kann dir das sogar in action zeigen ich glaube wir haben das sogar in einem repo mal kurz getestet
Ja hier sieht man es hier sieht man es
Pull requests
Pull requests
Genau so so sieht das so sieht das ganze aus
Also renovate hat mein repo gecheckt hat festgestellt es gibt eine datei
Wo eine versionsnummer hardcoded drin steht und da gibt es jetzt eine neue version möchte ich das möchte ich das ganze nicht updaten
Und soweit ich weiß kann renovate auch github action files
Das heißt ich kann mit renovate github act ich kann mit der github github
Mit der renovate bot github action kann ich an kann ich den restlichen github actions updaten lassen
Dann wird es dann wird aber extrem feif her
Das ist das ist schon sehr nice
So dass mal kurz in ob's jetzt habe ich das irgendwie zugemacht
So dass mal kurz in ob's jetzt habe ich das irgendwie zugemacht
Das mal kurz cobalt gucken set up cobalt
This action sets up a set up a new cobalt programming language environment
Nice gut lange rede kurzer sinn ich guck mal kurz in discord
Hat keiner geschrieben heute also anscheinend gibt es
Kein kreisel grind
Na dann
I put the action in my action to action while action
Ja genau genau hier sieht man das hier sieht man es
Gut dann fangen wir mal an ich würde sagen wir fangen mal sehr simpel an
Und zwar legen wir eine wir machen mal kurz wir machen mal einen neuen branche davon
geht pull github
Wir haben den def branche
Haben wir dinger gemacht brauchen wir alles nicht mehr geht wenn ich jetzt richtig schreiben kann geht check out
Out master geht branche minus d def
Jetzt pull github master
Aktuell stand geht check out wobei ich ich hoffe ich habe meine alias hier
geht check out minus b def
Ich habe meine alias hier
So jetzt haben wir in def branche und ich würde sagen da legen wir jetzt mal eine
Github action drin an
Und wie gesagt damit github actions funktionieren muss das ganze in diesem verzeichnis liegen
github slash workflows also wir sind hier in
Quasi in diesem repo drinne jetzt ich habe das lokal bei mir geklont also
Mk dir github also versteckter ordner github mk dir workflow workflows oder workflow
Workflows
Workflows und da können wir jetzt was drin anlegen zum beispiel eine
Ja bild punkt jammel
Leere datei macht noch nichts wir schreiben jetzt was ganz simples rein
Und zwar also wir machen jetzt auch gar nicht viel in diese action dass man sieht dass es funktioniert
Das ding braucht ein name dass es das es funktioniert
Gibt es für die workflows es gibt lokale runner ja zum beispiel das hier
Machen wir aber heute nicht also du kannst github actions lokal ausführen du kannst diesen runner in deinem repo auch registrieren
Dass es dann da drüber ausgeführt wird aber da muss man ein bisschen vorsichtig sein also falls ihr auf die idee kommt
Bei einem public repo einen lokalen runner zu verwenden da müsst ihr euch im klaren drüber sein
Dass es quasi in einem public repo jemand zugriff auf eine lokale vm
Über umwege bei euch bekommt also da müsst ihr euch das wirklich überlegen ob ihr das so machen wollt zum beispiel wenn ihr das eingestellt
Habt dass bei jedem pull request
Irgendetwas ausgeführt wird so und ihr habt jetzt ein public repo und lokalen runner dort registriert und irgendjemand
pusht jetzt
ein pull request oder macht ein pull request auf und hat dort
Irgendein mist in den mist drinne stehen dann führt das euer lokaler runner aus und im zweifelsfall
Könnte das negative auswirkung haben auf eure lokale umgebung also mit public repos und lokalen runner muss man ein bisschen aufpassen
Mit den cloud runner ist das kein problem
Wir nehmen uns einfach mal ein beispiel hier aus dem
Die hälfte
Boah man die schwätzen eigentlich hier voll im leben okay ich mach die ich mach die minimal action selbst hat hat keinen sinn also
Wir pushten das ding einfach
Wir pushten das ding einfach dort net heißt es beim pamphlet so wir bauen jetzt einfach bild ist egal wie das heißt
Rest editieren wir über github weil dann sieht man das ganze ein bisschen schöner
geht status geht
so was haben wir denn
geht komm mit
bester temp bester name so heißt das jetzt temp git push github def
Okay so github actions
Temp oh nein temp ist fehlgeschlagen also wir sehen jetzt an der an der stelle schon mal zwei sachen
Wir haben in unserem def branche einen workflow oder einem github action angelegt beziehungsweise workflow angelegt mit dem namen bild
Leider steht halt noch sonst nichts drinne
Und sobald man das gemacht hat seht ihr hier taucht unter actions was auf und zwar dass es fehlgeschlagen ist
Ja gut es ist völlig fehlgeschlagen weil naja es steht ja auch noch gar nicht drinne was gemacht werden soll
Das musste ja im endeffekt fehlschlagen
Jetzt können wir das ganze hier über github editieren
Waren wir mal ein bisschen ein bisschen größer hier die schlagen einem die schlagen einem hier auch beispielsweise immer sachen vor wenn man selbst nicht genau
Weiß wie das funktioniert aber am besten ist am besten man guckt einfach auf marketplace
Wie das wie das wie das ganze funktioniert
Also wir fangen jetzt ganz simpel an abriss johnny moin
Wir üben actions ja champ gut dass du da bist aber nicht teste dass ich teste das ganze nicht lokal
Also das erste was man angehen muss für so eine action ist wann die ausgeführt werden soll das habe ich euch ja eben schon gezeigt
Es ist jammel es ist auch alles dofe dabei was jammel so ausmacht eindrückungen die nicht stimmen und sowas
Ja man ist ja heutzutage immer jammel engineer als irgendwas anderes insofern ist es selbst das hier natürlich auch selbstverständlich jammel was sonst
So und jetzt kann man hier sagen zum beispiel und push jetzt müssen wir uns überlegen ok
Wann wollen wir
dass unsere software gebaut wird
Bei jedem push alle viertel stunde bei einem tech push in der regel würde ich sagen entweder
Alle einmal am tag für irgendwie so ein daily bild nachts das können wir nachher auch machen
Oder aber bei einem push von einem tech wenn es eine neue version gibt gibt es in der regel einen neuen tech
Also könnte man sagen ok wir wollen unsere software bauen lassen wenn es einen neuen tech gibt
Und das funktioniert folgendermaßen
Moment ich habe das falsch geschrieben muss ja auch texte vor habe ich vergessen so
Ich kann sagen und push wenn neue text gepusht werden und dann kann man wildcards verwenden wenn ein tech gepusht wird der mit v
anfängt das heißt wenn wir unsere unsere software jetzt taggen zum beispiel mit
V
3 oder sowas
Ja genau ganz toll und das dann pushen dann wird github actions erkennen aha siehe an
Da hat er mal den tech gepusht und der workflow match darauf deswegen führen wir jetzt den workflow aus
Also wir wollen das ganze ausführen wenn ein tech gepusht wird
Als nächstes muss man angeben
Permissions falls man welche braucht brauchen wir jetzt erstmal nicht
Jetzt muss man seine jobs definieren also jobs ist im endeffekt das was ausgeführt werden soll
definieren wir mal ein job bild es kann ja durchaus sein dass man mehrere jobs hat zum beispiel ein job für bild
Und ein job für oder was weiß ich bild man könnte sagen man hat einen job für bild
Amd 64 und bild raspberry pi oder sowas ja keine verschiedene verschiedene jobs geben
Jobs können
Wenn man das wenn man das richtig definiert können jobs parallel ausgeführt werden
Innerhalb eines jobs
Ist allerdings alles streng sequenziell ja genau man könnte erst testen dann bilden und wenn man das je nachdem wie man das angibt kann
Jobs parallel ausführen lassen also man kann zum beispiel
ein bild wenn man jetzt sagen würde ich will meine software bauen für
x86 64
Und ja bla bla bla und dann habe ich noch einen bild shop für bild
Bild arm oder sowas das würde funktionieren das kann man wenn man es richtig definiert
Dann auch
Parallel laufen lassen aber das machen wir nicht wir machen heute einen job
Wir machen also ein workflow mit einem job drinne und der ist dafür da um die software zu bauen
Gut jetzt muss ich noch angeben ich glaube hier gibt sogar autocomplete wenn man control
Leertaste drückt kriegt man kriegt man hier bei github ein bisschen ein bisschen autovervollständigung was an der stelle erlaubt ist
So wir wollen haben run runs on aber du hörst dann auch schon wieder auf mit autocomplete
Da gibt es an der stelle nur was uns interessiert und to latest
Github actions vms man hat auch irgendwo eine übersicht was es gibt
Ubuntu
Genau also folgende folgende sachen stehen zur verfügung
Die man hier benutzen kann die github für einen kostenlos zur verfügung stellt bis zu 500 minuten
Bis zu 2000 minuten im monat also man kann das ganze entweder unter windows server bauen lassen man kann das ganze laufen lassen
Und dann ist oder man kann das ganze unter ubuntu laufen lassen bunt gibt es latest das zeigt immer auf das letzte
Lts release in dem fall ist es 2204 also man könnte wenn ich hier auf nummer sicher gehen will dass es immer mit dem gleichen
Den gleichen voraussetzungen ausgeführt wird kann ich auch sagen ich will ubuntu 2204 anstatt
Also es könnte ja sein dass jetzt demnächst irgendwann ubuntu
24 04 rauskommt das nächste lts ist 24 04 dauert noch ein jahr aber ziemlich so bald
Demnächst in einem jahr 24 und dann könnte es ja sein dass mein workflow nicht mehr funktioniert weil ich auf irgendwelche
Eigenheiten zurückgreife von ubuntu 22 04 die sich dann in 24 04 geändert hat das heißt man kann auch hier
Relativ statisch reinschreiben was man haben wird muss sagen ok
Worauf soll denn dieser job ausgeführt werden und zwar auf einer vm mit ubuntu 22 04
So und jetzt als nächstes muss ich meine build steps definieren also sprich was soll nacheinander
Ausgeführt werden die erste action die man nahezu immer braucht deswegen copy copy paste ich die mir auch die erste action die man
nahezu immer braucht ist die hier
Check out repo beziehungsweise check out action die check out action macht nichts anderes wie den inhalt von eurem repo
In die vm hier zu kopieren
Und nachdem wir in der regel immer was machen wollt mit dem inhalt des repos wobei nicht immer
Es gibt ja durchaus auch leute haben ich euch ja gerade erzählt dort wo ich aktuell noch arbeite für drei stunden nicht für
vier stunden noch genau
Für vier stunden und für vier stunden und ne für drei stunden und vier minuten
Kann ich rechnen für vier stunden und vier minuten das macht quasi einen git clone im endeffekt genau
ich also dort wo ich auch für vier stunden arbeite wir benutzen das zum beispiel um
Inventarlisten zu generieren alle viertel stunde und dass man muss nicht zwangsläufig den repo inhalt kopieren aber
Du willst ja meistens den kram aus deinem repo benutzen das heißt die erste action die man nahezu immer braucht ist den repo inhalt
in die ubuntu vm kopieren
immer
im endeffekt also
Ich glaube ich habe ich habe keine action am start wo das nicht mindestens gemacht wird
so und jetzt können wir uns mal angucken
Das war schon mehr müssen wir an der stelle gar nicht machen jetzt können wir uns mal angucken
Wie man kommandos da drin ausführt weil es gibt ja nicht zwangsläufig für alles vorgefertigte actions was man machen will das wäre ja
Blöd wenn die einfachsten sachen
Nicht möglich wären von hand auszuführen und es für alles in der action braucht was man jetzt machen kann ist folgendes man kann
Einen neuen step anlegen nennen wir jetzt mal command command keckel
und das kriegt eine ein ein
Sieht das hier feld run und da kann man jetzt
Befehle beziehungsweise shell befehle reinschreiben
Das ist jammel synthax wenn man hier so einen pipe dahinter macht ist das was da drunter kommt ein
Multi multiline string das heißt ich kann jetzt einfach hier sowas machen wie lsl a
echo 1 2 3
Jaja
huge and prams ab so
Kann ich jetzt machen jetzt speichere ich das ganze mal und dann gucken wir uns an ob es funktioniert
Dann baut github das in einer eigenen vm kurz zusammen richtig github actions
Übergibt das an den runner
Wir müssen es gar nicht so kompliziert sagen github github actions startet eine vm und führt den kram hier drinnen aus genau
Ja so jetzt
Committen wir das ganze mal wenn man jetzt in actions guckt passiert noch nichts
Also wenn man jetzt jetzt passiert noch nix an der stelle
Warum chat wer wer hat ahnung warum noch nix passiert
Kein tag richtig
Kein tag richtig
Mach workflow dispatch dann ist es einfacher workflow dispatch ist dass man einen knopf hat zum manuell starten
Aber das ist richtig chat es gibt noch kein tag also das heißt hier an der stelle
An der stelle hier gibt es noch nix das heißt wenn wir jetzt
Sonst musst du immer taggen ja können wir gleich einfügen aber du hast recht es ist sinnvoll das einzufügen
Aber jetzt erst einmal zeigen wir mal dass das auch prinzipiell funktioniert alles so das heißt wenn ich das ganze jetzt tagge
Ich ich ich pull mal kurz
So wenn ich jetzt wenn ich jetzt sage
Gith tag
Minus a ja machen wir das hier mal minus a minus m
V3 neue version wird getaggt und dann pushen wir die pushen wir den tag
Ich will ich zu origin ich will zu
Github
Ja
Po tag
Alter
Ok
Gith tag minus d
Ich löscht das ding jetzt einfach geht push geht ab minus minus delete
V0.0.3 ignoriert es einfach mal jetzt ist der tag weg und wird neu gepusht
So jetzt habe ich meine software neu getaggt neu gepusht und ihr werdet feststellen bäm
Da tut sich was da läuft jetzt was
Das dauert jetzt ein bisschen bis das ganze startet das ding muss eine vm für uns anlegen beziehungsweise muss erst mal uns warten bis platz
Auf vorgefertigten vms ist je nachdem wir dies intern
gemacht haben aber ihr seht auch der job ist durchgelaufen es ist ja auch nicht viel passiert hier setup job
Checkout repo den step hat er gemacht er hat quasi unser repo geklont
Wo man es genau sieht hier in ich in ich leise den repo fett schrieb und das ist er repo geklont und dann hat er
Unseren keckel step ausgeführt der im prinzip genau das gemacht hat was wir reingeschrieben haben
ls ls minus la auf root und 1 2 3 rr q chat primes ab ausgegeben
Das ist übrigens der moment chat wenn es euch gefällt und weiterhilft
Wo ihr primes haben könnt
Aber natürlich nicht müsst
Trotzdem wenn ihr den primes habt nicht dass ich mich nicht drüber freuen würde oder so ihr könnt in mir gerne geben ich habe da
Keine schmerzen mit ich finde das freue mich über jeden primes ab aber
Ihr solltet euren primes ab zumindest verwenden einmal im monat wenn auch nicht wenn auch nicht unbedingt jetzt auf mich weil ansonsten überweist
Ihr direkt 2 euro 50 an besos das wollt ihr wahrscheinlich nicht
Deswegen könnt ihr euren primes ab irgendwo auf twitch raushauen ich freue mich natürlich auch wenn ich euren primes abklicke
Ab letztens einen workflow für einen
cd prerelease für einen minecraft bot gemacht
Hab aber noch keinen plan wie ich das wirklich bequem hinbekomme mit automatischer versionierung bezug auf meinen brandstruktur gut
Das ist immer eine sehr individuelle sache das sagen die übrigens auch in ihrer hilfedatei das github actions eine
Boah wie sagt die marketing abteilung von github dazu
Github ich glaube die marketing abteilung von github nennt das github actions
Ist ich kriege sie zusammen zu nennen zumindest nennen die das github actions ist choose your own adventure style
Irgendjemand in der marketing abteilung dachte sich choose your own adventure ist eine gute beschreibung dafür wie github actions vom ansatz er ist
Also was sie damit sagen wollen ist es gibt keine starre vorgefertigte struktur wie du bestimmte sachen machen muss sondern du musstest dir selbst
zusammenstellen aus den aus den bauplöcken die da sind
Was auch gut ist weil so kann man es ziemlich individuell anpassen
Ja so dankeschön für den sub jonathan proga subscription und liest das normal
auch am start
dankeschön leute für die primes subs
So und jetzt hat er das ganze ausgeführt was wir hier reingeschrieben haben
was er machen soll so
Das ist so ziemlich die simpelste form von einem
Jcon dankeschön pox subscription jetzt kommt gleich der scam train um die ecke ich sehe schon hier
pass auf
der jebait train fährt an
Oder an die stufe eins abgeschlossen
Wo ist der jebait train hat kein bock mehr ach da oben ok
So das ist jetzt so ziemlich die simpelste art und weise eine github actions anzulegen die es gibt also
Ist ja nicht viel bei aber man sieht jetzt schon eine ganz coole sache hier dran
Man könnte jetzt prinzipiell wenn man zum beispiel noch lokale jenkins jobs oder so was hat die nicht viel großartig kompliziertes machen
noch nicht auf lokale ressourcen angewiesen sind
Man könnte auch hier seine shell befehle reinschreiben das heißt man muss nicht zwangsläufig für alles eine action benutzen
oftmals ist es auch einfacher wenn man drei vier befehle shell script reinschreibt und dann ist fertig das schöne ist dass es immer
nachvollziehbar es muss nicht auf einer lokalen entwicklerkiste laufen
Und es ist zentral im repo gepflegt also das hat schon hat schon seine vorteile
Versand mal github actions zu sehen wie gesagt dafür habe ich github noch nicht soviel benutzt
Ja
Also man könnte jetzt alles man könnte jetzt alles mögliche machen man könnte jetzt zum beispiel auch sagen ihr drehen ab install
oder sagt mir mal irgendein gutes package was man installieren könnte
Aski aquarium gibt es leider gibt es leider gibt es leider nicht unter unter debian startmäßig also ist ja auch egal
Also ist ja auch egal man könnte man könnte jetzt alles mögliche hier keine ahnung hardtop zum beispiel
Man könnte jetzt alles mögliche hier installieren falls man das braucht für für seinen weitere weiteren schritt neo gibt gibt es neofetch
neofetch
Wo muss ein workflow workflow dispatch über ein workflow dispatch über ein workflow dispatch über ein workflow dispatch über ein workflow dispatch
überhaupt hin hier oben
ne wahrscheinlich
Wo muss denn das hin
Wo muss workflow dispatch hin
Ach on ach so ja ist ja eigentlich logisch jaja
Ja
Und workflow dispatch inputs
Kannst du leer lassen
Ok also im prinzip so dann müsste es auch funktionieren
Oder oder muss ich jetzt hier irgendwie
Ne wahrscheinlich ich glaube nicht
Ne muss man nicht verbrannt das muss man glaube ich auch nicht
Es ist eine map und keine liste ok start kommet
Zack
Jetzt können wir hier zu actions zu actions gehen und das wahrscheinlich auch manuell triggern wo triggert man das jetzt manuell
5 hat high IQ chats chatters wie triggert man das jetzt manuell
Wer ist so high IQ nur ist das ich hab das noch nicht benutzt
Man hier wenn man reinklickt kann man es rerun
You don't
Ja anscheinend anscheinend don'ten wir
Aber gut gut das was das ist wahrscheinlich weil es nicht im master ist kann ich mir vorstellen vielleicht zählt nur das was im master ist
Ist aber auch egal wir pushen einfach text und gut ist juckt mich juckt mich jetzt nicht weiter
Dann nehme ich ich nehme das mal wieder raus
Und editieren editieren wir das weiter mal lokal wir pushen wir pushen einfach neue text ist doch egal so pull
Jetzt machen wir was ganz was ganz eklig ist
Gits komm mit
Minus a minus m
Kekkel beste beste name
Minus minus amend dass auch alles dran ist geht push
Minus minus force bam in your face give him
Als funst wieder getriggert
So und jetzt werden wir sehen sagt es wieder gepusht
Jetzt macht er genau das der installiert neo fetsch
Und führt neo fetsch aus sofern es das package gibt wenn es fehlt schlägt falls es fehlt schlagen soll es nicht fehlen
Und führt neo fetsch aus sofern es das package gibt wenn es fehlt schlägt falls es fehlt schlagen sollte wir gar nicht so
schlecht es schlägt fehl nice
nice weil
Ich nicht gut bin ok
Es ist gut zu sehen dass das ganze mal fehl schlägt weil so sieht das aus wenn irgendwie ein fehler drinne ist in euren in euren actions
Das bricht einfach an der stelle ab aber ihr könnt euch im nachhinein immer noch den output angucken und gucken wo das ganze fehl
geschlagen ist man muss sagen die
Ausgabe von manchen konsolen tools sehen wir jetzt gleich auch wenn man docker content docker image bauen oder sowas die man die ausgabe von manchen
Cli tools ist in github actions ein bisschen abartig
Weil das ja kein terminal ist das heißt wenn du eine progress anzeige hast dann macht das pro progress update
Eine neue zeile und spammt sich spammt sich hier erst mal voll
Gut aber ich würde sagen dann machen wir was sinnvolles in unseren actions
Wim github workflows nee nicht docker image
Workflow bild so also was können wir denn sinnvolles machen das ziel heute ist ja dass wir unsere
Software bauen
Und dass wir zum im ersten im ersten zwischenschritt mal
Ein bild hier in so einem workflow veröffentlichen das geht nämlich man kann aus einem workflow
Die software die man gebaut hat quasi exportieren das nennt sich ein artefakt
Und das hängt dann wenn man hier unter summary geht man sieht jetzt noch nichts weil ich nichts exportiert habe hier unter summary steht dann unten
Noch der output der binary output also quasi das kompilierte von von dem job
Das ist so das erste zwischendritt bevor wir uns das art user repo angucken weil da habe ich dann echt keine ahnung wie es funktioniert
wie das funktioniert also
Machen wir diesen blödsinn machen wir diesen blödsinn mit neo fetsch mal wieder weg also wie bauen wir
Unsere software aktuell bauen wir unsere software so
Kann ich euch mal zeigen es gibt ein docker feil da passiert folgendes drin
Er nimmt cento s7 als grundlage warum cento s7
Er nimmt cento s7 als grundlage warum cento s7 das kann ich mal schnell erklären und zwar
Ich benutze hier eine brifu version von dotnet 8
dotnet 8 hat ein neues oder was kein neues feature ein
verbessertes feature
für single
Teil executables
Und zwar kannst du deine komplette dotnet anwendung wie bei go im endeffekt wobei es nicht ganz so cool ist wie bei go
In eine in eine einzelne exe zusammen bauen lassen und bei windows bei windows sprache zu bleiben
Und das haben die jetzt verbessert die
Dateien sind deutlich kleiner
Zeige euch das mal das binary wenn man das kompiliert ist nur noch 12 mb groß
Das ist auch nicht so viel größer als als eine go als ein go binary vor allem was da alles da ist ja alles mögliche drin
So
Also das docker feil das docker feil ist nicht nicht super optimal aber es macht das was es machen soll
Es zieht sich cento s7
Und es zieht sich cento s7 ach so ich müsste es vielleicht mal ergänzen was ich gerade sagen wollte
und
Wenn er das kompiliert zu so einer single binary dann hat er eigentlich keine abhängigkeit außer ein ding
und zwar
Die aktuelle
gelibc version unter dem us wo es gebaut wird
das heißt wenn ich das hier jetzt bauer auf meinem art standung sind so ziemlich
Aktuelleres system kannst du nicht haben dann läuft die software höchstwahrscheinlich auf älteren system nicht mehr
Weil mindestens gelibc version so neu ist dass es halt zum beispiel schon auf dem umbundung von letztem jahr wahrscheinlich nicht mehr laufen wird
Deswegen baue ich das unter was ganz altem deswegen baue ich es unter dem cento s cento s hat gelibc
2.17 oder sowas dies von 2012 das ist uralt das heißt das ist übrigens auch ein super anwendungsbeispiel für container
das heißt nämlich auch wenn ich das hier baue und das ente 7
Muss ich den ganzen muss ich muss schon mal dieses ganze alte zeug nicht auf meinem host system installieren sondern kann es im container machen
Und die software die am ende raus fällt ist lauffähig unter allen linux systemen die die letzten
zehn jahre rausgekommen sind
Und da kannst du dich nicht beschweren binary drauf kopieren wunderbar funktioniert oder aus dem repo installieren wenn man arsch verwendet
Also das ist der grund
Warum genau cento s und nicht irgendein debian
weil nur cento s noch
Aktive repos hat und noch halbwegs gepflegt wird mit einer so alten gelibc version
Die anderen debian sind alle out out of support und bei den alten ubuntu gibt es beispielsweise schon gar kein
Repo mehr was funktioniert
Zumal die alten ubuntu teilweise zu alte gelibc versionen haben
Gelibc 2.17 ist genau richtig alt so dass es noch von dotnet 8 supportet wird ja und es ist bald out of support
Raus aber solange dotnet 8 läuft kann man dort mit 8 damit bauen das ist ja nicht schlimm
Macht ja nix die abhängig ist sonst hat es ja keine abhängigkeit
So und in diesem docker image
Passiert eigentlich nichts großartiges wird erst mal das system geupdatet dann wird dort net installiert dann wird die software in das container image also in
Container rüber kopiert
Und dann wird dotnet kompiliert also das das programm kompiliert fertig aus das war es
So dazu gibt es noch ein build script was wir heute aber nicht weiter verwenden werden
Build script was ich was ich dann in binary da raus kopiert
So also im prinzip wird es mit dem docker file gebaut das heißt wir müssen jetzt gucken wie kriegen wir
Dieses docker bild wie kriegen wir das ganze in github actions untergebracht
Und da zeige ich euch jetzt ein paar tricks zu das heißt wir machen jetzt mal von von von null auf
Naja von nicht von null auf 100 aber wir machen jetzt ein bisschen ein bisschen advancederes zeug
Das kann das muss ich sagen das kann ich nicht auch wenn es jetzt vielleicht so aussehen das kann ich nicht alles aus dem
Kopf runterschreiben da muss ich zwischendurch in dem bei ein bisschen abgucken wie das funktioniert aber ich erkläre euch alles und zwar
Wir wollen jetzt in docker image bauen
Also wir wollen quasi in docker image anlegen in github actions
Mit cento s7 darin die software bauen und am ende wenn das fertig ist
Die software aus dem container image raus kopieren und veröffentlichen
Also anhängen eine github action ich nenne es mal veröffentlichen das ist das ziel
So bauen mit docker in github actions ist relativ easy da gibt es eine fertige fertige action
Beziehungsweise man braucht eigentlich gar nichts weil ich werde es euch mal zeigen
Gehen wir mal zu unserer keckel action zurück ich kann einfach sagen
docker bild punkt
Lasst euch nicht jebaiten es wird nicht funktionieren ich zeige es euch nur was jetzt passiert
So
Jetzt läuft eine neue action los
Und docker ist schon vorinstalliert in dem ubuntu image was
In github actions benutzt wird werdet ihr werdet ihr gleich sehen der bild das bild wird nicht gehen
sei ich gleich dazu
so check out
Guck jetzt macht da gerade einen docker pull und ihr seht jetzt vielleicht schon eine sache
Es ist abartig langsam
So ein großes container image zu bauen guckt euch das mal an es ist abartig langsam ein großes container image in github actions zu bauen
Und wenn man sich jetzt überlegt der muss das jedes mal jetzt machen
Da muss jedes mal weil der baut das in der vm dieses container image und schmeißt die vm danach weg
heißt ja auch
Das docker image ist weg das heißt wenn ich das nächste mal das ganze ausführe da muss er das wieder machen
Das kostet euch drei minuten
Und es ist nervig wenn ihr drei vier minuten wartet
Und es ist nervig wenn ihr drei vier minuten warten müsst bis eure software fertig gebaut ist
Ich glaube gebt ihr mir recht oder ist schon ein bisschen doof wenn man jedes mal so lang darauf warten muss
Deswegen gibt es jetzt was neues das ist tatsächlich relativ neu das gibt es glaube ich erst seit ein paar monaten
Man kann docker verwenden um das container image zu bauen mit github actions support
Die haben mittlerweile in docker eingebaut beziehungsweise in build x oder in buildkit
Haben die github action support eingebaut das ist eine ganz neisse geschichte früher musste man das alles von hand machen
Hier könntest du auch ein base image für bauen es wäre auch total easy
Du musstest halt in irgendeine registry pushen
Können wir vielleicht auch mal machen
Können wir vielleicht auch mal machen
Chat nicht weggehen ich muss mal kurz den chat refreshen ich sehe euch mal kurz nicht nix anstellen
Okay wieder da chat hat gerade verabschiedet bei mir im vorschau bildschirm
So ihr seht wie lahm das ist
Ihr seht wie lahm das ist das willst nicht das willst nicht guck mal hier zwei minuten drei sekunden es wird übrigens auch gleich kaputt gehen
Was sind github actions
Github actions ist quasi der jenkins von github kennst du jenkins soll es ist kaputt gegangen
Das ist blazing die store wenn du jenkins kennst dann ist das der jenkins von github nur dass man ihn in jammel konfiguriert
So er sagt weil
Targetversion fallt also es hat nicht funktioniert so jetzt überlegt euch mal ich habe jetzt zwei minuten 16 gewartet
Das ding ist fehlgeschlagen ich würde jetzt was anpassen das wieder pushen und ich müsste noch einmal
2 minuten 16 warten bis ich sehe ob es wieder funktioniert da drehst du durch dabei da wirst du verrückt
Deswegen gibt es einen richtig nice trick
Wie man das ganze beschleunigen kann und zwar wenn ihr mal hier unter action guckt also es ist logisch oder warum das so langsam ist
weil das ist eine vm
und
Der baut das image in der vm und wenn ich das image wieder bauen wenn ich das neu anstoße ist die vm ja weg
Der hat den letzten stand nicht mehr wenn ich das lokal bei mir machen würde da würde an der stelle hier weitermachen und wäre ziemlich schnell
Aber so muss er das alles wieder neu machen weil ihm der inhalt von der vm weg ist
Das kann man beheben das gibt nämlich wenn ihr unter action guckt so was hier caches
aktuell gibt es noch keine caches
Aber naja man sieht dadurch dass da schon so ein button für caches ist man kann das ganze irgendwie cashen
Es gibt unter github die cache action
Da die kann man manuell benutzen für alles was man so will das sieht dann beispielsweise
Das sieht dann beispielsweise so aus ja da kann ich hier sagen
Restore von diesem cache und wenn du fertig bist dann speichere das ganze unter diesem key im cache
Das heißt das ist universell einsetzbar für alle outputs nicht nur zwangsläufig für docker
Also das geht das geht für alle also wenn ihr wenn ihr java programme baut mit mehreren zwischenstabs oder wenn ihr generell mehrere bild
Stabs habt und das cashen wollte so was könnt ihr manuell cashen mit der mit der caching action ist kein problem
was viel nicer ist
docker hat das mittlerweile eingebaut
Guck mal docker bild x nicht das normale bild die bildkit extension hat das eingebaut
Das will ich eigentlich nicht das will ich haben
Und das nennt sich docker bild x bild
Und da gibt es jetzt sowas
cache from
cache to
Man sieht schon irgendwie können die sich an speziellen ordnern kann man dort
Zwischenstände von seinem container bild von seinem container bild zwischenspeichern
Und das neueste feature das ist wirklich noch nicht lang drinne
Ein halbes jahr oder so vielleicht die können jetzt
GitHub actions cache direkt benutzen früher musste man das bild quasi machen
Früher musste man das bild quasi machen dann sich eine caching action einbauen die
die
Zwischenstände kopiert hat in den cache beim nächsten rand wieder
Restored hat das caching directory umgebogen hat und daraus gelesen hat mittlerweile ist github actions cache direkt in bild x eingebaut
Das heißt man kann jetzt hier direkt angeben
Das heißt man muss außer das richtige docker bild kommando gar nichts mehr verwenden dass das ding auf den
github actions cache zugreift ich glaube standardmäßig ist da cache 500 mb
Aber das reicht ja auch
Ne im moment das stimmt nicht der cache ist nicht 500 mb der cache ist größer der cache ist glaube ich 10 gigabyte für
github actions cache
Giga bei für für jetzt habe actions cache free
Ok steht ich nicht irgendwo
Github actions cache
3 tier ich glaube 10 gigabyte ist das freetier und das reicht das reicht eigentlich in der regel so
Also das heißt wir müssen uns reaction anpassen dass der es
Einmal bild x verwendet für docker und nicht normales docker bild
Und dass das ganze gecached wird das heißt als erstes fangen wir an dass bild x installiert wird weil normales docker bild
Tut es nicht mehr wenn ihr normales docker bild macht wird euch vielleicht noch auffallen dass der mittlerweile
Dass der mittlerweile meckert dass das der legacy bilder ist und man auch gefällig bild x verwenden soll
Den install ich ne bild bild x auch mal lokal
Ihr müsst euch keine gedanken machen ich gehe nicht davon aus dass die es jemals aus einem future release
Entfernen werden es gibt so viele scripts wo docker bild direkt verwendet wird das ist bescheuert wäre total bescheuert das zu entfernen
Wobei man sagen muss die company hinter docker macht die letzten jahre über viel sinnlosen scheiß es könnte also auch sein dass die docker bild irgendwann
Mal entfernen
Zutrauen würde ich es ihnen habt ihr übrigens mitbekommen die haben die haben zurück gerudert
die haben zurück gerudert mit ihrem
docker team accounts entfernen und sowas das wird jetzt wird jetzt weiter bei behalten
Also als erstes müssen wir jetzt bild x installieren das ist easy das kopiere ich mir raus
Das funktioniert nämlich genauso fertig man gibt hier einfach an dass man diese action verwenden möchte
install bild x docker set up bild x fertig mehr muss man nicht machen jetzt hat man einen docker mit bild x in seiner
Ubuntu vm auf github zur verfügung
So und jetzt wird es ein bisschen komplizierter
Jetzt müssen wir sagen wie er unser unsere anwendung zusammenbauen soll ich kann euch schon gleich sagen direkt so wird es nicht funktionieren wir müssen das nachher
Noch das docker file anpassen dass es funktioniert vielleicht vielleicht machen wir das auch erst lokal mit dem docker file
Vielleicht passen wir auch das docker file erst mal an dass wir da auch gleich gucken können ob es funktioniert
Also wir müssen jetzt nicht mehr docker bild aufrufen sondern wir müssen aufrufen docker bild x bild
Punkt sieht jetzt ein bisschen anders aus aber im großen und ganzen macht es immer noch das gleiche
Es ist immer noch play singly slow
Es ist immer noch play singly slow
Aber wir können das lokal mit cash mit mit mit mit cashing schon mal ausprobieren
Ich lasse es jetzt einmal lahm durchlaufen das einmal durchlaufen muss was machen
Zum glück zum glück geht das ganze lokal ein bisschen schneller wie über github actions
Damage ist dann ja ist so die sind die sind auch total bescheuert also dass sie das angekündigt haben haben sich weitere leute
Nachdem sie ja schon nicht mehr die hauptanlauf stelle für docker images sind weil sie sich selbst verschissen haben die letzten jahre über
Es gab keine es gab keine docker es gab keine github container registry keine github konnte die haben alle docker images
Auf github auf docker hab gehostet bis die auf die glorreiche idee gekommen sind zu sagen ach nee wir schaffen mal das free tier ab
Bild oder ein es ist kaputt weil ich keine richtige version angegeben habe siehste geht schon los
Geht schon los also unser docker bild kommando ist verkehrt
dort net compile möchte eine target version haben bei mir
Die target version ist relativ einfach anzugeben bild args
Bild arg
Target target version gleich 0.0.3 nennen wir das ganze jetzt mal
Und ihr seht bei mir lokal ist es jetzt gecasht geht es viel schneller ist euch vielleicht aufgefallen
Ich habe jetzt alle steps bis zum compile übersprungen weil mein bild gecasht ist das ist ja auch kein ding mein lokaler state
bleibt ja vorhanden ich habe ja nicht meine vm kurz gelöscht und
Und wieder neu gestartet so wie das so wie das unter github github actions der fall ist
also es ist viel viel schneller dieses ganze einrichten des
docker containers
Ist mir erspart geblieben und wenn ich jetzt noch mal ausführe ist es blazingly fast written in rust
Weil es ist ja im prinzip schon fertig
So das kommando ist allerdings immer noch nicht ganz korrekt es fehlen noch ein paar dinger was wir brauchen einmal
Brauchen wir die ganzen angaben zum cash die können wir jetzt noch nicht machen weil ich lokal
Kein github actions cache gescheit benutzen kann wie soll das funktionieren
Aber wir haben ein problem an der stelle jetzt
Ich habe jetzt ein image gebaut so passt mal auf
Vielleicht vielleicht fällt euch das problem auf so ich habe ein image gebaut und ich kompiliere mein dotnet programm
in
den ordner bild
Ja was ist jetzt das problem also an der stelle also hat jemand eine idee was was jetzt
Was ich jetzt nicht machen kann
Ich weiß nicht wie ich es anders ausdrücken soll
Vielleicht hat der user der user ist immer das problem
Peppkack problem exist betwen chair und keyboard ne betwen
doch betwen chair und keyboard
also das problem ist ich habe die software gebaut
in meinem content also beim erstellen meines container images
Ich muss die software die ich gebaut habe da irgendwie wieder raus bekommen weil ich will gar kein container image
Das ist bei mir nur ein notwendiges übel dass ich es unter sento s7 baue
Sie ist jetzt aber die software ist jetzt im container ich will die gar nicht im container haben sie ist im container image
Ich will die wieder raus kriegen aus dem container image so und bisher habe ich mich da eines kleinen
Eines kleinen hacks beholfen und zwar ich habe das ich habe das gebaut
das container image danach habe ich docker run gemacht mit dem container image und dann mit docker cp aus dem erstellten
container
Es wieder raus kopiert das ist allerdings nicht so schön und das ist glücklicherweise
mit bild x auch nicht mehr notwendig
Kann ich euch mal einen kleinen trick zeigen an der stelle
Geht docker cp nur bei laufendem container
Ne es geht nicht nur bei laufendem container aber das muss einmal ein container angelegt worden sein mit diesem image dass es funktioniert du kannst
Kein docker cp von einem image machen du kannst nur ein docker cp machen von einem container der du vor allem image also mit
einem image gestartet hast
also natürlich
Ebenfalls doof, aber mit bild x ist das ganz einfach
Natürlich
Ebenfalls doof, aber mit bild x ist das gar kein problem mehr
weil man jetzt
folgendes machen kann
Ich mal kurz abgucken weil ich das aus dem kopf wahrscheinlich nicht hinkriege
Genau was man jetzt machen kann ist folgendes
Belegen wir benutzen multi multi
Wie heißt das multistage bild multistage bild also wir bauen quasi
Mehrere images zusammen
Und wir möchten jetzt die datei die wir hier erzeugt haben
Auf den host zurück kopieren so und das geht in zwei steps man muss hier einmal ein fake
image anlegen in seinem
Was heißt ein fake image ja ein fake image ein fake container image anlegen in seinem docker file auf das man dann mit bild x
Zugreifen kann und dafür gibt es habe ich übrigens auf
Inspiration habe ich von stag overflow bin ich nicht bin ich nicht selbst drauf gekommen
Es gibt ein scratch image seit irgendwie ein paar docker versionen das ist kein image was auf gett auf docker haplikt
Das ist quasi ein nicht existentes image
Warum die so genannt haben ich habe keine ahnung aber es heißt so das heißt an der stelle wird nicht wirklich ein image angelegt
Es ist aber in der syntax von wie als würde ich ein image anlegen
Das muss ich nicht output nennen ich muss dem ding nur namen geben also from scratch als output
copy jetzt muss ich ihm sagen was für dateien ich aus diesem bild step in dieses fake image kopieren will nämlich
from
Bild wir nennen das ganze übrigens mal bild nicht bild ent
from bild also quasi von von diesem bild step
von dem filesystem in diesem bild step will ich jetzt kopieren
Slash ab weil ihr seht hier work work directory ab also von da will ich will ich sachen kopieren slash app
slash bild
Warum slasch bild na ja weil ich den output von meinem compile kommando nach bild geschrieben habe
Slash bild und dann legt eine
Binary rum was ich vm champ nennt und das ganze will ich hier in dieses image kopieren einfach unter root slash vm champ
fertig wenn ich das jetzt bilde
wird hoffentlich funktionieren ja
Hat funktioniert ging sehr zackig und wie kriege ich das ganze jetzt raus
Dazu kann man bild x erweitern und zwar kann man an bild x hinten noch angeben target
Gleich output das output hier ist der name von diesem fake environment was ich gerade in meinem docker file angelegt habe
minus minus target output
Und jetzt muss ich angeben minus minus output gleich und nee so rum type gleich local
Destination das weiß aus dem kopf das weiß ich nicht aus dem kopf das schreibe ich gerade ab aus aus dem anderen docker file also
Also aus einem anderen script das weiß aus dem kopf jetzt alle wieder das genau funktioniert jetzt kann ich sagen wohin das ganze kopiert werden soll ja
nach tmp out zum beispiel wenn ich das jetzt ausführe zack
Dann habe ich unter tmp out
Das executable liegen was ich haben will und das ist ein enormer fortschritt versus dem klassischen docker bild
Wo man einen container erstellen muss und das erst danach aus kopieren kann viel einfacher
Ohne dass ich das image überhaupt jemals in docker laden muss und ohne dass ich doch starten muss oder sowas einfach aus dem image raus kopieren
Was ist denn mit docker create und dann docker cp das kannst du auch machen aber dazu musst du das image erst mal in docker importieren den container starten
Stoppen und dann wieder raus kopieren das ist so viel einfacher viel schneller und geht in einem befehl
So also das brauchen wir jetzt an der stelle für unser
Bild in github actions
So sieht's aus
Gut dann gehen wir mal in unsere github actions rein
Da und fügen das fügen das ganze mal
Hinzu habe ich hier nicht
Wo ist meine keckel action ich brauche meine keckel action sonst geht hier gar nichts
So das ding nennen wir jetzt step
Bilds release oder sowas so und da fügen wir jetzt
Docker bild x bild bild args target version ein
Target output des output ja wunderbar das fügen wir ein wir sehen an der stelle schon ok das kann auch nicht so ganz funktionieren uns fehlen
Noch ein paar sachen uns fehlt nämlich zum beispiel die target version ist jetzt hier hardcoded auf 0.0.3
Das bringt uns ja nichts weil vielleicht ist es ja irgendwann mal 0.0.4 das heißt an der stelle wollen wir eigentlich gar keine hardcoded version benutzen
Sondern wir möchten das benutzen was uns github zur verfügung stellt und zwar nennt sich das ganze
Also das ist eine globale variabler die uns github zur verfügung stellt und zwar nennt sich das an der stelle
Jetzt haben wir noch etwas kleines machen dass das richtig funktioniert weil der tag den wir pushen der ist ja ihr seht es ja
0.0.3
Und das v also
0.0.3
0.0.3
0.0.3
0.0.3
0.0.3
0.0.3
Und das v also das v das mag dotnet bild nicht das heißt wir müssen das v irgendwie abschneiden
Das wir können jetzt sowas hier machen
Docker kann das vom zweiten character bis zum schluss
Jetzt haben wir jetzt haben wir nur noch
haben wir nur noch
0.3 das heißt wir machen jetzt hier eine environment variable die nennen wir
Target wörscht das ist ganz normales bash was ihr an der stelle seht ja
Ganz normales bash sonst sonst nix also muss man sich keine großartigen gedanken was mache ich denn hier keine großartigen gedanken machen
target target versions
Echo ups wenn man das auch richtig schreiben kann echo nicht punkt 3 was mache ich denn hier
Github revs so target version stehen jetzt da drinnen und hier können wir jetzt einfach reinschreiben dollar target
Version
Leerzeichen machen dass man es einfacher lesen kann gut das heißt wir holen uns jetzt aus der information welcher tech bash geht auch ja
Bash magic geht immer irgendwie
Wir holen uns hier aus der leute ich habe bauchwehe ich habe heute abend noch ein stück pizza gefressen und richtig fettige
Pizza Hut pizza alle das war keine gute idee
Painge
Es kann sein dass ich gleich erstmal eine runde pepo pepo toilet fire zoom machen muss
Ah
Ob das so poggers ist weiß ich nicht
Da warten wir mal ab wie es wird okay also target version
Stim vom klo ich gucke aber in chat vom klo aus
Targetversion so das passt jetzt eigentlich schon mal ganz gut was wir hier haben
Jetzt ist nur die frage wie machen wir das mit dem cash
Wie machen wir das mit dem cash dass er nicht jedes mal neu diese ganze sache bildet und da muss ich ehrlich sagen
Hab ich nicht das habe ich mir nicht alles selbst ausgedacht das habe ich mal auf
Stag overflow gefunden wer hätte wer hätte das gedacht ja
Das heißt credit wo credit gebührt ich versuche mal ob ich den stag overflow post wieder von finde
Stag overflow hier
Der beschreibt wie man dieses cashing feature von docker bild x benutzt
Und ich habe mir das hier gerippt aus dem stag overflow
Post von ihm wie das funktioniert das ist nämlich äußerst äußerst magic wie das funktioniert
Und ich gehe ihr könnt euch ihr könnt euch lest euch lest euch durch was was er schreibt
Ich gehe jetzt mal eine runde pepo toilet zoom machen
Gleich gleich gleich gleich wieder da
Ich mach euch komm mach ich das ascii aquarium an ich bin gleich wieder da
Jetzt schon sagen ich glaube das war es noch nicht er ich glaube ich muss da demnächst noch mal ok machen wir weiter
Wo sind wir stehen geblieben
Wie läuft auf der neuen arbeit ich habe den ersten arbeitstag nächsten montag dann dann weil dann kann ich ihr bescheid sagen
So wo sind wir stehen geblieben also beim cashen von unserem von unserem docker bild
Also wie gesagt das habe ich hier aus das habe ich hier aus github wie das wie das funktioniert ich habe das allerdings ein
bisschen ein bisschen
abgeändert ja ich laute das nicht in mein docker und sowas rein ich beschreibe auch nicht das docker feil so
also das das hier muss man machen dass man zugriff hat auf
Den docker cash was auch immer irgendwie super krasse krasse magic mit irgendwelchen tokens was auch immer
stack overflow triffen programming wir glauben ihm das einfach was er da geschrieben hat und gut ist jetzt muss ich den cash konfigurieren
und den cash konfiguriert man folgendermaßen
Moment zeige ich euch ist eigentlich auch recht easy den cash konfiguriert man so
wir können auch mal irgendwie einen
Zeilen und proben machen den cash konfiguriert man so also man muss die richtigen environment variablen setzen die kann man eins zu eins also das geht
Das ist jetzt nicht explizit auf meine repo zugeschnitten das geht in eurem repo eins zu eins auch so so docker bild x
target version da bla bla bla
cash to type github actions mode alle layer cash from type github actions so fertig das war es und wenn ich das jetzt ausführe
Dann wird euch auffallen es ist gleich viel schneller wohlgemerkt beim zweiten bild im ersten bild ist ja der cash noch nicht also
ist ja noch nichts im cash
Wir machen noch wir machen noch einen zweiten step dass das man hier sieht
ups wir machen noch einen zweiten step dass man sieht dass auch was passiert nennen wir das jetzt mal irgendwie copy file
Copy file und da machen wir erstmal nix anderes wie ein
ls minus la auf tmp out ja tmp out ist ja das wo wir die
Das binary das das binary was in dem container gebaut wurde hin kopieren so fertig aus das reicht jetzt jetzt pushen wir das ganze
Und nun
Gucken wir was in den actions so abgeht
Wie gesagt der erste step dauert lang
Der erste step dürfte jetzt wieder zwei minuten 15 dauern ungefähr weil er muss das image
Initial einmal bauen aber danach wir können es schon mal aufmachen danach gucken wir den cash aktuell ist der cash noch leer
Danach gucken wir den cash und ihr werdet feststellen danach ist das image gecasht und jeder weitere bild geht
Super viel schneller nicht einfach nur schneller sondern wirklich mega viel schneller
So kann er mal anfangen jetzt please
So ihr bild bild release
So er macht wieder den gleichen mist also theoretisch könnte man jetzt eigentlich sagen ist ja eine gute sache dass er so lahm ist
Da kann man wenn man auf der arbeit ist
Faken dass man beschäftigt ist man kann mal aufs klo gehen oder manche leute trinken ja auch kaffee ich weniger
Man kann ein bisschen schwätzen mit irgendwelche leuten man kann den screen output
Rekorden und in der loop abspielen wenn sein chef mal reinkommt also das hat ja durchaus hat er durchaus
Vorteile wenn man mal ein bisschen zeit hat aber vielleicht möchte nicht jeder zweieinhalb minuten warten bis sein bild fertig ist
Und deswegen cashen wir das ganze jetzt
Völlig detaillierte tricks
Patrick dankeschön 45 monat subscription
So wir sind bei fast zwei minuten schon
Und da hat man nicht jeder hat man doch wirklich keinen bock drauf sich dass sich das öfters zu geben
Was wird hier
Was wird hier
Irgendein testbruch, ne der vm champ aber es geht hauptsächlich um bisschen github actions zeigen
Aktuell sind wir gerade beim cashen von container builds in github actions und hier sieht man wieder eine schöne
Demonstration wie lahm das ganze ist aber es ist auch ein bisschen
Nach dem cashen von container builds in
github actions und hier sieht man wieder ein schöne demonstration wie lahm das ganze ist also es hat jetzt es hat ungefähr zwei
Minuten 30 gebraucht bis das ganze durch ist dass es halt ab
Zaag langsam aber ihr seht das bild hat funktioniert vm champ ist gebaut und so alles gut
Also ich baue einen arch user repo ist das ziel ja wobei wir das heute wahrscheinlich nicht. Mehr hinkriegen
Heute machen wir nur github actions und hängen das art bild artefakt an den an den job an den job dran das muss dann muss dann
Reichen also ich habe gesehen es ist richtig richtig langsam das ganze also ab ab fack langsam
Und jetzt zeige ich euch mal dass das cashen was gebracht hat guckt bei
Warum ist da nix im cash
Also
Habe ich mich irgendwie
Hab ich mich irgendwo vertan
Dr. Bild x
Ne das habe ich doch sogar kopiert
Ich habe was vergessen leute jetzt weiß ich ich habe keine permissions auf dem cashen
Jetzt weiß ich ich habe keine permissions auf den cash
Da habe ich ja noch gar nicht drüber geredet ja
Bei muss für manche sachen wie zum beispiel schreibrechte muss man explizit für github actions anfordern
Ich hatte keine schreibrechte auf den cash deswegen ging das nicht ist natürlich doof dass er da kein fehler schmeißt
Okay jetzt jetzt sollte es funktionen jetzt müssen wir das ganze noch mal angucken okay optimaler zeitpunkt leute
Ich warte auf den pusher und gehe ich noch mal kacken schnell
Die die pizza hut pizza muss raus af af klo
Wir warten noch bis der bild gestartet ist okay
Wir warten noch bis der bild gestartet ist okay hier so gleich wieder da
Fertig
Komm mal ich komme genau richtig ich bin genau richtig am start bild ist fertig und klo ist fertig
exzellent
Diesmal hat sogar noch länger gedauert was wahrscheinlich daran liegt dass es was in cash geschrieben hat cashes
Ja guck mal da wir haben was im cash stehen
Bin auch in der stelle der stelle der stelle der stelle der stelle der stelle der stelle der stelle der stelle der stelle
Kleintivalente
J an deržeist
die stelle der stelle der stelle der stelle der stelle der stelle der stelle der stelle der stelle der stelle der stelle der stelle der stelle der stelle
Diss
Der gerade be opinionetene
{\an8</ realizes
sailed
Ei
Teraform anschmeißen um irgendwas zu professionieren
zu professionieren oder
Konfigurieren oder was auch immer es gibt bestimmt sogar eine fertige ansible action oder sowas aber github action selbst ist dafür nicht gedacht und kann
Man dafür auch nicht gut verwenden um ähnliche sachen zu wachen wie mit terraform und auch nicht ähnliche sachen wie mit ansible
Dafür ist es nicht da
So und jetzt werde ich euch zeigen ihr habt gesehen das bild dauert
Fast drei minuten 30 und jetzt passt mal auf
Wir pushen das ganze jetzt einfach noch mal
Und ihr werdet feststellen das bild
geht jetzt
erstaunlich viel schneller
Bild
Check out repo install bild x
Guck mal da
Guck mal da
Und er ist fertig
Er ist durch in 18 sekunden also so so ein bild zu cashen ist schon nicht verkehrt
Also drei drei drei minuten 30 versus versus 28 sekunden ist schon ein kleiner unterschied
Also es lohnt sich auf jeden fall den cash von github actions zu benutzen wie man jetzt hier sieht
Das ist das ist eine sehr sinnvolle geschichte
Cache das denn auch für den nächsten tag ja
Wobei ob es für den nächsten tag
Es casht auf jeden fall für den gleichen branche ob es für den nächsten tag casht
Müssen wir mal gucken für den gleichen branche casht es auf jeden fall testen wir das doch mal
0.4
0.4 wenn er pro tag einen full bild macht wäre ja nicht so schlimm weil tags nicht oft kommen
Ja warum sollte ich jetzt mehrere jobs oder gar mehrere workflows machen für sowas kleines
Mal gucken ob das jetzt greift beim nächsten tag
Schauen wir mal also im gleichen branche greift es auf jeden fall bei tags bin ich mir nicht sicher
Das ist ein bisschen ein bisschen ein bisschen ein bisschen ein bisschen ein bisschen ein bisschen ein bisschen
Das ist gescoped pro branche also es durchaus möglich dass es auch gescoped ist pro tag und deswegen jetzt nicht schneller ist
Sehen wir ja gleich
Ne oder
Ne okay
Tags wenn man unterschiedliche tags pusht dann ist es nicht gecasht weil das immer gescoped ist auf den jeweiligen branche und tag ist ja
Quasi so eine art branche nur dass du dran ändern kannst
Okay also für tags bringt es nicht so viel für branches bringt es allerdings sehr viel wir können das jetzt mal umstellen um das
Um das zu zeigen also wir wir pushen jetzt hier nicht und und tag sondern wir pushen wir pushen und branche also
Ich habe kein bock selbst kaputt zu machen aber wir könnten das umstellen auf branches pushen und dann wäre es
gecasht
Also anscheinend pro tag ist es wohl nicht so
Was aber eigentlich logisch ist weil sie sagen ja es ist es ist gescoped pro branche also
Ergibt ergibt eigentlich sinn
Zumindest der bild ist sehr viel schneller
Wenn auch nicht von tag zu tag aber von pusht zu pusht im gleichen branche
Als letztes müssen wir uns jetzt noch angucken wie
Kriegen wir jetzt das binary was wir hier raus kopiert haben wie kriegen wir das binary
Irgendwie hier veröffentlicht auf github zum beispiel für den nightly bild oder den daily bild oder sowas und dafür gibt es eine
upload action
Und die sieht so aus
Name nehmen wir es einfach mal upload binary
Uses das muss ich mir jetzt kopieren uses action
Uses action upload artifact hier auch wenn er versioniert auf 3.1.2 dass da nicht aus
irgendwie aus versehen was kaputt geht so jetzt muss man den name angeben unter welchem name das
Binary beziehungsweise dass das zip file dann hochgeladen werden soll das ist immer ein zip file
Das soll hochgeladen werden unter vm champ
Minus linux
Minus und jetzt wollen wir an der stelle auch wieder die github tag version minus minus ref name
Minus amd 64 soll das ganze heißen
Wirst du noch sagen wo er das ganze her bekommt und zwar bekommst du das her unter temp out vm champ
Und dann brauchen wir noch retention days das brauchen wir nicht
Aber mehr als einen tag aufheben ist jetzt relativ sinnlos ich will ja nicht mal einen speicherplatz unnötig belasten
Ich hoffe der bildjob ist gleich mal durch
immer noch in progress
Hoffentlich haben wir es jetzt gleich mal
Ja jetzt ist er fertig
Müsste der cash nicht in der branche auch in weil also im branche ist das mit dem cash bei jedem push
Ist das so also der kann auf den cash zugreifen dass das schreiben die auch explizit auf der seite
Von docker bild und der implementierung von diesem von diesem cash dass das gescopt ist pro pro branche
Ja gut über text schreiben sie nichts aber in dem fall ergibt es irgendwie sinn ja jeder tag ist ja wenn das so wills für sich
genommen sein eigener branche
So dann kommenden wir das ganze jetzt war
Wir haben jetzt ja nichts großartig geändert außer dass er den output upload
Bei dockerfile change doch bei dockerfile change je nachdem wo du das dockerfile nicht nicht dickerfile
Yep, jepp cock je nachdem wo du das dockerfile änders da speichert sich schon die einzelnen steps da cashe sich die einzelnen steps
Also wenn du jetzt hier was änderst dann ist es dann ist es können wir gleich ausprobieren
Dann ist es nur ab hier wo was neu machen muss können wir gleich können wir gleich ausprobieren
So also ich pusht das ganze jetzt noch mal pusht blablabla tag
Und jetzt werden wir ich habe ja nur das hier hinzugefügt dass sie die sache uploadet und jetzt werdet ihr sehen haben wir
eine sehr schnelle github action wieder laufen
Innerhalb von 20 sekunden ist die wieder durch
Wenn er dann anfängt install zack
Ach shit oh nee
Hä
Warum macht er das jetzt noch mal ne doch ist okay er hat es aus dem cash geholt
Ist viel viel zu schnell ist er hat es aus dem cash geholt ich war jetzt erst verwirrt was macht er denn da
Nee der ist hier durch so zack 32 sekunden fertig und jetzt haben wir hier an dieser action guckt mal da
Ein artefact hängen und ich darf nicht scrollen
Vm champ linux v004 amd 64 da hat mir das mal runter das ist eine zip datei
CD downloads
Ist es anzip
Anzip
ch mod x vm champ
vm champ minus minus version und sie da es ist lauffähig und version 4
Also das hat funktioniert wir haben das ding gebaut im container mit mit cash dass es schon schnell baut
Also das hat funktioniert wir haben das ding gebaut im container mit mit cash das ist schön schnell baut
Und danach aus dem container extra hier und hochgeladen
Ach so ja und das alle stimmt stimmt stimmt das allerwichtigste ist natürlich kekwe
Und das ist bestimmt bild und release action oder sowas
An die bild und pusht action ja die kann man auch verwenden
Da musste auch nicht diesen ganzen blödsinn machen den ich in bash gemacht habe
Die artefacts noch testen
Ja wenn ich das noch testen kann ich das noch testen
Die artefacts noch testen
Ja wenn du wenn du wenn du tests hast genau dafür ist github action star
Also wenn du jetzt sagst bevor ich das hoch lade möchte ich mit dem binary noch ein paar tests durchführen so nach dem motto
Steht in der hilfe ausgabe das und das drin ist die version auch wirklich wirklich vier und sowas ja das das wäre natürlich sinnvoll da könnte
man jetzt hier entweder
Ups entweder könnte man das hier was mache ich denn
Entweder könnte man hier noch ein testing step einbauen oder man macht für den testen komplett neuen workflow
Ja, aber das wäre tatsächlich sehr sinnvoll
Wenn man da wenn sie also wenn es bei der software sinnvoll ist ja man könnte das jetzt testen tatsächlich was da rauskommt am besten testen natürlich
Bevor man bevor man das das das artefakt hoch lädt also hier dazwischen hier können wir noch einen test step machen
Könnte man dann könnte man dann step machen für das testen dass man dann sagt ok
Test und da könnte man dann so dinge machen wie
Finden den vm champ ausführen temp out
Vm champ minus minus help und er hält greppen oder mit minus minus version und dann greppen ob der auch wirklich
Die richtige versionsnummer hat oder sowas könnte man jetzt machen
Ja und ganz wichtig wichtig ob ob ob auch keck keck w ausgeführt werden kann keck w ganz enorm wichtig ob das geht
Aber nachdem es an der stelle keinen sinn macht das zu testen lassen wir es mal aus wir probieren jetzt mal eine sache aus das was
Der wort die geschrieben hat oder irgendwer hat es geschrieben die wort cs hat es geschrieben
Was passiert denn jetzt wenn wir das docker file anpassen also mal angenommen man ändert jetzt hier irgendwas im docker file
Beleg gerade was wir sinnvoll im docker file ändern können
Ja hier wir wollen wir wollen minus minus p anstatt slash p hier verwenden weil ganz ganz essenziell
Ja und und minus minus p
Also wovon da bin ich mir jetzt nicht der wovon ich jetzt ausgehe ist folgendes
Das kompilieren muss er neu machen weil sich die zeile im docker file geändert hat der muss ab hier alles neu machen
Das davor kann er aus dem cache benutzen
Warum denke ich das weil ich gesagt habe
hier
Cache tu max und da sollte er angeblich alle zwischen steps
Cache wobei ich mir nicht sicher bin ob er wirklich alle zwischen steps cached oder alle zwischen images falsches welche gibt cached
Das müssen wir jetzt mal ausprobieren ob änderungen im docker file den kompletten
Cache quasi
Aushebeln sehen wir jetzt gleich also wenn es jetzt drei minuten läuft dann wissen wir geht auf jeden fall nicht
Aber so weit zu den absoluten basics was
Github actions angeht
Das ist wirklich sehr übersichtlich an der stelle hier was wir gemacht haben das ist alles
Aber ich glaube es sind schon die wichtigsten sachen ok das ging sehr schnell also anscheinend hat das funktioniert hier bild release
Zack zack zack zack
Ging ging mega mega zackig alles
Also er hat aber noch er hat neu kompiliert also wahrscheinlich war das genauso
Moment ich habe ich habe miss erzählt hat noch gar nicht angefangen
War das falsche ok ich habe nichts gesagt
Ja
Docker bild
War der alte bild habe ich verguckt
Ok ja es ist so wie ich gesagt habe er macht am kompilier step weiter
Er macht dem kompilier step weiter er macht nicht alles
Er macht das das den compile step machte nur das heißt der cache bringt was auch wenn man das docker file ändert bringt der cache was
Den ganzen shit davor hat er nicht gemacht er hat hier beim kompilieren angefangen
So eigentlich nice
Gut jetzt brauche ein bisschen weil er den cache refreshen muss aber es ist halbwegs geschwind
Ja gut schön dass das funktioniert hat
Warten wir mal wie viel er wie viel er wirklich am ende jetzt braucht
Weil so viel so viel langsamer ist er jetzt auch nicht
Ja toll
So also so viel zeit spart man nicht ein bisschen was eine halbe minute spart man
Na wobei vorher hat es drei minuten noch was gebraucht
Ja zwischen eineinhalb und zwei minuten spart man ist ist also durchaus ist also durchaus ok auch wenn man das docker file ändert
Das docker file ändert man nicht so oft
Ja, also das war es jetzt zur absoluten basics was
GitHub actions angeht
Wir haben jetzt auch advancedere topics heute dabei gehabt zum beispiel wie man docker docker files geht
Also das war es jetzt zur absoluten basics was
GitHub actions angeht
Wir haben jetzt auch advancedere topics heute dabei gehabt zum beispiel wie man docker docker files cached also docker build
Cached normalerweise wollte ich mich jetzt darum kümmern wie man ein arch user repo
Package bild oder wie auch immer erstellt von arch user repo
Das können heute allerdings nicht mehr machen weil ich habe immer noch probleme mit meiner pizza
Und ich habe jetzt kein bock mit bauchweh weiter zu streben das guckt man es dann morgen oder so an wie man
Wie man ein arch user repo package baut und ein arch user repo automatisch erzeugt per github actions
Ich vermute mal dass ich mein ssh key per secret im github repo hinterlegen muss
und
Ja dann irgendwie package bild customisem und und pushen
Aber ich denke man hat jetzt ein bisschen ahnung davon wenn man vor allem noch gar nichts mit github actions gemacht hat
Wie das so aussieht und man hat eine sache zumindest schon mal gelernt caching bei docker container lohnt sich enorm
Alles klar, ich habe immer noch bauchweh ich gehe jetzt
Ich gehe jetzt off und noch mal aufs klo bis dann machts gut see you
